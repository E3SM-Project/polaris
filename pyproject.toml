[project]
name = "polaris"
dynamic = ["version"]
authors = [
    { name="Xylar Asay-Davis", email="xylar@lanl.gov" },
    { name="Carolyn Begeman" },
    { name="Althea Denlinger" },
    { name="Steven Brus" },
    { name="Kat Smith" },
    { name="Darin Comeau" },
    { name="Alice Barthel" },
    { name="LeAnn Conlon" },
    { name="Joseph H Kennedy" },
]
description = "Testing and analysis for Omega, MPAS-Ocean, MALI and MPAS-Seaice"
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    # these are only for searching/browsing projects on PyPI
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",

    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
]

dependencies = [
    "cartopy",
    "cmocean",
    "importlib_resources",
    "ipython",
    "jigsawpy",
    "jupyter",
    "lxml",
    "matplotlib>=3.9.0",
    "netcdf4",
    "numpy>=2.0,<3.0",
    "progressbar2",
    "pyamg>=4.2.2",
    "pyproj",
    "ruamel.yaml",
    "requests",
    "scipy>=1.8.0",
    "shapely>=2.0,<3.0",
    "xarray",
]

[project.optional-dependencies]
docs = [
    # building documentation
    "sphinx >=7.0.0",
    "sphinx_rtd_theme",
    "myst-parser",
]

dev = [
    # linting and testing
    "flynt",
    "mypy",
    "pip",
    "pytest",
    "pre-commit",
    "ruff",
]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = ["docs*", "conda*"]
line-length = 79

[tool.ruff.lint]
# E501 - max line-length
# E4 - whitespace
# E7 - multiple-statements
# E9 - trailing-whitespace
# F - Enable Pyflakes
# B - Enable flake8-bugbear
# W - Enable pycodestyle
# I - imports
# C901 - complex-structure
# D - Enable flake8-docstrings
select = ["E501", "E4", "E7", "E9", "F", "B", "W", "I", "C901"]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 18.
max-complexity = 18

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[build-system]
requires = ["setuptools>=60"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
exclude = ["deploy*", "docs*", "e3sm_submodules*", "licenses*", "utils*"]

[tool.setuptools.dynamic]
version = { attr = "polaris.version.__version__" }

# evolution of options.entry-points
[project.scripts]
polaris = "polaris.__main__:main"
mpas_to_yaml = "polaris.yaml:main_mpas_to_yaml"

[project.urls]
Documentation = "https://docs.e3sm.org/polaris"
"Bug Tracker" = "https://github.com/E3SM-Project/polaris/issues"
