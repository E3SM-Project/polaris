name: CI/CD Build Workflow

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  workflow_dispatch:

env:
  CANCEL_OTHERS: false
  PATHS_IGNORE: '["**/README.md", "**/docs/**"]'

jobs:
  pre-commit-hooks:
    name: lint with pre-commit
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: ${{ env.CANCEL_OTHERS }}
          paths_ignore: ${{ env.PATHS_IGNORE }}

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Checkout Code Repository
        uses: actions/checkout@v5

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Set up Python 3.10
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        id: file_changes
        uses: trilom/file-changes-action@1.2.4
        with:
          output: ' '

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        # Run all pre-commit hooks on all the files.
        # Getting only staged files can be tricky in case a new PR is opened
        # since the action is run on a branch in detached head state
        name: Install and Run Pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files}}

  build:
    name: test polaris - python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: ${{ env.CANCEL_OTHERS }}
          paths_ignore: ${{ env.PATHS_IGNORE }}

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: actions/checkout@v5

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Cache Conda
        uses: actions/cache@v4
        env:
          # Increase this value to reset cache if conda-dev-spec.template has not changed in the workflow
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir_py${{ matrix.python-version }}
          key:
            ${{ runner.os }}-${{ matrix.python-version }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('configure_polaris_envs.py,deploy/*') }}

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Set up Conda Environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: polaris_test
          init-shell: bash
          condarc: |
            channel_priority: strict
            channels:
                - conda-forge
                - e3sm/label/polaris
          create-args: >-
            python=${{ matrix.python-version }}

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Install polaris
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          ./configure_polaris_envs.py \
            --env_name polaris_test \
            --verbose \
            --python=${{ matrix.python-version }}
          source load_polaris_test_mpich.sh
          python -c "import polaris; import polaris.version; print(polaris.version.__version__)"

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Build Sphinx Docs
        run: |
          source load_polaris_test_mpich.sh
          cd docs
          DOCS_VERSION=test make versioned-html
