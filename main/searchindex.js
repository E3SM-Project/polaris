Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "cosine_bell", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "cosine bell", "Tasks", "inertial gravity wave", "manufactured solution", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 18, 20, 37, 45, 48, 49, 52, 132, 135, 144, 153, 154, 161, 164, 169, 174, 235, 238, 239, 243, 244, 245, 246, 248, 250, 252, 254, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 288, 289, 290, 294, 296], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 34, 48, 49, 51, 54, 67, 72, 74, 77, 80, 81, 89, 91, 93, 94, 100, 105, 106, 107, 108, 111, 112, 132, 135, 137, 142, 143, 144, 145, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 185, 186, 187, 188, 191, 192, 196, 198, 199, 200, 201, 202, 205, 206, 210, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 258, 259, 260, 262, 263, 267, 269, 270, 272, 278, 280, 295, 296], "templat": [0, 5, 6, 7, 27, 28, 29, 113, 122, 126, 132, 135, 143, 157, 163, 239, 270, 271, 272], "date": [1, 2, 5, 54, 235, 246, 252, 264, 272], "2023": [1, 16, 286, 287], "08": [1, 271, 283], "18": [1, 6, 272, 274], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 17, 132, 271, 272, 277], "asai": [1, 272], "davi": [1, 272], "capabl": [1, 2, 6, 16, 132, 248, 251, 271, 277, 290], "design": [1, 132, 236, 248, 250, 251, 270, 277, 283], "here": [1, 6, 9, 12, 14, 16, 17, 132, 135, 238, 243, 244, 247, 248, 250, 251, 252, 267, 271, 272, 273, 274, 275, 276, 277, 278, 284, 288, 289, 290, 294, 295], "abil": [1, 7], "across": [1, 6, 7, 9, 14, 18, 135, 238, 244, 248, 249, 250, 251, 252, 269, 271, 279, 283, 284], "In": [1, 2, 6, 7, 8, 9, 11, 14, 16, 17, 37, 132, 135, 244, 246, 248, 249, 250, 251, 252, 270, 271, 272, 277, 280, 284, 289, 290, 294, 295, 296], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 23, 24, 29, 30, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 62, 66, 68, 71, 72, 75, 76, 77, 81, 90, 91, 93, 94, 100, 105, 108, 118, 128, 129, 130, 131, 132, 133, 135, 137, 142, 145, 148, 153, 154, 155, 157, 159, 160, 161, 163, 164, 165, 167, 168, 169, 173, 174, 177, 181, 183, 186, 188, 189, 192, 196, 198, 200, 202, 203, 206, 210, 212, 214, 216, 218, 219, 220, 221, 222, 223, 224, 235, 238, 239, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 263, 264, 268, 269, 270, 271, 272, 274, 277, 278, 280, 283, 284, 286, 287, 288, 289, 290, 294, 295], "document": [1, 3, 9, 14, 248, 251, 270, 272, 290], "refer": [1, 7, 14, 37, 151, 164, 227, 230, 233, 234, 248, 251, 252, 269, 270, 271, 280, 283, 290], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 33, 46, 105, 111, 112, 160, 168, 244, 245, 246, 248, 249, 250, 251, 252, 254, 271, 272, 277, 283, 284, 288, 289, 290, 293, 294], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 24, 27, 28, 30, 37, 39, 48, 55, 94, 96, 103, 111, 112, 113, 117, 120, 122, 132, 135, 137, 138, 139, 140, 141, 145, 148, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 178, 194, 195, 208, 209, 219, 235, 237, 244, 245, 247, 248, 250, 252, 257, 258, 260, 262, 271, 272, 274, 277, 280, 283, 284, 286, 287, 288, 289, 290], "avail": [1, 4, 5, 7, 11, 14, 18, 24, 34, 37, 40, 41, 44, 55, 63, 89, 90, 91, 132, 145, 155, 196, 210, 219, 238, 239, 248, 250, 251, 252, 271, 273, 274, 275, 276, 278, 283, 290, 295], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 128, 130, 131, 132, 135, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 264, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 291, 295, 296], "main": [1, 3, 6, 7, 9, 14, 42, 132, 188, 244, 245, 250, 251, 252, 271, 296], "motiv": 1, "behind": [1, 251], "comput": [1, 7, 13, 14, 79, 132, 135, 138, 139, 141, 145, 146, 151, 156, 180, 184, 193, 197, 207, 211, 230, 231, 232, 238, 239, 241, 242, 243, 248, 252, 274, 275, 277, 278, 283, 284, 286, 287, 290], "expens": [1, 248, 249], "could": [1, 14, 16, 18, 132, 239, 248, 249, 250, 251, 252, 271, 284], "time": [1, 5, 6, 7, 8, 14, 17, 18, 37, 48, 61, 120, 132, 140, 150, 151, 155, 164, 178, 181, 194, 195, 198, 208, 209, 212, 219, 237, 238, 239, 241, 242, 244, 248, 249, 250, 251, 252, 267, 268, 269, 272, 274, 278, 290, 295], "order": [1, 5, 8, 13, 14, 135, 239, 245, 248, 249, 252, 271, 284, 287, 288, 290], "reflect": [1, 5, 252], "fact": [1, 14, 37, 132], "we": [1, 2, 5, 7, 9, 11, 13, 14, 16, 17, 18, 131, 132, 135, 139, 140, 149, 178, 238, 239, 243, 244, 247, 248, 250, 251, 252, 267, 270, 271, 272, 274, 276, 277, 278, 280, 284, 290, 295], "present": [1, 49, 120, 252, 271], "new": [1, 2, 5, 19, 25, 37, 48, 56, 60, 67, 74, 80, 94, 114, 115, 135, 143, 155, 162, 179, 193, 196, 207, 210, 219, 227, 233, 234, 248, 250, 251, 252, 265, 268, 269, 270, 290], "success": [1, 2, 8, 47, 58, 235, 245, 264, 271, 272], "insofar": 1, "guarante": [1, 14, 132, 235, 252, 264], "per": [1, 8, 14, 24, 34, 36, 37, 44, 90, 91, 132, 135, 145, 248, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 286, 287, 289, 294], "slurm": [1, 61, 92, 132, 248, 270, 272, 273, 274, 275, 276, 278, 290], "job": [1, 6, 132, 252, 270, 271, 273, 274, 275, 276, 278], "role": 1, "clear": [1, 2, 251, 271], "should": [1, 2, 5, 6, 7, 9, 12, 14, 17, 25, 30, 37, 38, 39, 46, 48, 50, 58, 62, 75, 111, 112, 119, 120, 128, 129, 130, 131, 132, 133, 135, 137, 141, 148, 160, 168, 221, 223, 235, 244, 245, 246, 248, 249, 250, 252, 264, 265, 268, 269, 271, 272, 283, 284, 288, 289, 290, 294], "invoc": 1, "serial": [1, 43, 248, 250, 270, 271, 290], "A": [1, 6, 7, 8, 11, 13, 14, 16, 18, 19, 25, 27, 28, 30, 37, 38, 39, 40, 41, 45, 48, 49, 52, 55, 56, 57, 63, 67, 68, 71, 74, 75, 76, 80, 86, 89, 91, 93, 94, 95, 96, 97, 98, 102, 103, 104, 108, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 132, 135, 137, 143, 148, 150, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 185, 187, 191, 196, 199, 201, 205, 210, 213, 215, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 238, 239, 241, 242, 243, 245, 248, 249, 250, 251, 252, 257, 258, 260, 262, 269, 270, 271, 273, 274, 275, 276, 277, 278, 283, 284, 286, 287, 289, 290, 293, 294], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 16, 37, 39, 40, 45, 48, 49, 50, 52, 54, 56, 81, 107, 114, 117, 132, 135, 185, 235, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 264, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 284, 286, 287, 289, 290, 291, 294], "class": [1, 9, 11, 13, 14, 16, 17, 18, 19, 24, 32, 37, 42, 48, 56, 66, 67, 74, 80, 94, 121, 135, 136, 137, 143, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 185, 187, 188, 189, 191, 193, 196, 199, 201, 203, 205, 207, 210, 213, 215, 218, 219, 220, 221, 223, 235, 238, 239, 241, 242, 243, 245, 246, 248, 250, 255, 257, 258, 260, 261, 262, 264, 267, 271], "attribut": [1, 8, 9, 12, 13, 14, 43, 45, 52, 98, 104, 105, 137, 241, 242, 271], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 17, 18, 39, 46, 48, 58, 107, 108, 119, 132, 135, 160, 168, 174, 221, 223, 238, 239, 243, 244, 246, 248, 249, 250, 251, 252, 268, 269, 270, 271, 272, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 293, 294, 295, 296], "relat": [1, 6, 7, 11, 13, 14, 132, 135, 235, 238, 239, 241, 242, 243, 244, 248, 252, 268, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 288, 289, 290, 291], "inform": [1, 5, 7, 8, 37, 94, 118, 127, 193, 207, 248, 250, 252, 272, 274, 281, 290, 291], "belong": [1, 10, 12, 14, 24, 34, 37, 44, 48, 67, 74, 80, 94, 135, 137, 143, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 185, 187, 189, 191, 196, 199, 201, 203, 205, 210, 213, 215, 218, 219, 220, 221, 223, 244, 245, 248, 250, 251, 257, 258, 260, 261, 262, 271, 295], "locat": [1, 5, 6, 9, 14, 18, 37, 49, 111, 112, 117, 135, 235, 248, 250, 252, 264, 269, 271, 272, 274, 277, 280, 283, 284, 290], "highest": 1, "level": [1, 2, 11, 12, 13, 17, 18, 135, 140, 178, 227, 228, 229, 230, 231, 232, 233, 234, 238, 244, 246, 247, 248, 250, 271, 272, 283, 284, 286, 287, 288, 289, 294], "where": [1, 5, 7, 9, 14, 17, 37, 39, 48, 56, 58, 62, 93, 112, 117, 119, 132, 135, 227, 230, 233, 234, 235, 245, 247, 248, 250, 252, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 288, 289, 290, 294, 295], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 24, 37, 44, 48, 55, 90, 91, 93, 112, 118, 132, 135, 136, 139, 140, 145, 155, 178, 196, 210, 219, 227, 233, 234, 235, 238, 244, 245, 246, 248, 249, 250, 251, 252, 255, 264, 269, 270, 271, 272, 277, 280, 281, 283, 284, 289, 290, 291, 294, 296], "below": [1, 5, 6, 14, 24, 34, 37, 44, 90, 91, 132, 135, 145, 155, 196, 210, 219, 235, 244, 246, 248, 250, 252, 271, 272, 277, 280, 284, 286, 287, 288, 290], "There": [1, 5, 6, 13, 227, 233, 234, 243, 244, 246, 248, 251, 252, 268, 271, 272, 290], "wai": [1, 5, 7, 13, 14, 37, 71, 76, 132, 135, 248, 250, 251, 252, 268, 270, 271, 277, 280, 288], "list": [1, 2, 6, 7, 9, 14, 17, 24, 37, 40, 48, 49, 54, 55, 56, 90, 91, 108, 111, 112, 117, 118, 135, 137, 143, 151, 166, 170, 174, 177, 191, 201, 203, 205, 215, 219, 248, 249, 250, 251, 252, 258, 269, 270, 271, 272, 274, 277, 278, 284, 290, 295, 296], "within": [1, 5, 7, 9, 10, 11, 12, 14, 19, 34, 37, 39, 40, 44, 48, 49, 56, 59, 117, 118, 132, 135, 238, 241, 242, 244, 245, 246, 248, 249, 250, 252, 265, 269, 271, 272, 274, 277, 284, 288, 289, 294], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 37, 43, 48, 63, 69, 70, 79, 106, 112, 127, 132, 135, 137, 141, 170, 171, 174, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 258, 259, 267, 269, 271, 272, 277, 280, 283, 284, 286, 287, 289, 290, 294, 295], "also": [1, 2, 5, 6, 7, 9, 13, 14, 18, 32, 43, 56, 118, 119, 132, 135, 185, 227, 233, 234, 235, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 271, 272, 277, 278, 280, 284, 286, 287, 289, 290, 294, 296], "find": [1, 6, 7, 58, 70, 92, 132, 235, 250, 251, 252, 268, 271, 272, 290], "onli": [1, 5, 6, 7, 8, 14, 16, 17, 48, 132, 135, 235, 237, 239, 243, 245, 248, 250, 251, 264, 267, 270, 271, 272, 274, 277, 278, 280, 282, 283, 284, 287, 288, 290, 293], "its": [1, 5, 6, 7, 8, 9, 12, 16, 18, 37, 50, 100, 105, 106, 114, 132, 135, 244, 245, 246, 248, 249, 250, 251, 252, 269, 271, 272, 273, 284, 290, 296], "would": [1, 2, 5, 9, 14, 17, 24, 34, 37, 44, 49, 90, 91, 94, 132, 135, 145, 155, 196, 210, 219, 238, 246, 248, 250, 251, 252, 268, 271, 277, 280, 290], "ident": [1, 2, 5, 17, 153, 161, 169, 238, 248, 249, 251, 257, 271, 283], "self": [1, 9, 11, 12, 14, 16, 17, 18, 50, 82, 135, 245, 248, 250, 251, 271, 272], "contain": [1, 2, 5, 6, 7, 8, 9, 16, 18, 19, 26, 27, 28, 41, 55, 59, 86, 89, 95, 96, 97, 98, 102, 103, 104, 113, 120, 121, 135, 137, 143, 151, 227, 233, 234, 245, 246, 247, 248, 251, 252, 254, 264, 265, 269, 271, 272, 277, 281, 289, 290, 291, 294], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 16, 69, 132, 135, 235, 248, 252, 269, 271, 272, 280, 288, 290], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 18, 37, 38, 39, 50, 56, 74, 108, 123, 132, 135, 150, 235, 238, 239, 244, 247, 248, 250, 251, 252, 265, 269, 270, 271, 272, 277, 280, 283, 284, 290], "As": [1, 4, 5, 6, 9, 13, 17, 69, 135, 244, 248, 249, 250, 251, 252, 271, 272, 280, 284, 288, 295], "setup": [1, 6, 7, 9, 11, 14, 17, 29, 34, 37, 38, 44, 48, 132, 135, 157, 163, 181, 198, 212, 238, 241, 242, 243, 250, 251, 252, 269, 270, 271, 272, 284, 290, 296], "suit": [1, 2, 6, 7, 12, 17, 37, 48, 62, 63, 107, 108, 110, 112, 132, 238, 247, 248, 250, 252, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 283], "proce": [1, 252], "iter": [1, 235, 272], "through": [1, 2, 112, 251, 252, 265, 271], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 16, 17, 18, 24, 32, 37, 38, 39, 40, 60, 67, 69, 70, 96, 103, 113, 115, 119, 126, 132, 137, 141, 145, 182, 238, 239, 243, 244, 245, 246, 248, 249, 250, 251, 252, 268, 269, 270, 272, 274, 277, 280, 286, 290, 295, 296], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 24, 34, 37, 38, 40, 44, 49, 50, 92, 100, 105, 128, 130, 131, 132, 144, 145, 155, 196, 210, 219, 235, 239, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 268, 269, 271, 272, 280, 283, 284, 286, 288, 290], "been": [1, 5, 6, 37, 40, 45, 49, 50, 52, 100, 112, 117, 128, 130, 131, 132, 135, 137, 144, 177, 191, 201, 205, 215, 235, 245, 248, 250, 251, 252, 264, 268, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 290], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 16, 17, 23, 38, 39, 46, 49, 50, 51, 56, 135, 144, 150, 152, 160, 168, 176, 190, 204, 217, 227, 233, 234, 244, 245, 250, 252, 256, 265, 270, 273, 274, 275, 276, 278, 290], "initi": [1, 7, 8, 37, 120, 135, 140, 151, 153, 154, 158, 161, 164, 169, 178, 182, 199, 213, 218, 220, 221, 223, 238, 239, 241, 242, 243, 244, 248, 250, 251, 261, 268, 269, 270, 272, 280, 282, 295, 296], "fals": [1, 9, 13, 14, 17, 18, 24, 37, 39, 49, 54, 63, 65, 107, 108, 112, 117, 118, 120, 132, 135, 145, 221, 223, 237, 244, 248, 250, 265, 271, 272, 274, 276, 278, 283], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 46, 68, 75, 132, 135, 160, 168, 184, 244, 245, 248, 250, 251, 269, 270, 271, 284, 296], "skip": [1, 5, 8, 118, 295], "true": [1, 6, 7, 9, 13, 14, 17, 18, 24, 49, 58, 60, 118, 119, 120, 123, 128, 129, 130, 131, 132, 133, 135, 145, 220, 237, 244, 248, 252, 271, 272, 273, 274, 275, 276, 277, 278, 283, 290, 296], "when": [1, 5, 6, 12, 14, 16, 17, 25, 26, 27, 28, 30, 37, 38, 43, 48, 49, 56, 58, 60, 63, 107, 118, 132, 135, 148, 232, 238, 239, 241, 242, 243, 244, 248, 250, 251, 252, 270, 271, 273, 274, 275, 276, 278, 280, 283, 284, 288, 290, 296], "complet": [1, 5, 8, 26, 27, 28, 105, 271, 290], "alreadi": [1, 4, 5, 6, 11, 14, 49, 50, 60, 132, 135, 144, 219, 248, 250, 251, 252, 271, 272, 277, 280, 284, 290], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 17, 18, 37, 48, 135, 143, 155, 179, 196, 210, 219, 238, 241, 242, 248, 249, 250, 251, 252, 270, 271, 280], "parallel": [1, 5, 16, 24, 34, 37, 43, 44, 132, 145, 248, 251, 252, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 290, 296], "make": [1, 4, 5, 6, 7, 9, 11, 12, 16, 17, 24, 33, 39, 56, 68, 69, 71, 84, 128, 129, 130, 131, 132, 133, 135, 145, 149, 153, 161, 169, 187, 227, 233, 234, 235, 238, 244, 248, 250, 251, 252, 257, 264, 269, 272, 273, 274, 275, 276, 277, 278, 283, 284, 290, 295], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 52, 54, 58, 60, 66, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 137, 140, 141, 143, 145, 149, 151, 157, 160, 163, 168, 178, 185, 187, 226, 235, 238, 239, 241, 242, 243, 244, 249, 250, 251, 252, 258, 264, 265, 267, 268, 269, 270, 274, 277, 278, 280, 283, 284, 289, 290, 293, 294, 296], "mode": [1, 5, 14, 245, 252, 269, 270, 271, 290], "sure": [1, 5, 6, 7, 12, 14, 16, 17, 132, 135, 153, 161, 169, 235, 238, 248, 251, 252, 257, 264, 269, 271, 272, 277, 278, 283, 284], "dictionari": [1, 8, 9, 14, 18, 19, 25, 27, 28, 30, 37, 38, 41, 48, 56, 86, 89, 93, 112, 113, 121, 122, 123, 135, 143, 148, 239, 248, 250, 251, 271, 284], "them": [1, 7, 8, 9, 14, 16, 17, 24, 36, 132, 135, 145, 239, 245, 246, 248, 250, 251, 252, 269, 271, 276, 277, 282, 290, 296], "constructor": [1, 9, 14, 135, 238, 241, 242, 244, 271], "argument": [1, 5, 7, 9, 12, 14, 17, 18, 35, 37, 90, 91, 101, 119, 238, 245, 248, 250, 251, 252, 271, 289, 294, 295], "replac": [1, 5, 7, 9, 14, 25, 26, 27, 28, 29, 30, 45, 48, 52, 60, 86, 113, 122, 123, 132, 135, 143, 148, 157, 163, 250, 251, 271, 272, 290], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 16, 24, 37, 39, 48, 49, 51, 56, 62, 65, 67, 74, 80, 93, 94, 111, 117, 121, 132, 137, 143, 144, 145, 152, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 176, 177, 179, 182, 185, 187, 189, 190, 191, 196, 199, 201, 203, 204, 205, 210, 213, 215, 217, 218, 219, 220, 221, 223, 244, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 260, 261, 262, 265, 269, 270, 271, 272, 277, 279, 282, 295, 296], "subdir": [1, 5, 9, 16, 24, 37, 48, 49, 67, 74, 80, 94, 135, 137, 143, 145, 155, 177, 179, 182, 185, 187, 219, 248, 250, 258, 271], "now": [1, 6, 132, 248, 252, 271, 272, 277], "rel": [1, 2, 5, 9, 16, 17, 39, 40, 49, 54, 56, 111, 112, 117, 118, 235, 245, 248, 250, 251, 252, 258, 264, 269, 271, 283, 290, 296], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 37, 39, 56, 132, 238, 248, 252, 268, 271, 280], "than": [1, 5, 6, 8, 9, 11, 13, 14, 37, 39, 44, 56, 132, 155, 196, 210, 219, 238, 248, 249, 251, 252, 268, 271, 280, 283], "parent": [1, 32, 135, 239, 244, 245, 248], "resid": [1, 5, 9, 39, 135, 137, 177, 246, 248, 250], "insid": [1, 12, 246, 248, 251, 284], "situat": [1, 16, 30, 148, 271, 290], "anoth": [1, 2, 6, 7, 9, 10, 13, 16, 17, 37, 38, 39, 118, 235, 238, 244, 246, 248, 250, 251, 252, 269, 271, 272, 283, 290, 295, 296], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 135, 235, 240, 245, 250, 271, 284, 289, 294, 295], "with_viz": [1, 239, 250, 284], "base": [1, 5, 8, 13, 14, 15, 17, 19, 37, 39, 41, 48, 54, 73, 78, 80, 111, 112, 117, 132, 135, 144, 147, 149, 179, 182, 185, 187, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 245, 247, 248, 250, 251, 252, 264, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 296], "mesh": [1, 5, 7, 10, 16, 24, 37, 84, 96, 103, 120, 137, 138, 140, 143, 145, 146, 147, 149, 151, 154, 156, 158, 174, 177, 178, 179, 180, 182, 185, 187, 191, 193, 197, 199, 201, 205, 207, 211, 213, 215, 218, 220, 221, 227, 233, 234, 237, 238, 239, 241, 242, 243, 244, 246, 248, 250, 251, 252, 260, 261, 269, 270, 272, 280, 282, 290, 295], "init": [1, 5, 6, 7, 9, 14, 17, 18, 34, 44, 135, 137, 143, 153, 154, 161, 164, 169, 179, 185, 235, 237, 245, 248, 250, 251, 252, 264, 272, 283, 284, 286, 287, 290], "forward": [1, 5, 7, 9, 14, 37, 135, 137, 143, 151, 154, 162, 164, 185, 218, 220, 235, 245, 248, 250, 251, 261, 264, 272, 283, 284, 286, 287, 289, 294], "resolut": [1, 9, 13, 14, 16, 67, 70, 74, 75, 79, 95, 99, 102, 135, 137, 138, 141, 143, 144, 153, 154, 155, 158, 161, 162, 164, 166, 169, 174, 177, 179, 191, 196, 199, 201, 203, 205, 210, 213, 215, 238, 239, 241, 242, 243, 244, 245, 246, 248, 250, 272, 283, 284, 286, 287, 288, 289, 294, 296], "singl": [1, 5, 8, 9, 18, 120, 132, 217, 218, 220, 221, 223, 243, 248, 250, 251, 256, 257, 258, 260, 261, 262, 264, 265, 269, 271, 277, 281, 284, 285, 286, 287, 291, 292], "analysi": [1, 6, 9, 18, 135, 238, 250, 251, 269, 270, 272, 284, 286, 287, 296], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 38, 39, 40, 49, 50, 51, 57, 73, 78, 83, 113, 114, 115, 122, 123, 126, 127, 132, 135, 144, 152, 157, 163, 176, 190, 204, 217, 244, 245, 248, 250, 251, 252, 256, 269, 271, 272, 278, 284], "remap": [1, 10, 18, 185, 239, 270, 284, 289, 294], "visual": [1, 10, 13, 16, 201, 215, 239, 241, 242, 244, 248, 250, 269, 270, 284, 286, 287, 289, 294], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 17, 18, 19, 30, 39, 117, 132, 236, 238, 239, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 269, 270, 271, 272, 277, 279, 280, 282, 283, 284, 286, 287, 288, 289, 290, 295, 296], "spheric": [1, 5, 239, 250, 284, 295], "qu": [1, 5, 135, 250, 271, 272, 282, 284, 295], "base_mesh": [1, 5, 13, 67, 74, 135, 137, 143, 144, 179, 182, 185, 187, 248, 250, 271, 284], "60km": [1, 5, 250, 284], "90km": [1, 5], "120km": [1, 5, 250], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 144, 250], "map": [1, 8, 16, 19, 30, 74, 75, 94, 119, 120, 148, 185, 187, 239, 250, 252, 272], "viz": [1, 5, 18, 174, 248, 250], "two": [1, 5, 10, 17, 118, 135, 161, 171, 238, 239, 241, 242, 243, 244, 245, 248, 249, 251, 252, 257, 259, 271, 283, 284, 286, 287, 293], "first": [1, 6, 9, 14, 112, 132, 135, 238, 241, 242, 243, 248, 250, 251, 252, 268, 271, 273, 274, 275, 276, 277, 278, 283, 284, 288, 290], "verbos": [1, 5, 6, 63, 65, 132, 248, 271, 295], "10": [1, 9, 13, 69, 132, 235, 238, 241, 242, 244, 245, 271, 272, 277, 280, 283, 286, 287, 288, 296], "name": [1, 5, 7, 8, 9, 13, 14, 16, 17, 18, 19, 24, 26, 27, 28, 30, 31, 37, 38, 39, 40, 48, 50, 58, 60, 61, 62, 63, 67, 74, 80, 84, 86, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 108, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 126, 132, 135, 137, 138, 139, 140, 141, 143, 144, 145, 148, 151, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 178, 179, 182, 185, 187, 219, 226, 244, 245, 248, 250, 251, 252, 258, 260, 262, 269, 271, 272, 278, 283, 290, 295], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 135, 140, 150, 155, 178, 219, 243, 248, 251, 283, 288, 293], "symlink": [1, 5, 8, 9, 14, 17, 37, 39, 48, 49, 56, 250, 251, 252, 284], "what": [1, 2, 6, 11, 13, 16, 132, 250, 251, 271, 278, 289, 290, 294], "follow": [1, 4, 5, 7, 9, 13, 14, 18, 66, 132, 137, 227, 233, 234, 235, 237, 248, 249, 250, 252, 264, 265, 268, 271, 272, 277, 278, 280, 282, 284, 286, 287, 288, 290, 293], "subdirectori": [1, 5, 7, 8, 13, 19, 23, 24, 37, 39, 48, 49, 51, 63, 67, 74, 80, 94, 111, 135, 137, 143, 145, 155, 177, 179, 182, 185, 187, 191, 196, 199, 201, 205, 210, 213, 215, 219, 221, 223, 244, 246, 248, 250, 251, 271, 289, 290, 294, 296], "bold": [1, 250], "elsewher": [1, 252], "tree": [1, 7, 113, 115, 127, 250, 291], "thu": [1, 2, 7, 14, 271, 284], "similar": [1, 2, 5, 9, 12, 13, 14, 129, 132, 133, 135, 244, 246, 251, 252, 271, 272, 290], "had": [1, 132], "maintain": [1, 235, 290], "local": [1, 5, 6, 8, 9, 11, 17, 39, 235, 246, 248, 252, 264, 268, 271, 272, 277, 278, 280], "debug": [1, 8, 128, 129, 130, 131, 132, 133, 271, 273, 274, 275, 276, 278], "easier": [1, 14, 248, 250, 251, 252, 272, 290, 295], "symbol": [1, 60, 248], "link": [1, 2, 7, 9, 11, 14, 39, 45, 52, 60, 132, 244, 248, 250, 252, 271, 277, 281, 290, 291], "were": [1, 47, 132, 219, 248, 251, 269, 271, 272, 276, 280], "even": [1, 6, 12, 13, 14, 39, 56, 132, 248, 251, 252, 271, 272, 277, 290], "compass": [1, 5, 235, 248, 250, 251, 269, 271], "though": [1, 11, 37, 250, 251, 271], "global": [1, 13, 16, 98, 99, 104, 239, 244, 248, 249, 251, 269, 270, 271, 272, 278, 282, 284, 289, 290, 294, 296], "dynamic_adjust": [1, 14, 272], "allow": [1, 2, 8, 16, 17, 24, 34, 37, 44, 56, 118, 132, 135, 145, 248, 269, 271, 272, 277, 280, 284, 288, 296], "one": [1, 2, 5, 6, 7, 10, 14, 16, 17, 18, 24, 36, 37, 39, 40, 47, 48, 54, 60, 111, 112, 117, 132, 135, 144, 145, 161, 219, 235, 238, 241, 242, 243, 244, 246, 248, 250, 251, 252, 257, 267, 268, 269, 270, 272, 277, 278, 280, 283, 284, 287, 289, 290, 293, 294, 295, 296], "input": [1, 5, 8, 10, 11, 16, 32, 37, 38, 39, 40, 46, 84, 135, 160, 168, 238, 239, 241, 242, 243, 271, 288], "port": [1, 271, 278], "instead": [1, 5, 6, 12, 14, 24, 108, 128, 132, 248, 251, 252, 269, 271, 273, 284, 290, 295], "seri": [1, 14, 135, 166, 172, 239, 241, 267, 271, 282], "indic": [1, 7, 8, 14, 16, 17, 37, 38, 105, 112, 120, 132, 135, 230, 246, 248, 268, 271, 272, 280, 288], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 37, 38, 237, 248, 250, 251, 252, 271, 274, 276, 278, 290], "ran": [1, 106], "ico": [1, 5, 135, 250, 271, 282, 284, 295], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 24, 112, 117, 132, 145, 235, 245, 248, 252, 264, 271, 272, 273, 274, 275, 276, 277, 278, 290], "runtim": [1, 8, 14, 29, 43, 135, 157, 163, 181, 198, 212, 248, 271], "0": [1, 2, 5, 6, 7, 13, 14, 16, 17, 18, 69, 95, 99, 102, 118, 120, 128, 129, 130, 131, 132, 133, 135, 227, 232, 233, 234, 237, 239, 244, 248, 251, 265, 268, 271, 272, 274, 277, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 294], "01": [1, 14, 135, 265, 271, 288, 293], "00": [1, 14, 17, 135, 250, 265, 271, 278, 290], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 290], "02": [1, 274], "59": 1, "icos_map_60km": 1, "20": [1, 164, 238, 249, 271, 283, 288], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 56, 132, 238, 251, 252, 284, 288], "mechan": [1, 248], "prevent": [1, 248], "expect": [1, 2, 12, 16, 132, 135, 245, 248, 252, 271, 284], "affect": [1, 6, 248, 252, 271], "howev": [1, 13, 248, 249, 250, 252, 271], "perform": [1, 2, 5, 8, 14, 16, 17, 37, 42, 43, 46, 47, 67, 118, 132, 135, 143, 154, 155, 160, 164, 168, 179, 188, 196, 210, 218, 219, 220, 235, 238, 239, 241, 242, 243, 248, 249, 250, 261, 269, 270, 271, 272, 277, 283, 295], "successfulli": [1, 47, 271], "after": [1, 5, 6, 7, 9, 16, 17, 18, 37, 39, 40, 81, 100, 105, 132, 228, 229, 235, 245, 248, 250, 252, 264, 271, 272, 274, 278, 284, 290, 293], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 16, 30, 37, 38, 45, 52, 106, 112, 117, 131, 132, 135, 137, 141, 148, 177, 191, 201, 205, 215, 235, 238, 241, 242, 244, 246, 248, 249, 250, 251, 252, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 290, 295, 296], "remov": [1, 5, 14, 23, 51, 108, 238, 241, 242, 250, 252, 271], "longer": [1, 161, 238, 249, 257, 271, 283, 284], "about": [1, 5, 6, 7, 8, 12, 14, 37, 94, 121, 135, 244, 248, 250, 251, 252, 271, 272, 274], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 29, 49, 56, 75, 132, 135, 157, 163, 235, 239, 245, 248, 250, 251, 252, 264, 265, 268, 270, 271, 272, 273, 277, 278, 280, 283, 284, 290, 295], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 18, 132, 135, 235, 237, 245, 248, 249, 250, 251, 265, 268, 272, 277, 281, 290], "enforc": [1, 237, 252], "framework": [1, 5, 7, 9, 12, 13, 14, 107, 235, 244, 245, 248, 250, 264, 269, 270, 271, 281, 288, 289, 291, 294, 296], "propos": [1, 2], "close": [1, 6, 70, 132, 270, 284], "root": [1, 39, 132, 235, 241, 242, 245, 248, 251, 252, 264, 269, 272, 273, 274, 275, 276, 277, 278, 280, 286, 287, 290], "live": [1, 49, 250, 290], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 24, 36, 39, 47, 68, 75, 76, 79, 82, 94, 100, 118, 135, 145, 161, 170, 193, 207, 227, 233, 234, 239, 245, 246, 248, 250, 251, 257, 258, 277, 280, 283, 286, 287], "think": [1, 5, 271], "condit": [1, 7, 37, 135, 140, 154, 158, 178, 182, 199, 213, 218, 220, 221, 223, 238, 239, 241, 242, 243, 244, 248, 249, 250, 251, 261, 267, 269, 270, 272, 282, 295, 296], "shown": [1, 14, 132, 246, 288], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 34, 37, 38, 39, 40, 44, 48, 57, 71, 74, 76, 95, 99, 100, 102, 111, 112, 117, 128, 129, 130, 131, 132, 133, 135, 235, 238, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 284, 287, 290, 295, 296], "simpli": [1, 14, 17, 56, 132, 154, 245, 248, 250, 252, 271, 280, 290, 295], "prefer": [1, 2, 132, 248, 249, 271, 272], "convent": [1, 248, 252, 271], "futur": [1, 13, 43, 248, 251, 269, 270, 271, 272, 288, 290, 296], "current": [1, 2, 5, 6, 8, 11, 24, 34, 37, 44, 118, 132, 145, 235, 243, 245, 248, 251, 252, 254, 264, 265, 269, 270, 271, 272, 277, 280, 283, 287, 288, 290, 295, 296], "independ": [1, 2, 5, 249, 269], "yyyi": 2, "mm": [2, 135, 150], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 43, 46, 48, 49, 51, 54, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 84, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 126, 127, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 153, 154, 155, 156, 158, 160, 161, 162, 164, 166, 168, 169, 170, 172, 174, 177, 178, 179, 180, 182, 185, 187, 189, 191, 196, 197, 199, 201, 203, 205, 210, 211, 213, 215, 218, 219, 220, 221, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 258, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 293, 294, 296], "purpos": [2, 244, 251, 271, 296], "section": [2, 3, 5, 6, 7, 9, 12, 14, 16, 24, 30, 75, 119, 123, 132, 135, 145, 148, 225, 227, 233, 234, 235, 239, 243, 244, 245, 248, 249, 251, 252, 264, 268, 271, 272, 273, 274, 275, 276, 277, 278, 280, 284, 288, 289, 290, 294], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 24, 29, 34, 37, 38, 39, 40, 43, 44, 48, 49, 54, 58, 60, 74, 75, 80, 90, 91, 94, 98, 104, 105, 107, 108, 113, 115, 118, 120, 122, 127, 128, 130, 131, 132, 135, 140, 143, 144, 145, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 178, 181, 196, 198, 210, 212, 219, 227, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 258, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 293, 294, 295, 296], "summar": 2, "process": [2, 6, 8, 14, 32, 90, 91, 127, 248, 251, 252, 264, 269, 270, 271], "It": [2, 5, 6, 9, 14, 16, 37, 43, 119, 135, 241, 242, 244, 248, 249, 250, 251, 252, 269, 271, 272, 277, 284, 286, 287], "code": [2, 5, 7, 9, 12, 14, 37, 135, 235, 244, 245, 248, 249, 250, 254, 264, 269, 270, 272, 279, 283, 288, 290], "do": [2, 5, 9, 11, 14, 16, 17, 122, 132, 135, 244, 248, 250, 252, 268, 269, 270, 271, 277, 284, 290], "doe": [2, 6, 9, 12, 14, 248, 254, 270, 271, 277], "primari": [2, 5, 9, 271, 295], "challeng": 2, "respect": [2, 8, 9, 14, 18, 135, 138, 248, 251, 284, 289, 294], "softwar": [2, 84, 278, 290], "appropri": [2, 5, 6, 14, 25, 79, 132, 135, 235, 238, 241, 242, 243, 245, 246, 248, 252, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 289, 290, 294], "final": [2, 5, 6, 7, 8, 132, 238, 239, 241, 242, 243, 248, 250, 267, 271, 284], "statement": [2, 12, 248, 269], "gener": [2, 3, 5, 7, 8, 12, 14, 18, 25, 26, 27, 28, 32, 46, 74, 118, 135, 160, 168, 225, 235, 237, 238, 241, 242, 243, 245, 248, 252, 264, 271, 272, 277, 284, 286, 287, 290], "regard": 2, "last": [2, 249, 252, 283, 290], "modifi": [2, 8, 9, 13, 14, 24, 36, 50, 113, 115, 135, 145, 165, 238, 241, 242, 248, 250, 252, 270, 271, 272, 283, 290], "your": [2, 4, 5, 6, 11, 132, 235, 251, 252, 264, 268, 271, 272, 273, 274, 277, 278, 284, 290], "appear": [2, 132, 248, 271], "under": [2, 16, 37, 38, 132, 135, 237, 248, 249, 252, 270, 280, 296], "head": [2, 237, 274], "correspond": [2, 6, 7, 118, 132, 135, 137, 235, 248, 252, 264, 283], "discuss": [2, 6, 135, 239, 248, 251, 271, 283], "technic": [2, 7], "issu": [2, 6, 248, 249, 252, 286, 287], "focu": [2, 271], "model": [2, 5, 10, 24, 25, 29, 30, 32, 37, 39, 112, 117, 121, 126, 128, 129, 130, 131, 132, 133, 143, 153, 155, 157, 161, 162, 163, 164, 169, 181, 198, 212, 219, 235, 238, 239, 241, 242, 243, 245, 248, 249, 251, 252, 257, 264, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 283, 286, 287, 289], "To": [2, 5, 6, 12, 16, 17, 118, 132, 135, 235, 248, 251, 252, 264, 265, 271, 273, 274, 275, 276, 277, 278, 280, 284, 290], "extent": [2, 13, 16, 271, 283], "possibl": [2, 8, 11, 70, 135, 237, 239, 248, 249, 250, 251, 271, 280], "other": [2, 5, 6, 7, 8, 9, 10, 13, 16, 18, 37, 38, 40, 48, 56, 105, 128, 171, 239, 243, 244, 245, 246, 250, 251, 252, 259, 268, 269, 270, 272, 273, 283, 284, 296], "clean": [2, 4, 5, 6, 112, 117, 248, 250, 252], "plan": [2, 13, 135, 235, 241, 242, 248, 264, 269, 286, 287, 296], "For": [2, 3, 5, 6, 7, 9, 12, 14, 16, 18, 112, 128, 132, 135, 139, 140, 178, 237, 238, 241, 242, 243, 248, 251, 252, 271, 272, 273, 281, 284, 286, 287, 290, 291, 296], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 128, 129, 130, 131, 132, 133, 135, 235, 245, 248, 250, 251, 252, 264, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 284, 290, 295, 296], "provid": [2, 3, 5, 8, 9, 14, 16, 17, 18, 24, 37, 39, 40, 45, 47, 48, 52, 94, 98, 104, 118, 122, 132, 135, 145, 150, 155, 219, 235, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 264, 267, 268, 269, 270, 271, 272, 277, 281, 284, 289, 290], "intend": [2, 6, 8, 9, 249, 272, 287, 296], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 63, 118, 237, 239, 246, 248, 251, 252, 268, 271, 290], "pde": 2, "solver": [2, 250, 252, 270, 290], "well": [2, 6, 9, 12, 13, 132, 135, 230, 238, 239, 241, 242, 243, 248, 252, 269, 271, 272, 284, 290, 296], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 23, 24, 26, 27, 30, 37, 38, 39, 47, 48, 50, 51, 54, 58, 60, 84, 86, 91, 95, 96, 97, 98, 99, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 118, 120, 122, 123, 126, 127, 132, 137, 140, 145, 148, 155, 177, 181, 184, 185, 191, 198, 201, 205, 212, 215, 231, 235, 237, 238, 239, 241, 242, 243, 244, 245, 250, 251, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 286, 287, 289, 290, 293, 294, 295, 296], "low": [2, 120], "variabl": [2, 5, 13, 18, 19, 24, 37, 40, 47, 48, 56, 67, 74, 80, 84, 94, 95, 99, 102, 118, 120, 121, 122, 127, 132, 135, 137, 138, 139, 140, 141, 143, 145, 151, 155, 158, 164, 166, 170, 174, 178, 185, 187, 191, 193, 196, 199, 201, 203, 205, 207, 210, 213, 215, 219, 227, 233, 234, 237, 243, 248, 251, 252, 258, 259, 264, 268, 271, 273, 274, 275, 276, 277, 278, 281, 283, 289, 290, 291, 294], "declar": [2, 7], "interfac": [2, 10, 225, 226, 227, 233, 234, 251, 252, 270, 271, 280], "sequenc": [2, 5, 14, 239, 247, 248, 251, 269, 271, 290, 295, 296], "If": [2, 5, 6, 7, 8, 9, 12, 14, 17, 18, 24, 34, 37, 39, 44, 45, 48, 49, 50, 52, 60, 90, 91, 92, 94, 105, 118, 120, 128, 129, 130, 131, 132, 133, 135, 145, 150, 155, 196, 210, 219, 238, 248, 250, 251, 252, 265, 268, 269, 271, 272, 277, 278, 280, 284, 289, 290, 294], "want": [2, 5, 6, 11, 14, 16, 17, 50, 132, 135, 248, 250, 252, 268, 271, 272, 277, 278, 288, 290, 296], "math": 2, "syntax": [2, 135, 271], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 252, 269, 271, 290], "2": [2, 6, 13, 14, 17, 38, 132, 135, 169, 237, 238, 246, 249, 252, 258, 265, 271, 272, 274, 277, 280, 283, 284, 286, 287, 290], "2ab": 2, "imag": [2, 7, 18, 119, 120, 244, 271, 289, 294], "keep": [2, 5, 6, 9, 14, 24, 56, 239, 244, 245, 248, 250, 252, 271, 289, 294], "mind": [2, 5, 271], "quit": [2, 246, 248, 250, 271], "small": [2, 9, 43, 132, 244, 248, 271, 273, 274, 279, 280, 288, 290], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24, 33, 34, 37, 39, 43, 44, 48, 56, 79, 90, 91, 94, 107, 108, 112, 123, 132, 135, 137, 145, 150, 155, 196, 210, 219, 227, 230, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 286, 287, 288, 289, 290, 293, 294, 295, 296], "png": [2, 13, 18, 239, 248, 271], "okai": [2, 6, 248, 271], "size": [2, 13, 69, 70, 79, 135, 147, 149, 151, 244, 271, 272, 283, 284, 286, 287, 288, 289, 294], "repo": [2, 5, 6, 132, 235, 264, 270, 271, 291], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 132, 135, 244, 245, 246, 248, 249, 250, 251, 252, 268, 269, 271, 272, 274, 280, 289, 290, 295, 296], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 248, 250, 252, 271], "sourc": [2, 6, 7, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 248, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 272, 273, 274, 275, 276, 277, 278, 290], "project": [2, 5, 6, 7, 66, 98, 104, 235, 251, 252, 264, 265, 271, 272, 273, 274, 277, 290, 291], "manag": [2, 268, 277], "item": [2, 271], "git": [2, 6, 15, 93, 235, 252, 264, 271, 272, 290], "branch": [2, 5, 132, 235, 245, 248, 252, 264, 270, 271, 290], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 248, 252, 277], "block": [2, 250], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 17, 95, 99, 102, 132, 135, 244, 246, 248, 250, 251, 252, 268, 270, 271, 272, 277, 283, 284, 290, 296], "def": [2, 7, 9, 11, 12, 14, 16, 17, 18, 135, 244, 245, 248, 250, 251, 271], "example_funct": 2, "foo": [2, 251], "return": [2, 7, 30, 47, 55, 58, 61, 68, 69, 70, 75, 79, 86, 89, 90, 100, 109, 110, 112, 113, 115, 118, 122, 126, 127, 135, 138, 139, 140, 144, 146, 148, 150, 151, 156, 178, 180, 194, 195, 197, 208, 209, 211, 225, 228, 229, 230, 231, 232, 250, 251, 271, 284], "how": [2, 5, 6, 12, 14, 74, 135, 247, 248, 250, 251, 252, 272, 277, 278], "show": [2, 7, 13, 248, 271, 277, 278, 283, 284, 289, 294], "met": 2, "regress": [2, 238, 239, 249, 269, 270, 271, 283, 284, 290, 295], "configur": [2, 5, 6, 11, 14, 16, 34, 37, 44, 48, 58, 62, 89, 90, 91, 92, 93, 112, 117, 132, 135, 225, 227, 228, 229, 233, 234, 248, 251, 270, 271, 272, 274, 277, 278, 280, 286, 287, 289, 290, 294, 296], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 37, 39, 40, 42, 45, 46, 48, 49, 52, 54, 56, 62, 93, 107, 112, 117, 131, 132, 160, 168, 185, 188, 246, 247, 248, 249, 250, 251, 252, 268, 269, 271, 272, 277, 284, 288, 290, 296], "properli": [2, 128, 130, 131, 271, 272, 290], "addit": [2, 7, 9, 17, 37, 135, 243, 244, 245, 246, 248, 250, 251, 252, 271], "modif": [2, 7, 248, 265], "nightli": [2, 252, 290, 295], "might": [2, 6, 11, 14, 16, 18, 132, 135, 244, 248, 252, 271, 272, 277, 290], "made": [2, 5, 16, 37, 40, 48, 118, 248, 250, 251, 265, 267, 269, 271, 296], "continu": [2, 6, 248, 271], "page": [3, 7, 132, 273], "auto": 3, "summari": [3, 274], "more": [3, 5, 6, 9, 11, 12, 13, 14, 16, 37, 48, 54, 75, 111, 112, 132, 135, 237, 238, 239, 244, 246, 248, 249, 250, 251, 252, 269, 277, 281, 283, 289, 290, 291, 294, 296], "relev": [3, 7, 9, 135, 239, 241, 242, 271, 273, 274, 275, 276, 277, 278, 289, 290, 294], "seaic": [3, 10, 19, 39, 245, 248, 267, 269, 270, 290, 291, 294, 296], "long": [4, 24, 34, 37, 44, 90, 91, 145, 155, 196, 210, 219, 248, 271, 283, 290], "procedur": [4, 132, 252, 271, 278], "conda": [4, 5, 15, 93, 128, 130, 131, 132, 235, 245, 251, 264, 270, 271, 272, 273, 274, 275, 276, 278], "environ": [4, 5, 128, 130, 131, 235, 245, 251, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278], "spack": [4, 5, 128, 130, 131, 268, 270, 271, 273, 274, 275, 276, 277, 278], "compil": [4, 5, 6, 14, 128, 129, 130, 131, 132, 133, 268, 270, 271, 273, 274, 275, 276, 277, 278, 290], "system": [4, 5, 6, 24, 34, 37, 44, 90, 91, 92, 128, 130, 131, 132, 145, 155, 196, 210, 219, 248, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 290], "modul": [4, 5, 9, 10, 12, 14, 15, 26, 27, 28, 66, 86, 113, 128, 130, 131, 132, 135, 143, 244, 245, 246, 248, 250, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 290], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 25, 26, 27, 28, 29, 37, 39, 45, 46, 52, 75, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 109, 111, 112, 113, 115, 117, 118, 119, 120, 128, 129, 130, 131, 132, 133, 157, 160, 163, 168, 175, 181, 198, 212, 219, 227, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 247, 248, 250, 251, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 284, 286, 287, 288, 289, 294, 295], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 25, 26, 27, 28, 37, 46, 48, 81, 93, 105, 106, 109, 111, 112, 117, 118, 128, 129, 130, 131, 132, 133, 135, 160, 168, 235, 238, 239, 241, 242, 243, 247, 248, 250, 251, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 289, 294, 295, 296], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 15, 26, 27, 28, 39, 50, 59, 86, 93, 113, 117, 122, 132, 135, 143, 244, 245, 246, 247, 248, 250, 252, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 290], "Then": [4, 6, 7, 11, 14, 128, 129, 130, 131, 132, 133, 235, 238, 241, 242, 243, 245, 248, 250, 252, 264, 271, 277, 283, 290], "run": [4, 5, 6, 7, 10, 12, 16, 17, 18, 24, 29, 34, 37, 38, 40, 43, 44, 47, 48, 49, 54, 66, 89, 90, 91, 100, 112, 117, 131, 132, 137, 143, 145, 154, 155, 157, 161, 163, 166, 170, 172, 177, 179, 181, 191, 196, 198, 201, 205, 210, 212, 215, 218, 219, 220, 235, 238, 239, 241, 242, 243, 246, 247, 249, 250, 251, 257, 258, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 295, 296], "script": [4, 5, 6, 12, 18, 53, 62, 129, 132, 133, 251, 269, 270, 271, 274, 277], "doc": [4, 7, 271, 278], "cd": [4, 6, 235, 252, 264, 271, 274, 290], "html": [4, 281], "view": [4, 241, 242, 252, 286, 287], "open": [4, 6, 252, 271], "_build": 4, "index": [4, 17, 120, 137, 138, 140, 141, 178, 227, 228, 229, 230, 231, 232, 233, 234, 244, 271], "act": [5, 251, 280], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 132, 153, 154, 238, 241, 242, 243, 245, 248, 250, 271, 272, 277, 283, 284, 286, 287, 288, 290], "These": [5, 6, 8, 9, 14, 19, 37, 132, 135, 235, 237, 245, 248, 250, 251, 252, 264, 265, 270, 271, 272, 277, 283, 287, 290, 295, 296], "user": [5, 6, 7, 8, 9, 11, 14, 16, 37, 48, 49, 56, 62, 93, 132, 135, 238, 239, 241, 242, 243, 248, 249, 250, 268, 269, 271, 274, 277, 278, 281, 283, 284, 291], "describ": [5, 7, 14, 16, 93, 113, 115, 127, 135, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 280, 284, 290], "instal": [5, 6, 132, 252, 271, 277, 278, 290], "abov": [5, 7, 14, 17, 132, 244, 246, 248, 249, 250, 251, 252, 271, 272, 286, 287, 288, 290, 295], "off": [5, 6, 252, 268], "http": [5, 7, 11, 14, 60, 248, 251, 268, 270, 271, 272, 278, 281, 290, 291], "github": [5, 6, 7, 251, 252, 270, 271, 272, 281, 290, 291], "com": [5, 6, 7, 14, 60, 251, 252, 270, 271, 272, 290, 291], "e3sm": [5, 7, 10, 11, 37, 121, 132, 235, 245, 248, 249, 251, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 291], "creat": [5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 24, 37, 39, 43, 48, 56, 60, 67, 68, 74, 75, 80, 94, 101, 111, 112, 117, 121, 132, 135, 137, 143, 144, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 185, 187, 189, 191, 193, 196, 199, 201, 203, 205, 207, 210, 213, 215, 218, 219, 220, 221, 223, 227, 233, 234, 239, 243, 244, 248, 249, 250, 251, 257, 258, 260, 261, 262, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 284, 290, 295], "see": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 128, 130, 131, 132, 238, 239, 242, 248, 252, 268, 271, 272, 277, 281, 282, 283, 284, 288, 289, 290, 291, 293, 295, 296], "mean": [5, 241, 242, 252, 271, 280, 283, 284, 286, 287, 295], "chang": [5, 6, 8, 16, 74, 105, 106, 135, 235, 245, 248, 249, 250, 251, 252, 264, 269, 271, 272, 274, 278, 280, 283, 284, 290, 295], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 32, 37, 43, 48, 49, 50, 66, 100, 107, 132, 135, 238, 241, 242, 243, 245, 248, 249, 250, 251, 252, 268, 269, 270, 271, 272, 277, 278, 290], "tool": [5, 6, 9, 12, 14, 16, 235, 245, 248, 252, 264, 270, 271, 272], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 29, 30, 34, 37, 38, 39, 43, 44, 48, 49, 54, 58, 62, 75, 84, 87, 90, 91, 94, 100, 107, 118, 119, 120, 121, 122, 127, 128, 132, 135, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 155, 156, 157, 163, 170, 174, 177, 178, 180, 185, 196, 197, 203, 204, 210, 211, 219, 225, 227, 228, 229, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 258, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 286, 287, 288, 289, 290, 293, 295, 296], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 31, 34, 36, 37, 40, 41, 43, 44, 46, 55, 63, 66, 72, 77, 89, 90, 91, 93, 94, 107, 108, 111, 112, 117, 132, 135, 145, 147, 149, 235, 237, 238, 239, 241, 242, 243, 245, 246, 248, 249, 252, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 291, 295], "support": [5, 6, 8, 13, 16, 37, 135, 227, 233, 234, 237, 248, 251, 264, 269, 270, 271, 272, 274, 278, 280, 283, 288, 296], "machin": [5, 8, 9, 37, 39, 61, 62, 93, 111, 112, 117, 235, 248, 251, 264, 270, 271, 272, 273, 274, 275, 276, 278], "option": [5, 7, 9, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 44, 45, 48, 49, 50, 52, 54, 56, 57, 58, 60, 61, 62, 63, 67, 73, 74, 75, 78, 80, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 108, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 132, 138, 140, 143, 145, 148, 150, 155, 157, 163, 165, 175, 178, 181, 193, 196, 198, 207, 210, 212, 219, 221, 223, 225, 227, 228, 229, 233, 234, 235, 238, 239, 241, 242, 243, 244, 245, 248, 249, 250, 251, 260, 264, 265, 268, 270, 272, 280, 282, 290, 296], "help": [5, 6, 13, 132, 244, 245, 246, 248, 252, 270, 271, 277, 281, 291], "usag": [5, 18, 250, 272, 274, 278], "h": [5, 14, 271], "t": [5, 6, 7, 9, 11, 12, 14, 37, 38, 127, 132, 135, 137, 141, 194, 195, 208, 209, 219, 239, 248, 250, 251, 252, 268, 271, 272, 274, 276, 277, 282, 283, 286, 287, 290, 295, 296], "n": [5, 6, 68, 75, 76, 82, 248, 271, 274, 277, 278, 283, 284, 286, 287, 289, 290, 294], "number": [5, 6, 8, 13, 14, 24, 31, 34, 36, 37, 41, 43, 44, 61, 62, 63, 67, 68, 69, 70, 71, 79, 89, 90, 91, 94, 112, 132, 135, 145, 146, 147, 149, 155, 156, 170, 180, 193, 196, 197, 207, 210, 211, 219, 235, 238, 241, 242, 244, 248, 249, 250, 251, 258, 269, 271, 272, 277, 280, 282, 283, 284, 286, 287, 288, 289, 290, 294], "v": [5, 252, 271, 286, 287, 295], "By": [5, 14, 17, 38, 39, 135, 235, 245, 248, 250, 264, 271, 272, 283, 284, 288], "default": [5, 7, 9, 14, 17, 18, 24, 38, 39, 48, 54, 62, 75, 80, 85, 93, 94, 95, 99, 102, 108, 112, 114, 117, 120, 128, 130, 131, 132, 135, 139, 140, 155, 178, 235, 239, 241, 242, 243, 244, 245, 248, 250, 252, 264, 265, 270, 272, 273, 274, 275, 276, 277, 278, 280, 284, 288, 289, 290, 294, 296], "planar": [5, 9, 120, 135, 237, 245, 248, 271, 286, 287, 288, 289, 294, 295, 296], "baroclinic_channel": [5, 7, 9, 14, 17, 235, 240, 244, 245, 248, 251, 271, 283, 290, 295, 296], "10km": [5, 17, 238, 271, 283, 290, 295, 296], "1": [5, 7, 9, 13, 14, 16, 17, 18, 37, 69, 128, 129, 130, 131, 132, 133, 135, 153, 155, 169, 196, 210, 218, 219, 220, 227, 233, 234, 238, 239, 241, 242, 243, 245, 246, 248, 250, 252, 265, 268, 271, 272, 274, 277, 278, 280, 283, 284, 286, 287, 288, 289, 290], "decomp": [5, 245, 271, 290, 295], "displai": [5, 8, 278], "path": [5, 6, 9, 11, 14, 17, 37, 39, 40, 48, 49, 54, 56, 58, 60, 63, 66, 93, 111, 112, 117, 118, 120, 132, 137, 235, 245, 248, 250, 251, 252, 258, 264, 269, 271, 272, 273, 274, 275, 276, 277, 278, 290, 296], "directori": [5, 6, 8, 9, 11, 12, 14, 15, 18, 24, 37, 39, 40, 45, 46, 48, 49, 52, 54, 56, 60, 62, 93, 94, 107, 111, 112, 117, 118, 132, 145, 153, 154, 155, 158, 160, 161, 162, 164, 166, 168, 169, 170, 172, 185, 219, 235, 238, 245, 247, 248, 249, 250, 251, 252, 258, 260, 262, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 290, 296], "messag": [5, 8, 132, 248, 268, 278], "task_expr": [5, 63], "flag": [5, 6, 132, 248, 251, 268, 269, 271, 272, 281, 283, 290, 291], "suppli": [5, 6, 7, 17, 127, 132, 248, 252, 271], "substr": [5, 132], "regular": [5, 18, 63, 68, 75, 135, 137, 174, 177, 271, 273, 276, 277, 278, 290], "express": [5, 63], "subset": 5, "search": [5, 63, 274], "given": [5, 7, 8, 13, 14, 16, 17, 19, 23, 24, 51, 58, 69, 79, 86, 90, 91, 108, 113, 115, 118, 122, 135, 137, 138, 141, 144, 145, 164, 230, 238, 239, 243, 248, 250, 268, 270, 271, 272, 283, 284, 288, 289, 290, 294, 295], "pass": [5, 8, 9, 12, 13, 14, 17, 79, 118, 119, 135, 244, 245, 248, 250, 251, 252, 269, 290], "similarli": [5, 8, 235, 248, 250, 252, 277, 290], "result": [5, 13, 17, 58, 70, 79, 132, 135, 153, 161, 166, 169, 172, 223, 238, 239, 248, 249, 251, 252, 257, 262, 269, 271, 272, 283, 284, 289, 294, 295], "descript": [5, 7, 271, 272, 281, 291], "short": [5, 154, 218, 220, 248, 249, 250, 251, 261, 271, 283], "core": [5, 7, 8, 14, 24, 34, 36, 37, 39, 41, 43, 44, 62, 89, 90, 91, 117, 132, 135, 136, 145, 153, 154, 218, 220, 238, 243, 244, 245, 248, 249, 250, 251, 265, 269, 271, 272, 273, 274, 275, 276, 277, 278, 290, 295], "underli": 5, "must": [5, 7, 11, 14, 18, 24, 27, 28, 37, 40, 42, 45, 52, 117, 119, 120, 132, 135, 137, 145, 188, 237, 248, 250, 252, 271, 280, 296], "built": [5, 14, 112, 117, 132, 235, 245, 252, 264, 270, 272, 277, 290], "standalon": [5, 14, 131, 132, 245, 252, 269, 270, 277, 291], "mpa": [5, 9, 11, 12, 13, 14, 16, 17, 18, 24, 30, 37, 39, 66, 84, 96, 103, 113, 115, 117, 126, 127, 128, 129, 130, 131, 132, 133, 136, 145, 148, 151, 185, 193, 207, 226, 235, 236, 238, 239, 241, 242, 243, 245, 248, 251, 252, 255, 264, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 286, 288, 289, 290, 291, 294, 295, 296], "befor": [5, 6, 8, 9, 14, 16, 43, 112, 117, 132, 248, 250, 251, 252, 268, 271, 274, 278, 280, 284, 290], "num": 5, "f": [5, 9, 11, 17, 135, 245, 248, 250, 251, 252, 271, 272, 278, 283, 286, 290], "m": [5, 6, 14, 68, 75, 76, 82, 238, 243, 244, 252, 271, 273, 274, 275, 276, 278, 280, 283, 284, 288, 290], "mach": [5, 9, 37, 132, 270, 273, 274, 275, 276, 277, 278, 290], "w": [5, 6, 252, 269, 271, 290], "p": [5, 6, 252, 271, 272, 290], "suite_nam": [5, 8, 108, 110, 112, 117, 290], "copy_execut": [5, 112, 117, 290], "specifi": [5, 6, 14, 16, 17, 18, 39, 132, 237, 248, 252, 267, 271, 272, 278, 283, 284, 289, 290, 294], "altern": [5, 13, 248, 265, 290], "task_numb": 5, "multipl": [5, 9, 14, 132, 236, 249, 250, 251, 252, 271, 277, 283, 290], "test": [5, 7, 8, 9, 18, 48, 49, 54, 62, 89, 90, 91, 110, 118, 132, 136, 137, 142, 143, 152, 154, 155, 161, 162, 164, 165, 166, 167, 169, 174, 175, 176, 177, 179, 182, 185, 186, 189, 190, 191, 192, 193, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 255, 256, 257, 260, 261, 262, 263, 264, 267, 269, 270, 276, 277, 278, 280, 283, 284, 286, 287, 288, 289, 290, 291, 294, 295], "separ": [5, 7, 9, 14, 16, 17, 137, 248, 249, 269, 271, 284, 290], "space": [5, 6, 7, 9, 13, 132, 241, 242, 248, 252, 271, 274, 277, 290], "requir": [5, 6, 8, 14, 24, 34, 37, 38, 44, 94, 135, 145, 155, 196, 210, 219, 235, 244, 245, 248, 249, 250, 251, 252, 264, 265, 268, 270, 271, 272, 277, 280, 281, 289, 290, 291, 294, 296], "few": [5, 13, 14, 24, 34, 37, 44, 90, 91, 132, 145, 238, 239, 241, 242, 243, 248, 251, 271, 272, 277], "basic": [5, 7, 272, 274, 277, 290], "piec": [5, 244, 245, 271], "abl": [5, 128, 129, 130, 131, 133, 135, 248, 249, 252, 271, 277, 290], "place": [5, 6, 14, 119, 132, 244, 248, 250, 265, 271, 277], "download": [5, 6, 8, 10, 37, 39, 46, 132, 160, 168, 250, 251, 252, 272, 290, 295], "some": [5, 6, 8, 9, 10, 11, 13, 14, 48, 132, 237, 239, 244, 246, 248, 250, 251, 252, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 290, 291, 295, 296], "data": [5, 10, 13, 16, 17, 18, 25, 37, 38, 39, 100, 113, 115, 116, 119, 120, 121, 127, 132, 185, 227, 233, 234, 248, 252, 270, 272, 273, 274, 275, 276, 277, 290, 295, 296], "r": [5, 184, 278, 284], "tell": [5, 6, 132, 252], "re": [5, 6, 9, 250, 251, 252, 269, 271, 272, 277, 278, 284], "leav": [5, 18, 239, 272, 284], "unknown": [5, 132, 251, 277], "component_path": [5, 9, 112, 117, 235, 245, 264, 272, 290], "absolut": [5, 9, 37, 39, 56, 112, 117, 235, 245, 248, 252, 264, 290], "landic": [5, 6, 12, 19, 39, 66, 117, 244, 245, 247, 248, 250, 252, 269, 270, 271, 272, 290, 296], "e3sm_submodul": [5, 235, 245, 252, 264, 265, 271], "mali": [5, 132, 245, 248, 252, 269, 271, 272, 290, 296], "dev": [5, 6, 7, 244, 245, 247, 248, 251, 252, 270, 271, 281, 290, 291], "albani": [5, 128, 130, 131, 132, 245, 272, 273, 274, 275, 278, 290], "depend": [5, 14, 16, 18, 37, 38, 46, 105, 106, 132, 135, 137, 160, 168, 177, 250, 252, 269, 270, 271, 272, 277, 278, 280, 284, 290, 296], "whether": [5, 8, 13, 14, 18, 24, 29, 37, 39, 47, 48, 49, 54, 58, 60, 63, 107, 108, 112, 117, 118, 119, 120, 123, 132, 135, 137, 144, 145, 157, 163, 174, 177, 181, 198, 212, 219, 221, 223, 241, 242, 244, 248, 250, 252, 268, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 286, 287, 288, 289, 290, 294], "omega": [5, 30, 121, 145, 148, 193, 207, 235, 245, 251, 252, 269, 271, 281, 286, 287, 290], "config": [5, 7, 8, 10, 11, 12, 13, 16, 18, 20, 24, 25, 28, 29, 30, 37, 38, 39, 45, 48, 50, 52, 58, 61, 62, 73, 75, 78, 89, 90, 91, 92, 93, 109, 111, 112, 117, 119, 121, 122, 123, 124, 126, 127, 143, 145, 148, 150, 157, 163, 164, 174, 175, 181, 193, 198, 207, 212, 225, 227, 228, 229, 233, 234, 235, 238, 239, 241, 242, 243, 244, 248, 249, 250, 251, 252, 264, 265, 268, 270, 280, 290, 296], "point": [5, 6, 9, 53, 60, 97, 132, 235, 237, 244, 245, 250, 251, 252, 264, 271, 272, 277, 290], "much": [5, 6, 14, 248, 271], "config_fil": [5, 9, 112, 117], "work_dir": [5, 11, 37, 48, 62, 93, 111, 112, 117, 118, 248, 250, 271], "recommend": [5, 7, 11, 18, 132, 248, 249, 251, 252, 271, 277], "itself": [5, 6, 7, 9, 37, 45, 52, 244, 245, 247, 248, 250, 252, 271, 290], "temp": 5, "scratch": [5, 6, 252, 271, 274, 278, 290], "avoid": [5, 248, 271], "confus": [5, 14, 251, 252, 271], "output": [5, 7, 8, 10, 12, 13, 14, 17, 19, 24, 37, 38, 40, 46, 47, 48, 54, 83, 84, 91, 94, 107, 108, 118, 135, 137, 141, 143, 145, 151, 160, 168, 170, 171, 177, 185, 191, 201, 205, 215, 226, 238, 239, 241, 242, 243, 250, 258, 259, 267, 269, 272, 278, 284, 290, 295], "compar": [5, 10, 17, 37, 40, 47, 111, 112, 117, 118, 135, 170, 171, 219, 239, 243, 248, 249, 250, 251, 252, 258, 259, 267, 269, 271, 282, 283, 290, 293, 295], "previou": [5, 171, 248, 252, 259, 271, 282, 290, 295], "same": [5, 7, 9, 14, 17, 37, 38, 39, 47, 118, 132, 135, 139, 140, 178, 238, 243, 244, 246, 248, 249, 250, 251, 252, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 288, 290, 295, 296], "baseline_dir": [5, 37, 111, 112, 117, 248], "mani": [5, 6, 8, 9, 135, 244, 246, 248, 250, 251, 252, 270, 271, 283, 289, 294], "valid": [5, 10, 37, 40, 47, 135, 143, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 248, 251, 252, 270, 280, 283], "timer": [5, 17, 37, 248, 249, 251], "both": [5, 6, 7, 8, 13, 14, 29, 132, 135, 150, 157, 163, 238, 244, 245, 247, 248, 252, 270, 271, 272, 282, 284, 286, 287, 288], "custom": [5, 6, 8, 13, 16, 56, 58, 112, 117, 235, 245, 252, 264, 272, 278, 290], "give": [5, 14, 17, 132, 248, 251, 252, 271, 272, 290], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 17, 18, 24, 36, 105, 132, 135, 145, 227, 233, 234, 235, 238, 241, 242, 244, 245, 248, 250, 251, 252, 264, 269, 271, 272, 277, 278, 280, 283, 284, 288, 290, 295], "case": [5, 6, 7, 8, 9, 14, 18, 27, 28, 48, 49, 54, 62, 89, 90, 91, 113, 118, 132, 135, 136, 142, 154, 161, 162, 164, 165, 166, 167, 169, 175, 176, 177, 179, 182, 185, 186, 189, 191, 192, 193, 196, 199, 200, 201, 202, 203, 205, 206, 207, 210, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 238, 239, 241, 242, 243, 244, 245, 246, 248, 250, 252, 255, 257, 260, 261, 263, 269, 270, 271, 277, 278, 280, 283, 284, 286, 287, 288, 289, 290, 294, 295], "pre": [5, 132, 252], "copi": [5, 6, 8, 39, 54, 112, 117, 271, 274, 290], "just": [5, 14, 24, 34, 37, 44, 63, 132, 145, 248, 251, 252, 269, 271, 274, 278], "wish": [5, 7, 14, 49, 248, 252, 271, 290], "again": [5, 14, 131, 135, 235, 248, 250, 252, 268, 290], "later": [5, 8, 17, 24, 34, 37, 44, 56, 132, 145, 248, 271, 272], "anticip": [5, 271], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 17, 38, 40, 43, 106, 119, 132, 235, 237, 244, 248, 249, 250, 252, 264, 265, 268, 269, 271, 272, 278, 284, 288, 289, 290, 294, 296], "delet": [5, 112, 117, 251, 252, 268, 290], "fresh": [5, 6, 250, 271], "sinc": [5, 14, 106, 127, 135, 238, 248, 250, 251, 252, 271, 283, 284, 286, 287, 289, 294], "rerun": [5, 252], "c": [5, 6, 112, 132, 248, 252, 273, 274, 275, 276, 277, 278, 282, 290, 295], "test_suit": [5, 110, 248], "build": [5, 6, 10, 13, 14, 71, 76, 128, 129, 130, 131, 133, 235, 245, 250, 251, 264, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278], "mpas_model": [5, 272], "overrid": [5, 13, 14, 42, 43, 46, 50, 56, 71, 74, 75, 76, 135, 160, 168, 188, 248, 250, 251, 271, 272, 278, 290], "baselin": [5, 6, 8, 10, 37, 40, 47, 111, 112, 117, 118, 135, 143, 219, 238, 241, 242, 243, 248, 249, 251, 267, 269, 271, 282, 290], "comparison": [5, 8, 17, 37, 47, 118, 248, 271, 272], "against": [5, 10, 40, 47, 118, 135, 143, 238, 241, 242, 243, 248, 267, 271, 282], "oppos": [5, 14, 29, 135, 137, 144, 157, 163, 174, 177, 181, 198, 212, 271], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 107], "wherea": [5, 12, 248, 269, 271, 282, 296], "typic": [5, 7, 9, 13, 14, 16, 17, 18, 37, 49, 108, 132, 135, 244, 245, 246, 248, 250, 252, 269, 271, 272, 277, 280, 288, 290, 296], "clone": [5, 6, 132, 235, 246, 252, 264, 271, 290], "pickl": [5, 8, 105, 106, 248, 271, 290], "latter": [5, 48, 132], "conveni": [5, 9, 16, 227, 233, 234, 244, 248, 271, 272, 284, 290, 296], "tab": [5, 290], "explicitli": [5, 7, 135, 238, 241, 242, 248, 252, 271, 272, 290], "select": [5, 8, 120, 248, 252, 271], "edit": [5, 7, 252, 271, 290], "steps_to_run": [5, 48, 108, 248, 250, 271, 272], "full_run": [5, 17, 267, 283, 293], "restart_run": [5, 17, 267, 283, 293], "Or": [5, 248, 272], "accomplish": [5, 248, 251], "thing": [5, 128, 129, 130, 131, 132, 133, 135, 244, 248, 251, 270, 295], "take": [5, 6, 7, 11, 13, 14, 56, 132, 135, 244, 248, 249, 250, 252, 271, 284, 295], "preced": [5, 56, 135], "over": [5, 9, 14, 56, 119, 248, 251, 270, 271, 280, 283, 288, 290], "intern": [5, 11, 24, 248, 252, 268], "shouldn": [5, 132, 219, 271], "special": [5, 269, 289], "databas": [5, 6, 8, 11, 16, 19, 24, 37, 39, 145, 248, 277], "polaris_cach": [5, 8, 19, 248], "structur": [5, 13, 30, 148, 247, 250, 270, 271], "without": [5, 39, 248, 251, 252, 271, 272, 276, 277, 286, 287, 289, 290], "redund": [5, 227, 233, 234, 238, 244, 271], "stamp": 5, "revis": [5, 272], "older": 5, "ones": [5, 227, 233, 234, 251, 271], "version": [5, 6, 15, 32, 56, 93, 118, 132, 235, 238, 244, 245, 246, 248, 250, 251, 252, 264, 270, 271, 272, 277, 278, 281, 283, 284, 290, 291], "updat": [5, 7, 8, 24, 26, 28, 33, 34, 43, 44, 114, 131, 132, 147, 219, 235, 238, 239, 241, 242, 248, 264, 268, 270, 271, 290], "cached_fil": [5, 19, 248], "json": [5, 8, 19, 54, 248, 278], "anvil": [5, 6, 132, 248, 272, 277, 290], "chrysali": [5, 6, 132, 248, 271, 272, 277, 290], "onto": [5, 252], "lcrc": [5, 6, 8, 11, 54, 248, 251, 272, 273, 275, 277, 290], "server": [5, 8, 39, 54, 248, 251, 272, 278], "d": [5, 18, 120, 193, 207, 227, 233, 234, 237, 248, 271, 288], "whose": [5, 45, 52, 248], "ocean_cached_fil": 5, "pr": [5, 6, 290, 295], "look": [5, 6, 7, 11, 17, 250, 251, 271, 272], "someth": [5, 7, 95, 99, 102, 132, 252, 271], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 16, 17, 18, 94, 135, 137, 143, 238, 248, 251, 271], "cellwidthvslatlon": [5, 13], "graph": [5, 24, 31, 33, 43, 84, 145, 238, 241, 242, 248, 271, 272], "info": [5, 12, 14, 24, 31, 84, 132, 145, 248, 271], "initial_st": [5, 17, 18, 135, 137, 238, 248, 271], "date_str": [5, 54], "let": [5, 248, 252, 269, 271, 272, 278], "string": [5, 9, 39, 98, 104, 132, 135, 150, 252], "choos": [5, 248, 251, 252, 271, 273, 274, 275, 276, 278, 296], "todai": [5, 54], "dry_run": [5, 54], "saniti": [5, 271], "check": [5, 6, 17, 118, 248, 252, 271, 272, 274, 278, 290, 295], "print": [5, 12, 17, 63, 118, 123, 248, 251, 295], "stdout": [5, 12, 37, 48, 248, 250], "translat": [5, 30, 135, 148], "convert": [5, 9, 13, 14, 135, 150, 248, 271], "namelist": [5, 7, 8, 10, 24, 25, 26, 29, 30, 32, 33, 36, 46, 112, 117, 126, 127, 145, 148, 149, 157, 160, 163, 168, 235, 238, 241, 242, 244, 245, 248, 250, 251, 264, 265, 267, 270, 271, 272, 288], "stream": [5, 7, 8, 10, 24, 27, 29, 32, 46, 121, 126, 127, 149, 157, 160, 163, 168, 235, 237, 238, 239, 241, 242, 243, 244, 245, 248, 250, 251, 264, 267, 272, 289, 294], "yaml": [5, 9, 10, 24, 25, 28, 29, 30, 132, 143, 145, 148, 149, 157, 163, 238, 239, 241, 242, 243, 244, 245, 248, 250, 270, 271, 274, 278], "e": [5, 6, 7, 9, 11, 14, 30, 37, 38, 50, 66, 121, 132, 135, 144, 148, 235, 244, 246, 248, 249, 251, 252, 264, 268, 269, 270, 271, 272, 278, 280, 283, 284, 286, 287, 288, 289, 290, 294, 296], "g": [5, 6, 7, 9, 11, 14, 30, 37, 38, 50, 66, 121, 132, 135, 144, 148, 235, 244, 246, 248, 249, 251, 252, 264, 268, 269, 270, 271, 272, 280, 283, 284, 286, 287, 288, 289, 290, 294], "don": [5, 6, 7, 14, 132, 135, 137, 141, 248, 250, 251, 252, 271, 276, 290, 296], "format": [5, 7, 11, 13, 14, 121, 127, 150, 249, 250, 252, 271, 272, 274], "note": [5, 7, 16, 17, 271, 278], "keyword": [5, 7, 14, 17, 18, 239, 248, 284], "top": [5, 18, 227, 228, 229, 230, 231, 232, 233, 234, 237, 246, 271, 280], "ignor": [5, 98, 104], "get": [5, 6, 7, 9, 11, 12, 14, 16, 24, 25, 26, 27, 28, 37, 48, 49, 55, 61, 69, 89, 100, 107, 132, 135, 139, 140, 145, 178, 244, 247, 248, 250, 251, 252, 269, 272, 280, 290], "pars": [5, 9, 14, 25, 26, 27, 28, 86, 113, 115], "valu": [5, 7, 9, 14, 17, 18, 25, 30, 118, 119, 120, 123, 137, 143, 148, 164, 184, 238, 245, 248, 250, 251, 270, 271, 272, 280, 283, 284, 288], "doesn": [5, 6, 127, 132, 248, 250, 271, 272, 277, 290], "matter": [5, 271], "usabl": 5, "try": [6, 14, 60, 132, 251, 252, 268, 271, 272, 274, 278, 290], "stai": [6, 252], "sync": 6, "mpi": [6, 14, 16, 94, 128, 131, 132, 145, 147, 149, 238, 241, 242, 248, 252, 268, 270, 271, 273, 274, 275, 276, 278, 290], "librari": [6, 14, 128, 132, 252, 271, 273, 274, 275, 276, 277, 278, 290], "netcdf": [6, 132, 137, 141, 151, 243, 272, 273, 274, 275, 276, 277, 278], "fortran": [6, 132, 273, 274, 275, 276, 277, 278], "pnetcdf": [6, 132, 273, 274, 275, 276, 277, 278], "mkl": [6, 132], "linear": [6, 18, 119, 120, 239, 241, 271, 283, 284, 286], "algebra": 6, "lib": [6, 132], "esmf": [6, 252, 290], "scorpio": [6, 252, 277, 290], "forg": [6, 132, 270, 290], "python": [6, 7, 8, 9, 25, 43, 50, 135, 244, 246, 248, 250, 251, 252, 269, 270, 271, 272, 277, 278, 290], "aren": [6, 11, 37, 38, 132, 248, 251, 252, 271, 295], "brief": [6, 7, 271], "tour": 6, "login": [6, 132, 252, 274, 278], "node": [6, 14, 24, 36, 37, 41, 44, 61, 89, 90, 91, 132, 145, 248, 249, 251, 252, 271, 272, 273, 274, 275, 276, 277, 278, 290], "bootstrap": 6, "rest": [6, 151, 232, 280, 284], "u": [6, 248, 271, 277, 278, 286, 287], "unifi": [6, 132, 252, 278], "diagnost": [6, 272, 273, 274, 276, 277, 278, 290], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 135, 248, 250, 251, 252, 271], "cach": [6, 19, 24, 37, 39, 111, 112, 145, 270, 272, 277, 282, 290, 295], "own": [6, 7, 8, 9, 11, 12, 18, 37, 132, 135, 248, 250, 251, 252, 269, 271, 272, 284, 290, 296], "config_machin": 6, "xml": [6, 14, 113, 115, 116, 127, 264], "ey": 6, "master": [6, 235, 264, 291], "happen": [6, 9, 12, 16, 106, 248, 271, 284], "me": [6, 271], "dev_quick_start": 6, "fork": [6, 271], "haven": [6, 271], "mkdir": [6, 252], "involv": [6, 14, 248, 269, 271], "coupl": [6, 268, 270], "alpha": [6, 128, 129, 130, 131, 132, 133, 271], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 17, 18, 37, 135, 244, 246, 248, 249, 250, 251, 252, 271, 272, 295, 296], "stand": 6, "omit": [6, 248, 290], "suffix": [6, 39, 112, 248], "onc": [6, 14, 40, 238, 252, 271, 272, 284, 290], "releas": [6, 132, 251, 270, 277, 281, 290], "spack_for_mache_1": 6, "12": [6, 13, 69, 267, 271, 274, 293], "worktre": [6, 270, 271], "my": [6, 132, 274], "fetch": [6, 252, 271], "out": [6, 8, 9, 13, 56, 88, 92, 120, 132, 143, 246, 248, 251, 252, 272, 280, 290], "checkout": [6, 252, 271], "mambaforg": [6, 252, 271, 277, 290], "manual": [6, 14, 48, 49, 248, 250, 296], "linux": [6, 132, 252, 277], "x86_64": [6, 132], "our": [6, 132, 251, 271, 290], "found": [6, 9, 14, 122, 132, 251, 252, 270, 271, 273, 274, 275, 276, 277, 278], "exist": [6, 7, 9, 30, 37, 40, 60, 113, 115, 117, 132, 148, 238, 248, 250, 251, 252, 268, 271, 277, 295], "miniconda3": [6, 252], "alwai": [6, 7, 9, 12, 56, 132, 135, 140, 178, 235, 245, 248, 250, 251, 252, 264, 269, 271, 272], "pleas": [6, 132, 245, 251, 252, 271, 290], "start": [6, 7, 8, 14, 114, 132, 237, 238, 244, 249, 250, 251, 270, 274, 277, 278, 281, 291, 293], "definit": [6, 14, 271], "defin": [6, 7, 8, 9, 13, 14, 15, 18, 37, 48, 74, 98, 104, 111, 112, 117, 132, 135, 176, 190, 204, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 256, 264, 265, 267, 269, 270, 272, 277, 280, 283, 284, 288, 295, 296], "export": [6, 268], "conda_bas": 6, "home": [6, 17, 132, 252, 271, 272, 274, 277, 278], "readi": [6, 271, 278], "configure_polaris_env": [6, 132, 252, 268, 271], "py": [6, 12, 14, 17, 66, 132, 244, 245, 251, 252, 269, 271, 272], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 132, 252], "tmpdir": [6, 132], "group": [6, 7, 244, 270, 273, 275, 277, 278, 289, 290, 296], "spack_temp": 6, "spack_test": 6, "intel": [6, 132, 277], "gnu": [6, 132, 252, 276, 277, 290], "openmpi": [6, 128, 132, 252, 270, 273, 275, 276, 290], "impi": [6, 128, 132, 273, 276], "recreat": [6, 250, 252, 268], "request": [6, 7, 14, 24, 31, 33, 132, 143, 145, 228, 229, 248, 250, 251, 252, 268, 271, 272, 284], "twice": [6, 271], "deploy": [6, 252], "prebootstrap": 6, "load": [6, 106, 129, 132, 133, 248, 252, 270, 271, 272, 273, 274, 275, 276, 277, 278], "activ": [6, 132, 277, 278, 290], "differ": [6, 14, 16, 17, 56, 71, 76, 118, 132, 135, 152, 155, 164, 235, 238, 244, 245, 246, 248, 249, 250, 251, 264, 269, 271, 272, 274, 278, 283, 284, 286, 287, 289, 294], "On": [6, 7, 13, 132, 252, 277], "tmp": [6, 132], "safe": [6, 14, 248, 252, 283], "strictli": [6, 13, 251, 271], "necessari": [6, 7, 13, 132, 271], "good": [6, 12, 37, 248, 252, 271], "idea": [6, 12, 271], "Be": [6, 278], "awar": [6, 7, 132, 271, 277], "with_petsc": [6, 252], "wa": [6, 8, 47, 58, 118, 132, 248, 250, 251, 252, 268, 269, 271, 272, 280, 290], "limit": [6, 249, 252, 283], "amount": [6, 24, 34, 37, 44, 145, 248, 279, 288], "team": [6, 132, 270], "petsc_support": 6, "txt": [6, 8, 117, 249, 268], "with_albani": [6, 252], "albany_support": 6, "encount": [6, 249, 268], "error": [6, 8, 37, 48, 132, 135, 138, 139, 141, 239, 241, 242, 248, 250, 252, 270, 271, 284, 286, 287], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 17, 29, 37, 48, 57, 157, 163, 181, 198, 212, 248, 250, 251, 252, 271, 272, 290, 295, 296], "attempt": [6, 132, 270, 277], "sh": [6, 128, 129, 130, 131, 132, 133, 252, 268, 271, 273, 274, 275, 276, 278, 290], "build_": 6, "command": [6, 10, 15, 35, 37, 43, 90, 91, 93, 101, 132, 248, 251, 252, 269, 270, 271, 274, 277, 278, 290], "pscratch": 6, "suggest": [6, 132, 268], "correctli": 6, "seem": [6, 14, 271, 274, 278], "switch": [6, 271, 272], "v0": 6, "19": 6, "submodul": [6, 235, 245, 252, 264, 271, 290], "serv": [6, 111, 112, 117, 135, 244, 271], "kind": [6, 271], "whichev": [6, 235, 264, 280], "load_dev_polaris_0": [6, 128, 129, 130, 131, 132, 133, 271], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 235, 251, 252, 264, 271, 290], "pio": [6, 24, 33, 36, 145, 238, 241, 242], "openmp": [6, 24, 34, 37, 44, 91, 128, 130, 131, 145, 155, 196, 210, 219, 248, 271, 273, 274, 275, 276, 278], "ifort": [6, 128, 130, 132, 271, 273, 275], "ac": [6, 271], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 271, 277, 290], "job_script": [6, 271, 290], "bash": [6, 252, 268, 271, 290], "termin": [6, 8, 132, 248, 252, 271], "isn": [6, 9, 239, 248, 251, 271], "ll": [6, 18, 132, 239, 251, 271, 278, 284], "warn": [6, 286, 287], "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 128, 130, 131, 132, 252, 273, 275], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 244, 248, 271, 280], "util": [6, 251, 287], "matrix": 6, "sever": [6, 12, 132, 135, 244, 248, 250, 251, 252, 270, 271, 289, 290, 295], "automat": [6, 7, 9, 12, 14, 18, 132, 135, 248, 251, 252, 271, 272, 273, 275, 276, 277, 278, 290], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 290], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 131, 132, 135, 248, 251, 271], "integr": [6, 135, 164, 238, 251, 271, 283, 284, 289, 294], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 274, 290], "245": 6, "246": 6, "non": [6, 14, 17, 237, 248, 271, 290], "care": [6, 11, 13, 135, 244, 248, 252, 271], "temporari": [6, 132], "begin": [6, 7, 17, 238, 248, 252, 265, 270, 271, 277, 283, 284, 288], "anymor": 6, "best": [6, 16, 132, 248, 252], "hard": [6, 248, 271, 283, 288], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 37, 48, 56, 62, 119, 120, 143, 248, 250, 271, 293], "myst": [7, 271], "tip": [7, 252], "easi": [7, 9, 39, 251, 271], "pull": [7, 132, 251, 252, 271, 272], "guid": [7, 135, 238, 239, 241, 242, 243, 249, 251, 271, 274, 277, 281, 291], "baroclin": [7, 9, 14, 152, 153, 154, 155, 158, 161, 164, 166, 169, 170, 172, 219, 238, 245, 248, 271, 281, 285, 296], "channel": [7, 9, 14, 152, 153, 154, 155, 158, 161, 164, 166, 169, 170, 172, 219, 238, 245, 248, 268, 271, 281, 285, 296], "label": [7, 119, 277, 290], "prepend": 7, "categori": [7, 245, 246, 247, 270, 296], "uniqu": [7, 14, 132, 250, 271], "And": [7, 14, 252, 271], "becom": [7, 248, 250, 271], "who": [7, 252, 271, 272, 278], "citat": 7, "basi": [7, 271], "overview": [7, 270, 274, 278], "common": [7, 12, 14, 43, 48, 132, 238, 239, 241, 242, 243, 244, 248, 249, 250, 251, 268, 269, 271, 272, 277, 278, 289, 290, 294, 295, 296], "characterist": [7, 289, 294], "comment": [7, 249, 272], "appli": [7, 13, 14, 63, 237, 244, 271, 283, 288, 289, 294], "vertic": [7, 18, 140, 178, 218, 237, 238, 239, 241, 242, 243, 248, 272, 279, 281], "grid": [7, 13, 16, 68, 75, 79, 82, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 135, 185, 225, 226, 227, 228, 229, 230, 233, 234, 238, 239, 241, 242, 243, 248, 265, 271, 272], "forc": [7, 243, 267, 271, 296], "specif": [7, 9, 14, 50, 132, 135, 235, 244, 245, 246, 248, 264, 265, 270, 271, 272, 274, 277, 283, 289, 290, 294, 295], "public": [7, 11, 248, 271, 272], "api": [7, 12, 270, 271], "underscor": [7, 271], "md": [7, 271], "eval": 7, "rst": [7, 14, 271], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 245, 251], "compute_cell_count": [7, 135, 238, 241, 242, 271], "dynamic_model_config": [7, 14, 238, 241, 242, 271], "ot": [7, 271], "numpydoc": [7, 271], "text": [7, 8, 283, 284, 288], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 135, 227, 229, 230, 231, 232, 233, 234, 235, 241, 242, 248, 271, 272, 274, 278, 286, 287], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 235, 272, 286, 287], "overli": [7, 271], "ic": [7, 135, 235, 250, 251, 252, 265, 267, 270, 271, 272, 274, 280, 293, 296], "shelf": [7, 135, 244, 251, 271, 272, 280], "draft": [7, 280], "paramet": [7, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 44, 45, 48, 49, 51, 52, 54, 56, 58, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 79, 80, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 135, 137, 138, 139, 140, 141, 143, 144, 145, 148, 150, 151, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 174, 177, 178, 179, 181, 182, 184, 185, 187, 189, 191, 193, 194, 195, 196, 198, 199, 201, 203, 205, 207, 208, 209, 210, 212, 213, 215, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 244, 248, 250, 256, 257, 258, 260, 261, 262, 283, 284, 286, 287, 288], "xarrai": [7, 16, 18, 120, 140, 178, 227, 228, 229, 230, 231, 232, 233, 234, 248, 271], "dataarrai": [7, 140, 178, 193, 194, 195, 207, 208, 209, 228, 229, 230, 231, 232], "sea": [7, 135, 193, 195, 207, 209, 229, 230, 231, 232, 235, 265, 267, 270, 271, 272, 280, 286, 287, 293, 296], "surfac": [7, 135, 193, 195, 207, 209, 229, 230, 231, 232, 235, 237, 243, 267, 271, 272, 280, 283, 286, 287, 288], "height": [7, 135, 193, 195, 207, 209, 229, 230, 231, 232, 235, 271, 272, 280, 286, 287], "mask": [7, 227, 230, 233, 234, 248, 271, 272, 280], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 25, 67, 69, 70, 74, 79, 99, 118, 120, 135, 137, 138, 139, 140, 143, 144, 150, 153, 154, 155, 158, 161, 164, 166, 169, 174, 177, 178, 179, 184, 191, 193, 194, 195, 196, 199, 201, 203, 205, 207, 208, 209, 210, 213, 215, 219, 248, 250, 271], "densiti": [7, 13, 135, 271], "seawat": 7, "displac": 7, "land": [7, 135, 235, 250, 270, 271, 272, 280], "landicedraft": 7, "equal": [7, 243, 248, 251, 288], "entri": [7, 53, 87, 112], "line": [7, 10, 35, 37, 90, 91, 101, 132, 248, 249, 251, 252, 270, 290], "type": [7, 14, 16, 17, 18, 25, 96, 103, 127, 132, 135, 138, 184, 218, 220, 239, 244, 248, 250, 251, 252, 264, 268, 269, 271, 272, 283, 284, 286, 287, 288, 289, 295], "side": 7, "colon": 7, "doubl": [7, 14, 135, 248, 249, 271], "back": [7, 271, 274, 290], "quot": 7, "interfer": 7, "arg": [7, 12, 37, 90, 91, 248], "next": [7, 132, 238, 242, 271, 280, 290], "indent": [7, 248], "obviou": [7, 14, 271], "none": [7, 9, 14, 17, 24, 27, 28, 34, 37, 38, 39, 40, 44, 45, 48, 49, 52, 54, 56, 58, 62, 63, 65, 67, 74, 80, 84, 93, 94, 95, 98, 99, 102, 104, 108, 112, 113, 117, 118, 119, 120, 122, 126, 135, 137, 138, 139, 140, 141, 143, 145, 146, 150, 155, 156, 178, 180, 196, 197, 207, 210, 211, 219, 248, 250, 260, 271, 280, 283, 284, 286, 287, 288, 289, 293], "els": [7, 8, 132, 248, 250, 271], "further": [7, 244, 250, 278, 289, 294], "rais": [7, 9, 17, 37, 40, 58, 60, 135, 248, 251, 271], "list_cas": 8, "list_machin": [8, 251], "list_suit": 8, "anywher": [8, 12, 132, 252], "object": [8, 12, 16, 23, 26, 27, 28, 49, 51, 86, 105, 106, 109, 113, 121, 122, 126, 127, 143, 193, 207, 245, 250, 251, 271], "contrast": 8, "read": [8, 19, 26, 27, 28, 37, 38, 48, 59, 85, 86, 121, 237, 248, 250, 271], "properti": [8, 237, 248, 277, 284], "setup_suit": 8, "write": [8, 12, 13, 15, 18, 105, 121, 226, 248, 250, 252, 267, 271], "proven": [8, 10, 56, 270, 272], "save": [8, 18, 58, 82, 132, 238, 239, 244, 248, 250, 271, 277, 282, 283], "target": [8, 11, 16, 17, 24, 39, 60, 62, 94, 132, 135, 145, 238, 241, 242, 248, 250, 271, 284], "minimum": [8, 62, 120, 135, 139, 145, 238, 241, 242, 248, 271, 272, 280, 283, 284, 286, 287, 288, 289, 294], "determin": [8, 9, 13, 14, 18, 39, 43, 127, 132, 135, 149, 238, 239, 241, 242, 248, 271, 280, 283, 284, 286, 287, 289, 290, 294], "maximum": [8, 17, 118, 120, 184, 271, 272, 280], "product": 8, "ntask": [8, 9, 14, 16, 24, 34, 37, 41, 44, 90, 91, 94, 135, 145, 155, 196, 210, 219, 248, 250, 271], "cpus_per_task": [8, 14, 37, 41, 44, 90, 91, 248], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 271, 280, 283, 284, 286, 287, 288, 289], "min_task": [8, 9, 14, 16, 24, 34, 37, 44, 90, 91, 94, 135, 145, 155, 196, 210, 219, 248, 271], "min_cpus_per_task": [8, 14, 37, 44, 90, 91, 248], "fewest": 8, "least": [8, 13, 245, 252, 283], "fail": [8, 14, 17, 24, 34, 37, 44, 58, 132, 135, 145, 155, 196, 210, 219, 248, 270, 271, 272, 284, 286, 287], "run_task": [8, 248, 250], "run_single_step": 8, "oper": [8, 46, 132, 160, 168, 248, 250, 295], "log": [8, 10, 18, 37, 48, 91, 118, 119, 120, 248, 250, 252, 270, 290], "figur": [8, 243, 244, 246, 248, 272], "cpu": [8, 132, 248, 271, 290], "method": [8, 9, 13, 14, 16, 17, 19, 24, 29, 30, 37, 38, 42, 43, 48, 49, 50, 56, 57, 66, 67, 71, 74, 75, 76, 80, 81, 94, 100, 121, 135, 136, 137, 139, 140, 143, 145, 148, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 174, 177, 178, 179, 181, 182, 185, 187, 188, 189, 191, 193, 196, 198, 199, 201, 203, 204, 205, 207, 210, 212, 213, 215, 218, 219, 220, 221, 223, 239, 241, 242, 245, 248, 250, 251, 255, 257, 258, 260, 261, 262, 271, 284, 289, 294], "retriev": [8, 268], "store": [8, 50, 132, 135, 241, 242, 248, 271, 290], "case_output": [8, 12], "individu": [8, 9, 18, 245, 250, 251, 271, 277, 278, 283, 290, 296], "overal": 8, "whole": [8, 48, 151, 244, 250, 251, 271, 290], "window": 8, "update_cach": 8, "_cached_fil": [8, 248], "origin": [8, 54, 252, 271, 290], "enabl": [8, 18, 243, 248, 268, 272, 278, 286, 287], "consum": [8, 248, 250, 271, 295], "faster": [8, 252], "parser": [9, 45, 52, 56, 164, 174], "mpas_tool": [9, 12, 13, 79, 238, 241, 242, 243, 248, 250, 271], "mpasconfigpars": [9, 248, 250], "polarisconfigpars": [9, 20, 37, 45, 48, 52, 58, 61, 62, 89, 92, 93, 109, 119, 135, 164, 174, 193, 207, 225, 227, 228, 229, 233, 234, 271], "certain": [9, 17, 56, 132, 248, 252, 272, 289, 294], "filepath": [9, 45, 52, 56, 135], "overridden": [9, 30, 57, 135, 148, 271], "algorithm": [9, 14, 135, 219, 238, 241, 242, 248, 271], "featur": [9, 14, 251, 252, 269, 271, 272, 283, 288], "accommod": [9, 24, 34, 37, 44, 90, 91, 145], "add_from_packag": [9, 135, 248, 250, 251, 271], "content": [9, 14, 112, 113, 115, 117, 127, 135, 244, 246, 248, 251, 267, 271, 290, 293], "inertial_gravity_wav": [9, 235, 240, 245, 250, 286, 295], "inertialgravitywav": [9, 241, 250], "import": [9, 11, 12, 13, 16, 17, 18, 135, 244, 245, 248, 250, 251, 252, 269, 271], "__init__": [9, 16, 17, 19, 24, 37, 48, 56, 66, 67, 74, 80, 94, 121, 135, 136, 137, 143, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 185, 187, 189, 191, 193, 196, 199, 201, 203, 205, 207, 210, 213, 215, 218, 219, 220, 221, 223, 244, 245, 248, 250, 251, 255, 257, 258, 260, 261, 262, 269, 271], "super": [9, 14, 16, 17, 135, 245, 248, 250, 251, 271], "cfg": [9, 50, 135, 245, 250, 251, 271, 272, 290], "except": [9, 37, 40, 58, 248, 251, 271], "behavior": [9, 14, 108, 248, 249, 252, 271], "noth": [9, 132, 268, 284], "particular": [9, 132, 244, 252, 270, 274, 277, 290], "fine": [9, 250, 271, 288], "_get_basic_config": 9, "larg": [9, 248, 250, 271, 273], "those": [9, 14, 48, 118, 132, 135, 238, 250, 251, 252, 270, 271, 284, 289, 294, 295], "configpars": [9, 90, 91], "getinteg": 9, "getfloat": [9, 12, 14, 16, 135, 248, 271], "getboolean": [9, 248, 271], "implement": [9, 245, 248, 251, 283, 284, 286, 287], "getlist": [9, 250, 271], "comma": [9, 284], "integ": [9, 13], "boolean": [9, 120, 230], "etc": [9, 14, 114, 117, 245, 248, 283], "getexpress": 9, "tupl": 9, "rang": [9, 120, 271, 284], "numpi": [9, 13, 68, 75, 76, 82, 119, 135, 151, 225, 226, 248, 271], "linspac": [9, 18, 239, 284], "arang": 9, "arrai": [9, 68, 75, 76, 82, 119, 135, 225, 226, 228, 229, 230, 231, 271], "sens": [9, 270, 271], "set_shared_config": [9, 250], "intuit": 9, "resolution_to_subdir": [9, 245], "rpe": [9, 172, 245, 251, 271, 290], "resdir": [9, 245], "config_filenam": [9, 37, 48, 109, 248, 250], "indir": [9, 24, 37, 48, 94, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 219, 221, 223, 245, 248, 258, 260, 262], "add_task": [9, 244, 245], "most": [9, 12, 43, 132, 235, 244, 245, 248, 251, 252, 264, 271, 272, 277, 278, 280, 281, 291, 296], "construct": [9, 14, 136, 225, 227, 228, 229, 233, 234, 237, 243, 245, 250, 255, 271, 283], "bring": [9, 135, 271], "add_step": [9, 250, 271], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 155, 166, 238, 248, 271], "baroclinic_channel_rp": 9, "viscos": [9, 14, 155, 164, 166, 238, 248, 251, 271, 283], "dtype": [9, 250, 271], "nu_": 9, "openmp_thread": [9, 14, 24, 34, 37, 44, 91, 145, 155, 196, 210, 219, 248, 250, 271], "add_yaml_fil": [9, 14, 24, 135, 248, 250, 271], "One": [9, 13, 271, 290, 295], "advantag": [9, 14, 132, 250, 251, 271, 277], "track": [9, 24, 248, 250, 252], "associ": [9, 13, 14, 18, 135, 227, 233, 234, 238, 248, 250, 252, 269], "while": [10, 16, 18, 237, 238, 248, 268, 271], "meant": [10, 251, 272], "simplifi": 10, "verifi": [10, 249, 272], "io": [10, 248, 250, 251, 270, 271, 272, 281, 291], "lot": [11, 135, 248, 251, 271], "o": [11, 12, 113, 115, 127, 132, 251, 252, 271, 272, 290], "handl": [11, 12, 252, 271, 277], "lower": [11, 250, 271, 283], "directli": [11, 13, 14, 16, 37, 246, 248, 251, 269, 270, 271, 274], "readm": [11, 250], "importlib": 11, "resourc": [11, 14, 34, 41, 44, 59, 89, 90, 91, 146, 156, 180, 197, 211, 219, 238, 241, 242, 248, 250, 271], "global_ocean": [11, 14, 248, 250, 251, 252, 272, 290], "files_for_e3sm": [11, 248, 250, 272], "str": [11, 14, 19, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 45, 48, 49, 52, 54, 56, 58, 60, 61, 62, 63, 67, 74, 80, 84, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 124, 126, 127, 135, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 177, 178, 179, 182, 185, 187, 191, 196, 199, 201, 205, 210, 213, 215, 219, 221, 223, 226, 248, 250, 258, 260, 262, 271], "did": [11, 269, 271], "add_input_fil": [11, 16, 17, 38, 248, 250, 271], "collect": [11, 97, 136, 245, 247, 255, 269, 271], "whenev": [11, 248, 271], "flexibl": [11, 135, 248, 250, 252, 271], "No": [11, 270, 286, 287], "step_dir": 11, "database_root": [11, 132, 248, 272, 273, 274, 275, 276, 277, 278, 290], "download_path": 11, "join": [11, 271], "bathymetry_databas": [11, 248, 272], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 230, 244, 248, 271, 280, 283, 284, 286, 287, 288, 289, 296], "url": [11, 39, 58, 248, 268, 272], "web": [11, 248, 272], "anl": [11, 248, 272], "gov": [11, 248, 268, 272, 274, 278], "mpas_standalonedata": [11, 132, 272, 277], "dest_path": [11, 58], "remot": [11, 39, 252, 270], "bathymetri": [11, 248, 272], "strategi": 12, "stderr": [12, 37, 48, 248, 250], "loggingcontext": 12, "check_cal": [12, 248], "won": [12, 251, 271, 272], "logger": [12, 17, 37, 48, 66, 91, 118, 248, 250, 271], "full": [12, 37, 90, 108, 228, 229, 238, 248, 250, 252, 267, 270, 271, 277, 280, 282, 283, 284, 286, 287, 288, 289, 290], "although": [12, 135], "captur": 12, "explicit": [12, 251], "go": [12, 45, 52, 221, 223, 244, 248, 250, 251, 252, 271, 278], "subprocess": [12, 37, 90, 91, 107, 248, 251, 268], "produc": [12, 14, 16, 18, 37, 38, 40, 54, 135, 141, 153, 161, 169, 238, 239, 241, 242, 243, 248, 251, 252, 257, 267, 271, 286, 287, 290, 293], "otherwis": [12, 132, 248, 250, 271, 273, 274, 275, 276, 277, 278, 283], "intent": 12, "desir": [12, 13, 14, 17, 18, 118, 135, 248, 249, 250, 271, 272, 290], "trick": [12, 248], "direct": [12, 13, 14, 79, 193, 207, 238, 241, 242, 271, 278, 283, 286, 287], "snippet": [12, 271], "dome": [12, 66, 244, 248, 250, 290, 296], "setup_mesh": [12, 248], "setupmesh": [12, 248, 250], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 248], "landice_grid": [12, 248, 271], "l": [12, 118, 271, 278], "quasiuniformsphericalmeshstep": [13, 135, 250], "icosahedralmeshstep": [13, 135, 250], "jigsaw": [13, 67, 71, 73, 74, 76, 78, 80, 135, 137, 174, 177, 248], "complex": [13, 75, 250, 251, 271], "build_cell_width_lat_lon": [13, 74], "opt": [13, 80], "make_jigsaw_mesh": [13, 74], "icosahedr": [13, 67, 69, 137, 144, 174, 177, 239, 250, 284], "significantli": [13, 280], "smooth": 13, "cell": [13, 14, 18, 67, 68, 69, 70, 74, 75, 76, 79, 82, 96, 103, 135, 145, 146, 156, 180, 193, 195, 197, 207, 209, 211, 227, 228, 229, 230, 233, 234, 238, 241, 242, 244, 265, 280, 283, 284, 286, 287, 288, 289, 293], "quasi": [13, 74, 239, 250, 272, 284, 289, 294], "hand": [13, 99, 251], "restrict": [13, 271, 289], "subdivis": [13, 67, 68, 69, 70, 71], "icosahedron": [13, 68, 69, 70, 71], "tabl": [13, 252, 277, 290], "approxim": [13, 67, 69, 70, 74, 135, 146, 156, 180, 197, 211, 238, 241, 242, 252, 271], "width": [13, 67, 68, 69, 74, 75, 76, 82, 271, 283], "km": [13, 14, 67, 68, 69, 70, 74, 75, 76, 79, 82, 135, 143, 144, 153, 154, 155, 158, 161, 162, 164, 166, 169, 179, 196, 199, 203, 210, 213, 238, 239, 241, 242, 248, 271, 272, 283, 284, 286, 287, 288, 289, 294, 296], "5": [13, 14, 69, 132, 135, 164, 238, 239, 248, 249, 251, 268, 271, 272, 283, 284, 289, 290, 294], "240": [13, 69, 135, 239, 272, 284], "6": [13, 69, 248, 271, 281, 283, 288, 290, 291], "120": [13, 69, 135, 249, 284], "7": [13, 69, 132, 271, 278, 284, 290], "60": [13, 69, 135, 239, 280, 284], "8": [13, 69, 132, 238, 252, 271, 272, 283, 284, 286, 287, 290], "30": [13, 14, 69, 135, 244, 271, 278, 283, 288, 289, 294], "9": [13, 18, 69, 132, 239, 271, 284, 290], "15": [13, 14, 69, 238, 271, 283, 284, 288, 289, 290, 294], "11": [13, 69, 132, 271, 290], "3": [13, 69, 132, 135, 238, 248, 249, 252, 268, 271, 272, 277, 278, 280, 283, 284, 286, 287, 289, 290], "13": [13, 69, 271, 283], "94": [13, 69], "spherical_mesh": [13, 75], "cell_width": [13, 67, 68, 69, 70, 74, 75, 76, 82], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 82, 119, 120, 135, 137, 141, 166, 172, 185, 223, 238, 239, 241, 242, 262, 284, 286, 287, 293, 296], "plot_cell_width": 13, "cell_width_filenam": [13, 82], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": 13, "lat": [13, 16, 68, 74, 75, 76, 82, 95, 97, 99, 102, 119, 185, 239, 272, 284], "lon": [13, 16, 68, 74, 75, 76, 82, 95, 97, 99, 102, 119, 185, 239, 272, 284], "sphere": [13, 239, 284], "vtk_lat_lon": 13, "far": [13, 132, 227, 233, 234, 251, 271], "But": [13, 132, 244, 248, 251, 252, 271, 272, 277], "hexagon": [13, 79, 271, 286, 287], "planar_hex": [13, 79, 238, 241, 242, 243, 248, 271], "make_planar_hex_mesh": [13, 79, 238, 241, 242, 243, 248, 271], "x": [13, 18, 68, 75, 76, 79, 82, 98, 104, 120, 151, 193, 207, 248, 271, 283, 286, 287, 288], "y": [13, 14, 18, 79, 98, 104, 120, 193, 207, 238, 241, 242, 248, 271, 278, 283, 286, 287], "nx": [13, 79, 244, 248, 271, 288], "ny": [13, 79, 244, 248, 271, 288], "dc": [13, 244, 248, 271], "distanc": [13, 79, 184, 271, 283], "adjac": [13, 280], "center": [13, 18, 79, 184, 193, 207, 244, 271, 280, 283], "admittedli": 13, "oddli": 13, "period": [13, 237, 238, 241, 242, 248, 271, 283, 284, 286, 287], "nonperiodic_x": [13, 248, 271], "nonperiodic_i": [13, 248, 271], "consider": [13, 227, 233, 234, 237, 265], "compute_planar_hex_nx_ni": [13, 248, 271], "lx": [13, 79, 248, 271, 283, 286, 287, 288], "ly": [13, 79, 248, 271, 283, 288], "explan": 13, "subtleti": 13, "account": [13, 79, 252, 271, 273, 274, 276, 277, 278, 290], "behav": 13, "stagger": [13, 79], "physic": [13, 79, 261, 267, 271], "np": [13, 18, 184, 239, 248, 271, 284], "sqrt": [13, 286], "domain": [13, 24, 31, 79, 120, 135, 145, 151, 237, 244, 265, 271, 283, 284, 286, 287, 288, 289, 294, 296], "extra": [13, 252], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 248, 271], "max": [13, 135, 248, 271, 283, 284], "int": [13, 14, 24, 25, 34, 37, 44, 61, 62, 63, 67, 68, 69, 70, 71, 79, 90, 91, 94, 120, 137, 138, 140, 141, 145, 146, 155, 156, 178, 180, 196, 197, 210, 211, 219, 248, 271, 288], "ds_mesh": [13, 18, 120, 248, 271], "creation": [13, 248, 272], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 24, 34, 37, 44, 90, 91, 145, 244, 248, 251, 271], "distant": 13, "descend": [14, 16, 135, 239, 244, 245, 248, 250, 251, 271], "modelstep": [14, 135, 248, 250, 271], "update_pio": [14, 24, 145], "make_graph": [14, 24, 145], "At": [14, 37, 48, 246, 247, 250, 271], "set_model_resourc": 14, "thread": [14, 24, 34, 37, 43, 44, 48, 91, 145, 155, 196, 210, 219, 245, 248, 249, 269, 271, 272, 274, 278, 290, 295], "prefix": [14, 39, 132, 135, 140, 178, 250, 252, 272], "end": [14, 143, 248, 250, 251, 252, 267, 269, 271, 274, 283, 284, 286, 287, 288, 293], "yml": 14, "reason": [14, 16, 43, 132, 248, 251, 271, 295], "add_namelist_fil": [14, 24, 135, 248, 250], "add_model_config_opt": [14, 24, 135, 248, 250, 271], "add_streams_fil": [14, 24, 135, 248, 250], "themselv": [14, 251, 270], "question": [14, 248, 272], "never": [14, 132, 269], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 135, 271], "config_run_dur": [14, 135, 250, 271], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 48, 153, 269, 271], "config_block_decomp_file_prefix": [14, 271], "time_integr": [14, 135, 271, 284], "config_time_integr": [14, 135], "rk4": [14, 135, 251, 284], "filename_templ": [14, 135, 271], "restart": [14, 17, 48, 135, 239, 241, 242, 243, 245, 249, 251, 257, 258, 267, 269, 271, 290, 295], "output_interv": [14, 135, 271, 284], "0030_00": 14, "clobber_mod": [14, 135, 271], "truncat": [14, 135, 271], "reference_tim": [14, 135], "0001": [14, 135, 271], "01_00": [14, 135, 265, 271], "tracer": [14, 18, 174, 220, 221, 223, 238, 239, 241, 242, 243, 271, 284, 286, 287, 288], "xtime": [14, 135, 271], "normalveloc": [14, 17, 18, 135, 171, 208, 237, 238, 241, 242, 243, 248, 271, 288], "layerthick": [14, 17, 135, 171, 227, 231, 232, 233, 234, 238, 241, 242, 243, 248, 271], "refzmid": [14, 227, 233, 234, 248, 271], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 271], "clariti": [14, 248], "global_converg": [14, 239, 250, 271, 282], "substitut": 14, "config_write_output_on_startup": [14, 271], "0000_00": [14, 271], "config_use_mom_del2": [14, 271], "config_implicit_bottom_drag_coeff": [14, 271], "0e": [14, 287, 288], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 271], "config_cvmix_background_viscos": [14, 271], "worri": 14, "sometim": [14, 227, 233, 234, 244, 246, 248, 250, 269, 271, 295], "togeth": [14, 17, 132, 244, 269, 271, 295], "overkil": 14, "reli": [14, 248, 250, 271], "along": [14, 18, 132, 238, 248, 270, 271], "dict": [14, 19, 25, 27, 28, 30, 37, 41, 48, 86, 87, 89, 93, 94, 110, 112, 113, 119, 121, 122, 123, 135, 137, 143, 148, 177, 248, 250, 271], "config_mom_del2": [14, 238, 248, 271], "precis": [14, 135, 248, 271], "bool": [14, 24, 25, 29, 37, 39, 47, 48, 49, 54, 58, 60, 63, 107, 108, 112, 117, 118, 119, 123, 135, 137, 144, 145, 157, 163, 174, 177, 181, 198, 212, 219, 221, 223, 271], "possibli": [14, 37, 48, 245, 248, 250, 252, 271], "at_setup": [14, 29, 157, 163, 181, 198, 212, 271], "being": [14, 29, 37, 48, 107, 112, 118, 132, 135, 157, 163, 181, 198, 212, 248, 250, 251, 252, 271, 280], "dt": [14, 135, 155, 219, 248, 271, 283, 284, 286, 287, 289, 294], "proport": [14, 135, 271, 280, 283, 284, 286, 287, 289, 294], "dt_per_km": [14, 135, 239, 271, 283, 286, 287, 289, 294], "stackoverflow": [14, 60, 271], "1384565": [14, 271], "7728169": [14, 60, 271], "config_dt": [14, 135, 271], "strftime": [14, 271], "gmtime": [14, 271], "run_time_step": [14, 155, 248, 271], "durat": [14, 135, 238, 241, 242, 243, 249, 271], "run_second": [14, 271], "btr_dt": [14, 135, 155, 219, 248, 271, 283], "btr_dt_per_km": [14, 135, 271, 283], "config_btr_dt": [14, 135, 271], "bit": [14, 132, 251, 269, 271, 283, 290], "complic": [14, 251, 252, 271], "slightli": [14, 252], "sophist": 14, "immutable_stream": [14, 271], "var_struct": [14, 264], "var": [14, 114, 264, 271], "var_arrai": [14, 264], "tag": [14, 270], "taken": [14, 24, 145, 239, 248, 271, 278, 290], "past": 14, "experi": [14, 132, 251, 280], "difficult": [14, 132, 277], "synchron": [14, 270], "out_nam": 14, "equival": [14, 252, 271, 273], "template_replac": [14, 27, 28, 135], "treat": [14, 249, 251], "jinja2": [14, 27, 28, 113, 143], "render": [14, 27, 28, 113], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 248, 251, 252, 272, 290], "qu240dynamicadjust": 14, "adjust": [14, 132, 135, 235, 272], "interv": [14, 150, 284], "spin": 14, "reus": [14, 248, 251, 252, 271, 272, 290], "qualit": 14, "forgotten": 14, "broken": [14, 248, 251], "immedi": [14, 66, 252, 271], "miss": [14, 248, 271, 272], "detect": [14, 18, 272, 273, 275, 276, 277, 290], "gpmeti": [14, 272], "divid": [14, 280], "partition_graph": [14, 24, 145], "circumst": [14, 17, 37, 38, 248, 271], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 268, 271, 289, 294], "v1": [14, 280], "better": [14, 16, 132, 290], "v2": [14, 272, 280], "littl": [14, 251, 252, 270, 271], "feel": [14, 132, 248, 271], "runtime_setup": [14, 16, 34, 44, 238, 241, 242, 250], "yourself": [14, 271, 277], "culler": 14, "cull": [14, 238, 241, 242, 248, 271], "model_step": 14, "make_graph_fil": 14, "field": [14, 17, 82, 84, 120, 135, 138, 139, 140, 178, 185, 227, 233, 234, 237, 238, 241, 242, 243, 271, 283, 284, 286, 287], "weight": [14, 16, 84, 227, 233, 234, 271, 280], "weight_field": [14, 84], "frequent": [16, 235, 264], "observ": [16, 270], "dataset": [16, 120, 193, 207, 227, 233, 234, 248, 271], "region": [16, 18, 270, 272], "pyremap": [16, 100], "interpol": [16, 94, 239, 272], "hood": 16, "esmf_regridweightgen": 16, "mappingfilestep": [16, 18], "woa": 16, "mytestcas": 16, "__int__": 16, "make_map": 16, "64": [16, 280], "bilinear": [16, 94, 239, 284, 289, 294], "filenam": [16, 17, 37, 39, 40, 48, 88, 95, 96, 97, 98, 102, 103, 104, 109, 118, 122, 124, 248, 250, 252, 271], "woa23_decav_0": 16, "25_extrap": 16, "20230414": 16, "initial_condition_databas": [16, 272], "destin": [16, 94, 95, 96, 97, 98, 99, 100], "src_from_lon_lat": 16, "lon_var": [16, 95, 97, 102], "lat_var": [16, 95, 97, 102], "dst_from_mpa": 16, "mesh_nam": [16, 95, 96, 97, 98, 99, 102, 103, 104, 138, 140, 144, 178, 185, 187, 250], "qu60": 16, "subclass": [16, 71, 74, 75, 76, 81, 135, 271], "src_": 16, "dst_": 16, "pick": [16, 105, 106], "vizmap": [16, 174, 185, 239, 250], "128": [16, 249, 274, 275, 278], "cosine_bell_viz": [16, 18, 239, 284, 289, 294], "dlon": [16, 99, 239, 284, 289, 294], "dlat": [16, 99, 239, 284, 289, 294], "remap_method": [16, 239, 284, 289, 294], "src_from_mpa": 16, "dst_global_lon_lat": 16, "lon_min": [16, 99], "With": [16, 252], "approach": [16, 248, 251, 252, 268, 271, 280], "perhap": [16, 18, 40, 244, 246], "cover": [16, 265, 271], "nearli": [16, 248, 250, 269, 270, 271], "workflow": [16, 248, 252], "critic": [17, 271], "easiest": [17, 132, 252], "validate_var": [17, 37, 40, 135, 143, 219, 248], "meth": 17, "add_output_fil": [17, 38, 248, 250, 271], "temperatur": [17, 171, 237, 238, 242, 243, 248, 267, 271, 283, 284, 288, 289, 294], "salin": [17, 171, 237, 238, 243, 248, 271, 283, 284, 288, 289, 294], "done": [17, 34, 44, 248, 250, 252, 271, 290], "compare_vari": [17, 271], "filename1": [17, 118, 271], "filename2": [17, 118, 271], "compact": [17, 271], "output_full_run": 17, "output_restart_run": 17, "all_pass": [17, 118], "valueerror": [17, 251], "quiet": [17, 107, 108, 118, 123], "report": 17, "threshold": [17, 135, 284, 286, 287], "l1": [17, 118], "00000000000000e": 17, "l2": [17, 118, 135, 138, 139, 239, 284], "l_infin": 17, "linf": [17, 118], "test_nightly_latest": 17, "threads_test": 17, "1thread": [17, 238, 283], "2thread": [17, 283], "test_20210616": 17, "further_valid": 17, "zero": [17, 228, 229, 230, 231, 232, 237, 238, 243, 271, 284, 288], "l1_norm": [17, 118], "l2_norm": [17, 118], "linf_norm": [17, 118], "nonzero": [17, 118], "solut": [17, 131, 138, 140, 178, 193, 194, 195, 203, 204, 205, 207, 208, 209, 210, 213, 215, 239, 241, 242, 249, 268, 271, 281, 285, 286], "aspect": [18, 271], "routin": 18, "plot_horiz_field": [18, 248, 271], "patch": [18, 120, 271], "style": [18, 135, 270, 271], "edg": [18, 96, 99, 103, 120, 193, 194, 207, 208, 237, 271], "polygon": 18, "character": 18, "accordingli": [18, 92], "final_normalveloc": [18, 271], "t_index": [18, 120, 271], "vmin": [18, 120, 239, 271, 284], "max_veloc": [18, 271], "vmax": [18, 120, 239, 271, 284], "cmap": [18, 120, 248, 271], "cmo": [18, 248, 271], "balanc": [18, 248, 271], "show_patch_edg": [18, 120, 248, 271], "globe": [18, 284], "plot_glob": 18, "plot_land": [18, 119], "disabl": [18, 237, 284, 296], "contin": [18, 119], "overlain": 18, "cmocean": [18, 248, 271], "noqa": [18, 66, 248, 271], "f401": [18, 248, 271], "xr": [18, 193, 194, 195, 207, 208, 209, 248, 271], "open_dataset": [18, 248, 271], "tracer1": [18, 135], "isel": 18, "nvertlevel": [18, 120, 137, 141, 227, 233, 234, 248, 271, 280], "out_filenam": [18, 116, 119, 226], "colormap_sect": [18, 119], "titl": [18, 119, 120, 135, 137, 141], "colormap": [18, 119, 120, 239, 271, 284], "cosin": [18, 135, 174, 176, 177, 179, 182, 184, 185, 187, 239, 250, 271, 281, 282, 285, 289, 294], "bell": [18, 135, 174, 176, 177, 179, 182, 184, 185, 187, 239, 250, 271, 281, 282, 285, 289, 294], "converg": [18, 174, 178, 189, 190, 203, 204, 239, 241, 242, 246, 249, 270, 271, 282, 284, 286, 289, 294], "colormap_nam": [18, 119, 239, 284], "viridi": [18, 239, 271, 284], "norm": [18, 118, 119, 135, 139, 141, 239, 284], "norm_typ": [18, 119, 239, 284], "norm_arg": [18, 119, 239, 284], "colorbar": [18, 119, 120, 239, 284], "tick": [18, 119, 239, 284], "mark": [18, 239, 252, 284], "colorbar_tick": [18, 119, 239, 284], "matplotlib": [18, 271], "standard": [18, 251, 252, 261, 271, 274, 290], "symlog": [18, 119], "symmetr": 18, "central": [18, 284], "logarithm": [18, 120], "color": [18, 120], "normal": [18, 193, 194, 207, 208, 237, 248, 249, 252, 271, 277], "symlognorm": 18, "lognorm": 18, "hous": [19, 284], "kei": [19, 48, 112, 137, 250], "max_memori": [24, 34, 37, 44, 145, 248], "mesh_filenam": [24, 84, 145, 151], "graph_filenam": [24, 84, 145], "make_yaml": 24, "stride": [24, 36, 145], "consist": [24, 36, 132, 145, 235, 252, 271, 272, 283], "partit": [24, 33, 43, 61, 84, 145, 238, 241, 242, 248, 272, 273, 274, 275, 276, 278, 290], "model_config_data": 24, "streams_data": 24, "neither": [24, 37, 48, 94, 145, 155, 219, 248], "nor": [24, 37, 48, 94, 145, 155, 219, 248, 271], "append": [24, 37, 39, 48, 94, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 219, 248, 258, 260, 262], "ideal": [24, 34, 37, 44, 90, 91, 94, 135, 145, 155, 196, 210, 219, 220, 221, 223, 244, 248, 251, 270, 271, 272, 296], "fewer": [24, 34, 37, 44, 90, 91, 145, 155, 196, 210, 219, 248, 271, 290], "memori": [24, 34, 37, 44, 145, 248, 272], "mb": [24, 34, 37, 44, 145, 248, 272], "placehold": [24, 34, 37, 44, 145, 248, 290], "diverg": [30, 148], "counterpart": [30, 135, 148], "nest": [30, 121, 123, 148], "graph_fil": 31, "run_as_subprocess": [37, 248], "smallest": [37, 248, 269, 280, 296], "unit": [37, 95, 99, 102, 248, 269, 283, 296], "term": [37, 269, 271, 286, 287], "necessarili": [37, 39], "input_data": 37, "until": [37, 38, 248, 250, 290], "finish": [37, 38, 81, 248, 271], "known": [37, 38, 132, 239, 248, 271], "suffici": [37, 248], "establish": [37, 38, 248], "is_depend": [37, 248], "machine_info": [37, 248], "machineinfo": 37, "combin": [37, 39, 48, 56, 62, 93, 121, 248, 249, 250, 268, 271, 272, 290], "base_work_dir": [37, 48, 248, 250], "log_filenam": [37, 48, 248, 250], "redirect": [37, 248], "extern": [37, 132, 235, 245, 248, 250, 264, 281, 291], "turn": [37, 55, 245, 248, 268, 271, 288], "access": [38, 250, 251, 252, 271, 273, 277, 278], "database_compon": [39, 248], "work_dir_target": [39, 248], "come": [39, 132, 248, 252, 271, 273, 274, 275, 276, 277, 278, 281], "_database_root": 39, "available_resourc": [41, 89], "constrain": [41, 146, 156, 180, 197, 211, 238, 241, 242, 248, 271], "cores_per_nod": [41, 89, 92, 132, 272, 273, 274, 275, 276, 277, 278, 290], "everi": [42, 188, 238, 248, 250, 251, 267, 268, 269, 271, 283, 288], "child": [42, 188, 245, 248, 250, 251], "subtask": 44, "step_symlink": [48, 250], "outsid": [48, 49, 244, 246, 248, 250, 252], "stdout_logg": [48, 250], "goe": [48, 248, 250, 271], "regardless": [48, 250], "new_step_log_fil": [48, 250], "run_by_default": [49, 250], "assum": [50, 113, 122, 132, 252, 271, 278, 283], "prior": [50, 248], "step_path": 54, "variant": [54, 176, 238, 244, 249, 251, 252, 271, 277, 280, 283, 284], "uncach": 54, "datestamp": 54, "yymmdd": [54, 272], "dry": [54, 249], "meta": 56, "empti": [56, 248, 251, 252, 269, 271], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 108, 252], "isadirectoryerror": 60, "qo": [61, 273, 274, 276, 277, 278, 290], "qualiti": [61, 273, 274, 276, 277, 278, 290], "servic": [61, 273, 274, 276, 277, 278, 290], "constraint": [61, 278, 290], "wall_tim": [61, 290], "wall": [61, 290], "target_cor": 62, "min_cor": 62, "decomposition_test": [66, 244, 290], "decompositiontest": [66, 244], "e501": [66, 271], "turquois": [66, 274], "usr": [66, 132, 274, 290], "climat": [66, 273, 274, 275, 277, 290], "mhoffman": 66, "constant": [67, 74, 75, 135, 237, 271, 283, 284, 286, 288, 289, 294], "latitud": [68, 75, 95, 97, 99, 102, 119, 239, 284, 289, 294], "longitud": [68, 75, 76, 82, 95, 97, 99, 102, 119, 239, 284, 289, 294], "ndarrai": [68, 75, 76, 82, 119, 151, 184, 225, 226, 271], "degre": [68, 75, 76, 82, 99, 272, 283], "length": [68, 75, 76, 82], "180": [68, 75, 76, 82, 99, 135, 284], "90": [68, 75, 76, 82, 135, 248, 284], "static": [69, 70], "rule": 69, "thumb": 69, "achiev": [70, 249], "uniform": [74, 79, 143, 179, 238, 239, 241, 242, 244, 250, 271, 272, 283, 284, 286, 287, 288, 289, 294], "natur": 79, "jigsawpi": [80, 248], "jigsaw_jig_t": 80, "meti": 84, "defaults_filenam": 85, "total": [89, 248, 249, 251, 271, 272, 274, 290], "substep": [90, 91], "command_line_arg": 90, "cpus_per_nod": 92, "map_filenam": 94, "src_grid_info": 94, "dst_grid_info": 94, "neareststod": [94, 239, 284, 289, 294], "conserv": [94, 239, 284, 289, 294], "map_": 94, "source_typ": 94, "_": [94, 132, 248, 250, 252, 271, 288], "dest_typ": 94, "1d": [95, 99, 102, 119, 135, 225, 226, 227, 228, 229, 230, 231, 233, 234], "2d": [95, 99, 102, 119], "5x0": [95, 99, 102], "5degre": [95, 99, 102], "coordin": [95, 97, 98, 102, 104, 119, 120, 193, 207, 227, 233, 234, 279, 281, 283, 284, 286, 287, 288, 289, 293], "mesh_typ": [96, 103, 244, 248, 250], "vertex": [96, 103], "x_var": [98, 104], "y_var": [98, 104], "proj_attr": [98, 104], "proj_str": [98, 104], "proj": [98, 104], "left": [99, 135, 271, 280, 283, 284], "remapp": [100, 101], "remap_fil": 100, "progress": [107, 108], "is_task": 108, "steps_to_skip": 108, "unpickl": [110, 248], "cached_step": 111, "identifi": [111, 132, 245, 264, 296], "task_list": 112, "_all": 112, "streams_filenam": 113, "lxml": [113, 115, 127], "etre": [113, 115, 127], "new_child": 114, "children": 114, "sub": [114, 271], "new_tre": 115, "infin": 118, "toler": 118, "data_arrai": 119, "colorbar_label": 119, "subtitl": 119, "field_nam": [120, 139, 140, 178], "out_file_nam": 120, "ax": 120, "z_index": 120, "cmap_set_und": 120, "cmap_scal": 120, "cmap_titl": 120, "horizont": [120, 135, 151, 237, 238, 239, 241, 242, 243, 283, 286, 287, 288], "depth": [120, 135, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 271, 272, 280, 283, 284, 286, 287, 288, 289], "slice": [120, 138], "fieldnam": 120, "visibl": 120, "bar": 120, "classmethod": 122, "jinja": [122, 135, 239], "namelist_templ": 126, "polarisyaml": [126, 127], "processed_registry_filenam": 127, "registri": [127, 237, 264], "steam": 127, "1_anvil_intel_impi": [128, 132], "mvapich": [128, 132, 273], "ve": [128, 129, 130, 131, 133, 252, 271], "1_anvil_gnu_openmpi": 128, "1_chicoma": 129, "cpu_gnu_mpich": [129, 133], "crai": [129, 132, 133, 274, 278], "1_chrysalis_intel_openmpi": 130, "1_chrysalis_gnu_openmpi": 130, "soon": [131, 132, 271, 290], "1_compy_intel_impi": 131, "1_compy_gnu_openmpi": 131, "load_polaris_env": [132, 252, 271, 290], "right": [132, 135, 250, 252, 271, 272, 280, 283, 284, 290], "therefor": [132, 248, 269, 271], "chicoma": [132, 277, 290], "mpich": [132, 252, 270, 274, 278, 290], "compi": [132, 276, 290], "pm": [132, 278, 290], "compymcnodefac": [132, 277], "perlmutt": [132, 274, 277, 290], "pretti": [132, 248, 251, 271, 272], "conda_path": [132, 252], "osx": [132, 277], "clang": [132, 252], "1_": 132, "morpheu": 132, "cobalt": [132, 273, 274, 275, 276, 277, 278], "single_nod": [132, 272, 273, 274, 275, 276, 277, 278, 290], "mpirun": [132, 268, 272, 273, 274, 275, 276, 277, 278, 290], "srun": [132, 248, 268, 271, 272, 273, 274, 275, 276, 277, 278, 290], "parallel_execut": [132, 268, 272, 273, 274, 275, 276, 277, 278, 290], "modules_befor": [132, 274, 278], "modules_aft": [132, 274, 278], "polaris_env": [132, 273, 274, 275, 276, 277, 278], "deploi": [132, 252, 270, 273, 274, 275, 276, 277, 278], "mpi_gnu": [132, 273, 274, 275, 276, 277, 278], "hdf5": [132, 273, 274, 275, 276, 277, 278], "use_e3sm_hdf5_netcdf": [132, 273, 274, 275, 276, 277, 278], "discoveri": 132, "hostnam": 132, "hostname_contain": 132, "queu": 132, "laptop": [132, 252, 271, 272], "workstat": [132, 252], "high": [132, 248, 275, 277], "hpc": [132, 252, 274, 277], "safest": [132, 252], "mpi_": 132, "simpl": [132, 135, 251, 264, 271, 290], "compiler_gnu": 132, "compiler_intel": 132, "hopefulli": [132, 272], "parlanc": 132, "concret": 132, "ubuntu": 132, "spec": [132, 268, 278], "gcc": 132, "curl": 132, "81": 132, "buildabl": 132, "install_missing_compil": 132, "cc": 132, "bin": [132, 252, 278, 290], "cxx": 132, "f77": 132, "fc": 132, "operating_system": 132, "ubuntu22": 132, "04": 132, "extra_rpath": 132, "luck": 132, "catch": [132, 249], "22": 132, "guess": [132, 271], "correct": [132, 252], "potenti": [132, 151, 164, 248, 271, 283], "purg": 132, "perl": 132, "32": [132, 249, 290], "bsnc6lt": 132, "ugetvbp": 132, "sxfyy4k": 132, "2020": 132, "304": 132, "n3b5fye": 132, "j3zxncu": 132, "7ohuiwq": 132, "k2zu3y5": 132, "mirrcz7": 132, "variou": [132, 217, 248, 252, 256], "ask": 132, "gb": 132, "minut": [132, 238, 249, 283, 295], "hour": [132, 241, 242, 249, 267, 274, 278, 286, 287, 290, 293], "zlib": 132, "incompat": 132, "ubuntu20": 132, "readlin": 132, "pkgconf": 132, "spackdir": 132, "env": [132, 278], "arch": 132, "repositori": [132, 246, 270, 271, 290], "x86_64_v4": 132, "free": [132, 237, 271, 272], "touch": [132, 252], "everyth": 132, "1_pm": 133, "ever": [135, 251], "expand": [135, 280], "oceanmodelstep": [135, 248, 271], "decid": [135, 271], "veri": [135, 245, 248, 251, 252, 264, 271, 288], "earli": [135, 281, 290], "stage": [135, 237, 248, 250, 252, 260, 267, 281, 290], "map_yaml_to_namelist": 135, "heurist": 135, "200": [135, 241, 242, 271, 283, 286, 287, 288], "round": [135, 284], "cell_count": [135, 146, 156, 180, 197, 211, 271], "goal_cells_per_cor": [135, 271, 284, 286, 287, 289, 294], "pinch": 135, "2000": [135, 244, 265, 267, 271, 293], "max_cells_per_cor": [135, 271, 284, 286, 287, 289, 294], "seciton": 135, "control": [135, 239, 248, 272, 283, 284, 288, 290], "scale": [135, 283, 290], "tri": [135, 251], "apport": 135, "dai": [135, 150, 164, 238, 239, 243, 267, 271, 283, 284, 288, 293], "form": [135, 296], "dddd_hh": [135, 150], "ss": [135, 150], "get_time_interval_str": 135, "run_dur": [135, 284], "fill": 135, "dt_str": 135, "run_duration_str": 135, "output_interval_str": 135, "yaml_filenam": [135, 143], "caviti": [135, 251, 271, 272, 280], "frazil": 135, "flux": [135, 237, 288], "fix": [135, 271], "add_spherical_base_mesh_step": [135, 250], "spherical_converg": [135, 239, 250, 284], "icos_resolut": [135, 284], "480": [135, 284], "qu_resolut": [135, 284], "150": [135, 284], "210": [135, 280, 284], "evalu": [135, 138, 139, 140, 178, 194, 195, 208, 209, 284], "convergence_eval_tim": [135, 284], "convergence_thresh": [135, 284], "error_typ": [135, 138, 139, 284], "spherical_convergence_forward": [135, 284], "split_explicit": [135, 284], "rk4_dt_per_km": [135, 284], "split": [135, 251], "split_dt_per_km": 135, "barotrop": [135, 155, 219, 248, 271, 283, 288], "simul": [135, 241, 242, 248, 269, 271, 282, 283, 286, 287, 289, 290, 294], "numer": [135, 286, 287], "infrastructur": [135, 251, 271], "add_cosine_bell_task": [135, 245], "sphericalconvergenceforward": [135, 239], "output_filenam": [135, 143, 151], "analyz": [135, 137, 177, 271, 284], "split_explicit_t": [135, 271], "sphericalconvergenceanalysi": [135, 239], "less": [135, 137, 174, 177, 248, 280], "convergence_var": [135, 137], "zidx": [135, 137, 138, 140, 141, 178], "exact_solut": 135, "state": [135, 140, 151, 153, 154, 161, 164, 169, 178, 237, 238, 239, 241, 242, 243, 248, 249, 271, 284], "grid_1d": 135, "generate_1d_grid": 135, "vertical_grid": [135, 225, 227, 233, 234, 244, 248, 271, 272, 280, 283, 284, 286, 287, 288, 289], "z": [135, 137, 138, 140, 141, 178, 228, 229, 230, 231, 232, 233, 234, 271, 283, 284, 286, 287, 288, 289], "star": [135, 232, 234, 271, 283, 284, 286, 287, 288, 289], "init_vertical_coord": [135, 248, 271], "minlevelcel": [135, 227, 229, 230, 231, 232, 233, 234, 271], "maxlevelcel": [135, 227, 228, 229, 230, 231, 232, 233, 234, 271], "cellmask": [135, 227, 230, 233, 234, 271], "zmid": [135, 227, 233, 234, 271], "restingthick": [135, 227, 232, 233, 234, 271], "bottomdepth": [135, 227, 228, 230, 231, 232, 233, 234, 248, 271], "entir": [135, 271, 283, 295], "petersen": [135, 252, 271, 283], "et": [135, 271, 280, 283, 284, 286, 287], "al": [135, 271, 280, 283, 284, 286, 287], "2015": [135, 271, 283], "int_": 135, "rho": 135, "dv": 135, "sort": [135, 245, 246, 251, 252], "increas": [135, 251], "compute_rp": [135, 271], "csv": [135, 239, 271], "geostroph": 137, "dependencies_dict": 137, "rate": [137, 139, 140, 178, 239, 241, 242, 271, 284, 286, 287, 288], "dimens": [137, 141, 178, 243, 283], "variable_nam": [138, 141], "exact": [138, 140, 178, 193, 194, 195, 207, 208, 209, 239, 241, 242, 251, 286, 287], "inf": [138, 139], "conv_thresh": [139, 286, 287], "deriv": 140, "subdivid": [144, 250], "dynamic_ntask": 145, "dynam": [145, 235, 243, 272, 283, 284, 288, 289], "available_cor": 147, "estim": [147, 149, 271], "time_str": 150, "initial_state_filenam": 151, "energi": [151, 164, 270, 271, 283], "len": [151, 271], "output_fil": [151, 248, 271], "shorter": [161, 249, 257], "step_subdir": [170, 258], "processor": [170, 248, 258, 283], "include_viz": [174, 250], "advect": [174, 239, 284, 286, 287, 288], "ncell": [178, 248, 271], "max_valu": 184, "ri": 184, "accord": [184, 286, 287, 290], "meter": [184, 225, 226], "radiu": [184, 284], "viz_map": [185, 250], "inerti": [189, 190, 191, 193, 196, 199, 201, 241, 250, 281, 285], "graviti": [189, 190, 191, 193, 196, 199, 201, 241, 250, 281, 285], "wave": [189, 190, 191, 193, 196, 199, 201, 207, 241, 248, 250, 271, 281, 283, 285, 287], "taskdir": [191, 196, 199, 201, 205, 210, 213, 215], "analys": [191, 205], "angleedg": [193, 207], "angl": [193, 207], "posit": [193, 207, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 271, 280, 288], "xcell": [193, 207, 248, 271], "ycell": [193, 207, 248, 271], "xedg": [193, 207, 248, 271], "yedg": [193, 207], "f0": 193, "corioli": [193, 241, 242, 271, 283, 284, 287, 288], "eta0": [193, 207], "amplitid": [193, 207], "kx": [193, 207], "ky": [193, 207], "angular": [193, 207], "frequenc": [193, 207, 238], "veloc": [194, 208, 237, 238, 241, 242, 250, 252, 271, 284, 288, 290], "norm_vel": 194, "eta": [195, 209, 286, 287], "manufactur": [203, 204, 205, 207, 210, 213, 215, 242, 281, 285], "column": [217, 218, 220, 221, 223, 243, 252, 256, 257, 258, 260, 261, 262, 264, 265, 267, 281, 285, 290, 291, 292], "mix": [218, 244, 245, 286, 287, 288], "param": [218, 220], "resources_fix": 219, "ag": [220, 221, 223], "evolv": [220, 270, 280, 284, 288], "ideal_ag": [221, 223], "layer": [225, 226, 227, 231, 232, 233, 234, 237, 238, 241, 242, 243, 271, 272, 280, 283, 284, 286, 287, 288, 289], "bottom": [227, 228, 229, 230, 231, 232, 233, 234, 237, 271, 272, 280, 283, 284, 286, 287, 288, 289], "thick": [227, 231, 232, 233, 234, 238, 243, 265, 271, 272, 280, 283, 286, 293], "stretch": [227, 233, 234, 271, 280], "elev": [227, 233, 234, 271, 280], "midpoint": [227, 233, 234, 271], "reftopdepth": [227, 230, 231, 233, 234, 271], "down": [227, 228, 229, 230, 231, 232, 233, 234, 271, 280, 284], "ref": [227, 233, 234, 271], "middl": [227, 233, 234, 271], "refbottomdepth": [227, 228, 229, 230, 231, 233, 234, 248, 271], "refinterfac": [227, 233, 234, 271], "element": [227, 233, 234, 271], "vertcoordmovementweight": [227, 233, 234, 271], "movement": [227, 233, 234, 271], "alter": [228, 229, 248, 250, 270, 271, 280, 283, 284, 286, 287, 288, 289], "partial": [228, 229, 271, 280, 283, 284, 286, 287, 288, 289], "seafloor": [228, 230, 231, 232, 280], "unstretch": 232, "shelv": [235, 272, 280], "ssh_adjust": [235, 248, 272], "compass_branch": 235, "example_compact": [235, 245, 264, 272], "default_input": [235, 245, 264, 271, 272], "ocean_model": [235, 252, 272], "latest": [235, 252, 264, 270, 281, 290], "compat": [235, 252, 264, 268, 270], "verison": 235, "manufactured_solut": [235, 240, 245, 287], "single_column": [235, 240, 245, 264, 266, 288], "minim": 237, "fcell": [237, 248, 271, 284], "fedg": [237, 248, 271, 284], "fvertex": [237, 248, 271, 284], "slip": 237, "solid": [237, 265, 283, 284], "tangenti": 237, "nonperiod": 237, "drag": [237, 239], "mass": 237, "momentum": [237, 238, 239, 241, 242, 286, 287], "scalar": 237, "rigid": 237, "solv": [237, 268, 280], "mid": [237, 283], "vari": [237, 239, 248, 268, 277, 280, 284], "consult": [237, 271], "tidal_forc": 237, "eddi": [238, 283], "addition": [238, 239, 241, 242, 243, 248, 273, 274, 275, 276, 278], "diffus": [238, 239, 241, 242, 243], "50": [238, 241, 242, 271, 283, 286, 287, 288], "prescrib": [238, 241, 242], "intens": 238, "enough": [238, 248, 251, 271], "cosinebel": [239, 250], "24": [239, 284, 293], "shape": [239, 284], "blob": 239, "around": [239, 271, 272, 283, 284], "distribut": 239, "convergence_tracer1": 239, "fast": [239, 271], "shallow": [241, 252, 284, 286, 287, 289], "water": [241, 271, 283, 284, 286, 287, 288, 289], "100": [241, 242, 243, 280, 286, 287, 288], "25": [241, 242, 286, 287, 288], "calcul": [241, 248, 250], "exactsolut": [241, 242], "obtain": [241, 242, 252, 274], "normal_veloc": [241, 242, 248, 271], "assign": [241, 242, 284], "squar": [241, 242, 286, 287], "fall": [241, 242, 290], "accept": [241, 242], "bound": [241, 242], "rmse": [241, 242, 286, 287], "manufacturedsolut": 242, "exercis": [243, 267, 284, 288], "kpp_test": 243, "mixedlayerdepthsoutput": 243, "idealagetrac": [243, 288], "single_column_forc": [243, 288], "profil": [243, 268, 288], "throughout": [243, 283, 288], "idealag": 243, "enabel": 243, "formal": 244, "organ": [244, 246, 249, 270], "conceptu": [244, 251], "broadli": [244, 245, 251], "realist": [244, 270, 296], "greenland": [244, 270, 296], "2000m": [244, 290], "34": [244, 290], "halfar": 244, "cism": 244, "dome_typ": 244, "closest": 244, "put_origin_on_a_cel": 244, "hydrologi": 244, "hydro": [244, 296], "dome_viz": 244, "time_slic": 244, "save_imag": 244, "hide": [244, 271], "hide_fig": 244, "helper": [244, 245], "clutter": 244, "smoke_test": [244, 250], "smoketest": [244, 250], "restart_test": 244, "restarttest": 244, "add_dome_task": 244, "variable_resolut": [244, 248, 290], "talk": 244, "reduc": [244, 248], "among": [244, 246, 252, 271], "encompass": 245, "perspect": 245, "four": 245, "major": [245, 248], "broader": 245, "univers": 245, "add_inertial_gravity_wave_task": 245, "add_manufactured_solution_task": 245, "add_single_column_task": 245, "alphabet": [245, 271], "landice_model": [245, 252], "diagram": 246, "green": 246, "blue": [246, 273, 290], "orang": 246, "red": 246, "laid": 246, "fig": 246, "organiz": 246, "concept": [246, 251, 271, 296], "somewher": 248, "multiprocess": [248, 251, 272], "aspir": 248, "emploi": 248, "unwant": 248, "outer": 248, "inner": 248, "dome_varres_grid": 248, "signific": [248, 249, 250], "neglig": 248, "culled_graph": [248, 271], "meshstep": 248, "getint": 248, "mesh_cpus_per_task": 248, "mesh_min_cpus_per_task": 248, "fit": [248, 272], "applic": [248, 251, 252, 289, 294], "launch": [248, 270], "write_netcdf": [248, 271], "convers": [248, 271], "greater": [248, 271], "graphinfofilenam": [248, 271], "culled_mesh": [248, 271], "use_dist": [248, 271, 283], "gradient_width_dist": [248, 271, 283], "gradient_width_frac": [248, 271, 283], "bottom_temperatur": [248, 271, 283], "surface_temperatur": [248, 271, 283, 288], "temperature_differ": [248, 271, 283], "coriolis_paramet": [248, 271, 283, 286, 287, 288], "x_cell": [248, 271], "y_cell": [248, 271], "bottom_depth": [248, 271, 272, 280, 283, 284, 286, 287, 288, 289], "ones_lik": [248, 271], "zeros_lik": [248, 271], "x_min": [248, 271], "min": [248, 271, 283, 288], "x_max": [248, 271], "y_min": [248, 271], "y_max": [248, 271], "y_mid": [248, 271], "x_perturb_min": [248, 271], "x_perturb_max": [248, 271], "perturb_width": [248, 271, 283], "y_offset": [248, 271], "sin": [248, 271, 283, 286, 287], "pi": [248, 271, 280, 283, 284], "temp_vert": [248, 271], "frac": [248, 271, 280, 283, 286], "logical_and": [248, 271], "transpos": [248, 271], "3rd": [248, 271], "crest": [248, 271, 283], "expand_dim": [248, 271], "dim": [248, 271], "axi": [248, 271], "broadcast": [248, 271], "nedg": [248, 271], "xvertex": [248, 271], "attr": [248, 271], "initial_temperatur": [248, 271], "initial_normal_veloc": [248, 271], "superclass": 248, "commandlin": 248, "harm": 248, "likewis": [248, 271], "subsequ": [248, 295], "arisen": 248, "problemat": 248, "add_depend": 248, "usual": [248, 250, 252, 271, 290], "forwardstep": 248, "mesh_path": 248, "mesh_step": 248, "with_ice_shelf_cav": 248, "initial_state_target": 248, "adjusted_init": 248, "forcing_data": 248, "init_mode_forcing_data": 248, "entha_analy_result": 248, "mat": 248, "enthalpy_benchmark": 248, "ourselv": 248, "problem": [248, 252, 268, 271], "firewal": 248, "bedmachineantarctica_v2_and_gebco_2022_0": 248, "05_degree_20220729": 248, "slate": 248, "icepresent_qu60km_polar": 248, "practic": [248, 251, 252], "straightforward": 248, "commonli": [248, 269], "notat": [248, 289, 294], "phc": [248, 280], "That": [248, 251, 269, 271, 290], "word": 248, "ff": 248, "quwisc240": [248, 251, 290], "90c": 248, "91c": 248, "92": [248, 280], "91": 248, "sowisc12to60": [248, 290], "performance_test": 248, "effici": [248, 271], "transfer": 248, "feasibl": 248, "overhead": 248, "philosophi": [249, 251, 271], "context": [249, 271], "namesak": 249, "256": [249, 274, 278], "count": [249, 269], "quicker": 249, "exce": 249, "offer": 249, "benefit": [249, 270], "bug": 249, "coverag": 249, "exhaust": 249, "recent": [249, 281, 291], "merg": 249, "reach": 249, "steadi": 249, "wet": 249, "fundament": 250, "incorpor": 250, "velo_solv": 250, "sia": [250, 252], "fo": 250, "runmodel": 250, "run_step": 250, "0200": 250, "00_00": [250, 265, 271], "recip": 250, "demonstr": [250, 271], "fairli": [250, 251, 252, 271], "_cosine_bel": 250, "_with_viz": 250, "_setup_step": [250, 271], "_resolut": 250, "remove_step": 250, "analysis_depend": 250, "base_mesh_step": 250, "cos_bell_dir": 250, "_init_": 250, "init_step": 250, "_forward_": 250, "forward_step": 250, "with_viz_dir": 250, "_map_": 250, "_viz_": 250, "rare": [250, 252], "480km": 250, "closer": 250, "imp_r": 250, "joinpath": 250, "initial_condit": 251, "dig": [251, 272], "background": 251, "adher": [251, 271], "pep8": [251, 252], "bot": [251, 280], "violat": 251, "consid": 251, "editor": 251, "pycharm": [251, 252, 271], "spyder": 251, "linter": 251, "flake8": [251, 252], "discourag": [251, 269], "reformat": 251, "autopep8": 251, "undesir": 251, "lint": 251, "wildcard": 251, "vim": [251, 271], "plugin": 251, "id": [251, 252], "commit": [251, 252], "why": 251, "sound": 251, "subpackag": 251, "understand": [251, 272], "downstream": 251, "tutori": [251, 252], "clu": 251, "intro": 251, "docstr": [251, 270, 271], "strip": 251, "mpas_ocean": 251, "hidden": 251, "shortcut": [251, 290], "referenc": [251, 271], "mention": 251, "dot": 251, "charact": 251, "unix": [251, 270], "distinct": 251, "mayb": [251, 271], "machine_config": 251, "endswith": 251, "splitext": 251, "exactli": [251, 252, 271, 280], "move": [251, 252, 271, 289, 294], "renam": 251, "visa": 251, "versa": 251, "comfort": [251, 271], "inherit": [251, 271], "orient": 251, "program": [251, 272], "led": 251, "felt": 251, "contribut": 251, "hesit": 251, "predecessor": [251, 269, 270], "clumsi": 251, "harder": 251, "outcom": 251, "augment": 251, "explain": 251, "hope": 251, "dens": 251, "learn": [251, 271], "curv": 251, "worth": [251, 271], "skill": 251, "endeavor": 251, "readabl": 251, "manipul": 251, "get_available_cores_and_nod": 251, "theoret": 251, "dozen": 251, "theori": 251, "biogeochemistri": 251, "ksh": 252, "mac": [252, 270], "csh": 252, "tcsh": 252, "temporarili": 252, "recogn": [252, 272, 290], "permiss": 252, "anyon": 252, "caus": [252, 274, 278, 280], "person": [252, 268], "base_path_to_install_or_update_conda": 252, "with_netlib_lapack": 252, "flavor": [252, 271], "troubl": [252, 271], "recognit": 252, "trilino": 252, "downsid": 252, "unneed": 252, "reinstal": 252, "caution": 252, "load_": 252, "encod": 252, "load_dev_polaris_": [252, 271], "env_nam": 252, "dev_polaris_": [252, 268], "workdir": [252, 290], "unexpect": [252, 269, 271], "occur": [252, 268], "echo": 252, "proceed": 252, "notic": 252, "conda_env": [252, 276, 290], "rememb": 252, "incorrect": 252, "unus": 252, "session": [252, 271], "pip": 252, "substanti": 252, "risk": [252, 271], "unsupport": 252, "env_onli": 252, "mpas_make_target": [252, 290], "scientif": [252, 290], "_albani": 252, "instruct": [252, 271], "es3m": 252, "compli": 252, "memor": 252, "guidelin": 252, "complianc": 252, "checker": 252, "isort": 252, "flynt": 252, "mypi": 252, "77": 252, "e302": 252, "blank": 252, "resolv": 252, "simpler": [252, 271], "new_branch_nam": 252, "put": [252, 271], "disk": [252, 272, 274, 278], "respons": 252, "simplest": 252, "your_new_branch": 252, "restart_filenam": 258, "polaris_branch": 264, "post": 264, "src": 264, "registry_process": 264, "seaice_model": 264, "1m": [265, 293], "disc": [265, 293], "config_initial_ice_area": 265, "config_initial_ice_volum": 265, "config_atmospheric_forcing_typ": 265, "config_forcing_start_tim": 265, "config_forcing_cycle_start": 265, "config_forcing_cycle_dur": 265, "config_forcing_precipitation_unit": 265, "mm_per_sec": 265, "config_forcing_sst_typ": 265, "ncar": 265, "config_update_ocean_flux": 265, "config_include_pond_freshwater_feedback": 265, "standard_phys": 267, "standardphys": 267, "year": [267, 281, 293], "volum": 267, "snow": 267, "exact_restart": 267, "exactrestart": 267, "geo": 268, "cartopi": 268, "14": 268, "np110py27_4": 268, "calledprocesserror": 268, "deploy_tmp": 268, "vpn": 268, "site": 268, "shell": [268, 270], "honor": 268, "wide": 268, "spawn": 268, "usernam": [268, 271, 274, 278], "proxy_en": 268, "all_proxi": 268, "proxyout": 268, "8080": 268, "no_proxi": 268, "localhost": [268, 272, 277, 278, 290], "127": 268, "proxy_dis": 268, "unset": 268, "anytim": 268, "fatal": 268, "mpi_init": 268, "stack": 268, "mpir_init_thread": 268, "159": 268, "mpid_init": 268, "164": 268, "mpidi_ch3_init": 268, "95": 268, "mpid_nem_init": 268, "314": 268, "mpid_nem_tcp_init": 268, "173": 268, "mpid_nem_tcp_get_business_card": 268, "395": 268, "getsockinterfaceaddr": 268, "369": 268, "pn2034311": 268, "errno": 268, "host": [268, 272, 277, 290], "focus": 269, "plu": 269, "autom": 270, "exascal": 270, "earth": 270, "kept": 270, "boundari": [270, 283, 296], "expert": 270, "uncoupl": 270, "quick": [270, 271, 281, 291], "queue": 270, "beginn": [270, 271], "advanc": [270, 271], "mpas_to_yaml": 270, "troubleshoot": 270, "proxi": 270, "lanl": [270, 272, 274], "gethostbynam": 270, "glossari": 271, "stick": 271, "miniconda": 271, "3_chrysalis_intel_openmpi": 271, "strict": 271, "push": 271, "lowercas": 271, "hyphen": 271, "settl": 271, "desktop": 271, "realli": [271, 278], "nice": [271, 278], "supercomput": 271, "yet_another_channel": 271, "testgroup": 271, "vi": 271, "polaris_head": 271, "yetanotherchannel": 271, "instanc": 271, "repres": [271, 280, 284], "highli": 271, "camelcas": 271, "capit": 271, "letter": 271, "cap": 271, "awkward": 271, "encourag": 271, "enclos": 271, "briefli": 271, "baroclinicchannel": 271, "globalconverg": 271, "add_test_group": 271, "interest": 271, "test_group": 271, "add_test_cas": 271, "anyth": 271, "testcas": [271, 272, 283, 288, 290], "probabl": [271, 277], "suppos": 271, "easili": 271, "tide": 271, "sai": [271, 277], "res_str": 271, "1000": [271, 272, 280, 283, 286, 287], "still": [271, 281, 289, 290, 294], "ti": 271, "loop": 271, "1km": [271, 283, 290], "4km": [271, 283, 290], "coarsest": [271, 272], "especi": 271, "promot": 271, "pattern": 271, "familiar": 271, "seen": 271, "brows": 271, "row": 271, "disadvantag": 271, "foremost": 271, "magic": 271, "effect": [271, 289], "pain": 271, "160": [271, 283], "500": [271, 272, 280, 283], "path_to_mpas_ocean": 271, "path_to_working_dir": 271, "cat": 271, "slurm_jobid": 271, "_run_test": 271, "gpf": 271, "fs1": 271, "cbegeman": 271, "grid_typ": [271, 272, 280, 283, 284, 286, 287, 288, 289], "vert_level": [271, 272, 280, 283, 284, 286, 287, 288, 289], "coord_typ": [271, 280, 283, 284, 286, 287, 288, 289], "partial_cell_typ": [271, 280, 283, 284, 286, 287, 288, 289], "min_pc_fract": [271, 280, 283, 284, 286, 287, 288, 289], "everywher": 271, "depress": [271, 280], "mostli": 271, "logic": [271, 283], "northern": [271, 283], "half": [271, 283], "southern": [271, 283], "halv": [271, 283], "gradient": [271, 283, 286, 287, 288], "500km": [271, 283], "40e3": [271, 283], "35": [271, 283, 284, 288, 289, 290, 294], "2e": [271, 283], "connect": [271, 278], "match": 271, "light": 271, "e3sm_compon": 271, "interact": [271, 274, 277, 278, 290], "interrupt": 271, "pty": 271, "navig": 271, "newli": 271, "bunch": 271, "didn": 271, "mistak": 271, "finger": 271, "cross": 271, "initial_normalveloc": 271, "initial_salin": 271, "obvious": 271, "stress": [271, 288], "landicemodelstep": 271, "huge": 271, "cp": 271, "05": 271, "hmix_del2": 271, "bottom_drag": 271, "cvmix": 271, "0002": 271, "filename_interv": 271, "0100": 271, "input_interv": 271, "initial_onli": 271, "basicmesh": 271, "dayssincestart": 271, "surfacespe": 271, "lowersurfac": 271, "uppersurfac": 271, "ureconstructx": 271, "ureconstructi": 271, "great": 271, "remain": [271, 284, 288], "load_dataset": 271, "final_temperatur": 271, "ab": 271, "proc": 271, "area": 271, "4proc": [271, 283], "8proc": [271, 283], "markdown": 271, "developers_guid": 271, "users_guid": 271, "daunt": 271, "flesh": 271, "bonu": 271, "improv": 271, "introduc": 271, "techniqu": 271, "cannot": 271, "aim": 271, "constrain_resourc": 271, "becam": 271, "mainten": 271, "counter": 271, "thought": 271, "yet_another_channel_test_cas": 271, "yetanotherchanneltestcas": 271, "choic": [271, 284], "spuriou": [271, 283], "dissip": [271, 283], "pop": [271, 283], "mom": [271, 283], "mitgcm": [271, 283], "higher": 271, "heavi": 271, "analogi": 271, "tet": 271, "bear": 271, "late": 271, "_add_step": 271, "startswith": 271, "enumer": 271, "rpe_": 271, "_nu_": 271, "privat": 271, "break": [271, 283], "unusu": 271, "rpe_1_nu_1": [271, 283], "rpe_2_nu_5": [271, 283], "rpe_3_nu_10": 271, "rpe_4_nu_20": 271, "rpe_5_nu_200": 271, "20_00": 271, "0000": 271, "dayssincestartofsim": 271, "relativevort": 271, "pyplot": 271, "plt": 271, "output_": 271, "sections_yet_another_channel_": 271, "rpe_t": 271, "init_filenam": 271, "initial_state_file_nam": 271, "ds_init": 271, "_plot": 271, "dirti": 271, "adopt": 271, "lesson": 271, "tricki": 271, "commun": 271, "nuanc": 271, "fake": 271, "wasn": 271, "fold": 271, "proper": 271, "third": 271, "previous": 271, "extens": 272, "multinod": [272, 290], "explanatori": 272, "my_machin": 272, "extend": 272, "gitconfig": 272, "enter": 272, "author": 272, "email": 272, "pull_request": 272, "28": 272, "address": 272, "metadata": 272, "customize_config_pars": 272, "server_base_url": 272, "inej": 272, "check_siz": 272, "ssl": 272, "certif": 272, "core_path": 272, "partition_execut": 272, "dask": 272, "netcdf4": 272, "netcdf4_class": 272, "netcdf3_64bit": 272, "netcdf3_class": 272, "engin": 272, "scipi": 272, "mesh_databas": 272, "ocean_database_root": 272, "landice_database_root": 272, "mesh_cor": 272, "mesh_min_cor": 272, "mesh_max_memori": 272, "mesh_max_disk": 272, "init_cor": 272, "init_min_cor": 272, "init_max_memori": 272, "init_max_disk": 272, "init_thread": 272, "forward_cor": 272, "forward_min_cor": 272, "forward_thread": 272, "forward_max_memori": 272, "forward_max_disk": 272, "add_metadata": 272, "ec": 272, "wc": 272, "mesh_descript": 272, "autodetect": 272, "bathy_descript": 272, "gebco": 272, "2022": 272, "bedmachin": 272, "antarctica": 272, "init_descript": 272, "e3sm_vers": 272, "increment": 272, "mesh_revis": 272, "finest": 272, "min_r": 272, "max_r": 272, "max_depth": 272, "creation_d": 272, "peopl": 272, "contact": 272, "temperaturemax": 272, "statist": 272, "temperature_max": 272, "33": [272, 290], "enable_ocean_initial_condit": 272, "enable_ocean_graph_partit": 272, "enable_seaice_initial_condit": 272, "scrip": 272, "enable_scrip": 272, "transect": 272, "onlin": 272, "member": 272, "offlin": 272, "enable_diagnostics_fil": 272, "coarser": [272, 284], "finer": 272, "comparisonlatresolut": 272, "comparisonlonresolut": 272, "antarct": 272, "polar": [272, 273, 275, 280], "stereograph": 272, "comparisonantarcticstereowidth": 272, "6000": [272, 280], "comparisonantarcticstereoresolut": 272, "arctic": [272, 293], "comparisonarcticstereowidth": 272, "comparisonarcticstereoresolut": 272, "tanh_dz": 272, "16": [272, 288, 290], "3000": 272, "min_layer_thick": [272, 280], "max_layer_thick": [272, 280], "retain": 272, "ecosystem": 273, "gain": 273, "confluenc": 273, "public_html": [273, 275, 277], "soft": [273, 275, 277, 290], "mpi_intel": [273, 275, 276, 277], "36": [273, 277, 288, 290], "condo": [273, 290], "acm": [273, 290], "medium": 273, "acme_high": 273, "load_latest_polaris_intel_impi": [273, 276], "load_latest_polaris_gnu_openmpi": [273, 275, 290], "dst": 274, "calendar": 274, "network": 274, "introduct": 274, "platform": 274, "batch": 274, "wtrw": 274, "ch": 274, "fe": 274, "lustr": 274, "scratch4": 274, "scratch5": 274, "sacctmgr": 274, "assoc": 274, "cluster": 274, "45": 274, "sshare": 274, "sreport": 274, "accountutilizationbyus": 274, "2019": 274, "prioriti": 274, "yellow": 274, "chkhome": 274, "petabyt": 274, "df": 274, "bp": 274, "archiv": [274, 278], "hpss": [274, 278], "front": 274, "tn": 274, "storag": 274, "project_nam": 274, "salloc": [274, 277, 278], "account_nam": 274, "gpu": [274, 278], "hyperthread": [274, 278], "hang": [274, 278], "threads_per_cor": [274, 278], "shared_clim": [274, 290], "load_latest_polaris_gnu_mpich": [274, 278], "load_latest_polaris_intel_openmpi": 275, "compyf": 276, "app": [276, 290], "pmi2": 276, "40": 276, "submit": 277, "workload": 277, "squeue": 277, "my_usernam": [277, 278], "scancel": 277, "jobid": 277, "cancel": 277, "emtpi": 277, "three": [277, 296], "mpi_mpich": [277, 290], "mpi_openmpi": [277, 290], "nompi": [277, 290], "p1": 278, "nersc": 278, "iri": 278, "filesystem": 278, "myquota": 278, "prjquota": 278, "projectid": 278, "m1795": 278, "hsi": 278, "htar": 278, "zstash": 278, "cf": [278, 290], "cdir": [278, 290], "premium": 278, "cray_compil": 278, "8844": 278, "monik": 278, "browser": 278, "grab": 278, "logon": 278, "kernel": 278, "myenv": 278, "ipykernel": 278, "kernelspec": 278, "u1": 278, "interpret": 278, "argv": 278, "ipykernel_launch": 278, "connection_fil": 278, "display_nam": 278, "languag": 278, "2500": 280, "deepest": 280, "stewart": 280, "2017": 280, "delta": [280, 283, 288], "z_2": 280, "z_1": 280, "mathrm": 280, "tanh": 280, "rightarrow": 280, "infti": 280, "z_k": 280, "z_0": 280, "z_": [280, 288], "k": 280, "finder": 280, "n_z": 280, "h_": 280, "scienc": 280, "hydrograph": 280, "climatologi": 280, "250": 280, "5500": 280, "renorm": 280, "51": 280, "221": 280, "ziso": [280, 296], "63": 280, "floor": 280, "flat": [280, 283], "collaps": 280, "adcroft": 280, "campin": 280, "2004": 280, "absenc": 280, "squash": 280, "watercolumn": 280, "press": 280, "batymetri": 280, "stair": 280, "month": 281, "websit": [281, 291], "release_6": 281, "ilicak": 283, "2012": 283, "variat": 283, "distinguish": 283, "zonal": [283, 288], "meridion": [283, 288], "psu": [283, 288], "cooler": 283, "north": 283, "sinusoid": 283, "perturb": [283, 284, 287], "t_0": 283, "t_b": 283, "t_": 283, "z_b": 283, "y_": 283, "l_x": 283, "warmer": 283, "ge": [283, 284], "gradient_width_fract": 283, "l_y": 283, "le": [283, 288], "flow": [283, 284], "stationari": [283, 288], "literatur": 283, "mk": 283, "celsiu": 283, "prognost": 283, "williamson": 284, "1992": 284, "sec": 284, "3a": 284, "skamarock": 284, "gassmann": 284, "bodi": 284, "rotat": [284, 286, 287], "transport": 284, "psi": 284, "proportion": 284, "slow": 284, "icosohydr": 284, "nearest": 284, "insensit": [284, 288], "300": [284, 289], "passiv": 284, "psi_0": 284, "co": [284, 286, 287], "debug_tracers_1": 284, "equatori": 284, "u_0": 284, "tau": 284, "transit": 284, "equat": [284, 286, 287, 288], "vel_pd": 284, "tendenc": [284, 287], "rung": 284, "kutta": 284, "4th": 284, "multipli": 284, "rad": 284, "lat_cent": 284, "lon_cent": 284, "14159265": 284, "2123666": 284, "6667": 284, "hill": 284, "psi0": 284, "qu_conv_thresh": 284, "icos_conv_max": 284, "circul": 284, "roughli": 284, "studi": 284, "propag": [286, 287], "doubli": [286, 287], "assess": [286, 287], "accuraci": [286, 287], "discret": [286, 287], "bishnu": [286, 287], "friction": [286, 287], "neglect": [286, 287], "nonlinear": [286, 287], "analyt": [286, 296], "k_x": [286, 287], "k_y": [286, 287], "availi": [286, 287], "10000": [286, 287], "coriloi": 286, "1e": 286, "amplitud": [286, 287], "ssh_amplitud": [286, 287], "wavelength": [286, 287], "n_wavelengths_x": [286, 287], "n_wavelengths_i": [286, 287], "conv_max": [286, 287], "embed": 287, "eta_0": 287, "span": 288, "arbitrarili": 288, "chosen": 288, "virtu": 288, "examin": 288, "400": 288, "phi": 288, "phi_0": 288, "dz": 288, "ml": 288, "mld": 288, "surface_x": 288, "x_gradient_mixed_lay": 288, "mixed_layer_depth_x": 288, "x_difference_across_mixed_lay": 288, "x_gradient_interior": 288, "spatial": 288, "4x4": 288, "960": 288, "degc": 288, "temperature_gradient_mixed_lay": 288, "temperature_difference_across_mixed_lay": 288, "temperature_gradient_interior": 288, "mixed_layer_depth_temperatur": 288, "surface_salin": 288, "salinity_gradient_mixed_lay": 288, "salinity_difference_across_mixed_lay": 288, "salinity_gradient_interior": 288, "mixed_layer_depth_salin": 288, "scheme": 288, "dictat": 288, "kpp": 288, "restor": 288, "piston": 288, "toward": 288, "temperature_surface_restoring_valu": 288, "temperature_piston_veloc": 288, "salinity_surface_restoring_valu": 288, "salinity_piston_veloc": 288, "temperature_interior_restoring_r": 288, "salinity_interior_restoring_r": 288, "net": 288, "latent": 288, "heat": 288, "bulk": 288, "latent_heat_flux": 288, "sensibl": 288, "sensible_heat_flux": 288, "solar": 288, "shortwav": 288, "shortwave_heat_flux": 288, "evapor": 288, "evaporation_flux": 288, "5e": 288, "rain": 288, "rain_flux": 288, "wind": 288, "wind_stress_zon": 288, "wind_stress_meridion": 288, "welcom": [289, 294], "icosohedr": [289, 294], "pertain": [289, 294], "inher": 289, "warrant": 289, "investig": 289, "load_latest_polari": 290, "minu": 290, "create_polaris_load_script": 290, "load_polaris_1": 290, "0_mpich": 290, "exclud": 290, "wiki": 290, "circular_shelf": 290, "sia_smoke_test": 290, "sia_decomposition_test": 290, "sia_restart_test": 290, "fo_smoke_test": 290, "fo_decomposition_test": 290, "fo_restart_test": 290, "37": 290, "17": 290, "210131_test_new_branch": 290, "my_config": 290, "smaller": 290, "previous_workdir": 290, "paper": 290, "recompil": 290, "safer": 290, "preserv": 290, "test_subdir": 290, "whatev": 290, "clock": 290, "j": 290, "exclus": 290, "job_nam": 290, "fo_integr": 290, "sia_integr": 290, "cosine_bell_cached_init": [290, 295], "ec30to60": 290, "ecwisc30to60": 290, "qu240_for_e3sm": 290, "quwisc240_for_e3sm": 290, "wc14": 290, "suitenam": 290, "seaice_standalone_framework": 291, "71": 293, "35n": 293, "156": 293, "5w": 293, "atmospher": 293, "timeseri": 293, "pair": 293, "prohibit": 295, "speed": 295, "radial": 296}, "objects": {"polaris": [[19, 0, 1, "", "Component"], [24, 0, 1, "", "ModelStep"], [37, 0, 1, "", "Step"], [48, 0, 1, "", "Task"]], "polaris.Component": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_config"], [21, 1, 1, "", "add_step"], [22, 1, 1, "", "add_task"], [23, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[24, 1, 1, "", "__init__"], [25, 1, 1, "", "add_model_config_options"], [26, 1, 1, "", "add_namelist_file"], [27, 1, 1, "", "add_streams_file"], [28, 1, 1, "", "add_yaml_file"], [29, 1, 1, "", "dynamic_model_config"], [30, 1, 1, "", "map_yaml_to_namelist"], [31, 1, 1, "", "partition"], [32, 1, 1, "", "process_inputs_and_outputs"], [33, 1, 1, "", "runtime_setup"], [34, 1, 1, "", "set_model_resources"], [35, 1, 1, "", "setup"], [36, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[37, 1, 1, "", "__init__"], [38, 1, 1, "", "add_dependency"], [39, 1, 1, "", "add_input_file"], [40, 1, 1, "", "add_output_file"], [41, 1, 1, "", "constrain_resources"], [42, 1, 1, "", "run"], [43, 1, 1, "", "runtime_setup"], [44, 1, 1, "", "set_resources"], [45, 1, 1, "", "set_shared_config"], [46, 1, 1, "", "setup"], [47, 1, 1, "", "validate_baselines"]], "polaris.Task": [[48, 1, 1, "", "__init__"], [49, 1, 1, "", "add_step"], [50, 1, 1, "", "configure"], [51, 1, 1, "", "remove_step"], [52, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[53, 2, 1, "", "main"]], "polaris.cache": [[54, 2, 1, "", "update_cache"]], "polaris.components": [[55, 2, 1, "", "get_components"]], "polaris.config": [[56, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[56, 1, 1, "", "__init__"], [57, 1, 1, "", "setup"]], "polaris.io": [[58, 2, 1, "", "download"], [59, 3, 0, "-", "imp_res"], [60, 2, 1, "", "symlink"]], "polaris.job": [[61, 2, 1, "", "get_slurm_options"], [62, 2, 1, "", "write_job_script"]], "polaris.list": [[63, 2, 1, "", "list_cases"], [64, 2, 1, "", "list_machines"], [65, 2, 1, "", "list_suites"]], "polaris.logging": [[66, 2, 1, "", "log_method_call"]], "polaris.mesh": [[67, 0, 1, "", "IcosahedralMeshStep"], [74, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [69, 1, 1, "", "get_cell_width"], [70, 1, 1, "", "get_subdivisions"], [71, 1, 1, "", "make_jigsaw_mesh"], [72, 1, 1, "", "run"], [73, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "build_cell_width_lat_lon"], [76, 1, 1, "", "make_jigsaw_mesh"], [77, 1, 1, "", "run"], [78, 1, 1, "", "setup"]], "polaris.mesh.planar": [[79, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[80, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "run"], [82, 1, 1, "", "save_and_plot_cell_width"], [83, 1, 1, "", "setup"]], "polaris.model_step": [[84, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[85, 2, 1, "", "ingest"], [86, 2, 1, "", "parse_replacements"], [87, 2, 1, "", "replace"], [88, 2, 1, "", "write"]], "polaris.ocean": [[136, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[136, 1, 1, "", "__init__"]], "polaris.ocean.convergence.spherical": [[137, 0, 1, "", "SphericalConvergenceAnalysis"], [143, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "compute_error"], [139, 1, 1, "", "convergence_parameters"], [140, 1, 1, "", "exact_solution"], [141, 1, 1, "", "plot_convergence"], [142, 1, 1, "", "run"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[143, 1, 1, "", "__init__"]], "polaris.ocean.mesh.spherical": [[144, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[145, 0, 1, "", "OceanModelStep"], [150, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "compute_cell_count"], [147, 1, 1, "", "constrain_resources"], [148, 1, 1, "", "map_yaml_to_namelist"], [149, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[151, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[152, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[153, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[153, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[154, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[154, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[155, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "compute_cell_count"], [157, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[158, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"], [160, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[161, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[161, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[162, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[164, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[166, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "run"], [168, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[169, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[169, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[170, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[172, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[174, 0, 1, "", "CosineBell"], [176, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[177, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[179, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "compute_cell_count"], [181, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[182, 0, 1, "", "Init"], [184, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[185, 0, 1, "", "Viz"], [187, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[189, 0, 1, "", "InertialGravityWave"], [190, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[189, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[191, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[193, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "normal_velocity"], [195, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[196, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "compute_cell_count"], [198, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[199, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[201, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[203, 0, 1, "", "ManufacturedSolution"], [204, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[203, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[205, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[207, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "normal_velocity"], [209, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[210, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "compute_cell_count"], [212, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[213, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[215, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[217, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[218, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[218, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[219, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[219, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[220, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[220, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[221, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[221, 1, 1, "", "__init__"], [222, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[223, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[223, 1, 1, "", "__init__"], [224, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[225, 2, 1, "", "generate_1d_grid"], [226, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[227, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[228, 2, 1, "", "alter_bottom_depth"], [229, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[230, 2, 1, "", "compute_min_max_level_cell"], [231, 2, 1, "", "compute_z_level_layer_thickness"], [232, 2, 1, "", "compute_z_level_resting_thickness"], [233, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[234, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[89, 2, 1, "", "get_available_parallel_resources"], [90, 2, 1, "", "get_parallel_command"], [91, 2, 1, "", "run_command"], [92, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[93, 2, 1, "", "write"]], "polaris.remap": [[94, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[94, 1, 1, "", "__init__"], [95, 1, 1, "", "dst_from_lon_lat"], [96, 1, 1, "", "dst_from_mpas"], [97, 1, 1, "", "dst_from_points"], [98, 1, 1, "", "dst_from_proj"], [99, 1, 1, "", "dst_global_lon_lat"], [100, 1, 1, "", "get_remapper"], [101, 1, 1, "", "runtime_setup"], [102, 1, 1, "", "src_from_lon_lat"], [103, 1, 1, "", "src_from_mpas"], [104, 1, 1, "", "src_from_proj"]], "polaris.run": [[105, 2, 1, "", "complete_step_run"], [106, 2, 1, "", "load_dependencies"], [109, 2, 1, "", "setup_config"], [110, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[107, 2, 1, "", "run_single_step"], [108, 2, 1, "", "run_tasks"]], "polaris.seaice": [[255, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[255, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[256, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[257, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[257, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[258, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[258, 1, 1, "", "__init__"], [259, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[260, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[260, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[261, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[261, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[262, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[262, 1, 1, "", "__init__"], [263, 1, 1, "", "run"]], "polaris.setup": [[111, 2, 1, "", "setup_task"], [112, 2, 1, "", "setup_tasks"]], "polaris.streams": [[113, 2, 1, "", "read"], [114, 2, 1, "", "update_defaults"], [115, 2, 1, "", "update_tree"], [116, 2, 1, "", "write"]], "polaris.suite": [[117, 2, 1, "", "setup_suite"]], "polaris.validate": [[118, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[119, 2, 1, "", "plot_global"]], "polaris.viz": [[120, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[121, 0, 1, "", "PolarisYaml"], [125, 2, 1, "", "main_mpas_to_yaml"], [126, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [127, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "read"], [123, 1, 1, "", "update"], [124, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 271], "share": [1, 6, 9, 251, 271], "step": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 134, 248, 271, 283, 284, 286, 287, 288, 289, 294], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 42, 72, 77, 81, 105, 106, 107, 108, 109, 110, 135, 142, 159, 167, 171, 173, 183, 186, 188, 192, 200, 202, 206, 214, 216, 222, 224, 248, 252, 259, 263, 283, 284, 286, 287, 288, 289, 290, 293, 294], "onc": 1, "befor": 1, "depend": [1, 6, 248], "output": [1, 248, 271], "daughter": 1, "task": [1, 3, 48, 49, 50, 51, 52, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 240, 244, 247, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 266, 271, 285, 289, 290, 292, 294, 296], "work": 1, "directori": [1, 246], "structur": [1, 246], "i": [1, 290], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 252, 270, 272, 290], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 18, 135, 248, 252, 277], "other": [1, 132, 248, 271, 277, 290], "implement": [1, 2], "set": [1, 135, 252, 290], "up": [1, 252, 290], "test": [1, 2, 6, 134, 135, 271, 272, 293], "And": 1, "valid": [1, 2, 3, 17, 118, 170, 171, 238, 258, 259, 271, 290], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 135, 252, 271, 273, 274, 275, 276, 277, 278, 283, 284, 286, 287, 288, 289, 293, 294], "same": 2, "api": 3, "refer": [3, 134, 135], "compon": [3, 14, 19, 20, 21, 22, 23, 55, 135, 235, 245, 251, 252, 264, 281, 290, 291], "polari": [3, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 248, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 290], "framework": [3, 10, 134, 135, 238, 239, 241, 242, 243, 251, 254, 267, 279], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 63, 64, 65], "setup": [3, 5, 8, 35, 46, 57, 73, 78, 83, 111, 112, 149, 160, 168, 248], "suit": [3, 5, 8, 117, 249, 282, 290, 295], "cach": [3, 5, 8, 54, 248], "mpas_to_yaml": [3, 5], "base": [3, 134], "class": [3, 251], "modelstep": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "config": [3, 6, 9, 14, 56, 57, 132, 135, 245, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 286, 287, 288, 289, 293, 294], "io": [3, 11, 58, 59, 60], "job": [3, 61, 62, 277, 290], "log": [3, 12, 66], "mesh": [3, 13, 14, 18, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 134, 135, 144, 271, 283, 284, 286, 287, 288, 289, 293, 294], "model_step": [3, 84], "namelist": [3, 14, 85, 86, 87, 88, 135], "parallel": [3, 89, 90, 91, 92], "proven": [3, 15, 93], "remap": [3, 16, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "stream": [3, 14, 113, 114, 115, 116, 135, 271], "viz": [3, 119, 120, 172, 173, 185, 186, 187, 188, 201, 202, 215, 216, 223, 224, 239, 241, 242, 243, 262, 263, 267, 271], "yaml": [3, 14, 121, 122, 123, 124, 125, 126, 127, 135], "build": [4, 132, 252, 290], "serial": [5, 8, 107, 108], "deploi": 6, "new": [6, 132, 271], "spack": [6, 132, 252, 290], "environ": [6, 132, 252, 268, 290], "where": 6, "we": 6, "updat": [6, 14, 123, 252], "mach": 6, "conda": [6, 252, 268, 277, 290], "identifi": 6, "e3sm": [6, 14, 135, 252, 290], "machin": [6, 132, 252, 277, 290], "describ": [6, 132], "modul": [6, 8, 251, 252], "env": 6, "variabl": [6, 17], "etc": 6, "creat": [6, 252, 271], "remot": [6, 278], "branch": 6, "petsc": [6, 252], "netlib": [6, 252], "lapack": [6, 252], "albani": [6, 252], "troubleshoot": [6, 252, 268], "mpa": [6, 135, 237, 265], "ocean": [6, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 281], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 132, 135, 245, 248, 271, 272], "comment": 9, "symlink": [11, 60, 248], "download": [11, 58, 248], "spheric": [13, 18, 80, 81, 82, 83, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144], "planar": [13, 18, 79], "uniform": [13, 135, 280], "gener": 13, "model": [14, 134, 135, 145, 146, 147, 148, 149, 150, 236, 265, 271, 290], "an": [14, 135, 271], "ad": [14, 132, 248, 271], "dynam": [14, 271], "input": [14, 248], "partit": [14, 31], "pio": 14, "make": [14, 271], "graph": 14, "against": 17, "baselin": 17, "norm": 17, "visual": [18, 271, 293], "horizont": [18, 271], "field": 18, "global": 18, "lat": 18, "lon": 18, "plot": [18, 271], "add_config": 20, "add_step": [21, 49], "add_task": 22, "remove_step": [23, 51], "add_model_config_opt": 25, "add_namelist_fil": 26, "add_streams_fil": 27, "add_yaml_fil": 28, "dynamic_model_config": [29, 157, 163, 181, 198, 212], "map_yaml_to_namelist": [30, 148], "process_inputs_and_output": 32, "runtime_setup": [33, 43, 101, 248], "set_model_resourc": 34, "update_namelist_pio": 36, "add_depend": 38, "add_input_fil": 39, "add_output_fil": 40, "constrain_resourc": [41, 147, 248], "set_resourc": 44, "set_shared_config": [45, 52], "validate_baselin": 47, "configur": [50, 165, 175, 250, 268], "__main__": 53, "main": 53, "update_cach": 54, "get_compon": 55, "polarisconfigpars": [56, 57], "imp_r": 59, "get_slurm_opt": 61, "write_job_script": 62, "list_cas": 63, "list_machin": 64, "list_suit": 65, "log_method_cal": 66, "icosahedralmeshstep": [67, 68, 69, 70, 71, 72, 73], "build_subdivisions_cell_width_lat_lon": 68, "get_cell_width": 69, "get_subdivis": 70, "make_jigsaw_mesh": [71, 76], "quasiuniformsphericalmeshstep": [74, 75, 76, 77, 78], "build_cell_width_lat_lon": 75, "compute_planar_hex_nx_ni": 79, "sphericalbasestep": [80, 81, 82, 83], "save_and_plot_cell_width": 82, "make_graph_fil": 84, "ingest": 85, "parse_replac": 86, "replac": 87, "write": [88, 93, 116, 124], "get_available_parallel_resourc": 89, "get_parallel_command": 90, "run_command": 91, "set_cores_per_nod": 92, "mappingfilestep": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "dst_from_lon_lat": 95, "dst_from_mpa": 96, "dst_from_point": 97, "dst_from_proj": 98, "dst_global_lon_lat": 99, "get_remapp": 100, "src_from_lon_lat": 102, "src_from_mpa": 103, "src_from_proj": 104, "complete_step_run": 105, "load_depend": 106, "run_single_step": 107, "run_task": 108, "setup_config": 109, "unpickle_suit": 110, "setup_task": [111, 112], "read": [113, 122], "update_default": 114, "update_tre": 115, "setup_suit": 117, "compare_vari": 118, "globe": 119, "plot_glob": 119, "plot_horiz_field": 120, "polarisyaml": [121, 122, 123, 124], "main_mpas_to_yaml": 125, "mpas_namelist_and_streams_to_yaml": 126, "yaml_to_mpas_stream": 127, "anvil": [128, 273], "intel": [128, 130, 131, 273, 275, 276], "gnu": [128, 129, 130, 131, 133, 273, 274, 275, 278], "chicoma": [129, 274], "cpu": [129, 133, 274, 278], "chrysali": [130, 275], "compymcnodefac": [131, 276], "support": [132, 236, 252, 265, 277, 290], "perlmutt": [133, 278], "pm": 133, "baroclinic_channel": [134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 238], "inertial_gravity_wav": [134, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 241], "cosine_bel": [134, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 239, 282], "manufactured_solut": [134, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 242], "single_column": [134, 217, 218, 219, 220, 221, 222, 223, 224, 243, 253, 256, 257, 258, 259, 260, 261, 262, 263, 267], "converg": [134, 135, 137, 138, 139, 140, 141, 142, 143, 287], "potenti": [134, 135], "energi": [134, 135], "rpe": [134, 135, 151, 164, 165, 166, 167, 168, 238, 283], "vertic": [134, 135, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 271, 280, 283, 284, 286, 287, 288, 289], "coordin": [134, 135, 271, 280], "v": 135, "map": 135, "omega": 135, "mpi": [135, 277], "resourc": 135, "time": [135, 271, 283, 284, 286, 287, 288, 289, 294], "interv": 135, "quasi": 135, "icosahedr": 135, "rest": 135, "sphericalconvergenceanalysi": [137, 138, 139, 140, 141, 142], "compute_error": 138, "convergence_paramet": 139, "exact_solut": [140, 178, 193, 194, 195, 207, 208, 209, 241, 242], "plot_converg": 141, "sphericalconvergenceforward": 143, "add_spherical_base_mesh_step": 144, "oceanmodelstep": [145, 146, 147, 148, 149], "compute_cell_count": [146, 156, 180, 197, 211], "get_time_interval_str": 150, "compute_rp": 151, "add_baroclinic_channel_task": 152, "decomp": [153, 238, 283], "default": [154, 238, 271, 283], "forward": [155, 156, 157, 179, 180, 181, 196, 197, 198, 210, 211, 212, 219, 238, 239, 241, 242, 243, 260, 267, 271], "init": [158, 159, 160, 182, 183, 184, 199, 200, 213, 214, 221, 222, 238, 239, 241, 242, 243, 271], "restart": [161, 162, 163, 238, 283, 293], "restart_step": [162, 163], "restartstep": [162, 163], "analysi": [166, 167, 168, 177, 178, 191, 192, 205, 206, 239, 241, 242, 271], "thread": [169, 238, 283], "cosinebel": [174, 175], "add_cosine_bell_task": 176, "vizmap": [187, 188], "inertialgravitywav": 189, "add_inertial_gravity_wave_task": 190, "exactsolut": [193, 194, 195, 207, 208, 209], "normal_veloc": [194, 208], "ssh": [195, 209], "manufacturedsolut": 203, "add_manufactured_solution_task": 204, "add_single_column_task": [217, 256], "cvmix": [218, 243, 288], "ideal_ag": 220, "idealag": 220, "grid_1d": [225, 226], "generate_1d_grid": 225, "write_1d_grid": 226, "init_vertical_coord": 227, "partial_cel": [228, 229], "alter_bottom_depth": 228, "alter_ssh": 229, "zlevel": [230, 231, 232, 233], "compute_min_max_level_cel": 230, "compute_z_level_layer_thick": 231, "compute_z_level_resting_thick": 232, "init_z_level_vertical_coord": 233, "zstar": 234, "init_z_star_vertical_coord": 234, "initi": [237, 265, 271, 283, 284, 286, 287, 288, 289, 293, 294], "condit": [237, 265, 271, 283, 284, 286, 287, 288, 289, 293, 294], "boundari": 237, "forc": [237, 265, 283, 284, 286, 287, 288, 289, 293, 294], "base_mesh": 239, "ideal": [243, 288], "ag": [243, 288], "categori": [244, 289, 294], "constructor": [245, 248, 250], "organ": 247, "attribut": [248, 250], "copi": 248, "pull": 249, "request": 249, "pr": 249, "nightli": 249, "overview": 251, "code": [251, 252, 271], "style": [251, 252], "packag": 251, "within": 251, "group": [251, 271], "relat": 251, "quick": [252, 290], "start": [252, 271, 290], "develop": [252, 270, 271], "unix": 252, "shell": 252, "repositori": 252, "beginn": 252, "compil": 252, "system": 252, "unknown": 252, "what": 252, "script": [252, 290], "doe": 252, "flag": 252, "activ": 252, "switch": 252, "between": [252, 271], "differ": 252, "onli": 252, "repo": 252, "worktre": 252, "advanc": 252, "seaic": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "exact_restart": [257, 258, 259], "exactrestart": 257, "standard_phys": [261, 262, 263], "standardphys": 261, "standard_physics_test": 267, "exact_restart_test": 267, "solver": 268, "error": 268, "when": 268, "proxi": 268, "lanl": 268, "mac": 268, "gethostbynam": 268, "fail": 268, "glossari": [269, 270], "": 270, "guid": 270, "tutori": [270, 271], "compass": 270, "get": 271, "vari": 271, "resolut": 271, "paramet": 271, "thing": 271, "out": 271, "defin": 271, "more": 271, "again": 271, "one": 271, "second": 271, "enhanc": 271, "comput": 271, "cell": 271, "count": 271, "superclass": 271, "studi": 271, "how": 271, "pass": 271, "data": [271, 278], "A": 272, "case": 272, "slurm": 277, "queue": 277, "mpich": 277, "openmpi": 277, "No": 277, "forg": 277, "jupyt": 278, "notebook": 278, "1d": 280, "grid": [280, 283, 284, 286, 287, 288, 289], "type": 280, "tanh_dz": 280, "60layerphc": 280, "100layere3smv1": 280, "3d": 280, "z": 280, "star": 280, "level": 280, "cosine_bell_cached_init": 282, "baroclin": 283, "channel": 283, "descript": [283, 284, 286, 287, 288, 289, 293, 294], "durat": [283, 284, 286, 287, 288, 289, 293, 294], "core": [283, 284, 286, 287, 288, 289, 293, 294], "cosin": 284, "bell": 284, "inerti": 286, "graviti": 286, "wave": 286, "manufactur": 287, "solut": 287, "singl": [288, 293], "column": [288, 293], "task_nam": [289, 294], "yet": 290, "load": 290, "standalon": 290, "sea": 291, "ic": 291, "standard": 293, "physic": 293, "timestep": 293, "exact": 293}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [245, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [283, "mesh"], [283, "id2"], [283, "id9"], [283, "id17"], [283, "id25"], [283, "id32"], [284, "mesh"], [286, "mesh"], [287, "mesh"], [288, "mesh"], [288, "id3"], [288, "id8"], [289, "mesh"], [293, "mesh"], [293, "id1"], [293, "id6"], [294, "mesh"]], "model_step": [[3, "model-step"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [238, "validate"]], "viz": [[3, "viz"], [239, "viz"], [241, "viz"], [242, "viz"], [243, "viz"], [267, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [271, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [279, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [135, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [135, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "Provenance": [[15, "provenance"]], "Remapping": [[16, "remapping"]], "Validation": [[17, "validation"]], "Validating variables against a baseline": [[17, "validating-variables-against-a-baseline"]], "Validating variables": [[17, "validating-variables"]], "Norms": [[17, "norms"]], "Visualization": [[18, "visualization"]], "horizontal fields from planar meshes": [[18, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[18, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[19, "polaris-component"]], "polaris.Component.add_config": [[20, "polaris-component-add-config"]], "polaris.Component.add_step": [[21, "polaris-component-add-step"]], "polaris.Component.add_task": [[22, "polaris-component-add-task"]], "polaris.Component.remove_step": [[23, "polaris-component-remove-step"]], "polaris.ModelStep": [[24, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[25, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[26, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[27, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[28, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[29, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[30, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[31, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[32, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[33, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[34, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[35, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[36, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[37, "polaris-step"]], "polaris.Step.add_dependency": [[38, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[39, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[40, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[41, "polaris-step-constrain-resources"]], "polaris.Step.run": [[42, "polaris-step-run"]], "polaris.Step.runtime_setup": [[43, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[44, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[45, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[46, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[47, "polaris-step-validate-baselines"]], "polaris.Task": [[48, "polaris-task"]], "polaris.Task.add_step": [[49, "polaris-task-add-step"]], "polaris.Task.configure": [[50, "polaris-task-configure"]], "polaris.Task.remove_step": [[51, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[52, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[53, "polaris-main-main"]], "polaris.cache.update_cache": [[54, "polaris-cache-update-cache"]], "polaris.components.get_components": [[55, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[56, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[57, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[58, "polaris-io-download"]], "polaris.io.imp_res": [[59, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[61, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[62, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[63, "polaris-list-list-cases"]], "polaris.list.list_machines": [[64, "polaris-list-list-machines"]], "polaris.list.list_suites": [[65, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[66, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[67, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[68, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[69, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[70, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[71, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[72, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[73, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[75, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[79, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[81, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[82, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[83, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[84, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[85, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[86, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[87, "polaris-namelist-replace"]], "polaris.namelist.write": [[88, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[89, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[90, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[91, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[92, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[93, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[94, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[95, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[96, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[97, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[98, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[99, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[100, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[101, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[102, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[103, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[104, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[105, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[106, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[107, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[108, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[109, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[110, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[111, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[112, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[113, "polaris-streams-read"]], "polaris.streams.update_defaults": [[114, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[115, "polaris-streams-update-tree"]], "polaris.streams.write": [[116, "polaris-streams-write"]], "polaris.suite.setup_suite": [[117, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[118, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[119, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[120, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[121, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[122, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[123, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[124, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[125, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[126, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[127, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[128, "anvil"], [273, "anvil"]], "intel": [[128, "intel"], [130, "intel"], [131, "intel"]], "gnu": [[128, "gnu"], [130, "gnu"], [131, "gnu"]], "Chicoma": [[129, "chicoma"], [274, "chicoma"]], "chicoma-cpu, gnu": [[129, "chicoma-cpu-gnu"]], "Chrysalis": [[130, "chrysalis"], [275, "chrysalis"]], "CompyMcNodeFace": [[131, "compymcnodeface"], [276, "compymcnodeface"]], "Machines": [[132, "machines"], [277, "machines"]], "Supported Machines": [[132, "supported-machines"], [277, "supported-machines"]], "Other Machines": [[132, "other-machines"], [277, "other-machines"]], "Adding a New Supported Machine": [[132, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[132, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[132, "describing-a-spack-environment"]], "Building the Spack Environment": [[132, "building-the-spack-environment"]], "Perlmutter": [[133, "perlmutter"], [278, "perlmutter"]], "pm-cpu, gnu": [[133, "pm-cpu-gnu"]], "ocean": [[134, "ocean"]], "Tasks": [[134, "tasks"], [240, "tasks"], [250, "tasks"], [253, "tasks"], [266, "tasks"], [285, "tasks"], [292, "tasks"], [296, "tasks"]], "baroclinic_channel": [[134, "baroclinic-channel"], [238, "baroclinic-channel"]], "inertial_gravity_wave": [[134, "inertial-gravity-wave"], [241, "inertial-gravity-wave"]], "cosine_bell": [[134, "cosine-bell"], [239, "cosine-bell"]], "manufactured_solution": [[134, "manufactured-solution"], [242, "manufactured-solution"]], "single_column": [[134, "single-column"], [243, "single-column"], [253, "single-column"], [267, "single-column"]], "Ocean Framework": [[134, "ocean-framework"]], "Spherical Convergence Tests": [[134, "spherical-convergence-tests"], [135, "spherical-convergence-tests"]], "Ocean Model": [[134, "ocean-model"]], "Spherical Base Mesh Step": [[134, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[134, "reference-potential-energy-rpe"]], "Vertical coordinates": [[134, "vertical-coordinates"]], "Ocean framework": [[135, "ocean-framework"]], "YAML files vs. namelists and streams": [[135, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[135, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[135, "setting-mpi-resources"]], "Setting time intervals in model config options": [[135, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[135, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[135, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[135, "vertical-coordinate"], [280, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[135, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[136, "polaris-ocean-ocean"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis": [[137, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error": [[138, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-compute-error"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters": [[139, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution": [[140, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-exact-solution"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence": [[141, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run": [[142, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-run"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[143, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[144, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[145, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[146, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[147, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[148, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[149, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[150, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[151, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[152, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[153, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[154, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[155, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[156, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[157, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[158, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[159, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[160, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[161, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[162, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[163, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[164, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[165, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[166, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[167, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[168, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[169, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[170, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[171, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[172, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[173, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[174, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[175, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[176, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[177, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[178, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[179, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[180, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[181, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[182, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[183, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[184, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[185, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[186, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[187, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[188, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[189, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[190, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[191, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[192, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[193, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[194, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[195, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[196, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[197, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[198, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[199, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[200, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[201, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[202, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[203, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[204, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[205, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[206, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[207, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[208, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[209, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[210, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[211, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[212, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[213, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[214, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[215, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[216, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[217, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[218, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[219, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[220, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[221, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[222, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[223, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[224, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[225, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[226, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[227, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[228, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[229, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[230, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[231, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[232, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[233, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[234, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[235, "ocean-component"], [281, "ocean-component"]], "Models": [[236, "models"]], "Supported Models": [[236, "supported-models"]], "MPAS-Ocean": [[237, "mpas-ocean"]], "Initial conditions": [[237, "initial-conditions"], [265, "initial-conditions"]], "Boundary conditions": [[237, "boundary-conditions"]], "Forcing": [[237, "forcing"], [265, "forcing"]], "framework": [[238, "framework"], [239, "framework"], [241, "framework"], [242, "framework"], [243, "framework"], [267, "framework"]], "init": [[238, "init"], [239, "init"], [241, "init"], [242, "init"], [243, "init"]], "forward": [[238, "forward"], [239, "forward"], [241, "forward"], [242, "forward"], [243, "forward"], [267, "forward"]], "default": [[238, "default"], [283, "default"]], "decomp": [[238, "decomp"], [283, "decomp"]], "restart": [[238, "restart"], [283, "restart"]], "threads": [[238, "threads"]], "rpe": [[238, "rpe"], [283, "rpe"]], "base_mesh": [[239, "base-mesh"]], "analysis": [[239, "analysis"], [241, "analysis"], [242, "analysis"]], "exact_solution": [[241, "exact-solution"], [242, "exact-solution"]], "cvmix": [[243, "cvmix"], [288, "cvmix"]], "ideal age": [[243, "ideal-age"], [288, "ocean-single-column-ideal-age"]], "Categories of tasks": [[244, "categories-of-tasks"]], "Constructor": [[245, "constructor"]], "Config file": [[245, "config-file"]], "Directory structure": [[246, "directory-structure"]], "Organization of Tasks": [[247, "organization-of-tasks"]], "Steps": [[248, "steps"]], "Step attributes": [[248, "step-attributes"]], "constructor": [[248, "constructor"], [250, "constructor"]], "setup()": [[248, "setup"]], "constrain_resources()": [[248, "constrain-resources"]], "runtime_setup()": [[248, "runtime-setup"]], "run()": [[248, "run"]], "inputs and outputs": [[248, "inputs-and-outputs"]], "Input files": [[248, "input-files"]], "Symlinks to input files": [[248, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[248, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[248, "downloading-and-symlinking-input-files"]], "Copying input files": [[248, "copying-input-files"]], "Output files": [[248, "output-files"]], "Cached output files": [[248, "cached-output-files"]], "Adding other steps as dependencies": [[248, "adding-other-steps-as-dependencies"]], "Suites": [[249, "suites"], [282, "suites"], [290, "suites"], [295, "suites"]], "Pull-Request (PR) suite": [[249, "pull-request-pr-suite"]], "Nightly suite": [[249, "nightly-suite"]], "Task attributes": [[250, "task-attributes"]], "configure()": [[250, "configure"]], "Overview": [[251, "overview"]], "Code Style": [[251, "code-style"]], "Packages and Modules": [[251, "packages-and-modules"]], "Packages": [[251, "packages"]], "Modules": [[251, "modules"]], "Classes": [[251, "classes"]], "Code sharing": [[251, "code-sharing"]], "\u2026in the polaris framework": [[251, "in-the-polaris-framework"]], "\u2026within a component": [[251, "within-a-component"]], "\u2026within a group of related tasks": [[251, "within-a-group-of-related-tasks"]], "\u2026within a task": [[251, "within-a-task"]], "Quick Start for Developers": [[252, "quick-start-for-developers"]], "Unix Shell": [[252, "unix-shell"]], "Set up a polaris repository: for beginners": [[252, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[252, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[252, "supported-machines"]], "Environments with Albany": [[252, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[252, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[252, "unknown-machines"]], "What the script does": [[252, "what-the-script-does"]], "Optional flags": [[252, "optional-flags"]], "Activating the environment": [[252, "activating-the-environment"]], "Switching between different polaris environments": [[252, "switching-between-different-polaris-environments"]], "Troubleshooting": [[252, "troubleshooting"], [268, "troubleshooting"]], "Creating/updating only the polaris environment": [[252, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[252, "building-e3sm-components"]], "Running polaris from the repo": [[252, "running-polaris-from-the-repo"]], "Code style for polaris": [[252, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[252, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[253, "seaice"]], "SeaIce framework": [[254, "seaice-framework"]], "polaris.seaice.SeaIce": [[255, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[256, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[257, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[258, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[259, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[260, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[261, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[262, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[263, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[264, "seaice-component"]], "Supported Model: MPAS-Seaice": [[265, "supported-model-mpas-seaice"]], "standard_physics_test": [[267, "standard-physics-test"]], "exact_restart_test": [[267, "exact-restart-test"]], "Solver errors when configuring conda environment": [[268, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[268, "proxy-on-lanl-macs"]], "gethostbyname failed": [[268, "gethostbyname-failed"]], "Glossary": [[269, "glossary"], [270, null]], "Polaris": [[270, "polaris"]], "User's guide": [[270, null]], "Developer's guide": [[270, null]], "Tutorials": [[270, null]], "Compass": [[270, "compass"]], "Developer Tutorial: Adding a new test group": [[271, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[271, "getting-started"]], "Making a new test group": [[271, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[271, "adding-a-default-task"]], "Varying resolution and other parameters": [[271, "varying-resolution-and-other-parameters"]], "Adding the init step": [[271, "adding-the-init-step"]], "Creating a horizontal mesh": [[271, "creating-a-horizontal-mesh"]], "Adding a config file": [[271, "adding-a-config-file"]], "Adding the step to the task": [[271, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[271, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[271, "creating-an-initial-condition"]], "Adding plots": [[271, "adding-plots"]], "Adding step outputs": [[271, "adding-step-outputs"]], "Adding validation": [[271, "adding-validation"], [271, "id1"]], "Test things out!": [[271, "test-things-out"]], "Adding the forward step": [[271, "adding-the-forward-step"]], "Defining model config options and streams": [[271, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[271, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[271, "adding-more-validation"]], "Test the task again!": [[271, "test-the-task-again"]], "Adding a visualization step": [[271, "adding-a-visualization-step"]], "Adding the viz step to the task": [[271, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[271, "test-the-task-one-more-time"]], "Adding a second task": [[271, "adding-a-second-task"]], "Enhancements": [[271, "enhancements"]], "Adding model config options in code": [[271, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[271, "adding-dynamic-model-config-options"]], "Computing the cell count": [[271, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[271, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[271, "adding-a-parameter-study"]], "Adding the steps to the task": [[271, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[271, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[271, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[272, "config-files"]], "A \u201cuser\u201d config file": [[272, "a-user-config-file"]], "Test-case config files": [[272, "test-case-config-files"]], "config options": [[273, "config-options"], [274, "config-options"], [275, "config-options"], [276, "config-options"], [277, "config-options"], [278, "config-options"], [283, "config-options"], [283, "id7"], [283, "id14"], [283, "id22"], [283, "id30"], [283, "id37"], [284, "config-options"], [286, "config-options"], [287, "config-options"], [288, "config-options"], [288, "id1"], [288, "id6"], [288, "id13"], [289, "config-options"], [293, "config-options"], [293, "id5"], [293, "id10"], [294, "config-options"]], "Intel on Anvil": [[273, "intel-on-anvil"]], "Gnu on Anvil": [[273, "gnu-on-anvil"]], "Chicoma-CPU": [[274, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[274, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[275, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[275, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[276, "intel-on-compymcnodeface"]], "Slurm job queueing": [[277, "slurm-job-queueing"]], "MPICH": [[277, "mpich"]], "OpenMPI": [[277, "openmpi"]], "No MPI from conda-forge": [[277, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[278, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[278, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[278, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[280, "d-grid-type"]], "uniform": [[280, "uniform"]], "tanh_dz": [[280, "tanh-dz"]], "60layerPHC": [[280, "layerphc"]], "100layerE3SMv1": [[280, "layere3smv1"]], "3D vertical coordinates": [[280, "d-vertical-coordinates"]], "z-star": [[280, "z-star"]], "z-level": [[280, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[282, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[283, "baroclinic-channel"]], "description": [[283, "description"], [283, "id1"], [283, "id8"], [283, "id16"], [283, "id24"], [284, "description"], [286, "description"], [287, "description"], [288, "description"], [288, "id2"], [288, "id7"], [289, "description"], [293, "description"], [294, "description"]], "vertical grid": [[283, "vertical-grid"], [283, "id3"], [283, "id10"], [283, "id18"], [283, "id26"], [283, "id33"], [284, "vertical-grid"], [286, "vertical-grid"], [287, "vertical-grid"], [288, "vertical-grid"], [288, "id4"], [288, "id9"], [289, "vertical-grid"]], "initial conditions": [[283, "initial-conditions"], [283, "id4"], [283, "id11"], [283, "id19"], [283, "id27"], [283, "id34"], [284, "initial-conditions"], [286, "initial-conditions"], [287, "initial-conditions"], [288, "initial-conditions"], [288, "id5"], [288, "id10"], [289, "initial-conditions"], [293, "initial-conditions"], [293, "id2"], [293, "id7"], [294, "initial-conditions"]], "forcing": [[283, "forcing"], [283, "id5"], [283, "id12"], [283, "id20"], [283, "id28"], [283, "id35"], [284, "forcing"], [286, "forcing"], [287, "forcing"], [288, "forcing"], [288, "id11"], [289, "forcing"], [293, "forcing"], [293, "id3"], [293, "id8"], [294, "forcing"]], "time step and run duration": [[283, "time-step-and-run-duration"], [283, "id6"], [283, "id13"], [283, "id21"], [283, "id29"], [283, "id36"], [284, "time-step-and-run-duration"], [286, "time-step-and-run-duration"], [287, "time-step-and-run-duration"], [288, "time-step-and-run-duration"], [288, "id12"], [289, "time-step-and-run-duration"], [294, "time-step-and-run-duration"]], "cores": [[283, "cores"], [283, "id15"], [283, "id23"], [283, "id31"], [283, "id38"], [284, "cores"], [286, "cores"], [287, "cores"], [288, "cores"], [288, "id14"], [289, "cores"], [293, "cores"], [293, "id4"], [293, "id9"], [294, "cores"]], "thread": [[283, "thread"]], "cosine bell": [[284, "cosine-bell"]], "inertial gravity wave": [[286, "inertial-gravity-wave"]], "manufactured solution": [[287, "manufactured-solution"]], "convergence": [[287, "convergence"]], "single column": [[288, "single-column"], [293, "single-column"]], "<Category of task>": [[289, "ocean-category-of-task"], [294, "seaice-category-of-task"]], "task_name": [[289, "task-name"], [294, "task-name"]], "Quick Start for Users": [[290, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[290, null]], "Loading polaris conda and spack environments": [[290, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[290, "e3sm-supported-machines"]], "Other machines": [[290, "other-machines"]], "Building supported E3SM components as standalone models": [[290, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[290, "setting-up-tasks"]], "Running a task": [[290, "running-a-task"]], "Running with a job script": [[290, "running-with-a-job-script"]], "Sea ice component": [[291, "sea-ice-component"]], "standard physics test": [[293, "standard-physics-test"]], "timestep and run duration": [[293, "timestep-and-run-duration"], [293, "id11"]], "visualization": [[293, "visualization"]], "exact restart test": [[293, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[19, "polaris.Component"]], "__init__() (polaris.component method)": [[19, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[20, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[21, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[22, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[23, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[24, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[24, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[25, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[29, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[30, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[31, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[32, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[33, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[34, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[35, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[36, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[37, "polaris.Step"]], "__init__() (polaris.step method)": [[37, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[38, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[39, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[40, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[41, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[42, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[43, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[44, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[45, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[46, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[47, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[48, "polaris.Task"]], "__init__() (polaris.task method)": [[48, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[49, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[50, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[51, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[52, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[53, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[54, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[55, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[56, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[56, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[58, "polaris.io.download"]], "module": [[59, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[59, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[61, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[62, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[63, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[64, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[65, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[66, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[69, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[79, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[80, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[80, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[84, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[85, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[86, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[87, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[88, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[89, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[90, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[91, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[92, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[93, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[94, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[105, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[106, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[107, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[108, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[109, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[110, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[111, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[112, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[113, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[114, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[115, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[116, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[117, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[118, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[119, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[120, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[121, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[121, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[122, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[123, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[124, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[125, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[126, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[127, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[136, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[136, "polaris.ocean.Ocean.__init__"]], "sphericalconvergenceanalysis (class in polaris.ocean.convergence.spherical)": [[137, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[137, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[138, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[139, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[140, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution"]], "plot_convergence() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[141, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[142, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[143, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[143, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[144, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[145, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[145, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[146, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[147, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[148, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[149, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[150, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[151, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[152, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[153, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[153, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[154, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[154, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[155, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[155, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[156, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[157, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[158, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[158, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[159, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[160, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[161, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[161, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[162, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[162, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[163, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[164, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[164, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[165, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[166, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[166, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[167, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[168, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[169, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[169, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[170, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[170, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[171, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[172, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[172, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[173, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[174, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[174, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[175, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[176, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[177, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[177, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[178, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[179, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[179, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[180, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[181, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[182, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[182, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[183, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[184, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[185, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[185, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[186, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[187, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[187, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[188, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[189, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[189, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[191, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[191, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[192, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[193, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[193, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[194, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[195, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[196, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[196, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[197, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[198, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[199, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[199, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[200, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[201, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[201, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[202, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[203, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[203, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[204, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[205, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[205, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[206, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[207, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[207, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[208, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[209, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[210, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[210, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[211, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[212, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[213, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[213, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[214, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[215, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[215, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[216, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[217, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[218, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[218, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[219, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[219, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[220, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[220, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[221, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[221, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[222, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[223, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[223, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[224, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[225, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[226, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[227, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[228, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[229, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[230, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[231, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[232, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[233, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[234, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[255, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[255, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[256, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[257, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[257, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[258, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[258, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[259, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[260, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[260, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[261, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[261, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[262, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[262, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[263, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})