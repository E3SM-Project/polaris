Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.geostrophic.viz.VizMap", "polaris.ocean.tasks.geostrophic.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "cosine_bell", "geostrophic", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "cosine bell", "geostrophic", "Tasks", "inertial gravity wave", "manufactured solution", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 19, 21, 38, 46, 49, 50, 53, 136, 139, 154, 163, 164, 171, 174, 179, 184, 199, 256, 259, 260, 261, 265, 266, 267, 268, 270, 272, 274, 276, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 305, 306, 311, 312, 313, 317, 319], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 68, 73, 75, 78, 81, 82, 92, 94, 96, 97, 103, 108, 109, 110, 111, 114, 115, 136, 139, 141, 147, 149, 151, 152, 154, 155, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 214, 219, 221, 222, 223, 224, 227, 232, 234, 235, 236, 237, 240, 242, 243, 244, 245, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 280, 281, 282, 284, 285, 289, 291, 292, 294, 300, 302, 318, 319], "templat": [0, 5, 6, 7, 28, 29, 30, 116, 126, 130, 136, 139, 149, 152, 167, 173, 260, 292, 293, 294], "date": [1, 2, 5, 55, 256, 268, 274, 286, 294], "2023": [1, 17, 309, 310], "08": [1, 293, 305], "18": [1, 6, 294, 296], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 136, 293, 294, 299], "asai": [1, 294], "davi": [1, 294], "capabl": [1, 2, 6, 17, 136, 270, 273, 293, 299, 313], "design": [1, 136, 257, 270, 272, 273, 292, 299, 305], "here": [1, 6, 9, 12, 14, 17, 18, 136, 139, 259, 265, 266, 269, 270, 272, 273, 274, 289, 293, 294, 295, 296, 297, 298, 299, 300, 306, 307, 311, 312, 313, 317, 318], "abil": [1, 7], "across": [1, 6, 7, 9, 14, 19, 139, 259, 266, 270, 271, 272, 273, 274, 291, 293, 301, 305, 306], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 136, 139, 266, 268, 270, 271, 272, 273, 274, 292, 293, 294, 299, 302, 306, 307, 312, 313, 317, 318, 319], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 63, 67, 69, 72, 73, 76, 77, 78, 82, 93, 94, 96, 97, 103, 108, 111, 121, 132, 133, 134, 135, 136, 137, 139, 141, 147, 151, 155, 158, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 177, 178, 179, 183, 184, 187, 191, 193, 196, 198, 199, 202, 207, 209, 211, 212, 214, 222, 224, 225, 227, 235, 237, 239, 240, 241, 242, 243, 244, 245, 256, 259, 260, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 285, 286, 290, 291, 292, 293, 294, 296, 299, 300, 302, 305, 306, 307, 309, 310, 311, 312, 313, 317, 318], "document": [1, 3, 9, 14, 270, 273, 292, 294, 313], "refer": [1, 7, 14, 38, 161, 174, 248, 251, 254, 255, 270, 273, 274, 291, 292, 293, 302, 305, 307, 313], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 34, 47, 108, 114, 115, 170, 178, 266, 267, 268, 270, 271, 272, 273, 274, 276, 293, 294, 299, 305, 306, 311, 312, 313, 316, 317], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 86, 97, 99, 106, 114, 115, 116, 120, 123, 126, 136, 139, 141, 142, 143, 144, 145, 146, 148, 155, 158, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 188, 203, 204, 210, 215, 217, 218, 219, 228, 230, 231, 232, 240, 256, 258, 266, 267, 269, 270, 272, 274, 279, 280, 282, 284, 293, 294, 296, 299, 302, 305, 306, 307, 309, 310, 311, 312, 313], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 64, 92, 93, 94, 136, 139, 155, 165, 240, 259, 260, 261, 270, 272, 273, 274, 293, 295, 296, 297, 298, 300, 305, 313, 318], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 132, 134, 135, 136, 139, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 286, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 314, 318, 319], "main": [1, 3, 6, 7, 9, 14, 43, 136, 198, 211, 266, 267, 272, 273, 274, 293, 319], "motiv": 1, "behind": [1, 273], "comput": [1, 7, 13, 14, 15, 80, 136, 139, 142, 143, 146, 150, 153, 155, 156, 161, 166, 190, 194, 216, 220, 229, 233, 251, 252, 253, 259, 260, 261, 263, 264, 265, 270, 274, 296, 297, 299, 300, 305, 306, 307, 309, 310, 313], "expens": [1, 270, 271], "could": [1, 14, 17, 19, 136, 260, 270, 271, 272, 273, 274, 293, 306], "time": [1, 5, 6, 7, 8, 14, 18, 19, 38, 49, 62, 87, 123, 136, 144, 145, 151, 160, 161, 165, 174, 188, 191, 203, 204, 215, 217, 218, 228, 230, 231, 240, 258, 259, 260, 261, 263, 264, 266, 270, 271, 272, 273, 274, 289, 290, 291, 294, 296, 300, 313, 318], "order": [1, 5, 8, 13, 14, 139, 260, 261, 267, 270, 271, 274, 293, 306, 307, 310, 311, 313], "reflect": [1, 5, 274], "fact": [1, 14, 38, 136], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 135, 136, 139, 143, 144, 145, 159, 188, 203, 204, 215, 228, 259, 260, 265, 266, 269, 270, 272, 273, 274, 289, 292, 293, 294, 296, 298, 299, 300, 302, 306, 307, 313, 318], "present": [1, 50, 123, 274, 293], "new": [1, 2, 5, 20, 26, 38, 49, 57, 61, 68, 75, 81, 97, 117, 118, 139, 149, 152, 165, 172, 189, 205, 216, 219, 229, 232, 240, 248, 254, 255, 270, 272, 273, 274, 287, 290, 291, 292, 313], "success": [1, 2, 8, 48, 59, 256, 267, 286, 293, 294], "insofar": 1, "guarante": [1, 14, 136, 256, 274, 286], "per": [1, 8, 14, 25, 35, 37, 38, 45, 93, 94, 136, 139, 155, 270, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 309, 310, 312, 317], "slurm": [1, 62, 95, 136, 270, 292, 294, 295, 296, 297, 298, 300, 313], "job": [1, 6, 136, 274, 292, 293, 295, 296, 297, 298, 300], "role": 1, "clear": [1, 2, 273, 293], "should": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 63, 76, 114, 115, 122, 123, 132, 133, 134, 135, 136, 137, 139, 141, 146, 158, 170, 178, 242, 244, 256, 266, 267, 268, 270, 271, 272, 274, 286, 287, 290, 291, 293, 294, 305, 306, 307, 311, 312, 313, 317], "invoc": 1, "serial": [1, 44, 270, 272, 292, 293, 313], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 64, 68, 69, 72, 75, 76, 77, 81, 89, 92, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 111, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 139, 141, 149, 152, 158, 160, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 199, 202, 205, 206, 208, 210, 214, 219, 221, 223, 227, 232, 234, 236, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 259, 260, 263, 264, 265, 267, 270, 271, 272, 273, 274, 279, 280, 282, 284, 291, 292, 293, 295, 296, 297, 298, 299, 300, 305, 306, 307, 309, 310, 312, 313, 316, 317], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 82, 110, 112, 117, 120, 136, 139, 195, 208, 256, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 286, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 303, 305, 306, 307, 309, 310, 312, 313, 314, 317], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 67, 68, 75, 81, 97, 125, 139, 140, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 198, 199, 202, 205, 206, 208, 210, 211, 212, 214, 216, 219, 221, 223, 225, 227, 229, 232, 234, 236, 239, 240, 241, 242, 244, 256, 259, 260, 261, 263, 264, 265, 267, 268, 270, 272, 277, 279, 280, 282, 283, 284, 286, 289, 293], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 101, 107, 108, 141, 263, 264, 293], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 40, 47, 49, 59, 110, 111, 122, 136, 139, 170, 178, 184, 199, 242, 244, 259, 260, 261, 265, 266, 268, 270, 271, 272, 273, 274, 290, 291, 292, 293, 294, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 316, 317, 318, 319], "relat": [1, 6, 7, 11, 13, 14, 136, 139, 256, 259, 260, 261, 263, 264, 265, 266, 270, 274, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 311, 312, 313, 314], "inform": [1, 5, 7, 8, 38, 97, 121, 131, 216, 229, 270, 272, 274, 294, 296, 303, 313, 314], "belong": [1, 10, 12, 14, 25, 35, 38, 45, 49, 68, 75, 81, 97, 112, 139, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 199, 202, 205, 206, 208, 210, 212, 214, 219, 221, 223, 225, 227, 232, 234, 236, 239, 240, 241, 242, 244, 266, 267, 270, 272, 273, 279, 280, 282, 283, 284, 293, 318], "locat": [1, 5, 6, 9, 14, 19, 38, 50, 114, 115, 120, 139, 256, 270, 272, 274, 286, 291, 293, 294, 296, 299, 302, 305, 306, 313], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 139, 144, 145, 188, 203, 204, 215, 228, 248, 249, 250, 251, 252, 253, 254, 255, 259, 266, 268, 269, 270, 272, 293, 294, 305, 306, 307, 309, 310, 311, 312, 317], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 63, 96, 112, 115, 120, 122, 136, 139, 248, 251, 254, 255, 256, 267, 269, 270, 272, 274, 286, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 311, 312, 313, 317, 318], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 93, 94, 96, 115, 121, 136, 139, 140, 143, 144, 155, 165, 188, 203, 215, 228, 240, 248, 254, 255, 256, 259, 266, 267, 268, 270, 271, 272, 273, 274, 277, 286, 291, 292, 293, 294, 299, 302, 303, 305, 306, 307, 312, 313, 314, 317, 319], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 93, 94, 136, 139, 155, 165, 240, 256, 266, 268, 270, 272, 274, 293, 294, 299, 302, 306, 307, 309, 310, 311, 313], "There": [1, 5, 6, 13, 248, 254, 255, 265, 266, 268, 270, 273, 274, 290, 293, 294, 313], "wai": [1, 5, 7, 13, 14, 38, 72, 77, 136, 139, 270, 272, 273, 274, 290, 292, 293, 299, 302, 307, 311], "list": [1, 2, 6, 7, 9, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 87, 93, 94, 111, 114, 115, 120, 121, 139, 141, 149, 152, 161, 176, 180, 184, 187, 199, 202, 214, 223, 225, 227, 236, 240, 270, 271, 272, 273, 274, 280, 291, 292, 293, 294, 296, 299, 300, 306, 313, 318, 319], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 60, 112, 120, 121, 136, 139, 259, 263, 264, 266, 267, 268, 270, 271, 272, 274, 287, 291, 293, 294, 296, 299, 311, 312, 317], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 64, 70, 71, 80, 109, 115, 131, 136, 139, 141, 146, 180, 181, 184, 199, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 280, 281, 289, 291, 293, 294, 299, 302, 305, 306, 307, 309, 310, 312, 313, 317, 318], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 121, 122, 136, 139, 195, 208, 248, 254, 255, 256, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 293, 294, 299, 300, 302, 306, 307, 309, 310, 312, 313, 317, 319], "find": [1, 6, 7, 15, 59, 71, 95, 136, 256, 272, 273, 274, 290, 293, 294, 313], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 136, 139, 256, 258, 260, 261, 265, 267, 270, 272, 273, 286, 289, 292, 293, 294, 296, 299, 300, 302, 304, 305, 306, 307, 310, 311, 313, 316], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 103, 108, 109, 117, 136, 139, 266, 267, 268, 270, 271, 272, 273, 274, 291, 293, 294, 295, 306, 313, 319], "would": [1, 2, 5, 9, 14, 18, 25, 35, 38, 45, 50, 93, 94, 97, 136, 139, 155, 165, 240, 259, 268, 270, 272, 273, 274, 290, 293, 299, 302, 313], "ident": [1, 2, 5, 18, 163, 171, 179, 259, 270, 271, 273, 279, 293, 305], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 83, 139, 267, 270, 272, 273, 293, 294], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 60, 89, 92, 98, 99, 100, 101, 105, 106, 107, 116, 123, 125, 139, 141, 149, 152, 161, 248, 254, 255, 267, 268, 269, 270, 273, 274, 276, 286, 287, 291, 293, 294, 299, 303, 312, 313, 314, 317], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 70, 136, 139, 256, 270, 274, 291, 293, 294, 302, 307, 311, 313], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 75, 111, 127, 136, 139, 160, 256, 259, 260, 261, 266, 269, 270, 272, 273, 274, 287, 291, 292, 293, 294, 299, 302, 305, 306, 307, 313], "As": [1, 4, 5, 6, 9, 13, 18, 70, 139, 266, 270, 271, 272, 273, 274, 293, 294, 302, 306, 307, 311, 318], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 136, 139, 151, 167, 173, 191, 259, 263, 264, 265, 272, 273, 274, 291, 292, 293, 294, 306, 307, 313, 319], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 63, 64, 110, 111, 112, 113, 115, 136, 259, 269, 270, 272, 274, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 305], "proce": [1, 274], "iter": [1, 256, 294], "through": [1, 2, 115, 273, 274, 287, 293], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 61, 68, 70, 71, 99, 106, 116, 118, 122, 130, 136, 141, 146, 155, 192, 206, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 290, 291, 292, 294, 296, 299, 302, 307, 309, 313, 318, 319], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 95, 103, 108, 132, 134, 135, 136, 154, 155, 165, 240, 256, 260, 267, 268, 269, 270, 271, 272, 273, 274, 286, 287, 290, 291, 293, 294, 302, 305, 306, 309, 311, 313], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 103, 115, 120, 132, 134, 135, 136, 139, 141, 148, 154, 187, 202, 214, 223, 227, 236, 256, 267, 270, 272, 273, 274, 286, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 313], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 139, 154, 160, 162, 170, 178, 186, 201, 213, 226, 238, 248, 254, 255, 266, 267, 272, 274, 278, 287, 292, 295, 296, 297, 298, 300, 313], "initi": [1, 7, 8, 38, 123, 139, 144, 161, 163, 164, 168, 171, 174, 179, 188, 192, 203, 206, 215, 219, 221, 228, 232, 234, 239, 241, 242, 244, 259, 260, 261, 263, 264, 265, 266, 270, 272, 273, 283, 290, 291, 292, 294, 302, 304, 318, 319], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 64, 66, 110, 111, 115, 120, 121, 123, 136, 139, 155, 242, 244, 258, 266, 270, 272, 287, 293, 294, 296, 298, 300, 305], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 69, 76, 136, 139, 170, 178, 194, 266, 267, 270, 272, 273, 291, 292, 293, 306, 307, 319], "skip": [1, 5, 8, 121, 318], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 61, 121, 122, 123, 127, 132, 133, 134, 135, 136, 137, 139, 155, 241, 258, 266, 270, 274, 293, 294, 295, 296, 297, 298, 299, 300, 305, 313, 319], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 61, 64, 110, 121, 136, 139, 158, 253, 259, 260, 261, 263, 264, 265, 266, 270, 272, 273, 274, 292, 293, 295, 296, 297, 298, 300, 302, 305, 306, 307, 311, 313, 319], "complet": [1, 5, 8, 27, 28, 29, 108, 293, 313], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 61, 136, 139, 154, 240, 270, 272, 273, 274, 293, 294, 299, 302, 306, 313], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 139, 149, 152, 165, 189, 205, 219, 232, 240, 259, 263, 264, 270, 271, 272, 273, 274, 292, 293, 302], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 136, 155, 270, 273, 274, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 313, 319], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 69, 70, 72, 85, 132, 133, 134, 135, 136, 137, 139, 155, 159, 163, 171, 179, 197, 210, 248, 254, 255, 256, 259, 266, 270, 272, 273, 274, 279, 286, 291, 294, 295, 296, 297, 298, 299, 300, 305, 306, 313, 318], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 61, 67, 84, 85, 88, 89, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 141, 144, 145, 146, 148, 149, 152, 155, 159, 161, 167, 170, 173, 178, 188, 195, 197, 203, 204, 208, 210, 215, 228, 247, 256, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273, 274, 280, 286, 287, 289, 290, 291, 292, 296, 299, 300, 302, 305, 306, 307, 312, 313, 316, 317, 319], "mode": [1, 5, 14, 267, 274, 291, 292, 293, 313], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 136, 139, 163, 171, 179, 256, 259, 270, 273, 274, 279, 286, 291, 293, 294, 299, 300, 305, 306], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 89, 92, 96, 115, 116, 125, 126, 127, 139, 149, 152, 158, 260, 270, 272, 273, 293, 306, 307], "them": [1, 7, 8, 9, 14, 17, 18, 25, 37, 136, 139, 155, 260, 261, 267, 268, 270, 272, 273, 274, 291, 293, 298, 299, 304, 313, 319], "constructor": [1, 9, 14, 139, 259, 263, 264, 266, 293], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 93, 94, 104, 122, 259, 267, 270, 272, 273, 274, 293, 312, 317, 318], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 61, 89, 116, 126, 127, 136, 139, 149, 152, 158, 167, 173, 272, 273, 293, 294, 313], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 63, 66, 68, 75, 81, 96, 97, 112, 114, 120, 125, 136, 141, 149, 152, 154, 155, 162, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 186, 187, 189, 192, 195, 197, 199, 201, 202, 205, 206, 208, 210, 212, 213, 214, 219, 221, 223, 225, 226, 227, 232, 234, 236, 238, 239, 240, 241, 242, 244, 266, 268, 269, 270, 271, 272, 276, 277, 278, 279, 280, 282, 283, 284, 287, 291, 292, 293, 294, 299, 301, 304, 318, 319], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 68, 75, 81, 97, 139, 141, 149, 152, 155, 165, 187, 189, 192, 195, 197, 202, 205, 206, 208, 210, 214, 219, 227, 232, 240, 270, 272, 280, 293], "now": [1, 6, 136, 270, 274, 293, 294, 299], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 114, 115, 120, 121, 256, 267, 270, 272, 273, 274, 280, 286, 291, 293, 305, 307, 313, 319], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 136, 139, 259, 270, 274, 290, 293, 302], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 136, 165, 240, 259, 270, 271, 273, 274, 290, 293, 302, 305], "parent": [1, 33, 139, 260, 261, 263, 264, 266, 267, 270], "resid": [1, 5, 9, 40, 139, 141, 187, 202, 214, 227, 268, 270, 272], "insid": [1, 12, 268, 270, 273, 306], "situat": [1, 17, 31, 158, 293, 313], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 38, 39, 40, 121, 256, 259, 266, 268, 270, 272, 273, 274, 291, 293, 294, 305, 313, 318, 319], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 139, 256, 262, 267, 272, 293, 306, 312, 317, 318], "with_viz": [1, 260, 261, 272, 306, 307], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 74, 79, 81, 112, 114, 115, 120, 136, 139, 148, 154, 157, 159, 189, 192, 195, 197, 205, 206, 210, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 267, 269, 270, 272, 273, 274, 286, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 307, 319], "mesh": [1, 5, 7, 10, 17, 25, 38, 85, 86, 99, 106, 123, 141, 142, 144, 145, 149, 150, 152, 153, 155, 156, 157, 159, 161, 164, 166, 168, 184, 187, 188, 189, 190, 192, 195, 197, 199, 202, 203, 204, 205, 206, 208, 210, 214, 215, 216, 219, 220, 221, 223, 227, 228, 229, 232, 233, 234, 236, 239, 241, 242, 248, 254, 255, 258, 259, 260, 261, 263, 264, 265, 266, 268, 270, 272, 273, 274, 282, 283, 291, 292, 294, 302, 304, 313, 318], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 139, 141, 149, 152, 163, 164, 171, 174, 179, 189, 195, 205, 208, 219, 232, 256, 258, 267, 270, 272, 273, 274, 286, 294, 305, 306, 309, 310, 313], "forward": [1, 5, 7, 9, 14, 38, 139, 141, 149, 152, 161, 164, 172, 174, 195, 208, 239, 241, 256, 267, 270, 272, 273, 283, 286, 294, 305, 306, 307, 309, 310, 312, 317], "resolut": [1, 9, 13, 14, 17, 68, 71, 75, 76, 80, 98, 102, 105, 139, 141, 142, 146, 148, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 184, 187, 189, 199, 202, 205, 214, 219, 221, 223, 225, 227, 232, 234, 236, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 272, 294, 305, 306, 307, 309, 310, 311, 312, 317, 319], "singl": [1, 5, 8, 9, 19, 123, 136, 238, 239, 241, 242, 244, 265, 270, 272, 273, 278, 279, 280, 282, 283, 284, 286, 287, 291, 293, 299, 303, 306, 308, 309, 310, 314, 315], "analysi": [1, 6, 9, 19, 139, 259, 272, 273, 291, 292, 294, 306, 309, 310, 319], "add": [1, 2, 5, 6, 7, 9, 13, 14, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 74, 79, 84, 116, 117, 118, 126, 127, 130, 131, 136, 139, 148, 154, 162, 167, 173, 186, 201, 213, 226, 238, 266, 267, 270, 272, 273, 274, 278, 291, 293, 294, 300, 306], "remap": [1, 10, 19, 195, 208, 260, 292, 306, 307, 312, 317], "visual": [1, 10, 13, 17, 223, 236, 260, 261, 263, 264, 266, 270, 272, 291, 292, 306, 307, 309, 310, 312, 317], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 120, 136, 257, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 291, 292, 293, 294, 299, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 318, 319], "spheric": [1, 5, 149, 260, 261, 272, 306, 318], "qu": [1, 5, 139, 272, 293, 294, 304, 306, 307, 318], "base_mesh": [1, 5, 13, 68, 75, 141, 154, 192, 195, 197, 206, 210, 270, 272, 293, 306], "60km": [1, 5, 272, 306], "90km": [1, 5], "120km": [1, 5, 272], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 154, 272], "map": [1, 8, 17, 20, 31, 75, 76, 97, 122, 123, 158, 195, 197, 208, 210, 260, 261, 272, 274, 294], "viz": [1, 5, 19, 184, 199, 270, 272], "two": [1, 5, 10, 18, 121, 139, 171, 181, 259, 260, 261, 265, 266, 267, 270, 271, 273, 274, 279, 281, 293, 305, 306, 307, 309, 310, 316], "first": [1, 6, 9, 14, 15, 87, 115, 136, 139, 259, 263, 264, 265, 270, 272, 273, 274, 290, 293, 295, 296, 297, 298, 299, 300, 305, 306, 307, 311, 313], "verbos": [1, 5, 6, 64, 66, 136, 270, 293, 318], "10": [1, 9, 13, 70, 136, 256, 259, 263, 264, 266, 267, 293, 294, 299, 302, 305, 307, 309, 310, 311, 319], "name": [1, 5, 7, 8, 9, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 61, 62, 63, 64, 68, 75, 81, 85, 89, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 130, 136, 139, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 158, 161, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 188, 189, 192, 195, 197, 203, 204, 205, 206, 208, 210, 215, 219, 228, 232, 240, 247, 266, 267, 270, 272, 273, 274, 280, 282, 284, 291, 293, 294, 300, 305, 313, 318], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 87, 139, 144, 145, 160, 165, 188, 203, 204, 215, 228, 240, 265, 270, 273, 305, 311, 316], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 57, 272, 273, 274, 306], "what": [1, 2, 6, 11, 13, 17, 136, 272, 273, 293, 300, 312, 313, 317], "follow": [1, 4, 5, 7, 9, 13, 14, 19, 67, 136, 141, 248, 254, 255, 256, 258, 270, 271, 272, 274, 286, 287, 290, 293, 294, 299, 300, 302, 304, 306, 307, 309, 310, 311, 313, 316], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 64, 68, 75, 81, 97, 114, 139, 141, 149, 152, 155, 165, 187, 189, 192, 195, 197, 202, 205, 206, 208, 210, 214, 219, 221, 223, 227, 232, 234, 236, 240, 242, 244, 266, 268, 270, 272, 273, 293, 312, 313, 317, 319], "bold": [1, 272], "elsewher": [1, 274], "tree": [1, 7, 116, 118, 131, 272, 314], "thu": [1, 2, 7, 14, 293, 306], "similar": [1, 2, 5, 9, 12, 13, 14, 133, 136, 137, 139, 266, 268, 273, 274, 293, 294, 313], "had": [1, 136], "maintain": [1, 256, 313], "local": [1, 5, 6, 8, 9, 11, 18, 40, 256, 268, 270, 274, 286, 290, 293, 294, 299, 300, 302], "debug": [1, 8, 132, 133, 134, 135, 136, 137, 293, 295, 296, 297, 298, 300], "easier": [1, 14, 270, 272, 273, 274, 294, 313, 318], "symbol": [1, 61, 270], "link": [1, 2, 7, 9, 11, 14, 40, 46, 53, 61, 136, 266, 270, 272, 274, 293, 299, 303, 313, 314], "were": [1, 48, 136, 240, 270, 273, 291, 293, 294, 298, 302], "even": [1, 6, 12, 13, 14, 40, 57, 136, 270, 273, 274, 293, 294, 299, 313], "compass": [1, 5, 256, 270, 272, 273, 291, 293], "though": [1, 11, 38, 272, 273, 293], "global": [1, 13, 17, 101, 102, 107, 260, 261, 266, 270, 271, 273, 291, 292, 293, 294, 300, 306, 307, 312, 313, 317, 319], "dynamic_adjust": [1, 14, 294], "allow": [1, 2, 8, 17, 18, 25, 35, 38, 45, 57, 121, 136, 139, 155, 270, 291, 293, 294, 299, 302, 306, 311, 319], "one": [1, 2, 5, 6, 7, 10, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 61, 114, 115, 120, 136, 139, 154, 155, 171, 240, 256, 259, 263, 264, 265, 266, 268, 270, 272, 273, 274, 279, 289, 290, 291, 292, 294, 299, 300, 302, 305, 306, 310, 312, 313, 316, 317, 318, 319], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 85, 139, 148, 170, 178, 259, 260, 261, 263, 264, 265, 293, 311], "port": [1, 293, 300], "instead": [1, 5, 6, 12, 14, 15, 25, 111, 132, 136, 270, 273, 274, 291, 293, 295, 306, 313, 318], "seri": [1, 14, 139, 176, 182, 260, 261, 263, 289, 293, 304], "indic": [1, 7, 8, 14, 17, 18, 38, 39, 108, 115, 123, 136, 139, 251, 268, 270, 290, 293, 294, 302, 311], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 258, 270, 272, 273, 274, 293, 296, 298, 300, 313], "ran": [1, 109], "ico": [1, 5, 139, 272, 293, 304, 306, 318], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 115, 120, 136, 155, 256, 267, 270, 274, 286, 293, 294, 295, 296, 297, 298, 299, 300, 313], "runtim": [1, 8, 14, 30, 44, 139, 151, 167, 173, 191, 270, 293], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 70, 98, 102, 105, 121, 123, 132, 133, 134, 135, 136, 137, 139, 248, 253, 254, 255, 258, 260, 266, 270, 273, 287, 290, 293, 294, 296, 299, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 314, 317], "01": [1, 14, 139, 287, 293, 311, 316], "00": [1, 14, 18, 139, 272, 287, 293, 300, 313], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 313], "02": [1, 296], "59": 1, "icos_map_60km": 1, "20": [1, 174, 259, 271, 293, 305, 311], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 57, 136, 259, 273, 274, 306, 311], "mechan": [1, 270], "prevent": [1, 270], "expect": [1, 2, 12, 17, 136, 139, 267, 270, 274, 293], "affect": [1, 6, 270, 274, 293, 307], "howev": [1, 13, 270, 271, 272, 274, 293], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 68, 121, 136, 139, 149, 152, 164, 165, 170, 174, 178, 189, 198, 205, 211, 219, 232, 239, 240, 241, 256, 259, 260, 261, 263, 264, 265, 270, 271, 272, 283, 291, 292, 293, 294, 299, 305, 318], "successfulli": [1, 48, 293], "after": [1, 5, 6, 7, 9, 17, 18, 19, 38, 40, 41, 82, 103, 108, 136, 249, 250, 256, 261, 267, 270, 272, 274, 286, 293, 294, 296, 300, 306, 307, 313, 316], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 109, 115, 120, 135, 136, 139, 141, 146, 148, 158, 187, 202, 214, 223, 227, 236, 256, 259, 263, 264, 266, 268, 270, 271, 272, 273, 274, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 313, 318, 319], "remov": [1, 5, 14, 24, 52, 111, 259, 263, 264, 272, 274, 293], "longer": [1, 171, 259, 271, 279, 293, 305, 306, 307], "about": [1, 5, 6, 7, 8, 12, 14, 38, 97, 125, 139, 266, 270, 272, 273, 274, 293, 294, 296, 307], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 30, 50, 57, 76, 136, 139, 167, 173, 256, 260, 261, 267, 270, 272, 273, 274, 286, 287, 290, 292, 293, 294, 295, 299, 300, 302, 305, 306, 313, 318], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 136, 139, 256, 258, 267, 270, 271, 272, 273, 287, 290, 294, 299, 303, 313], "enforc": [1, 258, 274], "framework": [1, 5, 7, 9, 12, 13, 14, 110, 256, 266, 267, 270, 272, 286, 291, 292, 293, 303, 311, 312, 314, 317, 319], "propos": [1, 2], "close": [1, 6, 71, 136, 292, 306], "root": [1, 40, 136, 256, 267, 270, 273, 274, 286, 291, 294, 295, 296, 297, 298, 299, 300, 302, 313], "live": [1, 50, 272, 313], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 69, 76, 77, 80, 83, 97, 103, 121, 139, 155, 171, 180, 216, 229, 248, 254, 255, 260, 261, 267, 268, 270, 272, 273, 279, 280, 299, 302, 305, 307, 309, 310], "think": [1, 5, 293], "condit": [1, 7, 38, 139, 144, 164, 168, 188, 192, 203, 206, 215, 219, 221, 228, 232, 234, 239, 241, 242, 244, 259, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 283, 289, 291, 292, 294, 304, 318, 319], "shown": [1, 14, 136, 261, 268, 311], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 72, 75, 77, 98, 102, 103, 105, 114, 115, 120, 132, 133, 134, 135, 136, 137, 139, 256, 259, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 307, 310, 313, 318, 319], "simpli": [1, 14, 18, 57, 136, 164, 267, 270, 272, 274, 293, 302, 313, 318], "prefer": [1, 2, 136, 270, 271, 293, 294], "convent": [1, 270, 274, 293], "futur": [1, 13, 44, 270, 273, 291, 292, 293, 294, 307, 311, 313, 319], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 121, 136, 155, 256, 265, 267, 270, 273, 274, 276, 286, 287, 291, 292, 293, 294, 299, 302, 305, 310, 311, 313, 318, 319], "independ": [1, 2, 5, 271, 291], "yyyi": 2, "mm": [2, 139, 160], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 61, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 80, 81, 85, 86, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 130, 131, 136, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 156, 160, 163, 164, 165, 166, 168, 170, 171, 172, 174, 176, 178, 179, 180, 182, 184, 187, 188, 189, 190, 192, 195, 197, 199, 202, 203, 204, 205, 206, 208, 210, 212, 214, 215, 219, 220, 221, 223, 225, 227, 228, 232, 233, 234, 236, 239, 240, 241, 242, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 280, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 319], "purpos": [2, 266, 273, 293, 319], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 76, 122, 127, 136, 139, 155, 158, 246, 248, 254, 255, 256, 260, 261, 265, 266, 267, 270, 271, 273, 274, 286, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 306, 307, 311, 312, 313, 317], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 61, 75, 76, 81, 87, 93, 94, 97, 101, 107, 108, 110, 111, 116, 118, 121, 123, 126, 131, 132, 134, 135, 136, 139, 144, 145, 149, 151, 152, 154, 155, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 188, 191, 203, 204, 215, 228, 240, 248, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 280, 282, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 316, 317, 318, 319], "summar": 2, "process": [2, 6, 8, 14, 33, 93, 94, 131, 270, 273, 274, 286, 291, 292, 293], "It": [2, 5, 6, 9, 14, 17, 38, 44, 122, 139, 263, 264, 266, 270, 271, 272, 273, 274, 291, 293, 294, 299, 306, 309, 310], "code": [2, 5, 7, 9, 12, 14, 38, 139, 256, 266, 267, 270, 271, 272, 276, 286, 291, 292, 294, 301, 305, 311, 313], "do": [2, 5, 9, 11, 14, 17, 18, 126, 136, 139, 266, 270, 272, 274, 290, 291, 292, 293, 299, 306, 307, 313], "doe": [2, 6, 9, 12, 14, 270, 276, 292, 293, 299], "primari": [2, 5, 9, 293, 318], "challeng": 2, "respect": [2, 8, 9, 14, 19, 139, 142, 270, 273, 306, 312, 317], "softwar": [2, 85, 300, 313], "appropri": [2, 5, 6, 14, 15, 26, 80, 86, 136, 139, 256, 259, 263, 264, 265, 267, 268, 270, 274, 286, 292, 293, 294, 295, 296, 297, 298, 299, 300, 312, 313, 317], "final": [2, 5, 6, 7, 8, 136, 259, 260, 261, 263, 264, 265, 270, 272, 289, 293, 306], "statement": [2, 12, 270, 291], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 75, 121, 139, 170, 178, 219, 232, 246, 256, 258, 259, 263, 264, 265, 267, 270, 274, 286, 293, 294, 299, 306, 307, 309, 310, 313], "regard": 2, "last": [2, 271, 274, 305, 313], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 116, 118, 139, 155, 175, 259, 263, 264, 270, 272, 274, 292, 293, 294, 305, 313], "your": [2, 4, 5, 6, 11, 136, 256, 273, 274, 286, 290, 293, 294, 295, 296, 299, 300, 306, 313], "appear": [2, 136, 270, 293], "under": [2, 17, 38, 39, 136, 139, 258, 270, 271, 274, 292, 302, 319], "head": [2, 258, 296], "correspond": [2, 6, 7, 121, 136, 139, 141, 256, 270, 274, 286, 305], "discuss": [2, 6, 139, 260, 261, 270, 273, 293, 305], "technic": [2, 7], "issu": [2, 6, 270, 271, 274], "focu": [2, 293], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 115, 120, 125, 130, 132, 133, 134, 135, 136, 137, 145, 149, 151, 152, 163, 165, 167, 171, 172, 173, 174, 179, 191, 204, 240, 256, 259, 260, 261, 263, 264, 265, 267, 270, 271, 273, 274, 279, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 305, 309, 310, 312], "To": [2, 5, 6, 12, 17, 18, 121, 136, 139, 256, 270, 273, 274, 286, 287, 293, 295, 296, 297, 298, 299, 300, 302, 306, 313], "extent": [2, 13, 17, 293, 305], "possibl": [2, 8, 11, 71, 139, 258, 260, 261, 270, 271, 272, 273, 293, 302, 307], "other": [2, 5, 6, 7, 8, 9, 10, 13, 15, 17, 19, 38, 39, 41, 49, 57, 108, 132, 181, 260, 261, 265, 266, 267, 268, 272, 273, 274, 281, 290, 291, 292, 294, 295, 305, 306, 319], "clean": [2, 4, 5, 6, 115, 120, 270, 272, 274], "plan": [2, 13, 139, 256, 263, 264, 270, 286, 291, 309, 310, 319], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 115, 132, 136, 139, 143, 144, 188, 203, 215, 228, 258, 259, 263, 264, 265, 270, 273, 274, 293, 294, 295, 303, 306, 307, 309, 310, 313, 314, 319], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 132, 133, 134, 135, 136, 137, 139, 256, 267, 270, 272, 273, 274, 286, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 306, 307, 313, 318, 319], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 97, 101, 107, 121, 126, 136, 139, 155, 160, 165, 240, 256, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 286, 289, 290, 291, 292, 293, 294, 299, 303, 306, 312, 313], "intend": [2, 6, 8, 9, 271, 294, 310, 319], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 64, 121, 258, 260, 261, 268, 270, 273, 274, 290, 293, 307, 313], "pde": 2, "solver": [2, 272, 274, 292, 313], "well": [2, 6, 9, 12, 13, 136, 139, 251, 259, 260, 261, 263, 264, 265, 270, 274, 291, 293, 294, 306, 313, 319], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 61, 85, 89, 94, 98, 99, 100, 101, 102, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 121, 123, 126, 127, 130, 131, 136, 141, 144, 145, 151, 155, 158, 165, 187, 191, 194, 195, 202, 204, 208, 214, 215, 223, 227, 228, 236, 252, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 272, 273, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 304, 305, 306, 307, 309, 310, 312, 313, 316, 317, 318, 319], "low": [2, 123, 307], "variabl": [2, 5, 13, 19, 20, 25, 38, 41, 48, 49, 57, 68, 75, 81, 85, 97, 98, 102, 105, 121, 123, 125, 126, 131, 136, 139, 141, 142, 143, 144, 145, 146, 149, 152, 155, 161, 165, 168, 174, 176, 180, 184, 188, 195, 197, 199, 203, 204, 208, 210, 214, 215, 216, 219, 221, 223, 225, 227, 228, 229, 232, 234, 236, 240, 248, 254, 255, 258, 265, 270, 273, 274, 280, 281, 286, 290, 293, 295, 296, 297, 298, 299, 300, 303, 305, 312, 313, 314, 317], "declar": [2, 7], "interfac": [2, 10, 246, 247, 248, 254, 255, 273, 274, 292, 293, 302], "sequenc": [2, 5, 14, 260, 261, 269, 270, 273, 291, 293, 313, 318, 319], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 61, 93, 94, 95, 97, 108, 121, 123, 132, 133, 134, 135, 136, 137, 139, 155, 160, 165, 240, 259, 270, 272, 273, 274, 287, 290, 291, 293, 294, 299, 300, 302, 306, 312, 313, 317], "want": [2, 5, 6, 11, 14, 17, 18, 51, 136, 139, 270, 272, 274, 290, 293, 294, 299, 300, 311, 313, 319], "math": 2, "syntax": [2, 139, 293], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 274, 291, 293, 313], "2": [2, 6, 13, 14, 15, 18, 39, 136, 139, 179, 258, 259, 268, 271, 274, 280, 287, 293, 294, 296, 299, 302, 305, 306, 307, 309, 310, 313], "2ab": 2, "imag": [2, 7, 19, 122, 123, 266, 293, 312, 317], "keep": [2, 5, 6, 9, 14, 25, 57, 260, 261, 266, 267, 270, 272, 274, 293, 312, 317], "mind": [2, 5, 293], "quit": [2, 268, 270, 272, 293], "small": [2, 9, 44, 136, 266, 270, 293, 295, 296, 301, 302, 311, 313], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 80, 93, 94, 97, 110, 111, 112, 115, 127, 136, 139, 141, 155, 160, 165, 240, 248, 251, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317, 318, 319], "png": [2, 13, 19, 260, 261, 270, 293], "okai": [2, 6, 270, 293], "size": [2, 13, 19, 70, 71, 80, 139, 157, 159, 161, 266, 293, 294, 305, 306, 307, 309, 310, 311, 312, 317], "repo": [2, 5, 6, 136, 256, 286, 292, 293, 314], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 136, 139, 266, 267, 268, 270, 271, 272, 273, 274, 290, 291, 293, 294, 296, 302, 312, 313, 318, 319], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 270, 272, 274, 293], "sourc": [2, 6, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 270, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 293, 294, 295, 296, 297, 298, 299, 300, 313], "project": [2, 5, 6, 7, 67, 101, 107, 256, 273, 274, 286, 287, 293, 294, 295, 296, 299, 313, 314], "manag": [2, 290, 299], "item": [2, 293], "git": [2, 6, 16, 96, 256, 274, 286, 293, 294, 313], "branch": [2, 5, 136, 256, 267, 270, 274, 286, 292, 293, 313], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 270, 274, 299], "block": [2, 272], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 98, 102, 105, 136, 139, 266, 268, 270, 272, 273, 274, 290, 292, 293, 294, 299, 305, 306, 307, 313, 319], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 139, 266, 267, 270, 272, 273, 293], "example_funct": 2, "foo": [2, 273], "return": [2, 7, 15, 31, 48, 56, 59, 62, 69, 70, 71, 76, 80, 86, 87, 89, 92, 93, 103, 112, 113, 115, 116, 118, 121, 126, 130, 131, 139, 142, 143, 144, 145, 150, 153, 154, 156, 158, 160, 161, 166, 188, 190, 203, 204, 215, 217, 218, 220, 228, 230, 231, 233, 246, 249, 250, 251, 252, 253, 272, 273, 293, 306], "how": [2, 5, 6, 12, 14, 75, 139, 269, 270, 272, 273, 274, 294, 299, 300], "show": [2, 7, 13, 270, 293, 299, 300, 305, 306, 307, 312, 317], "met": 2, "regress": [2, 259, 260, 261, 271, 291, 292, 293, 305, 306, 313, 318], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 63, 92, 93, 94, 95, 96, 115, 120, 136, 139, 199, 246, 248, 249, 250, 254, 255, 270, 273, 292, 293, 294, 296, 299, 300, 302, 309, 310, 312, 313, 317, 319], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 63, 96, 110, 112, 115, 120, 135, 136, 170, 178, 195, 198, 208, 211, 268, 269, 270, 271, 272, 273, 274, 290, 291, 293, 294, 299, 306, 307, 311, 313, 319], "properli": [2, 132, 134, 135, 293, 294, 313], "addit": [2, 7, 9, 18, 38, 139, 265, 266, 267, 268, 270, 272, 273, 274, 293, 307], "modif": [2, 7, 270, 287], "nightli": [2, 274, 313, 318], "might": [2, 6, 11, 14, 17, 19, 136, 139, 266, 270, 274, 293, 294, 299, 313], "made": [2, 5, 17, 38, 41, 49, 121, 270, 272, 273, 287, 289, 291, 293, 319], "continu": [2, 6, 270, 293], "page": [3, 7, 136, 295], "auto": 3, "summari": [3, 296], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 76, 114, 115, 136, 139, 258, 259, 260, 261, 266, 268, 270, 271, 272, 273, 274, 291, 299, 303, 305, 307, 312, 313, 314, 317, 319], "relev": [3, 7, 9, 139, 260, 261, 263, 264, 293, 295, 296, 297, 298, 299, 300, 312, 313, 317], "seaic": [3, 10, 20, 40, 267, 270, 289, 291, 292, 313, 314, 317, 319], "long": [4, 25, 35, 38, 45, 93, 94, 155, 165, 240, 270, 293, 305, 313], "procedur": [4, 136, 274, 293, 300], "conda": [4, 5, 16, 96, 132, 134, 135, 136, 256, 267, 273, 286, 292, 293, 294, 295, 296, 297, 298, 300], "environ": [4, 5, 132, 134, 135, 256, 267, 273, 286, 292, 293, 294, 295, 296, 297, 298, 299, 300], "spack": [4, 5, 132, 134, 135, 290, 292, 293, 295, 296, 297, 298, 299, 300], "compil": [4, 5, 6, 14, 132, 133, 134, 135, 136, 137, 290, 292, 293, 295, 296, 297, 298, 299, 300, 313], "system": [4, 5, 6, 25, 35, 38, 45, 93, 94, 95, 132, 134, 135, 136, 155, 165, 240, 270, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 313], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 67, 89, 116, 132, 134, 135, 136, 139, 149, 152, 266, 267, 268, 270, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 313], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 76, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 112, 114, 115, 116, 118, 120, 121, 122, 123, 132, 133, 134, 135, 136, 137, 151, 167, 170, 173, 178, 185, 191, 200, 240, 248, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 272, 273, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 309, 310, 311, 312, 317, 318], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 82, 96, 108, 109, 112, 114, 115, 120, 121, 132, 133, 134, 135, 136, 137, 139, 170, 178, 256, 259, 260, 261, 263, 264, 265, 269, 270, 272, 273, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 306, 312, 317, 318, 319], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 60, 89, 96, 116, 120, 126, 136, 139, 149, 152, 266, 267, 268, 269, 270, 272, 274, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 313], "Then": [4, 6, 7, 11, 14, 132, 133, 134, 135, 136, 137, 256, 259, 263, 264, 265, 267, 270, 272, 274, 286, 293, 299, 305, 307, 313], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 67, 92, 93, 94, 103, 115, 120, 135, 136, 141, 149, 151, 152, 155, 164, 165, 167, 171, 173, 176, 180, 182, 187, 189, 191, 202, 205, 214, 219, 223, 227, 232, 236, 239, 240, 241, 256, 259, 260, 261, 263, 264, 265, 268, 269, 271, 272, 273, 279, 280, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 318, 319], "script": [4, 5, 6, 12, 19, 54, 63, 133, 136, 137, 273, 291, 292, 293, 296, 299], "doc": [4, 7, 293, 300], "cd": [4, 6, 256, 274, 286, 293, 296, 313], "html": [4, 303], "view": [4, 263, 264, 274, 309, 310], "open": [4, 6, 274, 293], "_build": 4, "index": [4, 15, 18, 87, 123, 139, 141, 142, 144, 145, 146, 188, 203, 204, 215, 228, 248, 249, 250, 251, 252, 253, 254, 255, 266, 293], "act": [5, 273, 302], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 136, 163, 164, 259, 263, 264, 265, 267, 270, 272, 293, 294, 299, 305, 306, 307, 309, 310, 311, 313], "These": [5, 6, 8, 9, 14, 20, 38, 136, 139, 256, 258, 267, 270, 272, 273, 274, 286, 287, 292, 293, 294, 299, 305, 307, 310, 313, 318, 319], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 63, 96, 136, 139, 148, 259, 260, 261, 263, 264, 265, 270, 271, 272, 290, 291, 293, 296, 299, 300, 303, 305, 306, 307, 314], "describ": [5, 7, 14, 17, 19, 96, 116, 118, 131, 139, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 306, 307, 313], "instal": [5, 6, 136, 274, 293, 299, 300, 313], "abov": [5, 7, 14, 18, 136, 266, 268, 270, 271, 272, 273, 274, 293, 294, 306, 307, 311, 313, 318], "off": [5, 6, 274, 290], "http": [5, 7, 11, 14, 61, 270, 273, 290, 292, 293, 294, 300, 303, 313, 314], "github": [5, 6, 7, 273, 274, 292, 293, 294, 303, 313, 314], "com": [5, 6, 7, 14, 61, 273, 274, 292, 293, 294, 313, 314], "e3sm": [5, 7, 10, 11, 38, 125, 136, 256, 267, 270, 271, 273, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 314], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 57, 61, 68, 69, 75, 76, 81, 97, 104, 114, 115, 120, 125, 136, 139, 141, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 199, 202, 205, 206, 208, 210, 212, 214, 216, 219, 221, 223, 225, 227, 229, 232, 234, 236, 239, 240, 241, 242, 244, 248, 254, 255, 260, 261, 265, 266, 270, 271, 272, 273, 279, 280, 282, 283, 284, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 306, 313, 318], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 132, 134, 135, 136, 259, 260, 261, 264, 270, 274, 290, 293, 294, 299, 303, 304, 305, 306, 307, 311, 312, 313, 314, 316, 318, 319], "mean": [5, 274, 293, 302, 305, 306, 307, 318], "chang": [5, 6, 8, 17, 75, 108, 109, 139, 148, 256, 267, 270, 271, 272, 273, 274, 286, 291, 293, 294, 296, 300, 302, 305, 306, 313, 318], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 67, 103, 110, 136, 139, 259, 263, 264, 265, 267, 270, 271, 272, 273, 274, 290, 291, 292, 293, 294, 299, 300, 313], "tool": [5, 6, 9, 12, 14, 17, 256, 267, 270, 274, 286, 292, 293, 294], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 63, 76, 85, 90, 93, 94, 97, 103, 110, 121, 122, 123, 124, 125, 126, 131, 132, 136, 139, 141, 142, 143, 144, 146, 150, 153, 155, 156, 157, 158, 159, 160, 165, 166, 167, 173, 180, 184, 188, 190, 195, 199, 203, 208, 215, 220, 225, 226, 228, 233, 240, 246, 248, 249, 250, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 280, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 318, 319], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 64, 67, 73, 78, 92, 93, 94, 96, 97, 110, 111, 112, 114, 115, 120, 136, 139, 155, 157, 159, 256, 258, 259, 260, 261, 263, 264, 265, 267, 268, 270, 271, 274, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 318], "support": [5, 6, 8, 13, 17, 38, 139, 248, 254, 255, 258, 270, 273, 286, 291, 292, 293, 294, 296, 300, 302, 305, 311, 319], "machin": [5, 8, 9, 38, 40, 62, 63, 96, 114, 115, 120, 256, 270, 273, 286, 292, 293, 294, 295, 296, 297, 298, 300], "option": [5, 7, 9, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 61, 62, 63, 64, 68, 74, 75, 76, 79, 81, 85, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 114, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 142, 144, 145, 148, 149, 151, 152, 155, 158, 160, 165, 167, 173, 175, 185, 188, 191, 200, 203, 204, 215, 216, 228, 229, 240, 242, 244, 246, 248, 249, 250, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 267, 270, 271, 272, 273, 282, 286, 287, 290, 292, 294, 302, 304, 313, 319], "help": [5, 6, 13, 136, 266, 267, 268, 270, 274, 292, 293, 299, 303, 314], "usag": [5, 15, 19, 272, 294, 296, 300], "h": [5, 14, 293, 307], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 131, 136, 139, 141, 146, 217, 218, 230, 231, 240, 260, 261, 270, 272, 273, 274, 290, 293, 294, 296, 298, 299, 304, 305, 309, 310, 313, 318, 319], "n": [5, 6, 69, 76, 77, 83, 270, 293, 296, 299, 300, 305, 306, 307, 309, 310, 312, 313, 317], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 92, 93, 94, 97, 115, 136, 139, 150, 153, 155, 156, 157, 159, 165, 166, 180, 190, 216, 220, 229, 233, 240, 256, 259, 263, 264, 266, 270, 271, 272, 273, 280, 291, 293, 294, 299, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 317], "v": [5, 274, 293, 307, 309, 310, 318], "By": [5, 14, 18, 39, 40, 139, 256, 267, 270, 272, 286, 293, 294, 305, 306, 311], "default": [5, 7, 9, 14, 15, 18, 19, 25, 39, 40, 49, 55, 63, 76, 81, 87, 88, 96, 97, 98, 102, 105, 111, 115, 117, 120, 123, 132, 134, 135, 136, 139, 143, 144, 165, 188, 203, 215, 228, 256, 260, 261, 263, 264, 265, 266, 267, 270, 272, 274, 286, 287, 292, 294, 295, 296, 297, 298, 299, 300, 302, 306, 311, 312, 313, 317, 319], "planar": [5, 9, 123, 139, 258, 267, 270, 293, 309, 310, 311, 312, 317, 318, 319], "baroclinic_channel": [5, 7, 9, 14, 18, 256, 262, 266, 267, 270, 273, 293, 305, 313, 318, 319], "10km": [5, 18, 259, 293, 305, 313, 318, 319], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 70, 132, 133, 134, 135, 136, 137, 139, 163, 165, 179, 239, 240, 241, 248, 254, 255, 259, 260, 263, 264, 265, 267, 268, 270, 272, 274, 287, 290, 293, 294, 296, 299, 300, 302, 305, 306, 307, 309, 310, 311, 312, 313], "decomp": [5, 267, 293, 313, 318], "displai": [5, 8, 300], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 61, 64, 67, 96, 112, 114, 115, 120, 121, 123, 136, 141, 256, 267, 270, 272, 273, 274, 280, 286, 291, 293, 294, 295, 296, 297, 298, 299, 300, 313, 319], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 61, 63, 96, 97, 110, 112, 114, 115, 120, 121, 136, 155, 163, 164, 165, 168, 170, 171, 172, 174, 176, 178, 179, 180, 182, 195, 208, 240, 256, 259, 267, 269, 270, 271, 272, 273, 274, 280, 282, 284, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 306, 307, 313, 319], "messag": [5, 8, 136, 270, 290, 300], "task_expr": [5, 64], "flag": [5, 6, 136, 270, 273, 290, 291, 293, 294, 303, 305, 313, 314], "suppli": [5, 6, 7, 15, 18, 131, 136, 270, 274, 293], "substr": [5, 136], "regular": [5, 19, 64, 69, 76, 184, 199, 293, 295, 298, 299, 300, 307, 313], "express": [5, 64], "subset": 5, "search": [5, 64, 296], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 70, 80, 86, 89, 93, 94, 111, 116, 118, 121, 126, 139, 141, 142, 145, 146, 154, 155, 174, 204, 251, 259, 260, 261, 265, 270, 272, 290, 292, 293, 294, 305, 306, 307, 311, 312, 313, 317, 318], "pass": [5, 8, 9, 12, 13, 14, 18, 80, 121, 122, 139, 266, 267, 270, 272, 273, 274, 291, 313], "similarli": [5, 8, 256, 270, 272, 274, 299, 313], "result": [5, 13, 18, 59, 71, 80, 136, 139, 163, 171, 176, 179, 182, 244, 259, 260, 261, 270, 271, 273, 274, 279, 284, 291, 293, 294, 305, 306, 307, 312, 317, 318], "descript": [5, 7, 293, 294, 303, 314], "short": [5, 164, 239, 241, 270, 271, 272, 273, 283, 293, 305], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 63, 92, 93, 94, 120, 136, 139, 140, 155, 163, 164, 239, 241, 259, 265, 266, 267, 270, 271, 272, 273, 287, 291, 293, 294, 295, 296, 297, 298, 299, 300, 313, 318], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 120, 122, 123, 136, 139, 141, 155, 198, 211, 258, 270, 272, 274, 293, 302, 307, 319], "built": [5, 14, 115, 120, 136, 256, 267, 274, 286, 292, 294, 299, 313], "standalon": [5, 14, 135, 136, 267, 274, 291, 292, 299, 314], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 31, 38, 40, 67, 85, 99, 106, 116, 118, 120, 130, 131, 132, 133, 134, 135, 136, 137, 140, 155, 158, 161, 195, 208, 210, 216, 229, 247, 256, 257, 259, 260, 261, 263, 264, 265, 267, 270, 273, 274, 277, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 305, 307, 309, 311, 312, 313, 314, 317, 318, 319], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 115, 120, 136, 270, 272, 273, 274, 290, 293, 296, 300, 302, 306, 307, 313], "num": 5, "f": [5, 9, 11, 18, 139, 267, 270, 272, 273, 274, 293, 294, 300, 305, 307, 309, 313], "m": [5, 6, 14, 69, 76, 77, 83, 259, 265, 266, 274, 293, 295, 296, 297, 298, 300, 302, 305, 306, 307, 311, 313], "mach": [5, 9, 38, 136, 292, 295, 296, 297, 298, 299, 300, 313], "w": [5, 6, 274, 291, 293, 313], "p": [5, 6, 274, 293, 294, 313], "suite_nam": [5, 8, 111, 113, 115, 120, 313], "copy_execut": [5, 115, 120, 313], "specifi": [5, 6, 14, 17, 18, 19, 40, 136, 139, 258, 270, 274, 289, 293, 294, 300, 305, 306, 312, 313, 317], "altern": [5, 13, 270, 287, 313], "task_numb": 5, "multipl": [5, 9, 14, 136, 257, 271, 272, 273, 274, 293, 299, 305, 313], "test": [5, 7, 8, 9, 19, 49, 50, 55, 63, 92, 93, 94, 113, 121, 136, 140, 141, 147, 149, 152, 162, 164, 165, 171, 172, 174, 175, 176, 177, 179, 184, 185, 186, 187, 189, 192, 195, 196, 199, 200, 201, 202, 205, 206, 208, 209, 212, 213, 214, 216, 219, 221, 222, 223, 224, 225, 226, 227, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 277, 278, 279, 282, 283, 284, 285, 286, 289, 291, 292, 298, 299, 300, 302, 305, 306, 307, 309, 310, 311, 312, 313, 314, 317, 318], "separ": [5, 7, 9, 14, 17, 18, 141, 270, 271, 291, 293, 306, 313], "space": [5, 6, 7, 9, 13, 136, 263, 264, 270, 274, 293, 296, 299, 307, 313], "requir": [5, 6, 8, 14, 25, 35, 38, 39, 45, 97, 139, 155, 165, 240, 256, 266, 267, 270, 271, 272, 273, 274, 286, 287, 290, 292, 293, 294, 299, 302, 303, 312, 313, 314, 317, 319], "few": [5, 13, 14, 25, 35, 38, 45, 93, 94, 136, 155, 259, 260, 261, 263, 264, 265, 270, 273, 293, 294, 299], "basic": [5, 7, 294, 296, 299, 307, 313], "piec": [5, 266, 267, 293], "abl": [5, 132, 133, 134, 135, 137, 139, 270, 271, 274, 293, 299, 313], "place": [5, 6, 14, 122, 136, 266, 270, 272, 287, 293, 299], "download": [5, 6, 8, 10, 38, 40, 47, 136, 170, 178, 272, 273, 274, 294, 313, 318], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 136, 139, 258, 260, 261, 266, 268, 270, 272, 273, 274, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 313, 314, 318, 319], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 103, 116, 118, 119, 122, 123, 125, 131, 136, 195, 208, 248, 254, 255, 270, 274, 292, 294, 295, 296, 297, 298, 299, 313, 318, 319], "r": [5, 194, 300, 306], "tell": [5, 6, 136, 274], "re": [5, 6, 9, 272, 273, 274, 291, 293, 294, 299, 300, 306], "leav": [5, 19, 260, 294, 306], "unknown": [5, 136, 273, 299], "component_path": [5, 9, 115, 120, 256, 267, 286, 294, 313], "absolut": [5, 9, 38, 40, 57, 115, 120, 256, 267, 270, 274, 286, 313], "landic": [5, 6, 12, 20, 40, 67, 120, 266, 267, 269, 270, 272, 274, 291, 292, 293, 294, 313, 319], "e3sm_submodul": [5, 256, 267, 274, 286, 287, 293], "mali": [5, 136, 267, 270, 274, 291, 293, 294, 313, 319], "dev": [5, 6, 7, 261, 266, 267, 269, 270, 273, 274, 292, 293, 303, 313, 314], "albani": [5, 132, 134, 135, 136, 267, 294, 295, 296, 297, 300, 313], "depend": [5, 14, 17, 19, 38, 39, 47, 108, 109, 136, 139, 141, 170, 178, 187, 202, 214, 227, 272, 274, 291, 292, 293, 294, 299, 300, 302, 306, 313, 319], "whether": [5, 8, 13, 14, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 61, 64, 110, 111, 115, 120, 121, 122, 123, 127, 136, 139, 151, 154, 155, 167, 173, 184, 191, 199, 240, 242, 244, 263, 264, 266, 270, 272, 274, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 309, 310, 311, 312, 313, 317], "omega": [5, 31, 125, 155, 158, 216, 229, 256, 267, 273, 274, 291, 293, 303, 307, 309, 310, 313], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 62, 63, 74, 76, 79, 92, 93, 94, 95, 96, 112, 114, 115, 120, 122, 125, 126, 127, 128, 130, 131, 148, 149, 151, 152, 155, 158, 160, 167, 173, 174, 184, 185, 191, 199, 200, 216, 229, 246, 248, 249, 250, 254, 255, 256, 259, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 286, 287, 290, 292, 302, 313, 319], "point": [5, 6, 9, 54, 61, 100, 136, 256, 258, 266, 267, 272, 273, 274, 286, 293, 294, 299, 313], "much": [5, 6, 14, 270, 293], "config_fil": [5, 9, 115, 120], "work_dir": [5, 11, 38, 49, 63, 96, 114, 115, 120, 121, 270, 272, 293], "recommend": [5, 7, 11, 19, 136, 270, 271, 273, 274, 293, 299], "itself": [5, 6, 7, 9, 38, 46, 53, 266, 267, 269, 270, 272, 274, 293, 313], "temp": 5, "scratch": [5, 6, 274, 293, 296, 300, 313], "avoid": [5, 270, 293], "confus": [5, 14, 273, 274, 293], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 84, 85, 94, 97, 110, 111, 121, 139, 141, 145, 146, 149, 152, 155, 161, 170, 178, 180, 181, 187, 195, 202, 204, 208, 214, 223, 227, 236, 247, 259, 260, 261, 263, 264, 265, 272, 280, 281, 289, 291, 294, 300, 306, 307, 313, 318], "compar": [5, 10, 18, 38, 41, 48, 114, 115, 120, 121, 139, 180, 181, 240, 260, 261, 265, 270, 271, 272, 273, 274, 280, 281, 289, 291, 293, 304, 305, 313, 316, 318], "previou": [5, 181, 270, 274, 281, 293, 304, 313, 318], "same": [5, 7, 9, 14, 18, 38, 39, 40, 48, 121, 136, 139, 143, 144, 188, 203, 215, 228, 259, 265, 266, 268, 270, 271, 272, 273, 274, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 311, 313, 318, 319], "baseline_dir": [5, 38, 114, 115, 120, 270], "mani": [5, 6, 8, 9, 139, 266, 268, 270, 272, 273, 274, 292, 293, 305, 312, 317], "valid": [5, 10, 38, 41, 48, 139, 149, 152, 248, 249, 250, 251, 252, 253, 254, 255, 263, 264, 265, 270, 273, 274, 292, 302, 305], "timer": [5, 18, 38, 270, 271, 273], "both": [5, 6, 7, 8, 13, 14, 30, 136, 139, 160, 167, 173, 259, 266, 267, 269, 270, 274, 292, 293, 294, 304, 306, 309, 310, 311], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 115, 120, 256, 267, 274, 286, 294, 300, 313], "give": [5, 14, 18, 136, 270, 273, 274, 293, 294, 313], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 18, 19, 25, 37, 108, 136, 139, 155, 248, 254, 255, 256, 259, 263, 264, 266, 267, 270, 272, 273, 274, 286, 291, 293, 294, 299, 300, 302, 305, 306, 307, 311, 313, 318], "case": [5, 6, 7, 8, 9, 14, 19, 28, 29, 49, 50, 55, 63, 92, 93, 94, 116, 121, 136, 139, 140, 147, 164, 171, 172, 174, 175, 176, 177, 179, 185, 186, 187, 189, 192, 195, 196, 200, 202, 205, 206, 208, 209, 212, 214, 216, 219, 221, 222, 223, 224, 225, 227, 229, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 259, 260, 263, 264, 265, 266, 267, 268, 270, 272, 274, 277, 279, 282, 283, 285, 291, 292, 293, 299, 300, 302, 305, 306, 307, 309, 310, 311, 312, 313, 317, 318], "pre": [5, 136, 274], "copi": [5, 6, 8, 40, 55, 115, 120, 293, 296, 313], "just": [5, 14, 25, 35, 38, 45, 64, 136, 155, 270, 273, 274, 291, 293, 296, 300], "wish": [5, 7, 14, 50, 270, 274, 293, 313], "again": [5, 14, 135, 139, 256, 270, 272, 274, 290, 313], "later": [5, 8, 18, 25, 35, 38, 45, 57, 136, 155, 270, 293, 294], "anticip": [5, 293], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 109, 122, 136, 148, 256, 258, 266, 270, 271, 272, 274, 286, 287, 290, 291, 293, 294, 300, 306, 307, 311, 312, 313, 317, 319], "delet": [5, 115, 120, 273, 274, 290, 313], "fresh": [5, 6, 272, 293], "sinc": [5, 14, 87, 109, 131, 139, 259, 270, 272, 273, 274, 293, 305, 306, 307, 309, 310, 312, 317], "rerun": [5, 274], "c": [5, 6, 115, 136, 270, 274, 295, 296, 297, 298, 299, 300, 304, 313, 318], "test_suit": [5, 113, 270], "build": [5, 6, 10, 13, 14, 72, 77, 132, 133, 134, 135, 137, 256, 267, 272, 273, 286, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300], "mpas_model": [5, 294], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 72, 75, 76, 77, 139, 170, 178, 198, 211, 270, 272, 273, 293, 294, 300, 313], "baselin": [5, 6, 8, 10, 38, 41, 48, 114, 115, 120, 121, 139, 149, 152, 240, 259, 263, 264, 265, 270, 271, 273, 289, 291, 293, 304, 313], "comparison": [5, 8, 18, 38, 48, 121, 270, 293, 294], "against": [5, 10, 41, 48, 121, 139, 149, 152, 259, 263, 264, 265, 270, 289, 293, 304], "oppos": [5, 14, 30, 151, 154, 167, 173, 184, 191, 199, 293], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 110], "wherea": [5, 12, 270, 291, 293, 304, 319], "typic": [5, 7, 9, 13, 14, 17, 18, 19, 38, 50, 111, 136, 139, 266, 267, 268, 270, 272, 274, 291, 293, 294, 299, 302, 311, 313, 319], "clone": [5, 6, 136, 256, 268, 274, 286, 293, 313], "pickl": [5, 8, 108, 109, 270, 293, 313], "latter": [5, 49, 136], "conveni": [5, 9, 17, 248, 254, 255, 266, 270, 293, 294, 306, 313, 319], "tab": [5, 313], "explicitli": [5, 7, 139, 259, 263, 264, 270, 274, 293, 294, 313], "select": [5, 8, 123, 270, 274, 293], "edit": [5, 7, 274, 293, 313], "steps_to_run": [5, 49, 111, 270, 272, 293, 294], "full_run": [5, 18, 289, 305, 316], "restart_run": [5, 18, 289, 305, 316], "Or": [5, 270, 294], "accomplish": [5, 270, 273], "thing": [5, 132, 133, 134, 135, 136, 137, 139, 266, 270, 273, 292, 318], "take": [5, 6, 7, 11, 13, 14, 57, 136, 139, 145, 204, 266, 270, 271, 272, 274, 293, 306, 318], "preced": [5, 57, 139], "over": [5, 9, 14, 57, 122, 270, 273, 292, 293, 302, 305, 311, 313], "intern": [5, 11, 25, 270, 274, 290], "shouldn": [5, 136, 240, 293], "special": [5, 291, 312], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 155, 270, 299], "polaris_cach": [5, 8, 20, 270], "structur": [5, 13, 31, 158, 269, 272, 292, 293], "without": [5, 40, 270, 273, 274, 293, 294, 298, 299, 309, 310, 312, 313], "redund": [5, 248, 254, 255, 259, 266, 293], "stamp": 5, "revis": [5, 294], "older": 5, "ones": [5, 248, 254, 255, 273, 293], "version": [5, 6, 16, 33, 57, 96, 121, 136, 256, 259, 266, 267, 268, 270, 272, 273, 274, 286, 292, 293, 294, 299, 300, 303, 305, 306, 313, 314], "updat": [5, 7, 8, 25, 27, 29, 34, 35, 44, 45, 117, 135, 136, 157, 240, 256, 259, 260, 263, 264, 270, 286, 290, 292, 293, 313], "cached_fil": [5, 20, 270], "json": [5, 8, 20, 55, 270, 300], "anvil": [5, 6, 136, 270, 294, 299, 313], "chrysali": [5, 6, 136, 270, 293, 294, 299, 313], "onto": [5, 274], "lcrc": [5, 6, 8, 11, 55, 270, 273, 294, 295, 297, 299, 313], "server": [5, 8, 40, 55, 270, 273, 294, 300], "d": [5, 19, 123, 216, 229, 248, 254, 255, 258, 270, 293, 311], "whose": [5, 46, 53, 86, 270], "ocean_cached_fil": 5, "pr": [5, 6, 313, 318], "look": [5, 6, 7, 11, 18, 272, 273, 293, 294], "someth": [5, 7, 98, 102, 105, 136, 274, 293], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 97, 139, 141, 149, 152, 259, 270, 273, 293], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 85, 149, 152, 155, 259, 263, 264, 270, 293, 294], "info": [5, 12, 14, 25, 32, 85, 136, 149, 152, 155, 270, 293], "initial_st": [5, 18, 19, 141, 259, 270, 293], "date_str": [5, 55], "let": [5, 270, 274, 291, 293, 294, 300], "string": [5, 9, 15, 40, 101, 107, 136, 139, 160, 274], "choos": [5, 270, 273, 274, 293, 295, 296, 297, 298, 300, 319], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 293], "check": [5, 6, 18, 121, 270, 274, 293, 294, 296, 300, 313, 318], "print": [5, 12, 18, 64, 121, 127, 270, 273, 318], "stdout": [5, 12, 38, 49, 270, 272], "translat": [5, 31, 139, 158], "convert": [5, 9, 13, 14, 139, 160, 270, 293], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 115, 120, 130, 131, 155, 158, 159, 167, 170, 173, 178, 256, 259, 263, 264, 266, 267, 270, 272, 273, 286, 287, 289, 292, 293, 294, 311], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 125, 130, 131, 159, 167, 170, 173, 178, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 270, 272, 273, 286, 289, 294, 312, 317], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 136, 149, 152, 155, 158, 159, 167, 173, 259, 260, 261, 263, 264, 265, 266, 267, 270, 272, 292, 293, 296, 300], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 125, 136, 139, 154, 158, 256, 266, 268, 270, 271, 273, 274, 286, 290, 291, 292, 293, 294, 300, 302, 305, 306, 309, 310, 311, 312, 313, 317, 319], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 125, 136, 139, 154, 158, 256, 266, 268, 270, 271, 273, 274, 286, 290, 291, 292, 293, 294, 302, 305, 306, 307, 309, 310, 311, 312, 313, 317], "don": [5, 6, 7, 14, 136, 139, 141, 146, 270, 272, 273, 274, 293, 298, 313, 319], "format": [5, 7, 11, 13, 14, 125, 131, 160, 271, 272, 274, 293, 294, 296], "note": [5, 7, 17, 18, 293, 300], "keyword": [5, 7, 14, 18, 19, 260, 270, 306, 307], "top": [5, 19, 248, 249, 250, 251, 252, 253, 254, 255, 258, 268, 293, 302], "ignor": [5, 101, 107], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 62, 70, 86, 92, 103, 110, 136, 139, 143, 144, 145, 155, 188, 203, 204, 215, 228, 266, 269, 270, 272, 273, 274, 291, 294, 302, 313], "pars": [5, 9, 14, 26, 27, 28, 29, 89, 116, 118], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 87, 121, 122, 123, 127, 139, 141, 149, 152, 158, 174, 194, 259, 267, 270, 272, 273, 292, 293, 294, 302, 305, 306, 307, 311], "doesn": [5, 6, 131, 136, 270, 272, 293, 294, 299, 313], "matter": [5, 293], "usabl": 5, "try": [6, 14, 61, 136, 273, 274, 290, 293, 294, 296, 300, 313], "stai": [6, 274], "sync": 6, "mpi": [6, 14, 17, 97, 132, 135, 136, 155, 157, 159, 259, 263, 264, 270, 274, 290, 292, 293, 295, 296, 297, 298, 300, 313], "librari": [6, 14, 132, 136, 274, 293, 295, 296, 297, 298, 299, 300, 313], "netcdf": [6, 136, 141, 146, 161, 265, 294, 295, 296, 297, 298, 299, 300], "fortran": [6, 136, 295, 296, 297, 298, 299, 300], "pnetcdf": [6, 136, 295, 296, 297, 298, 299, 300], "mkl": [6, 136], "linear": [6, 19, 122, 123, 260, 263, 293, 305, 306, 307, 309], "algebra": 6, "lib": [6, 136], "esmf": [6, 274, 313], "scorpio": [6, 274, 299, 313], "forg": [6, 136, 292, 313], "python": [6, 7, 8, 9, 26, 44, 51, 139, 266, 268, 270, 272, 273, 274, 291, 292, 293, 294, 299, 300, 313], "aren": [6, 11, 38, 39, 136, 270, 273, 274, 293, 318], "brief": [6, 7, 293], "tour": 6, "login": [6, 136, 274, 296, 300], "node": [6, 14, 25, 37, 38, 42, 45, 62, 92, 93, 94, 136, 155, 270, 271, 273, 274, 293, 294, 295, 296, 297, 298, 299, 300, 313], "bootstrap": 6, "rest": [6, 161, 253, 302, 306], "u": [6, 270, 293, 299, 300, 307, 309, 310], "unifi": [6, 136, 274, 300], "diagnost": [6, 294, 295, 296, 298, 299, 300, 313], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 139, 270, 272, 273, 274, 293], "cach": [6, 20, 25, 38, 40, 114, 115, 155, 292, 294, 299, 304, 313, 318], "own": [6, 7, 8, 9, 11, 12, 19, 38, 136, 139, 270, 272, 273, 274, 291, 293, 294, 306, 313, 319], "config_machin": 6, "xml": [6, 14, 116, 118, 119, 131, 286], "ey": 6, "master": [6, 256, 286, 314], "happen": [6, 9, 12, 17, 109, 270, 293, 306], "me": [6, 293], "dev_quick_start": 6, "fork": [6, 293], "haven": [6, 293], "mkdir": [6, 274], "involv": [6, 14, 270, 291, 293], "coupl": [6, 290, 292], "alpha": [6, 132, 133, 134, 135, 136, 137, 293, 307], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 139, 266, 268, 270, 271, 272, 273, 274, 293, 294, 318, 319], "stand": 6, "omit": [6, 270, 313], "suffix": [6, 40, 115, 270], "onc": [6, 14, 41, 259, 274, 293, 294, 306, 313], "releas": [6, 136, 273, 292, 299, 303, 313], "spack_for_mache_1": 6, "12": [6, 13, 70, 289, 293, 296, 307, 316], "worktre": [6, 292, 293], "my": [6, 136, 296], "fetch": [6, 274, 293], "out": [6, 8, 9, 13, 57, 91, 95, 123, 136, 149, 152, 268, 270, 273, 274, 294, 302, 313], "checkout": [6, 274, 293], "mambaforg": [6, 274, 293, 299, 313], "manual": [6, 14, 49, 50, 270, 272, 319], "linux": [6, 136, 274, 299], "x86_64": [6, 136], "our": [6, 136, 273, 293, 313], "found": [6, 9, 14, 126, 136, 273, 274, 292, 293, 295, 296, 297, 298, 299, 300], "exist": [6, 7, 9, 31, 38, 41, 61, 116, 118, 120, 136, 158, 259, 270, 272, 273, 274, 290, 293, 299, 318], "miniconda3": [6, 274], "alwai": [6, 7, 9, 12, 57, 136, 139, 144, 188, 203, 215, 228, 256, 267, 270, 272, 273, 274, 286, 291, 293, 294], "pleas": [6, 136, 267, 273, 274, 293, 313], "start": [6, 7, 8, 14, 15, 87, 117, 136, 258, 259, 261, 266, 271, 272, 273, 292, 296, 299, 300, 303, 314, 316], "definit": [6, 14, 293], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 75, 101, 107, 114, 115, 120, 136, 139, 186, 201, 213, 226, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 278, 286, 287, 289, 291, 292, 294, 299, 302, 305, 306, 311, 318, 319], "export": [6, 290], "conda_bas": 6, "home": [6, 18, 136, 274, 293, 294, 296, 299, 300], "readi": [6, 293, 300], "configure_polaris_env": [6, 136, 274, 290, 293], "py": [6, 12, 14, 18, 67, 136, 266, 267, 273, 274, 291, 293, 294], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 136, 274], "tmpdir": [6, 136], "group": [6, 7, 266, 292, 295, 297, 299, 300, 312, 313, 319], "spack_temp": 6, "spack_test": 6, "intel": [6, 136, 299], "gnu": [6, 136, 274, 298, 299, 313], "openmpi": [6, 132, 136, 274, 292, 295, 297, 298, 313], "impi": [6, 132, 136, 295, 298], "recreat": [6, 272, 274, 290], "request": [6, 7, 14, 15, 25, 32, 34, 136, 139, 149, 152, 155, 249, 250, 270, 272, 273, 274, 290, 293, 294, 306], "twice": [6, 293], "deploy": [6, 274], "prebootstrap": 6, "load": [6, 19, 109, 133, 136, 137, 270, 274, 292, 293, 294, 295, 296, 297, 298, 299, 300], "activ": [6, 136, 299, 300, 313], "differ": [6, 14, 15, 17, 18, 57, 72, 77, 121, 136, 139, 162, 165, 174, 256, 259, 266, 267, 268, 270, 271, 272, 273, 286, 291, 293, 294, 296, 300, 305, 306, 307, 309, 310, 312, 317], "On": [6, 7, 13, 136, 274, 299], "tmp": [6, 136], "safe": [6, 14, 270, 274, 305], "strictli": [6, 13, 273, 293], "necessari": [6, 7, 13, 136, 293], "good": [6, 12, 38, 270, 274, 293], "idea": [6, 12, 293], "Be": [6, 300], "awar": [6, 7, 136, 293, 299], "with_petsc": [6, 274], "wa": [6, 8, 48, 59, 121, 136, 270, 272, 273, 274, 290, 291, 293, 294, 302, 313], "limit": [6, 271, 274, 305], "amount": [6, 25, 35, 38, 45, 155, 270, 301, 311], "team": [6, 136, 292], "petsc_support": 6, "txt": [6, 8, 120, 271, 290], "with_albani": [6, 274], "albany_support": 6, "encount": [6, 271, 290], "error": [6, 8, 15, 38, 49, 136, 139, 142, 143, 146, 260, 261, 263, 264, 270, 272, 274, 292, 293, 306, 307], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 151, 167, 173, 191, 270, 272, 273, 274, 293, 294, 313, 318, 319], "attempt": [6, 136, 292, 299], "sh": [6, 132, 133, 134, 135, 136, 137, 274, 290, 293, 295, 296, 297, 298, 300, 313], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 93, 94, 96, 104, 136, 270, 273, 274, 291, 292, 293, 296, 299, 300, 313], "pscratch": 6, "suggest": [6, 136, 290], "correctli": 6, "seem": [6, 14, 293, 296, 300], "switch": [6, 293, 294], "v0": 6, "19": 6, "submodul": [6, 256, 267, 274, 286, 293, 313], "serv": [6, 114, 115, 120, 139, 266, 293], "kind": [6, 293], "whichev": [6, 256, 286, 302], "load_dev_polaris_0": [6, 132, 133, 134, 135, 136, 137, 293], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 256, 273, 274, 286, 293, 313], "pio": [6, 25, 34, 37, 155, 259, 263, 264], "openmp": [6, 25, 35, 38, 45, 94, 132, 134, 135, 155, 165, 240, 270, 293, 295, 296, 297, 298, 300], "ifort": [6, 132, 134, 136, 293, 295, 297], "ac": [6, 293], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 293, 299, 313], "job_script": [6, 293, 313], "bash": [6, 274, 290, 293, 313], "termin": [6, 8, 136, 270, 274, 293], "isn": [6, 9, 15, 260, 261, 270, 273, 293], "ll": [6, 19, 136, 260, 273, 293, 300, 306], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 132, 134, 135, 136, 274, 295, 297], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 266, 270, 293, 302], "util": [6, 273, 310], "matrix": 6, "sever": [6, 12, 136, 139, 266, 270, 272, 273, 274, 292, 293, 312, 313, 318], "automat": [6, 7, 9, 12, 14, 19, 136, 139, 270, 273, 274, 293, 294, 295, 297, 298, 299, 300, 313], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 313], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 135, 136, 139, 270, 273, 293], "integr": [6, 15, 139, 174, 259, 273, 293, 305, 306, 307, 312, 317], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 296, 313], "245": 6, "246": 6, "non": [6, 14, 18, 258, 270, 293, 313], "care": [6, 11, 13, 139, 266, 270, 274, 293], "temporari": [6, 136], "begin": [6, 7, 18, 259, 270, 274, 287, 292, 293, 299, 305, 306, 311], "anymor": 6, "best": [6, 17, 136, 270, 274], "hard": [6, 270, 293, 305, 311], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 63, 122, 123, 149, 152, 270, 272, 293, 316], "myst": [7, 293], "tip": [7, 274], "easi": [7, 9, 40, 273, 293], "pull": [7, 136, 273, 274, 293, 294], "guid": [7, 139, 259, 260, 261, 263, 264, 265, 271, 273, 293, 296, 299, 303, 314], "baroclin": [7, 9, 14, 162, 163, 164, 165, 168, 171, 174, 176, 179, 180, 182, 240, 259, 267, 270, 293, 303, 308, 319], "channel": [7, 9, 14, 162, 163, 164, 165, 168, 171, 174, 176, 179, 180, 182, 240, 259, 267, 270, 290, 293, 303, 308, 319], "label": [7, 122, 299, 313], "prepend": 7, "categori": [7, 267, 268, 269, 292, 319], "uniqu": [7, 14, 136, 272, 293], "And": [7, 14, 274, 293], "becom": [7, 270, 272, 293], "who": [7, 274, 293, 294, 300], "citat": 7, "basi": [7, 293], "overview": [7, 292, 296, 300], "common": [7, 12, 14, 44, 49, 136, 259, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 290, 291, 293, 294, 299, 300, 312, 313, 317, 318, 319], "characterist": [7, 312, 317], "comment": [7, 271, 294], "appli": [7, 13, 14, 64, 258, 266, 293, 305, 311, 312, 317], "vertic": [7, 15, 19, 86, 144, 145, 188, 203, 204, 215, 228, 239, 258, 259, 260, 261, 263, 264, 265, 270, 294, 301, 303], "grid": [7, 13, 17, 69, 76, 80, 83, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 139, 195, 208, 246, 247, 248, 249, 250, 251, 254, 255, 259, 260, 261, 263, 264, 265, 270, 287, 293, 294], "forc": [7, 265, 289, 293, 319], "specif": [7, 9, 14, 51, 136, 139, 256, 266, 267, 268, 270, 286, 287, 292, 293, 294, 296, 299, 305, 312, 313, 317, 318], "public": [7, 11, 270, 293, 294], "api": [7, 12, 292, 293], "underscor": [7, 293], "md": [7, 293], "eval": 7, "rst": [7, 14, 293], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 267, 273], "compute_cell_count": [7, 139, 259, 263, 264, 293], "dynamic_model_config": [7, 14, 259, 293], "ot": [7, 293], "numpydoc": [7, 293], "text": [7, 8, 305, 306, 307, 311], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 139, 248, 250, 251, 252, 253, 254, 255, 256, 263, 264, 270, 293, 294, 296, 300, 307, 309, 310], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 256, 294, 309, 310], "overli": [7, 293], "ic": [7, 139, 256, 272, 273, 274, 287, 289, 292, 293, 294, 296, 302, 316, 319], "shelf": [7, 139, 266, 273, 293, 294, 302], "draft": [7, 302], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 61, 62, 63, 64, 67, 68, 70, 71, 72, 75, 80, 81, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 126, 127, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 149, 151, 152, 154, 155, 158, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 184, 187, 188, 189, 191, 192, 194, 195, 197, 199, 202, 203, 204, 205, 206, 208, 210, 212, 214, 215, 216, 217, 218, 219, 221, 223, 225, 227, 228, 229, 230, 231, 232, 234, 236, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 263, 264, 266, 270, 272, 278, 279, 280, 282, 283, 284, 305, 306, 307, 309, 310, 311], "xarrai": [7, 15, 17, 19, 86, 123, 144, 145, 188, 203, 204, 215, 228, 248, 249, 250, 251, 252, 253, 254, 255, 270, 293], "dataarrai": [7, 86, 144, 145, 188, 203, 204, 215, 216, 217, 218, 228, 229, 230, 231, 249, 250, 251, 252, 253], "sea": [7, 139, 216, 218, 229, 231, 250, 251, 252, 253, 256, 287, 289, 292, 293, 294, 302, 309, 310, 316, 319], "surfac": [7, 139, 216, 218, 229, 231, 250, 251, 252, 253, 256, 258, 265, 289, 293, 294, 302, 305, 309, 310, 311], "height": [7, 139, 216, 218, 229, 231, 250, 251, 252, 253, 256, 293, 294, 302, 309, 310], "mask": [7, 248, 251, 254, 255, 270, 293, 294, 302], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 26, 68, 70, 71, 75, 80, 87, 102, 121, 123, 139, 141, 142, 143, 144, 145, 149, 152, 154, 160, 163, 164, 165, 168, 171, 174, 176, 179, 184, 187, 188, 189, 194, 199, 202, 203, 204, 205, 214, 215, 216, 217, 218, 219, 221, 223, 225, 227, 228, 229, 230, 231, 232, 234, 236, 240, 270, 272, 293], "densiti": [7, 13, 139, 293], "seawat": 7, "displac": 7, "land": [7, 139, 256, 272, 292, 293, 294, 302], "landicedraft": 7, "equal": [7, 265, 270, 273, 311], "entri": [7, 54, 87, 90, 115], "line": [7, 10, 36, 38, 93, 94, 104, 136, 270, 271, 273, 274, 292, 313], "type": [7, 14, 17, 18, 19, 26, 99, 106, 131, 136, 139, 142, 194, 210, 239, 241, 260, 266, 270, 272, 273, 274, 286, 290, 291, 293, 294, 305, 306, 307, 309, 310, 311, 312, 318], "side": 7, "colon": 7, "doubl": [7, 14, 139, 270, 271, 293], "back": [7, 293, 296, 313], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 93, 94, 270], "next": [7, 136, 259, 293, 302, 313], "indent": [7, 270], "obviou": [7, 14, 293], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 63, 64, 66, 68, 75, 81, 85, 87, 96, 97, 98, 101, 102, 105, 107, 111, 115, 116, 120, 121, 122, 123, 126, 130, 139, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 155, 156, 160, 165, 166, 188, 190, 203, 204, 215, 220, 228, 229, 233, 240, 270, 272, 282, 293, 302, 305, 306, 309, 310, 311, 312, 316], "els": [7, 8, 136, 270, 272, 293], "further": [7, 266, 272, 300, 312, 317], "rais": [7, 9, 18, 38, 41, 59, 61, 139, 270, 273, 293, 307], "list_cas": 8, "list_machin": [8, 273], "list_suit": 8, "anywher": [8, 12, 136, 274], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 89, 108, 109, 112, 116, 125, 126, 130, 131, 149, 152, 216, 229, 267, 272, 273, 293], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 60, 88, 89, 125, 139, 258, 270, 272, 293], "properti": [8, 258, 270, 299, 306], "setup_suit": 8, "write": [8, 12, 13, 16, 19, 108, 125, 247, 270, 272, 274, 289, 293], "proven": [8, 10, 57, 292, 294], "save": [8, 19, 59, 83, 136, 259, 260, 261, 266, 270, 272, 293, 299, 304, 305], "target": [8, 11, 17, 18, 25, 40, 61, 63, 87, 97, 136, 139, 155, 259, 263, 264, 270, 272, 293, 306], "minimum": [8, 63, 123, 139, 143, 155, 259, 263, 264, 270, 293, 294, 302, 305, 306, 307, 309, 310, 311, 312, 317], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 86, 87, 131, 136, 139, 159, 259, 260, 261, 263, 264, 270, 293, 302, 305, 306, 307, 309, 310, 312, 313, 317], "maximum": [8, 18, 121, 123, 194, 293, 294, 302], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 93, 94, 97, 139, 155, 165, 240, 270, 272, 293], "cpus_per_task": [8, 14, 38, 42, 45, 93, 94, 270], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 293, 302, 305, 306, 309, 310, 311, 312], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 93, 94, 97, 139, 155, 165, 240, 270, 293], "min_cpus_per_task": [8, 14, 38, 45, 93, 94, 270], "fewest": 8, "least": [8, 13, 267, 274, 305, 307], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 136, 139, 155, 165, 240, 270, 292, 293, 294, 306, 307, 309, 310], "run_task": [8, 270, 272], "run_single_step": 8, "oper": [8, 47, 136, 170, 178, 270, 272, 318], "log": [8, 10, 19, 38, 49, 94, 121, 122, 123, 270, 272, 274, 292, 313], "figur": [8, 19, 263, 264, 265, 266, 268, 270, 294], "cpu": [8, 136, 270, 293, 313], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 67, 68, 72, 75, 76, 77, 81, 82, 97, 103, 125, 139, 140, 141, 143, 144, 149, 151, 152, 155, 158, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 184, 187, 188, 189, 191, 192, 195, 197, 198, 199, 202, 203, 205, 206, 208, 210, 211, 212, 214, 215, 216, 219, 221, 223, 225, 226, 227, 228, 229, 232, 234, 236, 239, 240, 241, 242, 244, 260, 261, 263, 264, 267, 270, 272, 273, 277, 279, 280, 282, 283, 284, 293, 306, 307, 312, 317], "retriev": [8, 290], "store": [8, 51, 136, 139, 263, 264, 270, 293, 313], "case_output": [8, 12], "individu": [8, 9, 19, 267, 272, 273, 293, 299, 300, 305, 313, 319], "overal": 8, "whole": [8, 49, 161, 266, 272, 273, 293, 313], "window": 8, "update_cach": 8, "_cached_fil": [8, 270], "origin": [8, 55, 274, 293, 313], "enabl": [8, 19, 265, 270, 290, 294, 300, 309, 310], "consum": [8, 270, 272, 293, 318], "faster": [8, 274], "parser": [9, 46, 53, 57, 174, 184, 199], "mpas_tool": [9, 12, 13, 80, 259, 263, 264, 265, 270, 272, 293], "mpasconfigpars": [9, 270, 272], "polarisconfigpars": [9, 21, 38, 46, 49, 53, 59, 62, 63, 92, 95, 96, 112, 122, 139, 174, 184, 199, 216, 229, 246, 248, 249, 250, 254, 255, 293], "certain": [9, 18, 57, 136, 270, 274, 294, 312, 317], "filepath": [9, 46, 53, 57, 139], "overridden": [9, 31, 58, 139, 158, 293], "algorithm": [9, 14, 139, 240, 259, 263, 264, 270, 293], "featur": [9, 14, 273, 274, 291, 293, 294, 305, 311], "accommod": [9, 25, 35, 38, 45, 93, 94, 155], "add_from_packag": [9, 139, 270, 272, 273, 293], "content": [9, 14, 115, 116, 118, 120, 131, 139, 266, 268, 270, 273, 289, 293, 313, 316], "inertial_gravity_wav": [9, 256, 262, 264, 267, 272, 309, 318], "inertialgravitywav": [9, 263, 272], "import": [9, 11, 12, 13, 15, 17, 18, 19, 139, 266, 267, 270, 272, 273, 274, 291, 293], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 67, 68, 75, 81, 97, 125, 139, 140, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 199, 202, 205, 206, 208, 210, 212, 214, 216, 219, 221, 223, 225, 227, 229, 232, 234, 236, 239, 240, 241, 242, 244, 266, 267, 270, 272, 273, 277, 279, 280, 282, 283, 284, 291, 293], "super": [9, 14, 17, 18, 139, 267, 270, 272, 273, 293], "cfg": [9, 51, 139, 267, 272, 273, 293, 294, 313], "except": [9, 38, 41, 59, 270, 273, 293], "behavior": [9, 14, 111, 139, 270, 271, 274, 293], "noth": [9, 136, 290, 306], "particular": [9, 136, 266, 274, 292, 296, 299, 313], "fine": [9, 272, 293, 311], "_get_basic_config": 9, "larg": [9, 270, 272, 293, 295], "those": [9, 14, 49, 121, 136, 139, 259, 272, 273, 274, 292, 293, 306, 307, 312, 317, 318], "configpars": [9, 93, 94], "getinteg": 9, "getfloat": [9, 12, 14, 17, 139, 270, 293], "getboolean": [9, 270, 293], "implement": [9, 267, 270, 273, 305, 306, 307, 309, 310], "getlist": [9, 272, 293], "comma": [9, 306], "integ": [9, 13], "boolean": [9, 123, 251], "etc": [9, 14, 117, 120, 267, 270, 305], "getexpress": 9, "tupl": 9, "rang": [9, 123, 293], "numpi": [9, 13, 15, 69, 76, 77, 83, 87, 122, 139, 161, 246, 247, 270, 293], "linspac": [9, 19, 260, 306], "arang": 9, "arrai": [9, 15, 69, 76, 77, 83, 122, 139, 246, 247, 249, 250, 251, 252, 293], "sens": [9, 292, 293], "set_shared_config": [9, 272], "intuit": 9, "resolution_to_subdir": [9, 267], "rpe": [9, 182, 267, 273, 293, 313], "resdir": [9, 267], "config_filenam": [9, 38, 49, 270, 272], "indir": [9, 25, 38, 49, 97, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 240, 242, 244, 267, 270, 280, 282, 284], "add_task": [9, 266, 267], "most": [9, 12, 44, 136, 256, 266, 267, 270, 273, 274, 286, 293, 294, 299, 300, 302, 303, 314, 319], "construct": [9, 14, 140, 246, 248, 249, 250, 254, 255, 258, 265, 267, 272, 277, 293, 305, 307], "bring": [9, 139, 293], "add_step": [9, 272, 293], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 165, 176, 259, 270, 293], "baroclinic_channel_rp": 9, "viscos": [9, 14, 165, 174, 176, 259, 270, 273, 293, 305], "dtype": [9, 272, 293], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 94, 155, 165, 240, 270, 272, 293], "add_yaml_fil": [9, 14, 25, 139, 270, 272, 293], "One": [9, 13, 293, 313, 318], "advantag": [9, 14, 136, 272, 273, 293, 299], "track": [9, 25, 270, 272, 274], "associ": [9, 13, 14, 15, 19, 139, 248, 254, 255, 259, 270, 272, 274, 291], "while": [10, 17, 19, 258, 259, 270, 290, 293], "meant": [10, 273, 294], "simplifi": 10, "verifi": [10, 271, 294], "io": [10, 270, 272, 273, 292, 293, 294, 303, 314], "lot": [11, 139, 270, 273, 293], "o": [11, 12, 116, 118, 131, 136, 273, 274, 293, 294, 313], "handl": [11, 12, 274, 293, 299, 307], "lower": [11, 272, 293, 305], "directli": [11, 13, 14, 17, 38, 139, 268, 270, 273, 291, 292, 293, 296], "readm": [11, 272], "importlib": 11, "resourc": [11, 14, 35, 42, 45, 60, 92, 93, 94, 150, 153, 156, 166, 190, 220, 233, 240, 259, 263, 264, 270, 272, 293], "global_ocean": [11, 14, 270, 272, 273, 274, 294, 313], "files_for_e3sm": [11, 270, 272, 294], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 61, 62, 63, 64, 68, 75, 81, 85, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 160, 161, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 187, 188, 189, 192, 195, 197, 202, 203, 204, 205, 206, 208, 210, 214, 215, 219, 221, 223, 227, 228, 232, 234, 236, 240, 242, 244, 247, 270, 272, 280, 282, 284, 293], "did": [11, 291, 293], "add_input_fil": [11, 17, 18, 39, 270, 272, 293], "collect": [11, 100, 140, 267, 269, 277, 291, 293], "whenev": [11, 270, 293], "flexibl": [11, 139, 270, 272, 274, 293], "No": [11, 292, 309, 310], "step_dir": 11, "database_root": [11, 136, 270, 294, 295, 296, 297, 298, 299, 300, 313], "download_path": 11, "join": [11, 293], "bathymetry_databas": [11, 270, 294], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 251, 266, 270, 293, 302, 305, 306, 307, 309, 310, 311, 312, 319], "url": [11, 40, 59, 270, 290, 294], "web": [11, 270, 294], "anl": [11, 270, 294], "gov": [11, 270, 290, 294, 296, 300], "mpas_standalonedata": [11, 136, 294, 299], "dest_path": [11, 59], "remot": [11, 40, 274, 292], "bathymetri": [11, 270, 294], "strategi": 12, "stderr": [12, 38, 49, 270, 272], "loggingcontext": 12, "check_cal": [12, 270], "won": [12, 273, 293, 294], "logger": [12, 18, 38, 49, 67, 94, 121, 270, 272, 293], "full": [12, 38, 93, 111, 249, 250, 259, 270, 272, 274, 289, 292, 293, 299, 302, 304, 305, 306, 309, 310, 311, 312, 313], "although": [12, 139], "captur": 12, "explicit": [12, 273], "go": [12, 46, 53, 242, 244, 266, 270, 272, 273, 274, 293, 300], "subprocess": [12, 38, 93, 94, 110, 270, 273, 290], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 139, 146, 163, 171, 179, 259, 260, 261, 263, 264, 265, 270, 273, 274, 279, 289, 293, 309, 310, 313, 316], "otherwis": [12, 136, 270, 272, 293, 295, 296, 297, 298, 299, 300, 305], "intent": 12, "desir": [12, 13, 14, 18, 19, 121, 139, 270, 271, 272, 293, 294, 313], "trick": [12, 270], "direct": [12, 13, 14, 80, 216, 229, 259, 263, 264, 293, 300, 305, 309, 310], "snippet": [12, 293], "dome": [12, 67, 266, 270, 272, 313, 319], "setup_mesh": [12, 270], "setupmesh": [12, 270, 272], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 270], "landice_grid": [12, 270, 293], "l": [12, 121, 139, 293, 300], "quasiuniformsphericalmeshstep": [13, 139, 272], "icosahedralmeshstep": [13, 139, 272], "jigsaw": [13, 68, 72, 74, 75, 77, 79, 81, 184, 199, 270], "complex": [13, 76, 272, 273, 293], "build_cell_width_lat_lon": [13, 75], "opt": [13, 81], "make_jigsaw_mesh": [13, 75], "icosahedr": [13, 68, 70, 154, 184, 199, 260, 261, 272, 306, 307], "significantli": [13, 302, 307], "smooth": 13, "cell": [13, 14, 15, 19, 68, 69, 70, 71, 75, 76, 77, 80, 83, 86, 99, 106, 139, 150, 153, 155, 156, 166, 190, 208, 210, 216, 218, 220, 229, 231, 233, 248, 249, 250, 251, 254, 255, 259, 263, 264, 266, 287, 302, 305, 306, 309, 310, 311, 312, 316], "quasi": [13, 75, 260, 261, 272, 294, 306, 307, 312, 317], "hand": [13, 102, 273], "restrict": [13, 293, 312], "subdivis": [13, 68, 69, 70, 71, 72], "icosahedron": [13, 69, 70, 71, 72], "tabl": [13, 274, 299, 313], "approxim": [13, 68, 70, 71, 75, 139, 150, 153, 156, 166, 190, 220, 233, 259, 263, 264, 274, 293], "width": [13, 68, 69, 70, 75, 76, 77, 83, 293, 305], "km": [13, 14, 68, 69, 70, 71, 75, 76, 77, 80, 83, 139, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 189, 205, 219, 221, 225, 232, 234, 259, 260, 261, 263, 264, 270, 293, 294, 305, 306, 307, 309, 310, 311, 312, 317, 319], "5": [13, 14, 70, 136, 139, 174, 259, 260, 261, 270, 271, 273, 290, 293, 294, 305, 306, 307, 312, 313, 317], "240": [13, 70, 139, 260, 261, 294, 306], "6": [13, 70, 270, 293, 303, 305, 311, 313, 314], "120": [13, 70, 139, 271, 306, 307], "7": [13, 70, 136, 293, 300, 306, 313], "60": [13, 70, 139, 260, 261, 302, 306], "8": [13, 70, 136, 259, 274, 293, 294, 305, 306, 309, 310, 313], "30": [13, 14, 70, 139, 266, 293, 300, 305, 311, 312, 317], "9": [13, 19, 70, 136, 260, 293, 306, 313], "15": [13, 14, 70, 259, 293, 305, 306, 307, 311, 312, 313, 317], "11": [13, 70, 136, 293, 313], "3": [13, 70, 136, 139, 259, 270, 271, 274, 290, 293, 294, 299, 300, 302, 305, 306, 307, 309, 310, 312, 313], "13": [13, 70, 293, 305], "94": [13, 70, 307], "spherical_mesh": [13, 76], "cell_width": [13, 68, 69, 70, 71, 75, 76, 77, 83], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 83, 122, 123, 139, 141, 146, 176, 182, 195, 208, 244, 259, 260, 261, 284, 306, 307, 309, 310, 316, 319], "plot_cell_width": 13, "cell_width_filenam": [13, 83], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 195, 208, 260, 261, 294, 306], "lon": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 195, 208, 260, 261, 294, 306], "sphere": [13, 260, 261, 306], "vtk_lat_lon": 13, "far": [13, 136, 248, 254, 255, 273, 293], "But": [13, 136, 266, 270, 273, 274, 293, 294, 299], "hexagon": [13, 80, 293, 309, 310], "planar_hex": [13, 80, 259, 263, 264, 265, 270, 293], "make_planar_hex_mesh": [13, 80, 259, 263, 264, 265, 270, 293], "x": [13, 19, 69, 76, 77, 80, 83, 101, 107, 123, 161, 216, 229, 270, 293, 305, 309, 310, 311], "y": [13, 14, 19, 80, 101, 107, 123, 216, 229, 259, 263, 264, 270, 293, 300, 305, 309, 310], "nx": [13, 80, 266, 270, 293, 311], "ny": [13, 80, 266, 270, 293, 311], "dc": [13, 266, 270, 293], "distanc": [13, 80, 194, 293, 305], "adjac": [13, 302], "center": [13, 19, 80, 194, 216, 229, 266, 293, 302, 305], "admittedli": 13, "oddli": 13, "period": [13, 258, 259, 263, 264, 270, 293, 305, 306, 307, 309, 310], "nonperiodic_x": [13, 270, 293], "nonperiodic_i": [13, 270, 293], "consider": [13, 248, 254, 255, 258, 287], "compute_planar_hex_nx_ni": [13, 270, 293], "lx": [13, 80, 270, 293, 305, 309, 310, 311], "ly": [13, 80, 270, 293, 305, 311], "explan": 13, "subtleti": 13, "account": [13, 80, 274, 293, 295, 296, 298, 299, 300, 313], "behav": 13, "stagger": [13, 80], "physic": [13, 80, 283, 289, 293], "np": [13, 15, 19, 194, 260, 270, 293, 306], "sqrt": [13, 15, 309], "domain": [13, 25, 32, 80, 123, 139, 155, 161, 258, 266, 287, 293, 305, 306, 307, 309, 310, 311, 312, 317, 319], "extra": [13, 274], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 270, 293], "max": [13, 139, 270, 293, 305, 306], "int": [13, 14, 25, 26, 35, 38, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 87, 93, 94, 97, 123, 141, 142, 144, 145, 146, 150, 153, 155, 156, 165, 166, 188, 190, 203, 204, 215, 220, 228, 233, 240, 270, 293, 311], "ds_mesh": [13, 15, 19, 86, 123, 270, 293], "creation": [13, 270, 294], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 93, 94, 155, 266, 270, 273, 293], "distant": 13, "descend": [14, 17, 139, 260, 261, 263, 264, 266, 267, 270, 272, 273, 293], "modelstep": [14, 139, 270, 272, 293], "update_pio": [14, 25, 155], "make_graph": [14, 25, 155], "At": [14, 38, 49, 268, 269, 272, 293, 307], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 94, 155, 165, 240, 267, 270, 271, 291, 293, 294, 296, 300, 313, 318], "prefix": [14, 40, 136, 139, 144, 145, 188, 203, 204, 215, 228, 272, 274, 294], "end": [14, 149, 152, 270, 272, 273, 274, 289, 291, 293, 296, 305, 306, 309, 310, 311, 316], "yml": 14, "reason": [14, 17, 44, 136, 270, 273, 293, 318], "add_namelist_fil": [14, 25, 139, 270, 272], "add_model_config_opt": [14, 25, 139, 270, 272, 293], "add_streams_fil": [14, 25, 139, 270, 272], "themselv": [14, 273, 292], "question": [14, 270, 294], "never": [14, 136, 291], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 139, 293], "config_run_dur": [14, 139, 272, 293], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 163, 291, 293], "config_block_decomp_file_prefix": [14, 293], "time_integr": [14, 139, 293, 306, 307], "config_time_integr": [14, 139], "rk4": [14, 139, 273, 306, 307], "filename_templ": [14, 139, 293], "restart": [14, 18, 49, 139, 260, 261, 263, 264, 265, 267, 271, 273, 279, 280, 289, 291, 293, 313, 318], "output_interv": [14, 139, 293, 306, 307], "0030_00": 14, "clobber_mod": [14, 139, 293], "truncat": [14, 139, 293], "reference_tim": [14, 139], "0001": [14, 139, 293], "01_00": [14, 139, 287, 293], "tracer": [14, 19, 184, 241, 242, 244, 259, 260, 261, 263, 264, 265, 293, 306, 309, 310, 311], "xtime": [14, 15, 87, 139, 293], "normalveloc": [14, 18, 19, 139, 181, 230, 258, 259, 263, 264, 265, 270, 293, 311], "layerthick": [14, 18, 139, 181, 248, 252, 253, 254, 255, 259, 263, 264, 265, 270, 293], "refzmid": [14, 248, 254, 255, 270, 293], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 293], "clariti": [14, 270], "global_converg": [14, 272, 293, 304], "substitut": 14, "config_write_output_on_startup": [14, 293], "0000_00": [14, 293], "config_use_mom_del2": [14, 293], "config_implicit_bottom_drag_coeff": [14, 293], "0e": [14, 310, 311], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 293], "config_cvmix_background_viscos": [14, 293], "worri": 14, "sometim": [14, 248, 254, 255, 266, 268, 270, 272, 291, 293, 318], "togeth": [14, 18, 136, 266, 291, 293, 318], "overkil": 14, "reli": [14, 270, 272, 293], "along": [14, 19, 136, 259, 270, 292, 293], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 89, 90, 92, 96, 97, 113, 115, 116, 122, 125, 126, 127, 139, 141, 149, 152, 158, 187, 202, 214, 227, 270, 272, 293], "config_mom_del2": [14, 259, 270, 293], "precis": [14, 139, 270, 293], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 61, 64, 110, 111, 115, 120, 121, 122, 127, 151, 154, 155, 167, 173, 184, 191, 199, 240, 242, 244, 293], "possibli": [14, 38, 49, 267, 270, 272, 274, 293], "at_setup": [14, 30, 151, 167, 173, 191, 293], "being": [14, 30, 38, 49, 110, 112, 115, 121, 136, 139, 151, 167, 173, 191, 270, 272, 273, 274, 293, 302], "dt": [14, 139, 165, 240, 270, 293, 305, 306, 307, 309, 310, 312, 317], "proport": [14, 139, 293, 302, 305, 306, 307, 309, 310, 312, 317], "dt_per_km": [14, 139, 260, 261, 293, 305, 309, 310, 312, 317], "stackoverflow": [14, 61, 293], "1384565": [14, 293], "7728169": [14, 61, 293], "config_dt": [14, 139, 293], "strftime": [14, 293], "gmtime": [14, 293], "run_time_step": [14, 165, 270, 293], "durat": [14, 139, 259, 263, 264, 265, 271, 293], "run_second": [14, 293], "btr_dt": [14, 139, 165, 240, 270, 293, 305], "btr_dt_per_km": [14, 139, 293, 305], "config_btr_dt": [14, 139, 293], "bit": [14, 136, 273, 291, 293, 305, 313], "complic": [14, 273, 274, 293], "slightli": [14, 274], "sophist": 14, "immutable_stream": [14, 293], "var_struct": [14, 286], "var": [14, 117, 286, 293], "var_arrai": [14, 286], "tag": [14, 292], "taken": [14, 25, 155, 260, 261, 270, 293, 300, 313], "past": 14, "experi": [14, 136, 273, 302], "difficult": [14, 136, 299], "synchron": [14, 292], "out_nam": 14, "equival": [14, 274, 293, 295], "template_replac": [14, 28, 29, 139], "treat": [14, 271, 273], "jinja2": [14, 28, 29, 116, 149, 152], "render": [14, 28, 29, 116], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 270, 273, 274, 294, 313], "qu240dynamicadjust": 14, "adjust": [14, 136, 139, 256, 294], "interv": [14, 15, 160, 306, 307], "spin": 14, "reus": [14, 270, 273, 274, 293, 294, 313], "qualit": 14, "forgotten": 14, "broken": [14, 270, 273], "immedi": [14, 67, 274, 293], "miss": [14, 270, 293, 294], "detect": [14, 19, 294, 295, 297, 298, 299, 307, 313], "gpmeti": [14, 294], "divid": [14, 302], "partition_graph": [14, 25, 155], "circumst": [14, 18, 38, 39, 270, 293], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 290, 293, 312, 317], "v1": [14, 302], "better": [14, 17, 136, 313], "v2": [14, 294, 302], "littl": [14, 273, 274, 292, 293], "feel": [14, 136, 270, 293], "runtime_setup": [14, 17, 35, 45, 259, 263, 264, 272], "yourself": [14, 293, 299], "culler": 14, "cull": [14, 259, 263, 264, 270, 293], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 83, 85, 86, 123, 139, 142, 143, 144, 145, 188, 195, 203, 204, 208, 215, 228, 248, 254, 255, 258, 259, 261, 263, 264, 265, 293, 305, 306, 307, 309, 310], "weight": [14, 15, 17, 85, 248, 254, 255, 293, 302], "weight_field": [14, 85], "helper": [15, 266, 267], "handi": 15, "area_for_field": 15, "right": [15, 136, 139, 272, 274, 293, 294, 302, 305, 306, 313], "edg": [15, 19, 86, 99, 102, 106, 123, 208, 210, 216, 217, 229, 230, 258, 293], "dimens": [15, 86, 141, 146, 188, 203, 265, 305], "statist": [15, 294], "calcul": [15, 263, 270, 272], "xr": [15, 19, 216, 217, 218, 229, 230, 231, 270, 293], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 145, 204], "mesh_filenam": [15, 25, 85, 155, 161], "open_dataset": [15, 19, 270, 293], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 87, 139, 266], "get_output_field": [15, 139], "field_nam": [15, 123, 143, 144, 145, 188, 203, 204, 215, 228], "output_filenam": [15, 139, 149, 152, 161], "ds_out": 15, "time_index": [15, 87], "isel": [15, 19], "frequent": [17, 256, 286], "observ": [17, 292], "dataset": [17, 86, 87, 123, 216, 229, 248, 254, 255, 270, 293], "region": [17, 19, 292, 294], "pyremap": [17, 103], "interpol": [17, 97, 260, 261, 294], "hood": 17, "esmf_regridweightgen": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 302], "bilinear": [17, 97, 260, 306, 307, 312, 317], "filenam": [17, 18, 38, 40, 41, 49, 91, 98, 99, 100, 101, 105, 106, 107, 121, 126, 128, 270, 272, 274, 293], "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 294], "destin": [17, 97, 98, 99, 100, 101, 102, 103], "src_from_lon_lat": 17, "lon_var": [17, 98, 100, 105], "lat_var": [17, 98, 100, 105], "dst_from_mpa": 17, "mesh_nam": [17, 98, 99, 100, 101, 102, 105, 106, 107, 142, 144, 145, 154, 188, 195, 197, 203, 204, 208, 210, 215, 228, 272], "qu60": 17, "subclass": [17, 72, 75, 76, 77, 82, 139, 293], "src_": 17, "dst_": 17, "pick": [17, 108, 109], "vizmap": [17, 184, 195, 199, 208, 260, 261, 272], "128": [17, 271, 296, 297, 300], "cosine_bell_viz": [17, 19, 260, 306, 312, 317], "dlon": [17, 102, 260, 306, 307, 312, 317], "dlat": [17, 102, 260, 306, 307, 312, 317], "remap_method": [17, 260, 306, 307, 312, 317], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 102], "With": [17, 274], "approach": [17, 270, 273, 274, 290, 293, 302], "perhap": [17, 19, 41, 266, 268], "cover": [17, 287, 293], "nearli": [17, 270, 272, 291, 292, 293], "workflow": [17, 270, 274], "critic": [18, 293], "easiest": [18, 136, 274], "validate_var": [18, 38, 41, 139, 149, 152, 240, 270], "meth": 18, "add_output_fil": [18, 39, 270, 272, 293], "temperatur": [18, 181, 258, 259, 264, 265, 270, 289, 293, 305, 306, 307, 311, 312, 317], "salin": [18, 181, 258, 259, 265, 270, 293, 305, 306, 307, 311, 312, 317], "done": [18, 35, 45, 270, 272, 274, 293, 313], "compare_vari": [18, 293], "filename1": [18, 121, 293], "filename2": [18, 121, 293], "compact": [18, 293], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 121], "valueerror": [18, 273], "quiet": [18, 110, 111, 121, 127], "report": 18, "threshold": [18, 139, 306, 307, 309, 310], "l1": [18, 121], "00000000000000e": 18, "l2": [18, 121, 139, 142, 143, 260, 261, 306, 307, 309, 310], "l_infin": 18, "linf": [18, 121], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 259, 305], "2thread": [18, 305], "test_20210616": 18, "further_valid": 18, "zero": [18, 249, 250, 251, 252, 253, 258, 259, 265, 293, 306, 311], "l1_norm": [18, 121], "l2_norm": [18, 121], "linf_norm": [18, 121], "nonzero": [18, 121], "solut": [18, 135, 142, 144, 145, 188, 203, 204, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 260, 261, 263, 264, 271, 290, 293, 303, 307, 308, 309], "aspect": [19, 293], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 136, 155, 256, 274, 293, 294, 305], "plot_horiz_field": [19, 270, 293], "patch": [19, 123, 293], "polygon": 19, "character": 19, "accordingli": [19, 95], "final_normalveloc": [19, 293], "t_index": [19, 123, 293], "vmin": [19, 123, 260, 293, 306, 307], "max_veloc": [19, 293], "vmax": [19, 123, 260, 293, 306, 307], "cmap": [19, 123, 270, 293], "cmo": [19, 270, 293, 307], "balanc": [19, 199, 261, 270, 293, 307], "show_patch_edg": [19, 123, 270, 293], "plot_global_field": 19, "plot_land": [19, 122], "disabl": [19, 258, 306, 319], "contin": [19, 122], "overlain": 19, "cmocean": [19, 270, 293], "noqa": [19, 67, 270, 293], "f401": [19, 270, 293], "tracer1": [19, 139], "nvertlevel": [19, 123, 141, 146, 248, 254, 255, 270, 293, 302], "out_filenam": [19, 119, 122, 247], "colormap_sect": [19, 122], "titl": [19, 122, 123, 139, 141, 146], "colormap": [19, 122, 123, 260, 261, 293, 306, 307], "cosin": [19, 139, 184, 186, 187, 189, 192, 194, 195, 197, 205, 208, 210, 260, 272, 293, 303, 304, 307, 308, 312, 317], "bell": [19, 139, 184, 186, 187, 189, 192, 194, 195, 197, 205, 208, 210, 260, 272, 293, 303, 304, 307, 308, 312, 317], "converg": [19, 184, 188, 199, 203, 204, 212, 213, 215, 225, 226, 228, 260, 261, 263, 264, 268, 271, 292, 293, 306, 307, 309, 312, 317], "colormap_nam": [19, 122, 260, 306, 307], "viridi": [19, 260, 293, 306], "norm": [19, 121, 122, 139, 143, 146, 260, 261, 306, 307, 309, 310], "norm_typ": [19, 122, 260, 306, 307], "norm_arg": [19, 122, 260, 306, 307], "colorbar": [19, 122, 123, 260, 306], "tick": [19, 122, 260, 306], "mark": [19, 260, 274, 306], "colorbar_tick": [19, 122, 260, 306], "standard": [19, 273, 274, 283, 293, 296, 313], "symlog": [19, 122], "symmetr": 19, "central": [19, 306], "logarithm": [19, 123], "color": [19, 123], "normal": [19, 216, 217, 229, 230, 258, 261, 270, 271, 274, 293, 299, 307], "symlognorm": 19, "lognorm": 19, "hous": [20, 306], "kei": [20, 49, 115, 139, 141, 272], "max_memori": [25, 35, 38, 45, 155, 270], "graph_filenam": [25, 85, 149, 152, 155], "make_yaml": 25, "stride": [25, 37, 155], "partit": [25, 34, 44, 62, 85, 155, 259, 263, 264, 270, 294, 295, 296, 297, 298, 300, 313], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 97, 155, 165, 240, 270], "nor": [25, 38, 49, 97, 155, 165, 240, 270, 293], "append": [25, 38, 40, 49, 97, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 240, 270, 280, 282, 284], "ideal": [25, 35, 38, 45, 93, 94, 97, 139, 155, 165, 240, 241, 242, 244, 266, 270, 273, 292, 293, 294, 319], "fewer": [25, 35, 38, 45, 93, 94, 155, 165, 240, 270, 293, 313], "memori": [25, 35, 38, 45, 155, 270, 294], "mb": [25, 35, 38, 45, 155, 270, 294], "placehold": [25, 35, 38, 45, 155, 270, 313], "diverg": [31, 158, 307], "counterpart": [31, 139, 158], "nest": [31, 125, 127, 158], "graph_fil": 32, "run_as_subprocess": [38, 270], "smallest": [38, 270, 291, 302, 319], "unit": [38, 98, 102, 105, 270, 291, 305, 319], "term": [38, 291, 293, 309, 310], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 270, 272, 313], "finish": [38, 39, 82, 270, 293], "known": [38, 39, 136, 260, 270, 293], "suffici": [38, 270], "establish": [38, 39, 270], "is_depend": [38, 270], "machine_info": [38, 270], "machineinfo": 38, "combin": [38, 40, 49, 57, 63, 96, 125, 270, 271, 272, 290, 293, 294, 313], "base_work_dir": [38, 49, 112, 270, 272], "log_filenam": [38, 49, 270, 272], "redirect": [38, 270], "extern": [38, 136, 256, 267, 270, 272, 286, 303, 314], "turn": [38, 56, 267, 270, 290, 293, 311], "access": [39, 272, 273, 274, 293, 295, 299, 300], "database_compon": [40, 270], "work_dir_target": [40, 270], "come": [40, 136, 270, 274, 293, 295, 296, 297, 298, 299, 300, 303], "_database_root": 40, "available_resourc": [42, 92], "constrain": [42, 150, 153, 156, 166, 190, 220, 233, 259, 263, 264, 270, 293], "cores_per_nod": [42, 92, 95, 136, 294, 295, 296, 297, 298, 299, 300, 313], "everi": [43, 198, 211, 259, 270, 272, 273, 289, 290, 291, 293, 305, 311], "child": [43, 139, 198, 211, 267, 270, 272, 273], "subtask": 45, "step_symlink": [49, 272], "outsid": [49, 50, 266, 268, 270, 272, 274], "stdout_logg": [49, 272], "goe": [49, 270, 272, 293], "regardless": [49, 272], "new_step_log_fil": [49, 272], "run_by_default": [50, 272], "assum": [51, 116, 126, 136, 274, 293, 300, 305], "prior": [51, 270], "step_path": 55, "variant": [55, 186, 201, 259, 266, 271, 273, 274, 293, 299, 302, 305, 306], "uncach": 55, "datestamp": 55, "yymmdd": [55, 294], "dry": [55, 271], "meta": 57, "empti": [57, 270, 273, 274, 291, 293], "link_nam": 61, "overwrit": 61, "55742015": 61, "fileexistserror": 61, "unless": [61, 111, 274], "isadirectoryerror": 61, "qo": [62, 295, 296, 298, 299, 300, 313], "qualiti": [62, 295, 296, 298, 299, 300, 313], "servic": [62, 295, 296, 298, 299, 300, 313], "constraint": [62, 300, 313], "wall_tim": [62, 313], "wall": [62, 313], "target_cor": 63, "min_cor": 63, "decomposition_test": [67, 266, 313], "decompositiontest": [67, 266], "e501": [67, 293], "turquois": [67, 296], "usr": [67, 136, 296, 313], "climat": [67, 295, 296, 297, 299, 313], "mhoffman": 67, "constant": [68, 75, 76, 139, 258, 293, 305, 306, 307, 309, 311, 312, 317], "latitud": [69, 76, 98, 100, 102, 105, 122, 260, 306, 307, 312, 317], "longitud": [69, 76, 77, 83, 98, 100, 102, 105, 122, 260, 306, 307, 312, 317], "ndarrai": [69, 76, 77, 83, 87, 122, 161, 194, 246, 247, 293], "degre": [69, 76, 77, 83, 102, 294, 305], "length": [69, 76, 77, 83], "180": [69, 76, 77, 83, 102, 139, 306], "90": [69, 76, 77, 83, 139, 270, 306], "static": [70, 71], "rule": 70, "thumb": 70, "achiev": [71, 271], "uniform": [75, 80, 149, 152, 189, 205, 259, 260, 261, 263, 264, 266, 272, 293, 294, 305, 306, 307, 309, 310, 311, 312, 317], "natur": 80, "jigsawpi": [81, 270], "jigsaw_jig_t": 81, "meti": 85, "area": [86, 293], "dt_target": 87, "start_xtim": 87, "char": 87, "defaults_filenam": 88, "total": [92, 270, 271, 273, 293, 294, 296, 313], "substep": [93, 94], "command_line_arg": 93, "cpus_per_nod": 95, "map_filenam": 97, "src_grid_info": 97, "dst_grid_info": 97, "neareststod": [97, 260, 306, 307, 312, 317], "conserv": [97, 260, 306, 307, 312, 317], "map_": 97, "source_typ": 97, "_": [97, 136, 270, 272, 274, 293, 311], "dest_typ": 97, "1d": [98, 102, 105, 122, 139, 246, 247, 248, 249, 250, 251, 252, 254, 255], "2d": [98, 102, 105, 122], "5x0": [98, 102, 105], "5degre": [98, 102, 105], "coordin": [98, 100, 101, 105, 107, 122, 123, 216, 229, 248, 254, 255, 301, 303, 305, 306, 309, 310, 311, 312, 316], "mesh_typ": [99, 106, 210, 266, 270, 272], "vertex": [99, 106, 210], "x_var": [101, 107], "y_var": [101, 107], "proj_attr": [101, 107], "proj_str": [101, 107], "proj": [101, 107], "left": [102, 139, 293, 302, 305, 306], "remapp": [103, 104], "remap_fil": 103, "progress": [110, 111], "is_task": 111, "steps_to_skip": 111, "component_nam": 112, "config_filepath": 112, "unpickl": [113, 270], "cached_step": 114, "identifi": [114, 136, 267, 286, 319], "task_list": 115, "_all": 115, "streams_filenam": 116, "lxml": [116, 118, 131], "etre": [116, 118, 131], "new_child": 117, "children": 117, "sub": [117, 293], "new_tre": 118, "infin": 121, "toler": 121, "data_arrai": 122, "colorbar_label": 122, "subtitl": 122, "out_file_nam": 123, "ax": 123, "z_index": 123, "cmap_set_und": 123, "cmap_scal": 123, "cmap_titl": 123, "horizont": [123, 139, 161, 258, 259, 260, 261, 263, 264, 265, 305, 309, 310, 311], "depth": [123, 139, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 293, 294, 302, 305, 306, 307, 309, 310, 311, 312], "slice": [123, 142], "fieldnam": 123, "visibl": 123, "bar": 123, "matplotlib": [124, 293], "style": [124, 139, 292, 293], "classmethod": 126, "jinja": [126, 139, 260], "namelist_templ": 130, "polarisyaml": [130, 131], "processed_registry_filenam": 131, "registri": [131, 258, 286], "steam": 131, "1_anvil_intel_impi": [132, 136], "mvapich": [132, 136, 295], "ve": [132, 133, 134, 135, 137, 274, 293], "1_anvil_gnu_openmpi": 132, "1_chicoma": 133, "cpu_gnu_mpich": [133, 137], "crai": [133, 136, 137, 296, 300], "1_chrysalis_intel_openmpi": 134, "1_chrysalis_gnu_openmpi": 134, "soon": [135, 136, 293, 313], "1_compy_intel_impi": 135, "1_compy_gnu_openmpi": 135, "load_polaris_env": [136, 274, 293, 313], "therefor": [136, 270, 291, 293], "chicoma": [136, 299, 313], "mpich": [136, 274, 292, 296, 300, 313], "compi": [136, 298, 313], "pm": [136, 300, 313], "compymcnodefac": [136, 299], "perlmutt": [136, 296, 299, 313], "pretti": [136, 270, 273, 293, 294], "conda_path": [136, 274], "osx": [136, 299], "clang": [136, 274], "1_": 136, "morpheu": 136, "cobalt": [136, 295, 296, 297, 298, 299, 300], "single_nod": [136, 294, 295, 296, 297, 298, 299, 300, 313], "mpirun": [136, 290, 294, 295, 296, 297, 298, 299, 300, 313], "srun": [136, 270, 290, 293, 294, 295, 296, 297, 298, 299, 300, 313], "parallel_execut": [136, 290, 294, 295, 296, 297, 298, 299, 300, 313], "modules_befor": [136, 296, 300], "modules_aft": [136, 296, 300], "polaris_env": [136, 295, 296, 297, 298, 299, 300], "deploi": [136, 274, 292, 295, 296, 297, 298, 299, 300], "mpi_gnu": [136, 295, 296, 297, 298, 299, 300], "hdf5": [136, 295, 296, 297, 298, 299, 300], "use_e3sm_hdf5_netcdf": [136, 295, 296, 297, 298, 299, 300], "discoveri": 136, "hostnam": 136, "hostname_contain": 136, "queu": 136, "laptop": [136, 274, 293, 294], "workstat": [136, 274], "high": [136, 270, 297, 299], "hpc": [136, 274, 296, 299], "safest": [136, 274], "mpi_": 136, "simpl": [136, 139, 273, 286, 293, 313], "compiler_gnu": 136, "compiler_intel": 136, "hopefulli": [136, 294], "parlanc": 136, "concret": 136, "ubuntu": 136, "spec": [136, 290, 300], "gcc": 136, "curl": 136, "81": 136, "buildabl": 136, "install_missing_compil": 136, "cc": 136, "bin": [136, 274, 300, 313], "cxx": 136, "f77": 136, "fc": 136, "operating_system": 136, "ubuntu22": 136, "04": 136, "extra_rpath": 136, "luck": 136, "catch": [136, 271], "22": 136, "guess": [136, 293], "correct": [136, 274], "potenti": [136, 161, 174, 270, 293, 305], "purg": 136, "perl": 136, "32": [136, 271, 313], "bsnc6lt": 136, "ugetvbp": 136, "sxfyy4k": 136, "2020": 136, "304": 136, "n3b5fye": 136, "j3zxncu": 136, "7ohuiwq": 136, "k2zu3y5": 136, "mirrcz7": 136, "variou": [136, 238, 270, 274, 278], "ask": 136, "gb": 136, "minut": [136, 259, 271, 305, 318], "hour": [136, 139, 263, 264, 271, 289, 296, 300, 306, 307, 309, 310, 313, 316], "zlib": 136, "incompat": 136, "ubuntu20": 136, "readlin": 136, "pkgconf": 136, "spackdir": 136, "env": [136, 300], "arch": 136, "repositori": [136, 268, 292, 293, 313], "x86_64_v4": 136, "free": [136, 258, 293, 294], "touch": [136, 274], "everyth": 136, "1_pm": 137, "ever": [139, 273], "expand": [139, 302], "oceanmodelstep": [139, 270, 293], "decid": [139, 293], "veri": [139, 267, 270, 273, 274, 286, 293, 307, 311], "earli": [139, 303, 313], "stage": [139, 258, 270, 272, 274, 282, 289, 303, 313], "map_yaml_to_namelist": 139, "heurist": 139, "200": [139, 263, 264, 293, 305, 309, 310, 311], "round": [139, 306], "cell_count": [139, 150, 153, 156, 166, 190, 220, 233, 293], "goal_cells_per_cor": [139, 293, 306, 309, 310, 312, 317], "pinch": 139, "2000": [139, 266, 287, 289, 293, 316], "max_cells_per_cor": [139, 293, 306, 309, 310, 312, 317], "seciton": 139, "control": [139, 260, 261, 270, 294, 305, 306, 311, 313], "scale": [139, 305, 313], "tri": [139, 273], "apport": 139, "dai": [139, 160, 174, 259, 260, 261, 265, 289, 293, 305, 306, 307, 311, 316], "form": [139, 319], "dddd_hh": [139, 160], "ss": [139, 160], "get_time_interval_str": 139, "run_dur": [139, 306, 307], "fill": 139, "dt_str": 139, "run_duration_str": 139, "output_interval_str": 139, "yaml_filenam": [139, 149, 152], "caviti": [139, 273, 293, 294, 302], "frazil": 139, "flux": [139, 258, 311], "fix": [139, 293], "add_spherical_base_mesh_step": [139, 272], "spherical_converg": [139, 261, 272, 306], "icos_resolut": [139, 306], "480": [139, 306], "qu_resolut": [139, 306], "150": [139, 306], "210": [139, 302, 306], "evalu": [139, 142, 143, 144, 145, 188, 203, 204, 215, 217, 218, 228, 230, 231, 306, 307], "convergence_eval_tim": [139, 306, 307], "24": [139, 260, 306, 316], "convergence_thresh": [139, 306, 307], "error_typ": [139, 142, 143, 306, 307], "convergence_forward": [139, 260, 306, 307], "split_explicit": [139, 306, 307], "rk4_dt_per_km": [139, 306, 307], "split": [139, 273], "split_dt_per_km": 139, "barotrop": [139, 165, 240, 270, 293, 305, 311], "simul": [139, 263, 264, 270, 291, 293, 304, 305, 307, 309, 310, 312, 313, 317], "numer": [139, 309, 310], "infti": [139, 302], "inf": [139, 142, 143, 307], "infrastructur": [139, 273, 293], "add_cosine_bell_task": [139, 267], "sphericalconvergenceforward": [139, 260, 261], "invok": 139, "analyz": [139, 141, 187, 202, 293, 306], "split_explicit_t": [139, 293], "convergenceforward": [139, 263, 264], "convergenceanalysi": [139, 260, 261, 263, 264], "convergence_var": [139, 141], "zidx": [139, 141, 142, 144, 145, 146, 188, 203, 204, 215, 228], "exact_solut": 139, "state": [139, 144, 161, 163, 164, 171, 174, 179, 188, 203, 215, 228, 258, 259, 260, 261, 263, 264, 265, 270, 271, 293, 306, 307], "put": [139, 274, 293], "grid_1d": 139, "generate_1d_grid": 139, "vertical_grid": [139, 246, 248, 254, 255, 266, 270, 293, 294, 302, 305, 306, 309, 310, 311, 312], "z": [139, 141, 142, 144, 145, 146, 188, 203, 204, 215, 228, 249, 250, 251, 252, 253, 254, 255, 293, 305, 306, 309, 310, 311, 312], "star": [139, 253, 255, 293, 305, 306, 309, 310, 311, 312], "init_vertical_coord": [139, 270, 293], "minlevelcel": [139, 248, 250, 251, 252, 253, 254, 255, 293], "maxlevelcel": [139, 248, 249, 250, 251, 252, 253, 254, 255, 293], "cellmask": [139, 248, 251, 254, 255, 293], "zmid": [139, 248, 254, 255, 293], "restingthick": [139, 248, 253, 254, 255, 293], "bottomdepth": [139, 248, 249, 251, 252, 253, 254, 255, 270, 293, 307], "entir": [139, 293, 305, 318], "petersen": [139, 274, 293, 305], "et": [139, 293, 302, 305, 306, 307, 309, 310], "al": [139, 293, 302, 305, 306, 307, 309, 310], "2015": [139, 293, 305], "int_": 139, "rho": 139, "dv": 139, "sort": [139, 267, 268, 273, 274], "increas": [139, 273], "compute_rp": [139, 293], "csv": [139, 260, 261, 293], "dependencies_dict": 141, "rate": [141, 143, 144, 188, 203, 215, 228, 260, 261, 263, 264, 293, 306, 307, 309, 310, 311], "variable_nam": [142, 146], "exact": [142, 144, 145, 188, 203, 204, 215, 216, 217, 218, 228, 229, 230, 231, 260, 261, 263, 264, 273, 309, 310], "conv_thresh": [143, 309, 310], "deriv": [144, 215, 228], "subdivid": [154, 272], "dynamic_ntask": 155, "dynam": [155, 256, 265, 294, 305, 306, 307, 311, 312], "available_cor": 157, "estim": [157, 159, 293], "time_str": 160, "initial_state_filenam": 161, "energi": [161, 174, 292, 293, 305], "len": [161, 293], "output_fil": [161, 270, 293], "shorter": [171, 271, 279], "step_subdir": [180, 280], "processor": [180, 270, 280, 305], "include_viz": [184, 199, 272], "advect": [184, 260, 261, 306, 309, 310, 311], "less": [184, 199, 270, 302], "ncell": [188, 203, 270, 293], "max_valu": 194, "ri": 194, "accord": [194, 307, 309, 310, 313], "meter": [194, 246, 247], "radiu": [194, 306], "viz_map": [195, 272], "testcas": [207, 293, 294, 305, 311, 313], "viz_map_cel": 208, "viz_map_edg": 208, "inerti": [212, 213, 214, 216, 219, 221, 223, 263, 272, 303, 308], "graviti": [212, 213, 214, 216, 219, 221, 223, 263, 272, 303, 308], "wave": [212, 213, 214, 216, 219, 221, 223, 229, 263, 270, 272, 293, 303, 305, 308, 310], "analys": [214, 227], "angleedg": [216, 229], "angl": [216, 229, 307], "posit": [216, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 293, 302, 311], "xcell": [216, 229, 270, 293], "ycell": [216, 229, 270, 293], "xedg": [216, 229, 270, 293], "yedg": [216, 229], "f0": 216, "corioli": [216, 263, 264, 293, 305, 306, 307, 310, 311], "eta0": [216, 229], "amplitid": [216, 229], "kx": [216, 229], "ky": [216, 229], "angular": [216, 229], "frequenc": [216, 229, 259], "veloc": [217, 230, 258, 259, 261, 263, 264, 272, 274, 293, 306, 307, 311, 313], "norm_vel": [217, 307], "eta": [218, 231, 309, 310], "taskdir": [221, 223, 234, 236], "manufactur": [225, 226, 227, 229, 232, 234, 236, 264, 303, 308], "column": [238, 239, 241, 242, 244, 261, 265, 274, 278, 279, 280, 282, 283, 284, 286, 287, 289, 303, 307, 308, 313, 314, 315], "mix": [239, 266, 267, 309, 310, 311], "param": [239, 241], "resources_fix": 240, "ag": [241, 242, 244], "evolv": [241, 292, 302, 306, 311], "ideal_ag": [242, 244], "layer": [246, 247, 248, 252, 253, 254, 255, 258, 259, 263, 264, 265, 293, 294, 302, 305, 306, 309, 310, 311, 312], "bottom": [248, 249, 250, 251, 252, 253, 254, 255, 258, 293, 294, 302, 305, 306, 307, 309, 310, 311, 312], "thick": [248, 252, 253, 254, 255, 259, 261, 265, 287, 293, 294, 302, 305, 307, 309, 316], "stretch": [248, 254, 255, 293, 302], "elev": [248, 254, 255, 293, 302], "midpoint": [248, 254, 255, 293], "reftopdepth": [248, 251, 252, 254, 255, 293], "down": [248, 249, 250, 251, 252, 253, 254, 255, 293, 302, 306], "ref": [248, 254, 255, 293], "middl": [248, 254, 255, 293], "refbottomdepth": [248, 249, 250, 251, 252, 254, 255, 270, 293], "refinterfac": [248, 254, 255, 293], "element": [248, 254, 255, 293], "vertcoordmovementweight": [248, 254, 255, 293], "movement": [248, 254, 255, 293], "alter": [249, 250, 270, 272, 292, 293, 302, 305, 306, 307, 309, 310, 311, 312], "partial": [249, 250, 293, 302, 305, 306, 309, 310, 311, 312], "seafloor": [249, 251, 252, 253, 302], "unstretch": 253, "shelv": [256, 294, 302], "ssh_adjust": [256, 270, 294], "compass_branch": 256, "example_compact": [256, 267, 286, 294], "default_input": [256, 267, 286, 293, 294], "ocean_model": [256, 274, 294], "latest": [256, 274, 286, 292, 303, 313], "compat": [256, 274, 286, 290, 292], "verison": 256, "geostroph": [256, 262, 303, 308], "manufactured_solut": [256, 262, 267, 310], "single_column": [256, 262, 267, 286, 288, 311], "minim": 258, "fcell": [258, 270, 293, 306], "fedg": [258, 270, 293, 306], "fvertex": [258, 270, 293, 306], "slip": 258, "solid": [258, 287, 305, 306], "tangenti": 258, "nonperiod": 258, "drag": [258, 260, 261], "mass": 258, "momentum": [258, 259, 260, 261, 263, 264, 309, 310], "scalar": 258, "rigid": 258, "solv": [258, 290, 302], "mid": [258, 305], "vari": [258, 260, 261, 270, 290, 299, 302, 306, 307], "consult": [258, 293], "tidal_forc": 258, "eddi": [259, 305], "addition": [259, 260, 261, 263, 264, 265, 270, 295, 296, 297, 298, 300], "diffus": [259, 260, 261, 263, 264, 265], "50": [259, 263, 264, 293, 305, 309, 310, 311], "prescrib": [259, 263, 264, 307], "intens": 259, "enough": [259, 270, 273, 293], "cosinebel": [260, 272], "shape": [260, 306], "blob": 260, "around": [260, 293, 294, 305, 306], "distribut": 260, "convergence_tracer1": 260, "fast": [260, 261, 293], "water": [261, 263, 293, 305, 306, 307, 309, 310, 311, 312], "convergence_h": 261, "convergence_normalveloc": 261, "shallow": [263, 274, 306, 307, 309, 310, 312], "100": [263, 264, 265, 302, 309, 310, 311], "25": [263, 264, 309, 310, 311], "exactsolut": [263, 264], "obtain": [263, 264, 274, 296], "normal_veloc": [263, 264, 270, 293], "assign": [263, 264, 306], "fall": [263, 264, 313], "accept": [263, 264], "bound": [263, 264], "manufacturedsolut": 264, "exercis": [265, 289, 306, 307, 311], "kpp_test": 265, "mixedlayerdepthsoutput": 265, "idealagetrac": [265, 311], "single_column_forc": [265, 311], "profil": [265, 290, 311], "throughout": [265, 305, 311], "idealag": 265, "enabel": 265, "formal": 266, "organ": [266, 268, 271, 292], "conceptu": [266, 273], "broadli": [266, 267, 273], "realist": [266, 292, 319], "greenland": [266, 292, 319], "2000m": [266, 313], "34": [266, 313], "halfar": 266, "cism": 266, "dome_typ": 266, "put_origin_on_a_cel": 266, "hydrologi": 266, "hydro": [266, 319], "dome_viz": 266, "time_slic": 266, "save_imag": 266, "hide": [266, 293], "hide_fig": 266, "clutter": 266, "smoke_test": [266, 272], "smoketest": [266, 272], "restart_test": 266, "restarttest": 266, "add_dome_task": 266, "variable_resolut": [266, 270, 313], "talk": 266, "reduc": [266, 270], "among": [266, 268, 274, 293], "encompass": 267, "perspect": 267, "four": 267, "major": [267, 270], "broader": 267, "univers": 267, "add_inertial_gravity_wave_task": 267, "add_manufactured_solution_task": 267, "add_single_column_task": 267, "alphabet": [267, 293], "landice_model": [267, 274], "diagram": 268, "green": 268, "blue": [268, 295, 313], "orang": 268, "red": 268, "laid": 268, "fig": 268, "organiz": 268, "concept": [268, 273, 293, 319], "somewher": 270, "multiprocess": [270, 273, 294], "aspir": 270, "emploi": 270, "unwant": 270, "outer": 270, "inner": 270, "dome_varres_grid": 270, "signific": [270, 271, 272], "neglig": 270, "culled_graph": [270, 293], "meshstep": 270, "getint": 270, "mesh_cpus_per_task": 270, "mesh_min_cpus_per_task": 270, "fit": [270, 294], "applic": [270, 273, 274, 312, 317], "launch": [270, 292], "write_netcdf": [270, 293], "convers": [270, 293], "greater": [270, 293], "graphinfofilenam": [270, 293], "culled_mesh": [270, 293], "use_dist": [270, 293, 305], "gradient_width_dist": [270, 293, 305], "gradient_width_frac": [270, 293, 305], "bottom_temperatur": [270, 293, 305], "surface_temperatur": [270, 293, 305, 311], "temperature_differ": [270, 293, 305], "coriolis_paramet": [270, 293, 305, 309, 310, 311], "x_cell": [270, 293], "y_cell": [270, 293], "bottom_depth": [270, 293, 294, 302, 305, 306, 307, 309, 310, 311, 312], "ones_lik": [270, 293], "zeros_lik": [270, 293], "x_min": [270, 293], "min": [270, 293, 305, 311], "x_max": [270, 293], "y_min": [270, 293], "y_max": [270, 293], "y_mid": [270, 293], "x_perturb_min": [270, 293], "x_perturb_max": [270, 293], "perturb_width": [270, 293, 305], "y_offset": [270, 293], "sin": [270, 293, 305, 307, 309, 310], "pi": [270, 293, 302, 305, 306, 307], "temp_vert": [270, 293], "frac": [270, 293, 302, 305, 309], "logical_and": [270, 293], "transpos": [270, 293], "3rd": [270, 293], "crest": [270, 293, 305], "expand_dim": [270, 293], "dim": [270, 293], "axi": [270, 293], "broadcast": [270, 293], "nedg": [270, 293], "xvertex": [270, 293], "attr": [270, 293], "initial_temperatur": [270, 293], "initial_normal_veloc": [270, 293], "superclass": 270, "commandlin": 270, "harm": 270, "likewis": [270, 293], "subsequ": [270, 318], "arisen": 270, "problemat": 270, "add_depend": 270, "usual": [270, 272, 274, 293, 313], "forwardstep": 270, "mesh_path": 270, "mesh_step": 270, "with_ice_shelf_cav": 270, "initial_state_target": 270, "adjusted_init": 270, "forcing_data": 270, "init_mode_forcing_data": 270, "entha_analy_result": 270, "mat": 270, "enthalpy_benchmark": 270, "ourselv": 270, "problem": [270, 274, 290, 293], "firewal": 270, "bedmachineantarctica_v2_and_gebco_2022_0": 270, "05_degree_20220729": 270, "slate": 270, "icepresent_qu60km_polar": 270, "practic": [270, 273, 274], "straightforward": 270, "commonli": [270, 291], "notat": [270, 312, 317], "phc": [270, 302], "That": [270, 273, 291, 293, 313], "word": 270, "ff": 270, "quwisc240": [270, 273, 313], "90c": 270, "91c": 270, "92": [270, 302], "91": 270, "sowisc12to60": [270, 313], "performance_test": 270, "effici": [270, 293], "transfer": 270, "feasibl": 270, "overhead": 270, "philosophi": [271, 273, 293], "context": [271, 293], "namesak": 271, "256": [271, 296, 300], "count": [271, 291], "quicker": 271, "exce": 271, "offer": 271, "benefit": [271, 292], "bug": 271, "coverag": 271, "exhaust": 271, "recent": [271, 303, 314], "merg": 271, "reach": 271, "steadi": [271, 307], "wet": 271, "fundament": 272, "incorpor": 272, "velo_solv": 272, "sia": [272, 274], "fo": 272, "runmodel": 272, "run_step": 272, "0200": 272, "00_00": [272, 287, 293], "recip": 272, "demonstr": [272, 293], "fairli": [272, 273, 274, 293], "_cosine_bel": 272, "_with_viz": 272, "_setup_step": [272, 293], "_resolut": 272, "remove_step": 272, "analysis_depend": 272, "base_mesh_step": 272, "cos_bell_dir": 272, "_init_": 272, "init_step": 272, "_forward_": 272, "forward_step": 272, "with_viz_dir": 272, "_map_": 272, "_viz_": 272, "rare": [272, 274], "480km": 272, "closer": 272, "imp_r": 272, "joinpath": 272, "initial_condit": 273, "dig": [273, 294], "background": 273, "adher": [273, 293], "pep8": [273, 274], "bot": [273, 302], "violat": 273, "consid": 273, "editor": 273, "pycharm": [273, 274, 293], "spyder": 273, "linter": 273, "flake8": [273, 274], "discourag": [273, 291], "reformat": 273, "autopep8": 273, "undesir": 273, "lint": 273, "wildcard": 273, "vim": [273, 293], "plugin": 273, "id": [273, 274], "commit": [273, 274], "why": 273, "sound": 273, "subpackag": 273, "understand": [273, 294], "downstream": 273, "tutori": [273, 274], "clu": 273, "intro": 273, "docstr": [273, 292, 293], "strip": 273, "mpas_ocean": 273, "hidden": 273, "shortcut": [273, 313], "referenc": [273, 293], "mention": 273, "dot": 273, "charact": 273, "unix": [273, 292], "distinct": 273, "mayb": [273, 293], "machine_config": 273, "endswith": 273, "splitext": 273, "exactli": [273, 274, 293, 302], "move": [273, 274, 293, 312, 317], "renam": 273, "visa": 273, "versa": 273, "comfort": [273, 293], "inherit": [273, 293], "orient": [273, 307], "program": [273, 294], "led": 273, "felt": 273, "contribut": 273, "hesit": 273, "predecessor": [273, 291, 292], "clumsi": 273, "harder": 273, "outcom": 273, "augment": 273, "explain": 273, "hope": 273, "dens": 273, "learn": [273, 293], "curv": 273, "worth": [273, 293], "skill": 273, "endeavor": 273, "readabl": 273, "manipul": 273, "get_available_cores_and_nod": 273, "theoret": 273, "dozen": 273, "theori": 273, "biogeochemistri": 273, "ksh": 274, "mac": [274, 292], "csh": 274, "tcsh": 274, "temporarili": 274, "recogn": [274, 294, 313], "permiss": 274, "anyon": 274, "caus": [274, 296, 300, 302], "person": [274, 290], "base_path_to_install_or_update_conda": 274, "with_netlib_lapack": 274, "flavor": [274, 293], "troubl": [274, 293], "recognit": 274, "trilino": 274, "downsid": 274, "unneed": 274, "reinstal": 274, "caution": 274, "load_": 274, "encod": 274, "load_dev_polaris_": [274, 293], "env_nam": 274, "dev_polaris_": [274, 290], "workdir": [274, 313], "unexpect": [274, 291, 293], "occur": [274, 290], "echo": 274, "proceed": 274, "notic": 274, "conda_env": [274, 298, 313], "rememb": 274, "incorrect": 274, "unus": 274, "session": [274, 293], "pip": 274, "substanti": 274, "risk": [274, 293], "unsupport": 274, "env_onli": 274, "mpas_make_target": [274, 313], "scientif": [274, 313], "_albani": 274, "instruct": [274, 293], "es3m": 274, "compli": 274, "memor": 274, "guidelin": 274, "complianc": 274, "checker": 274, "isort": 274, "flynt": 274, "mypi": 274, "77": 274, "e302": 274, "blank": 274, "resolv": 274, "simpler": [274, 293], "new_branch_nam": 274, "disk": [274, 294, 296, 300], "respons": 274, "simplest": 274, "your_new_branch": 274, "restart_filenam": 280, "polaris_branch": 286, "post": 286, "src": 286, "registry_process": 286, "seaice_model": 286, "1m": [287, 316], "disc": [287, 316], "config_initial_ice_area": 287, "config_initial_ice_volum": 287, "config_atmospheric_forcing_typ": 287, "config_forcing_start_tim": 287, "config_forcing_cycle_start": 287, "config_forcing_cycle_dur": 287, "config_forcing_precipitation_unit": 287, "mm_per_sec": 287, "config_forcing_sst_typ": 287, "ncar": 287, "config_update_ocean_flux": 287, "config_include_pond_freshwater_feedback": 287, "standard_phys": 289, "standardphys": 289, "year": [289, 303, 316], "volum": 289, "snow": 289, "exact_restart": 289, "exactrestart": 289, "geo": 290, "cartopi": 290, "14": 290, "np110py27_4": 290, "calledprocesserror": 290, "deploy_tmp": 290, "vpn": 290, "site": 290, "shell": [290, 292], "honor": 290, "wide": 290, "spawn": 290, "usernam": [290, 293, 296, 300], "proxy_en": 290, "all_proxi": 290, "proxyout": 290, "8080": 290, "no_proxi": 290, "localhost": [290, 294, 299, 300, 313], "127": 290, "proxy_dis": 290, "unset": 290, "anytim": 290, "fatal": 290, "mpi_init": 290, "stack": 290, "mpir_init_thread": 290, "159": 290, "mpid_init": 290, "164": 290, "mpidi_ch3_init": 290, "95": 290, "mpid_nem_init": 290, "314": 290, "mpid_nem_tcp_init": 290, "173": 290, "mpid_nem_tcp_get_business_card": 290, "395": 290, "getsockinterfaceaddr": 290, "369": 290, "pn2034311": 290, "errno": 290, "host": [290, 294, 299, 313], "focus": 291, "plu": 291, "autom": 292, "exascal": 292, "earth": 292, "kept": 292, "boundari": [292, 305, 319], "expert": 292, "uncoupl": 292, "quick": [292, 293, 303, 314], "queue": 292, "beginn": [292, 293], "advanc": [292, 293], "mpas_to_yaml": 292, "troubleshoot": 292, "proxi": 292, "lanl": [292, 294, 296], "gethostbynam": 292, "glossari": 293, "stick": 293, "miniconda": 293, "3_chrysalis_intel_openmpi": 293, "strict": 293, "push": 293, "lowercas": 293, "hyphen": 293, "settl": 293, "desktop": 293, "realli": [293, 300], "nice": [293, 300], "supercomput": 293, "yet_another_channel": 293, "testgroup": 293, "vi": 293, "polaris_head": 293, "yetanotherchannel": 293, "instanc": 293, "repres": [293, 302, 306], "highli": 293, "camelcas": 293, "capit": 293, "letter": 293, "cap": 293, "awkward": 293, "encourag": 293, "enclos": 293, "briefli": 293, "baroclinicchannel": 293, "globalconverg": 293, "add_test_group": 293, "interest": 293, "test_group": 293, "add_test_cas": 293, "anyth": 293, "probabl": [293, 299, 307], "suppos": 293, "easili": 293, "tide": 293, "sai": [293, 299], "res_str": 293, "1000": [293, 294, 302, 305, 307, 309, 310], "still": [293, 303, 312, 313, 317], "ti": 293, "loop": 293, "1km": [293, 305, 313], "4km": [293, 305, 313], "coarsest": [293, 294], "especi": 293, "promot": 293, "pattern": 293, "familiar": 293, "seen": 293, "brows": 293, "row": 293, "disadvantag": 293, "foremost": 293, "magic": 293, "effect": [293, 312], "pain": 293, "160": [293, 305], "500": [293, 294, 302, 305], "path_to_mpas_ocean": 293, "path_to_working_dir": 293, "cat": 293, "slurm_jobid": 293, "_run_test": 293, "gpf": 293, "fs1": 293, "cbegeman": 293, "grid_typ": [293, 294, 302, 305, 306, 309, 310, 311, 312], "vert_level": [293, 294, 302, 305, 306, 309, 310, 311, 312], "coord_typ": [293, 302, 305, 306, 309, 310, 311, 312], "partial_cell_typ": [293, 302, 305, 306, 309, 310, 311, 312], "min_pc_fract": [293, 302, 305, 306, 309, 310, 311, 312], "everywher": 293, "depress": [293, 302], "mostli": 293, "logic": [293, 305], "northern": [293, 305], "half": [293, 305], "southern": [293, 305], "halv": [293, 305], "gradient": [293, 305, 309, 310, 311], "500km": [293, 305], "40e3": [293, 305], "35": [293, 305, 306, 307, 311, 312, 313, 317], "2e": [293, 305], "connect": [293, 300], "match": 293, "light": 293, "e3sm_compon": 293, "interact": [293, 296, 299, 300, 313], "interrupt": 293, "pty": 293, "navig": 293, "newli": 293, "bunch": 293, "didn": 293, "mistak": 293, "finger": 293, "cross": 293, "initial_normalveloc": 293, "initial_salin": 293, "obvious": 293, "stress": [293, 311], "landicemodelstep": 293, "huge": 293, "cp": 293, "05": [293, 307], "hmix_del2": 293, "bottom_drag": 293, "cvmix": 293, "0002": 293, "filename_interv": 293, "0100": 293, "input_interv": 293, "initial_onli": 293, "basicmesh": 293, "dayssincestart": 293, "surfacespe": 293, "lowersurfac": 293, "uppersurfac": 293, "ureconstructx": 293, "ureconstructi": 293, "great": 293, "remain": [293, 306, 307, 311], "load_dataset": 293, "final_temperatur": 293, "ab": 293, "proc": 293, "4proc": [293, 305], "8proc": [293, 305], "markdown": 293, "developers_guid": 293, "users_guid": 293, "daunt": 293, "flesh": 293, "bonu": 293, "improv": 293, "introduc": 293, "techniqu": 293, "cannot": 293, "aim": 293, "constrain_resourc": 293, "becam": 293, "mainten": 293, "counter": 293, "thought": 293, "yet_another_channel_test_cas": 293, "yetanotherchanneltestcas": 293, "choic": [293, 306, 307], "spuriou": [293, 305], "dissip": [293, 305], "pop": [293, 305], "mom": [293, 305], "mitgcm": [293, 305], "higher": 293, "heavi": 293, "analogi": 293, "tet": 293, "bear": 293, "late": 293, "_add_step": 293, "startswith": 293, "enumer": 293, "rpe_": 293, "_nu_": 293, "privat": 293, "break": [293, 305], "unusu": 293, "rpe_1_nu_1": [293, 305], "rpe_2_nu_5": [293, 305], "rpe_3_nu_10": 293, "rpe_4_nu_20": 293, "rpe_5_nu_200": 293, "20_00": 293, "0000": 293, "dayssincestartofsim": 293, "relativevort": 293, "pyplot": 293, "plt": 293, "output_": 293, "sections_yet_another_channel_": 293, "rpe_t": 293, "init_filenam": 293, "initial_state_file_nam": 293, "ds_init": 293, "_plot": 293, "dirti": 293, "adopt": 293, "lesson": 293, "tricki": 293, "commun": 293, "nuanc": 293, "fake": 293, "wasn": 293, "fold": 293, "proper": 293, "third": 293, "previous": 293, "extens": 294, "multinod": [294, 313], "explanatori": 294, "my_machin": 294, "extend": 294, "gitconfig": 294, "enter": 294, "author": 294, "email": 294, "pull_request": 294, "28": 294, "address": 294, "metadata": 294, "customize_config_pars": 294, "server_base_url": 294, "inej": 294, "check_siz": 294, "ssl": 294, "certif": 294, "core_path": 294, "partition_execut": 294, "dask": 294, "netcdf4": 294, "netcdf4_class": 294, "netcdf3_64bit": 294, "netcdf3_class": 294, "engin": 294, "scipi": 294, "mesh_databas": 294, "ocean_database_root": 294, "landice_database_root": 294, "mesh_cor": 294, "mesh_min_cor": 294, "mesh_max_memori": 294, "mesh_max_disk": 294, "init_cor": 294, "init_min_cor": 294, "init_max_memori": 294, "init_max_disk": 294, "init_thread": 294, "forward_cor": 294, "forward_min_cor": 294, "forward_thread": 294, "forward_max_memori": 294, "forward_max_disk": 294, "add_metadata": 294, "ec": 294, "wc": 294, "mesh_descript": 294, "autodetect": 294, "bathy_descript": 294, "gebco": 294, "2022": 294, "bedmachin": 294, "antarctica": 294, "init_descript": 294, "e3sm_vers": 294, "increment": 294, "mesh_revis": 294, "finest": 294, "min_r": 294, "max_r": 294, "max_depth": 294, "creation_d": 294, "peopl": 294, "contact": 294, "temperaturemax": 294, "temperature_max": 294, "33": [294, 313], "enable_ocean_initial_condit": 294, "enable_ocean_graph_partit": 294, "enable_seaice_initial_condit": 294, "scrip": 294, "enable_scrip": 294, "transect": 294, "onlin": 294, "member": 294, "offlin": 294, "enable_diagnostics_fil": 294, "coarser": [294, 306, 307], "finer": 294, "comparisonlatresolut": 294, "comparisonlonresolut": 294, "antarct": 294, "polar": [294, 295, 297, 302], "stereograph": 294, "comparisonantarcticstereowidth": 294, "6000": [294, 302], "comparisonantarcticstereoresolut": 294, "arctic": [294, 316], "comparisonarcticstereowidth": 294, "comparisonarcticstereoresolut": 294, "tanh_dz": 294, "16": [294, 311, 313], "3000": [294, 307], "min_layer_thick": [294, 302], "max_layer_thick": [294, 302], "retain": 294, "ecosystem": 295, "gain": 295, "confluenc": 295, "public_html": [295, 297, 299], "soft": [295, 297, 299, 313], "mpi_intel": [295, 297, 298, 299], "36": [295, 299, 311, 313], "condo": [295, 313], "acm": [295, 313], "medium": 295, "acme_high": 295, "load_latest_polaris_intel_impi": [295, 298], "load_latest_polaris_gnu_openmpi": [295, 297, 313], "dst": 296, "calendar": 296, "network": 296, "introduct": 296, "platform": 296, "batch": 296, "wtrw": 296, "ch": 296, "fe": 296, "lustr": 296, "scratch4": 296, "scratch5": 296, "sacctmgr": 296, "assoc": 296, "cluster": 296, "45": 296, "sshare": 296, "sreport": 296, "accountutilizationbyus": 296, "2019": 296, "prioriti": 296, "yellow": 296, "chkhome": 296, "petabyt": 296, "df": 296, "bp": 296, "archiv": [296, 300], "hpss": [296, 300], "front": 296, "tn": 296, "storag": 296, "project_nam": 296, "salloc": [296, 299, 300], "account_nam": 296, "gpu": [296, 300], "hyperthread": [296, 300], "hang": [296, 300], "threads_per_cor": [296, 300], "shared_clim": [296, 313], "load_latest_polaris_gnu_mpich": [296, 300], "load_latest_polaris_intel_openmpi": 297, "compyf": 298, "app": [298, 313], "pmi2": 298, "40": [298, 307], "submit": 299, "workload": 299, "squeue": 299, "my_usernam": [299, 300], "scancel": 299, "jobid": 299, "cancel": 299, "emtpi": 299, "three": [299, 307, 319], "mpi_mpich": [299, 313], "mpi_openmpi": [299, 313], "nompi": [299, 313], "p1": 300, "nersc": 300, "iri": 300, "filesystem": 300, "myquota": 300, "prjquota": 300, "projectid": 300, "m1795": 300, "hsi": 300, "htar": 300, "zstash": 300, "cf": [300, 313], "cdir": [300, 313], "premium": 300, "cray_compil": 300, "8844": 300, "monik": 300, "browser": 300, "grab": 300, "logon": 300, "kernel": 300, "myenv": 300, "ipykernel": 300, "kernelspec": 300, "u1": 300, "interpret": 300, "argv": 300, "ipykernel_launch": 300, "connection_fil": 300, "display_nam": 300, "languag": 300, "2500": 302, "deepest": 302, "stewart": 302, "2017": 302, "delta": [302, 305, 307, 311], "z_2": 302, "z_1": 302, "mathrm": 302, "tanh": 302, "rightarrow": 302, "z_k": 302, "z_0": 302, "z_": [302, 311], "k": 302, "finder": 302, "n_z": 302, "h_": 302, "scienc": 302, "hydrograph": 302, "climatologi": 302, "250": 302, "5500": 302, "renorm": 302, "51": 302, "221": 302, "ziso": [302, 319], "63": 302, "floor": 302, "flat": [302, 305, 307], "collaps": 302, "adcroft": 302, "campin": 302, "2004": 302, "absenc": 302, "squash": 302, "watercolumn": 302, "press": 302, "batymetri": 302, "stair": 302, "month": 303, "websit": [303, 314], "release_6": 303, "ilicak": 305, "2012": 305, "variat": [305, 307], "distinguish": 305, "zonal": [305, 307, 311], "meridion": [305, 311], "psu": [305, 311], "cooler": 305, "north": 305, "sinusoid": 305, "perturb": [305, 306, 310], "t_0": 305, "t_b": 305, "t_": 305, "z_b": 305, "y_": 305, "l_x": 305, "warmer": 305, "ge": [305, 306], "gradient_width_fract": 305, "l_y": 305, "le": [305, 311], "flow": [305, 306, 307], "stationari": [305, 311], "literatur": 305, "mk": 305, "celsiu": 305, "prognost": 305, "williamson": [306, 307], "1992": [306, 307], "sec": 306, "3a": 306, "skamarock": 306, "gassmann": 306, "bodi": 306, "rotat": [306, 309, 310], "transport": 306, "psi": 306, "proportion": [306, 307], "slow": 306, "icosohydr": 306, "nearest": 306, "insensit": [306, 307, 311], "300": [306, 312], "passiv": 306, "psi_0": 306, "co": [306, 307, 309, 310], "debug_tracers_1": 306, "equatori": 306, "u_0": [306, 307], "tau": 306, "transit": 306, "equat": [306, 307, 309, 310, 311], "vel_pd": 306, "tendenc": [306, 310], "rung": [306, 307], "kutta": [306, 307], "4th": [306, 307], "multipli": [306, 307], "globe": 306, "rad": 306, "lat_cent": 306, "lon_cent": 306, "14159265": 306, "2123666": 306, "6667": 306, "hill": 306, "psi0": 306, "576": 306, "circul": 306, "roughli": 306, "studi": [306, 307], "nonlinear": [307, 309, 310], "chosen": [307, 311], "theta": 307, "lambda": 307, "h_0": 307, "textrm": 307, "sensit": 307, "wind": [307, 311], "l_1": 307, "l_2": 307, "l_": 307, "examin": [307, 311], "vel_period": 307, "gh_0": 307, "94e4": 307, "william": 307, "paper": [307, 313], "arbitrari": 307, "evolut": 307, "unexpectedli": 307, "necessit": 307, "geostropnic_viz": 307, "geostrophic_viz": 307, "geostrophic_viz_h": 307, "deep": 307, "geostrophic_viz_vel": 307, "geostrophic_viz_diff_h": 307, "geostrophic_viz_diff_vel": 307, "propag": [309, 310], "doubli": [309, 310], "assess": [309, 310], "accuraci": [309, 310], "discret": [309, 310], "bishnu": [309, 310], "friction": [309, 310], "neglect": [309, 310], "analyt": [309, 319], "k_x": [309, 310], "k_y": [309, 310], "availi": [309, 310], "10000": [309, 310], "coriloi": 309, "1e": 309, "amplitud": [309, 310], "ssh_amplitud": [309, 310], "wavelength": [309, 310], "n_wavelengths_x": [309, 310], "n_wavelengths_i": [309, 310], "embed": 310, "eta_0": 310, "span": 311, "arbitrarili": 311, "virtu": 311, "400": 311, "phi": 311, "phi_0": 311, "dz": 311, "ml": 311, "mld": 311, "surface_x": 311, "x_gradient_mixed_lay": 311, "mixed_layer_depth_x": 311, "x_difference_across_mixed_lay": 311, "x_gradient_interior": 311, "spatial": 311, "4x4": 311, "960": 311, "degc": 311, "temperature_gradient_mixed_lay": 311, "temperature_difference_across_mixed_lay": 311, "temperature_gradient_interior": 311, "mixed_layer_depth_temperatur": 311, "surface_salin": 311, "salinity_gradient_mixed_lay": 311, "salinity_difference_across_mixed_lay": 311, "salinity_gradient_interior": 311, "mixed_layer_depth_salin": 311, "scheme": 311, "dictat": 311, "kpp": 311, "restor": 311, "piston": 311, "toward": 311, "temperature_surface_restoring_valu": 311, "temperature_piston_veloc": 311, "salinity_surface_restoring_valu": 311, "salinity_piston_veloc": 311, "temperature_interior_restoring_r": 311, "salinity_interior_restoring_r": 311, "net": 311, "latent": 311, "heat": 311, "bulk": 311, "latent_heat_flux": 311, "sensibl": 311, "sensible_heat_flux": 311, "solar": 311, "shortwav": 311, "shortwave_heat_flux": 311, "evapor": 311, "evaporation_flux": 311, "5e": 311, "rain": 311, "rain_flux": 311, "wind_stress_zon": 311, "wind_stress_meridion": 311, "welcom": [312, 317], "icosohedr": [312, 317], "pertain": [312, 317], "inher": 312, "warrant": 312, "investig": 312, "load_latest_polari": 313, "minu": 313, "create_polaris_load_script": 313, "load_polaris_1": 313, "0_mpich": 313, "exclud": 313, "wiki": 313, "circular_shelf": 313, "sia_smoke_test": 313, "sia_decomposition_test": 313, "sia_restart_test": 313, "fo_smoke_test": 313, "fo_decomposition_test": 313, "fo_restart_test": 313, "37": 313, "17": 313, "210131_test_new_branch": 313, "my_config": 313, "smaller": 313, "previous_workdir": 313, "recompil": 313, "safer": 313, "preserv": 313, "test_subdir": 313, "whatev": 313, "clock": 313, "j": 313, "exclus": 313, "job_nam": 313, "fo_integr": 313, "sia_integr": 313, "cosine_bell_cached_init": [313, 318], "ec30to60": 313, "ecwisc30to60": 313, "qu240_for_e3sm": 313, "quwisc240_for_e3sm": 313, "wc14": 313, "suitenam": 313, "seaice_standalone_framework": 314, "71": 316, "35n": 316, "156": 316, "5w": 316, "atmospher": 316, "timeseri": 316, "pair": 316, "prohibit": 318, "speed": 318, "radial": 319}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 3, 0, "-", "imp_res"], [61, 2, 1, "", "symlink"]], "polaris.job": [[62, 2, 1, "", "get_slurm_options"], [63, 2, 1, "", "write_job_script"]], "polaris.list": [[64, 2, 1, "", "list_cases"], [65, 2, 1, "", "list_machines"], [66, 2, 1, "", "list_suites"]], "polaris.logging": [[67, 2, 1, "", "log_method_call"]], "polaris.mesh": [[68, 0, 1, "", "IcosahedralMeshStep"], [75, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [70, 1, 1, "", "get_cell_width"], [71, 1, 1, "", "get_subdivisions"], [72, 1, 1, "", "make_jigsaw_mesh"], [73, 1, 1, "", "run"], [74, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, 1, 1, "", "__init__"], [76, 1, 1, "", "build_cell_width_lat_lon"], [77, 1, 1, "", "make_jigsaw_mesh"], [78, 1, 1, "", "run"], [79, 1, 1, "", "setup"]], "polaris.mesh.planar": [[80, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[81, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, 1, 1, "", "__init__"], [82, 1, 1, "", "run"], [83, 1, 1, "", "save_and_plot_cell_width"], [84, 1, 1, "", "setup"]], "polaris.model_step": [[85, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[86, 2, 1, "", "area_for_field"], [87, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[88, 2, 1, "", "ingest"], [89, 2, 1, "", "parse_replacements"], [90, 2, 1, "", "replace"], [91, 2, 1, "", "write"]], "polaris.ocean": [[140, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[140, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[141, 0, 1, "", "ConvergenceAnalysis"], [149, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "compute_error"], [143, 1, 1, "", "convergence_parameters"], [144, 1, 1, "", "exact_solution"], [145, 1, 1, "", "get_output_field"], [146, 1, 1, "", "plot_convergence"], [147, 1, 1, "", "run"], [148, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "compute_cell_count"], [151, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[152, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "compute_cell_count"]], "polaris.ocean.mesh.spherical": [[154, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[155, 0, 1, "", "OceanModelStep"], [160, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "compute_cell_count"], [157, 1, 1, "", "constrain_resources"], [158, 1, 1, "", "map_yaml_to_namelist"], [159, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[161, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[162, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[163, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[163, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[164, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[164, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[165, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[168, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"], [170, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[171, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[171, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[172, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[174, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[176, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"], [178, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[179, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[179, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[180, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[182, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[184, 0, 1, "", "CosineBell"], [186, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[187, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[189, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "compute_cell_count"], [191, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[192, 0, 1, "", "Init"], [194, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[195, 0, 1, "", "Viz"], [197, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[199, 0, 1, "", "Geostrophic"], [201, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[202, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "exact_solution"], [204, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[205, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[205, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[206, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[208, 0, 1, "", "Viz"], [210, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[208, 1, 1, "", "__init__"], [209, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz.VizMap": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[212, 0, 1, "", "InertialGravityWave"], [213, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[212, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[214, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[216, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[216, 1, 1, "", "__init__"], [217, 1, 1, "", "normal_velocity"], [218, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[219, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[221, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[221, 1, 1, "", "__init__"], [222, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[223, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[223, 1, 1, "", "__init__"], [224, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[225, 0, 1, "", "ManufacturedSolution"], [226, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[225, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[227, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[227, 1, 1, "", "__init__"], [228, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[229, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[229, 1, 1, "", "__init__"], [230, 1, 1, "", "normal_velocity"], [231, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[232, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[234, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[234, 1, 1, "", "__init__"], [235, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[236, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[238, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[239, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[239, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[240, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[240, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[241, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[241, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[242, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[244, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[244, 1, 1, "", "__init__"], [245, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[246, 2, 1, "", "generate_1d_grid"], [247, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[248, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[249, 2, 1, "", "alter_bottom_depth"], [250, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[251, 2, 1, "", "compute_min_max_level_cell"], [252, 2, 1, "", "compute_z_level_layer_thickness"], [253, 2, 1, "", "compute_z_level_resting_thickness"], [254, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[255, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[92, 2, 1, "", "get_available_parallel_resources"], [93, 2, 1, "", "get_parallel_command"], [94, 2, 1, "", "run_command"], [95, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[96, 2, 1, "", "write"]], "polaris.remap": [[97, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "dst_from_lon_lat"], [99, 1, 1, "", "dst_from_mpas"], [100, 1, 1, "", "dst_from_points"], [101, 1, 1, "", "dst_from_proj"], [102, 1, 1, "", "dst_global_lon_lat"], [103, 1, 1, "", "get_remapper"], [104, 1, 1, "", "runtime_setup"], [105, 1, 1, "", "src_from_lon_lat"], [106, 1, 1, "", "src_from_mpas"], [107, 1, 1, "", "src_from_proj"]], "polaris.run": [[108, 2, 1, "", "complete_step_run"], [109, 2, 1, "", "load_dependencies"], [112, 2, 1, "", "setup_config"], [113, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[110, 2, 1, "", "run_single_step"], [111, 2, 1, "", "run_tasks"]], "polaris.seaice": [[277, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[277, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[278, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[279, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[279, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[280, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[280, 1, 1, "", "__init__"], [281, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[282, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[282, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[283, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[283, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[284, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[284, 1, 1, "", "__init__"], [285, 1, 1, "", "run"]], "polaris.setup": [[114, 2, 1, "", "setup_task"], [115, 2, 1, "", "setup_tasks"]], "polaris.streams": [[116, 2, 1, "", "read"], [117, 2, 1, "", "update_defaults"], [118, 2, 1, "", "update_tree"], [119, 2, 1, "", "write"]], "polaris.suite": [[120, 2, 1, "", "setup_suite"]], "polaris.validate": [[121, 2, 1, "", "compare_variables"]], "polaris.viz": [[122, 2, 1, "", "plot_global_field"], [123, 2, 1, "", "plot_horiz_field"], [124, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[125, 0, 1, "", "PolarisYaml"], [129, 2, 1, "", "main_mpas_to_yaml"], [130, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [131, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "read"], [127, 1, 1, "", "update"], [128, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 293], "share": [1, 6, 9, 273, 293], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 138, 270, 293, 305, 306, 307, 309, 310, 311, 312, 317], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 73, 78, 82, 108, 109, 110, 111, 112, 113, 139, 147, 169, 177, 181, 183, 193, 196, 198, 207, 209, 211, 222, 224, 235, 237, 243, 245, 270, 274, 281, 285, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317], "onc": 1, "befor": 1, "depend": [1, 6, 270], "output": [1, 270, 293], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 262, 266, 269, 272, 273, 275, 278, 279, 280, 281, 282, 283, 284, 285, 288, 293, 308, 312, 313, 315, 317, 319], "work": 1, "directori": [1, 268], "structur": [1, 268], "i": [1, 313], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 274, 292, 294, 313], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 139, 270, 274, 299], "other": [1, 136, 270, 293, 299, 313], "implement": [1, 2], "set": [1, 139, 274, 313], "up": [1, 274, 313], "test": [1, 2, 6, 138, 139, 293, 294, 316], "And": 1, "valid": [1, 2, 3, 18, 121, 180, 181, 259, 280, 281, 293, 313], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 139, 274, 293, 295, 296, 297, 298, 299, 300, 305, 306, 307, 309, 310, 311, 312, 316, 317], "same": 2, "api": 3, "refer": [3, 138, 139], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 139, 256, 267, 273, 274, 286, 303, 313, 314], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 270, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 313], "framework": [3, 10, 138, 139, 259, 260, 261, 263, 264, 265, 273, 276, 289, 301], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 64, 65, 66], "setup": [3, 5, 8, 36, 47, 58, 74, 79, 84, 114, 115, 148, 159, 170, 178, 270], "suit": [3, 5, 8, 120, 271, 304, 313, 318], "cach": [3, 5, 8, 55, 270], "mpas_to_yaml": [3, 5], "base": [3, 138], "class": [3, 273], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 136, 139, 267, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 309, 310, 311, 312, 316, 317], "io": [3, 11, 59, 60, 61], "job": [3, 62, 63, 299, 313], "log": [3, 12, 67], "mesh": [3, 13, 14, 19, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 138, 139, 154, 293, 305, 306, 307, 309, 310, 311, 312, 316, 317], "model_step": [3, 85], "mpa": [3, 6, 15, 86, 87, 139, 258, 287], "namelist": [3, 14, 88, 89, 90, 91, 139], "parallel": [3, 92, 93, 94, 95], "proven": [3, 16, 96], "remap": [3, 17, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "stream": [3, 14, 116, 117, 118, 119, 139, 293], "viz": [3, 122, 123, 124, 182, 183, 195, 196, 197, 198, 208, 209, 210, 211, 223, 224, 236, 237, 244, 245, 260, 261, 263, 264, 265, 284, 285, 289, 293], "yaml": [3, 14, 125, 126, 127, 128, 129, 130, 131, 139], "build": [4, 136, 274, 313], "serial": [5, 8, 110, 111], "deploi": 6, "new": [6, 136, 293], "spack": [6, 136, 274, 313], "environ": [6, 136, 274, 290, 313], "where": 6, "we": 6, "updat": [6, 14, 127, 274], "mach": 6, "conda": [6, 274, 290, 299, 313], "identifi": 6, "e3sm": [6, 14, 139, 274, 313], "machin": [6, 136, 274, 299, 313], "describ": [6, 136], "modul": [6, 8, 273, 274], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 274, 293], "remot": [6, 300], "branch": 6, "petsc": [6, 274], "netlib": [6, 274], "lapack": [6, 274], "albani": [6, 274], "troubleshoot": [6, 274, 290], "ocean": [6, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 303], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 136, 139, 267, 270, 293, 294], "comment": 9, "symlink": [11, 61, 270], "download": [11, 59, 270], "spheric": [13, 19, 81, 82, 83, 84, 138, 139, 152, 153, 154], "planar": [13, 19, 80], "uniform": [13, 139, 302], "gener": 13, "model": [14, 138, 139, 155, 156, 157, 158, 159, 160, 257, 287, 293, 313], "an": [14, 139, 293], "ad": [14, 136, 270, 293], "dynam": [14, 293], "input": [14, 270], "partit": [14, 32], "pio": 14, "make": [14, 293], "graph": 14, "area": 15, "time": [15, 139, 293, 305, 306, 307, 309, 310, 311, 312, 317], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 293, 316], "common": 19, "matplotlib": 19, "style": [19, 273, 274], "horizont": [19, 293], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 293], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 151, 167, 173, 191], "map_yaml_to_namelist": [31, 158], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 104, 270], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 157, 270], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 175, 185, 200, 272, 290], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "imp_r": 60, "get_slurm_opt": 62, "write_job_script": 63, "list_cas": 64, "list_machin": 65, "list_suit": 66, "log_method_cal": 67, "icosahedralmeshstep": [68, 69, 70, 71, 72, 73, 74], "build_subdivisions_cell_width_lat_lon": 69, "get_cell_width": 70, "get_subdivis": 71, "make_jigsaw_mesh": [72, 77], "quasiuniformsphericalmeshstep": [75, 76, 77, 78, 79], "build_cell_width_lat_lon": 76, "compute_planar_hex_nx_ni": 80, "sphericalbasestep": [81, 82, 83, 84], "save_and_plot_cell_width": 83, "make_graph_fil": 85, "area_for_field": 86, "time_index_from_xtim": 87, "ingest": 88, "parse_replac": 89, "replac": 90, "write": [91, 96, 119, 128], "get_available_parallel_resourc": 92, "get_parallel_command": 93, "run_command": 94, "set_cores_per_nod": 95, "mappingfilestep": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "dst_from_lon_lat": 98, "dst_from_mpa": 99, "dst_from_point": 100, "dst_from_proj": 101, "dst_global_lon_lat": 102, "get_remapp": 103, "src_from_lon_lat": 105, "src_from_mpa": 106, "src_from_proj": 107, "complete_step_run": 108, "load_depend": 109, "run_single_step": 110, "run_task": 111, "setup_config": 112, "unpickle_suit": 113, "setup_task": [114, 115], "read": [116, 126], "update_default": 117, "update_tre": 118, "setup_suit": 120, "compare_vari": 121, "plot_global_field": 122, "plot_horiz_field": 123, "use_mplstyl": 124, "polarisyaml": [125, 126, 127, 128], "main_mpas_to_yaml": 129, "mpas_namelist_and_streams_to_yaml": 130, "yaml_to_mpas_stream": 131, "anvil": [132, 295], "intel": [132, 134, 135, 295, 297, 298], "gnu": [132, 133, 134, 135, 137, 295, 296, 297, 300], "chicoma": [133, 296], "cpu": [133, 137, 296, 300], "chrysali": [134, 297], "compymcnodefac": [135, 298], "support": [136, 257, 274, 287, 299, 313], "perlmutt": [137, 300], "pm": 137, "baroclinic_channel": [138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 259], "inertial_gravity_wav": [138, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 263], "cosine_bel": [138, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 260, 304], "geostroph": [138, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 261, 307], "manufactured_solut": [138, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 264], "single_column": [138, 238, 239, 240, 241, 242, 243, 244, 245, 265, 275, 278, 279, 280, 281, 282, 283, 284, 285, 289], "converg": [138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 310], "potenti": [138, 139], "energi": [138, 139], "rpe": [138, 139, 161, 174, 175, 176, 177, 178, 259, 305], "vertic": [138, 139, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 293, 302, 305, 306, 307, 309, 310, 311, 312], "coordin": [138, 139, 293, 302], "v": 139, "map": 139, "omega": 139, "mpi": [139, 299], "resourc": 139, "interv": 139, "quasi": 139, "icosahedr": 139, "rest": 139, "convergenceanalysi": [141, 142, 143, 144, 145, 146, 147, 148], "compute_error": 142, "convergence_paramet": 143, "exact_solut": [144, 188, 203, 215, 216, 217, 218, 228, 229, 230, 231, 263, 264], "get_output_field": [145, 204], "plot_converg": 146, "convergenceforward": [149, 150, 151], "compute_cell_count": [150, 153, 156, 166, 190, 220, 233], "sphericalconvergenceforward": [152, 153], "add_spherical_base_mesh_step": 154, "oceanmodelstep": [155, 156, 157, 158, 159], "get_time_interval_str": 160, "compute_rp": 161, "add_baroclinic_channel_task": 162, "decomp": [163, 259, 305], "default": [164, 259, 293, 305], "forward": [165, 166, 167, 189, 190, 191, 205, 219, 220, 232, 233, 240, 259, 260, 261, 263, 264, 265, 282, 289, 293], "init": [168, 169, 170, 192, 193, 194, 206, 207, 221, 222, 234, 235, 242, 243, 259, 260, 261, 263, 264, 265, 293], "restart": [171, 172, 173, 259, 305, 316], "restart_step": [172, 173], "restartstep": [172, 173], "analysi": [176, 177, 178, 187, 188, 202, 203, 204, 214, 215, 227, 228, 260, 261, 263, 264, 293, 307], "thread": [179, 259, 305], "cosinebel": [184, 185], "add_cosine_bell_task": 186, "vizmap": [197, 198, 210, 211], "add_geostrophic_task": 201, "inertialgravitywav": 212, "add_inertial_gravity_wave_task": 213, "exactsolut": [216, 217, 218, 229, 230, 231], "normal_veloc": [217, 230], "ssh": [218, 231], "manufacturedsolut": 225, "add_manufactured_solution_task": 226, "add_single_column_task": [238, 278], "cvmix": [239, 265, 311], "ideal_ag": 241, "idealag": 241, "grid_1d": [246, 247], "generate_1d_grid": 246, "write_1d_grid": 247, "init_vertical_coord": 248, "partial_cel": [249, 250], "alter_bottom_depth": 249, "alter_ssh": 250, "zlevel": [251, 252, 253, 254], "compute_min_max_level_cel": 251, "compute_z_level_layer_thick": 252, "compute_z_level_resting_thick": 253, "init_z_level_vertical_coord": 254, "zstar": 255, "init_z_star_vertical_coord": 255, "initi": [258, 287, 293, 305, 306, 307, 309, 310, 311, 312, 316, 317], "condit": [258, 287, 293, 305, 306, 307, 309, 310, 311, 312, 316, 317], "boundari": 258, "forc": [258, 287, 305, 306, 307, 309, 310, 311, 312, 316, 317], "base_mesh": [260, 261], "ideal": [265, 311], "ag": [265, 311], "categori": [266, 312, 317], "constructor": [267, 270, 272], "organ": 269, "attribut": [270, 272], "copi": 270, "pull": 271, "request": 271, "pr": 271, "nightli": 271, "overview": 273, "code": [273, 274, 293], "packag": 273, "within": 273, "group": [273, 293], "relat": 273, "quick": [274, 313], "start": [274, 293, 313], "develop": [274, 292, 293], "unix": 274, "shell": 274, "repositori": 274, "beginn": 274, "compil": 274, "system": 274, "unknown": 274, "what": 274, "script": [274, 313], "doe": 274, "flag": 274, "activ": 274, "switch": 274, "between": [274, 293], "differ": 274, "onli": 274, "repo": 274, "worktre": 274, "advanc": 274, "seaic": [275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287], "exact_restart": [279, 280, 281], "exactrestart": 279, "standard_phys": [283, 284, 285], "standardphys": 283, "standard_physics_test": 289, "exact_restart_test": 289, "solver": 290, "error": 290, "when": 290, "proxi": 290, "lanl": 290, "mac": 290, "gethostbynam": 290, "fail": 290, "glossari": [291, 292], "": 292, "guid": 292, "tutori": [292, 293], "compass": 292, "get": 293, "vari": 293, "resolut": 293, "paramet": 293, "thing": 293, "out": 293, "defin": 293, "more": 293, "again": 293, "one": 293, "second": 293, "enhanc": 293, "comput": 293, "cell": 293, "count": 293, "superclass": 293, "studi": 293, "how": 293, "pass": 293, "data": [293, 300], "A": 294, "case": 294, "slurm": 299, "queue": 299, "mpich": 299, "openmpi": 299, "No": 299, "forg": 299, "jupyt": 300, "notebook": 300, "1d": 302, "grid": [302, 305, 306, 307, 309, 310, 311, 312], "type": 302, "tanh_dz": 302, "60layerphc": 302, "100layere3smv1": 302, "3d": 302, "z": 302, "star": 302, "level": 302, "cosine_bell_cached_init": 304, "baroclin": 305, "channel": 305, "descript": [305, 306, 307, 309, 310, 311, 312, 316, 317], "durat": [305, 306, 307, 309, 310, 311, 312, 316, 317], "core": [305, 306, 307, 309, 310, 311, 312, 316, 317], "cosin": 306, "bell": 306, "inerti": 309, "graviti": 309, "wave": 309, "manufactur": 310, "solut": 310, "singl": [311, 316], "column": [311, 316], "task_nam": [312, 317], "yet": 313, "load": 313, "standalon": 313, "sea": 314, "ic": 314, "standard": 316, "physic": 316, "timestep": 316, "exact": 316}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [267, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [305, "mesh"], [305, "id2"], [305, "id9"], [305, "id17"], [305, "id25"], [305, "id32"], [306, "mesh"], [307, "mesh"], [309, "mesh"], [310, "mesh"], [311, "mesh"], [311, "id3"], [311, "id8"], [312, "mesh"], [316, "mesh"], [316, "id1"], [316, "id6"], [317, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [259, "validate"]], "viz": [[3, "viz"], [260, "viz"], [261, "viz"], [263, "viz"], [264, "viz"], [265, "viz"], [289, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [293, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [301, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [139, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [139, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[19, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.imp_res": [[60, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[61, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[62, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[63, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[64, "polaris-list-list-cases"]], "polaris.list.list_machines": [[65, "polaris-list-list-machines"]], "polaris.list.list_suites": [[66, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[67, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[68, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[69, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[70, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[71, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[72, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[73, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[74, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[79, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[80, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[82, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[83, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[84, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[85, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[86, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[87, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[88, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[89, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[90, "polaris-namelist-replace"]], "polaris.namelist.write": [[91, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[92, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[93, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[94, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[95, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[96, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[97, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[98, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[99, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[100, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[101, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[102, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[103, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[104, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[105, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[106, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[107, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[108, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[109, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[110, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[111, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[112, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[113, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[114, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[115, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[116, "polaris-streams-read"]], "polaris.streams.update_defaults": [[117, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[118, "polaris-streams-update-tree"]], "polaris.streams.write": [[119, "polaris-streams-write"]], "polaris.suite.setup_suite": [[120, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[121, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_field": [[122, "polaris-viz-plot-global-field"]], "polaris.viz.plot_horiz_field": [[123, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[124, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[125, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[126, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[127, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[128, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[129, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[130, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[131, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[132, "anvil"], [295, "anvil"]], "intel": [[132, "intel"], [134, "intel"], [135, "intel"]], "gnu": [[132, "gnu"], [134, "gnu"], [135, "gnu"]], "Chicoma": [[133, "chicoma"], [296, "chicoma"]], "chicoma-cpu, gnu": [[133, "chicoma-cpu-gnu"]], "Chrysalis": [[134, "chrysalis"], [297, "chrysalis"]], "CompyMcNodeFace": [[135, "compymcnodeface"], [298, "compymcnodeface"]], "Machines": [[136, "machines"], [299, "machines"]], "Supported Machines": [[136, "supported-machines"], [299, "supported-machines"]], "Other Machines": [[136, "other-machines"], [299, "other-machines"]], "Adding a New Supported Machine": [[136, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[136, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[136, "describing-a-spack-environment"]], "Building the Spack Environment": [[136, "building-the-spack-environment"]], "Perlmutter": [[137, "perlmutter"], [300, "perlmutter"]], "pm-cpu, gnu": [[137, "pm-cpu-gnu"]], "ocean": [[138, "ocean"]], "Tasks": [[138, "tasks"], [262, "tasks"], [272, "tasks"], [275, "tasks"], [288, "tasks"], [308, "tasks"], [315, "tasks"], [319, "tasks"]], "baroclinic_channel": [[138, "baroclinic-channel"], [259, "baroclinic-channel"]], "inertial_gravity_wave": [[138, "inertial-gravity-wave"], [263, "inertial-gravity-wave"]], "cosine_bell": [[138, "cosine-bell"], [260, "cosine-bell"]], "geostrophic": [[138, "geostrophic"], [261, "geostrophic"], [307, "geostrophic"]], "manufactured_solution": [[138, "manufactured-solution"], [264, "manufactured-solution"]], "single_column": [[138, "single-column"], [265, "single-column"], [275, "single-column"], [289, "single-column"]], "Ocean Framework": [[138, "ocean-framework"]], "Convergence Tests": [[138, "convergence-tests"], [139, "convergence-tests"]], "Spherical Convergence Tests": [[138, "spherical-convergence-tests"]], "Ocean Model": [[138, "ocean-model"]], "Spherical Base Mesh Step": [[138, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[138, "reference-potential-energy-rpe"]], "Vertical coordinates": [[138, "vertical-coordinates"]], "Ocean framework": [[139, "ocean-framework"]], "YAML files vs. namelists and streams": [[139, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[139, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[139, "setting-mpi-resources"]], "Setting time intervals in model config options": [[139, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[139, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[139, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[139, "vertical-coordinate"], [302, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[139, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[140, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[141, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[142, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[143, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[144, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[145, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[146, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[147, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[148, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[149, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[150, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[151, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[152, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[153, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[154, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[155, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[156, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[157, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[158, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[159, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[160, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[161, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[162, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[163, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[164, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[165, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[166, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[167, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[168, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[169, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[170, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[171, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[172, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[173, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[174, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[175, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[176, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[177, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[178, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[179, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[180, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[181, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[182, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[183, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[184, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[185, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[186, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[187, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[188, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[189, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[190, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[191, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[192, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[193, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[194, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[195, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[196, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[197, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[198, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[199, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[200, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[201, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[202, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[203, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[204, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[205, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[206, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[207, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[208, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[209, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.viz.VizMap": [[210, "polaris-ocean-tasks-geostrophic-viz-vizmap"]], "polaris.ocean.tasks.geostrophic.viz.VizMap.run": [[211, "polaris-ocean-tasks-geostrophic-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[212, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[213, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[214, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[215, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[216, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[217, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[218, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[219, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[220, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[221, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[222, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[223, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[224, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[225, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[226, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[227, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[228, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[229, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[230, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[231, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[232, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[233, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[234, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[235, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[236, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[237, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[238, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[239, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[240, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[241, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[242, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[243, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[244, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[245, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[246, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[247, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[248, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[249, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[250, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[251, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[252, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[253, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[254, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[255, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[256, "ocean-component"], [303, "ocean-component"]], "Models": [[257, "models"]], "Supported Models": [[257, "supported-models"]], "MPAS-Ocean": [[258, "mpas-ocean"]], "Initial conditions": [[258, "initial-conditions"], [287, "initial-conditions"]], "Boundary conditions": [[258, "boundary-conditions"]], "Forcing": [[258, "forcing"], [287, "forcing"]], "framework": [[259, "framework"], [260, "framework"], [261, "framework"], [263, "framework"], [264, "framework"], [265, "framework"], [289, "framework"]], "init": [[259, "init"], [260, "init"], [261, "init"], [263, "init"], [264, "init"], [265, "init"]], "forward": [[259, "forward"], [260, "forward"], [261, "forward"], [263, "forward"], [264, "forward"], [265, "forward"], [289, "forward"]], "default": [[259, "default"], [305, "default"]], "decomp": [[259, "decomp"], [305, "decomp"]], "restart": [[259, "restart"], [305, "restart"]], "threads": [[259, "threads"]], "rpe": [[259, "rpe"], [305, "rpe"]], "base_mesh": [[260, "base-mesh"], [261, "base-mesh"]], "analysis": [[260, "analysis"], [261, "analysis"], [263, "analysis"], [264, "analysis"], [307, "analysis"]], "exact_solution": [[263, "exact-solution"], [264, "exact-solution"]], "cvmix": [[265, "cvmix"], [311, "cvmix"]], "ideal age": [[265, "ideal-age"], [311, "ocean-single-column-ideal-age"]], "Categories of tasks": [[266, "categories-of-tasks"]], "Constructor": [[267, "constructor"]], "Config file": [[267, "config-file"]], "Directory structure": [[268, "directory-structure"]], "Organization of Tasks": [[269, "organization-of-tasks"]], "Steps": [[270, "steps"]], "Step attributes": [[270, "step-attributes"]], "constructor": [[270, "constructor"], [272, "constructor"]], "setup()": [[270, "setup"]], "constrain_resources()": [[270, "constrain-resources"]], "runtime_setup()": [[270, "runtime-setup"]], "run()": [[270, "run"]], "inputs and outputs": [[270, "inputs-and-outputs"]], "Input files": [[270, "input-files"]], "Symlinks to input files": [[270, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[270, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[270, "downloading-and-symlinking-input-files"]], "Copying input files": [[270, "copying-input-files"]], "Output files": [[270, "output-files"]], "Cached output files": [[270, "cached-output-files"]], "Adding other steps as dependencies": [[270, "adding-other-steps-as-dependencies"]], "Suites": [[271, "suites"], [304, "suites"], [313, "suites"], [318, "suites"]], "Pull-Request (PR) suite": [[271, "pull-request-pr-suite"]], "Nightly suite": [[271, "nightly-suite"]], "Task attributes": [[272, "task-attributes"]], "configure()": [[272, "configure"]], "Overview": [[273, "overview"]], "Code Style": [[273, "code-style"]], "Packages and Modules": [[273, "packages-and-modules"]], "Packages": [[273, "packages"]], "Modules": [[273, "modules"]], "Classes": [[273, "classes"]], "Code sharing": [[273, "code-sharing"]], "\u2026in the polaris framework": [[273, "in-the-polaris-framework"]], "\u2026within a component": [[273, "within-a-component"]], "\u2026within a group of related tasks": [[273, "within-a-group-of-related-tasks"]], "\u2026within a task": [[273, "within-a-task"]], "Quick Start for Developers": [[274, "quick-start-for-developers"]], "Unix Shell": [[274, "unix-shell"]], "Set up a polaris repository: for beginners": [[274, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[274, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[274, "supported-machines"]], "Environments with Albany": [[274, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[274, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[274, "unknown-machines"]], "What the script does": [[274, "what-the-script-does"]], "Optional flags": [[274, "optional-flags"]], "Activating the environment": [[274, "activating-the-environment"]], "Switching between different polaris environments": [[274, "switching-between-different-polaris-environments"]], "Troubleshooting": [[274, "troubleshooting"], [290, "troubleshooting"]], "Creating/updating only the polaris environment": [[274, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[274, "building-e3sm-components"]], "Running polaris from the repo": [[274, "running-polaris-from-the-repo"]], "Code style for polaris": [[274, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[274, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[275, "seaice"]], "SeaIce framework": [[276, "seaice-framework"]], "polaris.seaice.SeaIce": [[277, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[278, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[279, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[280, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[281, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[282, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[283, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[284, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[285, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[286, "seaice-component"]], "Supported Model: MPAS-Seaice": [[287, "supported-model-mpas-seaice"]], "standard_physics_test": [[289, "standard-physics-test"]], "exact_restart_test": [[289, "exact-restart-test"]], "Solver errors when configuring conda environment": [[290, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[290, "proxy-on-lanl-macs"]], "gethostbyname failed": [[290, "gethostbyname-failed"]], "Glossary": [[291, "glossary"], [292, null]], "Polaris": [[292, "polaris"]], "User's guide": [[292, null]], "Developer's guide": [[292, null]], "Tutorials": [[292, null]], "Compass": [[292, "compass"]], "Developer Tutorial: Adding a new test group": [[293, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[293, "getting-started"]], "Making a new test group": [[293, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[293, "adding-a-default-task"]], "Varying resolution and other parameters": [[293, "varying-resolution-and-other-parameters"]], "Adding the init step": [[293, "adding-the-init-step"]], "Creating a horizontal mesh": [[293, "creating-a-horizontal-mesh"]], "Adding a config file": [[293, "adding-a-config-file"]], "Adding the step to the task": [[293, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[293, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[293, "creating-an-initial-condition"]], "Adding plots": [[293, "adding-plots"]], "Adding step outputs": [[293, "adding-step-outputs"]], "Adding validation": [[293, "adding-validation"], [293, "id1"]], "Test things out!": [[293, "test-things-out"]], "Adding the forward step": [[293, "adding-the-forward-step"]], "Defining model config options and streams": [[293, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[293, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[293, "adding-more-validation"]], "Test the task again!": [[293, "test-the-task-again"]], "Adding a visualization step": [[293, "adding-a-visualization-step"]], "Adding the viz step to the task": [[293, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[293, "test-the-task-one-more-time"]], "Adding a second task": [[293, "adding-a-second-task"]], "Enhancements": [[293, "enhancements"]], "Adding model config options in code": [[293, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[293, "adding-dynamic-model-config-options"]], "Computing the cell count": [[293, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[293, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[293, "adding-a-parameter-study"]], "Adding the steps to the task": [[293, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[293, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[293, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[294, "config-files"]], "A \u201cuser\u201d config file": [[294, "a-user-config-file"]], "Test-case config files": [[294, "test-case-config-files"]], "config options": [[295, "config-options"], [296, "config-options"], [297, "config-options"], [298, "config-options"], [299, "config-options"], [300, "config-options"], [305, "config-options"], [305, "id7"], [305, "id14"], [305, "id22"], [305, "id30"], [305, "id37"], [306, "config-options"], [307, "config-options"], [309, "config-options"], [310, "config-options"], [311, "config-options"], [311, "id1"], [311, "id6"], [311, "id13"], [312, "config-options"], [316, "config-options"], [316, "id5"], [316, "id10"], [317, "config-options"]], "Intel on Anvil": [[295, "intel-on-anvil"]], "Gnu on Anvil": [[295, "gnu-on-anvil"]], "Chicoma-CPU": [[296, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[296, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[297, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[297, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[298, "intel-on-compymcnodeface"]], "Slurm job queueing": [[299, "slurm-job-queueing"]], "MPICH": [[299, "mpich"]], "OpenMPI": [[299, "openmpi"]], "No MPI from conda-forge": [[299, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[300, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[300, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[300, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[302, "d-grid-type"]], "uniform": [[302, "uniform"]], "tanh_dz": [[302, "tanh-dz"]], "60layerPHC": [[302, "layerphc"]], "100layerE3SMv1": [[302, "layere3smv1"]], "3D vertical coordinates": [[302, "d-vertical-coordinates"]], "z-star": [[302, "z-star"]], "z-level": [[302, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[304, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[305, "baroclinic-channel"]], "description": [[305, "description"], [305, "id1"], [305, "id8"], [305, "id16"], [305, "id24"], [306, "description"], [307, "description"], [309, "description"], [310, "description"], [311, "description"], [311, "id2"], [311, "id7"], [312, "description"], [316, "description"], [317, "description"]], "vertical grid": [[305, "vertical-grid"], [305, "id3"], [305, "id10"], [305, "id18"], [305, "id26"], [305, "id33"], [306, "vertical-grid"], [307, "vertical-grid"], [309, "vertical-grid"], [310, "vertical-grid"], [311, "vertical-grid"], [311, "id4"], [311, "id9"], [312, "vertical-grid"]], "initial conditions": [[305, "initial-conditions"], [305, "id4"], [305, "id11"], [305, "id19"], [305, "id27"], [305, "id34"], [306, "initial-conditions"], [307, "initial-conditions"], [309, "initial-conditions"], [310, "initial-conditions"], [311, "initial-conditions"], [311, "id5"], [311, "id10"], [312, "initial-conditions"], [316, "initial-conditions"], [316, "id2"], [316, "id7"], [317, "initial-conditions"]], "forcing": [[305, "forcing"], [305, "id5"], [305, "id12"], [305, "id20"], [305, "id28"], [305, "id35"], [306, "forcing"], [307, "forcing"], [309, "forcing"], [310, "forcing"], [311, "forcing"], [311, "id11"], [312, "forcing"], [316, "forcing"], [316, "id3"], [316, "id8"], [317, "forcing"]], "time step and run duration": [[305, "time-step-and-run-duration"], [305, "id6"], [305, "id13"], [305, "id21"], [305, "id29"], [305, "id36"], [306, "time-step-and-run-duration"], [307, "time-step-and-run-duration"], [309, "time-step-and-run-duration"], [310, "time-step-and-run-duration"], [311, "time-step-and-run-duration"], [311, "id12"], [312, "time-step-and-run-duration"], [317, "time-step-and-run-duration"]], "cores": [[305, "cores"], [305, "id15"], [305, "id23"], [305, "id31"], [305, "id38"], [306, "cores"], [307, "cores"], [309, "cores"], [310, "cores"], [311, "cores"], [311, "id14"], [312, "cores"], [316, "cores"], [316, "id4"], [316, "id9"], [317, "cores"]], "thread": [[305, "thread"]], "cosine bell": [[306, "cosine-bell"]], "inertial gravity wave": [[309, "inertial-gravity-wave"]], "manufactured solution": [[310, "manufactured-solution"]], "convergence": [[310, "convergence"]], "single column": [[311, "single-column"], [316, "single-column"]], "<Category of task>": [[312, "ocean-category-of-task"], [317, "seaice-category-of-task"]], "task_name": [[312, "task-name"], [317, "task-name"]], "Quick Start for Users": [[313, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[313, null]], "Loading polaris conda and spack environments": [[313, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[313, "e3sm-supported-machines"]], "Other machines": [[313, "other-machines"]], "Building supported E3SM components as standalone models": [[313, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[313, "setting-up-tasks"]], "Running a task": [[313, "running-a-task"]], "Running with a job script": [[313, "running-with-a-job-script"]], "Sea ice component": [[314, "sea-ice-component"]], "standard physics test": [[316, "standard-physics-test"]], "timestep and run duration": [[316, "timestep-and-run-duration"], [316, "id11"]], "visualization": [[316, "visualization"]], "exact restart test": [[316, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "module": [[60, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[60, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[61, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[62, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[63, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[64, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[65, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[66, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[67, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[68, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[69, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[71, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[74, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[80, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[81, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[85, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[86, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[87, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[88, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[89, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[90, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[91, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[92, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[93, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[94, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[95, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[96, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[97, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[108, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[109, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[111, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[112, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[113, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[114, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[115, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[116, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[117, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[118, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[119, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[120, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[121, "polaris.validate.compare_variables"]], "plot_global_field() (in module polaris.viz)": [[122, "polaris.viz.plot_global_field"]], "plot_horiz_field() (in module polaris.viz)": [[123, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[124, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[125, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[125, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[126, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[127, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[128, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[129, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[130, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[131, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[140, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[140, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[142, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[149, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[149, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[150, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[151, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[153, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[154, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[155, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[155, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[156, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[157, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[158, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[159, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[160, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[161, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[162, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[163, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[163, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[164, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[164, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[166, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[167, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[169, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[170, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[173, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[175, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[177, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[178, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[179, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[179, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[181, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[183, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[185, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[186, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[188, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[190, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[191, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[193, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[194, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[196, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[197, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[197, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[198, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[199, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[199, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[200, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[201, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[203, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[204, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[205, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[205, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[206, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[206, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[207, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[208, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[208, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[209, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.geostrophic.viz)": [[210, "polaris.ocean.tasks.geostrophic.viz.VizMap"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.vizmap method)": [[210, "polaris.ocean.tasks.geostrophic.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.vizmap method)": [[211, "polaris.ocean.tasks.geostrophic.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[221, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[221, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[222, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[223, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[223, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[224, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[225, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[225, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[226, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[227, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[227, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[228, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[229, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[229, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[230, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[231, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[232, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[232, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[233, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[234, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[234, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[235, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[236, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[236, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[237, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[238, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[239, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[239, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[240, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[240, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[241, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[241, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[242, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[242, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[243, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[244, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[244, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[245, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[246, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[247, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[248, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[249, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[250, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[251, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[252, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[253, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[254, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[255, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[277, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[277, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[278, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[279, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[279, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[280, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[280, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[281, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[282, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[282, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[283, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[283, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[284, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[284, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[285, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})