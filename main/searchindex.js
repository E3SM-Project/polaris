Search.setIndex({"alltitles": {"100layerE3SMv1": [[398, "id1"]], "1D Grid type": [[398, "d-grid-type"]], "3D vertical coordinates": [[398, "d-vertical-coordinates"]], "60layerPHC": [[398, "layerphc"]], "80layerE3SMv1": [[398, "layere3smv1"]], "<Category of task>": [[415, null], [420, null]], "A \u201cuser\u201d config file": [[388, "a-user-config-file"]], "API reference": [[3, null]], "Activating the environment": [[368, "activating-the-environment"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Adding a Machine Config File": [[141, "adding-a-machine-config-file"]], "Adding a New Supported Machine": [[141, "adding-a-new-supported-machine"]], "Adding a config file": [[387, "adding-a-config-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding a parameter study": [[387, "adding-a-parameter-study"]], "Adding a second task": [[387, "adding-a-second-task"]], "Adding a shared \u201csuperclass\u201d for tasks": [[387, "adding-a-shared-superclass-for-tasks"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding a visualization step": [[387, "adding-a-visualization-step"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a \u201cdefault\u201d task": [[387, "adding-a-default-task"]], "Adding dynamic model config options": [[387, "adding-dynamic-model-config-options"]], "Adding model config options": [[14, "adding-model-config-options"]], "Adding model config options in code": [[387, "adding-model-config-options-in-code"]], "Adding more validation": [[387, "adding-more-validation"]], "Adding other steps as dependencies": [[364, "adding-other-steps-as-dependencies"]], "Adding plots": [[387, "adding-plots"]], "Adding step outputs": [[387, "adding-step-outputs"]], "Adding the analysis step": [[387, "adding-the-analysis-step"]], "Adding the forward step": [[387, "adding-the-forward-step"]], "Adding the forward step to the task": [[387, "adding-the-forward-step-to-the-task"]], "Adding the init step": [[387, "adding-the-init-step"]], "Adding the step to the task": [[387, "adding-the-step-to-the-task"]], "Adding the steps to the task": [[387, "adding-the-steps-to-the-task"]], "Adding the viz step to the task": [[387, "adding-the-viz-step-to-the-task"]], "Adding validation": [[387, "adding-validation"], [387, "id1"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Anvil": [[136, null], [389, null]], "Area": [[15, "area"]], "Base Classes": [[3, "base-classes"]], "Boundary conditions": [[345, "boundary-conditions"]], "Building E3SM components": [[368, "building-e3sm-components"]], "Building supported E3SM components as standalone models": [[416, "building-supported-e3sm-components-as-standalone-models"]], "Building the Documentation": [[4, null]], "Building the Spack Environment": [[141, "building-the-spack-environment"]], "Cached output files": [[364, "cached-output-files"]], "Categories of tasks": [[360, null]], "Chicoma": [[137, null], [390, null]], "Chicoma-CPU": [[390, "chicoma-cpu"]], "Chrysalis": [[138, null], [391, null]], "Classes": [[367, "classes"]], "Code Style": [[367, "code-style"]], "Code sharing": [[367, "code-sharing"]], "Code style for polaris": [[368, "code-style-for-polaris"]], "Command-line interface": [[3, "command-line-interface"], [5, null]], "Comments in config files": [[9, "comments-in-config-files"]], "Compass": [[386, "compass"]], "Component": [[3, "component"]], "Components": [[3, "components"], [361, null]], "Computing the cell count": [[387, "computing-the-cell-count"]], "CompyMcNodeFace": [[139, null], [392, null]], "Conda": [[6, "conda"]], "Config Files": [[388, null]], "Config file": [[361, "config-file"]], "Config files": [[9, null]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Constructor": [[361, "constructor"]], "Convergence Tests": [[143, "convergence-tests"], [144, "convergence-tests"]], "Copying input files": [[364, "copying-input-files"]], "Creating a horizontal mesh": [[387, "creating-a-horizontal-mesh"]], "Creating a vertical coordinate": [[387, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[387, "creating-an-initial-condition"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Creating/updating only the polaris environment": [[368, "creating-updating-only-the-polaris-environment"]], "Datasets": [[18, "datasets"]], "Defining model config options and streams": [[387, "defining-model-config-options-and-streams"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying a new spack environment": [[6, null]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Describing a Spack Environment": [[141, "describing-a-spack-environment"]], "Design Documents": [[0, null]], "Developer Tutorial: Adding a new test group": [[387, null]], "Developer's guide": [[386, null]], "Directory structure": [[362, null]], "Docstrings": [[7, "docstrings"]], "Documentation": [[7, null], [387, "documentation"]], "Download": [[11, "download"]], "Downloading and symlinking input files": [[364, "downloading-and-symlinking-input-files"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "E3SM supported machines": [[416, "e3sm-supported-machines"]], "Enhancements": [[387, "enhancements"]], "Environments with Albany": [[368, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[368, "environments-with-petsc-and-netlib-lapack"]], "Forcing": [[345, "forcing"], [381, "forcing"]], "Framework": [[10, null], [397, null]], "Frontier": [[140, null], [393, null]], "General planar meshes": [[13, "general-planar-meshes"]], "Getting started": [[387, "getting-started"]], "Glossary": [[385, null], [386, null]], "How to (and how not to) pass data between steps": [[387, "how-to-and-how-not-to-pass-data-between-steps"]], "IO": [[11, null]], "Ice Shelf": [[143, "ice-shelf"]], "Ice Shelf Tasks": [[144, "ice-shelf-tasks"]], "Ice shelf": [[396, null]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Initial conditions": [[345, "initial-conditions"], [381, "initial-conditions"]], "Input and output from an E3SM component": [[144, "input-and-output-from-an-e3sm-component"]], "Input files": [[364, "input-files"]], "Jupyter notebook on remote data": [[395, "jupyter-notebook-on-remote-data"]], "Loading and running Polaris on Anvil": [[389, "loading-and-running-polaris-on-anvil"]], "Loading and running Polaris on Chicoma": [[390, "loading-and-running-polaris-on-chicoma"]], "Loading and running Polaris on Chrysalis": [[391, "loading-and-running-polaris-on-chrysalis"]], "Loading and running Polaris on CompyMcNodeFace": [[392, "loading-and-running-polaris-on-compymcnodeface"]], "Loading and running Polaris on Frontier": [[393, "loading-and-running-polaris-on-frontier"]], "Loading and running Polaris on Perlmutter": [[395, "loading-and-running-polaris-on-perlmutter"]], "Loading polaris conda and spack environments": [[416, "loading-polaris-conda-and-spack-environments"]], "Logging": [[12, null]], "MPAS": [[15, null]], "MPAS-Ocean": [[345, null]], "MPAS-Ocean and -Seaice Supported Machines": [[141, "mpas-ocean-and-seaice-supported-machines"]], "MPAS-Ocean or MPAS-Seaice": [[368, "mpas-ocean-or-mpas-seaice"]], "MPICH": [[394, "mpich"]], "Mache": [[6, "mache"], [6, "id1"]], "Machines": [[141, null], [394, null]], "Making a graph file": [[14, "making-a-graph-file"]], "Making a new test group": [[387, "making-a-new-test-group"]], "Mapping from MPAS-Ocean to Omega config options": [[144, "mapping-from-mpas-ocean-to-omega-config-options"]], "Mesh": [[13, null]], "Model": [[14, null], [144, "model"]], "Model config options and streams": [[144, "model-config-options-and-streams"]], "ModelStep": [[3, "modelstep"]], "Models": [[344, null]], "Modules": [[367, "modules"]], "Modules for polaris commands": [[8, null]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Nightly suite": [[365, "nightly-suite"]], "No MPI from conda-forge": [[394, "no-mpi-from-conda-forge"]], "Norms": [[18, "norms"]], "Ocean Framework": [[143, "ocean-framework"]], "Ocean Model": [[143, "ocean-model"]], "Ocean component": [[343, null], [399, null]], "Ocean framework": [[144, null]], "Omega": [[368, "omega"]], "Omega Supported Machines": [[141, "omega-supported-machines"]], "OpenMPI": [[394, "openmpi"]], "Optional flags": [[368, "optional-flags"]], "Organization of Tasks": [[363, null]], "Other Machines": [[141, "other-machines"], [394, "other-machines"]], "Other machines": [[416, "other-machines"]], "Output files": [[364, "output-files"]], "Overview": [[367, null]], "Packages": [[367, "packages"]], "Packages and Modules": [[367, "packages-and-modules"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Perlmutter": [[142, null], [395, null]], "Perlmutter-CPU": [[395, "perlmutter-cpu"]], "Permissions": [[11, "permissions"]], "Planar Meshes": [[13, "planar-meshes"]], "Polaris": [[386, null]], "Provenance": [[16, null]], "Proxy on LANL Macs": [[384, "proxy-on-lanl-macs"]], "Pull-Request (PR) suite": [[365, "pull-request-pr-suite"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[144, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Quick Start for Developers": [[368, null]], "Quick Start for Users": [[416, null]], "Quick Start for Users is not yet valid": [[416, null]], "RPE task": [[410, "rpe-task"]], "Reference Potential Energy (RPE)": [[143, "reference-potential-energy-rpe"]], "Remapping": [[17, null]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Running a task": [[416, "running-a-task"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [144, "running-an-e3sm-component"]], "Running polaris from the repo": [[368, "running-polaris-from-the-repo"]], "Running with a job script": [[416, "running-with-a-job-script"]], "SSH adjustment steps": [[396, "ssh-adjustment-steps"]], "Sea ice component": [[417, null]], "SeaIce component": [[380, null]], "SeaIce framework": [[370, null]], "Set up a polaris repository with worktrees: for advanced users": [[368, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Set up a polaris repository: for beginners": [[368, "set-up-a-polaris-repository-for-beginners"]], "Setting MPI resources": [[144, "setting-mpi-resources"]], "Setting time intervals in model config options": [[144, "setting-time-intervals-in-model-config-options"]], "Setting up tasks": [[416, "setting-up-tasks"]], "Shared config files": [[9, "shared-config-files"]], "Shared steps": [[1, null]], "Slurm job queueing": [[394, "slurm-job-queueing"]], "Solver errors when configuring conda environment": [[384, "solver-errors-when-configuring-conda-environment"]], "Spack": [[6, "spack"]], "Spherical Base Mesh Step": [[143, "spherical-base-mesh-step"]], "Spherical Convergence Tests": [[143, "spherical-convergence-tests"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Step": [[3, "step"]], "Step attributes": [[364, "step-attributes"]], "Steps": [[364, null]], "Suites": [[365, null], [400, null], [416, "suites"], [421, null]], "Summary": [[1, "summary"], [2, "summary"]], "Supported Machines": [[141, "supported-machines"], [394, "supported-machines"]], "Supported Model: MPAS-Seaice": [[381, null]], "Supported Models": [[344, "supported-models"]], "Supported machines": [[368, "supported-machines"]], "Switching between different polaris environments": [[368, "switching-between-different-polaris-environments"]], "Symlink to input files from polaris": [[364, "symlink-to-input-files-from-polaris"]], "Symlinks": [[11, "symlinks"]], "Symlinks to input files": [[364, "symlinks-to-input-files"]], "Task": [[3, "task"]], "Task attributes": [[366, "task-attributes"]], "Tasks": [[143, "tasks"], [353, null], [366, null], [369, "tasks"], [382, null], [408, null], [418, null], [422, null]], "Template": [[2, null]], "Test the task again!": [[387, "test-the-task-again"]], "Test the task one more time!": [[387, "test-the-task-one-more-time"]], "Test things out!": [[387, "test-things-out"]], "Test-case config files": [[388, "test-case-config-files"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "Testing polaris": [[6, "testing-polaris"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Time": [[15, "time"]], "Troubleshooting": [[368, "troubleshooting"], [384, null]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Tutorials": [[386, null]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "Unix Shell": [[368, "unix-shell"]], "Unknown machines": [[368, "unknown-machines"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "User's guide": [[386, null]], "Validating variables": [[18, "validating-variables"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validation": [[18, null]], "Varying resolution and other parameters": [[387, "varying-resolution-and-other-parameters"]], "Vertical coordinate": [[144, "vertical-coordinate"], [398, null]], "Vertical coordinates": [[143, "vertical-coordinates"]], "Visualization": [[19, null], [143, "visualization"], [144, "visualization"]], "What the script does": [[368, "what-the-script-does"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "YAML files vs. namelists and streams": [[144, "yaml-files-vs-namelists-and-streams"]], "analysis": [[347, "analysis"], [348, "analysis"], [349, "analysis"], [350, "analysis"], [351, "analysis"], [354, "analysis"], [356, "analysis"], [357, "analysis"], [358, "analysis"], [406, "analysis"]], "baroclinic channel": [[401, null]], "baroclinic_channel": [[143, "baroclinic-channel"], [346, null]], "barotropic gyre": [[402, null]], "barotropic_gyre": [[143, "barotropic-gyre"], [347, null]], "base_mesh": [[348, "base-mesh"], [349, "base-mesh"], [350, "base-mesh"], [351, "base-mesh"], [357, "base-mesh"], [358, "base-mesh"]], "cache": [[3, "cache"]], "cache module": [[8, "cache-module"]], "chicoma-cpu, gnu": [[137, "chicoma-cpu-gnu"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "components": [[3, "id1"]], "config": [[3, "config"]], "config options": [[389, "config-options"], [390, "config-options"], [391, "config-options"], [392, "config-options"], [393, "config-options"], [394, "config-options"], [395, "config-options"], [396, "config-options"], [401, "config-options"], [401, "id7"], [401, "id14"], [401, "id22"], [401, "id30"], [401, "id37"], [402, "config-options"], [403, "config-options"], [404, "config-options"], [405, "config-options"], [406, "config-options"], [407, "config-options"], [407, "id7"], [407, "id14"], [407, "id22"], [409, "config-options"], [410, "config-options"], [410, "id7"], [411, "config-options"], [412, "config-options"], [413, "config-options"], [414, "config-options"], [414, "id1"], [414, "id6"], [414, "id13"], [415, "config-options"], [419, "config-options"], [419, "id5"], [419, "id10"], [420, "config-options"]], "configure()": [[366, "configure"]], "constrain_resources()": [[364, "constrain-resources"]], "constructor": [[364, "constructor"], [366, "constructor"]], "cores": [[401, "cores"], [401, "id15"], [401, "id23"], [401, "id31"], [401, "id38"], [402, "cores"], [403, "cores"], [404, "cores"], [405, "cores"], [406, "cores"], [407, "cores"], [407, "id15"], [407, "id23"], [409, "cores"], [410, "cores"], [411, "cores"], [412, "cores"], [413, "cores"], [414, "cores"], [414, "id14"], [415, "cores"], [419, "cores"], [419, "id4"], [419, "id9"], [420, "cores"]], "correlated tracers 2-d": [[403, null]], "correlated_tracers_2d": [[348, null]], "cosine bell": [[404, null]], "cosine_bell": [[143, "cosine-bell"], [349, null]], "cosine_bell suite": [[400, "cosine-bell-suite"]], "cvmix": [[359, "cvmix"], [414, "cvmix"]], "decomp": [[346, "decomp"], [349, "decomp"], [401, "decomp"]], "default": [[346, "default"], [347, "default"], [352, "default"], [355, "default"], [401, "default"], [402, "default"], [407, "default"], [411, "default"]], "default task": [[410, "default-task"]], "default_tidal_forcing": [[407, "default-tidal-forcing"]], "default_with_restart": [[407, "default-with-restart"]], "del2": [[411, "del2"]], "del4": [[411, "del4"]], "description": [[401, "description"], [401, "id1"], [401, "id8"], [401, "id16"], [401, "id24"], [402, "description"], [403, "description"], [404, "description"], [405, "description"], [406, "description"], [407, "description"], [407, "id1"], [407, "id8"], [407, "id16"], [409, "description"], [410, "description"], [410, "id1"], [411, "description"], [411, "id1"], [411, "id2"], [412, "description"], [413, "description"], [414, "description"], [414, "id2"], [414, "id7"], [415, "description"], [419, "description"], [420, "description"]], "divergent 2-d": [[405, null]], "divergent_2d": [[350, null]], "exact restart test": [[419, "exact-restart-test"]], "exact_restart_test": [[383, "exact-restart-test"]], "exact_solution": [[354, "exact-solution"], [356, "exact-solution"]], "filament_analysis": [[357, "filament-analysis"]], "forcing": [[401, "forcing"], [401, "id5"], [401, "id12"], [401, "id20"], [401, "id28"], [401, "id35"], [402, "forcing"], [403, "forcing"], [404, "forcing"], [405, "forcing"], [406, "forcing"], [407, "forcing"], [407, "id5"], [407, "id12"], [407, "id20"], [409, "forcing"], [410, "forcing"], [410, "id5"], [411, "forcing"], [412, "forcing"], [413, "forcing"], [414, "forcing"], [414, "id11"], [415, "forcing"], [419, "forcing"], [419, "id3"], [419, "id8"], [420, "forcing"]], "forward": [[346, "forward"], [347, "forward"], [348, "forward"], [349, "forward"], [350, "forward"], [351, "forward"], [352, "forward"], [354, "forward"], [355, "forward"], [356, "forward"], [357, "forward"], [358, "forward"], [359, "forward"], [383, "forward"]], "framework": [[346, "framework"], [347, "framework"], [348, "framework"], [349, "framework"], [350, "framework"], [351, "framework"], [352, "framework"], [354, "framework"], [355, "framework"], [356, "framework"], [357, "framework"], [358, "framework"], [359, "framework"], [383, "framework"]], "frontier, crayclang": [[140, "frontier-crayclang"]], "frontier, gnu": [[140, "frontier-gnu"]], "geostrophic": [[143, "geostrophic"], [351, null], [406, null]], "gethostbyname failed": [[384, "gethostbyname-failed"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "gnu": [[136, "gnu"], [138, "gnu"], [139, "gnu"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "ice shelf 2d": [[407, null]], "ice_shelf_2d": [[143, "ice-shelf-2d"], [352, null]], "ideal age": [[359, "ideal-age"], [414, "ocean-single-column-ideal-age"]], "index_tanh_dz": [[398, "index-tanh-dz"]], "inertial gravity wave": [[409, null]], "inertial_gravity_wave": [[143, "inertial-gravity-wave"], [354, null]], "init": [[346, "init"], [347, "init"], [348, "init"], [349, "init"], [350, "init"], [351, "init"], [352, "init"], [354, "init"], [355, "init"], [356, "init"], [357, "init"], [358, "init"], [359, "init"]], "initial conditions": [[401, "initial-conditions"], [401, "id4"], [401, "id11"], [401, "id19"], [401, "id27"], [401, "id34"], [402, "initial-conditions"], [403, "initial-conditions"], [404, "initial-conditions"], [405, "initial-conditions"], [406, "initial-conditions"], [407, "initial-conditions"], [407, "id4"], [407, "id11"], [407, "id19"], [409, "initial-conditions"], [410, "initial-conditions"], [410, "id4"], [411, "initial-conditions"], [412, "initial-conditions"], [413, "initial-conditions"], [414, "initial-conditions"], [414, "id5"], [414, "id10"], [415, "initial-conditions"], [419, "initial-conditions"], [419, "id2"], [419, "id7"], [420, "initial-conditions"]], "inputs and outputs": [[364, "inputs-and-outputs"]], "intel": [[136, "intel"], [138, "intel"], [139, "intel"]], "internal wave": [[410, null]], "internal_wave": [[143, "internal-wave"], [355, null]], "io": [[3, "io"]], "job": [[3, "job"]], "list": [[3, "list"]], "list module": [[8, "list-module"]], "logging": [[3, "logging"]], "manufactured solution": [[411, null]], "manufactured_solution": [[143, "manufactured-solution"], [356, null]], "mesh": [[3, "mesh"], [401, "mesh"], [401, "id2"], [401, "id9"], [401, "id17"], [401, "id25"], [401, "id32"], [402, "mesh"], [403, "mesh"], [404, "mesh"], [405, "mesh"], [406, "mesh"], [407, "mesh"], [407, "id2"], [407, "id9"], [407, "id17"], [409, "mesh"], [410, "mesh"], [410, "id2"], [411, "mesh"], [412, "mesh"], [413, "mesh"], [414, "mesh"], [414, "id3"], [414, "id8"], [415, "mesh"], [419, "mesh"], [419, "id1"], [419, "id6"], [420, "mesh"]], "mixing_analysis": [[348, "mixing-analysis"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "namelist": [[3, "namelist"]], "nondivergent 2-d": [[412, null]], "nondivergent_2d": [[357, null]], "ocean": [[143, null]], "parallel": [[3, "parallel"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "pm-cpu, gnu": [[142, "pm-cpu-gnu"]], "pm-cpu, intel": [[142, "pm-cpu-intel"]], "polaris cache": [[5, "polaris-cache"]], "polaris conda environment, spack environment, compilers and system modules": [[368, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "polaris framework": [[3, "polaris-framework"]], "polaris list": [[5, "polaris-list"]], "polaris serial": [[5, "polaris-serial"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris.Component": [[20, null]], "polaris.Component.add_config": [[21, null]], "polaris.Component.add_step": [[22, null]], "polaris.Component.add_task": [[23, null]], "polaris.Component.remove_step": [[24, null]], "polaris.ModelStep": [[25, null]], "polaris.ModelStep.add_model_config_options": [[26, null]], "polaris.ModelStep.add_namelist_file": [[27, null]], "polaris.ModelStep.add_streams_file": [[28, null]], "polaris.ModelStep.add_yaml_file": [[29, null]], "polaris.ModelStep.dynamic_model_config": [[30, null]], "polaris.ModelStep.map_yaml_configs": [[31, null]], "polaris.ModelStep.map_yaml_options": [[32, null]], "polaris.ModelStep.map_yaml_to_namelist": [[33, null]], "polaris.ModelStep.partition": [[34, null]], "polaris.ModelStep.process_inputs_and_outputs": [[35, null]], "polaris.ModelStep.runtime_setup": [[36, null]], "polaris.ModelStep.set_model_resources": [[37, null]], "polaris.ModelStep.setup": [[38, null]], "polaris.ModelStep.update_namelist_pio": [[39, null]], "polaris.Step": [[40, null]], "polaris.Step.add_dependency": [[41, null]], "polaris.Step.add_input_file": [[42, null]], "polaris.Step.add_output_file": [[43, null]], "polaris.Step.constrain_resources": [[44, null]], "polaris.Step.run": [[45, null]], "polaris.Step.runtime_setup": [[46, null]], "polaris.Step.set_resources": [[47, null]], "polaris.Step.set_shared_config": [[48, null]], "polaris.Step.setup": [[49, null]], "polaris.Step.validate_baselines": [[50, null]], "polaris.Task": [[51, null]], "polaris.Task.add_step": [[52, null]], "polaris.Task.configure": [[53, null]], "polaris.Task.remove_step": [[54, null]], "polaris.Task.set_shared_config": [[55, null]], "polaris.__main__.main": [[56, null]], "polaris.cache.update_cache": [[57, null]], "polaris.components.get_components": [[58, null]], "polaris.config.PolarisConfigParser": [[59, null]], "polaris.config.PolarisConfigParser.setup": [[60, null]], "polaris.io.download": [[61, null]], "polaris.io.symlink": [[62, null]], "polaris.io.update_permissions": [[63, null]], "polaris.job.clean_up_whitespace": [[64, null]], "polaris.job.get_slurm_options": [[65, null]], "polaris.job.write_job_script": [[66, null]], "polaris.list.list_cases": [[67, null]], "polaris.list.list_machines": [[68, null]], "polaris.list.list_suites": [[69, null]], "polaris.logging.log_method_call": [[70, null]], "polaris.mesh.IcosahedralMeshStep": [[71, null]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[72, null]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[73, null]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[74, null]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[75, null]], "polaris.mesh.IcosahedralMeshStep.run": [[76, null]], "polaris.mesh.IcosahedralMeshStep.setup": [[77, null]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[78, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[79, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[80, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[81, null]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[82, null]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[83, null]], "polaris.mesh.spherical.SphericalBaseStep": [[84, null]], "polaris.mesh.spherical.SphericalBaseStep.run": [[85, null]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[86, null]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[87, null]], "polaris.model_step.make_graph_file": [[88, null]], "polaris.mpas.area_for_field": [[89, null]], "polaris.mpas.time_index_from_xtime": [[90, null]], "polaris.namelist.ingest": [[91, null]], "polaris.namelist.parse_replacements": [[92, null]], "polaris.namelist.replace": [[93, null]], "polaris.namelist.write": [[94, null]], "polaris.ocean.Ocean": [[145, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis": [[146, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error": [[147, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters": [[148, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution": [[149, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field": [[150, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence": [[151, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run": [[152, null]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup": [[153, null]], "polaris.ocean.convergence.forward.ConvergenceForward": [[154, null]], "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count": [[155, null]], "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config": [[156, null]], "polaris.ocean.convergence.get_resolution_for_task": [[157, null]], "polaris.ocean.convergence.get_timestep_for_task": [[158, null]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[159, null]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[160, null]], "polaris.ocean.ice_shelf.IceShelfTask": [[161, null]], "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps": [[162, null]], "polaris.ocean.ice_shelf.SshAdjustment": [[163, null]], "polaris.ocean.ice_shelf.SshAdjustment.run": [[164, null]], "polaris.ocean.ice_shelf.SshForward": [[165, null]], "polaris.ocean.ice_shelf.SshForward.compute_cell_count": [[166, null]], "polaris.ocean.ice_shelf.SshForward.dynamic_model_config": [[167, null]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[168, null]], "polaris.ocean.model.OceanIOStep": [[169, null]], "polaris.ocean.model.OceanIOStep.map_from_native_model_vars": [[170, null]], "polaris.ocean.model.OceanIOStep.map_to_native_model_vars": [[171, null]], "polaris.ocean.model.OceanIOStep.open_model_dataset": [[172, null]], "polaris.ocean.model.OceanIOStep.setup": [[173, null]], "polaris.ocean.model.OceanIOStep.write_model_dataset": [[174, null]], "polaris.ocean.model.OceanModelStep": [[175, null]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[176, null]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[177, null]], "polaris.ocean.model.OceanModelStep.map_yaml_configs": [[178, null]], "polaris.ocean.model.OceanModelStep.map_yaml_options": [[179, null]], "polaris.ocean.model.OceanModelStep.setup": [[180, null]], "polaris.ocean.model.get_time_interval_string": [[181, null]], "polaris.ocean.rpe.compute_rpe": [[182, null]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[183, null]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[184, null]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[185, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[186, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[187, null]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[188, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[189, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[190, null]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[191, null]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[192, null]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[193, null]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[194, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[195, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[196, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[197, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[198, null]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[199, null]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[200, null]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[201, null]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[202, null]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[203, null]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[204, null]], "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre": [[205, null]], "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks": [[206, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis": [[207, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error": [[208, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution": [[209, null]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run": [[210, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward": [[211, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count": [[212, null]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config": [[213, null]], "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step": [[214, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init": [[215, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init.run": [[216, null]], "polaris.ocean.tasks.barotropic_gyre.init.Init.setup": [[217, null]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[218, null]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[219, null]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[220, null]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[221, null]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[222, null]], "polaris.ocean.tasks.cosine_bell.decomp.Decomp": [[223, null]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[224, null]], "polaris.ocean.tasks.cosine_bell.init.Init": [[225, null]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[226, null]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[227, null]], "polaris.ocean.tasks.cosine_bell.restart.Restart": [[228, null]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep": [[229, null]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config": [[230, null]], "polaris.ocean.tasks.cosine_bell.validate.Validate": [[231, null]], "polaris.ocean.tasks.cosine_bell.validate.Validate.run": [[232, null]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[233, null]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[234, null]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[235, null]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[236, null]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[237, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[238, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[239, null]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[240, null]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[241, null]], "polaris.ocean.tasks.geostrophic.init.Init": [[242, null]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[243, null]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[244, null]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[245, null]], "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks": [[246, null]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[247, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[248, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count": [[249, null]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config": [[250, null]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[251, null]], "polaris.ocean.tasks.ice_shelf_2d.init.Init.run": [[252, null]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[253, null]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run": [[254, null]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[255, null]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run": [[256, null]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[257, null]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[258, null]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[259, null]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[260, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[261, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[262, null]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[263, null]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[264, null]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[265, null]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[266, null]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[267, null]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[268, null]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[269, null]], "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks": [[270, null]], "polaris.ocean.tasks.internal_wave.default.Default": [[271, null]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[272, null]], "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count": [[273, null]], "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config": [[274, null]], "polaris.ocean.tasks.internal_wave.init.Init": [[275, null]], "polaris.ocean.tasks.internal_wave.init.Init.run": [[276, null]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[277, null]], "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure": [[278, null]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[279, null]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run": [[280, null]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[281, null]], "polaris.ocean.tasks.internal_wave.viz.Viz.run": [[282, null]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[283, null]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[284, null]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[285, null]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[286, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[287, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[288, null]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[289, null]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[290, null]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[291, null]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[292, null]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[293, null]], "polaris.ocean.tasks.manufactured_solution.init.Init.setup": [[294, null]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[295, null]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[296, null]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[297, null]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[298, null]], "polaris.ocean.tasks.single_column.forward.Forward": [[299, null]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[300, null]], "polaris.ocean.tasks.single_column.init.Init": [[301, null]], "polaris.ocean.tasks.single_column.init.Init.run": [[302, null]], "polaris.ocean.tasks.single_column.viz.Viz": [[303, null]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[304, null]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[305, null]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[306, null]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[307, null]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[308, null]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[309, null]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[310, null]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[311, null]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[312, null]], "polaris.ocean.tasks.sphere_transport.init.Init": [[313, null]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[314, null]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[315, null]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[316, null]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[317, null]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[318, null]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[319, null]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[320, null]], "polaris.ocean.vertical.init_vertical_coord": [[321, null]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[322, null]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[323, null]], "polaris.ocean.vertical.sigma.init_sigma_vertical_coord": [[324, null]], "polaris.ocean.vertical.sigma.update_sigma_layer_thickness": [[325, null]], "polaris.ocean.vertical.update_layer_thickness": [[326, null]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[327, null]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[328, null]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[329, null]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[330, null]], "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness": [[331, null]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[332, null]], "polaris.ocean.vertical.zstar.update_z_star_layer_thickness": [[333, null]], "polaris.ocean.viz.compute_transect": [[334, null]], "polaris.ocean.viz.plot_transect": [[335, null]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[336, null]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[337, null]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[338, null]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[339, null]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[340, null]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[341, null]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[342, null]], "polaris.parallel.get_available_parallel_resources": [[95, null]], "polaris.parallel.get_parallel_command": [[96, null]], "polaris.parallel.run_command": [[97, null]], "polaris.parallel.set_cores_per_node": [[98, null]], "polaris.provenance.write": [[99, null]], "polaris.remap.MappingFileStep": [[100, null]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[101, null]], "polaris.remap.MappingFileStep.dst_from_mpas": [[102, null]], "polaris.remap.MappingFileStep.dst_from_points": [[103, null]], "polaris.remap.MappingFileStep.dst_from_proj": [[104, null]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[105, null]], "polaris.remap.MappingFileStep.get_remapper": [[106, null]], "polaris.remap.MappingFileStep.runtime_setup": [[107, null]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[108, null]], "polaris.remap.MappingFileStep.src_from_mpas": [[109, null]], "polaris.remap.MappingFileStep.src_from_proj": [[110, null]], "polaris.run.complete_step_run": [[111, null]], "polaris.run.load_dependencies": [[112, null]], "polaris.run.serial.run_single_step": [[113, null]], "polaris.run.serial.run_tasks": [[114, null]], "polaris.run.setup_config": [[115, null]], "polaris.run.unpickle_suite": [[116, null]], "polaris.seaice.SeaIce": [[371, null]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[372, null]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[373, null]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[374, null]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[375, null]], "polaris.seaice.tasks.single_column.forward.Forward": [[376, null]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[377, null]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[378, null]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[379, null]], "polaris.setup.setup_task": [[117, null]], "polaris.setup.setup_tasks": [[118, null]], "polaris.streams.read": [[119, null]], "polaris.streams.update_defaults": [[120, null]], "polaris.streams.update_tree": [[121, null]], "polaris.streams.write": [[122, null]], "polaris.suite.setup_suite": [[123, null]], "polaris.validate.compare_variables": [[124, null]], "polaris.viz.plot_global_lat_lon_field": [[125, null]], "polaris.viz.plot_global_mpas_field": [[126, null]], "polaris.viz.plot_horiz_field": [[127, null]], "polaris.viz.use_mplstyle": [[128, null]], "polaris.yaml.PolarisYaml": [[129, null]], "polaris.yaml.PolarisYaml.read": [[130, null]], "polaris.yaml.PolarisYaml.update": [[131, null]], "polaris.yaml.PolarisYaml.write": [[132, null]], "polaris.yaml.main_mpas_to_yaml": [[133, null]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[134, null]], "polaris.yaml.yaml_to_mpas_streams": [[135, null]], "provenance": [[3, "provenance"]], "reference (resting) potential energy (RPE)": [[144, "reference-resting-potential-energy-rpe"]], "remap": [[3, "remap"]], "restart": [[346, "restart"], [349, "restart"], [401, "restart"]], "restart_step": [[349, "restart-step"]], "rotation 2-d": [[413, null]], "rotation_2d": [[358, null]], "rpe": [[346, "rpe"], [355, "rpe"], [401, "rpe"]], "run": [[3, "run"]], "run()": [[364, "run"]], "run.serial module": [[8, "run-serial-module"]], "runtime_setup()": [[364, "runtime-setup"]], "seaice": [[369, null]], "setup": [[3, "setup"]], "setup module": [[8, "setup-module"]], "setup()": [[364, "setup"]], "sigma": [[398, "sigma"]], "single column": [[414, null], [419, null]], "single_column": [[143, "single-column"], [359, null], [369, "single-column"], [383, null]], "sphere_transport": [[143, "sphere-transport"]], "standard physics test": [[419, "standard-physics-test"]], "standard_physics_test": [[383, "standard-physics-test"]], "streams": [[3, "streams"]], "suite": [[3, "suite"]], "suite module": [[8, "suite-module"]], "supported models": [[402, "supported-models"]], "suppported models": [[401, "suppported-models"], [403, "suppported-models"], [404, "suppported-models"], [405, "suppported-models"], [406, "suppported-models"], [407, "suppported-models"], [409, "suppported-models"], [410, "suppported-models"], [411, "suppported-models"], [412, "suppported-models"], [413, "suppported-models"], [414, "suppported-models"], [415, "suppported-models"]], "tanh_dz": [[398, "tanh-dz"]], "task_name": [[415, "task-name"], [420, "task-name"]], "thread": [[401, "thread"]], "threads": [[346, "threads"]], "time step and run duration": [[401, "time-step-and-run-duration"], [401, "id6"], [401, "id13"], [401, "id21"], [401, "id29"], [401, "id36"], [402, "time-step-and-run-duration"], [403, "time-step-and-run-duration"], [404, "time-step-and-run-duration"], [405, "time-step-and-run-duration"], [406, "time-step-and-run-duration"], [407, "time-step-and-run-duration"], [407, "id6"], [407, "id13"], [407, "id21"], [409, "time-step-and-run-duration"], [410, "time-step-and-run-duration"], [410, "id6"], [411, "time-step-and-run-duration"], [412, "time-step-and-run-duration"], [413, "time-step-and-run-duration"], [414, "time-step-and-run-duration"], [414, "id12"], [415, "time-step-and-run-duration"], [420, "time-step-and-run-duration"]], "timestep and run duration": [[419, "timestep-and-run-duration"], [419, "id11"]], "uniform": [[398, "uniform"]], "validate": [[3, "validate"], [346, "validate"], [349, "validate"], [352, "validate"], [355, "validate"]], "vertical grid": [[401, "vertical-grid"], [401, "id3"], [401, "id10"], [401, "id18"], [401, "id26"], [401, "id33"], [402, "vertical-grid"], [403, "vertical-grid"], [404, "vertical-grid"], [405, "vertical-grid"], [406, "vertical-grid"], [407, "vertical-grid"], [407, "id3"], [407, "id10"], [407, "id18"], [409, "vertical-grid"], [410, "vertical-grid"], [410, "id3"], [411, "vertical-grid"], [412, "vertical-grid"], [413, "vertical-grid"], [414, "vertical-grid"], [414, "id4"], [414, "id9"], [415, "vertical-grid"]], "visualization": [[419, "visualization"]], "viz": [[3, "viz"], [348, "viz"], [349, "viz"], [350, "viz"], [351, "viz"], [352, "viz"], [354, "viz"], [356, "viz"], [357, "viz"], [358, "viz"], [359, "viz"], [383, "viz"]], "yaml": [[3, "yaml"]], "z-level": [[398, "z-level"]], "z-star": [[398, "z-star"]], "\u2026in the polaris framework": [[367, "in-the-polaris-framework"]], "\u2026within a component": [[367, "within-a-component"]], "\u2026within a group of related tasks": [[367, "within-a-group-of-related-tasks"]], "\u2026within a task": [[367, "within-a-task"]]}, "docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_configs", "developers_guide/generated/polaris.ModelStep.map_yaml_options", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.io.update_permissions", "developers_guide/generated/polaris.job.clean_up_whitespace", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/frontier", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.get_resolution_for_task", "developers_guide/ocean/generated/polaris.ocean.convergence.get_timestep_for_task", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_from_native_model_vars", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_to_native_model_vars", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.open_model_dataset", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.write_model_dataset", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_configs", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_options", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/barotropic_gyre", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/ice_shelf_2d", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/internal_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/frontier", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/barotropic_gyre", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/ice_shelf_2d", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/internal_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_configs.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_options.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.io.update_permissions.rst", "developers_guide/generated/polaris.job.clean_up_whitespace.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/frontier.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.get_resolution_for_task.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.get_timestep_for_task.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_from_native_model_vars.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.map_to_native_model_vars.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.open_model_dataset.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanIOStep.write_model_dataset.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_configs.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_options.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.BarotropicGyre.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.barotropic_gyre.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/barotropic_gyre.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/ice_shelf_2d.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/internal_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/frontier.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/ice_shelf.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/barotropic_gyre.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/ice_shelf_2d.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/internal_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "indexentries": {"__init__() (polaris.component method)": [[20, "polaris.Component.__init__", false]], "__init__() (polaris.config.polarisconfigparser method)": [[59, "polaris.config.PolarisConfigParser.__init__", false]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.__init__", false]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__", false]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.__init__", false]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__", false]], "__init__() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[146, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.__init__", false]], "__init__() (polaris.ocean.convergence.forward.convergenceforward method)": [[154, "polaris.ocean.convergence.forward.ConvergenceForward.__init__", false]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[159, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__", false]], "__init__() (polaris.ocean.ice_shelf.iceshelftask method)": [[161, "polaris.ocean.ice_shelf.IceShelfTask.__init__", false]], "__init__() (polaris.ocean.ice_shelf.sshadjustment method)": [[163, "polaris.ocean.ice_shelf.SshAdjustment.__init__", false]], "__init__() (polaris.ocean.ice_shelf.sshforward method)": [[165, "polaris.ocean.ice_shelf.SshForward.__init__", false]], "__init__() (polaris.ocean.model.oceaniostep method)": [[169, "polaris.ocean.model.OceanIOStep.__init__", false]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[175, "polaris.ocean.model.OceanModelStep.__init__", false]], "__init__() (polaris.ocean.ocean method)": [[145, "polaris.ocean.Ocean.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[184, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[185, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[186, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[189, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[192, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[193, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[197, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[195, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[200, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[201, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[203, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[207, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.barotropicgyre method)": [[205, "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[211, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[215, "polaris.ocean.tasks.barotropic_gyre.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[221, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[218, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.decomp.decomp method)": [[223, "polaris.ocean.tasks.cosine_bell.decomp.Decomp.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[224, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[225, "polaris.ocean.tasks.cosine_bell.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.restart.restart method)": [[228, "polaris.ocean.tasks.cosine_bell.restart.Restart.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.restart.restartstep method)": [[229, "polaris.ocean.tasks.cosine_bell.restart.RestartStep.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.validate.validate method)": [[231, "polaris.ocean.tasks.cosine_bell.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[233, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[238, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[241, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[235, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[242, "polaris.ocean.tasks.geostrophic.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[244, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.default.default method)": [[247, "polaris.ocean.tasks.ice_shelf_2d.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[248, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[251, "polaris.ocean.tasks.ice_shelf_2d.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[253, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.__init__", false]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[255, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[259, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[261, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[264, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[257, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[266, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[268, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.default.default method)": [[271, "polaris.ocean.tasks.internal_wave.default.Default.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[272, "polaris.ocean.tasks.internal_wave.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.init.init method)": [[275, "polaris.ocean.tasks.internal_wave.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[279, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[277, "polaris.ocean.tasks.internal_wave.rpe.Rpe.__init__", false]], "__init__() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[281, "polaris.ocean.tasks.internal_wave.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[285, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[287, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[290, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[292, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[283, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__", false]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[295, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[298, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[299, "polaris.ocean.tasks.single_column.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[300, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[301, "polaris.ocean.tasks.single_column.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[303, "polaris.ocean.tasks.single_column.viz.Viz.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[308, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[310, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[312, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[313, "polaris.ocean.tasks.sphere_transport.init.Init.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[315, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[305, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__", false]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[317, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__", false]], "__init__() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.__init__", false]], "__init__() (polaris.seaice.seaice method)": [[371, "polaris.seaice.SeaIce.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[373, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[374, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[376, "polaris.seaice.tasks.single_column.forward.Forward.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[377, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__", false]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[378, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__", false]], "__init__() (polaris.step method)": [[40, "polaris.Step.__init__", false]], "__init__() (polaris.task method)": [[51, "polaris.Task.__init__", false]], "__init__() (polaris.yaml.polarisyaml method)": [[129, "polaris.yaml.PolarisYaml.__init__", false]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[183, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", false]], "add_barotropic_gyre_tasks() (in module polaris.ocean.tasks.barotropic_gyre)": [[206, "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", false]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config", false]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[220, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", false]], "add_dependency() (polaris.step method)": [[41, "polaris.Step.add_dependency", false]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[237, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", false]], "add_ice_shelf_2d_tasks() (in module polaris.ocean.tasks.ice_shelf_2d)": [[246, "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", false]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[258, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", false]], "add_input_file() (polaris.step method)": [[42, "polaris.Step.add_input_file", false]], "add_internal_wave_tasks() (in module polaris.ocean.tasks.internal_wave)": [[270, "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", false]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[284, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", false]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options", false]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file", false]], "add_output_file() (polaris.step method)": [[43, "polaris.Step.add_output_file", false]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[297, "polaris.ocean.tasks.single_column.add_single_column_tasks", false]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[372, "polaris.seaice.tasks.single_column.add_single_column_tasks", false]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[307, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", false]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[168, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", false]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step", false]], "add_step() (polaris.task method)": [[52, "polaris.Task.add_step", false]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file", false]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task", false]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file", false]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[322, "polaris.ocean.vertical.partial_cells.alter_bottom_depth", false]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[323, "polaris.ocean.vertical.partial_cells.alter_ssh", false]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[197, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.barotropic_gyre.analysis)": [[207, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[221, "polaris.ocean.tasks.cosine_bell.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[238, "polaris.ocean.tasks.geostrophic.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[259, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.internal_wave.rpe.analysis)": [[279, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[285, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", false]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[308, "polaris.ocean.tasks.sphere_transport.analysis.Analysis", false]], "area_for_field() (in module polaris.mpas)": [[89, "polaris.mpas.area_for_field", false]], "barotropicgyre (class in polaris.ocean.tasks.barotropic_gyre)": [[205, "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", false]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", false]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", false]], "clean_up_whitespace() (in module polaris.job)": [[64, "polaris.job.clean_up_whitespace", false]], "compare_variables() (in module polaris.validate)": [[124, "polaris.validate.compare_variables", false]], "complete_step_run() (in module polaris.run)": [[111, "polaris.run.complete_step_run", false]], "component (class in polaris)": [[20, "polaris.Component", false]], "compute_cell_count() (polaris.ocean.convergence.forward.convergenceforward method)": [[155, "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[160, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.ice_shelf.sshforward method)": [[166, "polaris.ocean.ice_shelf.SshForward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[176, "polaris.ocean.model.OceanModelStep.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[187, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[212, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[249, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[265, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[273, "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", false]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[291, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", false]], "compute_error() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[147, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", false]], "compute_error() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[208, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", false]], "compute_max_time_step() (in module polaris.ocean.tasks.barotropic_gyre.forward)": [[214, "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", false]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[327, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", false]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[83, "polaris.mesh.planar.compute_planar_hex_nx_ny", false]], "compute_rpe() (in module polaris.ocean.rpe)": [[182, "polaris.ocean.rpe.compute_rpe", false]], "compute_transect() (in module polaris.ocean.viz)": [[334, "polaris.ocean.viz.compute_transect", false]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[328, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", false]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[329, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", false]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[196, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", false]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[219, "polaris.ocean.tasks.cosine_bell.CosineBell.configure", false]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[236, "polaris.ocean.tasks.geostrophic.Geostrophic.configure", false]], "configure() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[278, "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", false]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[306, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", false]], "configure() (polaris.task method)": [[53, "polaris.Task.configure", false]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[177, "polaris.ocean.model.OceanModelStep.constrain_resources", false]], "constrain_resources() (polaris.step method)": [[44, "polaris.Step.constrain_resources", false]], "convergence_parameters() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[148, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", false]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[309, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", false]], "convergenceanalysis (class in polaris.ocean.convergence.analysis)": [[146, "polaris.ocean.convergence.analysis.ConvergenceAnalysis", false]], "convergenceforward (class in polaris.ocean.convergence.forward)": [[154, "polaris.ocean.convergence.forward.ConvergenceForward", false]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[227, "polaris.ocean.tasks.cosine_bell.init.cosine_bell", false]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[218, "polaris.ocean.tasks.cosine_bell.CosineBell", false]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[298, "polaris.ocean.tasks.single_column.cvmix.CVMix", false]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[184, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", false]], "decomp (class in polaris.ocean.tasks.cosine_bell.decomp)": [[223, "polaris.ocean.tasks.cosine_bell.decomp.Decomp", false]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[185, "polaris.ocean.tasks.baroclinic_channel.default.Default", false]], "default (class in polaris.ocean.tasks.ice_shelf_2d.default)": [[247, "polaris.ocean.tasks.ice_shelf_2d.default.Default", false]], "default (class in polaris.ocean.tasks.internal_wave.default)": [[271, "polaris.ocean.tasks.internal_wave.default.Default", false]], "download() (in module polaris.io)": [[61, "polaris.io.download", false]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_lon_lat", false]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_from_mpas", false]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.dst_from_points", false]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.dst_from_proj", false]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.dst_global_lon_lat", false]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.convergence.forward.convergenceforward method)": [[156, "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.ice_shelf.sshforward method)": [[167, "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[188, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[194, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.barotropic_gyre.forward.forward method)": [[213, "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.restart.restartstep method)": [[230, "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[250, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", false]], "dynamic_model_config() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[274, "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", false]], "exact_solution() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[149, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[209, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[222, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[239, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[260, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", false]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[286, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", false]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[373, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", false]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[261, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", false]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[287, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", false]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[310, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", false]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[336, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", false]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[337, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", false]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[340, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", false]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[186, "polaris.ocean.tasks.baroclinic_channel.forward.Forward", false]], "forward (class in polaris.ocean.tasks.barotropic_gyre.forward)": [[211, "polaris.ocean.tasks.barotropic_gyre.forward.Forward", false]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[224, "polaris.ocean.tasks.cosine_bell.forward.Forward", false]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[241, "polaris.ocean.tasks.geostrophic.forward.Forward", false]], "forward (class in polaris.ocean.tasks.ice_shelf_2d.forward)": [[248, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", false]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[264, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", false]], "forward (class in polaris.ocean.tasks.internal_wave.forward)": [[272, "polaris.ocean.tasks.internal_wave.forward.Forward", false]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[290, "polaris.ocean.tasks.manufactured_solution.forward.Forward", false]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[299, "polaris.ocean.tasks.single_column.forward.Forward", false]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[312, "polaris.ocean.tasks.sphere_transport.forward.Forward", false]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[376, "polaris.seaice.tasks.single_column.forward.Forward", false]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[319, "polaris.ocean.vertical.grid_1d.generate_1d_grid", false]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[235, "polaris.ocean.tasks.geostrophic.Geostrophic", false]], "get_available_parallel_resources() (in module polaris.parallel)": [[95, "polaris.parallel.get_available_parallel_resources", false]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[73, "polaris.mesh.IcosahedralMeshStep.get_cell_width", false]], "get_components() (in module polaris.components)": [[58, "polaris.components.get_components", false]], "get_output_field() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[150, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", false]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[240, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", false]], "get_parallel_command() (in module polaris.parallel)": [[96, "polaris.parallel.get_parallel_command", false]], "get_remapper() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.get_remapper", false]], "get_resolution_for_task() (in module polaris.ocean.convergence)": [[157, "polaris.ocean.convergence.get_resolution_for_task", false]], "get_slurm_options() (in module polaris.job)": [[65, "polaris.job.get_slurm_options", false]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[74, "polaris.mesh.IcosahedralMeshStep.get_subdivisions", false]], "get_time_interval_string() (in module polaris.ocean.model)": [[181, "polaris.ocean.model.get_time_interval_string", false]], "get_timestep_for_task() (in module polaris.ocean.convergence)": [[158, "polaris.ocean.convergence.get_timestep_for_task", false]], "iceshelftask (class in polaris.ocean.ice_shelf)": [[161, "polaris.ocean.ice_shelf.IceShelfTask", false]], "icosahedralmeshstep (class in polaris.mesh)": [[71, "polaris.mesh.IcosahedralMeshStep", false]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[300, "polaris.ocean.tasks.single_column.ideal_age.IdealAge", false]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[257, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", false]], "ingest() (in module polaris.namelist)": [[91, "polaris.namelist.ingest", false]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[189, "polaris.ocean.tasks.baroclinic_channel.init.Init", false]], "init (class in polaris.ocean.tasks.barotropic_gyre.init)": [[215, "polaris.ocean.tasks.barotropic_gyre.init.Init", false]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[225, "polaris.ocean.tasks.cosine_bell.init.Init", false]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[242, "polaris.ocean.tasks.geostrophic.init.Init", false]], "init (class in polaris.ocean.tasks.ice_shelf_2d.init)": [[251, "polaris.ocean.tasks.ice_shelf_2d.init.Init", false]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[266, "polaris.ocean.tasks.inertial_gravity_wave.init.Init", false]], "init (class in polaris.ocean.tasks.internal_wave.init)": [[275, "polaris.ocean.tasks.internal_wave.init.Init", false]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[292, "polaris.ocean.tasks.manufactured_solution.init.Init", false]], "init (class in polaris.ocean.tasks.single_column.init)": [[301, "polaris.ocean.tasks.single_column.init.Init", false]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[313, "polaris.ocean.tasks.sphere_transport.init.Init", false]], "init_sigma_vertical_coord() (in module polaris.ocean.vertical.sigma)": [[324, "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", false]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[321, "polaris.ocean.vertical.init_vertical_coord", false]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[330, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", false]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[332, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", false]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[341, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", false]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[342, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", false]], "list_cases() (in module polaris.list)": [[67, "polaris.list.list_cases", false]], "list_machines() (in module polaris.list)": [[68, "polaris.list.list_machines", false]], "list_suites() (in module polaris.list)": [[69, "polaris.list.list_suites", false]], "load_dependencies() (in module polaris.run)": [[112, "polaris.run.load_dependencies", false]], "log_method_call() (in module polaris.logging)": [[70, "polaris.logging.log_method_call", false]], "main() (in module polaris.__main__)": [[56, "polaris.__main__.main", false]], "main_mpas_to_yaml() (in module polaris.yaml)": [[133, "polaris.yaml.main_mpas_to_yaml", false]], "make_graph_file() (in module polaris.model_step)": [[88, "polaris.model_step.make_graph_file", false]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[75, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", false]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[80, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", false]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[338, "polaris.ocean.viz.transect.horiz.make_triangle_tree", false]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[283, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", false]], "map_from_native_model_vars() (polaris.ocean.model.oceaniostep method)": [[170, "polaris.ocean.model.OceanIOStep.map_from_native_model_vars", false]], "map_to_native_model_vars() (polaris.ocean.model.oceaniostep method)": [[171, "polaris.ocean.model.OceanIOStep.map_to_native_model_vars", false]], "map_yaml_configs() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_configs", false]], "map_yaml_configs() (polaris.ocean.model.oceanmodelstep method)": [[178, "polaris.ocean.model.OceanModelStep.map_yaml_configs", false]], "map_yaml_options() (polaris.modelstep method)": [[32, "polaris.ModelStep.map_yaml_options", false]], "map_yaml_options() (polaris.ocean.model.oceanmodelstep method)": [[179, "polaris.ocean.model.OceanModelStep.map_yaml_options", false]], "map_yaml_to_namelist() (polaris.modelstep method)": [[33, "polaris.ModelStep.map_yaml_to_namelist", false]], "mappingfilestep (class in polaris.remap)": [[100, "polaris.remap.MappingFileStep", false]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[339, "polaris.ocean.viz.transect.horiz.mesh_to_triangles", false]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[315, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", false]], "modelstep (class in polaris)": [[25, "polaris.ModelStep", false]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[134, "polaris.yaml.mpas_namelist_and_streams_to_yaml", false]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[262, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", false]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[288, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", false]], "ocean (class in polaris.ocean)": [[145, "polaris.ocean.Ocean", false]], "oceaniostep (class in polaris.ocean.model)": [[169, "polaris.ocean.model.OceanIOStep", false]], "oceanmodelstep (class in polaris.ocean.model)": [[175, "polaris.ocean.model.OceanModelStep", false]], "open_model_dataset() (polaris.ocean.model.oceaniostep method)": [[172, "polaris.ocean.model.OceanIOStep.open_model_dataset", false]], "parse_replacements() (in module polaris.namelist)": [[92, "polaris.namelist.parse_replacements", false]], "partition() (polaris.modelstep method)": [[34, "polaris.ModelStep.partition", false]], "plot_convergence() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[151, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", false]], "plot_global_lat_lon_field() (in module polaris.viz)": [[125, "polaris.viz.plot_global_lat_lon_field", false]], "plot_global_mpas_field() (in module polaris.viz)": [[126, "polaris.viz.plot_global_mpas_field", false]], "plot_horiz_field() (in module polaris.viz)": [[127, "polaris.viz.plot_horiz_field", false]], "plot_transect() (in module polaris.ocean.viz)": [[335, "polaris.ocean.viz.plot_transect", false]], "polarisconfigparser (class in polaris.config)": [[59, "polaris.config.PolarisConfigParser", false]], "polarisyaml (class in polaris.yaml)": [[129, "polaris.yaml.PolarisYaml", false]], "process_inputs_and_outputs() (polaris.modelstep method)": [[35, "polaris.ModelStep.process_inputs_and_outputs", false]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep", false]], "read() (in module polaris.streams)": [[119, "polaris.streams.read", false]], "read() (polaris.yaml.polarisyaml class method)": [[130, "polaris.yaml.PolarisYaml.read", false]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step", false]], "remove_step() (polaris.task method)": [[54, "polaris.Task.remove_step", false]], "replace() (in module polaris.namelist)": [[93, "polaris.namelist.replace", false]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[192, "polaris.ocean.tasks.baroclinic_channel.restart.Restart", false]], "restart (class in polaris.ocean.tasks.cosine_bell.restart)": [[228, "polaris.ocean.tasks.cosine_bell.restart.Restart", false]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[193, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", false]], "restartstep (class in polaris.ocean.tasks.cosine_bell.restart)": [[229, "polaris.ocean.tasks.cosine_bell.restart.RestartStep", false]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[195, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", false]], "rpe (class in polaris.ocean.tasks.internal_wave.rpe)": [[277, "polaris.ocean.tasks.internal_wave.rpe.Rpe", false]], "run() (polaris.mesh.icosahedralmeshstep method)": [[76, "polaris.mesh.IcosahedralMeshStep.run", false]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[81, "polaris.mesh.QuasiUniformSphericalMeshStep.run", false]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[85, "polaris.mesh.spherical.SphericalBaseStep.run", false]], "run() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[152, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", false]], "run() (polaris.ocean.ice_shelf.sshadjustment method)": [[164, "polaris.ocean.ice_shelf.SshAdjustment.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[190, "polaris.ocean.tasks.baroclinic_channel.init.Init.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[198, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[202, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", false]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[204, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", false]], "run() (polaris.ocean.tasks.barotropic_gyre.analysis.analysis method)": [[210, "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[216, "polaris.ocean.tasks.barotropic_gyre.init.Init.run", false]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[226, "polaris.ocean.tasks.cosine_bell.init.Init.run", false]], "run() (polaris.ocean.tasks.cosine_bell.validate.validate method)": [[232, "polaris.ocean.tasks.cosine_bell.validate.Validate.run", false]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[234, "polaris.ocean.tasks.cosine_bell.viz.Viz.run", false]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[243, "polaris.ocean.tasks.geostrophic.init.Init.run", false]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[245, "polaris.ocean.tasks.geostrophic.viz.Viz.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[252, "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[254, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", false]], "run() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[256, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", false]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[267, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", false]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[269, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", false]], "run() (polaris.ocean.tasks.internal_wave.init.init method)": [[276, "polaris.ocean.tasks.internal_wave.init.Init.run", false]], "run() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[280, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", false]], "run() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[282, "polaris.ocean.tasks.internal_wave.viz.Viz.run", false]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[293, "polaris.ocean.tasks.manufactured_solution.init.Init.run", false]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[296, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", false]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[302, "polaris.ocean.tasks.single_column.init.Init.run", false]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[304, "polaris.ocean.tasks.single_column.viz.Viz.run", false]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[311, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", false]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[314, "polaris.ocean.tasks.sphere_transport.init.Init.run", false]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[316, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", false]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[318, "polaris.ocean.tasks.sphere_transport.viz.Viz.run", false]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[375, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", false]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[379, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", false]], "run() (polaris.step method)": [[45, "polaris.Step.run", false]], "run_command() (in module polaris.parallel)": [[97, "polaris.parallel.run_command", false]], "run_single_step() (in module polaris.run.serial)": [[113, "polaris.run.serial.run_single_step", false]], "run_tasks() (in module polaris.run.serial)": [[114, "polaris.run.serial.run_tasks", false]], "runtime_setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.runtime_setup", false]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.runtime_setup", false]], "runtime_setup() (polaris.step method)": [[46, "polaris.Step.runtime_setup", false]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[86, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", false]], "seaice (class in polaris.seaice)": [[371, "polaris.seaice.SeaIce", false]], "set_cores_per_node() (in module polaris.parallel)": [[98, "polaris.parallel.set_cores_per_node", false]], "set_model_resources() (polaris.modelstep method)": [[37, "polaris.ModelStep.set_model_resources", false]], "set_resources() (polaris.step method)": [[47, "polaris.Step.set_resources", false]], "set_shared_config() (polaris.step method)": [[48, "polaris.Step.set_shared_config", false]], "set_shared_config() (polaris.task method)": [[55, "polaris.Task.set_shared_config", false]], "setup() (polaris.config.polarisconfigparser method)": [[60, "polaris.config.PolarisConfigParser.setup", false]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[77, "polaris.mesh.IcosahedralMeshStep.setup", false]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[82, "polaris.mesh.QuasiUniformSphericalMeshStep.setup", false]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[87, "polaris.mesh.spherical.SphericalBaseStep.setup", false]], "setup() (polaris.modelstep method)": [[38, "polaris.ModelStep.setup", false]], "setup() (polaris.ocean.convergence.analysis.convergenceanalysis method)": [[153, "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", false]], "setup() (polaris.ocean.model.oceaniostep method)": [[173, "polaris.ocean.model.OceanIOStep.setup", false]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[180, "polaris.ocean.model.OceanModelStep.setup", false]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[191, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", false]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[199, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", false]], "setup() (polaris.ocean.tasks.barotropic_gyre.init.init method)": [[217, "polaris.ocean.tasks.barotropic_gyre.init.Init.setup", false]], "setup() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[294, "polaris.ocean.tasks.manufactured_solution.init.Init.setup", false]], "setup() (polaris.step method)": [[49, "polaris.Step.setup", false]], "setup_config() (in module polaris.run)": [[115, "polaris.run.setup_config", false]], "setup_ssh_adjustment_steps() (polaris.ocean.ice_shelf.iceshelftask method)": [[162, "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", false]], "setup_suite() (in module polaris.suite)": [[123, "polaris.suite.setup_suite", false]], "setup_task() (in module polaris.setup)": [[117, "polaris.setup.setup_task", false]], "setup_tasks() (in module polaris.setup)": [[118, "polaris.setup.setup_tasks", false]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[305, "polaris.ocean.tasks.sphere_transport.SphereTransport", false]], "sphericalbasestep (class in polaris.mesh.spherical)": [[84, "polaris.mesh.spherical.SphericalBaseStep", false]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[159, "polaris.ocean.convergence.spherical.SphericalConvergenceForward", false]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[108, "polaris.remap.MappingFileStep.src_from_lon_lat", false]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[109, "polaris.remap.MappingFileStep.src_from_mpas", false]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[110, "polaris.remap.MappingFileStep.src_from_proj", false]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[263, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", false]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[289, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", false]], "sshadjustment (class in polaris.ocean.ice_shelf)": [[163, "polaris.ocean.ice_shelf.SshAdjustment", false]], "sshforward (class in polaris.ocean.ice_shelf)": [[165, "polaris.ocean.ice_shelf.SshForward", false]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[377, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", false]], "step (class in polaris)": [[40, "polaris.Step", false]], "symlink() (in module polaris.io)": [[62, "polaris.io.symlink", false]], "task (class in polaris)": [[51, "polaris.Task", false]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[200, "polaris.ocean.tasks.baroclinic_channel.threads.Threads", false]], "time_index_from_xtime() (in module polaris.mpas)": [[90, "polaris.mpas.time_index_from_xtime", false]], "unpickle_suite() (in module polaris.run)": [[116, "polaris.run.unpickle_suite", false]], "update() (polaris.yaml.polarisyaml method)": [[131, "polaris.yaml.PolarisYaml.update", false]], "update_cache() (in module polaris.cache)": [[57, "polaris.cache.update_cache", false]], "update_defaults() (in module polaris.streams)": [[120, "polaris.streams.update_defaults", false]], "update_layer_thickness() (in module polaris.ocean.vertical)": [[326, "polaris.ocean.vertical.update_layer_thickness", false]], "update_namelist_pio() (polaris.modelstep method)": [[39, "polaris.ModelStep.update_namelist_pio", false]], "update_permissions() (in module polaris.io)": [[63, "polaris.io.update_permissions", false]], "update_sigma_layer_thickness() (in module polaris.ocean.vertical.sigma)": [[325, "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", false]], "update_tree() (in module polaris.streams)": [[121, "polaris.streams.update_tree", false]], "update_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[331, "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", false]], "update_z_star_layer_thickness() (in module polaris.ocean.vertical.zstar)": [[333, "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", false]], "use_mplstyle() (in module polaris.viz)": [[128, "polaris.viz.use_mplstyle", false]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[201, "polaris.ocean.tasks.baroclinic_channel.validate.Validate", false]], "validate (class in polaris.ocean.tasks.cosine_bell.validate)": [[231, "polaris.ocean.tasks.cosine_bell.validate.Validate", false]], "validate (class in polaris.ocean.tasks.ice_shelf_2d.validate)": [[253, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", false]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[374, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", false]], "validate_baselines() (polaris.step method)": [[50, "polaris.Step.validate_baselines", false]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[203, "polaris.ocean.tasks.baroclinic_channel.viz.Viz", false]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[233, "polaris.ocean.tasks.cosine_bell.viz.Viz", false]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[244, "polaris.ocean.tasks.geostrophic.viz.Viz", false]], "viz (class in polaris.ocean.tasks.ice_shelf_2d.viz)": [[255, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", false]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[268, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", false]], "viz (class in polaris.ocean.tasks.internal_wave.viz)": [[281, "polaris.ocean.tasks.internal_wave.viz.Viz", false]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[295, "polaris.ocean.tasks.manufactured_solution.viz.Viz", false]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[303, "polaris.ocean.tasks.single_column.viz.Viz", false]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[317, "polaris.ocean.tasks.sphere_transport.viz.Viz", false]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[378, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", false]], "write() (in module polaris.namelist)": [[94, "polaris.namelist.write", false]], "write() (in module polaris.provenance)": [[99, "polaris.provenance.write", false]], "write() (in module polaris.streams)": [[122, "polaris.streams.write", false]], "write() (polaris.yaml.polarisyaml method)": [[132, "polaris.yaml.PolarisYaml.write", false]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[320, "polaris.ocean.vertical.grid_1d.write_1d_grid", false]], "write_job_script() (in module polaris.job)": [[66, "polaris.job.write_job_script", false]], "write_model_dataset() (polaris.ocean.model.oceaniostep method)": [[174, "polaris.ocean.model.OceanIOStep.write_model_dataset", false]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[135, "polaris.yaml.yaml_to_mpas_streams", false]]}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [40, 0, 1, "", "Step"], [51, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_configs"], [32, 1, 1, "", "map_yaml_options"], [33, 1, 1, "", "map_yaml_to_namelist"], [34, 1, 1, "", "partition"], [35, 1, 1, "", "process_inputs_and_outputs"], [36, 1, 1, "", "runtime_setup"], [37, 1, 1, "", "set_model_resources"], [38, 1, 1, "", "setup"], [39, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[40, 1, 1, "", "__init__"], [41, 1, 1, "", "add_dependency"], [42, 1, 1, "", "add_input_file"], [43, 1, 1, "", "add_output_file"], [44, 1, 1, "", "constrain_resources"], [45, 1, 1, "", "run"], [46, 1, 1, "", "runtime_setup"], [47, 1, 1, "", "set_resources"], [48, 1, 1, "", "set_shared_config"], [49, 1, 1, "", "setup"], [50, 1, 1, "", "validate_baselines"]], "polaris.Task": [[51, 1, 1, "", "__init__"], [52, 1, 1, "", "add_step"], [53, 1, 1, "", "configure"], [54, 1, 1, "", "remove_step"], [55, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[56, 2, 1, "", "main"]], "polaris.cache": [[57, 2, 1, "", "update_cache"]], "polaris.components": [[58, 2, 1, "", "get_components"]], "polaris.config": [[59, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[59, 1, 1, "", "__init__"], [60, 1, 1, "", "setup"]], "polaris.io": [[61, 2, 1, "", "download"], [62, 2, 1, "", "symlink"], [63, 2, 1, "", "update_permissions"]], "polaris.job": [[64, 2, 1, "", "clean_up_whitespace"], [65, 2, 1, "", "get_slurm_options"], [66, 2, 1, "", "write_job_script"]], "polaris.list": [[67, 2, 1, "", "list_cases"], [68, 2, 1, "", "list_machines"], [69, 2, 1, "", "list_suites"]], "polaris.logging": [[70, 2, 1, "", "log_method_call"]], "polaris.mesh": [[71, 0, 1, "", "IcosahedralMeshStep"], [78, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [73, 1, 1, "", "get_cell_width"], [74, 1, 1, "", "get_subdivisions"], [75, 1, 1, "", "make_jigsaw_mesh"], [76, 1, 1, "", "run"], [77, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[78, 1, 1, "", "__init__"], [79, 1, 1, "", "build_cell_width_lat_lon"], [80, 1, 1, "", "make_jigsaw_mesh"], [81, 1, 1, "", "run"], [82, 1, 1, "", "setup"]], "polaris.mesh.planar": [[83, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[84, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[84, 1, 1, "", "__init__"], [85, 1, 1, "", "run"], [86, 1, 1, "", "save_and_plot_cell_width"], [87, 1, 1, "", "setup"]], "polaris.model_step": [[88, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[89, 2, 1, "", "area_for_field"], [90, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[91, 2, 1, "", "ingest"], [92, 2, 1, "", "parse_replacements"], [93, 2, 1, "", "replace"], [94, 2, 1, "", "write"]], "polaris.ocean": [[145, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[145, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[157, 2, 1, "", "get_resolution_for_task"], [158, 2, 1, "", "get_timestep_for_task"]], "polaris.ocean.convergence.analysis": [[146, 0, 1, "", "ConvergenceAnalysis"]], "polaris.ocean.convergence.analysis.ConvergenceAnalysis": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "compute_error"], [148, 1, 1, "", "convergence_parameters"], [149, 1, 1, "", "exact_solution"], [150, 1, 1, "", "get_output_field"], [151, 1, 1, "", "plot_convergence"], [152, 1, 1, "", "run"], [153, 1, 1, "", "setup"]], "polaris.ocean.convergence.forward": [[154, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.forward.ConvergenceForward": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "compute_cell_count"], [156, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[159, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "compute_cell_count"]], "polaris.ocean.ice_shelf": [[161, 0, 1, "", "IceShelfTask"], [163, 0, 1, "", "SshAdjustment"], [165, 0, 1, "", "SshForward"]], "polaris.ocean.ice_shelf.IceShelfTask": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "setup_ssh_adjustment_steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "run"]], "polaris.ocean.ice_shelf.SshForward": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.mesh.spherical": [[168, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[169, 0, 1, "", "OceanIOStep"], [175, 0, 1, "", "OceanModelStep"], [181, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanIOStep": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "map_from_native_model_vars"], [171, 1, 1, "", "map_to_native_model_vars"], [172, 1, 1, "", "open_model_dataset"], [173, 1, 1, "", "setup"], [174, 1, 1, "", "write_model_dataset"]], "polaris.ocean.model.OceanModelStep": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "compute_cell_count"], [177, 1, 1, "", "constrain_resources"], [178, 1, 1, "", "map_yaml_configs"], [179, 1, 1, "", "map_yaml_options"], [180, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[182, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[183, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[184, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[184, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[185, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[185, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[186, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "compute_cell_count"], [188, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[189, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "run"], [191, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[192, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[192, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[193, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[195, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[197, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"], [199, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[200, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[200, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[201, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[203, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[203, 1, 1, "", "__init__"], [204, 1, 1, "", "run"]], "polaris.ocean.tasks.barotropic_gyre": [[205, 0, 1, "", "BarotropicGyre"], [206, 2, 1, "", "add_barotropic_gyre_tasks"]], "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre": [[205, 1, 1, "", "__init__"]], "polaris.ocean.tasks.barotropic_gyre.analysis": [[207, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "compute_error"], [209, 1, 1, "", "exact_solution"], [210, 1, 1, "", "run"]], "polaris.ocean.tasks.barotropic_gyre.forward": [[211, 0, 1, "", "Forward"], [214, 2, 1, "", "compute_max_time_step"]], "polaris.ocean.tasks.barotropic_gyre.forward.Forward": [[211, 1, 1, "", "__init__"], [212, 1, 1, "", "compute_cell_count"], [213, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.barotropic_gyre.init": [[215, 0, 1, "", "Init"]], "polaris.ocean.tasks.barotropic_gyre.init.Init": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "run"], [217, 1, 1, "", "setup"]], "polaris.ocean.tasks.cosine_bell": [[218, 0, 1, "", "CosineBell"], [220, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[218, 1, 1, "", "__init__"], [219, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[221, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[221, 1, 1, "", "__init__"], [222, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.decomp": [[223, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.cosine_bell.decomp.Decomp": [[223, 1, 1, "", "__init__"]], "polaris.ocean.tasks.cosine_bell.forward": [[224, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[224, 1, 1, "", "__init__"]], "polaris.ocean.tasks.cosine_bell.init": [[225, 0, 1, "", "Init"], [227, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[225, 1, 1, "", "__init__"], [226, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.restart": [[228, 0, 1, "", "Restart"], [229, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.cosine_bell.restart.Restart": [[228, 1, 1, "", "__init__"]], "polaris.ocean.tasks.cosine_bell.restart.RestartStep": [[229, 1, 1, "", "__init__"], [230, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.validate": [[231, 0, 1, "", "Validate"]], "polaris.ocean.tasks.cosine_bell.validate.Validate": [[231, 1, 1, "", "__init__"], [232, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[233, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[235, 0, 1, "", "Geostrophic"], [237, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[235, 1, 1, "", "__init__"], [236, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[238, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[238, 1, 1, "", "__init__"], [239, 1, 1, "", "exact_solution"], [240, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[241, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[241, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[242, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[244, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[244, 1, 1, "", "__init__"], [245, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d": [[246, 2, 1, "", "add_ice_shelf_2d_tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default": [[247, 0, 1, "", "Default"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[247, 1, 1, "", "__init__"]], "polaris.ocean.tasks.ice_shelf_2d.forward": [[248, 0, 1, "", "Forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "compute_cell_count"], [250, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.ice_shelf_2d.init": [[251, 0, 1, "", "Init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.validate": [[253, 0, 1, "", "Validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[253, 1, 1, "", "__init__"], [254, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.viz": [[255, 0, 1, "", "Viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[255, 1, 1, "", "__init__"], [256, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[257, 0, 1, "", "InertialGravityWave"], [258, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[257, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[259, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[259, 1, 1, "", "__init__"], [260, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[261, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[261, 1, 1, "", "__init__"], [262, 1, 1, "", "normal_velocity"], [263, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[264, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[264, 1, 1, "", "__init__"], [265, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[266, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[266, 1, 1, "", "__init__"], [267, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[268, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[268, 1, 1, "", "__init__"], [269, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave": [[270, 2, 1, "", "add_internal_wave_tasks"]], "polaris.ocean.tasks.internal_wave.default": [[271, 0, 1, "", "Default"]], "polaris.ocean.tasks.internal_wave.default.Default": [[271, 1, 1, "", "__init__"]], "polaris.ocean.tasks.internal_wave.forward": [[272, 0, 1, "", "Forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[272, 1, 1, "", "__init__"], [273, 1, 1, "", "compute_cell_count"], [274, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.internal_wave.init": [[275, 0, 1, "", "Init"]], "polaris.ocean.tasks.internal_wave.init.Init": [[275, 1, 1, "", "__init__"], [276, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.rpe": [[277, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[277, 1, 1, "", "__init__"], [278, 1, 1, "", "configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis": [[279, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[279, 1, 1, "", "__init__"], [280, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.viz": [[281, 0, 1, "", "Viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[281, 1, 1, "", "__init__"], [282, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[283, 0, 1, "", "ManufacturedSolution"], [284, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[283, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[285, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[285, 1, 1, "", "__init__"], [286, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[287, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[287, 1, 1, "", "__init__"], [288, 1, 1, "", "normal_velocity"], [289, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[290, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[290, 1, 1, "", "__init__"], [291, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[292, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[292, 1, 1, "", "__init__"], [293, 1, 1, "", "run"], [294, 1, 1, "", "setup"]], "polaris.ocean.tasks.manufactured_solution.viz": [[295, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[295, 1, 1, "", "__init__"], [296, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[297, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[298, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[298, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[299, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[299, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[300, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[300, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[301, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[301, 1, 1, "", "__init__"], [302, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[303, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[303, 1, 1, "", "__init__"], [304, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[305, 0, 1, "", "SphereTransport"], [307, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[305, 1, 1, "", "__init__"], [306, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[308, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[308, 1, 1, "", "__init__"], [309, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[310, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[310, 1, 1, "", "__init__"], [311, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[312, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[312, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[313, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[313, 1, 1, "", "__init__"], [314, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[315, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[315, 1, 1, "", "__init__"], [316, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[317, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[317, 1, 1, "", "__init__"], [318, 1, 1, "", "run"]], "polaris.ocean.vertical": [[321, 2, 1, "", "init_vertical_coord"], [326, 2, 1, "", "update_layer_thickness"]], "polaris.ocean.vertical.grid_1d": [[319, 2, 1, "", "generate_1d_grid"], [320, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical.partial_cells": [[322, 2, 1, "", "alter_bottom_depth"], [323, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.sigma": [[324, 2, 1, "", "init_sigma_vertical_coord"], [325, 2, 1, "", "update_sigma_layer_thickness"]], "polaris.ocean.vertical.zlevel": [[327, 2, 1, "", "compute_min_max_level_cell"], [328, 2, 1, "", "compute_z_level_layer_thickness"], [329, 2, 1, "", "compute_z_level_resting_thickness"], [330, 2, 1, "", "init_z_level_vertical_coord"], [331, 2, 1, "", "update_z_level_layer_thickness"]], "polaris.ocean.vertical.zstar": [[332, 2, 1, "", "init_z_star_vertical_coord"], [333, 2, 1, "", "update_z_star_layer_thickness"]], "polaris.ocean.viz": [[334, 2, 1, "", "compute_transect"], [335, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[336, 2, 1, "", "find_planar_transect_cells_and_weights"], [337, 2, 1, "", "find_spherical_transect_cells_and_weights"], [338, 2, 1, "", "make_triangle_tree"], [339, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[340, 2, 1, "", "find_transect_levels_and_weights"], [341, 2, 1, "", "interp_mpas_to_transect_cells"], [342, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[95, 2, 1, "", "get_available_parallel_resources"], [96, 2, 1, "", "get_parallel_command"], [97, 2, 1, "", "run_command"], [98, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[99, 2, 1, "", "write"]], "polaris.remap": [[100, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[100, 1, 1, "", "__init__"], [101, 1, 1, "", "dst_from_lon_lat"], [102, 1, 1, "", "dst_from_mpas"], [103, 1, 1, "", "dst_from_points"], [104, 1, 1, "", "dst_from_proj"], [105, 1, 1, "", "dst_global_lon_lat"], [106, 1, 1, "", "get_remapper"], [107, 1, 1, "", "runtime_setup"], [108, 1, 1, "", "src_from_lon_lat"], [109, 1, 1, "", "src_from_mpas"], [110, 1, 1, "", "src_from_proj"]], "polaris.run": [[111, 2, 1, "", "complete_step_run"], [112, 2, 1, "", "load_dependencies"], [115, 2, 1, "", "setup_config"], [116, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[113, 2, 1, "", "run_single_step"], [114, 2, 1, "", "run_tasks"]], "polaris.seaice": [[371, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[371, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[372, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[373, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[373, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[374, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[374, 1, 1, "", "__init__"], [375, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[376, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[376, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[377, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[377, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[378, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[378, 1, 1, "", "__init__"], [379, 1, 1, "", "run"]], "polaris.setup": [[117, 2, 1, "", "setup_task"], [118, 2, 1, "", "setup_tasks"]], "polaris.streams": [[119, 2, 1, "", "read"], [120, 2, 1, "", "update_defaults"], [121, 2, 1, "", "update_tree"], [122, 2, 1, "", "write"]], "polaris.suite": [[123, 2, 1, "", "setup_suite"]], "polaris.validate": [[124, 2, 1, "", "compare_variables"]], "polaris.viz": [[125, 2, 1, "", "plot_global_lat_lon_field"], [126, 2, 1, "", "plot_global_mpas_field"], [127, 2, 1, "", "plot_horiz_field"], [128, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[129, 0, 1, "", "PolarisYaml"], [133, 2, 1, "", "main_mpas_to_yaml"], [134, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [135, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "read"], [131, 1, 1, "", "update"], [132, 1, 1, "", "write"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "terms": {"": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 40, 42, 43, 48, 51, 52, 53, 55, 57, 59, 85, 113, 115, 120, 123, 141, 144, 233, 244, 317, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 380, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 403, 404, 405, 406, 409, 411, 412, 413, 415, 416, 417, 420], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 73, 101, 105, 108, 124, 126, 127, 136, 137, 138, 139, 140, 141, 142, 144, 321, 324, 329, 330, 332, 335, 336, 337, 345, 348, 349, 350, 352, 357, 358, 360, 364, 367, 368, 381, 384, 387, 388, 390, 394, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420], "00": [1, 14, 18, 144, 366, 381, 387, 393, 395, 416], "0000": 387, "00000000000000e": 18, "0000_00": [14, 387], "0001": [14, 144, 387], "0002": 387, "0024_00": 14, "003": 410, "0030_00": 14, "00_00": [366, 381, 387], "01": [1, 14, 144, 381, 387, 407, 410, 414, 419], "0100": 387, "01_00": [14, 144, 381, 387], "02": [1, 390], "0200": 366, "03": 1, "04": 141, "05": [387, 406], "05_degre": 11, "05_degree_20220729": 364, "06": 1, "08": [1, 387, 401], "0_chrysalis_gnu_openmpi": 6, "0_chrysalis_gnu_openmpi_albani": 6, "0_chrysalis_intel_openmpi": 6, "0_chrysalis_intel_openmpi_petsc": 6, "0_mpich": 416, "0e": [14, 411, 414], "1": [5, 7, 9, 13, 14, 17, 18, 19, 40, 73, 136, 137, 138, 139, 141, 142, 144, 165, 184, 186, 200, 211, 248, 272, 298, 299, 300, 321, 324, 330, 332, 335, 336, 337, 346, 347, 348, 349, 350, 352, 354, 356, 357, 358, 359, 361, 362, 364, 366, 368, 381, 384, 387, 388, 390, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416], "10": [1, 9, 13, 73, 141, 343, 346, 352, 354, 356, 360, 361, 387, 388, 394, 396, 398, 401, 403, 405, 406, 407, 409, 410, 411, 412, 414, 422], "100": [352, 354, 356, 359, 398, 409, 411, 414], "1000": [387, 388, 398, 401, 402, 406, 409, 411], "10000": [336, 337, 409, 411], "101": [403, 405, 412, 413], "1016": 410, "1040": 407, "1050": 407, "10e": 402, "10km": [5, 18, 346, 387, 401, 416, 421, 422], "11": [13, 73, 141, 387, 402], "12": [6, 13, 73, 127, 335, 340, 348, 349, 350, 357, 358, 383, 387, 390, 403, 404, 405, 406, 412, 413, 416, 419], "120": [13, 73, 144, 365, 403, 404, 405, 406, 412, 413], "1200": 402, "120km": [1, 5, 366], "127": 384, "128": [17, 365, 390, 391, 395], "13": [13, 73, 387, 401], "1384565": [14, 387], "14": [384, 404], "14159265": 404, "146": 398, "15": [13, 14, 73, 346, 352, 387, 401, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 420], "150": [403, 404, 405, 410, 412, 413], "150km": 1, "151209": 11, "156": 419, "159": 384, "16": [388, 414, 416], "160": [387, 401], "160e3": 13, "164": 384, "17": 416, "173": 384, "18": [1, 6, 388, 390], "180": [19, 72, 79, 80, 86, 105, 339, 403, 404, 405, 412, 413], "180km": 1, "19": 6, "190": 407, "1950": 402, "1992": [404, 406], "1_": 141, "1_anvil_gnu_openmpi": 136, "1_anvil_intel_impi": [136, 141], "1_chicoma": 137, "1_chrysalis_gnu_openmpi": 138, "1_chrysalis_intel_openmpi": 138, "1_compy_gnu_openmpi": 139, "1_compy_intel_impi": 139, "1_frontier_crayclang_mpich": 140, "1_frontier_gnu_mpich": 140, "1_pm": 142, "1d": [101, 105, 108, 125, 144, 319, 320, 321, 322, 323, 324, 327, 328, 330, 332, 352], "1e": 409, "1e3": [13, 364, 387], "1km": [387, 401, 416], "1m": [381, 419], "1thread": [18, 346, 401], "2": [2, 6, 13, 14, 15, 18, 41, 127, 141, 144, 200, 246, 251, 345, 346, 348, 349, 350, 352, 357, 358, 362, 365, 368, 374, 381, 387, 388, 390, 394, 398, 399, 401, 402, 404, 406, 407, 408, 409, 410, 411, 416], "20": [1, 195, 277, 346, 352, 355, 365, 387, 401, 402, 410, 414], "200": [126, 144, 335, 354, 356, 387, 401, 407, 409, 411, 414], "2000": [144, 360, 381, 383, 387, 407, 419], "2000m": [360, 416], "200128": 11, "2004": 398, "2011": 410, "2012": [401, 403, 405, 410, 412, 413], "2015": [144, 387, 401], "2017": 398, "2019": 390, "2020": 141, "2022": 388, "2023": [1, 17, 409, 411], "20230414": 17, "20_00": 387, "20km": 410, "210": [398, 403, 404, 405, 412, 413], "210131_test_new_branch": 416, "210km": [1, 5], "2123666": 404, "22": 141, "221": 398, "23": 1, "230914": 5, "24": [144, 349, 404, 419], "240": [13, 73, 348, 349, 350, 351, 357, 358, 388, 403, 404, 405, 412, 413], "240km": [1, 5, 11, 168, 366], "245": 6, "246": 6, "25": [144, 354, 356, 402, 403, 404, 405, 409, 411, 412, 413, 414], "250": [398, 410], "2500": 398, "250km": 410, "256": [365, 390, 395], "25_extrap": 17, "28": [388, 398, 403], "288": [403, 405, 412, 413], "2ab": 2, "2d": [101, 105, 108, 125, 163, 247, 253, 340, 352, 399, 408], "2e": [387, 401], "2thread": [18, 401], "3": [13, 73, 140, 141, 144, 336, 337, 346, 347, 355, 364, 365, 368, 384, 387, 388, 394, 395, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416], "30": [13, 14, 73, 144, 360, 387, 393, 395, 401, 407, 414, 415, 420], "300": [403, 404, 405, 412, 413, 415], "3000": [388, 406], "304": 141, "314": 384, "32": [141, 365, 416], "33": [388, 410, 416], "34": [360, 407, 416], "35": [387, 401, 403, 404, 405, 406, 410, 412, 413, 414, 415, 416, 420], "35n": 419, "36": [389, 394, 414, 416], "369": 384, "37": 416, "38": [1, 416], "395": 384, "3_chrysalis_intel_openmpi": 387, "3a": 404, "3d": 335, "3rd": [364, 387], "3wbgy5": 13, "4": [5, 7, 9, 13, 14, 126, 141, 144, 184, 185, 346, 354, 355, 356, 359, 361, 364, 366, 387, 388, 394, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 416], "40": [392, 406, 407], "400": 414, "40e3": [387, 401], "44": 407, "45": 390, "48": 405, "480": [403, 404, 405, 412, 413], "480km": 366, "4e2": 402, "4km": [387, 401, 416], "4proc": [387, 401], "4th": [403, 404, 405, 406, 412, 413], "4x4": 414, "5": [13, 14, 73, 126, 141, 144, 195, 277, 346, 351, 364, 365, 367, 384, 387, 388, 401, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 420], "50": [346, 354, 355, 356, 387, 401, 407, 409, 411, 414], "500": [387, 388, 398, 401, 410], "5000": 402, "500e3": 13, "500km": [387, 401, 410], "50e3": 410, "51": 398, "5500": 398, "5550": 398, "55742015": 62, "576": 404, "59": 1, "5degre": [101, 105, 108], "5e": 414, "5km": [355, 407, 410], "5w": 419, "5x0": [101, 105, 108], "6": [13, 73, 335, 336, 337, 364, 387, 396, 399, 401, 403, 412, 414, 416, 417], "60": [13, 73, 144, 348, 349, 350, 351, 357, 358, 398, 403, 404, 405, 407, 412, 413], "6000": [388, 398], "60km": [1, 5, 366, 403, 404, 405, 412, 413], "63": 398, "64": [17, 393, 398], "66": 403, "6667": 404, "7": [13, 73, 141, 387, 395, 403, 404, 407, 413, 416], "71": 419, "720": 19, "75": [144, 404, 407], "77": 368, "7728169": [14, 62, 387], "7ohuiwq": 141, "8": [13, 73, 126, 141, 144, 346, 368, 387, 388, 401, 404, 409, 411, 413, 416], "80": 398, "8080": 384, "81": 141, "86": 405, "8844": 395, "8proc": [387, 401], "9": [13, 19, 73, 141, 387, 403, 404, 405, 412, 413, 416], "90": [72, 79, 80, 86, 364, 403, 404, 405, 407, 412, 413], "90c": 364, "90km": [1, 5], "91": 364, "91c": 364, "92": [364, 398], "94": [13, 73, 406], "94e4": 406, "95": 384, "960": 414, "99": [403, 405, 412, 413], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 32, 33, 40, 41, 42, 43, 44, 48, 51, 52, 55, 58, 59, 60, 67, 71, 72, 75, 78, 79, 80, 84, 92, 95, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 114, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 141, 144, 146, 154, 159, 161, 163, 165, 169, 170, 171, 174, 175, 178, 179, 181, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 207, 211, 215, 218, 221, 223, 224, 225, 228, 229, 231, 233, 235, 238, 241, 242, 244, 248, 251, 253, 255, 257, 259, 264, 266, 268, 271, 272, 275, 277, 279, 281, 283, 285, 290, 292, 295, 299, 301, 303, 305, 308, 310, 312, 313, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 346, 347, 352, 354, 355, 356, 359, 361, 364, 365, 366, 367, 368, 373, 374, 376, 378, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 419, 420], "And": [7, 14, 368, 387], "As": [1, 4, 5, 6, 9, 11, 13, 18, 73, 144, 360, 364, 365, 366, 367, 368, 387, 388, 398, 402, 403, 404, 405, 406, 412, 413, 414, 421], "At": [14, 40, 51, 362, 363, 366, 387, 396, 406], "Be": [6, 395], "But": [13, 141, 360, 364, 367, 368, 387, 388, 394], "By": [5, 14, 18, 41, 42, 144, 343, 361, 364, 366, 380, 387, 388, 401, 404, 407, 414], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 25, 118, 136, 141, 144, 148, 149, 222, 239, 260, 286, 309, 345, 346, 347, 352, 354, 355, 356, 359, 364, 367, 368, 387, 388, 396, 399, 403, 404, 405, 406, 409, 411, 412, 413, 416, 417, 422], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 26, 31, 32, 37, 40, 42, 47, 48, 51, 52, 53, 55, 62, 96, 97, 98, 100, 111, 124, 127, 136, 137, 138, 139, 140, 141, 142, 144, 154, 159, 161, 165, 170, 171, 173, 175, 178, 179, 181, 186, 211, 248, 272, 294, 299, 346, 347, 352, 355, 364, 366, 367, 368, 381, 384, 385, 387, 388, 394, 395, 398, 403, 404, 405, 406, 407, 412, 413, 415, 416, 420], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 40, 141, 144, 336, 337, 340, 349, 360, 362, 364, 365, 366, 367, 368, 386, 387, 388, 394, 398, 404, 406, 407, 410, 415, 416, 420, 421, 422], "It": [2, 5, 6, 9, 14, 17, 40, 46, 125, 144, 348, 349, 350, 351, 352, 354, 356, 357, 358, 360, 364, 365, 366, 367, 368, 385, 387, 388, 394, 402, 404, 409, 411, 412, 413], "No": [11, 386, 409, 411], "Not": 127, "ON": 368, "On": [6, 7, 13, 141, 368, 394], "One": [9, 13, 146, 154, 159, 218, 223, 224, 228, 229, 235, 241, 264, 268, 290, 295, 305, 308, 312, 387, 416, 421], "Or": [5, 364, 388], "That": [364, 367, 385, 387, 416], "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 40, 41, 42, 43, 46, 49, 51, 52, 54, 57, 59, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 83, 84, 88, 89, 90, 92, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 134, 135, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 181, 184, 185, 186, 187, 189, 191, 192, 193, 195, 197, 199, 200, 201, 203, 205, 207, 208, 211, 212, 214, 215, 217, 218, 221, 222, 223, 224, 225, 228, 229, 231, 233, 235, 238, 239, 240, 241, 242, 244, 247, 248, 249, 251, 253, 255, 257, 259, 260, 264, 265, 266, 268, 271, 272, 273, 275, 277, 279, 281, 283, 285, 286, 290, 291, 292, 295, 298, 299, 300, 301, 303, 305, 308, 309, 310, 312, 313, 315, 317, 321, 322, 323, 324, 327, 328, 329, 330, 332, 334, 335, 336, 337, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 374, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422], "Then": [4, 6, 7, 11, 14, 136, 137, 138, 139, 140, 141, 142, 343, 346, 347, 352, 354, 355, 356, 359, 361, 364, 366, 380, 387, 394, 401, 406, 407, 416], "There": [1, 5, 6, 13, 19, 321, 324, 330, 332, 340, 349, 359, 360, 362, 364, 367, 368, 384, 387, 388, 389, 390, 391, 392, 393, 395, 404, 409, 410, 411, 416], "These": [5, 6, 8, 9, 14, 20, 40, 141, 144, 343, 345, 361, 364, 366, 367, 368, 380, 381, 386, 387, 388, 394, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 421, 422], "To": [2, 5, 6, 12, 17, 18, 124, 140, 141, 142, 144, 343, 364, 367, 368, 380, 381, 387, 389, 390, 394, 398, 403, 404, 405, 412, 413, 416], "With": 368, "_": [100, 141, 364, 366, 368, 387, 410, 414], "__init__": [9, 17, 18, 20, 25, 40, 51, 59, 70, 71, 78, 84, 100, 129, 144, 145, 146, 154, 159, 161, 163, 165, 169, 175, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 205, 207, 211, 215, 218, 221, 223, 224, 225, 228, 229, 231, 233, 235, 238, 241, 242, 244, 247, 248, 251, 253, 255, 257, 259, 261, 264, 266, 268, 271, 272, 275, 277, 279, 281, 283, 285, 287, 290, 292, 295, 298, 299, 300, 301, 303, 305, 308, 310, 312, 313, 315, 317, 360, 361, 364, 366, 367, 371, 373, 374, 376, 377, 378, 385, 387], "__int__": 17, "__version__": 368, "_add_rpe_and_analysis_step": 9, "_add_step": 387, "_all": 118, "_build": 4, "_cached_fil": [8, 364], "_cosine_bel": 366, "_database_root": 42, "_forward_": 366, "_get_basic_config": 9, "_init_": 366, "_map_": 366, "_nu_": 387, "_plot": 387, "_resolut": 366, "_run_test": 387, "_setup_step": [366, 387], "_tidal_forc": 407, "_viz_": 366, "_with_viz": 366, "ab": 387, "abil": [1, 7, 403, 412], "abl": [5, 6, 136, 137, 138, 139, 140, 142, 144, 364, 365, 368, 387, 394, 416], "about": [1, 5, 6, 7, 8, 12, 14, 40, 100, 129, 144, 360, 364, 366, 367, 368, 387, 388, 390, 406, 413], "abov": [5, 7, 14, 18, 19, 141, 340, 360, 362, 364, 365, 366, 367, 368, 387, 388, 403, 404, 405, 406, 412, 414, 416, 421], "abruptli": 407, "absenc": 398, "absolut": [5, 9, 40, 42, 59, 118, 123, 343, 361, 364, 368, 380, 416], "ac": [6, 387], "accept": [354, 356], "access": [11, 41, 366, 367, 368, 387, 389, 394, 395], "accommod": [9, 25, 37, 40, 47, 96, 97, 175], "accomplish": [5, 11, 17, 364, 367], "accord": [227, 406, 409, 411, 416], "accordingli": [19, 98], "account": [13, 83, 368, 387, 389, 390, 392, 393, 394, 395, 416], "account_nam": 390, "accountutilizationbyus": 390, "accuraci": [409, 411], "achiev": [74, 365], "acm": [389, 416], "acme_high": 389, "across": [1, 6, 7, 9, 14, 19, 144, 346, 349, 360, 364, 365, 366, 367, 368, 385, 387, 397, 401, 403, 404, 405, 412, 413], "act": [5, 367, 398], "activ": [6, 19, 141, 394, 395, 416], "actual": [2, 5, 6, 12, 364, 366, 368, 387], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 41, 42, 49, 52, 53, 54, 59, 144, 168, 181, 183, 191, 199, 206, 217, 220, 237, 246, 247, 258, 270, 284, 297, 307, 321, 324, 330, 332, 360, 361, 366, 368, 372, 381, 386, 389, 390, 391, 392, 393, 395, 406, 416], "adcroft": 398, "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 41, 42, 43, 52, 53, 54, 60, 77, 82, 87, 119, 120, 121, 130, 131, 134, 135, 141, 144, 153, 167, 168, 183, 188, 194, 206, 213, 220, 230, 237, 246, 250, 258, 270, 274, 284, 297, 307, 360, 361, 364, 366, 367, 368, 372, 385, 387, 388, 393, 395, 403, 404, 405, 412, 413], "add_baroclinic_channel_task": [7, 9, 361, 367], "add_cosine_bell_task": [144, 361], "add_depend": 364, "add_dome_task": 360, "add_from_packag": [9, 11, 17, 144, 364, 366, 367, 387], "add_inertial_gravity_wave_task": 361, "add_input_fil": [11, 17, 18, 41, 364, 366, 387], "add_manufactured_solution_task": 361, "add_mesh_dens": 13, "add_metadata": 388, "add_model_config_opt": [14, 25, 144, 364, 366, 387], "add_namelist_fil": [14, 25, 144, 364, 366], "add_output_fil": [18, 41, 364, 366, 387], "add_single_column_task": 361, "add_spherical_base_mesh_step": [144, 366], "add_step": [9, 366, 387], "add_streams_fil": [14, 25, 144, 364, 366], "add_task": [9, 360, 361], "add_test_cas": 387, "add_test_group": 387, "add_yaml_fil": [9, 14, 25, 144, 364, 366, 387], "addit": [2, 6, 7, 9, 18, 40, 144, 340, 341, 342, 352, 359, 360, 361, 362, 364, 366, 367, 368, 387, 404, 406, 407, 410], "addition": [346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364, 389, 390, 391, 392, 393, 395], "address": [388, 403, 412], "adequ": 402, "adher": [367, 387], "adjac": [13, 339, 398], "adjust": [14, 141, 144, 163, 164, 165, 343, 352, 388, 407], "adjust_vari": [396, 407], "adjusted_init": 364, "adjustsshmask": 396, "admittedli": 13, "adopt": 387, "advanc": [386, 387], "advantag": [9, 14, 141, 366, 367, 387, 394], "advect": [218, 271, 272, 277, 305, 348, 349, 350, 351, 355, 357, 358, 403, 404, 405, 409, 410, 411, 412, 413, 414], "affect": [1, 6, 348, 350, 357, 358, 364, 368, 387, 406], "after": [1, 5, 6, 7, 9, 11, 17, 18, 19, 40, 42, 43, 64, 85, 106, 111, 141, 144, 322, 323, 326, 343, 348, 349, 350, 351, 357, 358, 361, 364, 366, 368, 380, 387, 388, 390, 393, 395, 404, 406, 416, 419], "ag": [300, 301, 303], "again": [5, 6, 14, 139, 144, 343, 364, 366, 368, 384, 416], "against": [5, 10, 43, 50, 124, 144, 154, 159, 346, 347, 352, 354, 355, 356, 359, 364, 383, 387, 400, 402], "aim": 387, "al": [144, 387, 398, 401, 403, 404, 405, 406, 409, 410, 411, 412, 413], "albani": [5, 136, 138, 139, 361, 388, 416], "albany_support": 6, "ale_vertical_grid": 14, "algebra": 6, "algorithm": [9, 14, 144, 299, 346, 347, 354, 355, 356, 364, 387], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 40, 47, 51, 58, 96, 97, 99, 118, 124, 141, 144, 145, 148, 149, 162, 165, 175, 186, 211, 222, 239, 248, 260, 272, 286, 299, 309, 321, 324, 330, 332, 343, 346, 355, 360, 361, 362, 364, 365, 366, 367, 368, 371, 380, 385, 386, 387, 388, 394, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 415, 416, 417, 420, 422], "all_pass": [18, 124], "all_proxi": 384, "allow": [1, 2, 6, 8, 17, 18, 25, 37, 40, 47, 59, 124, 141, 144, 175, 336, 337, 364, 385, 387, 388, 394, 398, 403, 404, 405, 412, 413, 414, 422], "almost": [2, 9], "along": [11, 14, 19, 141, 335, 336, 337, 346, 352, 355, 364, 386, 387, 402], "alpha": [6, 136, 137, 138, 139, 140, 141, 142, 368, 387, 406], "alphabet": [361, 387], "alreadi": [1, 4, 5, 6, 11, 14, 52, 53, 62, 124, 141, 144, 168, 299, 326, 364, 366, 367, 368, 387, 388, 394, 398, 403, 404, 405, 412, 413, 416], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 35, 46, 59, 124, 125, 141, 144, 321, 324, 330, 332, 335, 336, 337, 340, 343, 347, 349, 352, 354, 356, 359, 360, 361, 362, 364, 366, 367, 368, 387, 388, 394, 395, 396, 398, 402, 404, 406, 409, 410, 411, 415, 416, 420, 422], "alter": [322, 323, 364, 366, 368, 386, 387, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415], "altern": [5, 13, 364, 381, 416], "although": [12, 144], "alwai": [6, 7, 9, 12, 59, 141, 149, 222, 239, 260, 286, 339, 343, 361, 364, 366, 367, 368, 380, 385, 387, 388, 407], "amdclang": 141, "amdclanggpu": 141, "among": [341, 342, 360, 362, 368, 387], "amount": [6, 25, 37, 40, 47, 175, 364, 397, 414], "amplitid": [261, 287], "amplitud": [402, 403, 405, 407, 409, 410, 411, 412, 413], "amplitude_width_dist": 410, "amplitude_width_frac": 410, "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 35, 40, 41, 42, 43, 62, 71, 73, 74, 102, 109, 119, 121, 125, 134, 141, 146, 151, 171, 175, 225, 242, 313, 335, 336, 337, 338, 339, 341, 342, 346, 348, 349, 350, 351, 352, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 384, 385, 386, 388, 390, 394, 396, 398, 402, 406, 407, 409, 413, 416, 421, 422], "analogi": 387, "analys": [207, 259, 285], "analysi": [1, 6, 9, 19, 144, 346, 355, 366, 367, 385, 386, 388, 402, 403, 404, 405, 409, 410, 411, 412, 413, 422], "analysis_depend": 366, "analyt": [347, 402, 409, 422], "analyz": [144, 146, 221, 238, 308, 310, 315, 387, 403, 404, 405, 412, 413], "angl": [261, 287, 406], "angleedg": [261, 287], "angular": [261, 287], "ani": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 36, 49, 65, 111, 117, 118, 191, 199, 217, 360, 361, 362, 364, 365, 366, 367, 368, 370, 387, 388, 394, 401, 404, 414, 415, 416, 419, 420], "anl": [11, 364, 388], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 31, 32, 40, 41, 42, 124, 164, 248, 343, 346, 352, 355, 360, 362, 364, 366, 367, 368, 385, 387, 388, 401, 404, 407, 416, 421, 422], "antarct": 388, "antarctica": 388, "anticip": [5, 387], "antimeridian": 19, "anvil": [5, 6, 141, 364, 388, 394, 416], "anymor": 6, "anyon": 368, "anyth": 387, "anytim": 384, "anywher": [8, 12, 141, 368], "api": [7, 12, 386, 387], "app": [392, 416], "appear": [2, 141, 364, 387], "append": [25, 40, 42, 51, 100, 163, 165, 175, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 207, 211, 231, 248, 251, 253, 255, 271, 272, 275, 277, 279, 299, 364, 374, 376, 378, 406], "appli": [7, 13, 14, 67, 144, 248, 345, 360, 368, 387, 401, 404, 407, 414, 415, 420], "applic": [364, 367, 368, 415, 420], "apport": 144, "approach": [364, 367, 368, 384, 387, 398], "appropri": [2, 5, 6, 14, 15, 26, 83, 89, 141, 144, 170, 171, 172, 174, 343, 346, 347, 352, 354, 355, 356, 359, 361, 362, 364, 368, 380, 386, 387, 388, 394, 415, 416, 420], "approxim": [13, 71, 73, 74, 78, 144, 155, 160, 166, 176, 187, 212, 214, 249, 265, 273, 291, 346, 347, 354, 355, 356, 368, 387], "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 26, 31, 32, 36, 37, 40, 42, 46, 47, 51, 59, 63, 83, 96, 97, 100, 113, 114, 115, 118, 127, 131, 141, 144, 146, 165, 170, 175, 178, 179, 181, 186, 211, 248, 268, 272, 295, 299, 321, 324, 327, 330, 332, 334, 336, 337, 338, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422], "arang": 9, "arbitrari": 406, "arbitrarili": 414, "arch": 141, "archiv": [390, 395], "arctic": [388, 419], "area": [89, 336, 337, 387], "area_for_field": 15, "aren": [6, 11, 40, 41, 141, 364, 367, 368, 387, 421], "arg": [7, 12, 40, 96, 97, 364], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 38, 40, 96, 97, 107, 125, 144, 169, 172, 346, 355, 361, 364, 366, 367, 368, 387, 415, 420, 421], "argv": 395, "arisen": 364, "armpl": 6, "around": [349, 387, 388, 401, 403, 404, 405, 410, 412, 413], "arrai": [9, 15, 72, 79, 80, 86, 125, 144, 319, 320, 322, 323, 327, 328, 334, 341, 342, 387], "arrm10to60": 398, "asai": [1, 388], "ask": 141, "aspect": [19, 127, 387], "aspir": 364, "assess": [409, 411], "assign": [354, 356, 404], "assoc": 390, "associ": [9, 13, 14, 15, 19, 144, 321, 324, 330, 332, 336, 337, 346, 348, 350, 355, 357, 358, 364, 366, 368, 385, 407], "assum": [53, 119, 130, 141, 368, 387, 395, 401, 402], "at_setup": [14, 30, 156, 167, 188, 194, 213, 230, 250, 274, 387], "atmospher": 419, "attempt": [6, 141, 386, 394], "attr": [364, 387], "attribut": [1, 8, 9, 12, 13, 14, 46, 48, 55, 104, 110, 111, 146, 268, 295, 337, 354, 356, 387], "augment": 367, "author": 388, "auto": 3, "autodetect": 388, "autom": 386, "automat": [6, 7, 9, 12, 14, 19, 141, 144, 364, 367, 368, 387, 388, 389, 391, 392, 394, 395, 416], "autopep8": 367, "autosummari": 7, "avail": [1, 4, 5, 7, 11, 14, 19, 25, 26, 31, 32, 37, 40, 43, 44, 47, 58, 67, 95, 96, 97, 141, 144, 165, 175, 178, 179, 186, 211, 248, 272, 299, 346, 348, 349, 350, 351, 355, 357, 358, 364, 366, 367, 368, 387, 389, 390, 391, 392, 393, 395, 401, 406, 407, 416, 421], "available_cor": 177, "available_resourc": [44, 95], "availi": [409, 411], "averag": [336, 337], "avoid": [5, 364, 387], "awai": 2, "awar": [6, 7, 141, 387, 394], "awkward": 387, "ax": [127, 335], "axi": [335, 364, 387, 413], "b": [2, 5, 6, 368, 385, 387, 416], "back": [7, 387, 390, 416], "background": [367, 403, 405, 410, 412, 413], "background_salin": 410, "balanc": [19, 235, 351, 352, 364, 387, 402, 403, 405, 406, 412, 413], "bar": [63, 127], "baroclin": [7, 9, 14, 183, 184, 185, 186, 189, 192, 195, 197, 200, 201, 203, 215, 248, 299, 346, 361, 364, 387, 399, 408, 422], "baroclinic_channel": [5, 7, 9, 14, 18, 271, 277, 343, 347, 353, 360, 361, 364, 367, 387, 401, 416, 421, 422], "baroclinic_channel_rp": 9, "baroclinicchannel": 387, "barotrop": [144, 186, 207, 211, 216, 299, 347, 364, 387, 399, 401, 408, 414], "barotropic_gyr": [343, 353, 402], "base": [1, 5, 8, 13, 14, 16, 18, 20, 40, 42, 44, 51, 57, 77, 82, 84, 115, 117, 118, 123, 127, 141, 144, 153, 154, 159, 162, 163, 165, 168, 175, 177, 180, 186, 211, 224, 225, 229, 233, 241, 242, 244, 312, 313, 317, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 340, 343, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 361, 363, 364, 366, 367, 368, 380, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 401, 402, 403, 404, 405, 406, 412, 413, 422], "base_mesh": [1, 5, 13, 71, 78, 146, 168, 225, 233, 242, 244, 268, 295, 312, 313, 317, 364, 366, 387, 403, 404, 405, 412, 413], "base_mesh_step": 366, "base_mesh_vtk": 13, "base_path_to_install_or_update_conda": 368, "base_resolut": [144, 409, 411], "base_url": 11, "base_work_dir": [40, 51, 115, 364, 366], "baselin": [5, 6, 8, 10, 40, 43, 50, 117, 118, 123, 124, 144, 154, 159, 299, 346, 347, 352, 354, 355, 356, 359, 364, 365, 367, 383, 385, 387, 400, 407, 416], "baseline_dir": [5, 40, 117, 118, 123, 364], "bash": [6, 368, 384, 387, 416], "basi": [7, 387], "basic": [5, 7, 388, 390, 394, 406, 416], "basicmesh": 387, "batch": [390, 393], "bathy_descript": 388, "bathymetri": [11, 334, 340, 364, 388], "bathymetry_databas": [11, 364, 388], "batymetri": 398, "bear": 387, "becam": 387, "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 40, 41, 345, 364, 366, 367, 368, 387, 390, 392, 393, 395, 416], "becom": [7, 364, 366, 387], "bedmachin": 388, "bedmachineantarctica_and_gebco_2019_0": 11, "bedmachineantarctica_v2_and_gebco_2022_0": 364, "been": [1, 5, 6, 40, 43, 48, 52, 53, 55, 106, 118, 123, 136, 138, 139, 141, 144, 153, 168, 259, 285, 308, 310, 315, 326, 343, 361, 364, 366, 367, 368, 380, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 401, 416], "befor": [5, 6, 8, 9, 14, 17, 19, 46, 118, 123, 141, 144, 364, 366, 367, 368, 384, 387, 390, 393, 395, 398, 403, 404, 405, 406, 412, 413, 416], "begeman": 1, "begin": [6, 7, 18, 346, 364, 368, 381, 386, 387, 394, 401, 404, 407, 414], "beginn": [386, 387], "behav": 13, "behavior": [9, 14, 114, 144, 364, 365, 368, 387], "behind": [1, 367], "being": [14, 30, 40, 51, 113, 115, 118, 124, 141, 144, 156, 167, 171, 188, 194, 213, 230, 250, 274, 335, 352, 364, 366, 367, 387, 398], "bell": [19, 144, 218, 220, 221, 223, 224, 225, 227, 228, 231, 233, 241, 244, 313, 317, 349, 366, 387, 399, 403, 405, 406, 408, 412, 413, 415, 420], "belong": [1, 10, 11, 12, 14, 17, 25, 37, 40, 47, 51, 71, 78, 84, 100, 115, 144, 146, 154, 159, 161, 163, 165, 169, 175, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 205, 207, 211, 215, 218, 221, 223, 224, 225, 228, 229, 231, 233, 235, 238, 241, 242, 244, 247, 248, 251, 253, 255, 257, 259, 264, 266, 268, 271, 272, 275, 277, 279, 281, 283, 285, 290, 292, 295, 298, 299, 300, 301, 303, 305, 308, 310, 312, 313, 315, 317, 336, 337, 360, 361, 364, 366, 367, 373, 374, 376, 377, 378, 387, 421], "below": [1, 5, 6, 14, 19, 25, 37, 40, 47, 96, 97, 141, 144, 165, 175, 186, 211, 248, 272, 299, 340, 343, 349, 360, 362, 364, 366, 368, 387, 388, 394, 398, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 416], "benefit": [365, 386], "besid": [341, 342], "best": [6, 17, 141, 364, 368], "beta": [6, 402], "better": [14, 17, 141, 416], "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 31, 32, 39, 42, 50, 72, 79, 80, 83, 86, 100, 106, 124, 144, 173, 175, 178, 179, 192, 201, 228, 231, 253, 261, 287, 294, 321, 324, 330, 332, 335, 336, 337, 340, 342, 347, 348, 349, 350, 351, 357, 358, 361, 362, 364, 366, 367, 373, 374, 394, 396, 398, 401, 402, 403, 406, 407, 409, 410, 411], "bilinear": [17, 100, 335, 404, 415, 420], "bilinearli": 340, "bin": [141, 368, 395, 416], "biogeochemistri": 367, "bishnu": [409, 411], "bit": [14, 141, 349, 367, 385, 387, 401, 404, 407, 416], "black": [127, 335], "blank": [64, 368], "blob": 349, "block": [2, 366], "blue": [362, 389, 416], "bodi": 404, "bold": [1, 366], "bonu": 387, "bool": [14, 25, 26, 30, 40, 42, 50, 51, 52, 57, 61, 62, 63, 67, 113, 114, 118, 123, 124, 125, 126, 127, 131, 156, 167, 168, 175, 188, 194, 213, 218, 224, 229, 230, 235, 247, 248, 250, 274, 283, 290, 299, 301, 303, 305, 310, 315, 334, 335, 337, 387], "boolean": [9, 127, 327], "bootstrap": 6, "bot": [367, 398], "both": [5, 6, 7, 8, 13, 14, 25, 30, 127, 141, 144, 146, 147, 149, 154, 157, 158, 159, 167, 181, 188, 194, 213, 218, 221, 222, 223, 224, 228, 229, 230, 235, 238, 239, 241, 250, 257, 259, 260, 264, 268, 274, 283, 285, 286, 290, 295, 305, 308, 310, 312, 315, 335, 346, 349, 352, 360, 361, 363, 364, 368, 386, 387, 388, 402, 404, 407, 409, 411, 414, 415], "bottom": [321, 322, 323, 324, 327, 328, 329, 330, 332, 345, 387, 388, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415], "bottom_depth": [334, 340, 364, 387, 388, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415], "bottom_drag": [144, 387], "bottom_salin": 407, "bottom_temperatur": [364, 387, 401, 410], "bottomdepth": [19, 144, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 364, 387, 398, 406], "bound": [19, 340, 354, 356], "boundari": [335, 340, 386, 401, 402, 407, 410, 422], "boundary_condit": [207, 208, 209], "bp": 390, "branch": [2, 5, 141, 343, 361, 364, 368, 380, 386, 387, 416], "break": [387, 401], "brief": [6, 7, 387], "briefli": 387, "bring": [9, 144, 387, 396], "broadcast": [364, 387], "broader": 361, "broadli": [360, 361, 367], "broken": [14, 364, 367], "brows": 387, "browser": 395, "bsnc6lt": 141, "btr_dt": [14, 144, 186, 299, 364, 387, 401], "btr_dt_per_km": [14, 144, 387, 396, 401, 407], "bug": 365, "build": [5, 6, 10, 13, 14, 75, 80, 136, 137, 138, 139, 140, 142, 334, 343, 361, 366, 367, 380, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "build_": 6, "build_cell_width_lat_lon": [13, 78], "build_mesh": 13, "build_planar_mesh": 13, "buildabl": 141, "built": [5, 6, 14, 118, 123, 141, 343, 361, 368, 380, 386, 388, 394, 416], "bulk": 414, "bump": 6, "bunch": 387, "c": [5, 6, 118, 141, 364, 368, 389, 390, 391, 392, 393, 394, 395, 400, 403, 405, 410, 412, 413, 416, 421], "cach": [6, 20, 25, 40, 42, 117, 118, 175, 386, 388, 394, 416, 421], "cached_fil": [5, 20, 364], "cached_step": 117, "calandrini": 6, "calcul": [15, 124, 354, 364, 366], "calendar": 390, "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 35, 40, 46, 51, 52, 53, 70, 106, 113, 127, 141, 144, 336, 337, 338, 341, 342, 346, 347, 354, 355, 356, 359, 361, 364, 365, 366, 367, 368, 384, 385, 386, 387, 388, 394, 395, 416], "calledprocesserror": 384, "camelcas": 387, "campin": 398, "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 37, 40, 41, 42, 43, 47, 51, 60, 63, 75, 78, 80, 101, 105, 106, 108, 117, 118, 123, 127, 136, 137, 138, 139, 140, 141, 142, 144, 247, 334, 336, 337, 340, 343, 346, 347, 354, 355, 356, 360, 361, 362, 364, 365, 366, 367, 368, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 401, 403, 404, 405, 406, 407, 411, 412, 413, 416, 421, 422], "cancel": 394, "candid": [336, 337], "cannot": [6, 18, 387], "cap": 387, "capabl": [1, 2, 6, 17, 141, 247, 349, 352, 364, 367, 386, 387, 394, 404, 416], "capit": [144, 387], "captur": [12, 410], "care": [6, 11, 13, 144, 360, 364, 368, 387], "carolyn": 1, "cartesian": [337, 339, 413], "cartopi": 384, "case": [5, 6, 7, 8, 9, 11, 14, 18, 19, 28, 29, 51, 52, 57, 66, 95, 96, 97, 119, 124, 141, 144, 145, 152, 161, 163, 185, 192, 193, 195, 196, 197, 198, 200, 205, 207, 214, 219, 220, 221, 224, 225, 228, 229, 233, 234, 236, 238, 241, 242, 244, 245, 247, 256, 257, 259, 261, 264, 266, 267, 268, 269, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 287, 290, 292, 293, 295, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 336, 337, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 368, 371, 373, 376, 377, 379, 385, 386, 387, 394, 395, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 420, 421], "case_nam": [305, 308, 310, 312, 313, 315], "case_output": [8, 12], "cat": 387, "catch": [141, 365, 368], "categori": [7, 144, 361, 362, 363, 386, 422], "caus": [368, 390, 395, 398], "caution": 368, "caveat": 8, "caviti": [144, 352, 367, 387, 388, 396, 398, 407], "cbegeman": 387, "cc": [141, 393], "cd": [4, 6, 343, 368, 380, 387, 390, 416], "cdir": [395, 416], "cell": [13, 14, 15, 19, 71, 72, 73, 74, 78, 79, 80, 83, 86, 89, 100, 102, 109, 127, 144, 155, 160, 166, 175, 176, 187, 209, 212, 249, 261, 263, 265, 273, 287, 289, 291, 321, 322, 323, 324, 327, 330, 332, 334, 335, 336, 337, 339, 340, 341, 342, 346, 347, 354, 355, 356, 360, 381, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 419], "cell_boundary_color": 335, "cell_count": [144, 155, 160, 166, 176, 187, 212, 249, 265, 273, 291, 387], "cell_mask": [19, 127], "cell_patch": 19, "cell_patch_mask": 19, "cell_width": [13, 71, 72, 73, 74, 78, 79, 80, 86], "cell_width_colormap": 13, "cell_width_filenam": [13, 86], "cell_width_image_filenam": 13, "cellindic": 340, "cellmask": [144, 321, 324, 327, 330, 332, 387], "cellwidthglob": 13, "cellwidthvslatlon": [5, 13], "celsiu": [401, 407], "center": [13, 19, 83, 126, 227, 261, 287, 335, 336, 337, 338, 339, 360, 387, 398, 401, 402, 410], "central": [19, 404], "central_longitud": [19, 126], "centric": 2, "certain": [9, 18, 59, 141, 364, 368, 388, 415, 420], "certif": 388, "cf": [395, 416], "cfg": [9, 11, 17, 53, 144, 361, 366, 367, 387, 388, 403, 405, 412, 413, 416], "cfl": 402, "ch": 390, "challeng": 2, "chang": [5, 6, 8, 11, 17, 63, 78, 111, 112, 144, 153, 343, 361, 364, 365, 366, 367, 368, 380, 385, 387, 388, 390, 395, 396, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 416, 421], "channel": [7, 9, 14, 183, 184, 185, 186, 189, 192, 195, 197, 200, 201, 203, 215, 248, 299, 346, 361, 364, 384, 387, 399, 408, 422], "char": 90, "charact": 367, "character": [19, 403, 405, 410, 412, 413], "characterist": [7, 398, 415, 420], "check": [5, 6, 18, 124, 349, 352, 364, 368, 387, 388, 390, 395, 402, 416, 421], "check_cal": [12, 364], "check_siz": 388, "checker": 368, "checkout": [6, 368, 387], "chicoma": [141, 394, 416], "child": [45, 144, 210, 361, 364, 366, 367], "children": 120, "chkhome": 390, "choic": [387, 403, 404, 405, 406, 412, 413], "choos": [5, 364, 367, 368, 387, 389, 390, 391, 392, 395, 422], "chosen": [406, 414], "chrysali": [5, 6, 141, 364, 387, 388, 394, 416], "cime": 368, "circl": 337, "circul": [402, 404], "circular_shelf": 416, "circumst": [14, 18, 40, 41, 364, 387], "cism": 360, "citat": 7, "ckdtree": [336, 337, 338], "clang": [141, 368], "clariti": [14, 364], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 35, 40, 45, 51, 59, 70, 71, 78, 84, 100, 129, 144, 145, 146, 154, 159, 161, 162, 163, 165, 169, 175, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 205, 207, 210, 211, 215, 218, 221, 223, 224, 225, 228, 229, 231, 233, 235, 238, 241, 242, 244, 247, 248, 251, 253, 255, 257, 259, 261, 264, 266, 268, 271, 272, 275, 277, 279, 281, 283, 285, 287, 290, 292, 295, 298, 299, 300, 301, 303, 305, 308, 310, 312, 313, 315, 317, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 364, 366, 371, 373, 374, 376, 377, 378, 380, 383, 387, 396], "classmethod": 130, "clean": [2, 4, 5, 6, 64, 118, 123, 364, 366, 368], "clear": [1, 2, 144, 367, 387], "clearli": 144, "cli115": 393, "climat": [70, 389, 390, 391, 394, 416], "climatologi": 398, "clobber_mod": [14, 144, 387], "clock": 416, "clockwis": 402, "clone": [5, 6, 141, 343, 362, 368, 380, 387, 416], "close": [1, 6, 74, 141, 352, 386, 403, 404, 405, 412, 413], "closer": 366, "closest": [15, 90, 144, 342, 360], "clu": 367, "clumsi": 367, "cluster": 390, "clutter": 360, "cmake": 368, "cmap": [19, 127, 335, 364, 387], "cmap_scal": 127, "cmap_set_ov": 127, "cmap_set_und": 127, "cmap_titl": 127, "cmo": [19, 364, 387, 403, 405, 406, 412, 413], "cmocean": [19, 364, 387], "co": [402, 403, 404, 405, 406, 409, 411, 412], "coars": [349, 404], "coarser": [388, 398, 403, 404, 405, 406, 412, 413], "coarsest": [387, 388], "cobalt": [141, 389, 390, 391, 392, 393, 394, 395], "code": [2, 5, 7, 9, 12, 14, 40, 144, 343, 360, 361, 364, 365, 366, 370, 380, 385, 386, 388, 397, 401, 407, 414, 416], "collaps": 398, "collect": [11, 103, 145, 361, 363, 371, 385, 387], "colon": 7, "color": [19, 126, 127, 335], "color_start_and_end": 335, "colorbar": [19, 125, 126, 127, 335, 348, 349, 350, 357, 358, 403, 404, 405, 406, 412, 413], "colorbar_label": [125, 126, 335], "colorbar_limit": [19, 126, 348, 349, 350, 357, 358, 403, 405, 406, 412, 413], "colorbar_tick": [19, 125, 404], "colormap": [19, 125, 126, 127, 335, 348, 349, 350, 351, 357, 358, 387, 403, 404, 405, 406, 412, 413], "colormap_nam": [19, 125, 126, 348, 349, 350, 357, 358, 403, 404, 405, 406, 412, 413], "colormap_sect": [19, 125, 126], "column": [19, 297, 298, 300, 301, 303, 351, 359, 368, 372, 373, 374, 376, 377, 378, 380, 381, 383, 398, 399, 406, 407, 408, 416, 417, 418], "com": [5, 6, 7, 14, 62, 367, 368, 386, 387, 388, 416, 417], "combin": [6, 40, 42, 51, 59, 66, 99, 129, 162, 165, 364, 365, 366, 384, 387, 388, 416], "come": [42, 141, 364, 368, 387, 389, 390, 391, 392, 393, 394, 395, 399], "comfort": [367, 387], "comma": [9, 403, 404, 405, 412, 413], "command": [6, 10, 16, 38, 40, 46, 96, 97, 99, 107, 141, 364, 367, 368, 385, 386, 387, 390, 394, 395, 416], "command_line_arg": 96, "commandlin": 364, "comment": [7, 365, 388], "commit": [367, 368], "common": [7, 12, 14, 46, 51, 141, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 384, 385, 387, 388, 394, 395, 396, 415, 416, 420, 421, 422], "commonli": [364, 385], "commun": 387, "compact": [18, 387], "compar": [5, 10, 18, 40, 43, 50, 117, 118, 123, 124, 144, 201, 202, 231, 232, 253, 254, 299, 348, 349, 350, 351, 357, 358, 359, 364, 365, 366, 367, 368, 374, 375, 383, 385, 387, 400, 401, 402, 407, 410, 416, 419, 421], "compare_vari": [18, 387], "comparison": [5, 8, 18, 40, 50, 124, 364, 387, 388, 402, 407, 412], "comparisonantarcticstereoresolut": 388, "comparisonantarcticstereowidth": 388, "comparisonarcticstereoresolut": 388, "comparisonarcticstereowidth": 388, "comparisonlatresolut": 388, "comparisonlonresolut": 388, "compass": [1, 5, 6, 364, 367, 385, 387], "compat": [343, 368, 380, 384, 386, 407], "compi": [141, 392, 416], "compil": [4, 5, 6, 14, 136, 137, 138, 139, 140, 141, 142, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 416], "compiler_gnu": 141, "compiler_intel": 141, "complet": [1, 5, 8, 27, 28, 29, 111, 387, 416], "complex": [13, 79, 366, 367, 387], "compli": 368, "complianc": 368, "complic": [14, 144, 367, 368, 387], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 40, 42, 51, 52, 54, 59, 66, 69, 71, 78, 84, 99, 100, 115, 117, 123, 129, 140, 141, 142, 146, 154, 159, 161, 163, 165, 168, 169, 175, 183, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 205, 206, 207, 211, 215, 218, 220, 221, 223, 224, 225, 228, 229, 231, 233, 235, 237, 238, 241, 242, 244, 246, 247, 248, 251, 253, 255, 257, 258, 259, 264, 266, 268, 270, 271, 272, 275, 277, 279, 281, 283, 284, 285, 290, 292, 295, 297, 298, 299, 300, 301, 303, 305, 307, 308, 310, 312, 313, 315, 317, 360, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 376, 377, 378, 381, 385, 386, 387, 388, 394, 397, 400, 421, 422], "component_nam": 115, "component_path": [5, 9, 118, 123, 343, 361, 380, 388, 416], "compris": 347, "comput": [1, 7, 13, 14, 15, 83, 141, 144, 147, 148, 151, 155, 160, 166, 175, 176, 182, 187, 208, 212, 214, 227, 249, 261, 265, 273, 287, 291, 327, 328, 329, 340, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364, 368, 390, 391, 394, 395, 401, 403, 404, 405, 406, 409, 411, 412, 413, 416], "compute_cell_count": [7, 144, 346, 347, 354, 355, 356, 387], "compute_error": 15, "compute_land_ice_pressure_and_draft": 7, "compute_planar_hex_nx_ni": [13, 364, 387], "compute_rp": [144, 387], "compute_transect": [144, 335, 352], "compyf": 392, "compymcnodefac": [141, 394], "concept": [362, 367, 387, 422], "conceptu": [360, 367, 407], "concret": 141, "conda": [4, 5, 16, 99, 136, 138, 139, 141, 343, 361, 367, 380, 386, 387, 388, 389, 390, 391, 392, 393, 395], "conda_bas": 6, "conda_env": [368, 416], "conda_path": [141, 368], "condit": [1, 7, 40, 144, 149, 162, 165, 171, 185, 189, 215, 216, 225, 242, 247, 248, 251, 255, 260, 264, 266, 275, 286, 290, 292, 298, 300, 301, 303, 313, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 377, 383, 385, 386, 388, 396, 421, 422], "condo": [389, 416], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 32, 33, 40, 41, 42, 48, 51, 53, 55, 61, 65, 66, 77, 79, 82, 95, 96, 97, 98, 99, 115, 117, 118, 123, 125, 126, 129, 130, 131, 132, 134, 135, 153, 154, 156, 157, 158, 159, 162, 167, 175, 178, 179, 181, 188, 194, 195, 209, 213, 214, 218, 219, 223, 228, 230, 235, 236, 247, 250, 257, 261, 274, 277, 283, 287, 305, 306, 319, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 380, 381, 384, 386, 398, 416, 422], "config_atmospheric_forcing_typ": 381, "config_block_decomp_file_prefix": [14, 387], "config_bottom_drag_mod": 144, "config_btr_dt": [14, 144, 387], "config_cvmix_background_diffus": [14, 387], "config_cvmix_background_viscos": [14, 387], "config_disable_vel_hmix": 144, "config_dt": [14, 144, 387], "config_fil": [5, 9, 118, 123], "config_filenam": [9, 40, 51, 162, 364, 366], "config_filepath": 115, "config_forcing_cycle_dur": 381, "config_forcing_cycle_start": 381, "config_forcing_precipitation_unit": 381, "config_forcing_sst_typ": 381, "config_forcing_start_tim": 381, "config_implicit_bottom_drag_coeff": [14, 387], "config_implicit_bottom_drag_typ": 144, "config_implicit_constant_bottom_drag_coeff": 144, "config_include_pond_freshwater_feedback": 381, "config_initial_ice_area": 381, "config_initial_ice_volum": 381, "config_machin": 6, "config_map": 175, "config_model": [25, 26, 31, 32, 144, 154, 159, 178, 179], "config_mom_del2": [14, 144, 346, 355, 364, 387], "config_ocean_run_mod": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "config_run_dur": [14, 144, 366, 387], "config_time_integr": [14, 144], "config_update_ocean_flux": 381, "config_use_cvmix_background": 14, "config_use_manufactured_solut": 144, "config_use_mom_del2": [14, 387], "config_vert_coord_mov": 14, "config_write_output_on_startup": [14, 387], "configpars": [9, 96, 97], "configur": [2, 5, 6, 11, 14, 17, 37, 40, 47, 51, 61, 66, 95, 96, 97, 98, 99, 118, 123, 141, 144, 162, 165, 235, 247, 305, 319, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 364, 367, 368, 386, 387, 388, 390, 393, 394, 395, 398, 407, 409, 411, 415, 416, 420, 422], "configure_polaris_env": [6, 141, 368, 384, 387, 393], "confluenc": 389, "confus": [5, 14, 367, 368, 387], "connect": [339, 387, 395], "connection_fil": 395, "conserv": [100, 404, 415, 420], "consid": 367, "consider": [13, 321, 324, 330, 332, 345, 381], "consist": [19, 25, 39, 141, 164, 175, 343, 368, 387, 388, 401, 410], "constant": [71, 78, 79, 144, 335, 336, 337, 345, 358, 387, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 420], "constrain": [44, 155, 160, 166, 176, 187, 212, 249, 265, 273, 291, 346, 347, 354, 355, 356, 364, 387], "constrain_resourc": 387, "constraint": [6, 65, 395, 416], "construct": [9, 14, 144, 145, 161, 319, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 339, 340, 345, 359, 361, 366, 371, 387, 401, 406], "constructor": [1, 9, 14, 144, 346, 354, 355, 356, 360, 387], "consult": [345, 387], "consum": [8, 364, 366, 387, 421], "contact": 388, "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 44, 58, 92, 95, 101, 102, 103, 104, 108, 109, 110, 119, 126, 127, 129, 144, 146, 154, 159, 161, 162, 165, 170, 171, 174, 182, 209, 321, 324, 325, 326, 330, 331, 332, 333, 334, 336, 337, 340, 361, 362, 363, 364, 367, 370, 380, 381, 385, 387, 388, 394, 399, 415, 416, 417, 420], "content": [9, 14, 118, 119, 121, 123, 135, 144, 360, 362, 364, 367, 383, 387, 416, 419], "context": [365, 387], "contin": [19, 125, 126], "continu": [2, 6, 364, 387], "contrast": 8, "contribut": 367, "contributor": [1, 2], "control": [144, 348, 349, 350, 351, 357, 358, 364, 388, 401, 403, 404, 405, 412, 413, 414, 416], "conv_thresh": [148, 309, 409, 411], "conveni": [5, 9, 17, 321, 324, 330, 332, 360, 364, 387, 388, 403, 404, 405, 412, 413, 416, 422], "convent": [1, 144, 364, 368, 387], "converg": [19, 205, 206, 218, 222, 223, 228, 235, 239, 240, 257, 258, 260, 283, 284, 286, 309, 348, 349, 350, 351, 354, 356, 357, 358, 362, 365, 386, 387, 403, 404, 405, 406, 409, 411, 412, 413, 415, 420], "convergence_": [348, 350, 357, 358, 404], "convergence_both": [400, 404, 406, 409, 411], "convergence_eval_tim": [144, 403, 404, 405, 406, 412, 413], "convergence_forward": [144, 348, 349, 350, 357, 358, 404, 406], "convergence_h": 351, "convergence_normalveloc": 351, "convergence_spac": [400, 404, 406, 409, 411], "convergence_thresh": [144, 404], "convergence_thresh_h": 406, "convergence_thresh_normalveloc": 406, "convergence_thresh_tracer1": [403, 405, 412, 413], "convergence_thresh_tracer2": [403, 405, 412, 413], "convergence_thresh_tracer3": [403, 405, 412, 413], "convergence_tim": [400, 404, 406, 409, 411], "convergence_tracer1": 349, "convergence_var": [144, 146], "convergenceanalysi": [144, 348, 349, 350, 351, 354, 356, 357, 358], "convergenceforward": [144, 354, 356], "convers": [364, 387], "convert": [5, 9, 13, 14, 144, 181, 364, 387], "convert_to_vtk": 13, "cooler": 401, "coord_typ": [352, 387, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "coordin": [101, 103, 104, 108, 110, 125, 127, 261, 287, 321, 324, 325, 326, 330, 331, 332, 333, 334, 336, 337, 339, 340, 352, 397, 399, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 419], "copi": [5, 6, 8, 42, 57, 118, 123, 387, 390, 416], "copy_execut": [5, 118, 123, 416], "core": [5, 7, 8, 14, 25, 37, 39, 40, 42, 44, 46, 47, 66, 95, 96, 97, 123, 141, 144, 145, 175, 184, 185, 223, 298, 300, 346, 349, 355, 359, 360, 361, 364, 365, 366, 367, 381, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416, 421], "core_path": 388, "cores_per_nod": [44, 95, 98, 141, 388, 389, 390, 391, 392, 393, 394, 395, 416], "coriloi": 409, "corioli": [261, 354, 356, 387, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414], "coriolis_paramet": [364, 387, 401, 407, 409, 410, 411, 414], "corner": 340, "correct": [141, 368], "correctli": 6, "correl": [348, 399, 408], "correlated_tracer_2d": 403, "correlated_tracers_2d": [307, 343, 353, 403], "correspond": [2, 6, 7, 17, 18, 124, 141, 144, 146, 157, 158, 268, 295, 339, 343, 352, 364, 368, 380, 401, 409, 411], "cos_bell_dir": 366, "cosin": [19, 144, 218, 220, 221, 223, 224, 225, 227, 228, 231, 233, 241, 244, 313, 317, 349, 366, 387, 399, 403, 405, 406, 408, 412, 413, 415, 420], "cosine_bel": [1, 5, 14, 144, 309, 343, 353, 361, 366, 387, 404, 413, 415, 420, 421], "cosine_bell_cached_init": [416, 421], "cosine_bell_viz": [17, 19, 349, 404, 415, 420], "cosine_bells_amplitud": [403, 405, 412, 413], "cosine_bells_background": [403, 405, 412, 413], "cosine_bells_radiu": [403, 405, 412, 413], "cosinebel": [349, 366], "could": [1, 14, 17, 19, 141, 364, 365, 366, 367, 368, 387, 404], "count": [11, 349, 365, 385, 404], "counter": 387, "counterclockwis": 339, "counterpart": [31, 32, 33], "coupl": [6, 384, 386], "cover": [17, 381, 387], "coverag": 365, "cp": 387, "cpu": [8, 141, 364, 387, 393, 416], "cpu_gnu_mpich": [137, 142], "cpu_intel_mpich": 142, "cpus_per_nod": 98, "cpus_per_task": [8, 14, 40, 44, 47, 96, 97, 364], "crai": [137, 140, 141, 142, 393, 395], "cray_compil": [393, 395], "crayclang": [141, 393], "crayclanggpu": [141, 393], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 40, 42, 46, 51, 62, 71, 72, 78, 79, 84, 100, 107, 117, 118, 123, 129, 141, 144, 146, 154, 159, 162, 163, 165, 168, 169, 175, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 205, 207, 211, 215, 216, 218, 221, 223, 224, 225, 228, 229, 231, 233, 235, 238, 241, 242, 244, 247, 248, 251, 253, 255, 257, 259, 261, 264, 266, 268, 271, 272, 275, 277, 279, 281, 283, 285, 287, 290, 292, 295, 298, 299, 300, 301, 303, 305, 308, 310, 312, 313, 315, 317, 321, 324, 330, 332, 348, 349, 350, 351, 352, 357, 358, 359, 360, 364, 365, 366, 367, 373, 374, 376, 377, 378, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 403, 404, 405, 412, 413, 416, 421], "create_landice_grid_from_generic_mpas_grid": 12, "create_polaris_load_script": 416, "creation": [13, 364, 388], "creation_d": 388, "crest": [364, 387, 401], "critic": [18, 387], "cross": [255, 281, 387], "csh": 368, "csv": [144, 348, 349, 350, 351, 357, 358, 387], "ctest": 368, "cull": [14, 346, 347, 352, 354, 355, 356, 364, 387], "culled_graph": [364, 387], "culled_mesh": [364, 387], "culler": 14, "curl": 141, "current": [1, 2, 5, 6, 8, 11, 18, 25, 37, 40, 47, 124, 141, 144, 175, 343, 347, 349, 359, 361, 364, 367, 368, 370, 380, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 401, 402, 407, 411, 414, 416, 421, 422], "currentmodul": 7, "curv": 367, "curvatur": [336, 337], "custom": [5, 6, 8, 13, 17, 19, 59, 61, 118, 123, 343, 361, 368, 380, 388, 395, 416], "customize_config_pars": 388, "cvmix": 387, "cxx": 141, "cylind": [403, 405, 412, 413], "d": [5, 19, 127, 170, 171, 172, 174, 246, 251, 261, 287, 321, 324, 325, 326, 330, 331, 332, 333, 345, 348, 350, 357, 358, 364, 387, 399, 407, 408, 414], "d_": 14, "da": [19, 126, 341, 342], "da_cel": 341, "da_nod": 342, "dai": [144, 181, 195, 277, 346, 348, 349, 350, 351, 352, 355, 357, 358, 359, 383, 387, 401, 403, 404, 405, 406, 407, 410, 412, 413, 414, 419], "darren": 386, "dask": 388, "data": [5, 10, 13, 17, 18, 19, 26, 40, 41, 42, 106, 119, 121, 122, 125, 126, 127, 129, 135, 141, 144, 321, 324, 325, 326, 330, 331, 332, 333, 334, 336, 337, 339, 341, 342, 364, 368, 386, 388, 389, 390, 391, 392, 393, 394, 416, 421, 422], "data_arrai": 125, "dataarrai": [7, 89, 126, 127, 149, 150, 222, 239, 240, 260, 261, 262, 263, 286, 287, 288, 289, 322, 323, 327, 328, 329, 334, 335, 336, 337, 340, 341, 342], "databas": [5, 6, 8, 11, 17, 20, 25, 40, 42, 63, 175, 364, 394], "database_compon": [42, 364], "database_path": 11, "database_root": [11, 141, 364, 388, 389, 390, 391, 392, 393, 394, 395, 416], "dataset": [17, 89, 90, 124, 127, 144, 170, 171, 172, 174, 208, 209, 261, 287, 321, 324, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 364, 387], "date": [1, 2, 5, 57, 343, 362, 368, 380, 388], "date_str": [5, 57], "datestamp": 57, "daunt": 387, "davi": [1, 388], "dayssincestart": 387, "dayssincestartofsim": 387, "dc": [13, 360, 364, 387], "dcellboundari": 340, "dd": 2, "dddd_hh": [144, 181], "debug": [1, 8, 136, 137, 138, 139, 140, 141, 142, 144, 368, 387, 390, 391, 395, 403, 412], "debug_tracers_1": 404, "debugtrac": [403, 405, 412, 413], "decid": [144, 387], "declar": [2, 7], "decomp": [5, 361, 387, 400, 404, 416, 421], "decomposit": [14, 51, 184, 223, 349, 385, 387], "decomposition_test": [70, 360, 416], "decompositiontest": [70, 360], "deem": 1, "deep": 406, "deepest": 398, "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 144, 360, 361, 364, 366, 367, 387], "default": [5, 7, 9, 11, 14, 15, 18, 19, 25, 41, 42, 51, 57, 66, 79, 84, 90, 91, 99, 100, 101, 105, 108, 114, 118, 120, 123, 127, 136, 138, 139, 141, 144, 148, 149, 161, 186, 222, 239, 260, 272, 286, 343, 348, 349, 350, 351, 354, 356, 357, 358, 359, 360, 361, 364, 366, 368, 380, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 412, 413, 414, 415, 416, 420, 422], "default_input": [343, 361, 380, 387, 388], "default_tidal_forc": 352, "defaults_filenam": 91, "defin": [6, 7, 8, 9, 13, 14, 16, 19, 40, 51, 78, 104, 110, 117, 118, 123, 141, 144, 206, 220, 237, 258, 284, 307, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 372, 380, 381, 383, 385, 386, 388, 394, 396, 398, 401, 404, 410, 413, 414, 421, 422], "definit": [6, 14, 387], "deform": [348, 357, 412], "degc": 414, "degre": [19, 72, 79, 80, 86, 105, 334, 337, 339, 388, 401, 407, 410], "del2": [283, 290, 402, 410], "del4": [283, 290], "delet": [5, 118, 123, 367, 368, 384, 416], "delta": [398, 401, 406, 414], "demonstr": [366, 387], "den_l2": 15, "dens": 367, "densiti": [7, 13, 144, 387, 402], "dep": 368, "depend": [5, 14, 17, 19, 40, 41, 49, 111, 112, 141, 144, 146, 154, 159, 191, 199, 217, 221, 238, 259, 268, 285, 295, 308, 310, 315, 366, 368, 385, 386, 387, 388, 394, 395, 398, 403, 404, 405, 407, 412, 413, 416, 422], "dependencies_dict": [146, 268, 295], "deploi": [141, 368, 386, 389, 390, 391, 392, 393, 394, 395], "deploy": [6, 368, 389, 390, 391, 392, 393, 395], "deploy_tmp": 384, "depress": [387, 398, 407], "depth": [127, 144, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 332, 334, 335, 340, 387, 388, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415], "deriv": [149, 162, 165, 260, 286], "descend": [14, 17, 144, 348, 349, 350, 351, 354, 356, 357, 358, 360, 361, 364, 366, 367, 387], "describ": [5, 7, 14, 17, 19, 99, 119, 121, 135, 144, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 403, 404, 405, 406, 407, 412, 416], "descript": [5, 7, 387, 388, 399, 417], "design": [1, 141, 344, 364, 366, 367, 386, 394, 401, 402], "desir": [12, 13, 14, 18, 19, 124, 144, 364, 365, 366, 387, 388, 402, 416], "desktop": 387, "dest_path": [11, 61], "dest_typ": 100, "destin": [17, 100, 101, 102, 103, 104, 105, 106], "detail": [2, 3, 5, 7, 9, 11, 12, 13, 67, 124, 334, 345, 348, 349, 350, 351, 357, 358, 362, 364, 367, 368, 384, 387, 404, 406, 409, 411, 416], "detect": [14, 19, 388, 389, 391, 392, 394, 406, 416], "determin": [8, 9, 13, 14, 15, 19, 42, 46, 89, 90, 127, 135, 141, 144, 165, 180, 305, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 364, 387, 396, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 420], "dev": [5, 6, 7, 352, 360, 361, 363, 364, 367, 368, 386, 387, 399, 416, 417], "dev_polaris_": [368, 384], "dev_polaris_0_2_0_gnu_mpich": 6, "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 141, 144, 343, 345, 361, 364, 365, 366, 367, 381, 384, 388, 389, 390, 391, 392, 393, 394, 395, 399, 402, 416], "developers_guid": 387, "deviat": 7, "df": 390, "diagnost": [6, 357, 388, 389, 390, 392, 393, 394, 395, 403, 416], "diagram": 362, "dict": [14, 20, 26, 28, 29, 31, 32, 33, 40, 44, 51, 92, 93, 95, 99, 100, 116, 118, 119, 125, 129, 130, 131, 144, 146, 154, 159, 162, 165, 169, 175, 178, 179, 221, 238, 259, 268, 285, 295, 308, 310, 315, 364, 366, 387], "dictat": [407, 414], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 32, 33, 40, 41, 44, 51, 59, 92, 95, 99, 118, 119, 129, 130, 131, 144, 154, 159, 175, 178, 179, 364, 366, 367, 387, 404], "did": [11, 385, 387], "didn": 387, "diff": 15, "differ": [6, 14, 15, 17, 18, 31, 32, 59, 75, 80, 124, 141, 144, 183, 186, 195, 223, 246, 270, 272, 277, 340, 343, 346, 347, 349, 355, 360, 361, 362, 364, 365, 366, 367, 380, 385, 387, 388, 389, 390, 391, 392, 393, 395, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 415, 420], "differenti": [348, 350, 357, 358], "difficult": [14, 141, 394], "diffus": [346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359], "dig": [367, 388], "dim": [364, 387], "dimens": [15, 19, 89, 127, 144, 146, 151, 169, 170, 171, 172, 174, 222, 239, 334, 341, 342, 359, 401, 402, 407], "dimension": 407, "dinterfaceseg": 340, "direct": [12, 13, 14, 83, 261, 287, 346, 347, 352, 354, 355, 356, 387, 395, 401, 407, 409, 410, 411], "directli": [11, 13, 14, 17, 18, 40, 144, 362, 364, 367, 385, 386, 387, 390], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 40, 42, 43, 48, 49, 51, 52, 55, 57, 59, 62, 63, 66, 99, 100, 113, 115, 117, 118, 123, 124, 141, 154, 159, 161, 162, 163, 165, 175, 184, 185, 186, 189, 191, 192, 193, 195, 197, 199, 200, 201, 203, 207, 211, 217, 218, 223, 228, 231, 233, 244, 247, 248, 251, 253, 255, 271, 272, 275, 277, 279, 299, 317, 343, 346, 352, 355, 361, 363, 364, 365, 366, 367, 368, 374, 376, 378, 380, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 403, 404, 405, 406, 412, 413, 416, 422], "dirti": 387, "disabl": [19, 345, 404, 422], "disadvantag": 387, "disc": [381, 419], "discontinu": [336, 337, 405, 412, 413], "discourag": [367, 385], "discov": 6, "discoveri": 141, "discret": [409, 411], "discuss": [2, 6, 144, 348, 349, 350, 351, 357, 358, 364, 367, 387, 401, 407], "disk": [368, 388, 390, 395], "displac": 7, "displai": [5, 8, 335, 395], "display_nam": 395, "dissip": [387, 401], "distanc": [13, 83, 100, 227, 336, 337, 387, 401, 402, 410], "distant": 13, "distinct": 367, "distinguish": 401, "distribut": [348, 349, 350, 357, 358, 403, 405, 412, 413], "diverg": [31, 32, 33, 350, 399, 403, 406, 408, 412], "divergent_2d": [307, 343, 353, 405], "divid": [14, 19, 339, 398], "dlat": [17, 105, 404, 415, 420], "dlon": [17, 105, 404, 415, 420], "dnode": [336, 337], "do": [2, 5, 9, 11, 14, 17, 18, 130, 141, 144, 360, 364, 366, 368, 384, 385, 386, 387, 394, 403, 404, 405, 406, 412, 413, 416], "do_restart": [224, 229, 248], "doc": [4, 7, 387, 395], "docstr": [367, 386, 387], "document": [1, 3, 6, 9, 14, 364, 367, 386, 388, 410, 416], "doe": [2, 6, 9, 12, 14, 141, 364, 370, 386, 387, 394, 407], "doesn": [5, 6, 135, 141, 364, 366, 387, 388, 393, 394, 416], "doi": 410, "domain": [13, 25, 34, 83, 127, 144, 161, 175, 182, 345, 360, 381, 387, 401, 402, 404, 406, 407, 409, 410, 411, 414, 415, 420, 422], "dome": [12, 70, 360, 364, 366, 416, 422], "dome_typ": 360, "dome_varres_grid": 364, "dome_viz": 360, "domega_build_test": 368, "domega_build_typ": 368, "domega_cime_compil": 368, "domega_cime_machin": 368, "domega_metis_root": 368, "domega_parmetis_root": 368, "don": [5, 6, 7, 14, 141, 144, 146, 151, 364, 366, 367, 368, 387, 392, 416, 422], "done": [18, 37, 47, 364, 366, 368, 387, 416], "dot": [126, 127, 335, 367], "doubl": [7, 14, 144, 364, 365, 387], "doubli": [409, 411], "down": [321, 322, 323, 324, 327, 328, 329, 330, 332, 334, 340, 352, 387, 398, 404], "download": [5, 6, 8, 10, 40, 42, 49, 63, 141, 191, 199, 217, 366, 367, 368, 388, 416, 421], "download_path": 11, "download_target": 11, "downsid": 368, "downstream": 367, "dozen": 367, "dpi": [126, 335], "draft": [7, 352, 398], "drag": [345, 348, 349, 350, 351, 357, 358, 402], "driven": 402, "dry": [57, 365], "dry_run": [5, 57], "ds1": [18, 124], "ds2": [18, 124], "ds_horiz_mesh": 334, "ds_horiz_transect": 340, "ds_init": [19, 387], "ds_mesh": [13, 15, 19, 89, 127, 208, 209, 336, 337, 339, 364, 387], "ds_out": [15, 208, 336, 337], "ds_transect": [334, 335, 340, 341, 342], "ds_tri": [336, 337, 338, 339], "dst": 390, "dst_": 17, "dst_from_mpa": 17, "dst_global_lon_lat": 17, "dst_grid_info": 100, "dst_mesh_filenam": 100, "dt": [14, 144, 186, 211, 299, 364, 387, 401, 403, 404, 405, 406, 409, 411, 412, 413, 415, 420], "dt_max": 214, "dt_per_km": [14, 144, 348, 349, 350, 351, 357, 358, 387, 401, 407, 409, 411, 415, 420], "dt_str": 144, "dt_target": 90, "dtransect": [336, 337], "dtype": [9, 366, 387], "durat": [14, 144, 346, 347, 354, 355, 356, 359, 365, 387, 396], "dure": [6, 8, 11, 14, 18, 30, 40, 51, 60, 156, 167, 188, 194, 213, 230, 250, 274, 364, 366, 367, 368, 387, 388, 416, 421, 422], "dv": 144, "dynam": [164, 175, 343, 347, 352, 359, 388, 396, 401, 403, 404, 405, 406, 407, 412, 413, 414, 415], "dynamic_adjust": [1, 14, 388], "dynamic_model_config": [7, 14, 346, 347, 355, 387], "dynamic_ntask": 175, "dz": 414, "e": [5, 6, 7, 9, 11, 14, 15, 31, 32, 33, 40, 41, 53, 70, 129, 141, 144, 150, 168, 336, 337, 343, 360, 362, 364, 365, 367, 368, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 420, 422], "e302": 368, "e3sm": [5, 7, 10, 11, 40, 129, 141, 343, 361, 364, 365, 367, 380, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 417], "e3sm_chrys_gnu_openmpi": 6, "e3sm_compon": 387, "e3sm_diag": 6, "e3sm_submodul": [5, 343, 361, 368, 380, 381, 387], "e3sm_unifi": 11, "e3sm_vers": 388, "e501": [70, 387], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 40, 46, 51, 67, 73, 74, 83, 112, 118, 135, 141, 144, 146, 151, 154, 159, 201, 202, 218, 223, 231, 232, 235, 247, 254, 305, 321, 322, 323, 324, 327, 328, 329, 330, 332, 335, 336, 337, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 374, 375, 383, 385, 387, 388, 394, 396, 398, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 420, 421], "earli": [144, 399, 416], "earth": [337, 386], "earth_radiu": 337, "easi": [7, 9, 42, 367, 387], "easier": [1, 14, 144, 364, 366, 367, 368, 388, 416, 421], "easiest": [18, 141, 368], "easili": 387, "ec": 388, "ec30to60": 416, "echo": 368, "ecosystem": 389, "ecwisc30to60": 416, "eddi": [346, 401], "edg": [15, 19, 89, 102, 105, 109, 126, 127, 261, 262, 287, 288, 336, 337, 338, 345, 387], "edge_patch": 19, "edge_patch_mask": 19, "edit": [5, 7, 368, 387, 416], "editor": 367, "effect": [387, 415], "effici": [19, 364, 387], "eigen": 6, "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 19, 73, 141, 144, 157, 158, 170, 343, 352, 364, 368, 385, 387, 388, 398, 406, 414, 416], "ekat": 368, "element": [321, 324, 330, 332, 387], "elev": [321, 324, 330, 332, 387, 398], "els": [7, 8, 141, 364, 366, 387], "elsewher": [1, 368], "email": 388, "embed": 411, "emploi": 364, "empti": [59, 335, 364, 367, 368, 385, 387], "emtpi": 394, "enabel": 359, "enabl": [8, 19, 359, 364, 384, 388, 395, 409, 411], "enable_diagnostics_fil": 388, "enable_ocean_graph_partit": 388, "enable_ocean_initial_condit": 388, "enable_scrip": 388, "enable_seaice_initial_condit": 388, "enclos": 387, "encod": 368, "encompass": 361, "encount": [6, 365, 384], "encourag": 387, "end": [14, 19, 127, 154, 159, 335, 336, 337, 364, 366, 367, 368, 383, 385, 387, 390, 401, 403, 404, 409, 411, 414, 419], "end_color": 335, "endeavor": 367, "endswith": 367, "energi": [182, 195, 277, 386, 387, 401, 410], "enforc": [1, 345, 368], "engin": 388, "engwirda": 386, "enough": [336, 337, 338, 346, 355, 364, 367, 387, 407], "ensur": [1, 2, 6, 9, 14, 59, 141, 346, 352, 355, 367, 368, 402, 403, 404, 405, 412, 413, 414], "enter": 388, "entha_analy_result": 364, "enthalpy_benchmark": 364, "entir": [144, 387, 401, 407, 410, 421], "entri": [7, 56, 90, 93, 118, 127], "enumer": 387, "env": [141, 395], "env_nam": 368, "env_onli": 368, "environ": [4, 5, 11, 136, 138, 139, 343, 361, 367, 380, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "environo": [389, 390, 391, 392, 393, 395], "equal": [7, 359, 364, 367, 407, 414], "equat": [402, 403, 404, 405, 406, 409, 411, 412, 413, 414], "equatori": 404, "equilibrium": 396, "equival": [14, 169, 170, 171, 368, 387, 389], "errno": 384, "error": [6, 8, 15, 40, 51, 141, 144, 147, 148, 151, 208, 347, 348, 349, 350, 351, 354, 356, 357, 358, 364, 366, 368, 386, 387, 403, 404, 405, 406, 412, 413], "error_typ": [144, 147, 148, 208, 403, 404, 405, 406, 412, 413], "es3m": 368, "esmf": [6, 17, 368, 393, 416], "esmf_regridweightgen": 17, "especi": 387, "essenti": [5, 14], "establish": [40, 41, 364], "estim": [177, 180, 387, 402], "et": [144, 387, 398, 401, 403, 404, 405, 406, 409, 410, 411, 412, 413], "eta": [263, 289, 409, 411], "eta0": [261, 287], "eta_0": 411, "etc": [9, 14, 120, 123, 361, 364, 401], "etre": [119, 121, 135], "eval": 7, "evalu": [144, 147, 148, 149, 150, 208, 222, 239, 240, 260, 262, 263, 283, 286, 288, 289, 290, 309, 348, 350, 357, 358, 403, 404, 405, 406, 412, 413], "evapor": 414, "evaporation_flux": 414, "even": [1, 6, 12, 13, 14, 42, 59, 141, 364, 367, 368, 387, 388, 394, 416], "ever": [144, 367], "everi": [45, 210, 346, 364, 366, 367, 383, 384, 385, 387, 401, 407, 414], "everyon": 63, "everyth": 141, "everywher": 387, "evolut": [406, 410], "evolv": [300, 386, 398, 403, 404, 405, 412, 413, 414], "exact": [147, 149, 150, 208, 209, 222, 239, 240, 260, 261, 262, 263, 286, 287, 288, 289, 349, 351, 354, 356, 367, 409, 411], "exact_restart": 383, "exact_solut": 144, "exactli": [367, 368, 387, 398], "exactrestart": 383, "exactsolut": [354, 356], "examin": [406, 414], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 141, 144, 360, 361, 362, 364, 365, 366, 367, 368, 384, 385, 387, 388, 390, 398, 415, 416, 421, 422], "example_compact": [343, 361, 380, 388], "example_funct": 2, "exascal": 386, "exce": 365, "except": [9, 40, 43, 61, 335, 364, 367, 368, 387, 402, 410, 411, 413], "exclud": 416, "exclus": 416, "execut": [1, 5, 8, 14, 25, 118, 123, 141, 175, 343, 361, 364, 368, 380, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416], "exercis": [359, 383, 403, 404, 405, 406, 412, 413, 414], "exhaust": 365, "exist": [6, 7, 9, 31, 32, 33, 40, 43, 62, 119, 121, 123, 141, 144, 178, 179, 346, 355, 364, 366, 367, 368, 384, 387, 394, 421], "expand": [100, 144, 398], "expand_dim": [364, 387], "expand_dist": 100, "expand_factor": 100, "expect": [1, 2, 12, 17, 141, 144, 170, 172, 361, 364, 368, 387, 411], "expens": [1, 364, 365], "experi": [14, 141, 209, 367, 398], "experienc": 6, "expert": 386, "explain": [367, 402], "explan": 13, "explanatori": 388, "explicit": [12, 367], "explicitli": [5, 7, 144, 346, 347, 354, 355, 356, 364, 368, 387, 388, 416], "explor": [6, 360, 364, 387, 398, 412], "export": [6, 384], "express": [5, 67], "extend": 388, "extens": [386, 388, 402], "extent": [2, 13, 17, 387, 401], "extern": [40, 141, 343, 361, 364, 366, 368, 380, 399, 417], "extra": [13, 64, 368, 393], "extra_rpath": 141, "extract": [13, 15], "ey": 6, "f": [5, 9, 11, 18, 144, 209, 227, 361, 364, 366, 367, 368, 387, 388, 395, 401, 406, 407, 409, 416], "f0": 261, "f401": [19, 364, 387], "f77": 141, "f_0": 402, "face": 126, "facilit": 144, "fact": [1, 14, 40, 141], "factor": [13, 100, 144, 147, 149, 154, 157, 158, 159, 222, 223, 224, 228, 229, 239, 241, 260, 264, 286, 290, 312, 404], "fail": [8, 14, 18, 25, 37, 40, 47, 61, 141, 144, 165, 175, 186, 211, 248, 272, 299, 364, 386, 387, 388, 403, 404, 405, 406, 409, 411, 412, 413], "fairli": [366, 367, 368, 387, 407], "fake": 387, "fall": [354, 356, 416], "fals": [1, 9, 13, 14, 18, 19, 25, 40, 42, 52, 57, 67, 69, 113, 114, 118, 123, 124, 127, 141, 144, 175, 224, 229, 247, 248, 283, 290, 301, 303, 334, 335, 345, 360, 364, 366, 381, 387, 388, 390, 392, 393, 395, 401, 410], "familiar": 387, "far": [13, 141, 144, 321, 330, 332, 367, 387], "fast": [348, 349, 350, 351, 357, 358, 387], "faster": [8, 368], "fatal": 384, "fc": 141, "fcell": [345, 364, 387, 403, 404, 405, 412, 413], "fe": 390, "feasibl": 364, "featur": [9, 14, 367, 368, 385, 387, 388, 396, 401, 410, 414], "fedg": [345, 364, 387, 403, 404, 405, 412, 413], "feel": [14, 141, 364, 387], "felt": 367, "fetch": [6, 368, 387], "few": [5, 13, 14, 25, 37, 40, 47, 96, 97, 141, 175, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 364, 367, 387, 388, 394], "fewer": [25, 37, 40, 47, 96, 97, 144, 165, 175, 186, 211, 248, 272, 299, 364, 387, 416], "fewest": 8, "ff": 364, "field": [14, 15, 18, 86, 88, 89, 126, 127, 144, 147, 148, 149, 150, 208, 209, 222, 233, 239, 240, 244, 260, 286, 309, 317, 321, 324, 330, 332, 334, 335, 336, 337, 340, 341, 342, 345, 346, 347, 351, 354, 355, 356, 359, 387, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413], "field_exact": 15, "field_mpa": [15, 150, 240], "field_nam": [15, 19, 127, 148, 149, 150, 222, 239, 240, 260, 286, 309], "fieldnam": 127, "fig": 362, "figsiz": [19, 126, 127, 335], "figur": [8, 19, 126, 127, 335, 347, 354, 356, 359, 360, 362, 364, 388, 402, 403, 405, 412, 413], "filament": [357, 412], "filament_analysi": 412, "filament_evaluation_tim": 412, "filamentanalysi": 357, "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 34, 35, 36, 40, 41, 42, 43, 46, 48, 49, 50, 51, 53, 55, 57, 61, 62, 63, 70, 87, 88, 91, 92, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 146, 150, 151, 153, 154, 159, 162, 165, 167, 169, 172, 174, 175, 180, 182, 186, 188, 191, 194, 199, 211, 213, 217, 230, 240, 250, 274, 320, 335, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 368, 374, 380, 381, 383, 384, 385, 386, 390, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 419, 420, 422], "fileexistserror": 62, "filenam": [11, 17, 18, 40, 42, 43, 51, 94, 101, 102, 103, 104, 108, 109, 110, 124, 126, 130, 132, 162, 163, 165, 172, 174, 364, 366, 368, 387], "filename1": [18, 124, 387], "filename2": [18, 124, 387], "filename_interv": 387, "filename_templ": [14, 144, 387], "filepath": [9, 17, 48, 55, 59, 144], "files_for_e3sm": [11, 364, 366, 388], "filesystem": 395, "fill": 144, "final": [2, 5, 6, 7, 8, 141, 162, 336, 337, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364, 366, 383, 387, 396, 404, 412], "final_normalveloc": [19, 387], "final_temperatur": 387, "find": [1, 6, 7, 15, 61, 74, 98, 141, 336, 337, 338, 343, 366, 367, 368, 384, 387, 388, 416], "find_planar_transect_cells_and_weight": 340, "find_spherical_transect_cells_and_weight": 340, "find_transect_levels_and_weight": [334, 341, 342], "finder": 398, "fine": [9, 366, 387, 414], "finer": [388, 398], "finest": 388, "finger": 387, "finish": [40, 41, 85, 364, 387], "firewal": 364, "first": [1, 6, 9, 14, 15, 90, 118, 141, 144, 336, 337, 346, 347, 352, 354, 355, 356, 359, 364, 366, 367, 368, 384, 387, 389, 390, 391, 392, 393, 394, 395, 401, 404, 406, 407, 414, 416], "fit": [364, 388], "fix": [63, 144, 387], "flag": [5, 6, 141, 364, 367, 384, 385, 387, 388, 393, 399, 401, 410, 416, 417], "flake8": [367, 368], "flat": [131, 335, 398, 401, 402, 406], "flavor": [368, 387], "flesh": 387, "flexibl": [11, 144, 364, 366, 368, 387], "float": [7, 9, 14, 26, 71, 73, 74, 78, 83, 90, 100, 105, 124, 126, 127, 144, 147, 148, 149, 150, 154, 157, 158, 159, 161, 165, 168, 181, 184, 185, 186, 189, 192, 195, 197, 200, 208, 211, 214, 215, 222, 223, 224, 227, 228, 229, 239, 240, 241, 247, 248, 251, 259, 260, 261, 262, 263, 264, 266, 272, 277, 279, 285, 286, 287, 288, 289, 290, 292, 299, 305, 308, 309, 310, 312, 315, 335, 336, 337, 364, 366, 387], "floor": [340, 398, 407], "flow": [348, 350, 357, 358, 401, 403, 404, 405, 406, 412, 413], "fluid": 402, "flux": [144, 345, 352, 355, 407, 410, 414], "flynt": 368, "fo": 366, "fo_decomposition_test": 416, "fo_integr": 416, "fo_restart_test": 416, "fo_smoke_test": 416, "focu": [2, 387], "focus": 385, "fold": 387, "follow": [1, 4, 5, 7, 9, 11, 13, 14, 19, 70, 141, 144, 146, 321, 324, 330, 332, 343, 345, 364, 365, 366, 368, 380, 381, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 419], "font": 19, "foo": [2, 367], "forc": [7, 247, 248, 347, 352, 359, 383, 387, 422], "forcing_data": 364, "foremost": 387, "forg": [6, 141, 386, 416], "forgotten": 14, "fork": [6, 387], "form": [144, 355, 410, 422], "formal": 360, "format": [5, 7, 11, 13, 14, 129, 135, 181, 365, 366, 368, 387, 388, 390, 407], "formerli": 1, "fortran": [6, 141, 389, 390, 391, 392, 393, 394, 395], "forward": [1, 5, 7, 9, 14, 40, 144, 146, 158, 159, 162, 163, 165, 182, 185, 193, 195, 229, 233, 244, 247, 268, 277, 295, 298, 300, 317, 343, 361, 364, 366, 367, 377, 380, 388, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 420], "forward_cor": 388, "forward_max_disk": 388, "forward_max_memori": 388, "forward_min_cor": 388, "forward_run_dur": 407, "forward_step": 366, "forward_thread": 388, "forwardstep": [162, 364], "found": [6, 9, 14, 130, 141, 336, 337, 367, 368, 386, 387, 389, 390, 391, 392, 393, 394, 395], "four": 361, "frac": [364, 387, 398, 401, 402, 403, 405, 409, 412], "fraction": [8, 387, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "framework": [1, 5, 7, 9, 12, 13, 14, 113, 343, 360, 361, 364, 366, 380, 385, 386, 387, 396, 399, 414, 415, 417, 420, 422], "frazil": [144, 352, 407], "free": [141, 207, 208, 209, 345, 387, 388], "frequenc": [261, 287, 346], "frequent": [17, 343, 380], "fresh": [5, 6, 366, 387], "freshwat": 407, "friction": [409, 411], "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 26, 27, 28, 31, 32, 33, 40, 41, 42, 50, 51, 53, 54, 57, 61, 62, 88, 92, 97, 101, 102, 103, 104, 105, 108, 109, 110, 112, 114, 115, 118, 119, 120, 121, 124, 127, 130, 131, 134, 135, 141, 146, 149, 150, 156, 162, 163, 169, 170, 171, 172, 174, 175, 178, 179, 186, 207, 221, 227, 233, 238, 240, 244, 248, 259, 260, 268, 272, 285, 286, 295, 308, 310, 315, 317, 328, 335, 336, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 366, 367, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 419, 420, 421, 422], "front": [390, 407], "frontier": [141, 394], "fs1": 387, "full": [12, 40, 96, 114, 253, 322, 323, 336, 337, 346, 349, 364, 366, 383, 386, 387, 394, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416], "full_integr": [6, 416], "full_path": 11, "full_run": [5, 18, 383, 401, 419], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 49, 72, 79, 144, 191, 199, 217, 227, 360, 361, 364, 366, 367, 385, 386, 387, 396, 398, 402, 403, 404, 405, 406, 407, 412, 413, 422], "fundament": 366, "further": [7, 144, 360, 366, 395, 402, 415, 420], "further_valid": 18, "futur": [1, 13, 46, 127, 364, 367, 385, 386, 387, 388, 406, 414, 416, 422], "fvertex": [345, 364, 387, 403, 404, 405, 412, 413], "g": [5, 6, 7, 9, 11, 14, 15, 31, 32, 33, 40, 41, 53, 70, 129, 141, 144, 168, 336, 337, 343, 360, 362, 364, 365, 367, 368, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 420], "gain": 389, "gassmann": 404, "gb": 141, "gcc": 141, "ge": [401, 404], "gebco": 388, "gener": [2, 3, 5, 7, 8, 12, 14, 19, 25, 26, 27, 28, 29, 35, 49, 78, 124, 144, 191, 199, 217, 264, 290, 319, 343, 345, 346, 347, 352, 354, 355, 356, 359, 361, 364, 368, 380, 386, 387, 388, 394, 403, 404, 405, 406, 409, 411, 412, 413, 416], "generate_1d_grid": 144, "geo": 384, "geom": 13, "geometri": 407, "geostroph": [343, 353, 399, 408], "geostrophic_viz_diff_h": 406, "geostrophic_viz_diff_vel": 406, "geostrophic_viz_h": 406, "geostrophic_viz_vel": 406, "geostropnic_viz": 406, "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 40, 51, 52, 58, 65, 73, 89, 95, 106, 113, 141, 144, 148, 149, 150, 157, 158, 175, 222, 239, 240, 260, 286, 309, 360, 363, 364, 366, 367, 368, 385, 388, 389, 390, 391, 392, 393, 395, 398, 416], "get_available_cores_and_nod": 367, "get_output_field": [15, 144], "get_time_interval_str": 144, "getboolean": [9, 364, 387], "getexpress": 9, "getfloat": [9, 12, 14, 17, 144, 364, 387], "gethostbynam": 386, "getint": 364, "getinteg": 9, "getlist": [9, 366, 387], "getsockinterfaceaddr": 384, "gfortran": [6, 136, 138, 139, 141, 368], "gh_0": 406, "git": [2, 6, 16, 99, 343, 368, 380, 387, 388, 416], "gitconfig": 388, "github": [5, 6, 7, 367, 368, 386, 387, 388, 399, 416, 417], "give": [5, 6, 14, 18, 141, 364, 367, 368, 387, 388, 416], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 54, 61, 73, 83, 89, 92, 96, 97, 114, 119, 121, 124, 130, 141, 144, 146, 147, 150, 151, 168, 172, 174, 175, 195, 208, 240, 268, 277, 295, 327, 336, 337, 340, 346, 352, 355, 359, 364, 366, 384, 386, 387, 388, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 420, 421], "gl": 407, "global": [1, 13, 17, 104, 105, 110, 305, 337, 348, 349, 350, 351, 357, 358, 360, 364, 365, 367, 385, 386, 387, 388, 395, 403, 404, 405, 406, 412, 413, 415, 416, 420, 422], "global_converg": [14, 366, 387], "global_ocean": [11, 14, 364, 366, 367, 368, 388, 416], "globalconverg": 387, "globe": [403, 404, 405, 412, 413], "glossari": 387, "gmtime": [14, 387], "gnu": [6, 141, 368, 389, 390, 391, 392, 393, 394, 395, 416], "gnugpu": [141, 393], "go": [12, 48, 55, 301, 303, 360, 364, 366, 367, 368, 387, 395], "goal_cells_per_cor": [144, 387, 402, 403, 404, 405, 409, 410, 411, 412, 413, 415, 420], "goe": [51, 364, 366, 387], "good": [6, 11, 12, 40, 364, 368, 387], "gov": [11, 364, 384, 388, 390, 393, 395], "gpf": 387, "gpmeti": [14, 388], "gpu": [65, 141, 390, 393, 395], "gpus_per_nod": 65, "grab": 395, "gradient": [387, 401, 409, 410, 411, 414], "gradient_width_dist": [364, 387, 401], "gradient_width_frac": [364, 387, 401], "gradient_width_fract": 401, "graph": [5, 25, 34, 36, 46, 88, 144, 154, 159, 162, 165, 175, 186, 211, 346, 347, 352, 354, 355, 356, 387, 388], "graph_fil": 34, "graph_filenam": [25, 88], "graph_target": [144, 154, 159, 162, 165, 175, 186, 211], "graphinfofilenam": [364, 387], "graviti": [205, 206, 257, 258, 259, 261, 264, 266, 268, 354, 366, 399, 408], "great": [337, 387], "greater": [364, 387], "green": [127, 335, 362], "greenland": [360, 386, 422], "grep": [6, 390, 416], "grid": [7, 13, 17, 72, 79, 83, 86, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 144, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 346, 347, 352, 354, 355, 356, 359, 364, 381, 387, 388], "grid_1d": 144, "grid_typ": [387, 388, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "group": [6, 7, 11, 63, 272, 347, 352, 360, 386, 389, 391, 394, 395, 410, 415, 416, 422], "guarante": [1, 14, 141, 339, 343, 368, 380], "guess": [141, 387], "guid": [7, 144, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 365, 367, 387, 389, 390, 391, 392, 393, 394, 395, 399, 417], "guidelin": 368, "gyre": [207, 211, 216, 347, 399, 408], "h": [5, 14, 387, 406], "h_": 398, "h_0": 406, "ha": [1, 5, 6, 9, 11, 14, 15, 25, 37, 40, 41, 43, 47, 52, 53, 98, 106, 111, 127, 136, 138, 139, 141, 144, 165, 168, 175, 186, 211, 248, 272, 299, 326, 336, 337, 343, 348, 349, 350, 352, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 380, 381, 384, 385, 387, 388, 398, 401, 402, 404, 407, 409, 410, 414, 416], "had": [1, 141], "half": [387, 401, 407, 410], "halfar": 360, "halv": [387, 401], "hand": [13, 105, 367], "handi": 15, "handl": [11, 12, 368, 387, 394, 406], "hang": [390, 395], "happen": [6, 9, 12, 17, 112, 364, 387, 403, 404, 405, 412, 413], "hard": [6, 364, 387, 401, 407, 414], "harder": 367, "harm": 364, "has_opt": 11, "has_shared_config": 40, "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 18, 31, 32, 33, 40, 41, 48, 55, 112, 118, 123, 127, 130, 139, 141, 144, 146, 151, 153, 259, 268, 285, 295, 308, 310, 315, 339, 343, 346, 347, 354, 355, 356, 360, 362, 364, 365, 366, 367, 368, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 401, 403, 404, 405, 406, 407, 412, 413, 415, 416, 421, 422], "haven": [6, 387], "hdf5": [141, 389, 390, 391, 392, 393, 394, 395], "head": [2, 345, 390], "heat": [407, 414], "heavi": 387, "height": [7, 127, 144, 163, 164, 209, 261, 263, 287, 289, 323, 327, 328, 329, 335, 340, 343, 352, 387, 388, 398, 407, 409, 411], "help": [5, 6, 13, 141, 360, 361, 362, 364, 368, 386, 387, 394, 399, 417], "helper": [15, 360, 361], "here": [1, 6, 9, 12, 14, 17, 18, 141, 144, 346, 352, 355, 359, 360, 363, 364, 366, 367, 368, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 402, 403, 404, 405, 406, 412, 413, 414, 415, 416, 420, 421], "hesit": 367, "heurist": 144, "hexagon": [13, 83, 387, 409, 411], "hidden": 367, "hide": [360, 387], "hide_fig": 360, "hierarch": 14, "high": [141, 364, 391, 394], "higher": 387, "highest": 1, "highli": 387, "hill": 404, "hmix_del2": 387, "home": [6, 18, 141, 368, 387, 388, 390, 394, 395], "homogen": 402, "honor": 384, "hood": 17, "hope": 367, "hopefulli": [141, 388], "horiz": 340, "horizcellindic": [336, 337], "horizont": [126, 127, 144, 182, 255, 334, 335, 340, 345, 346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 401, 402, 403, 405, 407, 409, 410, 411, 412, 413, 414], "horiztriangleindic": [336, 337], "horiztrianglenodeindic": [336, 337], "host": [384, 388, 394, 416], "hostnam": 141, "hostname_contain": 141, "hour": [141, 144, 354, 356, 365, 383, 390, 395, 396, 403, 404, 405, 406, 407, 409, 411, 412, 413, 416, 419], "hous": [20, 403, 404, 405, 412, 413], "how": [2, 5, 6, 12, 14, 78, 144, 363, 364, 366, 367, 368, 388, 394, 395, 407, 409, 411], "howev": [1, 13, 364, 365, 366, 368, 387, 402], "hpc": [141, 368, 390, 394], "hpss": [390, 395], "hsi": 395, "htar": 395, "html": [4, 399], "http": [5, 7, 11, 14, 62, 364, 367, 384, 386, 387, 388, 395, 399, 410, 416, 417], "huge": 387, "hydro": [360, 422], "hydrograph": 398, "hydrologi": 360, "hyperbol": 398, "hyperthread": [390, 393, 395], "hyperviscos": 411, "hyphen": 387, "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 37, 40, 41, 42, 43, 46, 47, 51, 52, 57, 61, 62, 78, 79, 84, 90, 96, 97, 100, 104, 110, 111, 113, 114, 119, 121, 124, 127, 130, 135, 136, 138, 139, 141, 144, 147, 149, 150, 154, 156, 157, 158, 159, 163, 165, 167, 168, 170, 171, 173, 175, 184, 185, 186, 188, 189, 192, 193, 194, 195, 197, 200, 201, 203, 207, 211, 213, 224, 229, 230, 231, 240, 247, 248, 250, 251, 253, 255, 271, 272, 274, 275, 277, 279, 294, 299, 321, 324, 330, 332, 335, 336, 337, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 374, 376, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420, 421, 422], "ic": [7, 161, 163, 164, 246, 247, 251, 253, 255, 343, 352, 366, 367, 368, 381, 383, 386, 387, 388, 390, 397, 398, 399, 408, 419, 422], "ice_shelf": [144, 352], "ice_shelf_2d": [144, 343, 353, 407], "ice_shelf_2d_default": 407, "ice_shelf_2d_default_tidal_forc": 407, "icepresent_qu60km_polar": 364, "iceshelf": 144, "iceshelf2d": [144, 352], "iceshelftask": [352, 396], "ico": [1, 5, 144, 218, 223, 228, 366, 387, 400, 403, 404, 405, 412, 413, 421], "icos_base_mesh_60km": 1, "icos_base_resolut": [144, 404], "icos_forward_60km": 1, "icos_init_60km": 1, "icos_map_60km": 1, "icos_refinement_factor": [144, 404], "icos_resolut": [403, 404, 405, 412, 413], "icos_viz_60km": 1, "icosahedr": [13, 71, 73, 168, 235, 305, 310, 315, 348, 349, 350, 351, 357, 358, 366, 403, 404, 405, 406, 412, 413], "icosahedral_method": 13, "icosahedralmeshstep": [13, 144, 366], "icosahedron": [13, 72, 73, 74, 75], "icosohedr": [415, 420], "icosohydr": [403, 404, 405, 412, 413], "id": [367, 368], "idea": [6, 11, 12, 387], "ideal": [25, 37, 40, 47, 96, 97, 100, 144, 165, 175, 186, 211, 248, 272, 299, 300, 301, 303, 360, 364, 367, 386, 387, 388, 422], "ideal_ag": [301, 303], "idealag": 359, "idealagetrac": [359, 414], "ident": [1, 2, 5, 18, 184, 192, 200, 223, 228, 346, 352, 355, 364, 365, 367, 373, 387, 401, 404, 407], "identifi": [11, 117, 141, 361, 380, 422], "idl": 8, "ifort": [6, 136, 138, 141, 387], "ignor": [5, 104, 110], "ilicak": [401, 410], "imag": [2, 7, 19, 125, 126, 127, 335, 360, 387, 415, 420], "immedi": [14, 70, 144, 368, 387], "immediatli": 144, "immutable_stream": [14, 387], "imp_r": 366, "impermeable_interfac": 14, "impi": [6, 136, 141, 389, 392], "implement": [9, 144, 352, 361, 364, 367, 401, 402, 403, 404, 405, 406, 409, 411, 412, 413], "implicit": 144, "import": [9, 11, 12, 13, 15, 17, 18, 19, 144, 360, 361, 364, 366, 367, 368, 385, 387], "importlib": 11, "improv": 387, "inch": [126, 127, 335], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 42, 49, 51, 61, 113, 114, 125, 126, 141, 144, 191, 199, 217, 218, 235, 247, 301, 303, 305, 335, 336, 337, 339, 346, 348, 349, 350, 351, 357, 358, 359, 360, 362, 364, 365, 366, 367, 368, 384, 385, 386, 387, 388, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422], "include_restart": 247, "include_tid": 247, "include_viz": [218, 235, 247, 305, 366], "incompat": 141, "incorpor": 366, "incorrect": 368, "increas": [19, 144, 367], "increment": 388, "indent": [7, 364], "independ": [1, 2, 5, 6, 365, 385], "index": [4, 15, 18, 90, 144, 146, 147, 149, 150, 151, 208, 222, 239, 240, 260, 286, 321, 322, 323, 324, 327, 328, 329, 330, 332, 334, 336, 337, 339, 340, 360, 387, 398], "indic": [1, 7, 8, 14, 17, 18, 19, 40, 41, 111, 118, 127, 141, 144, 146, 154, 159, 218, 223, 224, 228, 229, 235, 241, 264, 268, 290, 295, 305, 308, 312, 327, 336, 337, 339, 362, 364, 384, 387, 388, 398, 402, 407, 414], "indir": [9, 25, 40, 51, 100, 163, 165, 175, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 207, 211, 231, 247, 248, 251, 253, 255, 271, 272, 275, 277, 279, 281, 299, 301, 303, 361, 364, 374, 376, 378], "individu": [8, 9, 19, 361, 366, 367, 387, 394, 395, 401, 407, 415, 416, 422], "induc": 410, "inej": 388, "inerti": [205, 206, 257, 258, 259, 261, 264, 266, 268, 354, 366, 399, 408], "inertial_gravity_wav": [9, 343, 353, 356, 361, 366, 409, 421], "inertialgravitywav": [9, 354, 366], "inf": [144, 147, 148, 208, 406], "infin": [124, 403, 405, 412, 413], "inflect": 407, "influenc": 396, "info": [5, 12, 14, 25, 34, 88, 141, 144, 186, 211, 364, 387], "inform": [1, 5, 6, 7, 8, 40, 100, 124, 135, 261, 287, 364, 366, 368, 388, 390, 399, 402, 416, 417], "infrastructur": [144, 367, 387], "infti": [144, 398], "inher": [410, 415], "inherit": [352, 367, 387], "init": [1, 5, 6, 7, 9, 14, 18, 19, 37, 47, 144, 146, 154, 159, 184, 185, 192, 193, 195, 200, 224, 229, 233, 241, 244, 247, 248, 255, 264, 268, 271, 272, 277, 290, 295, 312, 317, 343, 345, 361, 364, 366, 367, 368, 380, 388, 396, 401, 404, 407, 409, 411, 416], "init_cor": 388, "init_descript": 388, "init_filenam": [162, 165, 387], "init_max_disk": 388, "init_max_memori": 388, "init_min_cor": 388, "init_mode_forcing_data": 364, "init_step": 366, "init_thread": 388, "init_vertical_coord": [144, 364, 387], "initi": [1, 7, 8, 40, 127, 144, 149, 162, 165, 171, 182, 184, 185, 189, 192, 193, 195, 200, 215, 222, 225, 239, 242, 247, 248, 251, 255, 260, 264, 266, 271, 272, 275, 277, 286, 290, 292, 298, 300, 301, 303, 313, 326, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 364, 366, 367, 377, 384, 385, 386, 388, 396, 398, 421, 422], "initial_condit": 367, "initial_condition_databas": [17, 388], "initial_normal_veloc": [364, 387], "initial_normalveloc": 387, "initial_onli": 387, "initial_salin": 387, "initial_st": [5, 18, 19, 146, 268, 295, 346, 355, 364, 387], "initial_state_file_nam": 387, "initial_state_filenam": 182, "initial_state_target": 364, "initial_temperatur": [364, 387], "inner": [40, 364], "input": [1, 5, 8, 10, 11, 17, 35, 40, 41, 42, 43, 49, 88, 153, 162, 169, 171, 191, 199, 217, 340, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 387, 414], "input_data": 40, "input_interv": 387, "insensit": [403, 404, 405, 406, 412, 413, 414], "inset": 335, "insid": [1, 12, 362, 364, 367, 403, 404, 405, 412, 413], "insofar": 1, "instal": [5, 6, 141, 368, 387, 394, 395, 416], "install_missing_compil": 141, "instanc": 387, "instant": 334, "instead": [1, 5, 6, 12, 14, 15, 18, 25, 114, 136, 141, 364, 367, 368, 385, 387, 403, 404, 405, 412, 413, 416, 421], "instruct": 387, "int": [13, 14, 25, 26, 37, 40, 47, 65, 66, 67, 71, 72, 73, 74, 75, 83, 90, 96, 97, 100, 126, 127, 146, 147, 149, 150, 151, 155, 160, 165, 166, 175, 176, 186, 187, 208, 211, 212, 222, 223, 239, 240, 248, 249, 260, 265, 272, 273, 286, 291, 299, 335, 364, 387, 414], "int_": 144, "integ": [9, 13], "integr": [6, 15, 144, 195, 277, 346, 347, 352, 355, 367, 387, 396, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 420], "intel": [6, 141, 389, 391, 392, 394], "intend": [2, 6, 8, 9, 365, 388, 411, 422], "intens": [346, 355], "intent": 12, "interact": [387, 390, 393, 394, 395, 416], "interest": 387, "interfac": [2, 10, 319, 320, 321, 324, 330, 332, 335, 340, 352, 367, 368, 386, 387, 398], "interface_color": 335, "interfer": 7, "intern": [5, 11, 25, 270, 271, 272, 275, 277, 279, 281, 336, 337, 355, 364, 368, 384, 399, 408], "internal_wav": [343, 353, 410], "internal_wave_rp": 410, "interp_mpas_to_transect_cel": 340, "interp_mpas_to_transect_nod": 340, "interpcellindic": 340, "interpcellweight": 340, "interphorizcellindic": [336, 337], "interphorizcellweight": [336, 337], "interplevelindic": 340, "interpol": [17, 100, 335, 336, 337, 339, 340, 341, 342, 388], "interpret": 395, "interrupt": 387, "intersect": [334, 336, 337, 338], "interv": [14, 15, 181, 396, 403, 404, 405, 406, 407, 412, 413], "intro": 367, "introduc": 387, "introduct": 390, "intuit": 9, "invari": 352, "invers": 169, "investig": 415, "invoc": 1, "invok": 144, "involv": [6, 14, 340, 364, 385, 387, 409, 411], "io": [10, 364, 366, 367, 386, 387, 388, 399, 417], "ipykernel": 395, "ipykernel_launch": 395, "iri": 395, "is_depend": [40, 364], "is_task": 114, "isadirectoryerror": 62, "isel": [15, 19, 334], "isn": [6, 9, 15, 348, 349, 350, 351, 357, 358, 364, 367, 387], "isol": 368, "isort": 368, "issu": [2, 6, 364, 365, 368], "item": [2, 387], "iter": [1, 162, 163, 343, 352, 388, 396, 407], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 40, 53, 106, 111, 112, 120, 141, 144, 352, 360, 361, 362, 364, 365, 366, 367, 368, 385, 387, 388, 389, 404, 416, 422], "itself": [5, 6, 7, 9, 40, 48, 55, 360, 361, 363, 364, 366, 368, 387, 416], "j": [410, 416], "j3zxncu": 141, "jig": 13, "jigsaw": [13, 71, 75, 77, 78, 80, 82, 84, 218, 223, 228, 235, 305, 310, 315, 364, 368, 386], "jigsaw_geom_filenam": 13, "jigsaw_hfun_filenam": 13, "jigsaw_jcfg_filenam": 13, "jigsaw_jig_t": 84, "jigsaw_mesh_filenam": 13, "jigsawpi": [84, 364], "jinja": [64, 130, 144, 348, 349, 350, 357, 358], "jinja2": [14, 28, 29, 119, 154, 159], "job": [1, 6, 141, 368, 386, 387, 389, 390, 391, 392, 393, 395], "job_nam": 416, "job_script": [6, 387, 416], "jobid": 394, "join": [11, 387], "joinpath": 366, "jpeg": 2, "json": [5, 8, 20, 57, 364, 395], "just": [5, 14, 25, 37, 40, 47, 67, 141, 144, 175, 352, 364, 367, 368, 385, 387, 390, 393, 395], "k": [19, 348, 350, 357, 358, 398], "k2zu3y5": 141, "k_0": 398, "k_x": [409, 411], "k_y": [409, 411], "kd": 338, "keep": [2, 5, 6, 9, 14, 25, 59, 348, 349, 350, 351, 357, 358, 360, 361, 364, 366, 368, 387, 415, 420], "kei": [20, 51, 118, 144, 146, 162, 165, 268, 295, 366], "kept": 386, "kernel": 395, "kernelspec": 395, "keyword": [5, 7, 14, 18, 19, 169, 172, 364, 404], "kg": 402, "kilomet": 402, "kind": [6, 387], "kineticenergycel": 14, "km": [13, 14, 71, 72, 73, 74, 78, 79, 80, 83, 86, 144, 159, 161, 165, 168, 184, 185, 186, 189, 192, 193, 195, 197, 200, 211, 215, 247, 248, 251, 266, 277, 290, 292, 346, 348, 349, 350, 351, 354, 356, 357, 358, 364, 387, 388, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 420, 422], "know": [6, 9, 11, 13, 364, 366, 367, 368, 387], "known": [40, 41, 141, 349, 364, 387], "kpp": 414, "kpp_test": 359, "ksh": 368, "kutta": [403, 404, 405, 406, 412, 413], "kwarg": [169, 172], "kx": [261, 287], "ky": [261, 287], "l": [12, 124, 144, 387, 395], "l1": [18, 124], "l1_norm": [18, 124], "l2": [18, 124, 144, 147, 148, 208, 347, 348, 349, 350, 351, 357, 358, 402, 403, 404, 405, 406, 409, 411, 412, 413], "l2_norm": [18, 124], "l_": 406, "l_1": 406, "l_2": 406, "l_infin": 18, "l_x": 401, "l_y": [401, 402], "label": [7, 125, 126, 335, 394, 406, 416], "lagrangian": [355, 410], "laid": 362, "lambda": [403, 405, 406, 412], "land": [7, 144, 164, 343, 352, 366, 386, 387, 388, 396, 398, 407], "land_ice_flux": 352, "land_ice_pressur": 407, "landic": [5, 6, 12, 20, 42, 70, 123, 360, 361, 363, 364, 366, 385, 386, 387, 388, 416, 422], "landice_database_root": 388, "landice_full_chrys_gnu_openmpi": 6, "landice_grid": [12, 364, 387], "landice_model": [361, 368], "landicedraft": 7, "landicemodelstep": 387, "landicepressur": [7, 396, 407], "languag": 395, "lanl": [386, 388, 390], "laplacian": [347, 402, 411], "laptop": [141, 368, 387, 388], "larg": [9, 352, 364, 366, 387, 389, 407, 412], "last": [2, 144, 349, 365, 368, 401, 416], "lat": [13, 17, 72, 78, 79, 80, 86, 101, 103, 105, 108, 125, 337, 348, 349, 350, 351, 357, 358, 388, 404], "lat_cent": 404, "lat_transect": 337, "lat_var": [17, 101, 103, 108], "late": 387, "latent": 414, "latent_heat_flux": 414, "later": [5, 8, 18, 25, 37, 40, 47, 59, 141, 175, 364, 387, 388, 402], "latest": [343, 368, 380, 386, 399, 416], "latex": 2, "latitud": [72, 79, 101, 103, 105, 108, 125, 126, 144, 334, 337, 403, 404, 405, 406, 412, 415, 420], "latitudin": 402, "latnod": [337, 339], "latter": [5, 51, 141], "lattransect": 337, "launch": [364, 386], "lauritzen": [403, 405, 412, 413], "layer": [209, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 345, 346, 347, 348, 350, 352, 354, 355, 356, 357, 358, 359, 387, 388, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "layer_thick": [334, 340], "layerthick": [14, 18, 144, 202, 232, 254, 321, 324, 328, 329, 330, 332, 334, 346, 347, 352, 354, 355, 356, 359, 364, 387], "lcrc": [5, 6, 8, 11, 57, 364, 367, 388, 389, 391, 394, 416], "le": [401, 414], "learn": [367, 387], "least": [8, 13, 361, 368, 401, 406], "leav": [5, 19, 388, 404, 407], "led": 367, "left": [105, 144, 335, 387, 398, 401, 404], "len": [182, 387], "length": [72, 79, 80, 86, 402, 407, 410], "less": [218, 223, 228, 235, 305, 310, 315, 364, 398], "lesson": 387, "let": [5, 364, 368, 385, 387, 388, 395], "letter": 387, "level": [1, 2, 11, 12, 13, 18, 19, 127, 144, 149, 150, 222, 239, 240, 260, 286, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 340, 346, 352, 360, 362, 363, 364, 366, 387, 388, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 420], "levelindic": 340, "li": 1, "lib": [6, 141], "librari": [6, 14, 136, 141, 368, 387, 389, 390, 391, 392, 393, 394, 395, 416], "lie": [336, 337], "light": 387, "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 101, 105, 108, 140, 141, 142, 144, 171, 360, 362, 364, 366, 367, 368, 384, 386, 387, 388, 394, 401, 403, 404, 405, 406, 412, 413, 416, 422], "likewis": [364, 387], "limit": [6, 19, 348, 349, 350, 357, 358, 365, 368, 401, 403, 405, 406, 412, 413], "line": [7, 10, 38, 40, 64, 96, 97, 107, 127, 141, 364, 365, 367, 368, 386, 415, 416], "linear": [6, 19, 125, 126, 127, 209, 336, 337, 347, 348, 349, 350, 354, 357, 358, 387, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413], "linearli": [342, 407], "linewidth": 335, "linf": [18, 124], "linf_norm": [18, 124], "link": [1, 2, 7, 9, 11, 14, 17, 42, 48, 55, 62, 141, 175, 360, 364, 366, 368, 387, 393, 394, 399, 416, 417], "link_nam": 62, "linspac": [9, 19, 404], "lint": 367, "linter": 367, "linux": [6, 141, 368, 394], "list": [1, 2, 6, 7, 9, 11, 14, 18, 25, 40, 43, 51, 52, 57, 58, 59, 63, 90, 96, 97, 114, 117, 118, 123, 124, 127, 144, 146, 154, 159, 182, 197, 201, 223, 231, 253, 259, 279, 285, 299, 305, 308, 310, 315, 364, 365, 366, 367, 368, 374, 385, 386, 387, 388, 390, 394, 395, 403, 404, 405, 412, 413, 416, 421, 422], "list_cas": 8, "list_machin": [8, 367], "list_suit": 8, "literatur": 401, "littl": [14, 367, 368, 386, 387], "live": [1, 52, 366, 407, 416], "ll": [6, 19, 141, 367, 387, 395, 404], "load": [6, 11, 18, 19, 112, 124, 137, 140, 141, 142, 364, 368, 386, 387, 388, 394], "load_": 368, "load_dataset": 387, "load_dev_polaris_": [368, 387], "load_dev_polaris_0": [6, 136, 137, 138, 139, 140, 141, 142, 387], "load_latest_polari": 416, "load_latest_polaris_gnu_openmpi": 416, "load_polaris_1": 416, "load_polaris_env": [141, 368, 387, 416], "load_polaris_test_morpheus_gnu_openmpi": 368, "loc": [208, 209], "local": [1, 5, 6, 8, 9, 11, 18, 42, 343, 362, 364, 368, 380, 384, 387, 388, 394, 395, 396, 398], "local_filenam": 11, "localhost": [384, 388, 394, 395, 416], "locat": [1, 5, 6, 9, 11, 14, 19, 40, 52, 117, 118, 123, 144, 343, 352, 364, 366, 368, 380, 385, 387, 388, 390, 394, 398, 401, 404, 407, 410, 416], "log": [8, 10, 19, 40, 51, 97, 124, 125, 126, 127, 364, 366, 368, 386, 416], "log_filenam": [40, 51, 364, 366], "logarithm": [19, 127], "logger": [12, 18, 40, 51, 70, 97, 124, 364, 366, 387], "loggingcontext": 12, "logic": [387, 401, 402, 410], "logical_and": [364, 387], "login": [6, 141, 368, 390, 393, 395], "lognorm": 19, "logon": 395, "lon": [13, 17, 72, 78, 79, 80, 86, 101, 103, 105, 108, 125, 337, 348, 349, 350, 351, 357, 358, 388, 404], "lon_cent": 404, "lon_min": [17, 105], "lon_transect": 337, "lon_var": [17, 101, 103, 108], "long": [4, 25, 37, 40, 47, 96, 97, 165, 175, 186, 211, 248, 272, 299, 364, 387, 401, 402, 407, 416], "long_forward": 402, "longer": [1, 192, 228, 346, 352, 355, 365, 373, 387, 401, 403, 404, 405, 406, 407, 412, 413], "longitud": [72, 79, 80, 86, 101, 103, 105, 108, 125, 126, 144, 334, 337, 403, 404, 405, 406, 412, 415, 420], "longituidin": 402, "lonnod": [337, 339], "lontransect": 337, "look": [5, 6, 7, 11, 18, 140, 142, 336, 337, 366, 367, 387, 388], "loop": 387, "lot": [11, 144, 364, 367, 387], "low": [2, 127, 406], "lower": [11, 19, 366, 387, 401], "lowercas": 387, "lowersurfac": 387, "luck": 141, "lustr": [390, 393], "lx": [13, 83, 364, 387, 401, 402, 407, 409, 410, 411, 414], "lxml": [119, 121, 135], "ly": [13, 83, 364, 387, 401, 402, 407, 410, 414], "m": [5, 6, 14, 72, 79, 80, 86, 336, 337, 346, 352, 355, 359, 360, 368, 387, 389, 390, 391, 392, 393, 395, 398, 401, 402, 404, 405, 406, 407, 412, 414, 416], "m1795": 395, "m2": 402, "mac": [368, 386], "mach": [5, 9, 11, 40, 141, 386, 389, 390, 391, 392, 393, 394, 395, 416], "mache_branch": 6, "mache_fork": 6, "machin": [5, 8, 9, 11, 40, 42, 65, 66, 99, 117, 118, 123, 343, 364, 367, 380, 386, 387, 388, 389, 390, 391, 392, 393, 395], "machine_config": 367, "machine_info": [40, 364], "machineinfo": 40, "made": [2, 5, 17, 18, 40, 43, 51, 124, 364, 366, 367, 368, 381, 383, 385, 387, 422], "magic": 387, "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 41, 43, 46, 112, 124, 125, 141, 153, 336, 337, 343, 345, 360, 364, 365, 366, 368, 380, 381, 384, 385, 387, 388, 395, 396, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 420, 422], "main": [1, 3, 6, 7, 9, 14, 45, 141, 210, 360, 361, 366, 367, 368, 387, 422], "maintain": [1, 343, 403, 416], "mainten": 387, "major": [6, 361, 364], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 36, 42, 59, 72, 73, 75, 88, 127, 136, 137, 138, 139, 140, 141, 142, 144, 175, 180, 184, 192, 200, 223, 228, 321, 324, 330, 332, 335, 336, 337, 338, 340, 343, 346, 352, 355, 360, 364, 366, 367, 368, 373, 380, 385, 386, 388, 394, 401, 403, 404, 405, 407, 412, 413, 416, 421], "make_graph": [14, 25, 175], "make_graph_fil": 14, "make_jigsaw_mesh": [13, 78], "make_map": 17, "make_planar_hex_mesh": [13, 83, 346, 347, 352, 354, 355, 356, 359, 364, 387], "make_triangle_tre": [336, 337], "make_yaml": 25, "mali": [5, 361, 364, 368, 385, 387, 388, 416, 422], "manag": [2, 347, 384, 394], "mani": [5, 6, 8, 9, 144, 360, 362, 364, 366, 367, 368, 386, 387, 401, 415, 420], "manipul": [18, 367], "manual": [6, 14, 51, 52, 364, 366, 422], "manufactur": [283, 284, 285, 287, 290, 292, 295, 356, 399, 408], "manufactured_solut": [144, 343, 353, 361, 411], "manufacturedsolut": 356, "map": [1, 8, 17, 20, 31, 32, 33, 78, 79, 100, 125, 126, 127, 169, 172, 173, 174, 175, 178, 179, 294, 366, 368, 388], "map_": 100, "map_filenam": 100, "map_from_native_model_var": 144, "map_to_native_model_var": 144, "map_tool": 17, "map_yaml_config": 144, "map_yaml_opt": 144, "mappingfilestep": [17, 19], "mark": [19, 127, 335, 368, 404], "markdown": 387, "marker": 127, "mask": [7, 127, 321, 324, 327, 330, 332, 364, 387, 388, 398], "mask_vari": 396, "mass": 345, "master": [6, 343, 380, 417], "mat": 364, "match": [163, 352, 368, 387], "math": 2, "mathrm": 398, "matplotlib": [127, 128, 335, 387], "matrix": 6, "matter": [5, 387], "max": [13, 144, 364, 387, 398, 401, 404, 410], "max_cells_per_cor": [144, 387, 402, 403, 404, 405, 409, 410, 411, 412, 413, 415, 420], "max_depth": 388, "max_layer_thick": [388, 398], "max_level_cel": [334, 340], "max_memori": [25, 37, 40, 47, 175, 364], "max_r": 388, "max_temp": 410, "max_valu": 227, "max_veloc": [19, 387], "maximum": [8, 18, 124, 126, 127, 214, 227, 309, 335, 387, 388, 398, 402], "maxlevelcel": [19, 144, 321, 322, 323, 324, 327, 328, 329, 330, 332, 387], "mayb": [367, 387], "mb": [25, 37, 40, 47, 175, 364, 388], "mbtempest": 17, "md": [7, 387], "me": [6, 387], "mean": [5, 335, 368, 387, 398, 401, 403, 404, 405, 406, 410, 412, 413, 421], "meant": [10, 367, 388], "mechan": [1, 364], "medium": 389, "meet": 2, "melt": 407, "member": 388, "memor": 368, "memori": [25, 37, 40, 47, 175, 364, 388], "mention": 367, "merg": 365, "meridion": [401, 410, 414], "mesh": [1, 5, 7, 10, 17, 25, 40, 88, 89, 100, 102, 109, 126, 127, 146, 150, 154, 155, 159, 160, 162, 163, 166, 175, 176, 177, 180, 182, 185, 187, 189, 208, 212, 215, 218, 223, 224, 225, 228, 229, 233, 235, 240, 241, 242, 244, 247, 248, 249, 251, 255, 259, 261, 264, 265, 266, 268, 273, 275, 285, 287, 290, 291, 292, 295, 298, 300, 301, 305, 308, 310, 312, 313, 315, 317, 321, 324, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 364, 366, 367, 368, 376, 377, 385, 386, 388, 398, 416, 421], "mesh_cor": 388, "mesh_cpus_per_task": 364, "mesh_databas": 388, "mesh_descript": 388, "mesh_filenam": [15, 19, 25, 88, 126, 162, 163, 175, 182], "mesh_max_disk": 388, "mesh_max_memori": 388, "mesh_min_cor": 388, "mesh_min_cpus_per_task": 364, "mesh_nam": [17, 101, 102, 103, 104, 105, 108, 109, 110, 168, 233, 240, 244, 317, 366], "mesh_path": 364, "mesh_revis": 388, "mesh_step": 364, "mesh_to_triangl": [336, 337, 338], "mesh_triangl": 13, "mesh_typ": [102, 109, 360, 364, 366], "meshstep": 364, "messag": [5, 8, 141, 364, 384, 395], "met": 2, "meta": 59, "metadata": 388, "meter": [100, 227, 319, 320, 337, 403, 405, 412], "meth": 18, "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 32, 33, 40, 41, 45, 46, 51, 52, 53, 59, 60, 70, 71, 75, 78, 79, 80, 84, 85, 100, 106, 129, 144, 145, 146, 148, 149, 154, 156, 159, 161, 163, 165, 167, 169, 175, 184, 185, 186, 188, 189, 192, 193, 194, 195, 197, 200, 201, 203, 205, 207, 210, 211, 213, 215, 218, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 235, 238, 239, 241, 242, 244, 247, 248, 250, 251, 253, 255, 257, 259, 260, 261, 264, 266, 268, 271, 272, 274, 275, 277, 279, 281, 283, 284, 285, 286, 287, 290, 292, 295, 298, 299, 300, 301, 303, 305, 308, 310, 312, 313, 315, 317, 335, 354, 356, 361, 364, 366, 367, 371, 373, 374, 376, 377, 378, 387, 396, 404, 415, 420], "meti": [6, 88], "metis_root": 368, "mhoffman": 70, "mid": [345, 401, 412], "middl": [321, 324, 330, 332, 335, 387], "midpoint": [321, 324, 330, 332, 387], "might": [2, 6, 11, 14, 17, 19, 130, 141, 144, 338, 360, 364, 368, 387, 388, 394, 416], "min": [364, 387, 398, 401, 407, 410, 414], "min_cor": 66, "min_cpus_per_task": [8, 14, 40, 47, 96, 97, 364], "min_layer_thick": [327, 388, 398, 407], "min_level_cel": [334, 340], "min_pc_fract": [387, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "min_r": 388, "min_resolut": [161, 165], "min_task": [8, 9, 14, 17, 25, 37, 40, 47, 96, 97, 100, 144, 165, 175, 186, 211, 248, 272, 299, 364, 387], "min_temp": 410, "min_vert_level": [327, 398, 407], "mind": [2, 5, 387], "miniconda": 387, "miniconda3": [6, 368], "miniforge3": [6, 368, 387, 394, 416], "minim": 345, "minimum": [8, 66, 126, 127, 144, 148, 165, 175, 309, 335, 346, 347, 354, 355, 356, 364, 387, 388, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 420], "minlevelcel": [144, 321, 323, 324, 327, 328, 329, 330, 332, 387], "minor": 6, "minu": 416, "minut": [141, 346, 352, 365, 401, 407, 410, 421], "mirrcz7": 141, "miss": [14, 364, 387, 388], "mistak": 387, "mitgcm": [387, 401], "mix": [298, 360, 361, 403, 409, 411, 414], "mixed_layer_depth_salin": 414, "mixed_layer_depth_temperatur": 414, "mixed_layer_depth_x": 414, "mixedlayerdepthsoutput": 359, "mixing_analysi": 403, "mixing_evaluation_tim": 403, "mixinganalysi": 348, "mk": 401, "mkdir": [6, 368], "mkl": [6, 141], "ml": 414, "mld": 414, "mm": [2, 144, 181], "mm_per_sec": 381, "moab": [6, 17, 368, 393, 416], "mod": [336, 337], "mode": [1, 5, 14, 361, 368, 385, 386, 387, 416], "model": [2, 5, 10, 18, 25, 26, 30, 31, 32, 33, 35, 40, 42, 117, 118, 123, 129, 130, 134, 136, 137, 138, 139, 140, 141, 142, 150, 154, 156, 159, 167, 184, 186, 188, 192, 193, 194, 195, 200, 211, 213, 223, 228, 229, 230, 240, 250, 274, 277, 294, 299, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 364, 365, 367, 368, 373, 380, 384, 385, 386, 388, 394], "model_config_data": 25, "model_step": 14, "modelstep": [14, 144, 364, 366, 387], "modif": [2, 6, 7, 364, 381], "modifi": [2, 8, 9, 13, 14, 25, 39, 53, 119, 121, 144, 175, 196, 278, 346, 347, 352, 354, 355, 356, 364, 366, 368, 386, 387, 388, 401, 407, 416], "modifysshmask": 7, "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 70, 92, 119, 136, 138, 139, 141, 144, 154, 159, 162, 165, 360, 361, 362, 364, 366, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416], "modules_aft": [141, 390, 393, 395], "modules_befor": [141, 390, 393, 395], "mom": [387, 401], "moment": 1, "momentum": [283, 290, 345, 346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 402, 409, 411], "monik": 395, "month": 399, "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 40, 51, 57, 79, 117, 118, 141, 144, 345, 346, 348, 349, 350, 351, 357, 358, 360, 362, 364, 365, 366, 367, 368, 385, 394, 399, 401, 404, 406, 407, 409, 411, 415, 416, 417, 420, 422], "morpheu": 141, "most": [9, 12, 46, 343, 349, 360, 361, 364, 367, 368, 380, 387, 388, 393, 394, 395, 398, 399, 417, 422], "mostli": 387, "motiv": 1, "move": [367, 368, 387, 415, 420], "movement": [321, 324, 330, 332, 387], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 32, 33, 40, 42, 70, 88, 102, 109, 119, 121, 123, 126, 134, 135, 136, 137, 138, 139, 140, 142, 145, 169, 170, 171, 172, 173, 174, 175, 178, 179, 182, 261, 272, 287, 294, 305, 320, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 364, 367, 371, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422], "mpas_field": 335, "mpas_grid": [12, 364], "mpas_make_target": [368, 416], "mpas_mesh_filenam": 13, "mpas_model": [5, 388], "mpas_ocean": 367, "mpas_standalonedata": [11, 141, 388, 394], "mpas_to_yaml": 386, "mpas_tool": [9, 12, 13, 83, 346, 347, 352, 354, 355, 356, 359, 364, 366, 387], "mpasconfigpars": [9, 364, 366], "mpaso_to_omega": 144, "mpaso_to_omega_dim_map": 169, "mpaso_to_omega_var_map": 169, "mpi": [6, 14, 17, 100, 136, 139, 141, 175, 177, 180, 346, 347, 354, 355, 356, 364, 368, 384, 386, 387, 389, 390, 391, 392, 393, 395, 416], "mpi_": 141, "mpi_crayclang": 393, "mpi_crayclanggpu": 393, "mpi_gnu": [141, 389, 390, 391, 392, 393, 394, 395], "mpi_gnugpu": 393, "mpi_init": 384, "mpi_intel": [389, 391, 392, 394], "mpi_mpich": [394, 416], "mpi_openmpi": [394, 416], "mpich": [141, 368, 386, 390, 393, 395, 416], "mpid_init": 384, "mpid_nem_init": 384, "mpid_nem_tcp_get_business_card": 384, "mpid_nem_tcp_init": 384, "mpidi_ch3_init": 384, "mpir_init_thread": 384, "mpirun": [141, 384, 388, 389, 390, 391, 392, 393, 394, 395, 416], "msh": [5, 13], "much": [5, 6, 14, 364, 387, 407], "multi": [127, 335], "multinod": [388, 416], "multipl": [5, 9, 14, 25, 26, 31, 32, 130, 141, 144, 178, 179, 344, 365, 366, 367, 368, 387, 394, 401, 416], "multipli": [144, 340, 403, 404, 405, 406, 409, 411, 412, 413], "multiprocess": [364, 367, 388], "munk": [209, 402], "must": [5, 7, 11, 14, 19, 25, 28, 29, 40, 43, 45, 48, 55, 123, 125, 126, 127, 141, 144, 146, 175, 209, 210, 268, 295, 345, 364, 366, 368, 387, 398, 406, 422], "my": [6, 141, 390], "my_config": 416, "my_machin": 388, "my_test_cas": 17, "my_usernam": [394, 395], "myenv": 395, "mypi": 368, "myquota": 395, "myst": [7, 387], "mytestcas": 17, "n": [5, 6, 72, 79, 80, 86, 364, 387, 390, 394, 395, 401, 402, 404, 406, 407, 409, 410, 411, 415, 416, 420], "n3b5fye": 141, "n_wavelengths_i": [409, 411], "n_wavelengths_x": [409, 411], "n_z": 398, "name": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 43, 51, 53, 61, 62, 63, 65, 66, 67, 71, 78, 84, 88, 92, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 134, 141, 144, 146, 147, 148, 149, 150, 151, 154, 159, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 182, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 207, 208, 211, 218, 222, 223, 224, 225, 228, 229, 231, 233, 239, 240, 241, 242, 244, 247, 248, 251, 260, 264, 271, 272, 275, 277, 279, 286, 290, 292, 294, 299, 305, 308, 309, 310, 312, 313, 315, 317, 320, 335, 360, 361, 364, 366, 367, 368, 374, 376, 378, 385, 387, 388, 395, 401, 406, 416, 421], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 32, 33, 35, 36, 39, 49, 118, 123, 134, 135, 162, 165, 167, 175, 180, 188, 191, 194, 199, 213, 217, 230, 250, 274, 343, 346, 347, 352, 354, 355, 356, 360, 361, 364, 366, 367, 380, 381, 383, 386, 387, 388, 396, 407, 414], "namelist_templ": 134, "namesak": 365, "nativ": 170, "natur": 83, "navig": 387, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 100, 144, 146, 154, 159, 268, 295, 346, 347, 352, 355, 364, 367, 387, 396], "ncar": 381, "ncell": [19, 144, 222, 239, 334, 341, 342, 364, 387], "ndarrai": [72, 79, 80, 86, 90, 125, 127, 182, 227, 319, 320, 387], "nearest": [403, 404, 405, 412, 413], "neareststod": [100, 404, 415, 420], "nearli": [17, 364, 366, 385, 386, 387], "necessari": [6, 7, 13, 124, 141, 387], "necessarili": [40, 42], "necessit": 406, "nedg": [19, 364, 387], "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 52, 59, 79, 141, 144, 167, 188, 194, 213, 230, 250, 274, 343, 348, 349, 350, 351, 357, 358, 361, 364, 366, 367, 368, 380, 381, 384, 386, 387, 388, 389, 394, 395, 398, 401, 403, 404, 405, 412, 413, 416, 421], "neglect": [409, 411], "neglig": [364, 407], "neighbor": 342, "neither": [25, 40, 51, 100, 165, 175, 186, 211, 248, 272, 299, 364], "nersc": 395, "nest": [31, 33, 129, 131, 154, 159, 175, 178], "net": 414, "netcdf": [6, 141, 146, 151, 172, 174, 182, 359, 388, 389, 390, 391, 392, 393, 394, 395], "netcdf3_64bit": 388, "netcdf3_class": 388, "netcdf4": 388, "netcdf4_class": 388, "network": 390, "never": [14, 141, 385], "new": [1, 2, 5, 20, 26, 40, 51, 59, 62, 71, 78, 84, 100, 120, 121, 144, 154, 159, 165, 169, 186, 193, 211, 224, 229, 241, 248, 261, 264, 272, 287, 290, 299, 312, 321, 324, 330, 332, 364, 366, 367, 368, 381, 384, 385, 386, 416], "new_branch_nam": 368, "new_child": 120, "new_step_log_fil": [51, 366], "new_tre": 121, "newli": 387, "next": [7, 141, 162, 346, 347, 352, 355, 387, 398, 407, 416], "nhalflevel": [340, 341], "nhoriznod": [340, 342], "nhorizweight": 340, "nice": [387, 395], "nightli": [2, 368, 416, 421], "no_proxi": 384, "node": [6, 14, 25, 39, 40, 44, 47, 65, 95, 96, 97, 141, 175, 336, 337, 339, 340, 342, 364, 365, 367, 368, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416], "nodecellindic": 339, "nodecellweight": 339, "nodevalu": [336, 337], "nompi": [394, 416], "non": [6, 14, 18, 345, 364, 387, 402, 403, 412, 416], "nondiverg": [357, 399, 408], "nondivergent_2d": [307, 343, 353, 412], "none": [7, 9, 14, 18, 25, 26, 28, 29, 31, 32, 37, 40, 41, 42, 43, 47, 48, 51, 52, 55, 57, 59, 61, 66, 67, 69, 71, 78, 84, 88, 90, 99, 100, 101, 104, 105, 108, 110, 114, 118, 119, 123, 124, 125, 126, 127, 130, 131, 134, 144, 146, 147, 148, 149, 150, 151, 154, 155, 159, 160, 161, 162, 163, 165, 166, 175, 176, 178, 179, 181, 186, 187, 211, 212, 222, 239, 240, 248, 249, 260, 265, 272, 273, 286, 287, 291, 299, 309, 327, 335, 337, 364, 366, 376, 387, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 419], "nonhydro": 6, "nonhydro_chrys_intel_openmpi": 6, "nonhydrostat": 6, "nonlinear": [402, 403, 406, 409, 411], "nonlinearli": 403, "nonperiod": 345, "nonperiodic_i": [13, 364, 387], "nonperiodic_x": [13, 364, 387], "nonzero": [18, 124], "noqa": [19, 70, 364, 387], "nor": [25, 40, 51, 100, 165, 175, 186, 211, 248, 272, 299, 364, 387], "norm": [19, 124, 125, 126, 144, 148, 151, 347, 348, 349, 350, 351, 357, 358, 402, 403, 404, 405, 406, 409, 411, 412, 413], "norm_arg": [19, 125, 404], "norm_typ": [19, 125, 126, 348, 349, 350, 357, 358, 403, 404, 405, 406, 412, 413], "norm_vel": 262, "normal": [19, 261, 262, 287, 288, 345, 351, 364, 365, 368, 387, 394, 406], "normal_veloc": [354, 356, 364, 387], "normalveloc": [14, 18, 19, 144, 202, 232, 254, 288, 345, 346, 347, 352, 354, 355, 356, 359, 364, 387, 414], "north": 401, "northern": [387, 401, 407, 410], "notat": [364, 415, 420], "note": [5, 7, 17, 18, 144, 387, 395], "noth": [9, 141, 384, 403, 404, 405, 412, 413], "notic": 368, "now": [1, 6, 141, 364, 368, 387, 388, 394], "np": [13, 15, 19, 227, 364, 387, 404], "np110py27_4": 384, "nsegment": [340, 341], "ntask": [8, 9, 14, 17, 25, 37, 40, 44, 47, 96, 97, 100, 144, 165, 175, 186, 211, 248, 272, 299, 364, 366, 387], "nu": [9, 14, 144, 186, 197, 211, 272, 279, 346, 355, 364, 387], "nu_": 9, "nu_2": 402, "nuanc": 387, "num": 5, "num_l2": 15, "number": [5, 6, 8, 13, 14, 25, 34, 37, 39, 40, 44, 46, 47, 65, 66, 67, 71, 72, 73, 74, 75, 83, 95, 96, 97, 100, 118, 141, 144, 155, 160, 165, 166, 175, 176, 177, 180, 186, 187, 201, 211, 212, 223, 231, 248, 249, 261, 265, 272, 273, 287, 291, 299, 343, 346, 347, 352, 354, 355, 356, 360, 364, 365, 366, 367, 374, 385, 387, 388, 394, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 420], "numer": [65, 144, 348, 350, 357, 358, 402, 403, 405, 409, 411, 412, 413], "numpi": [9, 13, 15, 72, 79, 80, 86, 90, 125, 127, 144, 182, 319, 320, 336, 337, 364, 387], "numpydoc": [7, 387], "nvertlevel": [19, 127, 144, 146, 151, 321, 324, 330, 332, 334, 341, 342, 364, 387, 398], "nvertnod": [340, 342], "nvertweight": 340, "nvidia": 141, "nvidiagpu": [6, 141], "nx": [13, 83, 360, 364, 387, 414], "ny": [13, 83, 360, 364, 387, 414], "o": [11, 12, 119, 121, 135, 141, 367, 368, 387, 388, 416], "object": [8, 12, 17, 24, 27, 28, 29, 52, 54, 92, 111, 112, 115, 119, 129, 130, 134, 135, 154, 159, 162, 165, 261, 287, 361, 366, 367, 387], "observ": [17, 336, 337, 340, 386], "obtain": [354, 356, 368, 390], "obviou": [7, 14, 387], "obvious": 387, "occupi": 407, "occur": [368, 384, 398], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 25, 31, 32, 33, 42, 123, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 385, 386, 387, 388, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 421, 422], "ocean_cached_fil": 5, "ocean_database_root": 388, "ocean_model": [343, 368, 388], "ocean_pr_chrys_gnu_openmpi": 6, "ocean_pr_chrys_intel_openmpi": 6, "oceaniostep": 144, "oceanmodelstep": [144, 364, 387], "ocemod": 410, "oddli": 13, "off": [5, 6, 368, 384], "offer": 365, "offlin": 388, "offset": 413, "often": [6, 9, 18, 19, 40, 144, 360, 362, 364, 365, 366, 367, 368, 387, 388, 421, 422], "okai": [2, 6, 364, 387], "olcf": 393, "older": 5, "omega": [5, 18, 25, 31, 32, 33, 129, 169, 170, 171, 172, 173, 174, 175, 178, 179, 261, 287, 294, 343, 361, 367, 385, 387, 399, 404, 406, 409, 411, 415, 416], "omega_build": 368, "omega_ctest": 11, "omega_to_mpaso_dim_map": 169, "omega_to_mpaso_var_map": 169, "omit": [6, 364, 416], "onc": [5, 6, 14, 43, 336, 337, 346, 349, 368, 387, 388, 403, 404, 405, 412, 413, 416], "one": [1, 2, 5, 6, 7, 10, 11, 14, 17, 18, 19, 25, 39, 40, 42, 43, 50, 51, 57, 62, 117, 118, 123, 141, 144, 164, 168, 175, 192, 228, 299, 336, 337, 343, 346, 347, 348, 350, 352, 354, 355, 356, 357, 358, 359, 360, 362, 364, 366, 367, 368, 373, 383, 384, 385, 386, 388, 394, 395, 398, 401, 403, 404, 405, 407, 411, 412, 413, 415, 416, 419, 420, 421, 422], "ones": [5, 321, 324, 330, 332, 367, 387], "ones_lik": [364, 387], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 51, 127, 141, 144, 343, 345, 348, 349, 350, 351, 357, 358, 359, 361, 364, 366, 367, 380, 383, 386, 387, 388, 390, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419], "onlin": 388, "onto": [5, 368], "open": [4, 6, 144, 172, 368, 387, 407], "open_dataset": [15, 19, 172, 364, 387], "open_model_dataset": 144, "openmp": [6, 25, 37, 40, 47, 97, 136, 138, 139, 165, 175, 186, 211, 248, 272, 299, 364, 387], "openmp_thread": [9, 14, 25, 37, 40, 47, 97, 165, 175, 186, 211, 248, 272, 299, 364, 366, 387], "openmpi": [6, 136, 141, 368, 386, 389, 391, 392, 416], "oper": [8, 49, 141, 191, 199, 217, 283, 290, 364, 366, 421], "operating_system": 141, "oppos": [5, 14, 30, 156, 167, 168, 188, 194, 213, 230, 235, 250, 274, 305, 310, 315, 337, 387], "opt": [13, 84], "option": [5, 7, 9, 11, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 47, 48, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 71, 77, 78, 79, 82, 84, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 141, 146, 147, 149, 150, 153, 154, 156, 157, 158, 159, 161, 162, 163, 165, 167, 175, 178, 179, 181, 186, 188, 194, 196, 208, 211, 213, 214, 218, 219, 221, 222, 224, 229, 230, 235, 236, 238, 239, 240, 241, 247, 248, 250, 255, 257, 259, 260, 261, 264, 268, 271, 272, 274, 277, 278, 283, 285, 286, 287, 290, 295, 299, 301, 303, 305, 306, 308, 312, 319, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 376, 380, 381, 384, 386, 388, 398, 400, 416, 422], "orang": [19, 348, 350, 357, 358, 362], "order": [1, 5, 8, 13, 14, 144, 336, 337, 348, 349, 350, 351, 357, 358, 361, 364, 365, 387, 396, 403, 404, 405, 406, 411, 412, 413, 414, 416], "org": 410, "organ": [360, 362, 365, 386], "organiz": 362, "orient": [367, 406], "origin": [8, 57, 334, 336, 337, 340, 368, 387, 398, 416], "orion": 393, "ornl": 393, "osx": [141, 394], "ot": [7, 387], "other": [2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 40, 41, 43, 51, 59, 111, 127, 136, 202, 232, 254, 341, 342, 348, 349, 350, 351, 357, 358, 359, 360, 361, 362, 366, 367, 368, 375, 384, 385, 386, 388, 401, 402, 403, 404, 405, 412, 413, 422], "otherwis": [12, 19, 141, 347, 364, 366, 368, 387, 389, 390, 391, 392, 393, 394, 395, 401], "our": [6, 141, 367, 387, 416], "ourselv": 364, "out": [6, 8, 9, 13, 59, 94, 98, 127, 141, 144, 154, 159, 174, 335, 362, 364, 367, 368, 388, 398, 416], "out_file_nam": [19, 127], "out_filenam": [19, 122, 125, 126, 320, 335], "out_nam": 14, "outcom": 367, "outer": 364, "outlin": 335, "outline_color": 335, "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 40, 41, 43, 49, 50, 51, 57, 87, 88, 97, 100, 113, 114, 124, 126, 146, 150, 151, 154, 159, 169, 170, 175, 182, 191, 199, 201, 202, 207, 208, 217, 221, 231, 232, 233, 238, 240, 244, 253, 254, 259, 268, 285, 295, 308, 310, 315, 317, 320, 340, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 366, 374, 375, 383, 385, 388, 395, 396, 403, 404, 405, 406, 407, 412, 413, 416, 421], "output_": 387, "output_fil": [182, 364, 387], "output_filenam": [15, 144, 154, 159, 182], "output_full_run": 18, "output_interv": [14, 144, 387, 396, 403, 404, 405, 406, 407, 412, 413], "output_interval_str": 144, "output_restart_run": 18, "outsid": [51, 52, 360, 362, 364, 366, 368], "over": [5, 9, 14, 59, 100, 125, 126, 335, 364, 367, 386, 387, 398, 401, 407, 410, 414, 416], "over_color": [19, 348, 350, 357, 358], "overal": 8, "overhead": 364, "overkil": 14, "overlain": 19, "overli": [7, 387, 407], "overrid": [5, 13, 14, 45, 46, 49, 53, 59, 75, 78, 79, 80, 144, 191, 199, 210, 217, 364, 366, 367, 387, 388, 393, 395, 416], "overridden": [9, 31, 32, 33, 60, 144, 387], "overview": [7, 386, 390, 395], "overwrit": 62, "own": [6, 7, 8, 9, 11, 12, 19, 40, 141, 144, 364, 366, 367, 368, 385, 387, 388, 403, 404, 405, 412, 413, 416, 422], "p": [5, 6, 368, 387, 388, 416], "p1": 395, "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 42, 53, 92, 99, 119, 123, 130, 141, 144, 154, 159, 162, 165, 360, 361, 362, 363, 364, 366, 368, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 416], "page": [3, 7, 141, 389], "pain": 387, "pair": [339, 403, 405, 412, 413, 419], "panel": [127, 335], "paper": [406, 416], "parallel": [1, 5, 17, 25, 37, 40, 46, 47, 141, 175, 364, 367, 368, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416, 422], "parallel_execut": [141, 384, 388, 389, 390, 391, 392, 393, 394, 395, 416], "param": [298, 300], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 47, 48, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 78, 83, 84, 86, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 132, 134, 135, 144, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 181, 182, 184, 185, 186, 188, 189, 192, 193, 194, 195, 197, 200, 201, 203, 205, 207, 208, 209, 211, 213, 214, 215, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 235, 238, 239, 240, 241, 242, 244, 247, 248, 250, 251, 253, 255, 257, 259, 260, 261, 262, 263, 264, 266, 268, 271, 272, 274, 275, 277, 279, 281, 283, 285, 286, 287, 288, 289, 290, 292, 295, 299, 301, 303, 305, 308, 309, 310, 312, 313, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 354, 356, 360, 364, 366, 372, 373, 374, 376, 377, 378, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414], "parameter": 407, "parent": [1, 35, 144, 348, 349, 350, 351, 354, 356, 357, 358, 360, 361, 364], "parlanc": 141, "parmeti": 6, "parmetis_root": 368, "pars": [5, 9, 14, 26, 27, 28, 29, 92, 119, 121, 130], "parser": [9, 48, 55, 59, 195, 218, 223, 228, 235, 257, 277, 283, 305], "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 40, 51, 144, 154, 159, 163, 165, 186, 211, 224, 241, 248, 264, 272, 290, 299, 312, 335, 339, 346, 347, 352, 354, 355, 356, 364, 365, 366, 367, 368, 386, 387, 398], "partial": [322, 323, 387, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "partial_cell_typ": [387, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "particular": [9, 141, 334, 360, 368, 386, 390, 394, 416], "particularli": [14, 384, 387, 407, 415, 420], "partit": [25, 36, 46, 65, 88, 144, 175, 346, 347, 352, 354, 355, 356, 364, 388, 389, 390, 391, 392, 393, 416], "partition_execut": 388, "partition_graph": [14, 25, 175], "pass": [5, 8, 9, 12, 13, 14, 18, 83, 124, 125, 144, 169, 172, 360, 361, 364, 366, 367, 368, 385, 416], "passiv": 404, "past": 14, "patch": [19, 126, 127, 387], "patch_edge_color": 126, "patch_mask": [19, 127], "path": [5, 6, 9, 11, 14, 18, 40, 42, 43, 51, 52, 57, 59, 61, 62, 67, 70, 99, 115, 117, 118, 123, 124, 127, 141, 144, 146, 172, 174, 268, 295, 343, 361, 364, 366, 367, 368, 374, 380, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416, 422], "path_to_mpas_ocean": 387, "path_to_working_dir": 387, "pattern": 387, "pde": 2, "peopl": 388, "pep8": [367, 368], "per": [1, 8, 14, 25, 37, 39, 40, 47, 65, 96, 97, 126, 141, 144, 175, 335, 364, 387, 388, 389, 390, 391, 392, 393, 394, 395, 401, 403, 404, 405, 406, 409, 411, 412, 413, 415, 420], "perform": [1, 2, 5, 8, 14, 17, 18, 40, 45, 46, 49, 50, 71, 124, 141, 144, 154, 159, 165, 185, 186, 191, 195, 199, 210, 211, 217, 224, 241, 247, 248, 264, 272, 277, 290, 298, 299, 300, 312, 340, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364, 365, 366, 377, 385, 386, 387, 388, 394, 401, 402, 404, 407, 421], "performance_test": 364, "perhap": [17, 19, 43, 335, 360, 362], "period": [13, 345, 346, 347, 348, 350, 352, 354, 355, 356, 357, 358, 364, 387, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413], "perl": 141, "perlmutt": [6, 141, 390, 394, 416], "permiss": [63, 368], "permit": 402, "person": [368, 384], "perspect": 361, "pertain": [415, 420], "perturb": [401, 404, 410, 411], "perturb_width": [364, 387, 401], "petabyt": 390, "petersen": [144, 368, 387, 401], "petsc_support": 6, "phase": [396, 407], "phc": [364, 398], "phi": 414, "phi_0": 414, "philosophi": [365, 367, 387], "physic": [13, 83, 377, 383, 387, 398], "pi": [364, 387, 398, 401, 402, 403, 404, 405, 406, 412], "pick": [17, 111, 112], "pickl": [5, 8, 111, 112, 364, 387, 416], "piec": [5, 360, 361, 387], "piecewis": 407, "pinch": 144, "pio": [6, 25, 36, 39, 175, 346, 347, 352, 354, 355, 356], "pip": 368, "piston": 414, "pkgconf": 141, "place": [5, 6, 14, 125, 141, 360, 364, 366, 381, 387, 394], "placehold": [25, 37, 40, 47, 175, 364, 416], "plan": [2, 13, 144, 343, 354, 356, 364, 380, 385, 389, 390, 391, 392, 393, 395, 409, 411, 422], "planar": [5, 9, 127, 144, 336, 345, 352, 361, 364, 387, 402, 407, 409, 410, 411, 414, 415, 420, 421, 422], "planar_hex": [13, 83, 346, 347, 352, 354, 355, 356, 359, 364, 387], "plane": [255, 402], "platform": 390, "pleas": [6, 141, 361, 367, 368, 387, 416], "plot": [13, 86, 125, 126, 127, 144, 146, 151, 197, 203, 233, 244, 279, 303, 317, 334, 335, 336, 337, 340, 346, 348, 349, 350, 351, 355, 357, 358, 378, 403, 404, 405, 406, 409, 410, 411, 412, 413, 419, 422], "plot_cell_width": 13, "plot_global_lat_lon_field": 19, "plot_global_mpas_field": 19, "plot_horiz_field": [19, 364, 387], "plot_land": [19, 125, 126], "plot_start_end": 335, "plot_tim": 410, "plot_transect": [144, 334], "plt": 387, "plu": [6, 385], "plugin": 367, "pm": [141, 395, 416], "pmi2": 392, "pn2034311": 384, "pnetcdf": [6, 141, 389, 390, 391, 392, 393, 394, 395], "png": [2, 13, 19, 335, 348, 349, 350, 351, 357, 358, 364, 387], "poari": 393, "point": [5, 6, 9, 56, 62, 103, 141, 336, 337, 340, 343, 345, 360, 361, 366, 367, 368, 380, 387, 388, 394, 407, 412, 416], "polar": [388, 389, 391, 398], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 136, 138, 139, 141, 144, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 380, 383, 384, 385, 387, 388, 394, 399, 400, 401, 407, 417, 421, 422], "polaris_branch": [343, 380], "polaris_cach": [5, 8, 20, 364], "polaris_compil": 368, "polaris_env": [141, 389, 390, 391, 392, 393, 394, 395], "polaris_head": 387, "polaris_machin": [11, 368], "polarisconfigpars": [9, 11, 17, 21, 40, 48, 51, 55, 61, 65, 66, 95, 98, 99, 115, 125, 126, 144, 162, 195, 214, 218, 223, 228, 235, 247, 257, 261, 277, 283, 287, 305, 319, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 387], "polarisyaml": [134, 135], "polygon": 19, "pop": [387, 401], "port": [1, 387, 395], "posit": [261, 287, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 332, 334, 340, 387, 398, 414], "possibl": [2, 8, 11, 74, 345, 348, 349, 350, 351, 352, 357, 358, 364, 365, 366, 367, 386, 387, 398, 406], "possibli": [14, 40, 51, 341, 342, 361, 364, 366, 368, 387], "post": 380, "potenti": [141, 182, 195, 277, 364, 387, 401, 410], "pr": [5, 6, 416, 421], "practic": [364, 367, 368], "pre": [5, 141, 368], "prebootstrap": 6, "preced": [5, 59, 144], "precis": [14, 144, 364, 387], "predecessor": [367, 385, 386], "predefin": 5, "prefer": [1, 2, 141, 364, 365, 387, 388], "prefix": [14, 42, 141, 144, 150, 218, 223, 228, 240, 366, 368, 388], "premium": 395, "prepend": 7, "prescrib": [346, 347, 354, 355, 356, 406], "present": [1, 52, 127, 144, 368, 387, 396], "preserv": [412, 416], "press": 398, "pressur": [7, 163, 164, 343, 352, 388, 396, 407, 409, 411], "pretti": [141, 364, 367, 387, 388], "prevent": [1, 364], "previou": [5, 127, 202, 232, 254, 364, 368, 375, 387, 402, 416, 421], "previous": 387, "previous_workdir": 416, "primari": [2, 5, 9, 387, 421], "primarili": 386, "print": [5, 12, 18, 67, 124, 131, 364, 367, 402, 421], "prior": [53, 144, 364], "prioriti": 390, "privat": 387, "prjquota": 395, "probabl": [387, 394, 406], "problem": [6, 364, 368, 384, 387], "problemat": 364, "proc": 387, "proc_count": 223, "proce": 1, "procedur": [4, 141, 368, 387, 395], "proceed": 368, "process": [2, 6, 8, 14, 35, 96, 97, 135, 364, 367, 368, 380, 385, 386, 387, 407], "processed_registry_filenam": 135, "processor": [201, 223, 231, 364, 374, 401, 407], "produc": [12, 14, 17, 19, 40, 41, 43, 57, 144, 151, 162, 163, 184, 192, 200, 223, 228, 248, 255, 340, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364, 367, 368, 373, 383, 387, 402, 403, 405, 409, 411, 412, 413, 416, 419], "product": 8, "profil": [352, 359, 384, 414], "prognost": [352, 401, 407], "program": [367, 388], "progress": [63, 113, 114], "prohibit": 421, "proj": [104, 110, 393], "proj_attr": [104, 110], "proj_str": [104, 110], "project": [2, 5, 6, 7, 70, 104, 110, 343, 367, 368, 380, 381, 387, 388, 389, 390, 394, 416, 417], "project_nam": 390, "projectid": 395, "promot": 387, "propag": [409, 410, 411], "proper": 387, "properli": [2, 136, 138, 139, 387, 388, 416], "properti": [8, 305, 345, 364, 394, 403, 404, 405, 412, 413], "proport": [14, 144, 387, 398, 401, 403, 404, 405, 406, 407, 409, 411, 412, 413, 415, 420], "proportion": [404, 406], "propos": [1, 2], "proven": [8, 10, 59, 386, 388], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 40, 42, 43, 48, 50, 51, 55, 100, 104, 110, 124, 130, 141, 144, 165, 175, 181, 186, 211, 248, 272, 299, 336, 337, 343, 346, 347, 352, 354, 355, 356, 359, 360, 361, 362, 364, 365, 366, 367, 368, 380, 383, 384, 385, 386, 387, 388, 394, 396, 399, 402, 404, 407, 412, 415, 416], "proxi": 386, "proxy_dis": 384, "proxy_en": 384, "proxyout": 384, "pscratch": 6, "pseudo": 2, "psi": 404, "psi0": 404, "psi_0": 404, "psu": [401, 407, 410, 414], "pty": 387, "public": [7, 11, 364, 387, 388], "public_html": [389, 391, 394], "pull": [7, 141, 367, 368, 387, 388], "pull_request": 388, "purg": 141, "purpos": [2, 360, 367, 387, 422], "purposefulli": [336, 337], "push": 387, "put": [144, 161, 368, 387], "put_origin_on_a_cel": 360, "py": [6, 12, 14, 18, 70, 141, 352, 360, 361, 367, 368, 385, 387, 388, 393], "pycharm": [367, 368, 387], "pyplot": 387, "pyremap": [17, 106], "python": [6, 7, 8, 9, 26, 46, 53, 144, 360, 362, 364, 366, 367, 368, 385, 386, 387, 388, 394, 395, 416], "q": 5, "qo": [65, 389, 390, 392, 394, 395, 416], "qu": [1, 5, 11, 144, 218, 223, 228, 366, 387, 388, 400, 403, 404, 405, 406, 412, 413, 421], "qu240": [14, 364, 367, 368, 388, 416], "qu240_for_e3sm": 416, "qu240dynamicadjust": 14, "qu60": 17, "qu_base_mesh_120km": 1, "qu_base_mesh_150km": 1, "qu_base_mesh_180km": 1, "qu_base_mesh_210km": 1, "qu_base_mesh_240km": 1, "qu_base_mesh_60km": 1, "qu_base_mesh_90km": 1, "qu_base_resolut": [144, 404], "qu_forward_120km": 1, "qu_forward_150km": 1, "qu_forward_180km": 1, "qu_forward_210km": 1, "qu_forward_240km": 1, "qu_forward_60km": 1, "qu_forward_90km": 1, "qu_init_120km": 1, "qu_init_150km": 1, "qu_init_180km": 1, "qu_init_210km": 1, "qu_init_240km": 1, "qu_init_60km": 1, "qu_init_90km": 1, "qu_map_120km": 1, "qu_map_150km": 1, "qu_map_180km": 1, "qu_map_210km": 1, "qu_map_240km": 1, "qu_map_60km": 1, "qu_map_90km": 1, "qu_refinement_factor": [144, 404], "qu_resolut": [403, 404, 405, 412, 413], "qu_viz_120km": 1, "qu_viz_150km": 1, "qu_viz_180km": 1, "qu_viz_210km": 1, "qu_viz_240km": 1, "qu_viz_60km": 1, "qu_viz_90km": 1, "quad": 334, "quadrilater": 340, "qualit": [14, 402], "qualiti": [65, 389, 390, 392, 394, 395, 416], "quantiti": 19, "quasi": [13, 78, 348, 349, 350, 351, 357, 358, 366, 388, 403, 404, 405, 406, 407, 412, 413, 415, 420], "quasiuniformsphericalmeshstep": [13, 144, 366], "question": [14, 364, 388], "queu": 141, "queue": 386, "quick": [386, 387, 399, 407, 417], "quicker": 365, "quickli": [8, 407], "quiet": [18, 113, 114, 124, 131], "quit": [2, 362, 364, 366, 387, 407], "quot": 7, "quwisc240": [364, 367, 416], "quwisc240_for_e3sm": 416, "r": [5, 227, 395, 403, 404, 405, 412], "rad": 404, "radial": 422, "radian": [337, 339], "radiu": [227, 337, 403, 404, 405, 412, 413], "rain": 414, "rain_flux": 414, "rais": [7, 9, 18, 40, 43, 61, 62, 144, 364, 367, 387, 406], "ran": [1, 112], "rang": [9, 19, 127, 387, 410], "rare": [366, 368], "rate": [146, 148, 149, 222, 239, 260, 286, 309, 348, 349, 350, 351, 354, 356, 357, 358, 387, 403, 404, 405, 406, 409, 411, 412, 413, 414], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 40, 42, 59, 141, 144, 346, 364, 368, 384, 387, 398, 402], "ratio": 127, "rc": 6, "re": [5, 6, 9, 352, 366, 367, 368, 385, 387, 388, 394, 395, 403, 404, 405, 407, 412, 413], "reach": 365, "read": [8, 20, 27, 28, 29, 40, 41, 51, 63, 91, 92, 129, 144, 345, 364, 366, 387], "readabl": [11, 367], "readi": [6, 387, 395], "readlin": 141, "readm": [11, 366], "realist": [360, 386, 407, 422], "realli": [387, 395], "reason": [14, 17, 18, 46, 141, 364, 367, 387, 421], "recent": [365, 399, 417], "recip": 366, "recogn": [368, 388, 416], "recognit": 368, "recommend": [5, 7, 11, 19, 141, 364, 365, 367, 368, 387, 394], "recompil": 416, "recreat": [6, 366, 368, 384], "recurs": [6, 343, 367, 368, 380, 387, 416], "red": [127, 335, 362], "redirect": [40, 364], "reduc": [360, 364, 407], "redund": [5, 321, 324, 330, 332, 346, 360, 387], "ref": [321, 324, 330, 332, 387], "ref_dens": 7, "refbottomdepth": [321, 322, 323, 324, 327, 328, 330, 332, 364, 387], "refer": [1, 7, 14, 40, 182, 195, 277, 321, 324, 327, 330, 332, 364, 367, 368, 385, 386, 387, 398, 401, 402, 406, 410, 416], "referenc": [367, 387], "reference_tim": [14, 144], "refin": [144, 146, 147, 149, 154, 157, 158, 159, 218, 221, 223, 224, 228, 229, 235, 238, 241, 257, 259, 264, 268, 283, 285, 290, 295, 305, 308, 310, 312, 315, 404], "refinement_factor": [144, 146, 147, 149, 150, 154, 157, 158, 159, 222, 223, 224, 228, 229, 239, 240, 241, 260, 264, 268, 286, 290, 295, 310, 312, 315, 409, 411], "refinterfac": [321, 324, 330, 332, 387], "reflayerthick": 14, "reflect": [1, 5, 368], "reformat": 367, "reftopdepth": [321, 324, 327, 328, 330, 332, 387], "refzmid": [14, 321, 324, 330, 332, 364, 387], "regard": 2, "regardless": [51, 366], "region": [17, 19, 386, 388, 407], "registri": [135, 345, 380], "registry_process": 380, "regress": [2, 346, 348, 349, 350, 351, 355, 357, 358, 365, 385, 386, 387, 401, 404, 407, 416, 421], "regular": [5, 19, 67, 72, 79, 218, 223, 228, 235, 305, 310, 315, 387, 389, 392, 394, 395, 406, 416], "reinstal": 368, "rel": [1, 2, 5, 9, 17, 18, 42, 43, 52, 57, 59, 117, 118, 123, 124, 154, 159, 162, 163, 165, 175, 186, 211, 343, 361, 364, 366, 367, 368, 374, 380, 385, 387, 401, 406, 407, 410, 416, 422], "relat": [1, 6, 7, 11, 13, 14, 17, 141, 144, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 364, 368, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417], "relationship": [348, 403], "relativevort": 387, "relativevorticitycel": 14, "releas": [6, 141, 367, 368, 386, 394, 399, 416], "release_6": 399, "relev": [3, 7, 9, 144, 348, 349, 350, 351, 354, 356, 357, 358, 387, 389, 390, 391, 392, 393, 394, 395, 415, 416, 420], "reli": [14, 364, 366, 387], "remain": [6, 387, 404, 406, 407, 414], "remap": [1, 10, 19, 355, 386, 404, 406, 410, 415, 420], "remap_fil": 106, "remap_method": [17, 404, 415, 420], "remapp": [106, 107], "rememb": 368, "remot": [11, 42, 368, 386], "remote_filenam": 11, "remov": [1, 5, 14, 24, 54, 64, 114, 346, 347, 352, 354, 355, 356, 366, 368, 387], "remove_step": 366, "renam": [18, 124, 170, 171, 367], "render": [14, 28, 29, 119], "renorm": 398, "repeat": [336, 337, 349], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 32, 33, 48, 51, 55, 62, 92, 119, 130, 131, 141, 144, 154, 159, 162, 165, 167, 178, 179, 188, 194, 213, 230, 250, 274, 366, 367, 387, 388, 416], "repo": [2, 5, 6, 141, 343, 380, 386, 387, 417], "report": 18, "repositori": [141, 362, 386, 387, 416], "repres": [40, 387, 398, 404, 407, 412], "reproduc": 349, "request": [6, 7, 14, 15, 25, 34, 36, 141, 144, 154, 159, 175, 322, 323, 364, 366, 367, 368, 384, 387, 388, 403, 404, 405, 412, 413], "requir": [5, 6, 8, 14, 17, 18, 25, 37, 40, 41, 47, 100, 144, 165, 175, 186, 211, 248, 272, 299, 343, 360, 361, 364, 365, 366, 367, 368, 380, 381, 384, 386, 387, 388, 393, 394, 398, 399, 415, 416, 417, 420, 422], "rerun": [5, 349, 368, 404], "res_str": 387, "resdir": [9, 361], "reset": 6, "resid": [1, 5, 9, 42, 144, 146, 221, 238, 259, 285, 308, 310, 315, 362, 364, 366], "resolut": [1, 9, 13, 14, 17, 71, 74, 78, 79, 83, 101, 105, 108, 144, 146, 147, 151, 153, 157, 158, 159, 161, 165, 168, 184, 185, 186, 189, 192, 193, 195, 197, 200, 208, 211, 215, 218, 235, 247, 248, 251, 259, 266, 268, 277, 285, 290, 292, 295, 305, 308, 310, 315, 336, 337, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 388, 396, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 420, 422], "resolution_to_subdir": [9, 361], "resolv": [368, 402], "resourc": [11, 14, 37, 40, 44, 47, 95, 96, 97, 155, 160, 166, 176, 187, 212, 249, 265, 273, 291, 299, 346, 347, 354, 355, 356, 364, 366, 387], "resources_fix": 299, "respect": [2, 8, 9, 14, 18, 19, 144, 147, 208, 336, 337, 352, 364, 367, 403, 404, 405, 407, 412, 413, 415, 420], "respons": 368, "rest": [6, 182, 216, 329, 398, 402, 404], "restart": [14, 18, 51, 144, 224, 247, 248, 253, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 365, 367, 373, 374, 383, 385, 387, 400, 404, 407, 416, 421], "restart_filenam": 374, "restart_interv": 14, "restart_run": [5, 18, 383, 401, 419], "restart_test": 360, "restartstep": 349, "restarttest": 360, "restingthick": [144, 321, 324, 329, 330, 332, 387], "restor": 414, "restrict": [13, 387, 410, 415], "restructuredtext": 7, "result": [5, 13, 18, 61, 74, 83, 141, 144, 184, 192, 197, 200, 203, 223, 228, 279, 303, 336, 337, 338, 341, 342, 346, 348, 349, 350, 351, 355, 357, 358, 364, 365, 367, 368, 373, 378, 385, 387, 388, 401, 403, 404, 405, 406, 412, 413, 415, 420, 421], "retain": 388, "retriev": [8, 384], "return": [2, 7, 15, 31, 32, 33, 50, 58, 61, 64, 65, 72, 73, 74, 79, 83, 89, 90, 92, 95, 96, 106, 115, 116, 118, 119, 121, 124, 127, 130, 134, 135, 144, 147, 148, 149, 150, 155, 157, 158, 160, 162, 166, 168, 170, 171, 172, 176, 178, 179, 181, 182, 187, 208, 212, 214, 222, 227, 239, 240, 249, 260, 262, 263, 265, 273, 286, 288, 289, 291, 309, 319, 322, 323, 327, 328, 329, 334, 336, 337, 338, 339, 340, 341, 342, 366, 367, 387, 404], "reus": [14, 19, 127, 364, 367, 368, 387, 388, 416], "revers": 412, "revis": [5, 31, 32, 178, 179, 388], "rho": 144, "rho_0": 402, "ri": 227, "right": [15, 140, 141, 142, 144, 335, 366, 368, 387, 388, 398, 401, 404, 416], "rightarrow": 398, "rigid": [345, 413], "rise": 407, "risk": [368, 387, 407], "rk4": [14, 144, 352, 367, 403, 404, 405, 406, 407, 412, 413], "rk4_dt_per_km": [144, 396, 403, 404, 405, 406, 407, 412, 413], "role": 1, "root": [1, 42, 141, 144, 343, 361, 364, 367, 368, 380, 385, 388, 389, 390, 391, 392, 393, 394, 395, 398, 416], "rotat": [358, 399, 403, 404, 405, 408, 409, 411, 412], "rotation_2d": [307, 343, 353, 413], "rotation_vector": 413, "rough": 412, "roughli": [403, 404, 405, 412, 413], "round": [144, 403, 404, 405, 412, 413], "routin": 19, "row": 387, "rpe": [9, 203, 361, 367, 387, 416], "rpe_": 387, "rpe_1_nu_1": [387, 401], "rpe_2_nu_5": [387, 401], "rpe_3_nu_10": 387, "rpe_4_nu_20": 387, "rpe_5_nu_200": 387, "rpe_t": 387, "rst": [7, 14, 387], "rule": 73, "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 37, 40, 41, 43, 46, 47, 50, 51, 52, 57, 70, 95, 96, 97, 106, 117, 118, 123, 139, 141, 154, 156, 159, 165, 167, 171, 175, 185, 186, 188, 192, 194, 197, 201, 203, 211, 213, 223, 224, 228, 229, 230, 231, 241, 247, 248, 250, 253, 259, 264, 272, 274, 279, 285, 290, 298, 299, 300, 308, 310, 312, 315, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 362, 363, 365, 366, 367, 373, 374, 377, 380, 383, 384, 385, 386, 387, 388, 394, 396, 400, 421, 422], "run_as_subprocess": [40, 364], "run_by_default": [52, 366], "run_dur": [144, 396, 403, 404, 405, 406, 407, 412, 413], "run_duration_str": 144, "run_mod": 14, "run_second": [14, 387], "run_single_step": 8, "run_step": 366, "run_task": [8, 364, 366], "run_time_step": [14, 186, 211, 272, 347, 364, 387], "rung": [403, 404, 405, 406, 412, 413], "runmodel": 366, "runtim": [1, 8, 14, 30, 46, 144, 156, 167, 188, 194, 213, 230, 250, 274, 364, 387, 407], "runtime_setup": [14, 17, 37, 47, 346, 347, 352, 354, 355, 356, 366], "sacctmgr": 390, "safe": [6, 14, 364, 368, 401], "safer": 416, "safest": [141, 368], "sai": [387, 394], "salin": [18, 202, 254, 345, 346, 352, 355, 359, 364, 387, 401, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 420], "salinity_difference_across_mixed_lay": 414, "salinity_gradient_interior": 414, "salinity_gradient_mixed_lay": 414, "salinity_interior_restoring_r": 414, "salinity_piston_veloc": 414, "salinity_surface_restoring_valu": 414, "salloc": [390, 393, 394, 395], "same": [5, 6, 7, 9, 14, 18, 40, 41, 42, 50, 124, 126, 141, 144, 148, 149, 170, 171, 222, 239, 260, 286, 309, 346, 355, 359, 360, 362, 364, 365, 366, 367, 368, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 401, 403, 404, 405, 406, 407, 411, 412, 413, 414, 416, 421, 422], "saniti": [5, 387], "sara": 6, "satisfi": 1, "save": [8, 19, 61, 86, 124, 141, 335, 346, 348, 349, 350, 351, 357, 358, 360, 364, 366, 387, 394, 401, 407], "save_imag": 360, "sbatch": [6, 387, 393, 394, 416], "scalandr": 6, "scalar": 345, "scale": [144, 154, 159, 222, 223, 224, 228, 229, 239, 241, 260, 264, 286, 290, 312, 401, 412, 416], "scancel": 394, "scheme": [348, 350, 352, 355, 357, 358, 396, 403, 407, 410, 412, 414], "scienc": 398, "scientif": 416, "scipi": [336, 337, 338, 388], "scorpio": [6, 368, 394, 416], "scratch": [5, 6, 368, 387, 390, 395, 416], "scratch4": 390, "scratch5": 390, "scrip": [100, 140, 142, 388], "script": [4, 5, 6, 11, 12, 19, 56, 66, 137, 140, 141, 142, 367, 385, 386, 387, 390, 394], "sea": [7, 144, 163, 164, 209, 261, 263, 287, 289, 323, 327, 328, 329, 334, 335, 340, 343, 352, 381, 383, 386, 387, 388, 398, 407, 409, 411, 419, 422], "seafloor": [322, 327, 328, 329, 334, 335, 340, 398], "seafloor_color": 335, "seaic": [3, 10, 20, 42, 361, 364, 383, 385, 386, 416, 417, 420, 422], "seaice_model": 380, "seaice_standalone_framework": 417, "search": [5, 67, 390], "seawat": 7, "sec": 404, "seciton": 144, "second": [1, 9, 13, 14, 15, 90, 144, 149, 150, 181, 186, 211, 222, 239, 240, 260, 286, 299, 336, 337, 349, 359, 364, 367, 396, 401, 403, 404, 405, 407, 412, 414, 419], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 33, 79, 125, 126, 129, 130, 131, 141, 144, 175, 178, 255, 281, 319, 321, 324, 330, 332, 343, 348, 349, 350, 351, 357, 358, 359, 360, 361, 364, 365, 367, 368, 380, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 420], "sections_yet_another_channel_": 387, "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 136, 138, 139, 141, 334, 346, 348, 349, 350, 351, 352, 355, 356, 357, 358, 364, 368, 384, 387, 388, 394, 399, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422], "seem": [6, 14, 387, 390, 395], "seen": 387, "segment": [336, 337, 338, 340], "select": [5, 8, 127, 334, 364, 368, 387], "self": [1, 9, 11, 12, 14, 17, 18, 19, 53, 86, 144, 361, 364, 366, 367, 387, 388], "sens": [9, 386, 387], "sensibl": 414, "sensible_heat_flux": 414, "sensit": 406, "separ": [5, 7, 9, 14, 17, 18, 19, 146, 268, 295, 364, 365, 385, 387, 403, 404, 405, 412, 413, 416], "sequenc": [2, 5, 14, 144, 334, 348, 349, 350, 351, 357, 358, 363, 364, 367, 385, 387, 416, 421, 422], "seri": [1, 14, 144, 197, 203, 279, 349, 351, 354, 383, 387, 396, 400, 407], "serial": [1, 46, 364, 366, 386, 387, 416], "serv": [6, 117, 118, 123, 144, 360, 387], "server": [5, 8, 42, 57, 364, 367, 388, 395], "server_base_url": 388, "servic": [65, 389, 390, 392, 394, 395, 416], "session": [368, 387], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 40, 42, 48, 49, 55, 59, 63, 79, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 156, 167, 173, 188, 191, 194, 199, 213, 217, 219, 230, 236, 250, 274, 294, 299, 306, 321, 324, 325, 326, 330, 331, 332, 333, 336, 337, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 364, 366, 367, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 407, 409, 411, 412, 413, 414, 415, 420, 421], "set_model_resourc": 14, "set_ov": [19, 348, 350, 357, 358], "set_shared_config": [9, 17, 366], "set_und": [19, 348, 350, 357, 358], "settl": 387, "setup": [1, 6, 7, 9, 11, 14, 18, 30, 37, 40, 41, 47, 51, 141, 144, 156, 162, 167, 188, 194, 213, 230, 250, 274, 346, 347, 354, 355, 356, 359, 366, 367, 368, 385, 386, 387, 388, 403, 404, 405, 406, 412, 413, 416, 422], "setup_complet": 1, "setup_mesh": [12, 364], "setup_ssh_adjustment_step": 144, "setup_suit": 8, "setup_task": [1, 8, 9], "setupmesh": [12, 364, 366], "sever": [5, 6, 12, 141, 144, 360, 364, 366, 367, 368, 386, 387, 410, 415, 416, 421], "sh": [6, 136, 137, 138, 139, 140, 141, 142, 368, 384, 387, 416], "shallow": [354, 368, 403, 404, 405, 406, 409, 411, 412, 413, 415], "shape": [349, 404], "share": [0, 7, 11, 19, 21, 25, 40, 48, 51, 52, 55, 141, 144, 168, 184, 185, 192, 195, 200, 218, 223, 228, 235, 257, 271, 277, 283, 305, 343, 346, 347, 348, 349, 350, 351, 352, 355, 357, 358, 359, 360, 361, 362, 364, 366, 368, 370, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 403, 404, 405, 412, 413, 414, 415, 416, 420, 422], "shared_clim": 416, "shared_step": 162, "sheet": 19, "shelf": [7, 161, 163, 246, 247, 251, 253, 255, 352, 360, 367, 387, 388, 397, 398, 399, 408], "shell": [384, 386], "shelv": [161, 343, 388, 398, 407], "short": [5, 185, 247, 298, 300, 364, 365, 366, 367, 377, 387, 401, 402, 407], "short_forward": 402, "shortcut": [367, 416], "shorter": [192, 228, 365, 373], "shortwav": 414, "shortwave_heat_flux": 414, "should": [1, 2, 5, 6, 7, 9, 11, 12, 14, 18, 19, 25, 26, 31, 32, 33, 40, 41, 42, 49, 51, 53, 61, 66, 79, 117, 118, 125, 127, 136, 137, 138, 139, 140, 141, 142, 144, 146, 151, 191, 199, 217, 301, 303, 336, 337, 343, 360, 361, 362, 364, 365, 366, 368, 380, 381, 384, 385, 387, 388, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 420], "shouldn": [5, 141, 299, 387], "show": [2, 7, 13, 63, 334, 335, 364, 387, 394, 395, 401, 402, 403, 404, 405, 406, 412, 413, 415, 420], "show_patch_edg": [19, 127, 364, 387], "show_progressbar": 63, "shown": [1, 14, 19, 141, 362, 396, 414], "sia": [366, 368], "sia_decomposition_test": 416, "sia_integr": 416, "sia_restart_test": 416, "sia_smoke_test": 416, "side": 7, "signific": [364, 365, 366], "significantli": [13, 398, 406, 411], "similar": [1, 2, 5, 9, 12, 13, 14, 137, 140, 141, 142, 144, 360, 362, 367, 368, 387, 388, 398, 402, 403, 405, 412, 413, 415, 416], "similarli": [5, 8, 127, 140, 142, 340, 343, 364, 366, 368, 394, 416], "simpl": [141, 144, 367, 380, 387, 416], "simpler": [368, 387], "simplest": [368, 386], "simpli": [1, 14, 18, 59, 141, 185, 247, 361, 364, 366, 368, 387, 398, 416, 421], "simplifi": [10, 352, 402, 407], "simplify_local_mach": 6, "simul": [144, 347, 352, 354, 356, 364, 385, 387, 396, 401, 403, 406, 407, 409, 411, 415, 416, 420], "sin": [364, 387, 401, 403, 405, 406, 409, 410, 411, 412], "sinc": [5, 6, 14, 25, 90, 112, 135, 144, 346, 364, 366, 367, 368, 387, 401, 402, 403, 404, 405, 406, 409, 411, 412, 413, 415, 420], "singl": [1, 5, 8, 9, 19, 40, 127, 141, 297, 298, 300, 301, 303, 359, 364, 366, 367, 372, 373, 374, 376, 377, 378, 380, 381, 385, 387, 394, 399, 403, 404, 405, 408, 409, 411, 412, 413, 417, 418], "single_column": [343, 353, 361, 380, 382, 414], "single_column_forc": [359, 414], "single_nod": [141, 388, 389, 390, 391, 392, 393, 394, 395, 416], "sinusoid": [401, 410], "sit": 8, "site": 384, "situat": [1, 17, 31, 32, 33, 368, 387, 416], "size": [2, 13, 19, 73, 74, 83, 126, 127, 144, 177, 180, 182, 335, 360, 387, 388, 401, 404, 406, 409, 410, 411, 414, 415, 420], "skamarock": 404, "skill": 367, "skip": [1, 5, 8, 124, 368, 421], "skip_step": 5, "slate": 364, "slice": [127, 147, 208], "slightli": [14, 368], "slip": [207, 208, 209, 345], "slot": [403, 405, 412, 413], "slotted_cylinders_amplitud": [403, 405, 412, 413], "slotted_cylinders_background": [403, 405, 412, 413], "slotted_cylinders_radiu": [403, 405, 412, 413], "slow": 404, "slurm": [1, 65, 98, 141, 364, 386, 388, 389, 390, 391, 392, 393, 395, 416], "slurm_jobid": 387, "small": [2, 9, 46, 141, 336, 337, 360, 364, 387, 389, 390, 397, 398, 407, 412, 414, 416], "smaller": 416, "smallest": [40, 364, 385, 398, 422], "smoke_test": [360, 366], "smoketest": [360, 366], "smooth": [13, 100, 335], "snippet": [12, 387], "snow": 383, "so": [5, 6, 7, 9, 11, 12, 13, 14, 18, 19, 25, 39, 63, 111, 141, 144, 175, 321, 330, 332, 343, 346, 347, 352, 354, 355, 356, 360, 361, 364, 366, 367, 368, 380, 385, 387, 388, 393, 394, 395, 398, 401, 402, 403, 404, 405, 406, 407, 412, 413, 414, 416, 421], "soft": [389, 391, 394, 416], "softwar": [2, 88, 393, 395, 416], "software_compil": 393, "solar": 414, "solid": [345, 381, 401, 404, 407, 410], "solut": [18, 139, 147, 149, 150, 208, 209, 222, 239, 240, 260, 261, 262, 263, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 347, 349, 351, 354, 356, 365, 384, 387, 399, 402, 406, 408, 409], "solv": [345, 384, 398], "solver": [2, 366, 368, 386, 416], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 18, 51, 141, 144, 336, 337, 345, 348, 349, 350, 351, 357, 358, 360, 362, 364, 366, 367, 368, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 407, 416, 417, 421, 422], "someth": [5, 7, 101, 105, 108, 140, 141, 142, 368, 387], "sometim": [6, 14, 321, 324, 330, 332, 360, 362, 364, 366, 385, 387, 421], "somewher": 364, "soon": [139, 141, 387, 416], "sophist": 14, "sort": [144, 361, 362, 367, 368], "sound": 367, "sourc": [2, 6, 7, 11, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 364, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 387, 388, 394, 395, 416], "source_typ": 100, "southern": [387, 401], "sowisc12to60": [364, 416], "spac": 13, "space": [5, 6, 7, 9, 13, 141, 144, 146, 147, 149, 154, 157, 158, 159, 218, 221, 222, 223, 224, 228, 229, 235, 238, 239, 241, 257, 259, 260, 264, 268, 283, 285, 286, 290, 295, 305, 308, 312, 354, 356, 364, 368, 387, 390, 394, 398, 404, 406, 409, 411, 416], "spack": [4, 5, 136, 138, 139, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395], "spack_for_mache_1": 6, "spack_temp": 6, "spack_test": 6, "spackdir": 141, "span": 414, "spatial": [336, 337, 338, 409, 411, 414], "spawn": 384, "spec": [141, 384, 395], "special": [5, 385, 415], "specif": [7, 9, 14, 19, 53, 141, 144, 343, 360, 361, 362, 364, 380, 381, 386, 387, 388, 390, 394, 401, 407, 410, 415, 416, 420, 421], "specifi": [5, 6, 14, 17, 18, 19, 42, 141, 144, 345, 364, 368, 383, 387, 388, 393, 395, 401, 402, 403, 404, 405, 407, 412, 413, 415, 416, 420], "speed": 421, "sphere": [13, 307, 308, 310, 312, 315, 348, 349, 350, 351, 357, 358, 403, 404, 405, 412, 413], "sphere_radiu": 337, "sphere_transport": [348, 350, 357, 358, 403, 405, 412, 413], "sphere_transport_viz": [403, 405, 412, 413], "sphere_transport_viz_": [348, 350, 357, 358], "sphere_transport_viz_h": [403, 405, 412, 413], "sphere_transport_viz_h_diff": [403, 405, 412, 413], "sphere_transport_viz_trac": [403, 405, 412, 413], "sphere_transport_viz_tracer_diff": [403, 405, 412, 413], "spheretransport": [348, 350, 357, 358], "spheric": [1, 5, 154, 334, 348, 349, 350, 351, 357, 358, 366, 400, 403, 404, 405, 412, 413, 421], "spherical_converg": [144, 351, 366, 403, 404, 405, 412, 413], "spherical_convergence_forward": [403, 405, 412, 413], "spherical_mesh": [13, 79], "sphericalconvergenceforward": [144, 348, 349, 350, 351, 357, 358], "sphinx": 7, "spin": 14, "split": [144, 367], "split_dt_per_km": [144, 396, 407], "split_explicit": [144, 396, 403, 404, 405, 406, 407, 412, 413], "split_explicit_t": [144, 387], "splitext": 367, "spuriou": [387, 401], "spyder": 367, "sqrt": [13, 15, 409], "squash": [352, 398], "squeue": 394, "src": 380, "src_": 17, "src_from_lon_lat": 17, "src_from_mpa": 17, "src_grid_info": 100, "src_mesh_filenam": 100, "sreport": 390, "srun": [141, 364, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416], "ss": [144, 181], "ssh": [7, 19, 144, 165, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 340, 343, 352, 354, 356, 364, 387, 388, 390, 393, 395, 398, 406, 407, 409, 411], "ssh_adjust": [144, 161, 162, 163, 343, 352, 364, 388, 396, 407], "ssh_amplitud": [409, 411], "ssh_color": 335, "ssh_forward": [144, 162, 165, 352], "sshadjust": [144, 352], "sshare": 390, "sshdir": 161, "sshforward": [144, 162, 352], "ssl": 388, "stabil": [214, 402], "stabl": 410, "stack": 384, "stackoverflow": [14, 62, 387], "staf": 2, "stage": [144, 345, 364, 366, 368, 376, 383, 399, 416], "stagger": [13, 83], "stai": [6, 368], "stair": 398, "stamp": 5, "stand": 6, "standalon": [5, 14, 139, 141, 361, 368, 385, 386, 394, 417], "standard": [19, 271, 272, 277, 355, 367, 368, 377, 387, 390, 410, 416], "standard_phys": 383, "standardphys": 383, "star": [144, 329, 332, 333, 352, 387, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "start": [6, 7, 8, 14, 15, 90, 120, 127, 141, 335, 345, 346, 351, 360, 365, 366, 367, 386, 390, 394, 395, 399, 417, 419], "start_color": 335, "start_xtim": 90, "startswith": 387, "state": [144, 149, 163, 182, 184, 185, 192, 193, 195, 200, 222, 239, 260, 271, 272, 277, 286, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364, 365, 387, 396, 404, 406], "statement": [2, 12, 364, 385], "static": [73, 74], "stationari": [401, 414], "statist": [15, 388], "stderr": [12, 40, 51, 364, 366], "stdout": [5, 12, 40, 51, 364, 366], "stdout_logg": [51, 366], "steadi": [365, 406], "steam": 135, "steer": 2, "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 37, 51, 52, 54, 57, 71, 76, 78, 81, 84, 85, 95, 97, 99, 100, 106, 111, 112, 113, 114, 117, 118, 141, 144, 146, 147, 149, 152, 154, 156, 157, 158, 159, 161, 162, 163, 165, 167, 168, 169, 175, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 207, 210, 211, 213, 214, 215, 217, 218, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 259, 264, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 285, 290, 292, 293, 295, 296, 299, 301, 302, 303, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 374, 375, 376, 378, 379, 383, 385, 386, 388, 395, 398, 421, 422], "step_dir": 11, "step_is_subprocess": [5, 113], "step_path": 57, "step_subdir": [201, 231, 253, 374], "step_symlink": [51, 366], "steps_to_run": [5, 51, 114, 364, 366, 387, 388, 402], "steps_to_skip": 114, "stereograph": 388, "stewart": 398, "stick": 387, "still": [387, 399, 415, 416, 420], "stommel": 402, "storag": 390, "store": [8, 11, 19, 53, 141, 144, 352, 354, 356, 364, 387, 403, 405, 412, 413, 416], "str": [11, 14, 20, 25, 26, 27, 28, 29, 31, 32, 34, 40, 41, 42, 43, 48, 51, 52, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 71, 78, 84, 88, 90, 92, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 144, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 162, 163, 165, 168, 169, 172, 174, 175, 178, 179, 181, 182, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 207, 208, 211, 218, 221, 222, 223, 224, 225, 228, 229, 231, 233, 235, 238, 239, 240, 241, 242, 244, 247, 248, 251, 253, 255, 257, 259, 260, 264, 266, 268, 271, 272, 275, 277, 279, 283, 285, 286, 290, 292, 295, 299, 301, 303, 305, 308, 309, 310, 312, 313, 315, 317, 320, 335, 364, 366, 374, 376, 378, 387], "straightforward": 364, "strategi": [12, 389, 390, 391, 392, 393, 395], "stratif": 410, "stream": [5, 7, 8, 10, 25, 28, 30, 35, 49, 129, 130, 134, 135, 167, 180, 188, 191, 194, 199, 213, 217, 230, 250, 274, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 364, 366, 367, 380, 383, 388, 415, 420], "stream_replac": 14, "streamfunct": 402, "streams_data": 25, "streams_filenam": 119, "streams_sect": [25, 129, 130], "strenuou": 407, "stress": [347, 387, 402, 414], "stretch": [321, 324, 330, 332, 387, 398], "strftime": [14, 387], "strict": 387, "strictli": [6, 13, 367, 387], "stride": [25, 39, 175], "string": [5, 9, 15, 42, 104, 110, 141, 144, 161, 162, 165, 181, 305, 335, 368], "strip": 367, "structur": [5, 13, 31, 32, 33, 363, 366, 386, 387, 410], "studi": [403, 404, 405, 406, 412, 413], "style": [128, 144, 386, 387], "sub": [120, 387, 407], "subclass": [17, 75, 78, 79, 80, 85, 144, 387], "subdir": [1, 5, 9, 17, 25, 40, 51, 52, 71, 78, 84, 100, 144, 146, 154, 159, 161, 165, 175, 186, 211, 215, 221, 224, 225, 229, 233, 238, 241, 242, 244, 248, 259, 264, 266, 272, 285, 290, 292, 299, 308, 310, 312, 313, 315, 317, 364, 366, 374, 387], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 40, 42, 51, 52, 54, 67, 71, 78, 84, 100, 117, 144, 146, 154, 159, 161, 165, 175, 186, 211, 218, 221, 223, 224, 225, 228, 229, 231, 233, 238, 241, 242, 244, 248, 259, 264, 266, 268, 272, 285, 290, 292, 295, 299, 301, 303, 308, 310, 312, 313, 315, 317, 360, 362, 364, 366, 367, 387, 415, 416, 420, 422], "subdivid": [168, 336, 337, 366], "subdivis": [13, 71, 72, 73, 74, 75], "subdivision_r": [336, 337], "submit": 394, "submodul": [6, 343, 361, 368, 380, 387, 416], "subpackag": 367, "subprocess": [12, 40, 96, 97, 113, 364, 367, 384], "subsequ": [19, 144, 364, 421], "subset": 5, "substanti": 368, "substep": [96, 97], "substitut": 14, "substr": [5, 141], "subtask": 47, "subtitl": [125, 126], "subtleti": 13, "success": [1, 2, 8, 50, 61, 343, 361, 380, 387, 388, 402], "successfulli": [1, 50, 387], "suffici": [40, 364, 410], "suffix": [6, 42, 118, 364], "suggest": [6, 141, 384], "suit": [1, 2, 6, 7, 12, 18, 40, 51, 66, 67, 113, 114, 115, 116, 118, 141, 346, 363, 364, 366, 368, 385, 386, 387, 388, 389, 390, 391, 392, 395, 399, 401], "suite_nam": [5, 8, 114, 116, 118, 123, 416], "suitenam": 416, "sum": 15, "summar": 2, "summari": [3, 390], "super": [9, 14, 17, 18, 144, 361, 364, 366, 367, 387], "superclass": 364, "supercomput": 387, "suppli": [5, 6, 7, 15, 18, 127, 135, 141, 364, 368, 387], "support": [5, 6, 8, 13, 17, 40, 144, 321, 330, 332, 345, 364, 367, 380, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 398, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 422], "suppos": 387, "sure": [1, 5, 6, 7, 12, 14, 17, 18, 141, 144, 184, 192, 200, 223, 228, 343, 346, 352, 364, 367, 368, 373, 380, 385, 387, 388, 394, 395, 401, 403, 404, 405, 407, 412, 413], "surfac": [7, 144, 163, 164, 209, 261, 263, 287, 289, 323, 327, 328, 329, 334, 335, 340, 343, 345, 352, 359, 383, 387, 388, 398, 401, 407, 409, 410, 411, 414], "surface_salin": [407, 414], "surface_temperatur": [364, 387, 401, 410, 414], "surface_x": 414, "surfacespe": 387, "switch": [6, 387, 388], "sxfyy4k": 141, "symbol": [1, 62, 364], "symlink": [1, 5, 8, 9, 14, 18, 40, 42, 51, 52, 366, 367, 368, 403, 404, 405, 412, 413], "symlog": [19, 125], "symlognorm": 19, "symmetr": 19, "sync": 6, "synchron": [14, 386], "syntax": [2, 144, 387], "system": [4, 5, 6, 25, 37, 40, 47, 96, 97, 98, 136, 138, 139, 141, 165, 175, 186, 211, 248, 272, 299, 364, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 416], "t": [5, 6, 7, 9, 11, 12, 14, 15, 40, 41, 135, 141, 144, 146, 151, 262, 263, 288, 289, 299, 348, 349, 350, 351, 357, 358, 364, 366, 367, 368, 384, 387, 388, 390, 392, 393, 394, 400, 401, 403, 405, 409, 411, 412, 416, 421, 422], "t_": 401, "t_0": 401, "t_b": 401, "t_index": [19, 127, 387], "tab": [5, 416], "tabl": [13, 368, 394, 416], "tag": [14, 386], "take": [5, 6, 7, 11, 13, 14, 59, 141, 144, 150, 240, 360, 364, 365, 366, 368, 387, 403, 404, 405, 412, 421], "taken": [14, 25, 175, 337, 348, 349, 350, 351, 357, 358, 364, 387, 395, 416], "talk": 360, "tangent": 398, "tangenti": 345, "tanh": 398, "tanh_dz": 388, "target": [8, 11, 17, 18, 25, 42, 62, 66, 90, 100, 141, 144, 175, 346, 347, 354, 355, 356, 364, 366, 387, 403, 404, 405, 412, 413], "target_cor": 66, "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 34, 37, 39, 40, 43, 44, 46, 47, 49, 58, 59, 67, 70, 76, 81, 95, 96, 97, 99, 100, 113, 114, 115, 117, 118, 123, 141, 157, 158, 161, 162, 163, 165, 169, 175, 177, 180, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 368, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 417, 421], "task_expr": [5, 67], "task_list": 118, "task_numb": 5, "taskdir": [268, 292, 295], "tasksthat": 396, "tau": [403, 404, 405, 412], "tau_0": 402, "tau_i": 402, "tau_x": 402, "tcsh": 368, "team": [6, 141, 386], "technic": [2, 7], "techniqu": 387, "tell": [5, 6, 141, 368], "temp": 5, "temp_vert": [364, 387], "temperatur": [18, 202, 254, 345, 346, 352, 355, 356, 359, 364, 383, 387, 401, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 420], "temperature_differ": [364, 387, 401, 410], "temperature_difference_across_mixed_lay": 414, "temperature_gradient_interior": 414, "temperature_gradient_mixed_lay": 414, "temperature_interior_restoring_r": 414, "temperature_max": 388, "temperature_piston_veloc": 414, "temperature_surface_restoring_valu": 414, "temperaturemax": 388, "templat": [0, 5, 6, 7, 28, 29, 30, 64, 119, 130, 134, 141, 144, 154, 159, 162, 165, 167, 188, 194, 213, 230, 250, 274, 348, 349, 350, 357, 358, 386, 387, 388], "template_replac": [14, 28, 29, 144], "tempor": [409, 411], "temporari": [6, 141], "temporarili": 368, "ten": 407, "tendenc": [144, 404, 411], "term": [40, 385, 387, 402, 409, 411], "termin": [6, 8, 141, 364, 368, 387], "terrain": [324, 398], "test": [5, 7, 8, 9, 19, 51, 52, 57, 66, 95, 96, 97, 116, 124, 141, 145, 146, 152, 154, 157, 158, 159, 161, 163, 183, 185, 186, 192, 193, 195, 196, 197, 198, 200, 205, 206, 207, 214, 218, 219, 220, 221, 223, 224, 225, 228, 229, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 246, 247, 256, 257, 258, 259, 261, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 371, 372, 373, 376, 377, 378, 379, 380, 383, 385, 386, 392, 394, 395, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421], "test_20210616": 18, "test_20230202": 6, "test_cas": 281, "test_group": 387, "test_nam": 205, "test_nightly_latest": 18, "test_subdir": 416, "test_suit": [5, 116, 364], "testcas": [216, 243, 281, 387, 388, 401, 407, 414, 416], "testgroup": 387, "tet": 387, "text": [7, 8, 64, 401, 404, 406, 414], "textrm": 406, "than": [1, 5, 6, 8, 9, 11, 13, 14, 40, 42, 47, 59, 141, 144, 165, 186, 211, 248, 272, 299, 346, 364, 365, 367, 368, 384, 387, 398, 401, 402], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 40, 41, 42, 53, 59, 78, 114, 131, 141, 144, 181, 338, 343, 346, 352, 360, 363, 364, 366, 367, 368, 381, 385, 386, 387, 388, 394, 398, 401, 403, 404, 405, 406, 407, 412, 413, 416], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 39, 63, 141, 144, 175, 348, 349, 350, 351, 357, 358, 361, 362, 364, 366, 367, 368, 385, 387, 392, 394, 400, 416, 422], "themselv": [14, 367, 386, 406], "theoret": 367, "theori": 367, "therefor": [364, 385, 387], "theta": [403, 405, 406, 412], "thhe": 412, "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 66, 70, 72, 75, 76, 79, 80, 81, 85, 96, 97, 99, 100, 106, 111, 114, 124, 136, 137, 138, 139, 140, 141, 142, 144, 146, 152, 156, 157, 158, 161, 162, 163, 165, 167, 175, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 204, 205, 210, 211, 213, 217, 218, 221, 223, 224, 226, 228, 229, 230, 234, 235, 238, 243, 245, 247, 248, 250, 252, 256, 257, 259, 267, 268, 269, 271, 272, 274, 276, 277, 278, 280, 281, 282, 283, 285, 293, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 308, 310, 311, 314, 315, 316, 318, 334, 336, 337, 340, 343, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 379, 380, 384, 385, 386, 387, 388, 390, 393, 394, 395, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 420, 421], "thick": [321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 340, 346, 348, 350, 351, 352, 355, 357, 358, 359, 381, 387, 388, 398, 401, 403, 405, 406, 407, 409, 412, 413, 419], "thing": [5, 136, 137, 138, 139, 140, 141, 142, 144, 360, 364, 367, 386, 421], "think": [1, 5, 387], "third": 387, "those": [9, 14, 51, 124, 144, 346, 355, 366, 367, 368, 386, 387, 403, 404, 405, 406, 407, 412, 413, 415, 420, 421], "though": [1, 11, 40, 366, 367, 387], "thought": 387, "thread": [14, 25, 37, 40, 46, 47, 51, 97, 165, 175, 186, 211, 248, 272, 299, 361, 364, 365, 385, 387, 388, 390, 393, 395, 416, 421], "threads_per_cor": [390, 393, 395], "threads_test": 18, "three": [144, 394, 403, 405, 406, 407, 412, 413, 422], "threshold": [18, 144, 357, 403, 404, 405, 406, 409, 411, 412, 413], "through": [1, 2, 118, 144, 255, 281, 367, 368, 381, 387, 410], "throughout": [359, 401, 410, 414], "thu": [1, 2, 7, 14, 368, 387, 403, 404, 405, 412, 413], "thumb": 73, "ti": 387, "tick": [19, 125, 404], "tidal": [247, 248, 352, 407], "tidal_forc": [248, 345], "tide": 387, "tidx": 334, "time": [1, 6, 7, 8, 14, 18, 19, 40, 51, 65, 90, 124, 127, 141, 146, 147, 149, 150, 154, 156, 157, 158, 159, 165, 181, 182, 186, 195, 211, 214, 218, 221, 222, 223, 224, 228, 229, 235, 238, 239, 240, 241, 257, 259, 260, 262, 263, 264, 268, 272, 277, 283, 285, 286, 288, 289, 290, 295, 299, 305, 308, 312, 334, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 364, 365, 366, 367, 368, 383, 384, 385, 388, 390, 393, 395, 396, 416, 421], "time_index": [15, 90], "time_index_from_xtim": 15, "time_integr": [14, 144, 387, 396, 403, 404, 405, 406, 407, 412, 413], "time_manag": [14, 144, 387], "time_slic": 360, "time_str": 181, "timelin": 2, "timer": [5, 18, 40, 364, 365, 367], "timeseri": 419, "timestep": 144, "tip": [7, 368], "titl": [19, 125, 126, 127, 144, 146, 151, 335], "tmp": [6, 141], "tmpdir": [6, 141], "tn": 390, "toctre": 7, "todai": [5, 57], "togeth": [14, 18, 141, 144, 360, 385, 387, 421], "toler": 124, "too": [13, 14, 25, 37, 40, 47, 96, 97, 175, 360, 364, 367, 387], "tool": [5, 6, 9, 12, 14, 17, 343, 361, 364, 368, 380, 386, 387, 388], "top": [5, 19, 127, 321, 322, 323, 324, 327, 328, 329, 330, 332, 335, 345, 352, 362, 387, 398, 410], "topographi": [11, 327, 360, 364, 387, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 422], "total": [95, 364, 365, 367, 387, 388, 390, 416], "total_area": 15, "touch": [141, 336, 337, 368], "tour": 6, "toward": 414, "tracer": [14, 19, 218, 227, 300, 301, 303, 305, 346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 387, 399, 404, 405, 408, 409, 411, 412, 413, 414], "tracer1": [19, 144, 232, 403, 405, 412, 413], "tracer2": [403, 405, 412, 413], "tracer3": [403, 405, 412, 413], "track": [9, 25, 364, 366, 368], "transect": [127, 144, 334, 335, 388], "transect_color": 127, "transect_end": 127, "transect_i": 127, "transect_linewidth": 127, "transect_markers": 127, "transect_start": 127, "transect_x": 127, "transectindicesonhoriznod": [336, 337], "transectvalu": [336, 337], "transectweightsonhoriznod": [336, 337], "transectz": 340, "transfer": 364, "transient": 407, "transit": [398, 403, 404, 405, 412, 413], "transition_level": 398, "translat": [5, 31, 32, 33], "transport": [307, 308, 310, 312, 315, 348, 350, 357, 358, 403, 404, 405, 412, 413], "transpos": [364, 387], "treat": [14, 365, 367], "tree": [1, 7, 119, 121, 135, 336, 337, 338, 366, 417], "tri": [144, 367], "triangl": [336, 337, 338, 339, 340], "triangles_filenam": 13, "tricellindic": 339, "trick": [12, 364], "tricki": 387, "trilino": [6, 368], "triplot": 348, "troubl": [368, 387], "troubleshoot": 386, "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 52, 61, 62, 63, 124, 125, 126, 127, 131, 136, 137, 138, 139, 140, 141, 142, 144, 175, 248, 300, 335, 337, 345, 360, 364, 387, 388, 389, 390, 391, 393, 394, 395, 401, 416, 422], "truncat": [14, 144, 387], "try": [6, 14, 62, 141, 367, 368, 384, 387, 388, 390, 395, 416], "tupl": [9, 126, 127, 335], "turn": [40, 58, 361, 364, 384, 387, 411, 414], "turquois": [70, 390], "tutori": [367, 368], "twice": [6, 336, 337, 387], "two": [1, 5, 6, 10, 18, 19, 124, 144, 192, 202, 228, 232, 254, 336, 337, 346, 347, 348, 349, 352, 355, 359, 360, 361, 364, 365, 367, 368, 373, 375, 387, 401, 403, 404, 405, 407, 409, 410, 411, 412, 413, 419], "txt": [6, 8, 123, 365, 384], "type": [7, 14, 17, 18, 19, 26, 102, 109, 135, 141, 144, 146, 147, 154, 157, 158, 159, 208, 218, 223, 224, 227, 228, 229, 235, 241, 264, 268, 290, 295, 298, 300, 305, 308, 312, 335, 348, 349, 350, 357, 358, 360, 364, 366, 367, 368, 380, 384, 385, 387, 388, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 421], "typic": [5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 40, 52, 114, 141, 144, 335, 336, 337, 360, 361, 362, 364, 366, 368, 385, 387, 388, 394, 396, 398, 414, 416, 422], "u": [6, 11, 364, 387, 394, 395, 403, 405, 406, 409, 411, 412], "u1": 395, "u_0": [404, 405, 406, 412], "ubuntu": 141, "ubuntu20": 141, "ubuntu22": 141, "ugetvbp": 141, "unaffect": 6, "uncach": 57, "uncoupl": 386, "under": [2, 17, 40, 41, 141, 144, 345, 364, 365, 368, 386, 398, 407, 422], "under_color": [19, 348, 350, 357, 358], "underli": 5, "underscor": [7, 387], "understand": [367, 388], "undesir": 367, "unexpect": [368, 385, 387], "unexpectedli": 406, "unifi": [6, 141, 368, 395], "uniform": [78, 83, 159, 218, 223, 228, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 366, 387, 388, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 420], "uniqu": [6, 7, 14, 141, 366, 387], "unit": [40, 101, 105, 108, 364, 385, 401, 422], "univers": 361, "unix": [367, 386], "unknown": [5, 141, 367, 394], "unless": [62, 114, 368], "unlik": [14, 387], "unneed": 368, "unpickl": [116, 364], "unset": 384, "unstretch": 329, "unsupport": 368, "until": [40, 41, 364, 366, 416], "unus": 368, "unusu": 387, "unwant": 364, "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 40, 49, 51, 64, 85, 99, 111, 112, 115, 117, 118, 123, 124, 136, 137, 138, 139, 140, 141, 142, 144, 173, 191, 199, 217, 294, 336, 337, 338, 340, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 363, 364, 366, 367, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 402, 403, 404, 405, 407, 412, 413, 415, 420, 421, 422], "updat": [5, 7, 8, 11, 25, 27, 29, 36, 37, 46, 47, 63, 120, 139, 141, 144, 177, 299, 325, 326, 331, 333, 343, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 364, 380, 384, 386, 387, 416], "update_cach": 8, "update_jigsaw": 368, "update_layer_thick": 144, "update_namelist_pio": 14, "update_permiss": 11, "update_pio": [14, 25, 175], "update_spack": [6, 141, 368], "upper": [19, 127], "uppersurfac": 387, "ureconstructi": 387, "ureconstructx": 387, "url": [11, 42, 61, 364, 384, 388], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 32, 33, 37, 40, 41, 42, 46, 47, 51, 52, 57, 59, 61, 66, 79, 88, 93, 96, 97, 100, 106, 113, 124, 125, 126, 127, 128, 129, 130, 135, 136, 140, 141, 142, 144, 146, 147, 148, 149, 151, 154, 155, 159, 160, 162, 165, 166, 167, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 194, 201, 208, 211, 212, 213, 222, 230, 231, 235, 239, 248, 249, 250, 255, 260, 265, 272, 273, 274, 283, 284, 286, 291, 299, 305, 309, 310, 315, 319, 321, 322, 323, 324, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366, 367, 368, 374, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 421, 422], "usabl": 5, "usag": [5, 15, 19, 366, 388, 390, 395], "use_dist": [364, 387, 401, 410], "use_e3sm_hdf5_netcdf": [141, 389, 390, 391, 392, 393, 394, 395], "use_mplstyl": 19, "user": [5, 6, 7, 8, 9, 11, 14, 17, 40, 51, 52, 59, 66, 99, 141, 144, 153, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364, 365, 366, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 399, 401, 402, 403, 404, 405, 406, 407, 412, 413, 417], "usernam": [384, 387, 390, 393, 395], "users_guid": 387, "usr": [70, 141, 390, 416], "usual": [364, 366, 368, 387, 416], "util": [6, 367, 368, 411], "v": [5, 368, 387, 403, 405, 406, 409, 411, 412, 421], "v0": 6, "v1": [14, 398], "v2": [14, 388, 398], "v3": 398, "vadv_method": [271, 272, 277], "valid": [5, 10, 19, 25, 40, 43, 50, 127, 144, 154, 159, 247, 321, 322, 323, 324, 327, 328, 329, 330, 332, 340, 347, 354, 356, 359, 364, 367, 386, 398, 401, 407], "validate_var": [18, 40, 43, 144, 154, 159, 299, 364], "validcel": 340, "validnod": 340, "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 32, 33, 90, 124, 125, 126, 127, 131, 144, 146, 154, 159, 178, 179, 195, 227, 268, 277, 295, 335, 336, 337, 340, 346, 355, 357, 361, 364, 366, 367, 386, 387, 388, 398, 401, 402, 403, 404, 405, 406, 410, 412, 413, 414], "valueerror": [18, 367], "var": [14, 120, 380, 387], "var_arrai": [14, 380], "var_struct": [14, 380], "vari": [345, 348, 349, 350, 351, 357, 358, 364, 384, 394, 398, 404, 406, 407], "variabl": [2, 5, 11, 13, 19, 20, 25, 40, 43, 50, 51, 59, 71, 78, 84, 88, 100, 101, 105, 108, 124, 127, 129, 130, 135, 141, 144, 146, 147, 148, 149, 150, 151, 154, 159, 161, 165, 169, 170, 171, 172, 173, 174, 175, 182, 186, 189, 195, 197, 201, 208, 211, 215, 218, 222, 224, 231, 233, 235, 239, 240, 244, 248, 251, 253, 259, 260, 261, 264, 266, 268, 272, 277, 279, 286, 287, 290, 292, 294, 295, 299, 305, 308, 309, 310, 315, 317, 321, 324, 325, 326, 330, 331, 332, 333, 339, 340, 345, 352, 359, 364, 367, 368, 374, 375, 380, 384, 387, 394, 396, 399, 401, 407, 415, 416, 417, 420], "variable_nam": [147, 151, 208], "variable_resolut": [360, 364, 416], "variant": [57, 220, 237, 305, 307, 346, 352, 355, 360, 365, 367, 368, 387, 394, 398, 401, 402, 403, 404, 405, 410, 412, 413], "variat": [401, 406], "variou": [141, 297, 364, 368, 372], "ve": [136, 137, 138, 139, 140, 142, 368, 387], "vector": 413, "vel_amp": [403, 405, 412], "vel_pd": [403, 404, 405, 412, 413], "vel_period": 406, "veldifftendencyen": 144, "velhyperdifftendencyen": 144, "velo_solv": 366, "veloc": [262, 288, 345, 346, 351, 352, 354, 355, 356, 366, 387, 402, 403, 404, 405, 406, 407, 412, 413, 414, 416], "verbos": [1, 5, 6, 67, 69, 141, 364, 387, 421], "veri": [144, 352, 361, 364, 367, 368, 380, 387, 406, 407, 414], "verifi": [10, 349, 365, 388, 402, 404], "verison": 343, "versa": 367, "version": [5, 6, 16, 35, 59, 99, 124, 141, 343, 346, 355, 360, 361, 362, 364, 366, 367, 368, 380, 386, 387, 388, 394, 395, 399, 401, 404, 407, 409, 411, 416, 417], "vert": 334, "vert_dim": 127, "vert_level": [387, 388, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "vertcoordmovementweight": [321, 324, 330, 332, 387], "vertex": [102, 109, 208], "vertic": [7, 15, 19, 89, 127, 149, 150, 222, 239, 240, 260, 271, 272, 277, 286, 298, 334, 335, 336, 337, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 364, 388, 397, 399], "vertical_grid": [144, 319, 321, 324, 330, 332, 360, 364, 387, 388, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "vi": 387, "via": [2, 5, 6, 14, 364, 368, 394, 402], "view": [4, 354, 356, 368, 409, 411], "vim": [367, 387], "violat": 367, "viridi": [19, 348, 349, 350, 357, 358, 387, 403, 404, 405, 412, 413], "virtu": 414, "visa": 367, "viscos": [9, 14, 186, 195, 197, 272, 277, 279, 346, 347, 355, 364, 367, 387, 401, 402, 410, 411], "visibl": 127, "visoc": 402, "visual": [1, 10, 13, 17, 247, 255, 268, 281, 295, 348, 349, 350, 351, 352, 354, 356, 357, 358, 360, 364, 366, 385, 386, 403, 404, 405, 406, 407, 409, 411, 412, 413, 415, 420], "viz": [1, 5, 19, 144, 218, 235, 247, 305, 364, 366, 403, 404, 405, 406, 412, 413], "viz_map": 366, "vizmap": [17, 218, 235, 247, 305, 366], "vlr": [271, 272, 277, 355, 410], "vmax": [19, 127, 335, 387, 404], "vmin": [19, 127, 335, 387, 404], "volum": 383, "vpn": 384, "vtk": 13, "vtk_dir": 13, "vtk_lat_lon": 13, "w": [5, 6, 368, 385, 387, 416], "wa": [6, 8, 50, 61, 124, 141, 364, 366, 367, 368, 384, 385, 387, 388, 398, 407, 416], "wai": [1, 5, 7, 13, 14, 40, 75, 80, 141, 144, 364, 366, 367, 368, 384, 386, 387, 394, 398, 406, 414], "wall": [65, 416], "wall_tim": [65, 416], "want": [2, 5, 6, 11, 14, 17, 18, 53, 141, 144, 364, 366, 368, 384, 387, 388, 394, 395, 414, 416, 422], "warmer": 401, "warn": 6, "warrant": 415, "wasn": 387, "wast": 14, "water": [19, 351, 354, 387, 398, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415], "wave": [205, 206, 257, 258, 259, 261, 264, 266, 268, 270, 271, 272, 275, 277, 279, 281, 287, 354, 355, 364, 366, 387, 399, 401, 408, 411], "wavelength": [409, 411], "wc": 388, "wc14": 416, "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 139, 141, 144, 148, 149, 150, 180, 222, 239, 240, 260, 286, 309, 346, 352, 355, 359, 360, 363, 364, 366, 367, 368, 383, 386, 387, 388, 390, 392, 393, 394, 395, 398, 402, 404, 406, 407, 416, 421], "web": [11, 364, 388], "websit": [399, 417], "weight": [14, 15, 17, 88, 163, 321, 324, 330, 332, 336, 337, 339, 340, 387, 398], "weight_field": [14, 88], "welcom": [415, 420], "well": [2, 6, 9, 12, 13, 141, 144, 327, 339, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 364, 368, 385, 387, 388, 404, 416, 422], "were": [1, 50, 63, 141, 299, 341, 342, 364, 367, 385, 387, 388, 392, 398], "western": 402, "wet": 365, "what": [1, 2, 6, 11, 13, 17, 141, 305, 366, 367, 387, 395, 415, 416, 420], "whatev": [341, 342, 368, 416], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 32, 33, 40, 41, 46, 51, 52, 59, 61, 62, 67, 113, 124, 141, 144, 329, 336, 337, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 364, 366, 367, 368, 386, 387, 389, 390, 391, 392, 393, 395, 398, 401, 402, 404, 406, 414, 416, 422], "whenev": [11, 364, 387], "where": [1, 5, 7, 9, 14, 18, 40, 42, 51, 59, 61, 63, 66, 99, 115, 118, 123, 125, 127, 141, 144, 165, 321, 324, 327, 330, 332, 336, 337, 343, 352, 361, 363, 364, 366, 368, 380, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 407, 412, 414, 415, 416, 420, 421], "wherea": [5, 12, 364, 385, 387, 407, 422], "whether": [5, 8, 13, 14, 17, 19, 25, 30, 40, 42, 50, 51, 52, 57, 61, 62, 63, 67, 113, 114, 118, 123, 124, 125, 126, 127, 131, 141, 144, 156, 157, 158, 167, 168, 175, 188, 194, 213, 221, 224, 229, 230, 235, 238, 250, 257, 259, 274, 283, 285, 290, 299, 301, 303, 305, 310, 315, 334, 335, 337, 354, 356, 360, 364, 366, 368, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 420], "which": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 32, 33, 40, 42, 51, 58, 89, 100, 102, 109, 117, 118, 119, 123, 127, 130, 141, 144, 146, 147, 148, 149, 150, 151, 153, 157, 158, 162, 163, 165, 175, 184, 185, 186, 189, 192, 193, 195, 197, 200, 201, 203, 207, 208, 211, 222, 223, 224, 228, 229, 231, 239, 240, 241, 247, 248, 251, 253, 255, 260, 262, 263, 264, 268, 271, 272, 275, 277, 279, 286, 288, 289, 290, 295, 299, 305, 309, 312, 335, 336, 337, 339, 340, 343, 345, 348, 350, 357, 358, 360, 361, 363, 364, 366, 368, 373, 374, 376, 378, 386, 387, 388, 390, 394, 398, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416], "whichev": [6, 343, 368, 380, 398], "while": [10, 17, 19, 345, 346, 364, 384, 387, 404, 407], "whitespac": 64, "who": [7, 368, 387, 388, 395], "whole": [8, 51, 182, 360, 366, 367, 387, 407, 416], "whose": [5, 48, 55, 89, 364], "why": 367, "wide": [384, 407], "width": [13, 71, 72, 73, 78, 79, 80, 86, 127, 335, 387, 401, 402, 407, 410], "wiki": 416, "wildcard": 367, "william": 406, "williamson": [404, 406], "wind": [339, 347, 402, 406, 414], "wind_stress_meridion": 414, "wind_stress_zon": 414, "window": 8, "wish": [5, 7, 14, 52, 336, 337, 364, 368, 387, 416], "with_albani": [6, 368], "with_ice_shelf_cav": 364, "with_netlib_lapack": 368, "with_petsc": [6, 368], "with_restart": [352, 407], "with_viz": [1, 348, 349, 350, 351, 357, 358, 366, 400, 403, 404, 405, 406, 412, 413], "with_viz_dir": 366, "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 37, 40, 42, 43, 47, 51, 52, 59, 115, 123, 124, 141, 144, 336, 337, 339, 346, 354, 356, 360, 361, 362, 364, 365, 366, 368, 381, 385, 387, 388, 390, 394, 414, 415, 420], "without": [5, 42, 144, 335, 364, 367, 368, 386, 387, 388, 392, 394, 404, 409, 411, 415, 416], "wno": 368, "woa": 17, "woa23_decav_0": 17, "won": [12, 367, 387, 388], "word": 364, "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 40, 42, 43, 45, 48, 49, 51, 52, 55, 57, 59, 66, 99, 113, 115, 118, 123, 139, 141, 154, 159, 162, 163, 165, 175, 186, 191, 199, 210, 211, 217, 218, 223, 228, 233, 244, 317, 362, 363, 364, 365, 366, 367, 368, 384, 385, 387, 388, 394, 403, 404, 405, 406, 412, 413, 414, 416, 422], "work_dir": [5, 11, 40, 51, 66, 99, 117, 118, 123, 124, 364, 366, 387], "work_dir_target": [42, 364], "workdir": [368, 416], "workflow": [17, 364, 368], "workload": 394, "workstat": [141, 368], "worktre": [6, 386, 387], "world": 393, "worri": 14, "worth": [367, 387], "would": [1, 2, 5, 9, 11, 14, 18, 19, 25, 37, 40, 47, 52, 96, 97, 100, 141, 144, 165, 175, 186, 211, 248, 272, 299, 346, 362, 364, 366, 367, 368, 384, 386, 387, 394, 398, 402, 416], "writabl": 11, "write": [8, 11, 12, 13, 16, 19, 63, 111, 129, 144, 169, 174, 320, 335, 364, 366, 368, 383, 387], "write_model_dataset": 144, "write_netcdf": [364, 387], "written": [7, 8, 9, 40, 51, 59, 66, 125, 126, 127, 154, 159, 364, 366, 387, 419], "wtrw": 390, "x": [13, 19, 72, 79, 80, 83, 86, 104, 110, 127, 144, 182, 209, 261, 287, 334, 336, 347, 352, 364, 387, 401, 402, 407, 409, 411, 414], "x86_64": [6, 141], "x86_64_v4": 141, "x_cell": [364, 387], "x_difference_across_mixed_lay": 414, "x_gradient_interior": 414, "x_gradient_mixed_lay": 414, "x_max": [364, 387], "x_min": [364, 387], "x_perturb_max": [364, 387], "x_perturb_min": [364, 387], "x_transect": 336, "x_var": [104, 110], "xarrai": [7, 15, 17, 19, 89, 124, 126, 127, 144, 149, 150, 170, 171, 172, 174, 208, 209, 222, 239, 240, 260, 286, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 364, 387], "xcartnod": 337, "xcarttransect": 337, "xcell": [261, 287, 364, 387], "xedg": [261, 287, 364, 387], "xml": [6, 14, 119, 121, 122, 135, 380], "xnode": [336, 339], "xr": [15, 19, 261, 262, 263, 287, 288, 289, 364, 387], "xtime": [14, 15, 90, 144, 387], "xtransect": 336, "xvertex": [364, 387], "xylar": [1, 6, 18, 141, 387, 388, 394], "y": [13, 14, 19, 83, 104, 110, 127, 144, 209, 261, 287, 334, 336, 346, 347, 352, 354, 355, 356, 364, 387, 395, 401, 402, 407, 409, 410, 411], "y0_land_ice_height_above_float": 407, "y1": 407, "y1_water_column_thick": 407, "y2": 407, "y2_water_column_thick": 407, "y3": 407, "y_": 401, "y_cell": [364, 387], "y_max": [364, 387], "y_mid": [364, 387], "y_min": [364, 387], "y_offset": [364, 387], "y_transect": 336, "y_var": [104, 110], "yakl": 368, "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 32, 33, 141, 154, 159, 162, 165, 167, 175, 178, 179, 180, 188, 194, 213, 230, 250, 274, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 364, 366, 386, 387, 390, 393, 395], "yaml_filenam": [144, 154, 159, 162, 165], "yaml_replac": [162, 165], "ycartnod": 337, "ycarttransect": 337, "ycell": [261, 287, 364, 387], "year": [347, 383, 399, 402, 419], "yedg": [261, 287], "yellow": 390, "yet": [6, 139, 141, 364, 367, 368, 387, 393], "yet_another_channel": 387, "yet_another_channel_test_cas": 387, "yetanotherchannel": 387, "yetanotherchanneltestcas": 387, "yml": 14, "ynode": [336, 339], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 136, 137, 138, 139, 140, 141, 142, 144, 343, 361, 364, 366, 367, 368, 380, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 403, 404, 405, 406, 407, 412, 413, 416, 421, 422], "your": [2, 4, 5, 6, 11, 141, 343, 367, 368, 380, 384, 387, 388, 389, 390, 394, 395, 403, 404, 405, 412, 413, 416], "your_new_branch": 368, "yourself": [14, 387, 394], "ytransect": 336, "yymmdd": [57, 388], "yyyi": 2, "z": [144, 146, 147, 149, 150, 151, 208, 222, 239, 240, 260, 286, 322, 323, 327, 328, 329, 330, 331, 332, 333, 352, 387, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415], "z_": [398, 414], "z_0": 398, "z_1": 398, "z_2": 398, "z_b": 401, "z_index": 127, "z_k": 398, "zcartnod": 337, "zcarttransect": 337, "zcellboundari": 340, "zero": [18, 322, 323, 327, 328, 329, 334, 336, 337, 340, 345, 346, 352, 355, 359, 387, 403, 404, 405, 407, 412, 413, 414], "zeros_lik": [364, 387], "zidx": [144, 146, 147, 149, 150, 151, 208, 222, 239, 240, 260, 286], "zinterfaceseg": 340, "ziso": [398, 422], "zlib": 141, "zmid": [144, 321, 324, 330, 332, 387], "znode": 339, "zonal": [401, 402, 406, 410, 414], "zppy": 6, "zseafloor": 340, "zstash": 395, "ztransectnod": 340}, "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_configs", "polaris.ModelStep.map_yaml_options", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.io.update_permissions", "polaris.job.clean_up_whitespace", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.analysis.ConvergenceAnalysis", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.run", "polaris.ocean.convergence.analysis.ConvergenceAnalysis.setup", "polaris.ocean.convergence.forward.ConvergenceForward", "polaris.ocean.convergence.forward.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.forward.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.get_resolution_for_task", "polaris.ocean.convergence.get_timestep_for_task", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.ice_shelf.IceShelfTask", "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "polaris.ocean.ice_shelf.SshAdjustment", "polaris.ocean.ice_shelf.SshAdjustment.run", "polaris.ocean.ice_shelf.SshForward", "polaris.ocean.ice_shelf.SshForward.compute_cell_count", "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanIOStep", "polaris.ocean.model.OceanIOStep.map_from_native_model_vars", "polaris.ocean.model.OceanIOStep.map_to_native_model_vars", "polaris.ocean.model.OceanIOStep.open_model_dataset", "polaris.ocean.model.OceanIOStep.setup", "polaris.ocean.model.OceanIOStep.write_model_dataset", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_configs", "polaris.ocean.model.OceanModelStep.map_yaml_options", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.barotropic_gyre.BarotropicGyre", "polaris.ocean.tasks.barotropic_gyre.add_barotropic_gyre_tasks", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.compute_error", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.exact_solution", "polaris.ocean.tasks.barotropic_gyre.analysis.Analysis.run", "polaris.ocean.tasks.barotropic_gyre.forward.Forward", "polaris.ocean.tasks.barotropic_gyre.forward.Forward.compute_cell_count", "polaris.ocean.tasks.barotropic_gyre.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.barotropic_gyre.forward.compute_max_time_step", "polaris.ocean.tasks.barotropic_gyre.init.Init", "polaris.ocean.tasks.barotropic_gyre.init.Init.run", "polaris.ocean.tasks.barotropic_gyre.init.Init.setup", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.decomp.Decomp", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.restart.Restart", "polaris.ocean.tasks.cosine_bell.restart.RestartStep", "polaris.ocean.tasks.cosine_bell.restart.RestartStep.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.validate.Validate", "polaris.ocean.tasks.cosine_bell.validate.Validate.run", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "polaris.ocean.tasks.ice_shelf_2d.default.Default", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.ice_shelf_2d.init.Init", "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "polaris.ocean.tasks.internal_wave.default.Default", "polaris.ocean.tasks.internal_wave.forward.Forward", "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.internal_wave.init.Init", "polaris.ocean.tasks.internal_wave.init.Init.run", "polaris.ocean.tasks.internal_wave.rpe.Rpe", "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "polaris.ocean.tasks.internal_wave.viz.Viz", "polaris.ocean.tasks.internal_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.init.Init.setup", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "polaris.ocean.vertical.update_layer_thickness", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "barotropic_gyre", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "ice_shelf_2d", "Tasks", "inertial_gravity_wave", "internal_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "Ice shelf", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "barotropic gyre", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "ice shelf 2d", "Tasks", "inertial gravity wave", "internal wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "titleterms": {"": 386, "100layere3smv1": 398, "1d": 398, "2": [403, 405, 412, 413], "2d": 407, "3d": 398, "60layerphc": 398, "80layere3smv1": 398, "A": 388, "And": 1, "No": 394, "The": 1, "__main__": 56, "activ": 368, "ad": [14, 141, 364, 387], "add_baroclinic_channel_task": 183, "add_barotropic_gyre_task": 206, "add_config": 21, "add_cosine_bell_task": 220, "add_depend": 41, "add_geostrophic_task": 237, "add_ice_shelf_2d_task": 246, "add_inertial_gravity_wave_task": 258, "add_input_fil": 42, "add_internal_wave_task": 270, "add_manufactured_solution_task": 284, "add_model_config_opt": 26, "add_namelist_fil": 27, "add_output_fil": 43, "add_single_column_task": [297, 372], "add_sphere_transport_task": 307, "add_spherical_base_mesh_step": 168, "add_step": [22, 52], "add_streams_fil": 28, "add_task": 23, "add_yaml_fil": 29, "adjust": 396, "advanc": 368, "ag": [359, 414], "again": 387, "against": 18, "albani": [6, 368], "algorithm": 2, "alter_bottom_depth": 322, "alter_ssh": 323, "an": [14, 144, 387], "analysi": [146, 147, 148, 149, 150, 151, 152, 153, 197, 198, 199, 207, 208, 209, 210, 221, 222, 238, 239, 240, 259, 260, 279, 280, 285, 286, 308, 309, 347, 348, 349, 350, 351, 354, 356, 357, 358, 387, 406], "anvil": [136, 389], "api": 3, "ar": 1, "area": 15, "area_for_field": 89, "attribut": [364, 366], "baroclin": 401, "baroclinic_channel": [143, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 346], "barotrop": 402, "barotropic_gyr": [143, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 347], "barotropicgyr": 205, "base": [3, 143], "base_mesh": [348, 349, 350, 351, 357, 358], "baselin": 18, "befor": 1, "beginn": 368, "bell": 404, "between": [368, 387], "boundari": 345, "branch": 6, "build": [4, 141, 368, 416], "build_cell_width_lat_lon": 79, "build_subdivisions_cell_width_lat_lon": 72, "cach": [3, 5, 8, 57, 364], "case": 388, "categori": [360, 415, 420], "cell": 387, "channel": 401, "chicoma": [137, 390], "chrysali": [138, 391], "class": [3, 367], "clean_up_whitespac": 64, "code": [367, 368, 387], "column": [414, 419], "command": [3, 5, 8], "comment": 9, "common": 19, "compare_vari": 124, "compass": 386, "compil": 368, "complete_step_run": 111, "compon": [3, 14, 20, 21, 22, 23, 24, 58, 144, 343, 361, 367, 368, 380, 399, 416, 417], "comput": 387, "compute_cell_count": [155, 160, 166, 176, 187, 212, 249, 265, 273, 291], "compute_error": [147, 208], "compute_max_time_step": 214, "compute_min_max_level_cel": 327, "compute_planar_hex_nx_ni": 83, "compute_rp": 182, "compute_transect": 334, "compute_z_level_layer_thick": 328, "compute_z_level_resting_thick": 329, "compymcnodefac": [139, 392], "conda": [6, 368, 384, 394, 416], "condit": [345, 381, 387, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "config": [3, 6, 9, 14, 59, 60, 141, 144, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "configur": [53, 196, 219, 236, 278, 306, 366, 384], "constrain_resourc": [44, 177, 364], "constructor": [361, 364, 366], "converg": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "convergence_paramet": [148, 309], "convergenceanalysi": [146, 147, 148, 149, 150, 151, 152, 153], "convergenceforward": [154, 155, 156], "coordin": [143, 144, 387, 398], "copi": 364, "core": [401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "correl": 403, "correlated_tracers_2d": 348, "cosin": 404, "cosine_bel": [143, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 349, 400], "cosinebel": [218, 219], "count": 387, "cpu": [137, 142, 390, 395], "crayclang": 140, "creat": [6, 368, 387], "cvmix": [298, 359, 414], "d": [403, 405, 412, 413], "data": [387, 395], "dataset": 18, "daughter": 1, "decomp": [184, 223, 346, 349, 401], "default": [185, 247, 271, 346, 347, 352, 355, 387, 401, 402, 407, 410, 411], "default_tidal_forc": 407, "default_with_restart": 407, "defin": 387, "del2": 411, "del4": 411, "depend": [1, 6, 364], "deploi": 6, "describ": [6, 141], "descript": [401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "design": [0, 2], "develop": [368, 386, 387], "differ": 368, "directori": [1, 362], "discover": 1, "diverg": 405, "divergent_2d": 350, "do": [1, 6], "docstr": 7, "document": [0, 4, 7, 387], "doe": 368, "download": [11, 61, 364], "dst_from_lon_lat": 101, "dst_from_mpa": 102, "dst_from_point": 103, "dst_from_proj": 104, "dst_global_lon_lat": 105, "durat": [401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "dynam": [14, 387], "dynamic_model_config": [30, 156, 167, 188, 194, 213, 230, 250, 274], "e3sm": [6, 14, 144, 368, 416], "easili": 1, "energi": [143, 144], "enhanc": 387, "env": 6, "environ": [6, 141, 368, 384, 416], "error": 384, "etc": 6, "exact": 419, "exact_restart": [373, 374, 375], "exact_restart_test": 383, "exact_solut": [149, 209, 222, 239, 260, 261, 262, 263, 286, 287, 288, 289, 354, 356], "exactrestart": 373, "exactsolut": [261, 262, 263, 287, 288, 289], "fail": 384, "field": 19, "filament_analysi": [310, 311, 357], "filamentanalysi": [310, 311], "file": [9, 14, 141, 144, 361, 364, 387, 388], "find_planar_transect_cells_and_weight": 336, "find_spherical_transect_cells_and_weight": 337, "find_transect_levels_and_weight": 340, "flag": 368, "forc": [345, 381, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "forg": 394, "forward": [154, 155, 156, 186, 187, 188, 211, 212, 213, 214, 224, 241, 248, 249, 250, 264, 265, 272, 273, 274, 290, 291, 299, 312, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 376, 383, 387], "framework": [3, 10, 143, 144, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 367, 370, 383, 397], "from": [1, 6, 19, 144, 364, 368, 394], "frontier": [140, 393], "gener": 13, "generate_1d_grid": 319, "geostroph": [143, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 351, 406], "get": 387, "get_available_parallel_resourc": 95, "get_cell_width": 73, "get_compon": 58, "get_output_field": [150, 240], "get_parallel_command": 96, "get_remapp": 106, "get_resolution_for_task": 157, "get_slurm_opt": 65, "get_subdivis": 74, "get_time_interval_str": 181, "get_timestep_for_task": 158, "gethostbynam": 384, "global": 19, "glossari": [385, 386], "gnu": [136, 137, 138, 139, 140, 142], "graph": 14, "graviti": 409, "grid": [19, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415], "grid_1d": [319, 320], "group": [367, 387], "guid": 386, "gyre": 402, "here": 2, "horiz": [336, 337, 338, 339], "horizont": [19, 387], "how": 387, "i": [1, 416], "ic": [143, 144, 396, 407, 417], "ice_shelf": [161, 162, 163, 164, 165, 166, 167], "ice_shelf_2d": [143, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 352], "iceshelftask": [161, 162], "icosahedr": 144, "icosahedralmeshstep": [71, 72, 73, 74, 75, 76, 77], "ideal": [359, 414], "ideal_ag": 300, "idealag": 300, "identifi": 6, "implement": [1, 2], "index_tanh_dz": 398, "inerti": 409, "inertial_gravity_wav": [143, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 354], "inertialgravitywav": 257, "ingest": 91, "init": [189, 190, 191, 215, 216, 217, 225, 226, 227, 242, 243, 251, 252, 266, 267, 275, 276, 292, 293, 294, 301, 302, 313, 314, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 387], "init_sigma_vertical_coord": 324, "init_vertical_coord": 321, "init_z_level_vertical_coord": 330, "init_z_star_vertical_coord": 332, "initi": [345, 381, 387, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "input": [14, 144, 364], "intel": [136, 138, 139, 142], "interfac": [3, 5], "intern": 410, "internal_wav": [143, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 355], "interp_mpas_to_transect_cel": 341, "interp_mpas_to_transect_nod": 342, "interv": 144, "intuit": 1, "io": [3, 11, 61, 62, 63], "job": [3, 64, 65, 66, 394, 416], "jupyt": 395, "lanl": 384, "lapack": [6, 368], "lat": 19, "level": 398, "line": [3, 5], "list": [3, 5, 8, 67, 68, 69], "list_cas": 67, "list_machin": 68, "list_suit": 69, "load": [389, 390, 391, 392, 393, 395, 416], "load_depend": 112, "log": [3, 12, 70], "log_method_cal": 70, "lon": 19, "mac": 384, "mach": 6, "machin": [6, 141, 368, 394, 416], "mai": 1, "main": 56, "main_mpas_to_yaml": 133, "make": [14, 387], "make_graph_fil": 88, "make_jigsaw_mesh": [75, 80], "make_triangle_tre": 338, "mali": 6, "manufactur": 411, "manufactured_solut": [143, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 356], "manufacturedsolut": 283, "map": 144, "map_from_native_model_var": 170, "map_to_native_model_var": 171, "map_yaml_config": [31, 178], "map_yaml_opt": [32, 179], "map_yaml_to_namelist": 33, "mappingfilestep": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "matplotlib": 19, "mesh": [3, 13, 14, 19, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 143, 144, 168, 387, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "mesh_to_triangl": 339, "mixing_analysi": [315, 316, 348], "mixinganalysi": [315, 316], "model": [14, 143, 144, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 344, 381, 387, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416], "model_step": [3, 88], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "modul": [6, 8, 367, 368], "more": 387, "mpa": [3, 6, 15, 19, 89, 90, 141, 144, 345, 368, 381], "mpas_namelist_and_streams_to_yaml": 134, "mpas_to_yaml": [3, 5], "mpi": [144, 394], "mpich": 394, "multipl": 1, "name": 2, "namelist": [3, 14, 91, 92, 93, 94, 144], "netlib": [6, 368], "new": [6, 141, 387], "nightli": 365, "nondiverg": 412, "nondivergent_2d": 357, "norm": 18, "normal_veloc": [262, 288], "notebook": 395, "ocean": [6, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 368, 399], "oceaniostep": [169, 170, 171, 172, 173, 174], "oceanmodelstep": [175, 176, 177, 178, 179, 180], "omega": [141, 144, 368], "onc": 1, "one": 387, "onli": 368, "open_model_dataset": 172, "openmpi": 394, "option": [2, 6, 14, 144, 368, 387, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 419, 420], "organ": 363, "other": [1, 141, 364, 387, 394, 416], "out": 387, "output": [1, 144, 364, 387], "overview": 367, "packag": 367, "parallel": [3, 95, 96, 97, 98], "paramet": 387, "parse_replac": 92, "partial_cel": [322, 323], "partit": [14, 34], "pass": 387, "path": 1, "perlmutt": [142, 395], "permiss": 11, "petsc": [6, 368], "physic": 419, "pio": 14, "planar": [13, 19, 83], "plot": [19, 387], "plot_converg": 151, "plot_global_lat_lon_field": 125, "plot_global_mpas_field": 126, "plot_horiz_field": 127, "plot_transect": 335, "pm": 142, "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 364, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 386, 389, 390, 391, 392, 393, 395, 416], "polarisconfigpars": [59, 60], "polarisyaml": [129, 130, 131, 132], "potenti": [143, 144], "pr": 365, "process_inputs_and_output": 35, "proven": [3, 16, 99], "proxi": 384, "pull": 365, "quasi": 144, "quasiuniformsphericalmeshstep": [78, 79, 80, 81, 82], "queue": 394, "quick": [368, 416], "read": [119, 130], "refer": [3, 143, 144], "relat": 367, "reli": 1, "remap": [3, 17, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "remot": [6, 395], "remove_step": [24, 54], "replac": 93, "repo": 368, "repositori": 368, "request": 365, "requir": [1, 2], "resolut": 387, "resourc": 144, "rest": 144, "restart": [192, 193, 194, 228, 229, 230, 346, 349, 401, 419], "restart_step": [193, 194, 349], "restartstep": [193, 194, 229, 230], "rotat": 413, "rotation_2d": 358, "rpe": [143, 144, 182, 195, 196, 197, 198, 199, 277, 278, 279, 280, 346, 355, 401, 410], "run": [1, 3, 8, 14, 45, 76, 81, 85, 111, 112, 113, 114, 115, 116, 144, 152, 164, 190, 198, 202, 204, 210, 216, 226, 232, 234, 243, 245, 252, 254, 256, 267, 269, 276, 280, 282, 293, 296, 302, 304, 311, 314, 316, 318, 364, 368, 375, 379, 389, 390, 391, 392, 393, 395, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420], "run_command": 97, "run_single_step": 113, "run_task": 114, "runtime_setup": [36, 46, 107, 364], "same": 2, "save_and_plot_cell_width": 86, "script": [368, 416], "sea": 417, "seaic": [141, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381], "second": 387, "serial": [5, 8, 113, 114], "set": [1, 144, 368, 416], "set_cores_per_nod": 98, "set_model_resourc": 37, "set_resourc": 47, "set_shared_config": [48, 55], "setup": [3, 5, 8, 38, 49, 60, 77, 82, 87, 117, 118, 153, 173, 180, 191, 199, 217, 294, 364], "setup_config": 115, "setup_ssh_adjustment_step": 162, "setup_suit": 123, "setup_task": [117, 118], "share": [1, 6, 9, 367, 387], "shelf": [143, 144, 396, 407], "shell": 368, "sigma": [324, 325, 398], "singl": [414, 419], "single_column": [143, 297, 298, 299, 300, 301, 302, 303, 304, 359, 369, 372, 373, 374, 375, 376, 377, 378, 379, 383], "slurm": 394, "solut": 411, "solver": 384, "spack": [6, 141, 368, 416], "sphere_transport": [143, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "spheretransport": [305, 306], "spheric": [13, 19, 84, 85, 86, 87, 143, 144, 159, 160, 168], "sphericalbasestep": [84, 85, 86, 87], "sphericalconvergenceforward": [159, 160], "src_from_lon_lat": 108, "src_from_mpa": 109, "src_from_proj": 110, "ssh": [263, 289, 396], "sshadjust": [163, 164], "sshforward": [165, 166, 167], "standalon": 416, "standard": 419, "standard_phys": [377, 378, 379], "standard_physics_test": 383, "standardphys": 377, "star": 398, "start": [368, 387, 416], "step": [1, 3, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 143, 364, 387, 396, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 420], "stream": [3, 14, 119, 120, 121, 122, 144, 387], "structur": [1, 362], "studi": 387, "style": [19, 367, 368], "suit": [3, 5, 8, 123, 365, 400, 416, 421], "summari": [1, 2], "superclass": 387, "support": [141, 344, 368, 381, 394, 402, 416], "suppport": [401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415], "switch": 368, "symlink": [11, 62, 364], "system": 368, "tanh_dz": 398, "task": [1, 3, 51, 52, 53, 54, 55, 143, 144, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 353, 360, 363, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 379, 382, 387, 408, 410, 415, 416, 418, 420, 422], "task_nam": [415, 420], "templat": [2, 14], "test": [1, 2, 6, 143, 144, 387, 388, 419], "thing": 387, "thread": [200, 346, 401], "time": [15, 144, 387, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 420], "time_index_from_xtim": 90, "timestep": 419, "topic": 2, "tracer": 403, "transect": [336, 337, 338, 339, 340, 341, 342], "troubleshoot": [6, 368, 384], "tutori": [386, 387], "type": 398, "uniform": [13, 144, 398], "unix": 368, "unknown": 368, "unpickle_suit": 116, "up": [1, 368, 416], "updat": [6, 14, 131, 368], "update_cach": 57, "update_default": 120, "update_layer_thick": 326, "update_namelist_pio": 39, "update_permiss": 63, "update_sigma_layer_thick": 325, "update_tre": 121, "update_z_level_layer_thick": 331, "update_z_star_layer_thick": 333, "us": 1, "use_mplstyl": 128, "user": [1, 368, 386, 388, 416], "v": 144, "valid": [1, 2, 3, 18, 124, 201, 202, 231, 232, 253, 254, 346, 349, 352, 355, 374, 375, 387, 416], "validate_baselin": 50, "vari": 387, "variabl": [6, 18], "vert": [340, 341, 342], "vertic": [143, 144, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 387, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415], "visual": [19, 143, 144, 387, 419], "viz": [3, 125, 126, 127, 128, 203, 204, 233, 234, 244, 245, 255, 256, 268, 269, 281, 282, 295, 296, 303, 304, 317, 318, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 378, 379, 383, 387], "wave": [409, 410], "we": 6, "what": 368, "when": 384, "where": 6, "within": 367, "without": 6, "work": 1, "worktre": 368, "write": [94, 99, 122, 132], "write_1d_grid": 320, "write_job_script": 66, "write_model_dataset": 174, "yaml": [3, 14, 129, 130, 131, 132, 133, 134, 135, 144], "yaml_to_mpas_stream": 135, "yet": 416, "z": 398, "zlevel": [327, 328, 329, 330, 331], "zstar": [332, 333]}})