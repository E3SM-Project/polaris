Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "cosine_bell", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "cosine bell", "Tasks", "inertial gravity wave", "manufactured solution", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 18, 20, 37, 45, 48, 49, 52, 132, 135, 138, 147, 148, 155, 158, 163, 168, 229, 232, 233, 237, 238, 239, 240, 242, 244, 246, 248, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 282, 283, 284, 288, 290], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 34, 48, 49, 51, 54, 67, 72, 74, 77, 80, 81, 89, 91, 93, 94, 100, 105, 106, 107, 108, 111, 112, 132, 135, 137, 138, 139, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 190, 192, 193, 194, 195, 196, 199, 200, 204, 206, 207, 208, 209, 210, 213, 215, 216, 217, 218, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 252, 253, 254, 256, 257, 261, 263, 264, 266, 272, 274, 289, 290], "templat": [0, 5, 6, 7, 27, 28, 29, 113, 122, 126, 132, 135, 137, 151, 157, 233, 264, 265, 266], "date": [1, 2, 5, 54, 229, 240, 246, 258, 266], "2023": [1, 16, 280, 281], "08": [1, 265, 277], "18": [1, 6, 266, 268], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 17, 132, 265, 266, 271], "asai": [1, 266], "davi": [1, 266], "capabl": [1, 2, 6, 16, 132, 242, 245, 265, 271, 284], "design": [1, 132, 230, 242, 244, 245, 264, 271, 277], "here": [1, 6, 9, 12, 14, 16, 17, 132, 135, 232, 237, 238, 241, 242, 244, 245, 246, 261, 265, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 288, 289], "abil": [1, 7], "across": [1, 6, 7, 9, 14, 18, 135, 232, 238, 242, 243, 244, 245, 246, 263, 265, 273, 277, 278], "In": [1, 2, 6, 7, 8, 9, 11, 14, 16, 17, 37, 132, 135, 238, 240, 242, 243, 244, 245, 246, 264, 265, 266, 271, 274, 278, 283, 284, 288, 289, 290], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 23, 24, 29, 30, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 62, 66, 68, 71, 72, 75, 76, 77, 81, 90, 91, 93, 94, 100, 105, 108, 118, 128, 129, 130, 131, 132, 133, 135, 139, 142, 147, 148, 149, 151, 153, 154, 155, 157, 158, 159, 161, 162, 163, 167, 168, 171, 173, 176, 178, 180, 182, 183, 186, 190, 192, 194, 196, 197, 200, 204, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 229, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 257, 258, 262, 263, 264, 265, 266, 268, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284, 288, 289], "document": [1, 3, 9, 14, 242, 245, 264, 266, 284], "refer": [1, 7, 14, 37, 145, 158, 221, 224, 227, 228, 242, 245, 246, 263, 264, 265, 274, 277, 284], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 33, 46, 105, 111, 112, 154, 162, 238, 239, 240, 242, 243, 244, 245, 246, 248, 265, 266, 271, 277, 278, 282, 283, 284, 287, 288], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 24, 27, 28, 30, 37, 39, 48, 55, 94, 96, 103, 111, 112, 113, 117, 120, 122, 132, 135, 139, 142, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 188, 189, 202, 203, 213, 229, 231, 238, 239, 241, 242, 244, 246, 251, 252, 254, 256, 265, 266, 268, 271, 274, 277, 278, 280, 281, 282, 283, 284], "avail": [1, 4, 5, 7, 11, 14, 18, 24, 34, 37, 40, 41, 44, 55, 63, 89, 90, 91, 132, 139, 149, 190, 204, 213, 232, 233, 242, 244, 245, 246, 265, 267, 268, 269, 270, 272, 277, 284, 289], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 128, 130, 131, 132, 135, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 285, 289, 290], "main": [1, 3, 6, 7, 9, 14, 42, 132, 182, 238, 239, 244, 245, 246, 265, 290], "motiv": 1, "behind": [1, 245], "comput": [1, 7, 13, 14, 79, 132, 135, 139, 140, 145, 150, 172, 175, 187, 191, 201, 205, 224, 225, 226, 232, 233, 235, 236, 237, 242, 246, 268, 269, 271, 272, 277, 280, 281, 284], "expens": [1, 242, 243], "could": [1, 14, 16, 18, 132, 233, 242, 243, 244, 245, 246, 265, 278], "time": [1, 5, 6, 7, 8, 14, 17, 18, 37, 48, 61, 120, 132, 144, 145, 149, 158, 176, 188, 189, 192, 202, 203, 206, 213, 231, 232, 233, 235, 236, 238, 242, 243, 244, 245, 246, 261, 262, 263, 266, 268, 272, 284, 289], "order": [1, 5, 8, 13, 14, 135, 233, 239, 242, 243, 246, 265, 278, 281, 282, 284], "reflect": [1, 5, 246], "fact": [1, 14, 37, 132], "we": [1, 2, 5, 7, 9, 11, 13, 14, 16, 17, 18, 131, 132, 135, 143, 232, 233, 237, 238, 241, 242, 244, 245, 246, 261, 264, 265, 266, 268, 270, 271, 272, 274, 278, 284, 289], "present": [1, 49, 120, 246, 265], "new": [1, 2, 5, 19, 25, 37, 48, 56, 60, 67, 74, 80, 94, 114, 115, 135, 137, 149, 156, 174, 187, 190, 201, 204, 213, 221, 227, 228, 242, 244, 245, 246, 259, 262, 263, 264, 284], "success": [1, 2, 8, 47, 58, 229, 239, 258, 265, 266], "insofar": 1, "guarante": [1, 14, 132, 229, 246, 258], "per": [1, 8, 14, 24, 34, 36, 37, 44, 90, 91, 132, 135, 139, 242, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 283, 288], "slurm": [1, 61, 92, 132, 242, 264, 266, 267, 268, 269, 270, 272, 284], "job": [1, 6, 132, 246, 264, 265, 267, 268, 269, 270, 272], "role": 1, "clear": [1, 2, 245, 265], "should": [1, 2, 5, 6, 7, 9, 12, 14, 17, 25, 30, 37, 38, 39, 46, 48, 50, 58, 62, 75, 111, 112, 119, 120, 128, 129, 130, 131, 132, 133, 135, 142, 154, 162, 215, 217, 229, 238, 239, 240, 242, 243, 244, 246, 258, 259, 262, 263, 265, 266, 277, 278, 282, 283, 284, 288], "invoc": 1, "serial": [1, 43, 242, 244, 264, 265, 284], "A": [1, 6, 7, 8, 11, 13, 14, 16, 18, 19, 25, 27, 28, 30, 37, 38, 39, 40, 41, 45, 48, 49, 52, 55, 56, 57, 63, 67, 68, 71, 74, 75, 76, 80, 86, 89, 91, 93, 94, 95, 96, 97, 98, 102, 103, 104, 108, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 132, 135, 137, 142, 144, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 168, 171, 174, 177, 179, 181, 185, 190, 193, 195, 199, 204, 207, 209, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 232, 233, 235, 236, 237, 239, 242, 243, 244, 245, 246, 251, 252, 254, 256, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 283, 284, 287, 288], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 16, 37, 39, 40, 45, 48, 49, 50, 52, 54, 56, 81, 107, 114, 117, 132, 135, 179, 229, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 280, 281, 283, 284, 285, 288], "class": [1, 9, 11, 13, 14, 16, 17, 18, 19, 24, 32, 37, 42, 48, 56, 66, 67, 74, 80, 94, 121, 135, 136, 137, 139, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 168, 171, 174, 177, 179, 181, 182, 183, 185, 187, 190, 193, 195, 197, 199, 201, 204, 207, 209, 212, 213, 214, 215, 217, 229, 232, 233, 235, 236, 237, 239, 240, 242, 244, 249, 251, 252, 254, 255, 256, 258, 261, 265], "attribut": [1, 8, 9, 12, 13, 14, 43, 45, 52, 98, 104, 105, 235, 236, 265], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 17, 18, 39, 46, 48, 58, 107, 108, 119, 132, 135, 154, 162, 168, 215, 217, 232, 233, 237, 238, 240, 242, 243, 244, 245, 246, 262, 263, 264, 265, 266, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290], "relat": [1, 6, 7, 11, 13, 14, 132, 135, 229, 232, 233, 235, 236, 237, 238, 242, 246, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 282, 283, 284, 285], "inform": [1, 5, 7, 8, 37, 94, 118, 127, 187, 201, 242, 244, 246, 266, 268, 275, 284, 285], "belong": [1, 10, 12, 14, 24, 34, 37, 44, 48, 67, 74, 80, 94, 135, 137, 139, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 168, 171, 174, 177, 179, 181, 183, 185, 190, 193, 195, 197, 199, 204, 207, 209, 212, 213, 214, 215, 217, 238, 239, 242, 244, 245, 251, 252, 254, 255, 256, 265, 289], "locat": [1, 5, 6, 9, 14, 18, 37, 49, 111, 112, 117, 135, 229, 242, 244, 246, 258, 263, 265, 266, 268, 271, 274, 277, 278, 284], "highest": 1, "level": [1, 2, 11, 12, 13, 17, 18, 135, 221, 222, 223, 224, 225, 226, 227, 228, 232, 238, 240, 241, 242, 244, 265, 266, 277, 278, 280, 281, 282, 283, 288], "where": [1, 5, 7, 9, 14, 17, 37, 39, 48, 56, 58, 62, 93, 112, 117, 119, 132, 135, 221, 224, 227, 228, 229, 239, 241, 242, 244, 246, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 282, 283, 284, 288, 289], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 24, 37, 44, 48, 55, 90, 91, 93, 112, 118, 132, 135, 136, 139, 149, 190, 204, 213, 221, 227, 228, 229, 232, 238, 239, 240, 242, 243, 244, 245, 246, 249, 258, 263, 264, 265, 266, 271, 274, 275, 277, 278, 283, 284, 285, 288, 290], "below": [1, 5, 6, 14, 24, 34, 37, 44, 90, 91, 132, 139, 149, 190, 204, 213, 229, 238, 240, 242, 244, 246, 265, 266, 271, 274, 278, 280, 281, 282, 284], "There": [1, 5, 6, 13, 221, 227, 228, 237, 238, 240, 242, 245, 246, 262, 265, 266, 284], "wai": [1, 5, 7, 13, 14, 37, 71, 76, 132, 135, 242, 244, 245, 246, 262, 264, 265, 271, 274, 282], "list": [1, 2, 6, 7, 9, 14, 17, 24, 37, 40, 48, 49, 54, 55, 56, 90, 91, 108, 111, 112, 117, 118, 135, 137, 145, 160, 164, 168, 171, 185, 195, 197, 199, 209, 213, 242, 243, 244, 245, 246, 252, 263, 264, 265, 266, 268, 271, 272, 278, 284, 289, 290], "within": [1, 5, 7, 9, 10, 11, 12, 14, 19, 34, 37, 39, 40, 44, 48, 49, 56, 59, 117, 118, 132, 135, 232, 235, 236, 238, 239, 240, 242, 243, 244, 246, 259, 263, 265, 266, 268, 271, 278, 282, 283, 288], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 37, 43, 48, 63, 69, 70, 79, 106, 112, 127, 132, 135, 164, 165, 168, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 252, 253, 261, 263, 265, 266, 271, 274, 277, 278, 280, 281, 283, 284, 288, 289], "also": [1, 2, 5, 6, 7, 9, 13, 14, 18, 32, 43, 56, 118, 119, 132, 135, 179, 221, 227, 228, 229, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 265, 266, 271, 272, 274, 278, 280, 281, 283, 284, 288, 290], "find": [1, 6, 7, 58, 70, 92, 132, 229, 244, 245, 246, 262, 265, 266, 284], "onli": [1, 5, 6, 7, 8, 14, 16, 17, 48, 132, 135, 229, 231, 233, 237, 239, 242, 244, 245, 258, 261, 264, 265, 266, 268, 271, 272, 274, 276, 277, 278, 281, 282, 284, 287], "its": [1, 5, 6, 7, 8, 9, 12, 16, 18, 37, 50, 100, 105, 106, 114, 132, 135, 238, 239, 240, 242, 243, 244, 245, 246, 263, 265, 266, 267, 278, 284, 290], "would": [1, 2, 5, 9, 14, 17, 24, 34, 37, 44, 49, 90, 91, 94, 132, 135, 139, 149, 190, 204, 213, 232, 240, 242, 244, 245, 246, 262, 265, 271, 274, 284], "ident": [1, 2, 5, 17, 147, 155, 163, 232, 242, 243, 245, 251, 265, 277], "self": [1, 9, 11, 12, 14, 16, 17, 18, 50, 82, 135, 239, 242, 244, 245, 265, 266], "contain": [1, 2, 5, 6, 7, 8, 9, 16, 18, 19, 26, 27, 28, 41, 55, 59, 86, 89, 95, 96, 97, 98, 102, 103, 104, 113, 120, 121, 135, 137, 145, 221, 227, 228, 239, 240, 241, 242, 245, 246, 248, 258, 259, 263, 265, 266, 271, 275, 283, 284, 285, 288], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 16, 69, 132, 135, 229, 242, 246, 263, 265, 266, 274, 282, 284], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 18, 37, 38, 39, 50, 56, 74, 108, 123, 132, 135, 144, 229, 232, 233, 238, 241, 242, 244, 245, 246, 259, 263, 264, 265, 266, 271, 274, 277, 278, 284], "As": [1, 4, 5, 6, 9, 13, 17, 69, 135, 238, 242, 243, 244, 245, 246, 265, 266, 274, 278, 282, 289], "setup": [1, 6, 7, 9, 11, 14, 17, 29, 34, 37, 38, 44, 48, 132, 135, 151, 157, 176, 192, 206, 232, 235, 236, 237, 244, 245, 246, 263, 264, 265, 266, 278, 284, 290], "suit": [1, 2, 6, 7, 12, 17, 37, 48, 62, 63, 107, 108, 110, 112, 132, 232, 241, 242, 244, 246, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277], "proce": [1, 246], "iter": [1, 229, 266], "through": [1, 2, 112, 245, 246, 259, 265], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 16, 17, 18, 24, 32, 37, 38, 39, 40, 60, 67, 69, 70, 96, 103, 113, 115, 119, 126, 132, 139, 177, 232, 233, 237, 238, 239, 240, 242, 243, 244, 245, 246, 262, 263, 264, 266, 268, 271, 274, 280, 284, 289, 290], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 24, 34, 37, 38, 40, 44, 49, 50, 92, 100, 105, 128, 130, 131, 132, 138, 139, 149, 190, 204, 213, 229, 233, 239, 240, 241, 242, 243, 244, 245, 246, 258, 259, 262, 263, 265, 266, 274, 277, 280, 282, 284], "been": [1, 5, 6, 37, 40, 45, 49, 50, 52, 100, 112, 117, 128, 130, 131, 132, 135, 138, 171, 185, 195, 199, 209, 229, 239, 242, 244, 245, 246, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 284], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 16, 17, 23, 38, 39, 46, 49, 50, 51, 56, 135, 138, 144, 146, 154, 162, 170, 184, 198, 211, 221, 227, 228, 238, 239, 244, 246, 250, 259, 264, 267, 268, 269, 270, 272, 284], "initi": [1, 7, 8, 37, 120, 135, 145, 147, 148, 152, 155, 158, 163, 177, 193, 207, 212, 214, 215, 217, 232, 233, 235, 236, 237, 238, 242, 244, 245, 255, 262, 263, 264, 266, 274, 276, 289, 290], "fals": [1, 9, 13, 14, 17, 18, 24, 37, 39, 49, 54, 63, 65, 107, 108, 112, 117, 118, 120, 132, 135, 139, 215, 217, 231, 238, 242, 244, 259, 265, 266, 268, 270, 272, 277], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 46, 68, 75, 132, 135, 154, 162, 238, 239, 242, 244, 245, 263, 264, 265, 278, 290], "skip": [1, 5, 8, 118, 289], "true": [1, 6, 7, 9, 13, 14, 17, 18, 24, 49, 58, 60, 118, 119, 120, 123, 128, 129, 130, 131, 132, 133, 135, 139, 214, 231, 238, 242, 246, 265, 266, 267, 268, 269, 270, 271, 272, 277, 284, 290], "when": [1, 5, 6, 12, 14, 16, 17, 25, 26, 27, 28, 30, 37, 38, 43, 48, 49, 56, 58, 60, 63, 107, 118, 132, 135, 142, 226, 232, 233, 235, 236, 237, 238, 242, 244, 245, 246, 264, 265, 267, 268, 269, 270, 272, 274, 277, 278, 282, 284, 290], "complet": [1, 5, 8, 26, 27, 28, 105, 265, 284], "alreadi": [1, 4, 5, 6, 11, 14, 49, 50, 60, 132, 135, 138, 213, 242, 244, 245, 246, 265, 266, 271, 274, 278, 284], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 17, 18, 37, 48, 135, 137, 149, 174, 190, 204, 213, 232, 235, 236, 242, 243, 244, 245, 246, 264, 265, 274], "parallel": [1, 5, 16, 24, 34, 37, 43, 44, 132, 139, 242, 245, 246, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 284, 290], "make": [1, 4, 5, 6, 7, 9, 11, 12, 16, 17, 24, 33, 39, 56, 68, 69, 71, 84, 128, 129, 130, 131, 132, 133, 135, 139, 143, 147, 155, 163, 181, 221, 227, 228, 229, 232, 238, 242, 244, 245, 246, 251, 258, 263, 266, 267, 268, 269, 270, 271, 272, 277, 278, 284, 289], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 52, 54, 58, 60, 66, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 137, 139, 143, 145, 151, 154, 157, 162, 179, 181, 220, 229, 232, 233, 235, 236, 237, 238, 243, 244, 245, 246, 252, 258, 259, 261, 262, 263, 264, 268, 271, 272, 274, 277, 278, 283, 284, 287, 288, 290], "mode": [1, 5, 14, 239, 246, 263, 264, 265, 284], "sure": [1, 5, 6, 7, 12, 14, 16, 17, 132, 135, 147, 155, 163, 229, 232, 242, 245, 246, 251, 258, 263, 265, 266, 271, 272, 277, 278], "dictionari": [1, 8, 9, 14, 18, 19, 25, 27, 28, 30, 37, 38, 41, 48, 56, 86, 89, 93, 112, 113, 121, 122, 123, 135, 137, 142, 233, 242, 244, 245, 265, 278], "them": [1, 7, 8, 9, 14, 16, 17, 24, 36, 132, 135, 139, 233, 239, 240, 242, 244, 245, 246, 263, 265, 270, 271, 276, 284, 290], "constructor": [1, 9, 14, 135, 232, 235, 236, 238, 265], "argument": [1, 5, 7, 9, 12, 14, 17, 18, 35, 37, 90, 91, 101, 119, 232, 239, 242, 244, 245, 246, 265, 283, 288, 289], "replac": [1, 5, 7, 9, 14, 25, 26, 27, 28, 29, 30, 45, 48, 52, 60, 86, 113, 122, 123, 132, 135, 137, 142, 151, 157, 244, 245, 265, 266, 284], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 16, 24, 37, 39, 48, 49, 51, 56, 62, 65, 67, 74, 80, 93, 94, 111, 117, 121, 132, 137, 138, 139, 146, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 168, 170, 171, 174, 177, 179, 181, 183, 184, 185, 190, 193, 195, 197, 198, 199, 204, 207, 209, 211, 212, 213, 214, 215, 217, 238, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 254, 255, 256, 259, 263, 264, 265, 266, 271, 273, 276, 289, 290], "subdir": [1, 5, 9, 16, 24, 37, 48, 49, 67, 74, 80, 94, 135, 137, 139, 149, 171, 174, 177, 179, 181, 213, 242, 244, 252, 265], "now": [1, 6, 132, 242, 246, 265, 266, 271], "rel": [1, 2, 5, 9, 16, 17, 39, 40, 49, 54, 56, 111, 112, 117, 118, 229, 239, 242, 244, 245, 246, 252, 258, 263, 265, 277, 284, 290], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 37, 39, 56, 132, 232, 242, 246, 262, 265, 274], "than": [1, 5, 6, 8, 9, 11, 13, 14, 37, 39, 44, 56, 132, 149, 190, 204, 213, 232, 242, 243, 245, 246, 262, 265, 274, 277], "parent": [1, 32, 135, 233, 238, 239, 242], "resid": [1, 5, 9, 39, 171, 240, 242, 244], "insid": [1, 12, 240, 242, 245, 278], "situat": [1, 16, 30, 142, 265, 284], "anoth": [1, 2, 6, 7, 9, 10, 13, 16, 17, 37, 38, 39, 118, 229, 232, 238, 240, 242, 244, 245, 246, 263, 265, 266, 277, 284, 289, 290], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 135, 229, 234, 239, 244, 265, 278, 283, 288, 289], "with_viz": [1, 233, 244, 278], "base": [1, 5, 8, 13, 14, 15, 17, 19, 37, 39, 41, 48, 54, 73, 78, 80, 111, 112, 117, 132, 135, 138, 141, 143, 174, 177, 179, 181, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 236, 237, 239, 241, 242, 244, 245, 246, 258, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 290], "mesh": [1, 5, 7, 10, 16, 24, 37, 84, 96, 103, 120, 137, 139, 140, 141, 143, 145, 148, 150, 152, 168, 171, 172, 174, 175, 177, 179, 181, 185, 187, 191, 193, 195, 199, 201, 205, 207, 209, 212, 214, 215, 221, 227, 228, 231, 232, 233, 235, 236, 237, 238, 240, 242, 244, 245, 246, 254, 255, 263, 264, 266, 274, 276, 284, 289], "init": [1, 5, 6, 7, 9, 14, 17, 18, 34, 44, 135, 137, 147, 148, 155, 158, 163, 174, 179, 229, 231, 239, 242, 244, 245, 246, 258, 266, 277, 278, 280, 281, 284], "forward": [1, 5, 7, 9, 14, 37, 135, 137, 145, 148, 156, 158, 179, 212, 214, 229, 239, 242, 244, 245, 255, 258, 266, 277, 278, 280, 281, 283, 288], "resolut": [1, 9, 13, 14, 16, 67, 70, 74, 75, 79, 95, 99, 102, 135, 137, 138, 147, 148, 149, 152, 155, 156, 158, 160, 163, 168, 171, 172, 174, 185, 190, 193, 195, 197, 199, 204, 207, 209, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 266, 277, 278, 280, 281, 282, 283, 288, 290], "singl": [1, 5, 8, 9, 18, 120, 132, 211, 212, 214, 215, 217, 237, 242, 244, 245, 250, 251, 252, 254, 255, 256, 258, 259, 263, 265, 271, 275, 278, 279, 280, 281, 285, 286], "analysi": [1, 6, 9, 18, 135, 232, 244, 245, 263, 264, 266, 278, 280, 281, 290], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 38, 39, 40, 49, 50, 51, 57, 73, 78, 83, 113, 114, 115, 122, 123, 126, 127, 132, 135, 138, 146, 151, 157, 170, 184, 198, 211, 238, 239, 242, 244, 245, 246, 250, 263, 265, 266, 272, 278], "remap": [1, 10, 18, 179, 233, 264, 278, 283, 288], "visual": [1, 10, 13, 16, 195, 209, 233, 235, 236, 238, 242, 244, 263, 264, 278, 280, 281, 283, 288], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 17, 18, 19, 30, 39, 117, 132, 230, 232, 233, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 263, 264, 265, 266, 271, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 289, 290], "spheric": [1, 5, 233, 244, 278, 289], "qu": [1, 5, 135, 244, 265, 266, 276, 278, 289], "base_mesh": [1, 5, 13, 67, 74, 135, 137, 138, 174, 177, 179, 181, 242, 244, 265, 278], "60km": [1, 5, 244, 278], "90km": [1, 5], "120km": [1, 5, 244], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 138, 244], "map": [1, 8, 16, 19, 30, 74, 75, 94, 119, 120, 142, 179, 181, 233, 244, 246, 266], "viz": [1, 5, 18, 168, 242, 244], "two": [1, 5, 10, 17, 118, 135, 155, 165, 232, 233, 235, 236, 237, 238, 239, 242, 243, 245, 246, 251, 253, 265, 277, 278, 280, 281, 287], "first": [1, 6, 9, 14, 112, 132, 135, 232, 235, 236, 237, 242, 244, 245, 246, 262, 265, 267, 268, 269, 270, 271, 272, 277, 278, 282, 284], "verbos": [1, 5, 6, 63, 65, 132, 242, 265, 289], "10": [1, 9, 13, 69, 132, 229, 232, 235, 236, 238, 239, 265, 266, 271, 274, 277, 280, 281, 282, 290], "name": [1, 5, 7, 8, 9, 13, 14, 16, 17, 18, 19, 24, 26, 27, 28, 30, 31, 37, 38, 39, 40, 48, 50, 58, 60, 61, 62, 63, 67, 74, 80, 84, 86, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 108, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 126, 132, 135, 137, 138, 139, 142, 145, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 172, 174, 177, 179, 181, 213, 220, 238, 239, 242, 244, 245, 246, 252, 254, 256, 263, 265, 266, 272, 277, 284, 289], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 135, 144, 149, 213, 237, 242, 245, 277, 282, 287], "symlink": [1, 5, 8, 9, 14, 17, 37, 39, 48, 49, 56, 244, 245, 246, 278], "what": [1, 2, 6, 11, 13, 16, 132, 244, 245, 265, 272, 283, 284, 288], "follow": [1, 4, 5, 7, 9, 13, 14, 18, 66, 132, 221, 227, 228, 229, 231, 242, 243, 244, 246, 258, 259, 262, 265, 266, 271, 272, 274, 276, 278, 280, 281, 282, 284, 287], "subdirectori": [1, 5, 7, 8, 13, 19, 23, 24, 37, 39, 48, 49, 51, 63, 67, 74, 80, 94, 111, 135, 137, 139, 149, 171, 174, 177, 179, 181, 185, 190, 193, 195, 199, 204, 207, 209, 213, 215, 217, 238, 240, 242, 244, 245, 265, 283, 284, 288, 290], "bold": [1, 244], "elsewher": [1, 246], "tree": [1, 7, 113, 115, 127, 244, 285], "thu": [1, 2, 7, 14, 265, 278], "similar": [1, 2, 5, 9, 12, 13, 14, 129, 132, 133, 135, 238, 240, 245, 246, 265, 266, 284], "had": [1, 132], "maintain": [1, 229, 284], "local": [1, 5, 6, 8, 9, 11, 17, 39, 229, 240, 242, 246, 258, 262, 265, 266, 271, 272, 274], "debug": [1, 8, 128, 129, 130, 131, 132, 133, 265, 267, 268, 269, 270, 272], "easier": [1, 14, 242, 244, 245, 246, 266, 284, 289], "symbol": [1, 60, 242], "link": [1, 2, 7, 9, 11, 14, 39, 45, 52, 60, 132, 238, 242, 244, 246, 265, 271, 275, 284, 285], "were": [1, 47, 132, 213, 242, 245, 263, 265, 266, 270, 274], "even": [1, 6, 12, 13, 14, 39, 56, 132, 242, 245, 246, 265, 266, 271, 284], "compass": [1, 5, 229, 242, 244, 245, 263, 265], "though": [1, 11, 37, 244, 245, 265], "global": [1, 13, 16, 98, 99, 104, 233, 238, 242, 243, 245, 263, 264, 265, 266, 272, 276, 278, 283, 284, 288, 290], "dynamic_adjust": [1, 14, 266], "allow": [1, 2, 8, 16, 17, 24, 34, 37, 44, 56, 118, 132, 135, 139, 242, 263, 265, 266, 271, 274, 278, 282, 290], "one": [1, 2, 5, 6, 7, 10, 14, 16, 17, 18, 24, 36, 37, 39, 40, 47, 48, 54, 60, 111, 112, 117, 132, 135, 138, 139, 155, 213, 229, 232, 235, 236, 237, 238, 240, 242, 244, 245, 246, 251, 261, 262, 263, 264, 266, 271, 272, 274, 277, 278, 281, 283, 284, 287, 288, 289, 290], "input": [1, 5, 8, 10, 11, 16, 32, 37, 38, 39, 40, 46, 84, 135, 154, 162, 232, 233, 235, 236, 237, 265, 282], "port": [1, 265, 272], "instead": [1, 5, 6, 12, 14, 24, 108, 128, 132, 242, 245, 246, 263, 265, 267, 278, 284, 289], "seri": [1, 14, 135, 160, 166, 233, 235, 261, 265, 276], "indic": [1, 7, 8, 14, 16, 17, 37, 38, 105, 112, 120, 132, 135, 224, 240, 242, 262, 265, 266, 274, 282], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 37, 38, 231, 242, 244, 245, 246, 265, 268, 270, 272, 284], "ran": [1, 106], "ico": [1, 5, 135, 244, 265, 276, 278, 289], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 24, 112, 117, 132, 139, 229, 239, 242, 246, 258, 265, 266, 267, 268, 269, 270, 271, 272, 284], "runtim": [1, 8, 14, 29, 43, 135, 151, 157, 176, 192, 206, 242, 265], "0": [1, 2, 5, 6, 7, 13, 14, 16, 17, 18, 69, 95, 99, 102, 118, 120, 128, 129, 130, 131, 132, 133, 135, 221, 226, 227, 228, 231, 233, 238, 242, 245, 259, 262, 265, 266, 268, 271, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 288], "01": [1, 14, 135, 259, 265, 282, 287], "00": [1, 14, 17, 135, 244, 259, 265, 272, 284], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 284], "02": [1, 268], "59": 1, "icos_map_60km": 1, "20": [1, 158, 232, 243, 265, 277, 282], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 56, 132, 232, 245, 246, 278, 282], "mechan": [1, 242], "prevent": [1, 242], "expect": [1, 2, 12, 16, 132, 135, 239, 242, 246, 265, 278], "affect": [1, 6, 242, 246, 265], "howev": [1, 13, 242, 243, 244, 246, 265], "perform": [1, 2, 5, 8, 14, 16, 17, 37, 42, 43, 46, 47, 67, 118, 132, 135, 137, 148, 149, 154, 158, 162, 174, 182, 190, 204, 212, 213, 214, 229, 232, 233, 235, 236, 237, 242, 243, 244, 255, 263, 264, 265, 266, 271, 277, 289], "successfulli": [1, 47, 265], "after": [1, 5, 6, 7, 9, 16, 17, 18, 37, 39, 40, 81, 100, 105, 132, 222, 223, 229, 239, 242, 244, 246, 258, 265, 266, 268, 272, 284, 287], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 16, 30, 37, 38, 45, 52, 106, 112, 117, 131, 132, 135, 142, 171, 185, 195, 199, 209, 229, 232, 235, 236, 238, 240, 242, 243, 244, 245, 246, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 284, 289, 290], "remov": [1, 5, 14, 23, 51, 108, 232, 235, 236, 244, 246, 265], "longer": [1, 155, 232, 243, 251, 265, 277, 278], "about": [1, 5, 6, 7, 8, 12, 14, 37, 94, 121, 135, 238, 242, 244, 245, 246, 265, 266, 268], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 29, 49, 56, 75, 132, 135, 151, 157, 229, 233, 239, 242, 244, 245, 246, 258, 259, 262, 264, 265, 266, 267, 271, 272, 274, 277, 278, 284, 289], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 18, 132, 135, 229, 231, 239, 242, 243, 244, 245, 259, 262, 266, 271, 275, 284], "enforc": [1, 231, 246], "framework": [1, 5, 7, 9, 12, 13, 14, 107, 229, 238, 239, 242, 244, 258, 263, 264, 265, 275, 282, 283, 285, 288, 290], "propos": [1, 2], "close": [1, 6, 70, 132, 264, 278], "root": [1, 39, 132, 172, 229, 233, 235, 236, 239, 242, 245, 246, 258, 263, 266, 267, 268, 269, 270, 271, 272, 274, 280, 281, 284], "live": [1, 49, 244, 284], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 24, 36, 39, 47, 68, 75, 76, 79, 82, 94, 100, 118, 135, 139, 155, 164, 187, 201, 221, 227, 228, 233, 239, 240, 242, 244, 245, 251, 252, 271, 274, 277, 280, 281], "think": [1, 5, 265], "condit": [1, 7, 37, 135, 148, 152, 177, 193, 207, 212, 214, 215, 217, 232, 233, 235, 236, 237, 238, 242, 243, 244, 245, 255, 261, 263, 264, 266, 276, 289, 290], "shown": [1, 14, 132, 240, 282], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 34, 37, 38, 39, 40, 44, 48, 57, 71, 74, 76, 95, 99, 100, 102, 111, 112, 117, 128, 129, 130, 131, 132, 133, 135, 229, 232, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 281, 284, 289, 290], "simpli": [1, 14, 17, 56, 132, 148, 239, 242, 244, 246, 265, 274, 284, 289], "prefer": [1, 2, 132, 242, 243, 265, 266], "convent": [1, 242, 246, 265], "futur": [1, 13, 43, 242, 245, 263, 264, 265, 266, 282, 284, 290], "current": [1, 2, 5, 6, 8, 11, 24, 34, 37, 44, 118, 132, 139, 229, 237, 239, 242, 245, 246, 248, 258, 259, 263, 264, 265, 266, 271, 274, 277, 281, 282, 284, 289, 290], "independ": [1, 2, 5, 243, 263], "yyyi": 2, "mm": [2, 135, 144], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 43, 46, 48, 49, 51, 54, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 84, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 126, 127, 132, 135, 136, 137, 138, 139, 140, 144, 147, 148, 149, 150, 152, 154, 155, 156, 158, 160, 162, 163, 164, 166, 168, 171, 172, 174, 175, 177, 179, 181, 183, 185, 190, 191, 193, 195, 197, 199, 204, 205, 207, 209, 212, 213, 214, 215, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 252, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 290], "purpos": [2, 238, 245, 265, 290], "section": [2, 3, 5, 6, 7, 9, 12, 14, 16, 24, 30, 75, 119, 123, 132, 135, 139, 142, 219, 221, 227, 228, 229, 233, 237, 238, 239, 242, 243, 245, 246, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 278, 282, 283, 284, 288], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 24, 29, 34, 37, 38, 39, 40, 43, 44, 48, 49, 54, 58, 60, 74, 75, 80, 90, 91, 94, 98, 104, 105, 107, 108, 113, 115, 118, 120, 122, 127, 128, 130, 131, 132, 135, 137, 138, 139, 147, 148, 149, 151, 152, 155, 156, 157, 158, 160, 163, 164, 166, 176, 190, 192, 204, 206, 213, 221, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 252, 254, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 287, 288, 289, 290], "summar": 2, "process": [2, 6, 8, 14, 32, 90, 91, 127, 242, 245, 246, 258, 263, 264, 265], "It": [2, 5, 6, 9, 14, 16, 37, 43, 119, 135, 235, 236, 238, 242, 243, 244, 245, 246, 263, 265, 266, 271, 280, 281], "code": [2, 5, 7, 9, 12, 14, 37, 135, 229, 238, 239, 242, 243, 244, 248, 258, 263, 264, 266, 273, 277, 282, 284], "do": [2, 5, 9, 11, 14, 16, 17, 122, 132, 135, 238, 242, 244, 246, 262, 263, 264, 265, 271, 278, 284], "doe": [2, 6, 9, 12, 14, 242, 248, 264, 265, 271], "primari": [2, 5, 9, 265, 289], "challeng": 2, "respect": [2, 8, 9, 14, 18, 135, 242, 245, 278, 283, 288], "softwar": [2, 84, 272, 284], "appropri": [2, 5, 6, 14, 25, 79, 132, 135, 229, 232, 235, 236, 237, 239, 240, 242, 246, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 283, 284, 288], "final": [2, 5, 6, 7, 8, 132, 232, 233, 235, 236, 237, 242, 244, 261, 265, 278], "statement": [2, 12, 242, 263], "gener": [2, 3, 5, 7, 8, 12, 14, 18, 25, 26, 27, 28, 32, 46, 74, 118, 135, 154, 162, 219, 229, 231, 232, 235, 236, 237, 239, 242, 246, 258, 265, 266, 271, 278, 280, 281, 284], "regard": 2, "last": [2, 243, 246, 277, 284], "modifi": [2, 8, 9, 13, 14, 24, 36, 50, 113, 115, 139, 159, 232, 235, 236, 242, 244, 246, 264, 265, 266, 277, 284], "your": [2, 4, 5, 6, 11, 132, 229, 245, 246, 258, 262, 265, 266, 267, 268, 271, 272, 278, 284], "appear": [2, 132, 242, 265], "under": [2, 16, 37, 38, 132, 135, 231, 242, 243, 246, 264, 274, 290], "head": [2, 231, 268], "correspond": [2, 6, 7, 118, 132, 135, 229, 242, 246, 258, 277], "discuss": [2, 6, 135, 233, 242, 245, 265, 277], "technic": [2, 7], "issu": [2, 6, 242, 243, 246, 278, 280, 281], "focu": [2, 265], "model": [2, 5, 10, 24, 25, 29, 30, 32, 37, 39, 112, 117, 121, 126, 128, 129, 130, 131, 132, 133, 137, 147, 149, 151, 155, 156, 157, 158, 163, 176, 192, 206, 213, 229, 232, 233, 235, 236, 237, 239, 242, 243, 245, 246, 251, 258, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 277, 280, 281, 283], "To": [2, 5, 6, 12, 16, 17, 118, 132, 135, 229, 242, 245, 246, 258, 259, 265, 267, 268, 269, 270, 271, 272, 274, 278, 284], "extent": [2, 13, 16, 265, 277], "possibl": [2, 8, 11, 70, 135, 231, 233, 242, 243, 244, 245, 265, 274], "other": [2, 5, 6, 7, 8, 9, 10, 13, 16, 18, 37, 38, 40, 48, 56, 105, 128, 165, 233, 237, 238, 239, 240, 244, 245, 246, 253, 262, 263, 264, 266, 267, 277, 278, 290], "clean": [2, 4, 5, 6, 112, 117, 242, 244, 246], "plan": [2, 13, 135, 229, 235, 236, 242, 258, 263, 280, 281, 290], "For": [2, 3, 5, 6, 7, 9, 12, 14, 16, 18, 112, 128, 132, 135, 231, 232, 235, 236, 237, 242, 245, 246, 265, 266, 267, 275, 278, 280, 281, 284, 285, 290], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 128, 129, 130, 131, 132, 133, 135, 229, 239, 242, 244, 245, 246, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 278, 284, 289, 290], "provid": [2, 3, 5, 8, 9, 14, 16, 17, 18, 24, 37, 39, 40, 45, 47, 48, 52, 94, 98, 104, 118, 122, 132, 135, 139, 144, 149, 213, 229, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 258, 261, 262, 263, 264, 265, 266, 271, 275, 278, 283, 284], "intend": [2, 6, 8, 9, 243, 266, 281, 290], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 63, 118, 231, 233, 240, 242, 245, 246, 262, 265, 284], "pde": 2, "solver": [2, 244, 246, 264, 284], "well": [2, 6, 9, 12, 13, 132, 135, 224, 232, 233, 235, 236, 237, 242, 246, 263, 265, 266, 278, 284, 290], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 23, 24, 26, 27, 30, 37, 38, 39, 47, 48, 50, 51, 54, 58, 60, 84, 86, 91, 95, 96, 97, 98, 99, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 118, 120, 122, 123, 126, 127, 132, 139, 142, 149, 171, 176, 179, 185, 192, 195, 199, 206, 209, 225, 229, 231, 232, 233, 235, 236, 237, 238, 239, 244, 245, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 280, 281, 283, 284, 287, 288, 289, 290], "low": [2, 120], "variabl": [2, 5, 13, 18, 19, 24, 37, 40, 47, 48, 56, 67, 74, 80, 84, 94, 95, 99, 102, 118, 120, 121, 122, 127, 132, 135, 137, 139, 145, 149, 152, 158, 160, 164, 168, 171, 179, 181, 185, 187, 190, 193, 195, 197, 199, 201, 204, 207, 209, 213, 221, 227, 228, 231, 237, 242, 245, 246, 252, 253, 258, 262, 265, 267, 268, 269, 270, 271, 272, 275, 277, 283, 284, 285, 288], "declar": [2, 7], "interfac": [2, 10, 219, 220, 221, 227, 228, 245, 246, 264, 265, 274], "sequenc": [2, 5, 14, 233, 241, 242, 245, 263, 265, 284, 289, 290], "If": [2, 5, 6, 7, 8, 9, 12, 14, 17, 18, 24, 34, 37, 39, 44, 45, 48, 49, 50, 52, 60, 90, 91, 92, 94, 105, 118, 120, 128, 129, 130, 131, 132, 133, 139, 144, 149, 190, 204, 213, 232, 242, 244, 245, 246, 259, 262, 263, 265, 266, 271, 272, 274, 278, 283, 284, 288], "want": [2, 5, 6, 11, 14, 16, 17, 50, 132, 135, 242, 244, 246, 262, 265, 266, 271, 272, 282, 284, 290], "math": 2, "syntax": [2, 135, 265], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 246, 263, 265, 284], "2": [2, 6, 13, 14, 17, 38, 132, 135, 163, 231, 232, 240, 243, 246, 252, 259, 265, 266, 268, 271, 274, 277, 278, 280, 281, 284], "2ab": 2, "imag": [2, 7, 18, 119, 120, 238, 265, 283, 288], "keep": [2, 5, 6, 9, 14, 24, 56, 233, 238, 239, 242, 244, 246, 265, 283, 288], "mind": [2, 5, 265], "quit": [2, 240, 242, 244, 265], "small": [2, 9, 43, 132, 238, 242, 265, 267, 268, 273, 274, 282, 284], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24, 33, 34, 37, 39, 43, 44, 48, 56, 79, 90, 91, 94, 107, 108, 112, 123, 132, 135, 139, 144, 149, 190, 204, 213, 221, 224, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284, 287, 288, 289, 290], "png": [2, 13, 18, 233, 242, 265], "okai": [2, 6, 242, 265], "size": [2, 13, 69, 70, 79, 135, 141, 143, 145, 238, 265, 266, 277, 278, 280, 281, 282, 283, 288], "repo": [2, 5, 6, 132, 229, 258, 264, 265, 285], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 132, 135, 238, 239, 240, 242, 243, 244, 245, 246, 262, 263, 265, 266, 268, 274, 283, 284, 289, 290], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 242, 244, 246, 265], "sourc": [2, 6, 7, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 242, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 266, 267, 268, 269, 270, 271, 272, 284], "project": [2, 5, 6, 7, 66, 98, 104, 229, 245, 246, 258, 259, 265, 266, 267, 268, 271, 284, 285], "manag": [2, 262, 271], "item": [2, 265], "git": [2, 6, 15, 93, 229, 246, 258, 265, 266, 284], "branch": [2, 5, 132, 229, 239, 242, 246, 258, 264, 265, 284], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 242, 246, 271], "block": [2, 244], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 17, 95, 99, 102, 132, 135, 238, 240, 242, 244, 245, 246, 262, 264, 265, 266, 271, 277, 278, 284, 290], "def": [2, 7, 9, 11, 12, 14, 16, 17, 18, 135, 238, 239, 242, 244, 245, 265], "example_funct": 2, "foo": [2, 245], "return": [2, 7, 30, 47, 55, 58, 61, 68, 69, 70, 75, 79, 86, 89, 90, 100, 109, 110, 112, 113, 115, 118, 122, 126, 127, 135, 138, 140, 142, 144, 145, 150, 172, 175, 188, 189, 191, 202, 203, 205, 219, 222, 223, 224, 225, 226, 244, 245, 265, 278], "how": [2, 5, 6, 12, 14, 74, 135, 241, 242, 244, 245, 246, 266, 271, 272], "show": [2, 7, 13, 242, 265, 271, 272, 277, 278, 283, 288], "met": 2, "regress": [2, 232, 233, 243, 263, 264, 265, 277, 278, 284, 289], "configur": [2, 5, 6, 11, 14, 16, 34, 37, 44, 48, 58, 62, 89, 90, 91, 92, 93, 112, 117, 132, 135, 219, 221, 222, 223, 227, 228, 242, 245, 264, 265, 266, 268, 271, 272, 274, 280, 281, 283, 284, 288, 290], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 37, 39, 40, 42, 45, 46, 48, 49, 52, 54, 56, 62, 93, 107, 112, 117, 131, 132, 154, 162, 179, 182, 240, 241, 242, 243, 244, 245, 246, 262, 263, 265, 266, 271, 278, 282, 284, 290], "properli": [2, 128, 130, 131, 265, 266, 284], "addit": [2, 7, 9, 17, 37, 135, 237, 238, 239, 240, 242, 244, 245, 246, 265], "modif": [2, 7, 242, 259], "nightli": [2, 246, 284, 289], "might": [2, 6, 11, 14, 16, 18, 132, 135, 238, 242, 246, 265, 266, 271, 284], "made": [2, 5, 16, 37, 40, 48, 118, 242, 244, 245, 259, 261, 263, 265, 290], "continu": [2, 6, 242, 265], "page": [3, 7, 132, 267], "auto": 3, "summari": [3, 268], "more": [3, 5, 6, 9, 11, 12, 13, 14, 16, 37, 48, 54, 75, 111, 112, 132, 135, 231, 232, 233, 238, 240, 242, 243, 244, 245, 246, 263, 271, 275, 277, 283, 284, 285, 288, 290], "relev": [3, 7, 9, 135, 233, 235, 236, 265, 267, 268, 269, 270, 271, 272, 283, 284, 288], "seaic": [3, 10, 19, 39, 239, 242, 261, 263, 264, 284, 285, 288, 290], "long": [4, 24, 34, 37, 44, 90, 91, 139, 149, 190, 204, 213, 242, 265, 277, 284], "procedur": [4, 132, 246, 265, 272], "conda": [4, 5, 15, 93, 128, 130, 131, 132, 229, 239, 245, 258, 264, 265, 266, 267, 268, 269, 270, 272], "environ": [4, 5, 128, 130, 131, 229, 239, 245, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272], "spack": [4, 5, 128, 130, 131, 262, 264, 265, 267, 268, 269, 270, 271, 272], "compil": [4, 5, 6, 14, 128, 129, 130, 131, 132, 133, 262, 264, 265, 267, 268, 269, 270, 271, 272, 284], "system": [4, 5, 6, 24, 34, 37, 44, 90, 91, 92, 128, 130, 131, 132, 139, 149, 190, 204, 213, 242, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 284], "modul": [4, 5, 9, 10, 12, 14, 15, 26, 27, 28, 66, 86, 113, 128, 130, 131, 132, 135, 137, 238, 239, 240, 242, 244, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 284], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 25, 26, 27, 28, 29, 37, 39, 45, 46, 52, 75, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 109, 111, 112, 113, 115, 117, 118, 119, 120, 128, 129, 130, 131, 132, 133, 151, 154, 157, 162, 169, 176, 192, 206, 213, 221, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 241, 242, 244, 245, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 288, 289], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 25, 26, 27, 28, 37, 46, 48, 81, 93, 105, 106, 109, 111, 112, 117, 118, 128, 129, 130, 131, 132, 133, 135, 154, 162, 229, 232, 233, 235, 236, 237, 241, 242, 244, 245, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 283, 288, 289, 290], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 15, 26, 27, 28, 39, 50, 59, 86, 93, 113, 117, 122, 132, 135, 137, 238, 239, 240, 241, 242, 244, 246, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 284], "Then": [4, 6, 7, 11, 14, 128, 129, 130, 131, 132, 133, 229, 232, 235, 236, 237, 239, 242, 244, 246, 258, 265, 271, 277, 284], "run": [4, 5, 6, 7, 10, 12, 16, 17, 18, 24, 29, 34, 37, 38, 40, 43, 44, 47, 48, 49, 54, 66, 89, 90, 91, 100, 112, 117, 131, 132, 137, 139, 148, 149, 151, 155, 157, 160, 164, 166, 171, 174, 176, 185, 190, 192, 195, 199, 204, 206, 209, 212, 213, 214, 229, 232, 233, 235, 236, 237, 240, 241, 243, 244, 245, 251, 252, 255, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 289, 290], "script": [4, 5, 6, 12, 18, 53, 62, 129, 132, 133, 245, 263, 264, 265, 268, 271], "doc": [4, 7, 265, 272], "cd": [4, 6, 229, 246, 258, 265, 268, 284], "html": [4, 275], "view": [4, 235, 236, 246, 280, 281], "open": [4, 6, 246, 265], "_build": 4, "index": [4, 17, 120, 221, 222, 223, 224, 225, 226, 227, 228, 238, 265], "act": [5, 245, 274], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 132, 147, 148, 232, 235, 236, 237, 239, 242, 244, 265, 266, 271, 277, 278, 280, 281, 282, 284], "These": [5, 6, 8, 9, 14, 19, 37, 132, 135, 229, 231, 239, 242, 244, 245, 246, 258, 259, 264, 265, 266, 271, 277, 281, 284, 289, 290], "user": [5, 6, 7, 8, 9, 11, 14, 16, 37, 48, 49, 56, 62, 93, 132, 135, 232, 233, 235, 236, 237, 242, 243, 244, 262, 263, 265, 268, 271, 272, 275, 277, 278, 285], "describ": [5, 7, 14, 16, 93, 113, 115, 127, 135, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 278, 284], "instal": [5, 6, 132, 246, 265, 271, 272, 284], "abov": [5, 7, 14, 17, 132, 238, 240, 242, 243, 244, 245, 246, 265, 266, 278, 280, 281, 282, 284, 289], "off": [5, 6, 246, 262], "http": [5, 7, 11, 14, 60, 242, 245, 262, 264, 265, 266, 272, 275, 284, 285], "github": [5, 6, 7, 245, 246, 264, 265, 266, 275, 284, 285], "com": [5, 6, 7, 14, 60, 245, 246, 264, 265, 266, 284, 285], "e3sm": [5, 7, 10, 11, 37, 121, 132, 229, 239, 242, 243, 245, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 285], "creat": [5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 24, 37, 39, 43, 48, 56, 60, 67, 68, 74, 75, 80, 94, 101, 111, 112, 117, 121, 132, 135, 137, 138, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 168, 171, 174, 177, 179, 181, 183, 185, 187, 190, 193, 195, 197, 199, 201, 204, 207, 209, 212, 213, 214, 215, 217, 221, 227, 228, 233, 237, 238, 242, 243, 244, 245, 251, 252, 254, 255, 256, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 278, 284, 289], "see": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 128, 130, 131, 132, 232, 233, 236, 242, 246, 262, 265, 266, 271, 275, 276, 277, 278, 282, 283, 284, 285, 287, 289, 290], "mean": [5, 172, 233, 235, 236, 246, 265, 274, 277, 278, 280, 281, 289], "chang": [5, 6, 8, 16, 74, 105, 106, 135, 229, 239, 242, 243, 244, 245, 246, 258, 263, 265, 266, 268, 272, 274, 277, 284, 289], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 32, 37, 43, 48, 49, 50, 66, 100, 107, 132, 135, 232, 235, 236, 237, 239, 242, 243, 244, 245, 246, 262, 263, 264, 265, 266, 271, 272, 284], "tool": [5, 6, 9, 12, 14, 16, 229, 239, 242, 246, 258, 264, 265, 266], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 29, 30, 34, 37, 38, 39, 43, 44, 48, 49, 54, 58, 62, 75, 84, 87, 90, 91, 94, 100, 107, 118, 119, 120, 121, 122, 127, 128, 132, 135, 139, 140, 141, 142, 143, 144, 149, 150, 151, 157, 164, 168, 171, 175, 179, 190, 191, 197, 198, 204, 205, 213, 219, 221, 222, 223, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 252, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 280, 281, 282, 283, 284, 287, 289, 290], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 31, 34, 36, 37, 40, 41, 43, 44, 46, 55, 63, 66, 72, 77, 89, 90, 91, 93, 94, 107, 108, 111, 112, 117, 132, 135, 139, 141, 143, 229, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243, 246, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 285, 289], "support": [5, 6, 8, 13, 16, 37, 135, 221, 227, 228, 231, 242, 245, 258, 263, 264, 265, 266, 268, 272, 274, 277, 282, 290], "machin": [5, 8, 9, 37, 39, 61, 62, 93, 111, 112, 117, 229, 242, 245, 258, 264, 265, 266, 267, 268, 269, 270, 272], "option": [5, 7, 9, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 44, 45, 48, 49, 50, 52, 54, 56, 57, 58, 60, 61, 62, 63, 67, 73, 74, 75, 78, 80, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 108, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 132, 137, 139, 142, 144, 149, 151, 157, 159, 169, 176, 187, 190, 192, 201, 204, 206, 213, 215, 217, 219, 221, 222, 223, 227, 228, 229, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 254, 258, 259, 262, 264, 266, 274, 276, 284, 290], "help": [5, 6, 13, 132, 238, 239, 240, 242, 246, 264, 265, 271, 275, 285], "usag": [5, 18, 244, 266, 268, 272], "h": [5, 14, 265], "t": [5, 6, 7, 9, 11, 12, 14, 37, 38, 127, 132, 135, 188, 189, 202, 203, 213, 233, 242, 244, 245, 246, 262, 265, 266, 268, 270, 271, 276, 277, 280, 281, 284, 289, 290], "n": [5, 6, 68, 75, 76, 82, 242, 265, 268, 271, 272, 277, 278, 280, 281, 283, 284, 288], "number": [5, 6, 8, 13, 14, 24, 31, 34, 36, 37, 41, 43, 44, 61, 62, 63, 67, 68, 69, 70, 71, 79, 89, 90, 91, 94, 112, 132, 135, 139, 140, 141, 143, 149, 150, 164, 172, 175, 187, 190, 191, 201, 204, 205, 213, 229, 232, 235, 236, 238, 242, 243, 244, 245, 252, 263, 265, 266, 271, 274, 276, 277, 278, 280, 281, 282, 283, 284, 288], "v": [5, 246, 265, 280, 281, 289], "By": [5, 14, 17, 38, 39, 135, 229, 239, 242, 244, 258, 265, 266, 277, 282], "default": [5, 7, 9, 14, 17, 18, 24, 38, 39, 48, 54, 62, 75, 80, 85, 93, 94, 95, 99, 102, 108, 112, 114, 117, 120, 128, 130, 131, 132, 135, 149, 229, 233, 235, 236, 237, 238, 239, 242, 244, 246, 258, 259, 264, 266, 267, 268, 269, 270, 271, 272, 274, 278, 282, 283, 284, 288, 290], "planar": [5, 9, 120, 135, 231, 239, 242, 265, 280, 281, 282, 283, 288, 289, 290], "baroclinic_channel": [5, 7, 9, 14, 17, 229, 234, 238, 239, 242, 245, 265, 277, 284, 289, 290], "10km": [5, 17, 232, 265, 277, 284, 289, 290], "1": [5, 7, 9, 13, 14, 16, 17, 18, 37, 69, 128, 129, 130, 131, 132, 133, 135, 147, 149, 163, 190, 204, 212, 213, 214, 221, 227, 228, 232, 233, 235, 236, 237, 239, 240, 242, 244, 246, 259, 262, 265, 266, 268, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284], "decomp": [5, 239, 265, 284, 289], "displai": [5, 8, 272], "path": [5, 6, 9, 11, 14, 17, 37, 39, 40, 48, 49, 54, 56, 58, 60, 63, 66, 93, 111, 112, 117, 118, 120, 132, 229, 239, 242, 244, 245, 246, 252, 258, 263, 265, 266, 267, 268, 269, 270, 271, 272, 284, 290], "directori": [5, 6, 8, 9, 11, 12, 14, 15, 18, 24, 37, 39, 40, 45, 46, 48, 49, 52, 54, 56, 60, 62, 93, 94, 107, 111, 112, 117, 118, 132, 139, 147, 148, 149, 152, 154, 155, 156, 158, 160, 162, 163, 164, 166, 179, 213, 229, 232, 239, 241, 242, 243, 244, 245, 246, 252, 254, 256, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 284, 290], "messag": [5, 8, 132, 242, 262, 272], "task_expr": [5, 63], "flag": [5, 6, 132, 242, 245, 262, 263, 265, 266, 275, 277, 284, 285], "suppli": [5, 6, 7, 17, 127, 132, 242, 246, 265], "substr": [5, 132], "regular": [5, 18, 63, 68, 75, 168, 171, 265, 267, 270, 271, 272, 284], "express": [5, 63], "subset": 5, "search": [5, 63, 268], "given": [5, 7, 8, 13, 14, 16, 17, 19, 23, 24, 51, 58, 69, 79, 86, 90, 91, 108, 113, 115, 118, 122, 135, 138, 139, 158, 172, 224, 232, 233, 237, 242, 244, 262, 264, 265, 266, 277, 278, 282, 283, 284, 288, 289], "pass": [5, 8, 9, 12, 13, 14, 17, 79, 118, 119, 135, 238, 239, 242, 244, 245, 246, 263, 284], "similarli": [5, 8, 229, 242, 244, 246, 271, 284], "result": [5, 13, 17, 58, 70, 79, 132, 135, 147, 155, 160, 163, 166, 217, 232, 233, 242, 243, 245, 246, 251, 256, 263, 265, 266, 277, 278, 283, 288, 289], "descript": [5, 7, 265, 266, 275, 285], "short": [5, 148, 212, 214, 242, 243, 244, 245, 255, 265, 277], "core": [5, 7, 8, 14, 24, 34, 36, 37, 39, 41, 43, 44, 62, 89, 90, 91, 117, 132, 135, 136, 139, 147, 148, 212, 214, 232, 237, 238, 239, 242, 243, 244, 245, 259, 263, 265, 266, 267, 268, 269, 270, 271, 272, 284, 289], "underli": 5, "must": [5, 7, 11, 14, 18, 24, 27, 28, 37, 40, 42, 45, 52, 117, 119, 120, 132, 135, 139, 182, 231, 242, 244, 246, 265, 274, 290], "built": [5, 14, 112, 117, 132, 229, 239, 246, 258, 264, 266, 271, 284], "standalon": [5, 14, 131, 132, 239, 246, 263, 264, 271, 285], "mpa": [5, 9, 11, 12, 13, 14, 16, 17, 18, 24, 30, 37, 39, 66, 84, 96, 103, 113, 115, 117, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 142, 145, 179, 187, 201, 220, 229, 230, 232, 233, 235, 236, 237, 239, 242, 245, 246, 249, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 280, 282, 283, 284, 285, 288, 289, 290], "befor": [5, 6, 8, 9, 14, 16, 43, 112, 117, 132, 242, 244, 245, 246, 262, 265, 268, 272, 274, 278, 284], "num": 5, "f": [5, 9, 11, 17, 135, 239, 242, 244, 245, 246, 265, 266, 272, 277, 280, 284], "m": [5, 6, 14, 68, 75, 76, 82, 232, 237, 238, 246, 265, 267, 268, 269, 270, 272, 274, 277, 278, 282, 284], "mach": [5, 9, 37, 132, 264, 267, 268, 269, 270, 271, 272, 284], "w": [5, 6, 246, 263, 265, 284], "p": [5, 6, 246, 265, 266, 284], "suite_nam": [5, 8, 108, 110, 112, 117, 284], "copy_execut": [5, 112, 117, 284], "specifi": [5, 6, 14, 16, 17, 18, 39, 132, 231, 242, 246, 261, 265, 266, 272, 277, 278, 283, 284, 288], "altern": [5, 13, 242, 259, 284], "task_numb": 5, "multipl": [5, 9, 14, 132, 230, 243, 244, 245, 246, 265, 271, 277, 284], "test": [5, 7, 8, 9, 18, 48, 49, 54, 62, 89, 90, 91, 110, 118, 132, 136, 137, 146, 148, 149, 155, 156, 158, 159, 160, 161, 163, 168, 169, 170, 171, 173, 174, 177, 179, 180, 183, 184, 185, 186, 187, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 254, 255, 256, 257, 258, 261, 263, 264, 270, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284, 285, 288, 289], "separ": [5, 7, 9, 14, 16, 17, 242, 243, 263, 265, 278, 284], "space": [5, 6, 7, 9, 13, 132, 235, 236, 242, 246, 265, 268, 271, 284], "requir": [5, 6, 8, 14, 24, 34, 37, 38, 44, 94, 135, 139, 149, 190, 204, 213, 229, 238, 239, 242, 243, 244, 245, 246, 258, 259, 262, 264, 265, 266, 271, 274, 275, 283, 284, 285, 288, 290], "few": [5, 13, 14, 24, 34, 37, 44, 90, 91, 132, 139, 232, 233, 235, 236, 237, 242, 245, 265, 266, 271], "basic": [5, 7, 266, 268, 271, 284], "piec": [5, 238, 239, 265], "abl": [5, 128, 129, 130, 131, 133, 135, 242, 243, 246, 265, 271, 284], "place": [5, 6, 14, 119, 132, 238, 242, 244, 259, 265, 271], "download": [5, 6, 8, 10, 37, 39, 46, 132, 154, 162, 244, 245, 246, 266, 284, 289], "some": [5, 6, 8, 9, 10, 11, 13, 14, 48, 132, 231, 233, 238, 240, 242, 244, 245, 246, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 284, 285, 289, 290], "data": [5, 10, 13, 16, 17, 18, 25, 37, 38, 39, 100, 113, 115, 116, 119, 120, 121, 127, 132, 179, 221, 227, 228, 242, 246, 264, 266, 267, 268, 269, 270, 271, 284, 289, 290], "r": [5, 272, 278], "tell": [5, 6, 132, 246], "re": [5, 6, 9, 244, 245, 246, 263, 265, 266, 271, 272, 278], "leav": [5, 18, 233, 266, 278], "unknown": [5, 132, 245, 271], "component_path": [5, 9, 112, 117, 229, 239, 258, 266, 284], "absolut": [5, 9, 37, 39, 56, 112, 117, 229, 239, 242, 246, 258, 284], "landic": [5, 6, 12, 19, 39, 66, 117, 238, 239, 241, 242, 244, 246, 263, 264, 265, 266, 284, 290], "e3sm_submodul": [5, 229, 239, 246, 258, 259, 265], "mali": [5, 132, 239, 242, 246, 263, 265, 266, 284, 290], "dev": [5, 6, 7, 238, 239, 241, 242, 245, 246, 264, 265, 275, 284, 285], "albani": [5, 128, 130, 131, 132, 239, 266, 267, 268, 269, 272, 284], "depend": [5, 14, 16, 18, 37, 38, 46, 105, 106, 132, 135, 154, 162, 171, 244, 246, 263, 264, 265, 266, 271, 272, 274, 278, 284, 290], "whether": [5, 8, 13, 14, 18, 24, 29, 37, 39, 47, 48, 49, 54, 58, 60, 63, 107, 108, 112, 117, 118, 119, 120, 123, 132, 135, 138, 139, 151, 157, 168, 171, 176, 192, 206, 213, 215, 217, 235, 236, 238, 242, 244, 246, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284, 288], "omega": [5, 30, 121, 139, 142, 187, 201, 229, 239, 245, 246, 263, 265, 275, 280, 281, 284], "config": [5, 7, 8, 10, 11, 12, 13, 16, 18, 20, 24, 25, 28, 29, 30, 37, 38, 39, 45, 48, 50, 52, 58, 61, 62, 73, 75, 78, 89, 90, 91, 92, 93, 109, 111, 112, 117, 119, 121, 122, 123, 124, 126, 127, 137, 139, 142, 144, 151, 157, 158, 168, 169, 176, 187, 192, 201, 206, 219, 221, 222, 223, 227, 228, 229, 232, 233, 235, 236, 237, 238, 242, 243, 244, 245, 246, 258, 259, 262, 264, 274, 284, 290], "point": [5, 6, 9, 53, 60, 97, 132, 229, 231, 238, 239, 244, 245, 246, 258, 265, 266, 271, 284], "much": [5, 6, 14, 242, 265], "config_fil": [5, 9, 112, 117], "work_dir": [5, 11, 37, 48, 62, 93, 111, 112, 117, 118, 242, 244, 265], "recommend": [5, 7, 11, 18, 132, 242, 243, 245, 246, 265, 271], "itself": [5, 6, 7, 9, 37, 45, 52, 238, 239, 241, 242, 244, 246, 265, 284], "temp": 5, "scratch": [5, 6, 246, 265, 268, 272, 284], "avoid": [5, 242, 265], "confus": [5, 14, 245, 246, 265], "output": [5, 7, 8, 10, 12, 13, 14, 17, 19, 24, 37, 38, 40, 46, 47, 48, 54, 83, 84, 91, 94, 107, 108, 118, 135, 137, 139, 145, 154, 162, 164, 165, 171, 179, 185, 195, 199, 209, 220, 232, 233, 235, 236, 237, 244, 252, 253, 261, 263, 266, 272, 278, 284, 289], "compar": [5, 10, 17, 37, 40, 47, 111, 112, 117, 118, 135, 164, 165, 213, 233, 237, 242, 243, 244, 245, 246, 252, 253, 261, 263, 265, 276, 277, 284, 287, 289], "previou": [5, 165, 242, 246, 253, 265, 276, 284, 289], "same": [5, 7, 9, 14, 17, 37, 38, 39, 47, 118, 132, 135, 232, 237, 238, 240, 242, 243, 244, 245, 246, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 282, 284, 289, 290], "baseline_dir": [5, 37, 111, 112, 117, 242], "mani": [5, 6, 8, 9, 135, 238, 240, 242, 244, 245, 246, 264, 265, 277, 283, 288], "valid": [5, 10, 37, 40, 47, 135, 137, 221, 222, 223, 224, 225, 226, 227, 228, 235, 236, 237, 242, 245, 246, 264, 274, 277], "timer": [5, 17, 37, 242, 243, 245], "both": [5, 6, 7, 8, 13, 14, 29, 132, 135, 144, 151, 157, 232, 238, 239, 241, 242, 246, 264, 265, 266, 276, 280, 281, 282], "custom": [5, 6, 8, 13, 16, 56, 58, 112, 117, 229, 239, 246, 258, 266, 272, 284], "give": [5, 14, 17, 132, 242, 245, 246, 265, 266, 284], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 17, 18, 24, 36, 105, 132, 135, 139, 221, 227, 228, 229, 232, 235, 236, 238, 239, 242, 244, 245, 246, 258, 263, 265, 266, 271, 272, 274, 277, 278, 282, 284, 289], "case": [5, 6, 7, 8, 9, 14, 18, 27, 28, 48, 49, 54, 62, 89, 90, 91, 113, 118, 132, 135, 136, 148, 155, 156, 158, 159, 160, 161, 163, 169, 170, 171, 173, 174, 177, 179, 180, 183, 185, 186, 187, 190, 193, 194, 195, 196, 197, 199, 200, 201, 204, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 232, 233, 235, 236, 237, 238, 239, 240, 242, 244, 246, 249, 251, 254, 255, 257, 263, 264, 265, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284, 288, 289], "pre": [5, 132, 246], "copi": [5, 6, 8, 39, 54, 112, 117, 265, 268, 284], "just": [5, 14, 24, 34, 37, 44, 63, 132, 139, 242, 245, 246, 263, 265, 268, 272], "wish": [5, 7, 14, 49, 242, 246, 265, 284], "again": [5, 14, 131, 135, 229, 242, 244, 246, 262, 284], "later": [5, 8, 17, 24, 34, 37, 44, 56, 132, 139, 242, 265, 266], "anticip": [5, 265], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 17, 38, 40, 43, 106, 119, 132, 229, 231, 238, 242, 243, 244, 246, 258, 259, 262, 263, 265, 266, 272, 278, 282, 283, 284, 288, 290], "delet": [5, 112, 117, 245, 246, 262, 284], "fresh": [5, 6, 244, 265], "sinc": [5, 14, 106, 127, 135, 232, 242, 244, 245, 246, 265, 277, 278, 280, 281, 283, 288], "rerun": [5, 246], "c": [5, 6, 112, 132, 242, 246, 267, 268, 269, 270, 271, 272, 276, 284, 289], "test_suit": [5, 110, 242], "build": [5, 6, 10, 13, 14, 71, 76, 128, 129, 130, 131, 133, 229, 239, 244, 245, 258, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272], "mpas_model": [5, 266], "overrid": [5, 13, 14, 42, 43, 46, 50, 56, 71, 74, 75, 76, 135, 154, 162, 182, 242, 244, 245, 265, 266, 272, 284], "baselin": [5, 6, 8, 10, 37, 40, 47, 111, 112, 117, 118, 135, 137, 213, 232, 235, 236, 237, 242, 243, 245, 261, 263, 265, 276, 284], "comparison": [5, 8, 17, 37, 47, 118, 242, 265, 266], "against": [5, 10, 40, 47, 118, 135, 137, 232, 235, 236, 237, 242, 261, 265, 276], "oppos": [5, 14, 29, 138, 151, 157, 168, 171, 176, 192, 206, 265], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 107], "wherea": [5, 12, 242, 263, 265, 276, 290], "typic": [5, 7, 9, 13, 14, 16, 17, 18, 37, 49, 108, 132, 135, 238, 239, 240, 242, 244, 246, 263, 265, 266, 271, 274, 282, 284, 290], "clone": [5, 6, 132, 229, 240, 246, 258, 265, 284], "pickl": [5, 8, 105, 106, 242, 265, 284], "latter": [5, 48, 132], "conveni": [5, 9, 16, 221, 227, 228, 238, 242, 265, 266, 278, 284, 290], "tab": [5, 284], "explicitli": [5, 7, 135, 232, 235, 236, 242, 246, 265, 266, 284], "select": [5, 8, 120, 242, 246, 265], "edit": [5, 7, 246, 265, 284], "steps_to_run": [5, 48, 108, 242, 244, 265, 266], "full_run": [5, 17, 261, 277, 287], "restart_run": [5, 17, 261, 277, 287], "Or": [5, 242, 266], "accomplish": [5, 242, 245], "thing": [5, 128, 129, 130, 131, 132, 133, 135, 238, 242, 245, 264, 289], "take": [5, 6, 7, 11, 13, 14, 56, 132, 135, 238, 242, 243, 244, 246, 265, 278, 289], "preced": [5, 56, 135], "over": [5, 9, 14, 56, 119, 242, 245, 264, 265, 274, 277, 282, 284], "intern": [5, 11, 24, 242, 246, 262], "shouldn": [5, 132, 213, 265], "special": [5, 263, 283], "databas": [5, 6, 8, 11, 16, 19, 24, 37, 39, 139, 242, 271], "polaris_cach": [5, 8, 19, 242], "structur": [5, 13, 30, 142, 241, 244, 264, 265], "without": [5, 39, 242, 245, 246, 265, 266, 270, 271, 280, 281, 283, 284], "redund": [5, 221, 227, 228, 232, 238, 265], "stamp": 5, "revis": [5, 266], "older": 5, "ones": [5, 221, 227, 228, 245, 265], "version": [5, 6, 15, 32, 56, 93, 118, 132, 229, 232, 238, 239, 240, 242, 244, 245, 246, 258, 264, 265, 266, 271, 272, 275, 277, 278, 284, 285], "updat": [5, 7, 8, 24, 26, 28, 33, 34, 43, 44, 114, 131, 132, 141, 213, 229, 232, 233, 235, 236, 242, 258, 262, 264, 265, 284], "cached_fil": [5, 19, 242], "json": [5, 8, 19, 54, 242, 272], "anvil": [5, 6, 132, 242, 266, 271, 284], "chrysali": [5, 6, 132, 242, 265, 266, 271, 284], "onto": [5, 246], "lcrc": [5, 6, 8, 11, 54, 242, 245, 266, 267, 269, 271, 284], "server": [5, 8, 39, 54, 242, 245, 266, 272], "d": [5, 18, 120, 187, 201, 221, 227, 228, 231, 242, 265, 282], "whose": [5, 45, 52, 242], "ocean_cached_fil": 5, "pr": [5, 6, 284, 289], "look": [5, 6, 7, 11, 17, 244, 245, 265, 266], "someth": [5, 7, 95, 99, 102, 132, 246, 265], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 16, 17, 18, 94, 135, 137, 232, 242, 245, 265], "cellwidthvslatlon": [5, 13], "graph": [5, 24, 31, 33, 43, 84, 139, 232, 235, 236, 242, 265, 266], "info": [5, 12, 14, 24, 31, 84, 132, 139, 242, 265], "initial_st": [5, 17, 18, 135, 232, 242, 265], "date_str": [5, 54], "let": [5, 242, 246, 263, 265, 266, 272], "string": [5, 9, 39, 98, 104, 132, 135, 144, 246], "choos": [5, 242, 245, 246, 265, 267, 268, 269, 270, 272, 290], "todai": [5, 54], "dry_run": [5, 54], "saniti": [5, 265], "check": [5, 6, 17, 118, 242, 246, 265, 266, 268, 272, 284, 289], "print": [5, 12, 17, 63, 118, 123, 242, 245, 289], "stdout": [5, 12, 37, 48, 242, 244], "translat": [5, 30, 135, 142], "convert": [5, 9, 13, 14, 135, 144, 242, 265], "namelist": [5, 7, 8, 10, 24, 25, 26, 29, 30, 32, 33, 36, 46, 112, 117, 126, 127, 139, 142, 143, 151, 154, 157, 162, 229, 232, 235, 236, 238, 239, 242, 244, 245, 258, 259, 261, 264, 265, 266, 282], "stream": [5, 7, 8, 10, 24, 27, 29, 32, 46, 121, 126, 127, 143, 151, 154, 157, 162, 229, 231, 232, 233, 235, 236, 237, 238, 239, 242, 244, 245, 258, 261, 266, 283, 288], "yaml": [5, 9, 10, 24, 25, 28, 29, 30, 132, 137, 139, 142, 143, 151, 157, 232, 233, 235, 236, 237, 238, 239, 242, 244, 264, 265, 268, 272], "e": [5, 6, 7, 9, 11, 14, 30, 37, 38, 50, 66, 121, 132, 135, 138, 142, 229, 238, 240, 242, 243, 245, 246, 258, 262, 263, 264, 265, 266, 272, 274, 277, 278, 280, 281, 282, 283, 284, 288, 290], "g": [5, 6, 7, 9, 11, 14, 30, 37, 38, 50, 66, 121, 132, 135, 138, 142, 229, 238, 240, 242, 243, 245, 246, 258, 262, 263, 264, 265, 266, 274, 277, 278, 280, 281, 282, 283, 284, 288], "don": [5, 6, 7, 14, 132, 135, 242, 244, 245, 246, 265, 270, 284, 290], "format": [5, 7, 11, 13, 14, 121, 127, 144, 243, 244, 246, 265, 266, 268], "note": [5, 7, 16, 17, 265, 272], "keyword": [5, 7, 14, 17, 18, 233, 242, 278], "top": [5, 18, 221, 222, 223, 224, 225, 226, 227, 228, 231, 240, 265, 274], "ignor": [5, 98, 104], "get": [5, 6, 7, 9, 11, 12, 14, 16, 24, 25, 26, 27, 28, 37, 48, 49, 55, 61, 69, 89, 100, 107, 132, 135, 139, 238, 241, 242, 244, 245, 246, 263, 266, 274, 284], "pars": [5, 9, 14, 25, 26, 27, 28, 86, 113, 115], "valu": [5, 7, 9, 14, 17, 18, 25, 30, 118, 119, 120, 123, 137, 142, 158, 232, 239, 242, 244, 245, 264, 265, 266, 274, 277, 278, 282], "doesn": [5, 6, 127, 132, 242, 244, 265, 266, 271, 284], "matter": [5, 265], "usabl": 5, "try": [6, 14, 60, 132, 245, 246, 262, 265, 266, 268, 272, 284], "stai": [6, 246], "sync": 6, "mpi": [6, 14, 16, 94, 128, 131, 132, 139, 141, 143, 232, 235, 236, 242, 246, 262, 264, 265, 267, 268, 269, 270, 272, 284], "librari": [6, 14, 128, 132, 246, 265, 267, 268, 269, 270, 271, 272, 284], "netcdf": [6, 132, 145, 237, 266, 267, 268, 269, 270, 271, 272], "fortran": [6, 132, 267, 268, 269, 270, 271, 272], "pnetcdf": [6, 132, 267, 268, 269, 270, 271, 272], "mkl": [6, 132], "linear": [6, 18, 119, 120, 233, 235, 265, 277, 278, 280], "algebra": 6, "lib": [6, 132], "esmf": [6, 246, 284], "scorpio": [6, 246, 271, 284], "forg": [6, 132, 264, 284], "python": [6, 7, 8, 9, 25, 43, 50, 135, 238, 240, 242, 244, 245, 246, 263, 264, 265, 266, 271, 272, 284], "aren": [6, 11, 37, 38, 132, 242, 245, 246, 265, 289], "brief": [6, 7, 265], "tour": 6, "login": [6, 132, 246, 268, 272], "node": [6, 14, 24, 36, 37, 41, 44, 61, 89, 90, 91, 132, 139, 242, 243, 245, 246, 265, 266, 267, 268, 269, 270, 271, 272, 284], "bootstrap": 6, "rest": [6, 145, 226, 274, 278], "u": [6, 242, 265, 271, 272, 280, 281], "unifi": [6, 132, 246, 272], "diagnost": [6, 266, 267, 268, 270, 271, 272, 284], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 135, 242, 244, 245, 246, 265], "cach": [6, 19, 24, 37, 39, 111, 112, 139, 264, 266, 271, 276, 284, 289], "own": [6, 7, 8, 9, 11, 12, 18, 37, 132, 135, 242, 244, 245, 246, 263, 265, 266, 278, 284, 290], "config_machin": 6, "xml": [6, 14, 113, 115, 116, 127, 258], "ey": 6, "master": [6, 229, 258, 285], "happen": [6, 9, 12, 16, 106, 242, 265, 278], "me": [6, 265], "dev_quick_start": 6, "fork": [6, 265], "haven": [6, 265], "mkdir": [6, 246], "involv": [6, 14, 242, 263, 265], "coupl": [6, 262, 264], "alpha": [6, 128, 129, 130, 131, 132, 133, 265], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 17, 18, 37, 135, 238, 240, 242, 243, 244, 245, 246, 265, 266, 289, 290], "stand": 6, "omit": [6, 242, 284], "suffix": [6, 39, 112, 242], "onc": [6, 14, 40, 232, 246, 265, 266, 278, 284], "releas": [6, 132, 245, 264, 271, 275, 284], "spack_for_mache_1": 6, "12": [6, 13, 69, 261, 265, 268, 287], "worktre": [6, 264, 265], "my": [6, 132, 268], "fetch": [6, 246, 265], "out": [6, 8, 9, 13, 56, 88, 92, 120, 132, 137, 240, 242, 245, 246, 266, 274, 284], "checkout": [6, 246, 265], "mambaforg": [6, 246, 265, 271, 284], "manual": [6, 14, 48, 49, 242, 244, 290], "linux": [6, 132, 246, 271], "x86_64": [6, 132], "our": [6, 132, 245, 265, 284], "found": [6, 9, 14, 122, 132, 245, 246, 264, 265, 267, 268, 269, 270, 271, 272], "exist": [6, 7, 9, 30, 37, 40, 60, 113, 115, 117, 132, 142, 232, 242, 244, 245, 246, 262, 265, 271, 289], "miniconda3": [6, 246], "alwai": [6, 7, 9, 12, 56, 132, 135, 229, 239, 242, 244, 245, 246, 258, 263, 265, 266], "pleas": [6, 132, 239, 245, 246, 265, 284], "start": [6, 7, 8, 14, 114, 132, 231, 232, 238, 243, 244, 245, 264, 268, 271, 272, 275, 285, 287], "definit": [6, 14, 265], "defin": [6, 7, 8, 9, 13, 14, 15, 18, 37, 48, 74, 98, 104, 111, 112, 117, 132, 135, 170, 184, 198, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 250, 258, 259, 261, 263, 264, 266, 271, 274, 277, 278, 282, 289, 290], "export": [6, 262], "conda_bas": 6, "home": [6, 17, 132, 246, 265, 266, 268, 271, 272], "readi": [6, 265, 272], "configure_polaris_env": [6, 132, 246, 262, 265], "py": [6, 12, 14, 17, 66, 132, 238, 239, 245, 246, 263, 265, 266], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 132, 246], "tmpdir": [6, 132], "group": [6, 7, 238, 264, 267, 269, 271, 272, 283, 284, 290], "spack_temp": 6, "spack_test": 6, "intel": [6, 132, 271], "gnu": [6, 132, 246, 270, 271, 284], "openmpi": [6, 128, 132, 246, 264, 267, 269, 270, 284], "impi": [6, 128, 132, 267, 270], "recreat": [6, 244, 246, 262], "request": [6, 7, 14, 24, 31, 33, 132, 137, 139, 222, 223, 242, 244, 245, 246, 262, 265, 266, 278], "twice": [6, 265], "deploy": [6, 246], "prebootstrap": 6, "load": [6, 106, 129, 132, 133, 242, 246, 264, 265, 266, 267, 268, 269, 270, 271, 272], "activ": [6, 132, 271, 272, 284], "differ": [6, 14, 16, 17, 56, 71, 76, 118, 132, 135, 146, 149, 158, 229, 232, 238, 239, 240, 242, 243, 244, 245, 258, 263, 265, 266, 268, 272, 277, 278, 280, 281, 283, 288], "On": [6, 7, 13, 132, 246, 271], "tmp": [6, 132], "safe": [6, 14, 242, 246, 277], "strictli": [6, 13, 245, 265], "necessari": [6, 7, 13, 132, 265], "good": [6, 12, 37, 242, 246, 265], "idea": [6, 12, 265], "Be": [6, 272], "awar": [6, 7, 132, 265, 271], "with_petsc": [6, 246], "wa": [6, 8, 47, 58, 118, 132, 242, 244, 245, 246, 262, 263, 265, 266, 274, 284], "limit": [6, 243, 246, 277], "amount": [6, 24, 34, 37, 44, 139, 242, 273, 282], "team": [6, 132, 264], "petsc_support": 6, "txt": [6, 8, 117, 243, 262], "with_albani": [6, 246], "albany_support": 6, "encount": [6, 243, 262], "error": [6, 8, 37, 48, 132, 135, 172, 233, 235, 236, 242, 244, 246, 264, 265, 280, 281], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 17, 29, 37, 48, 57, 151, 157, 176, 192, 206, 242, 244, 245, 246, 265, 266, 284, 289, 290], "attempt": [6, 132, 264, 271], "sh": [6, 128, 129, 130, 131, 132, 133, 246, 262, 265, 267, 268, 269, 270, 272, 284], "build_": 6, "command": [6, 10, 15, 35, 37, 43, 90, 91, 93, 101, 132, 242, 245, 246, 263, 264, 265, 268, 271, 272, 284], "pscratch": 6, "suggest": [6, 132, 262], "correctli": 6, "seem": [6, 14, 265, 268, 272], "switch": [6, 265, 266], "v0": 6, "19": 6, "submodul": [6, 229, 239, 246, 258, 265, 284], "serv": [6, 111, 112, 117, 135, 238, 265], "kind": [6, 265], "whichev": [6, 229, 258, 274], "load_dev_polaris_0": [6, 128, 129, 130, 131, 132, 133, 265], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 229, 245, 246, 258, 265, 284], "pio": [6, 24, 33, 36, 139, 232, 235, 236], "openmp": [6, 24, 34, 37, 44, 91, 128, 130, 131, 139, 149, 190, 204, 213, 242, 265, 267, 268, 269, 270, 272], "ifort": [6, 128, 130, 132, 265, 267, 269], "ac": [6, 265], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 265, 271, 284], "job_script": [6, 265, 284], "bash": [6, 246, 262, 265, 284], "termin": [6, 8, 132, 242, 246, 265], "isn": [6, 9, 233, 242, 245, 265], "ll": [6, 18, 132, 233, 245, 265, 272, 278], "warn": [6, 278, 280, 281], "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 128, 130, 131, 132, 246, 267, 269], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 238, 242, 265, 274], "util": [6, 245, 281], "matrix": 6, "sever": [6, 12, 132, 135, 238, 242, 244, 245, 246, 264, 265, 283, 284, 289], "automat": [6, 7, 9, 12, 14, 18, 132, 135, 242, 245, 246, 265, 266, 267, 269, 270, 271, 272, 284], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 284], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 131, 132, 135, 242, 245, 265], "integr": [6, 135, 158, 232, 245, 265, 277, 278, 283, 288], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 268, 284], "245": 6, "246": 6, "non": [6, 14, 17, 231, 242, 265, 284], "care": [6, 11, 13, 135, 238, 242, 246, 265], "temporari": [6, 132], "begin": [6, 7, 17, 232, 242, 246, 259, 264, 265, 271, 277, 278, 282], "anymor": 6, "best": [6, 16, 132, 242, 246], "hard": [6, 242, 265, 277, 282], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 37, 48, 56, 62, 119, 120, 137, 242, 244, 265, 287], "myst": [7, 265], "tip": [7, 246], "easi": [7, 9, 39, 245, 265], "pull": [7, 132, 245, 246, 265, 266], "guid": [7, 135, 232, 233, 235, 236, 237, 243, 245, 265, 268, 271, 275, 285], "baroclin": [7, 9, 14, 146, 147, 148, 149, 152, 155, 158, 160, 163, 164, 166, 213, 232, 239, 242, 265, 275, 279, 290], "channel": [7, 9, 14, 146, 147, 148, 149, 152, 155, 158, 160, 163, 164, 166, 213, 232, 239, 242, 262, 265, 275, 279, 290], "label": [7, 119, 271, 284], "prepend": 7, "categori": [7, 239, 240, 241, 264, 290], "uniqu": [7, 14, 132, 244, 265], "And": [7, 14, 246, 265], "becom": [7, 242, 244, 265], "who": [7, 246, 265, 266, 272], "citat": 7, "basi": [7, 265], "overview": [7, 264, 268, 272], "common": [7, 12, 14, 43, 48, 132, 232, 233, 235, 236, 237, 238, 242, 243, 244, 245, 262, 263, 265, 266, 271, 272, 283, 284, 288, 289, 290], "characterist": [7, 283, 288], "comment": [7, 243, 266], "appli": [7, 13, 14, 63, 231, 238, 265, 277, 282, 283, 288], "vertic": [7, 18, 212, 231, 232, 233, 235, 236, 237, 242, 266, 273, 275], "grid": [7, 13, 16, 68, 75, 79, 82, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 135, 179, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 237, 242, 259, 265, 266], "forc": [7, 237, 261, 265, 290], "specif": [7, 9, 14, 50, 132, 135, 229, 238, 239, 240, 242, 258, 259, 264, 265, 266, 268, 271, 277, 283, 284, 288, 289], "public": [7, 11, 242, 265, 266], "api": [7, 12, 264, 265], "underscor": [7, 265], "md": [7, 265], "eval": 7, "rst": [7, 14, 265], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 239, 245], "compute_cell_count": [7, 135, 232, 235, 236, 265], "dynamic_model_config": [7, 14, 232, 235, 236, 265], "ot": [7, 265], "numpydoc": [7, 265], "text": [7, 8, 277, 278, 282], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 135, 221, 223, 224, 225, 226, 227, 228, 229, 235, 236, 242, 265, 266, 268, 272, 280, 281], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 229, 266, 280, 281], "overli": [7, 265], "ic": [7, 135, 229, 244, 245, 246, 259, 261, 264, 265, 266, 268, 274, 287, 290], "shelf": [7, 135, 238, 245, 265, 266, 274], "draft": [7, 274], "paramet": [7, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 44, 45, 48, 49, 51, 52, 54, 56, 58, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 79, 80, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 135, 137, 138, 139, 142, 144, 145, 147, 148, 149, 151, 152, 155, 156, 157, 158, 160, 163, 164, 166, 168, 171, 172, 174, 176, 177, 179, 181, 183, 185, 187, 188, 189, 190, 192, 193, 195, 197, 199, 201, 202, 203, 204, 206, 207, 209, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 235, 236, 238, 242, 244, 250, 251, 252, 254, 255, 256, 277, 278, 280, 281, 282], "xarrai": [7, 16, 18, 120, 221, 222, 223, 224, 225, 226, 227, 228, 242, 265], "dataarrai": [7, 187, 188, 189, 201, 202, 203, 222, 223, 224, 225, 226], "sea": [7, 135, 187, 189, 201, 203, 223, 224, 225, 226, 229, 259, 261, 264, 265, 266, 274, 280, 281, 287, 290], "surfac": [7, 135, 187, 189, 201, 203, 223, 224, 225, 226, 229, 231, 237, 261, 265, 266, 274, 277, 280, 281, 282], "height": [7, 135, 187, 189, 201, 203, 223, 224, 225, 226, 229, 265, 266, 274, 280, 281], "mask": [7, 221, 224, 227, 228, 242, 265, 266, 274], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 25, 67, 69, 70, 74, 79, 99, 118, 120, 135, 137, 138, 144, 147, 148, 149, 152, 155, 158, 160, 163, 168, 171, 172, 174, 185, 187, 188, 189, 190, 193, 195, 197, 199, 201, 202, 203, 204, 207, 209, 213, 242, 244, 265], "densiti": [7, 13, 135, 265], "seawat": 7, "displac": 7, "land": [7, 135, 229, 244, 264, 265, 266, 274], "landicedraft": 7, "equal": [7, 237, 242, 245, 282], "entri": [7, 53, 87, 112], "line": [7, 10, 35, 37, 90, 91, 101, 132, 242, 243, 245, 246, 264, 284], "type": [7, 14, 16, 17, 18, 25, 96, 103, 127, 132, 135, 212, 214, 233, 238, 242, 244, 245, 246, 258, 262, 263, 265, 266, 277, 278, 280, 281, 282, 283, 289], "side": 7, "colon": 7, "doubl": [7, 14, 135, 242, 243, 265], "back": [7, 265, 268, 284], "quot": 7, "interfer": 7, "arg": [7, 12, 37, 90, 91, 242], "next": [7, 132, 232, 236, 265, 274, 284], "indent": [7, 242], "obviou": [7, 14, 265], "none": [7, 9, 14, 17, 24, 27, 28, 34, 37, 38, 39, 40, 44, 45, 48, 49, 52, 54, 56, 58, 62, 63, 65, 67, 74, 80, 84, 93, 94, 95, 98, 99, 102, 104, 108, 112, 113, 117, 118, 119, 120, 122, 126, 135, 137, 139, 140, 144, 149, 150, 175, 190, 191, 201, 204, 205, 213, 242, 244, 254, 265, 274, 277, 278, 280, 281, 282, 283, 287], "els": [7, 8, 132, 242, 244, 265], "further": [7, 238, 244, 272, 283, 288], "rais": [7, 9, 17, 37, 40, 58, 60, 135, 242, 245, 265], "list_cas": 8, "list_machin": [8, 245], "list_suit": 8, "anywher": [8, 12, 132, 246], "object": [8, 12, 16, 23, 26, 27, 28, 49, 51, 86, 105, 106, 109, 113, 121, 122, 126, 127, 137, 187, 201, 239, 244, 245, 265], "contrast": 8, "read": [8, 19, 26, 27, 28, 37, 38, 48, 59, 85, 86, 121, 231, 242, 244, 265], "properti": [8, 231, 242, 271, 278], "setup_suit": 8, "write": [8, 12, 13, 15, 18, 105, 121, 220, 242, 244, 246, 261, 265], "proven": [8, 10, 56, 264, 266], "save": [8, 18, 58, 82, 132, 232, 238, 242, 244, 265, 271, 276, 277], "target": [8, 11, 16, 17, 24, 39, 60, 62, 94, 132, 135, 139, 232, 235, 236, 242, 244, 265, 278], "minimum": [8, 62, 120, 135, 139, 232, 235, 236, 242, 265, 266, 274, 277, 278, 280, 281, 282, 283, 288], "determin": [8, 9, 13, 14, 18, 39, 43, 127, 132, 135, 143, 232, 233, 235, 236, 242, 265, 274, 277, 278, 280, 281, 283, 284, 288], "maximum": [8, 17, 118, 120, 265, 266, 274], "product": 8, "ntask": [8, 9, 14, 16, 24, 34, 37, 41, 44, 90, 91, 94, 135, 139, 149, 190, 204, 213, 242, 244, 265], "cpus_per_task": [8, 14, 37, 41, 44, 90, 91, 242], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 265, 274, 277, 278, 280, 281, 282, 283], "min_task": [8, 9, 14, 16, 24, 34, 37, 44, 90, 91, 94, 135, 139, 149, 190, 204, 213, 242, 265], "min_cpus_per_task": [8, 14, 37, 44, 90, 91, 242], "fewest": 8, "least": [8, 13, 239, 246, 277], "fail": [8, 14, 17, 24, 34, 37, 44, 58, 132, 139, 149, 190, 204, 213, 242, 264, 265, 266, 278, 280, 281], "run_task": [8, 242, 244], "run_single_step": 8, "oper": [8, 46, 132, 154, 162, 242, 244, 289], "log": [8, 10, 18, 37, 48, 91, 118, 119, 120, 242, 244, 246, 264, 284], "figur": [8, 237, 238, 240, 242, 266], "cpu": [8, 132, 242, 265, 284], "method": [8, 9, 13, 14, 16, 17, 19, 24, 29, 30, 37, 38, 42, 43, 48, 49, 50, 56, 57, 66, 67, 71, 74, 75, 76, 80, 81, 94, 100, 121, 135, 136, 137, 139, 142, 147, 148, 149, 151, 152, 155, 156, 157, 158, 160, 163, 164, 166, 168, 171, 174, 176, 177, 179, 181, 182, 183, 185, 187, 190, 192, 193, 195, 197, 198, 199, 201, 204, 206, 207, 209, 212, 213, 214, 215, 217, 233, 235, 236, 239, 242, 244, 245, 249, 251, 252, 254, 255, 256, 265, 278, 283, 288], "retriev": [8, 262], "store": [8, 50, 132, 135, 235, 236, 242, 265, 284], "case_output": [8, 12], "individu": [8, 9, 18, 239, 244, 245, 265, 271, 272, 277, 284, 290], "overal": 8, "whole": [8, 48, 145, 238, 244, 245, 265, 284], "window": 8, "update_cach": 8, "_cached_fil": [8, 242], "origin": [8, 54, 246, 265, 284], "enabl": [8, 18, 237, 242, 262, 266, 272, 280, 281], "consum": [8, 242, 244, 265, 289], "faster": [8, 246], "parser": [9, 45, 52, 56, 158, 168], "mpas_tool": [9, 12, 13, 79, 232, 235, 236, 237, 242, 244, 265], "mpasconfigpars": [9, 242, 244], "polarisconfigpars": [9, 20, 37, 45, 48, 52, 58, 61, 62, 89, 92, 93, 109, 119, 135, 158, 168, 187, 201, 219, 221, 222, 223, 227, 228, 265], "certain": [9, 17, 56, 132, 242, 246, 266, 283, 288], "filepath": [9, 45, 52, 56, 135], "overridden": [9, 30, 57, 135, 142, 265], "algorithm": [9, 14, 135, 213, 232, 235, 236, 242, 265], "featur": [9, 14, 245, 246, 263, 265, 266, 277, 282], "accommod": [9, 24, 34, 37, 44, 90, 91, 139], "add_from_packag": [9, 135, 242, 244, 245, 265], "content": [9, 14, 112, 113, 115, 117, 127, 135, 238, 240, 242, 245, 261, 265, 284, 287], "inertial_gravity_wav": [9, 229, 234, 239, 244, 280, 289], "inertialgravitywav": [9, 235, 244], "import": [9, 11, 12, 13, 16, 17, 18, 135, 238, 239, 242, 244, 245, 246, 263, 265], "__init__": [9, 16, 17, 19, 24, 37, 48, 56, 66, 67, 74, 80, 94, 121, 135, 136, 137, 139, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 168, 171, 174, 177, 179, 181, 183, 185, 187, 190, 193, 195, 197, 199, 201, 204, 207, 209, 212, 213, 214, 215, 217, 238, 239, 242, 244, 245, 249, 251, 252, 254, 255, 256, 263, 265], "super": [9, 14, 16, 17, 135, 239, 242, 244, 245, 265], "cfg": [9, 50, 135, 239, 244, 245, 265, 266, 284], "except": [9, 37, 40, 58, 242, 245, 265], "behavior": [9, 14, 108, 242, 243, 246, 265], "noth": [9, 132, 262, 278], "particular": [9, 132, 238, 246, 264, 268, 271, 284], "fine": [9, 244, 265, 282], "_get_basic_config": 9, "larg": [9, 242, 244, 265, 267], "those": [9, 14, 48, 118, 132, 135, 232, 244, 245, 246, 264, 265, 278, 283, 288, 289], "configpars": [9, 90, 91], "getinteg": 9, "getfloat": [9, 12, 14, 16, 135, 242, 265], "getboolean": [9, 242, 265], "implement": [9, 239, 242, 245, 277, 278, 280, 281], "getlist": [9, 244, 265], "comma": [9, 278], "integ": [9, 13], "boolean": [9, 120, 224], "etc": [9, 14, 114, 117, 239, 242, 277], "getexpress": 9, "tupl": 9, "rang": [9, 120, 265, 278], "numpi": [9, 13, 68, 75, 76, 82, 119, 135, 145, 219, 220, 242, 265], "linspac": [9, 18, 233, 278], "arang": 9, "arrai": [9, 68, 75, 76, 82, 119, 135, 219, 220, 222, 223, 224, 225, 265], "sens": [9, 264, 265], "set_shared_config": [9, 244], "intuit": 9, "resolution_to_subdir": [9, 239], "rpe": [9, 166, 239, 245, 265, 284], "resdir": [9, 239], "config_filenam": [9, 37, 48, 109, 242, 244], "indir": [9, 24, 37, 48, 94, 139, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 213, 215, 217, 239, 242, 252, 254, 256], "add_task": [9, 238, 239], "most": [9, 12, 43, 132, 229, 238, 239, 242, 245, 246, 258, 265, 266, 271, 272, 274, 275, 285, 290], "construct": [9, 14, 136, 219, 221, 222, 223, 227, 228, 231, 237, 239, 244, 249, 265, 277], "bring": [9, 135, 265], "add_step": [9, 244, 265], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 149, 160, 232, 242, 265], "baroclinic_channel_rp": 9, "viscos": [9, 14, 149, 158, 160, 232, 242, 245, 265, 277], "dtype": [9, 244, 265], "nu_": 9, "openmp_thread": [9, 14, 24, 34, 37, 44, 91, 139, 149, 190, 204, 213, 242, 244, 265], "add_yaml_fil": [9, 14, 24, 135, 242, 244, 265], "One": [9, 13, 265, 284, 289], "advantag": [9, 14, 132, 244, 245, 265, 271], "track": [9, 24, 242, 244, 246], "associ": [9, 13, 14, 18, 135, 221, 227, 228, 232, 242, 244, 246, 263], "while": [10, 16, 18, 231, 232, 242, 262, 265], "meant": [10, 245, 266], "simplifi": 10, "verifi": [10, 243, 266], "io": [10, 242, 244, 245, 264, 265, 266, 275, 285], "lot": [11, 135, 242, 245, 265], "o": [11, 12, 113, 115, 127, 132, 245, 246, 265, 266, 284], "handl": [11, 12, 246, 265, 271], "lower": [11, 244, 265, 277], "directli": [11, 13, 14, 16, 37, 240, 242, 245, 263, 264, 265, 268], "readm": [11, 244], "importlib": 11, "resourc": [11, 14, 34, 41, 44, 59, 89, 90, 91, 140, 150, 175, 191, 205, 213, 232, 235, 236, 242, 244, 265], "global_ocean": [11, 14, 242, 244, 245, 246, 266, 284], "files_for_e3sm": [11, 242, 244, 266], "str": [11, 14, 19, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 45, 48, 49, 52, 54, 56, 58, 60, 61, 62, 63, 67, 74, 80, 84, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 124, 126, 127, 135, 137, 138, 139, 144, 145, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 171, 172, 174, 177, 179, 181, 185, 190, 193, 195, 199, 204, 207, 209, 213, 215, 217, 220, 242, 244, 252, 254, 256, 265], "did": [11, 263, 265], "add_input_fil": [11, 16, 17, 38, 242, 244, 265], "collect": [11, 97, 136, 239, 241, 249, 263, 265], "whenev": [11, 242, 265], "flexibl": [11, 135, 242, 244, 246, 265], "No": [11, 264, 280, 281], "step_dir": 11, "database_root": [11, 132, 242, 266, 267, 268, 269, 270, 271, 272, 284], "download_path": 11, "join": [11, 265], "bathymetry_databas": [11, 242, 266], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 224, 238, 242, 265, 274, 277, 278, 280, 281, 282, 283, 290], "url": [11, 39, 58, 242, 262, 266], "web": [11, 242, 266], "anl": [11, 242, 266], "gov": [11, 242, 262, 266, 268, 272], "mpas_standalonedata": [11, 132, 266, 271], "dest_path": [11, 58], "remot": [11, 39, 246, 264], "bathymetri": [11, 242, 266], "strategi": 12, "stderr": [12, 37, 48, 242, 244], "loggingcontext": 12, "check_cal": [12, 242], "won": [12, 245, 265, 266], "logger": [12, 17, 37, 48, 66, 91, 118, 242, 244, 265], "full": [12, 37, 90, 108, 222, 223, 232, 242, 244, 246, 261, 264, 265, 271, 274, 276, 277, 278, 280, 281, 282, 283, 284], "although": [12, 135], "captur": 12, "explicit": [12, 245], "go": [12, 45, 52, 215, 217, 238, 242, 244, 245, 246, 265, 272], "subprocess": [12, 37, 90, 91, 107, 242, 245, 262], "produc": [12, 14, 16, 18, 37, 38, 40, 54, 135, 147, 155, 163, 232, 233, 235, 236, 237, 242, 245, 246, 251, 261, 265, 280, 281, 284, 287], "otherwis": [12, 132, 242, 244, 265, 267, 268, 269, 270, 271, 272, 277], "intent": 12, "desir": [12, 13, 14, 17, 18, 118, 135, 242, 243, 244, 265, 266, 284], "trick": [12, 242], "direct": [12, 13, 14, 79, 187, 201, 232, 235, 236, 265, 272, 277, 280, 281], "snippet": [12, 265], "dome": [12, 66, 238, 242, 244, 284, 290], "setup_mesh": [12, 242], "setupmesh": [12, 242, 244], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 242], "landice_grid": [12, 242, 265], "l": [12, 118, 265, 272], "quasiuniformsphericalmeshstep": [13, 135, 244], "icosahedralmeshstep": [13, 135, 244], "jigsaw": [13, 67, 71, 73, 74, 76, 78, 80, 168, 171, 242], "complex": [13, 75, 244, 245, 265], "build_cell_width_lat_lon": [13, 74], "opt": [13, 80], "make_jigsaw_mesh": [13, 74], "icosahedr": [13, 67, 69, 138, 168, 171, 233, 244, 278], "significantli": [13, 274], "smooth": 13, "cell": [13, 14, 18, 67, 68, 69, 70, 74, 75, 76, 79, 82, 96, 103, 135, 139, 140, 150, 172, 175, 187, 189, 191, 201, 203, 205, 221, 222, 223, 224, 227, 228, 232, 235, 236, 238, 259, 274, 277, 278, 280, 281, 282, 283, 287], "quasi": [13, 74, 233, 244, 266, 278, 283, 288], "hand": [13, 99, 245], "restrict": [13, 265, 283], "subdivis": [13, 67, 68, 69, 70, 71], "icosahedron": [13, 68, 69, 70, 71], "tabl": [13, 246, 271, 284], "approxim": [13, 67, 69, 70, 74, 135, 140, 150, 175, 191, 205, 232, 235, 236, 246, 265], "width": [13, 67, 68, 69, 74, 75, 76, 82, 265, 277], "km": [13, 14, 67, 68, 69, 70, 74, 75, 76, 79, 82, 135, 137, 138, 147, 148, 149, 152, 155, 156, 158, 160, 163, 174, 190, 193, 197, 204, 207, 232, 233, 235, 236, 242, 265, 266, 277, 278, 280, 281, 282, 283, 288, 290], "5": [13, 14, 69, 132, 135, 158, 232, 233, 242, 243, 245, 262, 265, 266, 277, 278, 283, 284, 288], "240": [13, 69, 135, 233, 266, 278], "6": [13, 69, 242, 265, 275, 277, 282, 284, 285], "120": [13, 69, 135, 243, 278], "7": [13, 69, 132, 265, 272, 278, 284], "60": [13, 69, 135, 233, 274, 278], "8": [13, 69, 132, 232, 246, 265, 266, 277, 278, 280, 281, 284], "30": [13, 14, 69, 135, 238, 265, 272, 277, 282, 283, 288], "9": [13, 18, 69, 132, 233, 265, 278, 284], "15": [13, 14, 69, 232, 265, 277, 278, 282, 283, 284, 288], "11": [13, 69, 132, 265, 284], "3": [13, 69, 132, 135, 232, 242, 243, 246, 262, 265, 266, 271, 272, 274, 277, 278, 280, 281, 283, 284], "13": [13, 69, 265, 277], "94": [13, 69], "spherical_mesh": [13, 75], "cell_width": [13, 67, 68, 69, 70, 74, 75, 76, 82], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 82, 119, 120, 135, 160, 166, 179, 217, 232, 233, 235, 236, 256, 278, 280, 281, 287, 290], "plot_cell_width": 13, "cell_width_filenam": [13, 82], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": 13, "lat": [13, 16, 68, 74, 75, 76, 82, 95, 97, 99, 102, 119, 179, 233, 266, 278], "lon": [13, 16, 68, 74, 75, 76, 82, 95, 97, 99, 102, 119, 179, 233, 266, 278], "sphere": [13, 233, 278], "vtk_lat_lon": 13, "far": [13, 132, 221, 227, 228, 245, 265], "But": [13, 132, 238, 242, 245, 246, 265, 266, 271], "hexagon": [13, 79, 265, 280, 281], "planar_hex": [13, 79, 232, 235, 236, 237, 242, 265], "make_planar_hex_mesh": [13, 79, 232, 235, 236, 237, 242, 265], "x": [13, 18, 68, 75, 76, 79, 82, 98, 104, 120, 145, 187, 201, 242, 265, 277, 280, 281, 282], "y": [13, 14, 18, 79, 98, 104, 120, 187, 201, 232, 235, 236, 242, 265, 272, 277, 280, 281], "nx": [13, 79, 238, 242, 265, 282], "ny": [13, 79, 238, 242, 265, 282], "dc": [13, 238, 242, 265], "distanc": [13, 79, 265, 277], "adjac": [13, 274], "center": [13, 18, 79, 187, 201, 238, 265, 274, 277], "admittedli": 13, "oddli": 13, "period": [13, 231, 232, 235, 236, 242, 265, 277, 278, 280, 281], "nonperiodic_x": [13, 242, 265], "nonperiodic_i": [13, 242, 265], "consider": [13, 221, 227, 228, 231, 259], "compute_planar_hex_nx_ni": [13, 242, 265], "lx": [13, 79, 242, 265, 277, 280, 281, 282], "ly": [13, 79, 242, 265, 277, 282], "explan": 13, "subtleti": 13, "account": [13, 79, 246, 265, 267, 268, 270, 271, 272, 284], "behav": 13, "stagger": [13, 79], "physic": [13, 79, 255, 261, 265], "np": [13, 18, 233, 242, 265, 278], "sqrt": [13, 280], "domain": [13, 24, 31, 79, 120, 135, 139, 145, 231, 238, 259, 265, 277, 278, 280, 281, 282, 283, 288, 290], "extra": [13, 246], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 242, 265], "max": [13, 135, 242, 265, 277, 278], "int": [13, 14, 24, 25, 34, 37, 44, 61, 62, 63, 67, 68, 69, 70, 71, 79, 90, 91, 94, 120, 139, 140, 149, 150, 172, 175, 190, 191, 204, 205, 213, 242, 265, 282], "ds_mesh": [13, 18, 120, 242, 265], "creation": [13, 242, 266], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 24, 34, 37, 44, 90, 91, 139, 238, 242, 245, 265], "distant": 13, "descend": [14, 16, 135, 233, 238, 239, 242, 244, 245, 265], "modelstep": [14, 135, 242, 244, 265], "update_pio": [14, 24, 139], "make_graph": [14, 24, 139], "At": [14, 37, 48, 240, 241, 244, 265], "set_model_resourc": 14, "thread": [14, 24, 34, 37, 43, 44, 48, 91, 139, 149, 190, 204, 213, 239, 242, 243, 263, 265, 266, 268, 272, 284, 289], "prefix": [14, 39, 132, 135, 244, 246, 266], "end": [14, 137, 242, 244, 245, 246, 261, 263, 265, 268, 277, 278, 280, 281, 282, 287], "yml": 14, "reason": [14, 16, 43, 132, 242, 245, 265, 289], "add_namelist_fil": [14, 24, 135, 242, 244], "add_model_config_opt": [14, 24, 135, 242, 244, 265], "add_streams_fil": [14, 24, 135, 242, 244], "themselv": [14, 245, 264], "question": [14, 242, 266], "never": [14, 132, 263], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 135, 265], "config_run_dur": [14, 135, 244, 265], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 48, 147, 263, 265], "config_block_decomp_file_prefix": [14, 265], "time_integr": [14, 135, 265, 278], "config_time_integr": [14, 135], "rk4": [14, 135, 245, 278], "filename_templ": [14, 135, 265], "restart": [14, 17, 48, 135, 233, 235, 236, 237, 239, 243, 245, 251, 252, 261, 263, 265, 284, 289], "output_interv": [14, 135, 265, 278], "0030_00": 14, "clobber_mod": [14, 135, 265], "truncat": [14, 135, 265], "reference_tim": [14, 135], "0001": [14, 135, 265], "01_00": [14, 135, 259, 265], "tracer": [14, 18, 168, 214, 215, 217, 232, 233, 235, 236, 237, 265, 278, 280, 281, 282], "xtime": [14, 135, 265], "normalveloc": [14, 17, 18, 135, 165, 202, 231, 232, 235, 236, 237, 242, 265, 282], "layerthick": [14, 17, 135, 165, 221, 225, 226, 227, 228, 232, 235, 236, 237, 242, 265], "refzmid": [14, 221, 227, 228, 242, 265], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 265], "clariti": [14, 242], "global_converg": [14, 233, 244, 265, 276], "substitut": 14, "config_write_output_on_startup": [14, 265], "0000_00": [14, 265], "config_use_mom_del2": [14, 265], "config_implicit_bottom_drag_coeff": [14, 265], "0e": [14, 281, 282], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 265], "config_cvmix_background_viscos": [14, 265], "worri": 14, "sometim": [14, 221, 227, 228, 238, 240, 242, 244, 263, 265, 289], "togeth": [14, 17, 132, 238, 263, 265, 289], "overkil": 14, "reli": [14, 242, 244, 265], "along": [14, 18, 132, 232, 242, 264, 265], "dict": [14, 19, 25, 27, 28, 30, 37, 41, 48, 86, 87, 89, 93, 94, 110, 112, 113, 119, 121, 122, 123, 135, 137, 142, 171, 242, 244, 265], "config_mom_del2": [14, 232, 242, 265], "precis": [14, 135, 242, 265], "bool": [14, 24, 25, 29, 37, 39, 47, 48, 49, 54, 58, 60, 63, 107, 108, 112, 117, 118, 119, 123, 138, 139, 151, 157, 168, 171, 176, 192, 206, 213, 215, 217, 265], "possibli": [14, 37, 48, 239, 242, 244, 246, 265], "at_setup": [14, 29, 151, 157, 176, 192, 206, 265], "being": [14, 29, 37, 48, 107, 112, 118, 132, 151, 157, 176, 192, 206, 242, 244, 245, 246, 265, 274], "dt": [14, 135, 149, 213, 242, 265, 277, 278, 280, 281, 283, 288], "proport": [14, 135, 265, 274, 277, 278, 280, 281, 283, 288], "dt_per_km": [14, 135, 233, 265, 277, 280, 281, 283, 288], "stackoverflow": [14, 60, 265], "1384565": [14, 265], "7728169": [14, 60, 265], "config_dt": [14, 135, 265], "strftime": [14, 265], "gmtime": [14, 265], "run_time_step": [14, 149, 242, 265], "durat": [14, 135, 232, 235, 236, 237, 243, 265], "run_second": [14, 265], "btr_dt": [14, 135, 149, 213, 242, 265, 277], "btr_dt_per_km": [14, 135, 265, 277], "config_btr_dt": [14, 135, 265], "bit": [14, 132, 245, 263, 265, 277, 284], "complic": [14, 245, 246, 265], "slightli": [14, 246], "sophist": 14, "immutable_stream": [14, 265], "var_struct": [14, 258], "var": [14, 114, 258, 265], "var_arrai": [14, 258], "tag": [14, 264], "taken": [14, 24, 139, 233, 242, 265, 272, 284], "past": 14, "experi": [14, 132, 245, 274], "difficult": [14, 132, 271], "synchron": [14, 264], "out_nam": 14, "equival": [14, 246, 265, 267], "template_replac": [14, 27, 28, 135], "treat": [14, 243, 245], "jinja2": [14, 27, 28, 113, 137], "render": [14, 27, 28, 113], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 242, 245, 246, 266, 284], "qu240dynamicadjust": 14, "adjust": [14, 132, 135, 229, 266], "interv": [14, 144, 278], "spin": 14, "reus": [14, 242, 245, 246, 265, 266, 284], "qualit": 14, "forgotten": 14, "broken": [14, 242, 245], "immedi": [14, 66, 246, 265], "miss": [14, 242, 265, 266], "detect": [14, 18, 266, 267, 269, 270, 271, 284], "gpmeti": [14, 266], "divid": [14, 274], "partition_graph": [14, 24, 139], "circumst": [14, 17, 37, 38, 242, 265], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 262, 265, 283, 288], "v1": [14, 274], "better": [14, 16, 132, 284], "v2": [14, 266, 274], "littl": [14, 245, 246, 264, 265], "feel": [14, 132, 242, 265], "runtime_setup": [14, 16, 34, 44, 232, 235, 236, 244], "yourself": [14, 265, 271], "culler": 14, "cull": [14, 232, 235, 236, 242, 265], "model_step": 14, "make_graph_fil": 14, "field": [14, 17, 82, 84, 120, 135, 179, 221, 227, 228, 231, 232, 235, 236, 237, 265, 277, 278, 280, 281], "weight": [14, 16, 84, 221, 227, 228, 265, 274], "weight_field": [14, 84], "frequent": [16, 229, 258], "observ": [16, 264], "dataset": [16, 120, 187, 201, 221, 227, 228, 242, 265], "region": [16, 18, 264, 266], "pyremap": [16, 100], "interpol": [16, 94, 233, 266], "hood": 16, "esmf_regridweightgen": 16, "mappingfilestep": [16, 18], "woa": 16, "mytestcas": 16, "__int__": 16, "make_map": 16, "64": [16, 274], "bilinear": [16, 94, 233, 278, 283, 288], "filenam": [16, 17, 37, 39, 40, 48, 88, 95, 96, 97, 98, 102, 103, 104, 109, 118, 122, 124, 242, 244, 246, 265], "woa23_decav_0": 16, "25_extrap": 16, "20230414": 16, "initial_condition_databas": [16, 266], "destin": [16, 94, 95, 96, 97, 98, 99, 100], "src_from_lon_lat": 16, "lon_var": [16, 95, 97, 102], "lat_var": [16, 95, 97, 102], "dst_from_mpa": 16, "mesh_nam": [16, 95, 96, 97, 98, 99, 102, 103, 104, 138, 172, 179, 181, 244], "qu60": 16, "subclass": [16, 71, 74, 75, 76, 81, 135, 265], "src_": 16, "dst_": 16, "pick": [16, 105, 106], "vizmap": [16, 168, 179, 233, 244], "128": [16, 243, 268, 269, 272], "cosine_bell_viz": [16, 18, 233, 278, 283, 288], "dlon": [16, 99, 233, 278, 283, 288], "dlat": [16, 99, 233, 278, 283, 288], "remap_method": [16, 233, 278, 283, 288], "src_from_mpa": 16, "dst_global_lon_lat": 16, "lon_min": [16, 99], "With": [16, 246], "approach": [16, 242, 245, 246, 262, 265, 274], "perhap": [16, 18, 40, 238, 240], "cover": [16, 259, 265], "nearli": [16, 242, 244, 263, 264, 265], "workflow": [16, 242, 246], "critic": [17, 265], "easiest": [17, 132, 246], "validate_var": [17, 37, 40, 135, 137, 213, 242], "meth": 17, "add_output_fil": [17, 38, 242, 244, 265], "temperatur": [17, 165, 231, 232, 236, 237, 242, 261, 265, 277, 278, 282, 283, 288], "salin": [17, 165, 231, 232, 237, 242, 265, 277, 278, 282, 283, 288], "done": [17, 34, 44, 242, 244, 246, 265, 284], "compare_vari": [17, 265], "filename1": [17, 118, 265], "filename2": [17, 118, 265], "compact": [17, 265], "output_full_run": 17, "output_restart_run": 17, "all_pass": [17, 118], "valueerror": [17, 245], "quiet": [17, 107, 108, 118, 123], "report": 17, "threshold": [17, 278, 280, 281], "l1": [17, 118], "00000000000000e": 17, "l2": [17, 118], "l_infin": 17, "linf": [17, 118], "test_nightly_latest": 17, "threads_test": 17, "1thread": [17, 232, 277], "2thread": [17, 277], "test_20210616": 17, "further_valid": 17, "zero": [17, 222, 223, 224, 225, 226, 231, 232, 237, 265, 278, 282], "l1_norm": [17, 118], "l2_norm": [17, 118], "linf_norm": [17, 118], "nonzero": [17, 118], "solut": [17, 131, 187, 188, 189, 197, 198, 199, 201, 202, 203, 204, 207, 209, 233, 235, 236, 243, 262, 265, 275, 279, 280], "aspect": [18, 265], "routin": 18, "plot_horiz_field": [18, 242, 265], "patch": [18, 120, 265], "style": [18, 135, 264, 265], "edg": [18, 96, 99, 103, 120, 187, 188, 201, 202, 231, 265], "polygon": 18, "character": 18, "accordingli": [18, 92], "final_normalveloc": [18, 265], "t_index": [18, 120, 265], "vmin": [18, 120, 233, 265, 278], "max_veloc": [18, 265], "vmax": [18, 120, 233, 265, 278], "cmap": [18, 120, 242, 265], "cmo": [18, 242, 265], "balanc": [18, 242, 265], "show_patch_edg": [18, 120, 242, 265], "globe": [18, 278], "plot_glob": 18, "plot_land": [18, 119], "disabl": [18, 231, 278, 290], "contin": [18, 119], "overlain": 18, "cmocean": [18, 242, 265], "noqa": [18, 66, 242, 265], "f401": [18, 242, 265], "xr": [18, 187, 188, 189, 201, 202, 203, 242, 265], "open_dataset": [18, 242, 265], "tracer1": [18, 135], "isel": 18, "nvertlevel": [18, 120, 221, 227, 228, 242, 265, 274], "out_filenam": [18, 116, 119, 220], "colormap_sect": [18, 119], "titl": [18, 119, 120], "colormap": [18, 119, 120, 233, 265, 278], "cosin": [18, 135, 168, 170, 171, 174, 177, 179, 181, 233, 244, 265, 275, 276, 279, 283, 288], "bell": [18, 135, 168, 170, 171, 174, 177, 179, 181, 233, 244, 265, 275, 276, 279, 283, 288], "converg": [18, 168, 183, 184, 197, 198, 233, 235, 236, 240, 243, 264, 265, 276, 278, 280, 283, 288], "colormap_nam": [18, 119, 233, 278], "viridi": [18, 233, 265, 278], "norm": [18, 118, 119, 233, 278], "norm_typ": [18, 119, 233, 278], "norm_arg": [18, 119, 233, 278], "colorbar": [18, 119, 120, 233, 278], "tick": [18, 119, 233, 278], "mark": [18, 233, 246, 278], "colorbar_tick": [18, 119, 233, 278], "matplotlib": [18, 265], "standard": [18, 245, 246, 255, 265, 268, 284], "symlog": [18, 119], "symmetr": 18, "central": [18, 278], "logarithm": [18, 120], "color": [18, 120], "normal": [18, 187, 188, 201, 202, 231, 242, 243, 246, 265, 271], "symlognorm": 18, "lognorm": 18, "hous": [19, 278], "kei": [19, 48, 112, 244], "max_memori": [24, 34, 37, 44, 139, 242], "mesh_filenam": [24, 84, 139, 145], "graph_filenam": [24, 84, 139], "make_yaml": 24, "stride": [24, 36, 139], "consist": [24, 36, 132, 139, 229, 246, 265, 266, 277], "partit": [24, 33, 43, 61, 84, 139, 232, 235, 236, 242, 266, 267, 268, 269, 270, 272, 284], "model_config_data": 24, "streams_data": 24, "neither": [24, 37, 48, 94, 139, 149, 213, 242], "nor": [24, 37, 48, 94, 139, 149, 213, 242, 265], "append": [24, 37, 39, 48, 94, 139, 147, 148, 149, 152, 155, 156, 158, 160, 163, 164, 166, 213, 242, 252, 254, 256], "ideal": [24, 34, 37, 44, 90, 91, 94, 135, 139, 149, 190, 204, 213, 214, 215, 217, 238, 242, 245, 264, 265, 266, 290], "fewer": [24, 34, 37, 44, 90, 91, 139, 149, 190, 204, 213, 242, 265, 284], "memori": [24, 34, 37, 44, 139, 242, 266], "mb": [24, 34, 37, 44, 139, 242, 266], "placehold": [24, 34, 37, 44, 139, 242, 284], "diverg": [30, 142], "counterpart": [30, 135, 142], "nest": [30, 121, 123, 142], "graph_fil": 31, "run_as_subprocess": [37, 242], "smallest": [37, 242, 263, 274, 290], "unit": [37, 95, 99, 102, 242, 263, 277, 290], "term": [37, 263, 265, 280, 281], "necessarili": [37, 39], "input_data": 37, "until": [37, 38, 242, 244, 284], "finish": [37, 38, 81, 242, 265], "known": [37, 38, 132, 233, 242, 265], "suffici": [37, 242], "establish": [37, 38, 242], "is_depend": [37, 242], "machine_info": [37, 242], "machineinfo": 37, "combin": [37, 39, 48, 56, 62, 93, 121, 242, 243, 244, 262, 265, 266, 284], "base_work_dir": [37, 48, 242, 244], "log_filenam": [37, 48, 242, 244], "redirect": [37, 242], "extern": [37, 132, 229, 239, 242, 244, 258, 275, 285], "turn": [37, 55, 239, 242, 262, 265, 282], "access": [38, 244, 245, 246, 265, 267, 271, 272], "database_compon": [39, 242], "work_dir_target": [39, 242], "come": [39, 132, 242, 246, 265, 267, 268, 269, 270, 271, 272, 275], "_database_root": 39, "available_resourc": [41, 89], "constrain": [41, 140, 150, 175, 191, 205, 232, 235, 236, 242, 265], "cores_per_nod": [41, 89, 92, 132, 266, 267, 268, 269, 270, 271, 272, 284], "everi": [42, 182, 232, 242, 244, 245, 261, 262, 263, 265, 277, 282], "child": [42, 182, 239, 242, 244, 245], "subtask": 44, "step_symlink": [48, 244], "outsid": [48, 49, 238, 240, 242, 244, 246], "stdout_logg": [48, 244], "goe": [48, 242, 244, 265], "regardless": [48, 244], "new_step_log_fil": [48, 244], "run_by_default": [49, 244], "assum": [50, 113, 122, 132, 246, 265, 272, 277], "prior": [50, 242], "step_path": 54, "variant": [54, 170, 232, 238, 243, 245, 246, 265, 271, 274, 277, 278], "uncach": 54, "datestamp": 54, "yymmdd": [54, 266], "dry": [54, 243], "meta": 56, "empti": [56, 242, 245, 246, 263, 265], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 108, 246], "isadirectoryerror": 60, "qo": [61, 267, 268, 270, 271, 272, 284], "qualiti": [61, 267, 268, 270, 271, 272, 284], "servic": [61, 267, 268, 270, 271, 272, 284], "constraint": [61, 272, 284], "wall_tim": [61, 284], "wall": [61, 284], "target_cor": 62, "min_cor": 62, "decomposition_test": [66, 238, 284], "decompositiontest": [66, 238], "e501": [66, 265], "turquois": [66, 268], "usr": [66, 132, 268, 284], "climat": [66, 267, 268, 269, 271, 284], "mhoffman": 66, "constant": [67, 74, 75, 135, 231, 265, 277, 278, 280, 282, 283, 288], "latitud": [68, 75, 95, 97, 99, 102, 119, 233, 278, 283, 288], "longitud": [68, 75, 76, 82, 95, 97, 99, 102, 119, 233, 278, 283, 288], "ndarrai": [68, 75, 76, 82, 119, 145, 219, 220, 265], "degre": [68, 75, 76, 82, 99, 266, 277], "length": [68, 75, 76, 82], "180": [68, 75, 76, 82, 99, 135, 278], "90": [68, 75, 76, 82, 135, 242, 278], "static": [69, 70], "rule": 69, "thumb": 69, "achiev": [70, 243], "uniform": [74, 79, 137, 174, 232, 233, 235, 236, 238, 244, 265, 266, 277, 278, 280, 281, 282, 283, 288], "natur": 79, "jigsawpi": [80, 242], "jigsaw_jig_t": 80, "meti": 84, "defaults_filenam": 85, "total": [89, 242, 243, 245, 265, 266, 268, 284], "substep": [90, 91], "command_line_arg": 90, "cpus_per_nod": 92, "map_filenam": 94, "src_grid_info": 94, "dst_grid_info": 94, "neareststod": [94, 233, 278, 283, 288], "conserv": [94, 233, 278, 283, 288], "map_": 94, "source_typ": 94, "_": [94, 132, 242, 244, 246, 265, 282], "dest_typ": 94, "1d": [95, 99, 102, 119, 135, 219, 220, 221, 222, 223, 224, 225, 227, 228], "2d": [95, 99, 102, 119], "5x0": [95, 99, 102], "5degre": [95, 99, 102], "coordin": [95, 97, 98, 102, 104, 119, 120, 187, 201, 221, 227, 228, 273, 275, 277, 278, 280, 281, 282, 283, 287], "mesh_typ": [96, 103, 238, 242, 244], "vertex": [96, 103], "x_var": [98, 104], "y_var": [98, 104], "proj_attr": [98, 104], "proj_str": [98, 104], "proj": [98, 104], "left": [99, 135, 265, 274, 277, 278], "remapp": [100, 101], "remap_fil": 100, "progress": [107, 108], "is_task": 108, "steps_to_skip": 108, "unpickl": [110, 242], "cached_step": 111, "identifi": [111, 132, 239, 258, 290], "task_list": 112, "_all": 112, "streams_filenam": 113, "lxml": [113, 115, 127], "etre": [113, 115, 127], "new_child": 114, "children": 114, "sub": [114, 265], "new_tre": 115, "infin": 118, "toler": 118, "data_arrai": 119, "colorbar_label": 119, "subtitl": 119, "field_nam": 120, "out_file_nam": 120, "ax": 120, "z_index": 120, "cmap_set_und": 120, "cmap_scal": 120, "cmap_titl": 120, "horizont": [120, 135, 145, 231, 232, 233, 235, 236, 237, 277, 280, 281, 282], "depth": [120, 135, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 265, 266, 274, 277, 278, 280, 281, 282, 283], "slice": 120, "fieldnam": 120, "visibl": 120, "bar": 120, "classmethod": 122, "jinja": [122, 135, 233], "namelist_templ": 126, "polarisyaml": [126, 127], "processed_registry_filenam": 127, "registri": [127, 231, 258], "steam": 127, "1_anvil_intel_impi": [128, 132], "mvapich": [128, 132, 267], "ve": [128, 129, 130, 131, 133, 246, 265], "1_anvil_gnu_openmpi": 128, "1_chicoma": 129, "cpu_gnu_mpich": [129, 133], "crai": [129, 132, 133, 268, 272], "1_chrysalis_intel_openmpi": 130, "1_chrysalis_gnu_openmpi": 130, "soon": [131, 132, 265, 284], "1_compy_intel_impi": 131, "1_compy_gnu_openmpi": 131, "load_polaris_env": [132, 246, 265, 284], "right": [132, 135, 244, 246, 265, 266, 274, 277, 278, 284], "therefor": [132, 242, 263, 265], "chicoma": [132, 271, 284], "mpich": [132, 246, 264, 268, 272, 284], "compi": [132, 270, 284], "pm": [132, 272, 284], "compymcnodefac": [132, 271], "perlmutt": [132, 268, 271, 284], "pretti": [132, 242, 245, 265, 266], "conda_path": [132, 246], "osx": [132, 271], "clang": [132, 246], "1_": 132, "morpheu": 132, "cobalt": [132, 267, 268, 269, 270, 271, 272], "single_nod": [132, 266, 267, 268, 269, 270, 271, 272, 284], "mpirun": [132, 262, 266, 267, 268, 269, 270, 271, 272, 284], "srun": [132, 242, 262, 265, 266, 267, 268, 269, 270, 271, 272, 284], "parallel_execut": [132, 262, 266, 267, 268, 269, 270, 271, 272, 284], "modules_befor": [132, 268, 272], "modules_aft": [132, 268, 272], "polaris_env": [132, 267, 268, 269, 270, 271, 272], "deploi": [132, 246, 264, 267, 268, 269, 270, 271, 272], "mpi_gnu": [132, 267, 268, 269, 270, 271, 272], "hdf5": [132, 267, 268, 269, 270, 271, 272], "use_e3sm_hdf5_netcdf": [132, 267, 268, 269, 270, 271, 272], "discoveri": 132, "hostnam": 132, "hostname_contain": 132, "queu": 132, "laptop": [132, 246, 265, 266], "workstat": [132, 246], "high": [132, 242, 269, 271], "hpc": [132, 246, 268, 271], "safest": [132, 246], "mpi_": 132, "simpl": [132, 135, 245, 258, 265, 284], "compiler_gnu": 132, "compiler_intel": 132, "hopefulli": [132, 266], "parlanc": 132, "concret": 132, "ubuntu": 132, "spec": [132, 262, 272], "gcc": 132, "curl": 132, "81": 132, "buildabl": 132, "install_missing_compil": 132, "cc": 132, "bin": [132, 246, 272, 284], "cxx": 132, "f77": 132, "fc": 132, "operating_system": 132, "ubuntu22": 132, "04": 132, "extra_rpath": 132, "luck": 132, "catch": [132, 243], "22": 132, "guess": [132, 265], "correct": [132, 246], "potenti": [132, 145, 158, 242, 265, 277], "purg": 132, "perl": 132, "32": [132, 243, 284], "bsnc6lt": 132, "ugetvbp": 132, "sxfyy4k": 132, "2020": 132, "304": 132, "n3b5fye": 132, "j3zxncu": 132, "7ohuiwq": 132, "k2zu3y5": 132, "mirrcz7": 132, "variou": [132, 211, 242, 246, 250], "ask": 132, "gb": 132, "minut": [132, 232, 243, 277, 289], "hour": [132, 235, 236, 243, 261, 268, 272, 280, 281, 284, 287], "zlib": 132, "incompat": 132, "ubuntu20": 132, "readlin": 132, "pkgconf": 132, "spackdir": 132, "env": [132, 272], "arch": 132, "repositori": [132, 240, 264, 265, 284], "x86_64_v4": 132, "free": [132, 231, 265, 266], "touch": [132, 246], "everyth": 132, "1_pm": 133, "ever": [135, 245], "expand": [135, 274], "oceanmodelstep": [135, 242, 265], "decid": [135, 265], "veri": [135, 239, 242, 245, 246, 258, 265, 282], "earli": [135, 275, 284], "stage": [135, 231, 242, 244, 246, 254, 261, 275, 284], "map_yaml_to_namelist": 135, "heurist": 135, "200": [135, 235, 236, 265, 277, 280, 281, 282], "round": [135, 278], "cell_count": [135, 140, 150, 175, 191, 205, 265], "goal_cells_per_cor": [135, 265, 278, 280, 281, 283, 288], "pinch": 135, "2000": [135, 238, 259, 261, 265, 287], "max_cells_per_cor": [135, 265, 278, 280, 281, 283, 288], "seciton": 135, "control": [135, 233, 242, 266, 277, 278, 282, 284], "scale": [135, 277, 284], "tri": [135, 245], "apport": 135, "dai": [135, 144, 158, 232, 233, 237, 261, 265, 277, 278, 282, 287], "form": [135, 290], "dddd_hh": [135, 144], "ss": [135, 144], "get_time_interval_str": 135, "run_dur": [135, 278], "fill": 135, "dt_str": 135, "run_duration_str": 135, "output_interval_str": 135, "yaml_filenam": [135, 137], "caviti": [135, 245, 265, 266, 274], "frazil": 135, "flux": [135, 231, 282], "fix": [135, 265], "add_spherical_base_mesh_step": [135, 244], "spherical_converg": [135, 233, 244, 278], "icos_resolut": [135, 278], "480": [135, 278], "qu_resolut": [135, 278], "150": [135, 278], "210": [135, 274, 278], "evalu": [135, 188, 189, 202, 203, 278], "convergence_eval_tim": [135, 278], "spherical_convergence_forward": [135, 278], "split_explicit": [135, 278], "rk4_dt_per_km": [135, 278], "split": [135, 245], "split_dt_per_km": 135, "barotrop": [135, 149, 213, 242, 265, 277, 282], "simul": [135, 235, 236, 242, 263, 265, 276, 277, 280, 281, 283, 284, 288], "infrastructur": [135, 245, 265], "add_cosine_bell_task": [135, 239], "sphericalconvergenceforward": [135, 233], "output_filenam": [135, 137, 145], "analyz": [135, 171, 265], "split_explicit_t": [135, 265], "grid_1d": 135, "generate_1d_grid": 135, "vertical_grid": [135, 219, 221, 227, 228, 238, 242, 265, 266, 274, 277, 278, 280, 281, 282, 283], "z": [135, 222, 223, 224, 225, 226, 227, 228, 265, 277, 278, 280, 281, 282, 283], "star": [135, 226, 228, 265, 277, 278, 280, 281, 282, 283], "init_vertical_coord": [135, 242, 265], "minlevelcel": [135, 221, 223, 224, 225, 226, 227, 228, 265], "maxlevelcel": [135, 221, 222, 223, 224, 225, 226, 227, 228, 265], "cellmask": [135, 221, 224, 227, 228, 265], "zmid": [135, 221, 227, 228, 265], "restingthick": [135, 221, 226, 227, 228, 265], "bottomdepth": [135, 221, 222, 224, 225, 226, 227, 228, 242, 265], "entir": [135, 265, 277, 289], "petersen": [135, 246, 265, 277], "et": [135, 265, 274, 277, 278, 280, 281], "al": [135, 265, 274, 277, 278, 280, 281], "2015": [135, 265, 277], "int_": 135, "rho": 135, "dv": 135, "sort": [135, 239, 240, 245, 246], "increas": [135, 245], "compute_rp": [135, 265], "csv": [135, 265], "subdivid": [138, 244], "dynamic_ntask": 139, "dynam": [139, 229, 237, 266, 277, 278, 282, 283], "available_cor": 141, "estim": [141, 143, 265], "time_str": 144, "initial_state_filenam": 145, "energi": [145, 158, 264, 265, 277], "state": [145, 147, 148, 155, 158, 163, 231, 232, 233, 235, 236, 237, 242, 243, 265, 278], "len": [145, 265], "output_fil": [145, 242, 265], "shorter": [155, 243, 251], "step_subdir": [164, 252], "processor": [164, 242, 252, 277], "include_viz": [168, 244], "advect": [168, 233, 278, 280, 281, 282], "less": [168, 171, 242, 274], "dependencies_dict": 171, "rmsevalu": 172, "squar": [172, 233, 235, 236, 280, 281], "ncell": [172, 242, 265], "viz_map": [179, 244], "inerti": [183, 184, 185, 187, 190, 193, 195, 235, 244, 275, 279], "graviti": [183, 184, 185, 187, 190, 193, 195, 235, 244, 275, 279], "wave": [183, 184, 185, 187, 190, 193, 195, 201, 235, 242, 244, 265, 275, 277, 279, 281], "taskdir": [185, 190, 193, 195, 199, 204, 207, 209], "analys": [185, 199], "exact": [187, 188, 189, 201, 202, 203, 233, 235, 236, 245, 280, 281], "angleedg": [187, 201], "angl": [187, 201], "posit": [187, 201, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 265, 274, 282], "xcell": [187, 201, 242, 265], "ycell": [187, 201, 242, 265], "xedg": [187, 201, 242, 265], "yedg": [187, 201], "f0": 187, "corioli": [187, 235, 236, 265, 277, 278, 281, 282], "eta0": [187, 201], "amplitid": [187, 201], "kx": [187, 201], "ky": [187, 201], "angular": [187, 201], "frequenc": [187, 201, 232], "veloc": [188, 202, 231, 232, 235, 236, 244, 246, 265, 278, 282, 284], "norm_vel": 188, "eta": [189, 203, 280, 281], "manufactur": [197, 198, 199, 201, 204, 207, 209, 236, 275, 279], "column": [211, 212, 214, 215, 217, 237, 246, 250, 251, 252, 254, 255, 256, 258, 259, 261, 275, 279, 284, 285, 286], "mix": [212, 238, 239, 280, 281, 282], "param": [212, 214], "resources_fix": 213, "ag": [214, 215, 217], "evolv": [214, 264, 274, 278, 282], "ideal_ag": [215, 217], "layer": [219, 220, 221, 225, 226, 227, 228, 231, 232, 235, 236, 237, 265, 266, 274, 277, 278, 280, 281, 282, 283], "meter": [219, 220], "bottom": [221, 222, 223, 224, 225, 226, 227, 228, 231, 265, 266, 274, 277, 278, 280, 281, 282, 283], "thick": [221, 225, 226, 227, 228, 232, 237, 259, 265, 266, 274, 277, 280, 287], "stretch": [221, 227, 228, 265, 274], "elev": [221, 227, 228, 265, 274], "midpoint": [221, 227, 228, 265], "reftopdepth": [221, 224, 225, 227, 228, 265], "down": [221, 222, 223, 224, 225, 226, 227, 228, 265, 274, 278], "ref": [221, 227, 228, 265], "middl": [221, 227, 228, 265], "refbottomdepth": [221, 222, 223, 224, 225, 227, 228, 242, 265], "refinterfac": [221, 227, 228, 265], "element": [221, 227, 228, 265], "vertcoordmovementweight": [221, 227, 228, 265], "movement": [221, 227, 228, 265], "alter": [222, 223, 242, 244, 264, 265, 274, 277, 278, 280, 281, 282, 283], "partial": [222, 223, 265, 274, 277, 278, 280, 281, 282, 283], "seafloor": [222, 224, 225, 226, 274], "unstretch": 226, "shelv": [229, 266, 274], "ssh_adjust": [229, 242, 266], "compass_branch": 229, "example_compact": [229, 239, 258, 266], "default_input": [229, 239, 258, 265, 266], "ocean_model": [229, 246, 266], "latest": [229, 246, 258, 264, 275, 284], "compat": [229, 246, 258, 262, 264], "verison": 229, "manufactured_solut": [229, 234, 239, 281], "single_column": [229, 234, 239, 258, 260, 282], "minim": 231, "fcell": [231, 242, 265, 278], "fedg": [231, 242, 265, 278], "fvertex": [231, 242, 265, 278], "slip": 231, "solid": [231, 259, 277, 278], "tangenti": 231, "nonperiod": 231, "drag": [231, 233], "mass": 231, "momentum": [231, 232, 233, 235, 236, 280, 281], "scalar": 231, "rigid": 231, "solv": [231, 262, 274], "mid": [231, 277], "vari": [231, 233, 242, 262, 271, 274, 278], "consult": [231, 265], "tidal_forc": 231, "eddi": [232, 277], "addition": [232, 233, 235, 236, 237, 242, 267, 268, 269, 270, 272], "diffus": [232, 233, 235, 236, 237], "50": [232, 235, 236, 265, 277, 280, 281, 282], "prescrib": [232, 235, 236], "intens": 232, "enough": [232, 242, 245, 265], "cosinebel": [233, 244], "24": [233, 278, 287], "shape": [233, 278], "blob": 233, "around": [233, 265, 266, 277, 278], "rate": [233, 235, 236, 265, 278, 280, 281, 282], "distribut": 233, "rmse": [233, 235, 236, 280, 281], "fast": [233, 265], "shallow": [235, 246, 278, 280, 281, 283], "water": [235, 265, 277, 278, 280, 281, 282, 283], "100": [235, 236, 237, 274, 280, 281, 282], "25": [235, 236, 280, 281, 282], "calcul": [235, 242, 244], "exactsolut": [235, 236], "obtain": [235, 236, 246, 268], "normal_veloc": [235, 236, 242, 265], "assign": [235, 236, 278], "fall": [235, 236, 284], "accept": [235, 236], "bound": [235, 236], "manufacturedsolut": 236, "exercis": [237, 261, 278, 282], "kpp_test": 237, "mixedlayerdepthsoutput": 237, "idealagetrac": [237, 282], "dimens": [237, 277], "single_column_forc": [237, 282], "profil": [237, 262, 282], "throughout": [237, 277, 282], "idealag": 237, "enabel": 237, "formal": 238, "organ": [238, 240, 243, 264], "conceptu": [238, 245], "broadli": [238, 239, 245], "realist": [238, 264, 290], "greenland": [238, 264, 290], "2000m": [238, 284], "34": [238, 284], "halfar": 238, "cism": 238, "dome_typ": 238, "closest": 238, "put_origin_on_a_cel": 238, "hydrologi": 238, "hydro": [238, 290], "dome_viz": 238, "time_slic": 238, "save_imag": 238, "hide": [238, 265], "hide_fig": 238, "helper": [238, 239], "clutter": 238, "smoke_test": [238, 244], "smoketest": [238, 244], "restart_test": 238, "restarttest": 238, "add_dome_task": 238, "variable_resolut": [238, 242, 284], "talk": 238, "reduc": [238, 242], "among": [238, 240, 246, 265], "encompass": 239, "perspect": 239, "four": 239, "major": [239, 242], "broader": 239, "univers": 239, "add_inertial_gravity_wave_task": 239, "add_manufactured_solution_task": 239, "add_single_column_task": 239, "alphabet": [239, 265], "landice_model": [239, 246], "diagram": 240, "green": 240, "blue": [240, 267, 284], "orang": 240, "red": 240, "laid": 240, "fig": 240, "organiz": 240, "concept": [240, 245, 265, 290], "somewher": 242, "multiprocess": [242, 245, 266], "aspir": 242, "emploi": 242, "unwant": 242, "outer": 242, "inner": 242, "dome_varres_grid": 242, "signific": [242, 243, 244], "neglig": 242, "culled_graph": [242, 265], "meshstep": 242, "getint": 242, "mesh_cpus_per_task": 242, "mesh_min_cpus_per_task": 242, "fit": [242, 266], "applic": [242, 245, 246, 283, 288], "launch": [242, 264], "write_netcdf": [242, 265], "convers": [242, 265], "greater": [242, 265], "graphinfofilenam": [242, 265], "culled_mesh": [242, 265], "use_dist": [242, 265, 277], "gradient_width_dist": [242, 265, 277], "gradient_width_frac": [242, 265, 277], "bottom_temperatur": [242, 265, 277], "surface_temperatur": [242, 265, 277, 282], "temperature_differ": [242, 265, 277], "coriolis_paramet": [242, 265, 277, 280, 281, 282], "x_cell": [242, 265], "y_cell": [242, 265], "bottom_depth": [242, 265, 266, 274, 277, 278, 280, 281, 282, 283], "ones_lik": [242, 265], "zeros_lik": [242, 265], "x_min": [242, 265], "min": [242, 265, 277, 282], "x_max": [242, 265], "y_min": [242, 265], "y_max": [242, 265], "y_mid": [242, 265], "x_perturb_min": [242, 265], "x_perturb_max": [242, 265], "perturb_width": [242, 265, 277], "y_offset": [242, 265], "sin": [242, 265, 277, 280, 281], "pi": [242, 265, 274, 277, 278], "temp_vert": [242, 265], "frac": [242, 265, 274, 277, 280], "logical_and": [242, 265], "transpos": [242, 265], "3rd": [242, 265], "crest": [242, 265, 277], "expand_dim": [242, 265], "dim": [242, 265], "axi": [242, 265], "broadcast": [242, 265], "nedg": [242, 265], "xvertex": [242, 265], "attr": [242, 265], "initial_temperatur": [242, 265], "initial_normal_veloc": [242, 265], "superclass": 242, "commandlin": 242, "harm": 242, "likewis": [242, 265], "subsequ": [242, 289], "arisen": 242, "problemat": 242, "add_depend": 242, "usual": [242, 244, 246, 265, 284], "forwardstep": 242, "mesh_path": 242, "mesh_step": 242, "with_ice_shelf_cav": 242, "initial_state_target": 242, "adjusted_init": 242, "forcing_data": 242, "init_mode_forcing_data": 242, "entha_analy_result": 242, "mat": 242, "enthalpy_benchmark": 242, "ourselv": 242, "problem": [242, 246, 262, 265], "firewal": 242, "bedmachineantarctica_v2_and_gebco_2022_0": 242, "05_degree_20220729": 242, "slate": 242, "icepresent_qu60km_polar": 242, "practic": [242, 245, 246], "straightforward": 242, "commonli": [242, 263], "notat": [242, 283, 288], "phc": [242, 274], "That": [242, 245, 263, 265, 284], "word": 242, "ff": 242, "quwisc240": [242, 245, 284], "90c": 242, "91c": 242, "92": [242, 274], "91": 242, "sowisc12to60": [242, 284], "performance_test": 242, "effici": [242, 265], "transfer": 242, "feasibl": 242, "overhead": 242, "philosophi": [243, 245, 265], "context": [243, 265], "namesak": 243, "256": [243, 268, 272], "count": [243, 263], "quicker": 243, "exce": 243, "offer": 243, "benefit": [243, 264], "bug": 243, "coverag": 243, "exhaust": 243, "recent": [243, 275, 285], "merg": 243, "reach": 243, "steadi": 243, "wet": 243, "fundament": 244, "incorpor": 244, "velo_solv": 244, "sia": [244, 246], "fo": 244, "runmodel": 244, "run_step": 244, "0200": 244, "00_00": [244, 259, 265], "recip": 244, "demonstr": [244, 265], "fairli": [244, 245, 246, 265], "_cosine_bel": 244, "_with_viz": 244, "_setup_step": [244, 265], "_resolut": 244, "remove_step": 244, "analysis_depend": 244, "base_mesh_step": 244, "cos_bell_dir": 244, "_init_": 244, "init_step": 244, "_forward_": 244, "forward_step": 244, "with_viz_dir": 244, "_map_": 244, "_viz_": 244, "rare": [244, 246], "480km": 244, "closer": 244, "imp_r": 244, "joinpath": 244, "initial_condit": 245, "dig": [245, 266], "background": 245, "adher": [245, 265], "pep8": [245, 246], "bot": [245, 274], "violat": 245, "consid": 245, "editor": 245, "pycharm": [245, 246, 265], "spyder": 245, "linter": 245, "flake8": [245, 246], "discourag": [245, 263], "reformat": 245, "autopep8": 245, "undesir": 245, "lint": 245, "wildcard": 245, "vim": [245, 265], "plugin": 245, "id": [245, 246], "commit": [245, 246], "why": 245, "sound": 245, "subpackag": 245, "understand": [245, 266], "downstream": 245, "tutori": [245, 246], "clu": 245, "intro": 245, "docstr": [245, 264, 265], "strip": 245, "mpas_ocean": 245, "hidden": 245, "shortcut": [245, 284], "referenc": [245, 265], "mention": 245, "dot": 245, "charact": 245, "unix": [245, 264], "distinct": 245, "mayb": [245, 265], "machine_config": 245, "endswith": 245, "splitext": 245, "exactli": [245, 246, 265, 274], "move": [245, 246, 265, 283, 288], "renam": 245, "visa": 245, "versa": 245, "comfort": [245, 265], "inherit": [245, 265], "orient": 245, "program": [245, 266], "led": 245, "felt": 245, "contribut": 245, "hesit": 245, "predecessor": [245, 263, 264], "clumsi": 245, "harder": 245, "outcom": 245, "augment": 245, "explain": 245, "hope": 245, "dens": 245, "learn": [245, 265], "curv": 245, "worth": [245, 265], "skill": 245, "endeavor": 245, "readabl": 245, "manipul": 245, "get_available_cores_and_nod": 245, "theoret": 245, "dozen": 245, "theori": 245, "biogeochemistri": 245, "ksh": 246, "mac": [246, 264], "csh": 246, "tcsh": 246, "temporarili": 246, "recogn": [246, 266, 284], "permiss": 246, "anyon": 246, "caus": [246, 268, 272, 274], "person": [246, 262], "base_path_to_install_or_update_conda": 246, "with_netlib_lapack": 246, "flavor": [246, 265], "troubl": [246, 265], "recognit": 246, "trilino": 246, "downsid": 246, "unneed": 246, "reinstal": 246, "caution": 246, "load_": 246, "encod": 246, "load_dev_polaris_": [246, 265], "env_nam": 246, "dev_polaris_": [246, 262], "workdir": [246, 284], "unexpect": [246, 263, 265], "occur": [246, 262], "echo": 246, "proceed": 246, "notic": 246, "conda_env": [246, 270, 284], "rememb": 246, "incorrect": 246, "unus": 246, "session": [246, 265], "pip": 246, "substanti": 246, "risk": [246, 265], "unsupport": 246, "env_onli": 246, "mpas_make_target": [246, 284], "scientif": [246, 284], "_albani": 246, "instruct": [246, 265], "es3m": 246, "compli": 246, "memor": 246, "guidelin": 246, "complianc": 246, "checker": 246, "isort": 246, "flynt": 246, "mypi": 246, "77": 246, "e302": 246, "blank": 246, "resolv": 246, "simpler": [246, 265], "new_branch_nam": 246, "put": [246, 265], "disk": [246, 266, 268, 272], "respons": 246, "simplest": 246, "your_new_branch": 246, "restart_filenam": 252, "polaris_branch": 258, "post": 258, "src": 258, "registry_process": 258, "seaice_model": 258, "1m": [259, 287], "disc": [259, 287], "config_initial_ice_area": 259, "config_initial_ice_volum": 259, "config_atmospheric_forcing_typ": 259, "config_forcing_start_tim": 259, "config_forcing_cycle_start": 259, "config_forcing_cycle_dur": 259, "config_forcing_precipitation_unit": 259, "mm_per_sec": 259, "config_forcing_sst_typ": 259, "ncar": 259, "config_update_ocean_flux": 259, "config_include_pond_freshwater_feedback": 259, "standard_phys": 261, "standardphys": 261, "year": [261, 275, 287], "volum": 261, "snow": 261, "exact_restart": 261, "exactrestart": 261, "geo": 262, "cartopi": 262, "14": 262, "np110py27_4": 262, "calledprocesserror": 262, "deploy_tmp": 262, "vpn": 262, "site": 262, "shell": [262, 264], "honor": 262, "wide": 262, "spawn": 262, "usernam": [262, 265, 268, 272], "proxy_en": 262, "all_proxi": 262, "proxyout": 262, "8080": 262, "no_proxi": 262, "localhost": [262, 266, 271, 272, 284], "127": 262, "proxy_dis": 262, "unset": 262, "anytim": 262, "fatal": 262, "mpi_init": 262, "stack": 262, "mpir_init_thread": 262, "159": 262, "mpid_init": 262, "164": 262, "mpidi_ch3_init": 262, "95": 262, "mpid_nem_init": 262, "314": 262, "mpid_nem_tcp_init": 262, "173": 262, "mpid_nem_tcp_get_business_card": 262, "395": 262, "getsockinterfaceaddr": 262, "369": 262, "pn2034311": 262, "errno": 262, "host": [262, 266, 271, 284], "focus": 263, "plu": 263, "autom": 264, "exascal": 264, "earth": 264, "kept": 264, "boundari": [264, 277, 290], "expert": 264, "uncoupl": 264, "quick": [264, 265, 275, 285], "queue": 264, "beginn": [264, 265], "advanc": [264, 265], "mpas_to_yaml": 264, "troubleshoot": 264, "proxi": 264, "lanl": [264, 266, 268], "gethostbynam": 264, "glossari": 265, "stick": 265, "miniconda": 265, "3_chrysalis_intel_openmpi": 265, "strict": 265, "push": 265, "lowercas": 265, "hyphen": 265, "settl": 265, "desktop": 265, "realli": [265, 272], "nice": [265, 272], "supercomput": 265, "yet_another_channel": 265, "testgroup": 265, "vi": 265, "polaris_head": 265, "yetanotherchannel": 265, "instanc": 265, "repres": [265, 274, 278], "highli": 265, "camelcas": 265, "capit": 265, "letter": 265, "cap": 265, "awkward": 265, "encourag": 265, "enclos": 265, "briefli": 265, "baroclinicchannel": 265, "globalconverg": 265, "add_test_group": 265, "interest": 265, "test_group": 265, "add_test_cas": 265, "anyth": 265, "testcas": [265, 266, 277, 282, 284], "probabl": [265, 271], "suppos": 265, "easili": 265, "tide": 265, "sai": [265, 271], "res_str": 265, "1000": [265, 266, 274, 277, 280, 281], "still": [265, 275, 283, 284, 288], "ti": 265, "loop": 265, "1km": [265, 277, 284], "4km": [265, 277, 284], "coarsest": [265, 266], "especi": 265, "promot": 265, "pattern": 265, "familiar": 265, "seen": 265, "brows": 265, "row": 265, "disadvantag": 265, "foremost": 265, "magic": 265, "effect": [265, 283], "pain": 265, "160": [265, 277], "500": [265, 266, 274, 277], "path_to_mpas_ocean": 265, "path_to_working_dir": 265, "cat": 265, "slurm_jobid": 265, "_run_test": 265, "gpf": 265, "fs1": 265, "cbegeman": 265, "grid_typ": [265, 266, 274, 277, 278, 280, 281, 282, 283], "vert_level": [265, 266, 274, 277, 278, 280, 281, 282, 283], "coord_typ": [265, 274, 277, 278, 280, 281, 282, 283], "partial_cell_typ": [265, 274, 277, 278, 280, 281, 282, 283], "min_pc_fract": [265, 274, 277, 278, 280, 281, 282, 283], "everywher": 265, "depress": [265, 274], "mostli": 265, "logic": [265, 277], "northern": [265, 277], "half": [265, 277], "southern": [265, 277], "halv": [265, 277], "gradient": [265, 277, 280, 281, 282], "500km": [265, 277], "40e3": [265, 277], "35": [265, 277, 278, 282, 283, 284, 288], "2e": [265, 277], "connect": [265, 272], "match": 265, "light": 265, "e3sm_compon": 265, "interact": [265, 268, 271, 272, 284], "interrupt": 265, "pty": 265, "navig": 265, "newli": 265, "bunch": 265, "didn": 265, "mistak": 265, "finger": 265, "cross": 265, "initial_normalveloc": 265, "initial_salin": 265, "obvious": 265, "stress": [265, 282], "landicemodelstep": 265, "huge": 265, "cp": 265, "05": 265, "hmix_del2": 265, "bottom_drag": 265, "cvmix": 265, "0002": 265, "filename_interv": 265, "0100": 265, "input_interv": 265, "initial_onli": 265, "basicmesh": 265, "dayssincestart": 265, "surfacespe": 265, "lowersurfac": 265, "uppersurfac": 265, "ureconstructx": 265, "ureconstructi": 265, "great": 265, "remain": [265, 278, 282], "load_dataset": 265, "final_temperatur": 265, "ab": 265, "proc": 265, "area": 265, "4proc": [265, 277], "8proc": [265, 277], "markdown": 265, "developers_guid": 265, "users_guid": 265, "daunt": 265, "flesh": 265, "bonu": 265, "improv": 265, "introduc": 265, "techniqu": 265, "cannot": 265, "aim": 265, "constrain_resourc": 265, "becam": 265, "mainten": 265, "counter": 265, "thought": 265, "yet_another_channel_test_cas": 265, "yetanotherchanneltestcas": 265, "choic": [265, 278], "spuriou": [265, 277], "dissip": [265, 277], "pop": [265, 277], "mom": [265, 277], "mitgcm": [265, 277], "higher": 265, "heavi": 265, "analogi": 265, "tet": 265, "bear": 265, "late": 265, "_add_step": 265, "startswith": 265, "enumer": 265, "rpe_": 265, "_nu_": 265, "privat": 265, "break": [265, 277], "unusu": 265, "rpe_1_nu_1": [265, 277], "rpe_2_nu_5": [265, 277], "rpe_3_nu_10": 265, "rpe_4_nu_20": 265, "rpe_5_nu_200": 265, "20_00": 265, "0000": 265, "dayssincestartofsim": 265, "relativevort": 265, "pyplot": 265, "plt": 265, "output_": 265, "sections_yet_another_channel_": 265, "rpe_t": 265, "init_filenam": 265, "initial_state_file_nam": 265, "ds_init": 265, "_plot": 265, "dirti": 265, "adopt": 265, "lesson": 265, "tricki": 265, "commun": 265, "nuanc": 265, "fake": 265, "wasn": 265, "fold": 265, "proper": 265, "third": 265, "previous": 265, "extens": 266, "multinod": [266, 284], "explanatori": 266, "my_machin": 266, "extend": 266, "gitconfig": 266, "enter": 266, "author": 266, "email": 266, "pull_request": 266, "28": 266, "address": 266, "metadata": 266, "customize_config_pars": 266, "server_base_url": 266, "inej": 266, "check_siz": 266, "ssl": 266, "certif": 266, "core_path": 266, "partition_execut": 266, "dask": 266, "netcdf4": 266, "netcdf4_class": 266, "netcdf3_64bit": 266, "netcdf3_class": 266, "engin": 266, "scipi": 266, "mesh_databas": 266, "ocean_database_root": 266, "landice_database_root": 266, "mesh_cor": 266, "mesh_min_cor": 266, "mesh_max_memori": 266, "mesh_max_disk": 266, "init_cor": 266, "init_min_cor": 266, "init_max_memori": 266, "init_max_disk": 266, "init_thread": 266, "forward_cor": 266, "forward_min_cor": 266, "forward_thread": 266, "forward_max_memori": 266, "forward_max_disk": 266, "add_metadata": 266, "ec": 266, "wc": 266, "mesh_descript": 266, "autodetect": 266, "bathy_descript": 266, "gebco": 266, "2022": 266, "bedmachin": 266, "antarctica": 266, "init_descript": 266, "e3sm_vers": 266, "increment": 266, "mesh_revis": 266, "finest": 266, "min_r": 266, "max_r": 266, "max_depth": 266, "creation_d": 266, "peopl": 266, "contact": 266, "temperaturemax": 266, "statist": 266, "temperature_max": 266, "33": [266, 284], "enable_ocean_initial_condit": 266, "enable_ocean_graph_partit": 266, "enable_seaice_initial_condit": 266, "scrip": 266, "enable_scrip": 266, "transect": 266, "onlin": 266, "member": 266, "offlin": 266, "enable_diagnostics_fil": 266, "coarser": [266, 278], "finer": 266, "comparisonlatresolut": 266, "comparisonlonresolut": 266, "antarct": 266, "polar": [266, 267, 269, 274], "stereograph": 266, "comparisonantarcticstereowidth": 266, "6000": [266, 274], "comparisonantarcticstereoresolut": 266, "arctic": [266, 287], "comparisonarcticstereowidth": 266, "comparisonarcticstereoresolut": 266, "tanh_dz": 266, "16": [266, 282, 284], "3000": 266, "min_layer_thick": [266, 274], "max_layer_thick": [266, 274], "retain": 266, "ecosystem": 267, "gain": 267, "confluenc": 267, "public_html": [267, 269, 271], "soft": [267, 269, 271, 284], "mpi_intel": [267, 269, 270, 271], "36": [267, 271, 282, 284], "condo": [267, 284], "acm": [267, 284], "medium": 267, "acme_high": 267, "load_latest_polaris_intel_impi": [267, 270], "load_latest_polaris_gnu_openmpi": [267, 269, 284], "dst": 268, "calendar": 268, "network": 268, "introduct": 268, "platform": 268, "batch": 268, "wtrw": 268, "ch": 268, "fe": 268, "lustr": 268, "scratch4": 268, "scratch5": 268, "sacctmgr": 268, "assoc": 268, "cluster": 268, "45": 268, "sshare": 268, "sreport": 268, "accountutilizationbyus": 268, "2019": 268, "prioriti": 268, "yellow": 268, "chkhome": 268, "petabyt": 268, "df": 268, "bp": 268, "archiv": [268, 272], "hpss": [268, 272], "front": 268, "tn": 268, "storag": 268, "project_nam": 268, "salloc": [268, 271, 272], "account_nam": 268, "gpu": [268, 272], "hyperthread": [268, 272], "hang": [268, 272], "threads_per_cor": [268, 272], "shared_clim": [268, 284], "load_latest_polaris_gnu_mpich": [268, 272], "load_latest_polaris_intel_openmpi": 269, "compyf": 270, "app": [270, 284], "pmi2": 270, "40": 270, "submit": 271, "workload": 271, "squeue": 271, "my_usernam": [271, 272], "scancel": 271, "jobid": 271, "cancel": 271, "emtpi": 271, "three": [271, 290], "mpi_mpich": [271, 284], "mpi_openmpi": [271, 284], "nompi": [271, 284], "p1": 272, "nersc": 272, "iri": 272, "filesystem": 272, "myquota": 272, "prjquota": 272, "projectid": 272, "m1795": 272, "hsi": 272, "htar": 272, "zstash": 272, "cf": [272, 284], "cdir": [272, 284], "premium": 272, "cray_compil": 272, "8844": 272, "monik": 272, "browser": 272, "grab": 272, "logon": 272, "kernel": 272, "myenv": 272, "ipykernel": 272, "kernelspec": 272, "u1": 272, "interpret": 272, "argv": 272, "ipykernel_launch": 272, "connection_fil": 272, "display_nam": 272, "languag": 272, "2500": 274, "deepest": 274, "stewart": 274, "2017": 274, "delta": [274, 277, 282], "z_2": 274, "z_1": 274, "mathrm": 274, "tanh": 274, "rightarrow": 274, "infti": 274, "z_k": 274, "z_0": 274, "z_": [274, 282], "k": 274, "finder": 274, "n_z": 274, "h_": 274, "scienc": 274, "hydrograph": 274, "climatologi": 274, "250": 274, "5500": 274, "renorm": 274, "51": 274, "221": 274, "ziso": [274, 290], "63": 274, "floor": 274, "flat": [274, 277], "collaps": 274, "adcroft": 274, "campin": 274, "2004": 274, "absenc": 274, "squash": 274, "watercolumn": 274, "press": 274, "batymetri": 274, "stair": 274, "month": 275, "websit": [275, 285], "release_6": 275, "ilicak": 277, "2012": 277, "variat": 277, "distinguish": 277, "zonal": [277, 282], "meridion": [277, 282], "psu": [277, 282], "cooler": 277, "north": 277, "sinusoid": 277, "perturb": [277, 278, 281], "t_0": 277, "t_b": 277, "t_": 277, "z_b": 277, "y_": 277, "l_x": 277, "warmer": 277, "ge": [277, 278], "gradient_width_fract": 277, "l_y": 277, "le": [277, 282], "flow": [277, 278], "stationari": [277, 282], "literatur": 277, "mk": 277, "celsiu": 277, "prognost": 277, "williamson": 278, "1992": 278, "sec": 278, "3a": 278, "skamarock": 278, "gassmann": 278, "bodi": 278, "rotat": [278, 280, 281], "transport": 278, "psi": 278, "proportion": 278, "slow": 278, "icosohydr": 278, "nearest": 278, "insensit": [278, 282], "300": [278, 283], "passiv": 278, "psi_0": 278, "co": [278, 280, 281], "radiu": 278, "debug_tracers_1": 278, "equatori": 278, "u_0": 278, "tau": 278, "transit": 278, "equat": [278, 280, 281, 282], "vel_pd": 278, "tendenc": [278, 281], "rung": 278, "kutta": 278, "4th": 278, "multipli": 278, "her": 278, "rad": 278, "lat_cent": 278, "lon_cent": 278, "14159265": 278, "2123666": 278, "6667": 278, "hill": 278, "psi0": 278, "qu_conv_thresh": 278, "qu_conv_max": 278, "icos_conv_thresh": 278, "icos_conv_max": 278, "roughli": 278, "studi": 278, "propag": [280, 281], "doubli": [280, 281], "assess": [280, 281], "numer": [280, 281], "accuraci": [280, 281], "discret": [280, 281], "bishnu": [280, 281], "friction": [280, 281], "neglect": [280, 281], "nonlinear": [280, 281], "analyt": [280, 290], "k_x": [280, 281], "k_y": [280, 281], "accord": [280, 281, 284], "availi": [280, 281], "10000": [280, 281], "coriloi": 280, "1e": 280, "amplitud": [280, 281], "ssh_amplitud": [280, 281], "wavelength": [280, 281], "n_wavelengths_x": [280, 281], "n_wavelengths_i": [280, 281], "conv_thresh": [280, 281], "conv_max": [280, 281], "embed": 281, "eta_0": 281, "span": 282, "arbitrarili": 282, "chosen": 282, "virtu": 282, "examin": 282, "400": 282, "phi": 282, "phi_0": 282, "dz": 282, "ml": 282, "mld": 282, "surface_x": 282, "x_gradient_mixed_lay": 282, "mixed_layer_depth_x": 282, "x_difference_across_mixed_lay": 282, "x_gradient_interior": 282, "spatial": 282, "4x4": 282, "960": 282, "degc": 282, "temperature_gradient_mixed_lay": 282, "temperature_difference_across_mixed_lay": 282, "temperature_gradient_interior": 282, "mixed_layer_depth_temperatur": 282, "surface_salin": 282, "salinity_gradient_mixed_lay": 282, "salinity_difference_across_mixed_lay": 282, "salinity_gradient_interior": 282, "mixed_layer_depth_salin": 282, "scheme": 282, "dictat": 282, "kpp": 282, "restor": 282, "piston": 282, "toward": 282, "temperature_surface_restoring_valu": 282, "temperature_piston_veloc": 282, "salinity_surface_restoring_valu": 282, "salinity_piston_veloc": 282, "temperature_interior_restoring_r": 282, "salinity_interior_restoring_r": 282, "net": 282, "latent": 282, "heat": 282, "bulk": 282, "latent_heat_flux": 282, "sensibl": 282, "sensible_heat_flux": 282, "solar": 282, "shortwav": 282, "shortwave_heat_flux": 282, "evapor": 282, "evaporation_flux": 282, "5e": 282, "rain": 282, "rain_flux": 282, "wind": 282, "wind_stress_zon": 282, "wind_stress_meridion": 282, "welcom": [283, 288], "icosohedr": [283, 288], "pertain": [283, 288], "inher": 283, "warrant": 283, "investig": 283, "load_latest_polari": 284, "minu": 284, "create_polaris_load_script": 284, "load_polaris_1": 284, "0_mpich": 284, "exclud": 284, "wiki": 284, "circular_shelf": 284, "sia_smoke_test": 284, "sia_decomposition_test": 284, "sia_restart_test": 284, "fo_smoke_test": 284, "fo_decomposition_test": 284, "fo_restart_test": 284, "37": 284, "17": 284, "210131_test_new_branch": 284, "my_config": 284, "smaller": 284, "previous_workdir": 284, "paper": 284, "recompil": 284, "safer": 284, "preserv": 284, "test_subdir": 284, "whatev": 284, "clock": 284, "j": 284, "exclus": 284, "job_nam": 284, "fo_integr": 284, "sia_integr": 284, "cosine_bell_cached_init": [284, 289], "ec30to60": 284, "ecwisc30to60": 284, "qu240_for_e3sm": 284, "quwisc240_for_e3sm": 284, "wc14": 284, "suitenam": 284, "seaice_standalone_framework": 285, "71": 287, "35n": 287, "156": 287, "5w": 287, "atmospher": 287, "timeseri": 287, "pair": 287, "prohibit": 289, "speed": 289, "radial": 290}, "objects": {"polaris": [[19, 0, 1, "", "Component"], [24, 0, 1, "", "ModelStep"], [37, 0, 1, "", "Step"], [48, 0, 1, "", "Task"]], "polaris.Component": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_config"], [21, 1, 1, "", "add_step"], [22, 1, 1, "", "add_task"], [23, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[24, 1, 1, "", "__init__"], [25, 1, 1, "", "add_model_config_options"], [26, 1, 1, "", "add_namelist_file"], [27, 1, 1, "", "add_streams_file"], [28, 1, 1, "", "add_yaml_file"], [29, 1, 1, "", "dynamic_model_config"], [30, 1, 1, "", "map_yaml_to_namelist"], [31, 1, 1, "", "partition"], [32, 1, 1, "", "process_inputs_and_outputs"], [33, 1, 1, "", "runtime_setup"], [34, 1, 1, "", "set_model_resources"], [35, 1, 1, "", "setup"], [36, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[37, 1, 1, "", "__init__"], [38, 1, 1, "", "add_dependency"], [39, 1, 1, "", "add_input_file"], [40, 1, 1, "", "add_output_file"], [41, 1, 1, "", "constrain_resources"], [42, 1, 1, "", "run"], [43, 1, 1, "", "runtime_setup"], [44, 1, 1, "", "set_resources"], [45, 1, 1, "", "set_shared_config"], [46, 1, 1, "", "setup"], [47, 1, 1, "", "validate_baselines"]], "polaris.Task": [[48, 1, 1, "", "__init__"], [49, 1, 1, "", "add_step"], [50, 1, 1, "", "configure"], [51, 1, 1, "", "remove_step"], [52, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[53, 2, 1, "", "main"]], "polaris.cache": [[54, 2, 1, "", "update_cache"]], "polaris.components": [[55, 2, 1, "", "get_components"]], "polaris.config": [[56, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[56, 1, 1, "", "__init__"], [57, 1, 1, "", "setup"]], "polaris.io": [[58, 2, 1, "", "download"], [59, 3, 0, "-", "imp_res"], [60, 2, 1, "", "symlink"]], "polaris.job": [[61, 2, 1, "", "get_slurm_options"], [62, 2, 1, "", "write_job_script"]], "polaris.list": [[63, 2, 1, "", "list_cases"], [64, 2, 1, "", "list_machines"], [65, 2, 1, "", "list_suites"]], "polaris.logging": [[66, 2, 1, "", "log_method_call"]], "polaris.mesh": [[67, 0, 1, "", "IcosahedralMeshStep"], [74, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [69, 1, 1, "", "get_cell_width"], [70, 1, 1, "", "get_subdivisions"], [71, 1, 1, "", "make_jigsaw_mesh"], [72, 1, 1, "", "run"], [73, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "build_cell_width_lat_lon"], [76, 1, 1, "", "make_jigsaw_mesh"], [77, 1, 1, "", "run"], [78, 1, 1, "", "setup"]], "polaris.mesh.planar": [[79, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[80, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "run"], [82, 1, 1, "", "save_and_plot_cell_width"], [83, 1, 1, "", "setup"]], "polaris.model_step": [[84, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[85, 2, 1, "", "ingest"], [86, 2, 1, "", "parse_replacements"], [87, 2, 1, "", "replace"], [88, 2, 1, "", "write"]], "polaris.ocean": [[136, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[136, 1, 1, "", "__init__"]], "polaris.ocean.convergence.spherical": [[137, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[137, 1, 1, "", "__init__"]], "polaris.ocean.mesh.spherical": [[138, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[139, 0, 1, "", "OceanModelStep"], [144, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "compute_cell_count"], [141, 1, 1, "", "constrain_resources"], [142, 1, 1, "", "map_yaml_to_namelist"], [143, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[145, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[146, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[147, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[147, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[148, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[148, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[149, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "compute_cell_count"], [151, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[152, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "run"], [154, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[155, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[155, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[156, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[158, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[160, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "run"], [162, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[163, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[163, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[164, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[166, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[168, 0, 1, "", "CosineBell"], [170, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[171, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "rmse"], [173, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.forward": [[174, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "compute_cell_count"], [176, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[177, 0, 1, "", "Init"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[179, 0, 1, "", "Viz"], [181, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[183, 0, 1, "", "InertialGravityWave"], [184, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[183, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[185, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[187, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "normal_velocity"], [189, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[190, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "compute_cell_count"], [192, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[193, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[195, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[197, 0, 1, "", "ManufacturedSolution"], [198, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[197, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[199, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[201, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "normal_velocity"], [203, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[204, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "compute_cell_count"], [206, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[207, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[209, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[211, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[212, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[212, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[213, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[213, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[214, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[214, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[215, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[217, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[217, 1, 1, "", "__init__"], [218, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[219, 2, 1, "", "generate_1d_grid"], [220, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[221, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[222, 2, 1, "", "alter_bottom_depth"], [223, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[224, 2, 1, "", "compute_min_max_level_cell"], [225, 2, 1, "", "compute_z_level_layer_thickness"], [226, 2, 1, "", "compute_z_level_resting_thickness"], [227, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[228, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[89, 2, 1, "", "get_available_parallel_resources"], [90, 2, 1, "", "get_parallel_command"], [91, 2, 1, "", "run_command"], [92, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[93, 2, 1, "", "write"]], "polaris.remap": [[94, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[94, 1, 1, "", "__init__"], [95, 1, 1, "", "dst_from_lon_lat"], [96, 1, 1, "", "dst_from_mpas"], [97, 1, 1, "", "dst_from_points"], [98, 1, 1, "", "dst_from_proj"], [99, 1, 1, "", "dst_global_lon_lat"], [100, 1, 1, "", "get_remapper"], [101, 1, 1, "", "runtime_setup"], [102, 1, 1, "", "src_from_lon_lat"], [103, 1, 1, "", "src_from_mpas"], [104, 1, 1, "", "src_from_proj"]], "polaris.run": [[105, 2, 1, "", "complete_step_run"], [106, 2, 1, "", "load_dependencies"], [109, 2, 1, "", "setup_config"], [110, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[107, 2, 1, "", "run_single_step"], [108, 2, 1, "", "run_tasks"]], "polaris.seaice": [[249, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[249, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[250, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[251, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[251, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[252, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[252, 1, 1, "", "__init__"], [253, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[254, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[254, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[255, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[255, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[256, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "run"]], "polaris.setup": [[111, 2, 1, "", "setup_task"], [112, 2, 1, "", "setup_tasks"]], "polaris.streams": [[113, 2, 1, "", "read"], [114, 2, 1, "", "update_defaults"], [115, 2, 1, "", "update_tree"], [116, 2, 1, "", "write"]], "polaris.suite": [[117, 2, 1, "", "setup_suite"]], "polaris.validate": [[118, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[119, 2, 1, "", "plot_global"]], "polaris.viz": [[120, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[121, 0, 1, "", "PolarisYaml"], [125, 2, 1, "", "main_mpas_to_yaml"], [126, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [127, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "read"], [123, 1, 1, "", "update"], [124, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 265], "share": [1, 6, 9, 245, 265], "step": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 134, 242, 265, 277, 278, 280, 281, 282, 283, 288], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 42, 72, 77, 81, 105, 106, 107, 108, 109, 110, 135, 153, 161, 165, 167, 173, 178, 180, 182, 186, 194, 196, 200, 208, 210, 216, 218, 242, 246, 253, 257, 277, 278, 280, 281, 282, 283, 284, 287, 288], "onc": 1, "befor": 1, "depend": [1, 6, 242], "output": [1, 242, 265], "daughter": 1, "task": [1, 3, 48, 49, 50, 51, 52, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 234, 238, 241, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 260, 265, 279, 283, 284, 286, 288, 290], "work": 1, "directori": [1, 240], "structur": [1, 240], "i": [1, 284], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 246, 264, 266, 284], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 18, 135, 242, 246, 271], "other": [1, 132, 242, 265, 271, 284], "implement": [1, 2], "set": [1, 135, 246, 284], "up": [1, 246, 284], "test": [1, 2, 6, 134, 135, 265, 266, 287], "And": 1, "valid": [1, 2, 3, 17, 118, 164, 165, 232, 252, 253, 265, 284], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 135, 246, 265, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 282, 283, 287, 288], "same": 2, "api": 3, "refer": [3, 134, 135], "compon": [3, 14, 19, 20, 21, 22, 23, 55, 135, 229, 239, 245, 246, 258, 275, 284, 285], "polari": [3, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 242, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 284], "framework": [3, 10, 134, 135, 232, 233, 235, 236, 237, 245, 248, 261, 273], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 63, 64, 65], "setup": [3, 5, 8, 35, 46, 57, 73, 78, 83, 111, 112, 143, 154, 162, 242], "suit": [3, 5, 8, 117, 243, 276, 284, 289], "cach": [3, 5, 8, 54, 242], "mpas_to_yaml": [3, 5], "base": [3, 134], "class": [3, 245], "modelstep": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "config": [3, 6, 9, 14, 56, 57, 132, 135, 239, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 282, 283, 287, 288], "io": [3, 11, 58, 59, 60], "job": [3, 61, 62, 271, 284], "log": [3, 12, 66], "mesh": [3, 13, 14, 18, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 134, 135, 138, 265, 277, 278, 280, 281, 282, 283, 287, 288], "model_step": [3, 84], "namelist": [3, 14, 85, 86, 87, 88, 135], "parallel": [3, 89, 90, 91, 92], "proven": [3, 15, 93], "remap": [3, 16, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "stream": [3, 14, 113, 114, 115, 116, 135, 265], "viz": [3, 119, 120, 166, 167, 179, 180, 181, 182, 195, 196, 209, 210, 217, 218, 233, 235, 236, 237, 256, 257, 261, 265], "yaml": [3, 14, 121, 122, 123, 124, 125, 126, 127, 135], "build": [4, 132, 246, 284], "serial": [5, 8, 107, 108], "deploi": 6, "new": [6, 132, 265], "spack": [6, 132, 246, 284], "environ": [6, 132, 246, 262, 284], "where": 6, "we": 6, "updat": [6, 14, 123, 246], "mach": 6, "conda": [6, 246, 262, 271, 284], "identifi": 6, "e3sm": [6, 14, 135, 246, 284], "machin": [6, 132, 246, 271, 284], "describ": [6, 132], "modul": [6, 8, 245, 246], "env": 6, "variabl": [6, 17], "etc": 6, "creat": [6, 246, 265], "remot": [6, 272], "branch": 6, "petsc": [6, 246], "netlib": [6, 246], "lapack": [6, 246], "albani": [6, 246], "troubleshoot": [6, 246, 262], "mpa": [6, 135, 231, 259], "ocean": [6, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 275], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 132, 135, 239, 242, 265, 266], "comment": 9, "symlink": [11, 60, 242], "download": [11, 58, 242], "spheric": [13, 18, 80, 81, 82, 83, 134, 135, 137, 138], "planar": [13, 18, 79], "uniform": [13, 135, 274], "gener": 13, "model": [14, 134, 135, 139, 140, 141, 142, 143, 144, 230, 259, 265, 284], "an": [14, 135, 265], "ad": [14, 132, 242, 265], "dynam": [14, 265], "input": [14, 242], "partit": [14, 31], "pio": 14, "make": [14, 265], "graph": 14, "against": 17, "baselin": 17, "norm": 17, "visual": [18, 265, 287], "horizont": [18, 265], "field": 18, "global": 18, "lat": 18, "lon": 18, "plot": [18, 265], "add_config": 20, "add_step": [21, 49], "add_task": 22, "remove_step": [23, 51], "add_model_config_opt": 25, "add_namelist_fil": 26, "add_streams_fil": 27, "add_yaml_fil": 28, "dynamic_model_config": [29, 151, 157, 176, 192, 206], "map_yaml_to_namelist": [30, 142], "process_inputs_and_output": 32, "runtime_setup": [33, 43, 101, 242], "set_model_resourc": 34, "update_namelist_pio": 36, "add_depend": 38, "add_input_fil": 39, "add_output_fil": 40, "constrain_resourc": [41, 141, 242], "set_resourc": 44, "set_shared_config": [45, 52], "validate_baselin": 47, "configur": [50, 159, 169, 244, 262], "__main__": 53, "main": 53, "update_cach": 54, "get_compon": 55, "polarisconfigpars": [56, 57], "imp_r": 59, "get_slurm_opt": 61, "write_job_script": 62, "list_cas": 63, "list_machin": 64, "list_suit": 65, "log_method_cal": 66, "icosahedralmeshstep": [67, 68, 69, 70, 71, 72, 73], "build_subdivisions_cell_width_lat_lon": 68, "get_cell_width": 69, "get_subdivis": 70, "make_jigsaw_mesh": [71, 76], "quasiuniformsphericalmeshstep": [74, 75, 76, 77, 78], "build_cell_width_lat_lon": 75, "compute_planar_hex_nx_ni": 79, "sphericalbasestep": [80, 81, 82, 83], "save_and_plot_cell_width": 82, "make_graph_fil": 84, "ingest": 85, "parse_replac": 86, "replac": 87, "write": [88, 93, 116, 124], "get_available_parallel_resourc": 89, "get_parallel_command": 90, "run_command": 91, "set_cores_per_nod": 92, "mappingfilestep": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "dst_from_lon_lat": 95, "dst_from_mpa": 96, "dst_from_point": 97, "dst_from_proj": 98, "dst_global_lon_lat": 99, "get_remapp": 100, "src_from_lon_lat": 102, "src_from_mpa": 103, "src_from_proj": 104, "complete_step_run": 105, "load_depend": 106, "run_single_step": 107, "run_task": 108, "setup_config": 109, "unpickle_suit": 110, "setup_task": [111, 112], "read": [113, 122], "update_default": 114, "update_tre": 115, "setup_suit": 117, "compare_vari": 118, "globe": 119, "plot_glob": 119, "plot_horiz_field": 120, "polarisyaml": [121, 122, 123, 124], "main_mpas_to_yaml": 125, "mpas_namelist_and_streams_to_yaml": 126, "yaml_to_mpas_stream": 127, "anvil": [128, 267], "intel": [128, 130, 131, 267, 269, 270], "gnu": [128, 129, 130, 131, 133, 267, 268, 269, 272], "chicoma": [129, 268], "cpu": [129, 133, 268, 272], "chrysali": [130, 269], "compymcnodefac": [131, 270], "support": [132, 230, 246, 259, 271, 284], "perlmutt": [133, 272], "pm": 133, "baroclinic_channel": [134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 232], "inertial_gravity_wav": [134, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 235], "cosine_bel": [134, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 233, 276], "manufactured_solut": [134, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 236], "single_column": [134, 211, 212, 213, 214, 215, 216, 217, 218, 237, 247, 250, 251, 252, 253, 254, 255, 256, 257, 261], "converg": [134, 135, 137, 281], "potenti": [134, 135], "energi": [134, 135], "rpe": [134, 135, 145, 158, 159, 160, 161, 162, 232, 277], "vertic": [134, 135, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 265, 274, 277, 278, 280, 281, 282, 283], "coordin": [134, 135, 265, 274], "v": 135, "map": 135, "omega": 135, "mpi": [135, 271], "resourc": 135, "time": [135, 265, 277, 278, 280, 281, 282, 283, 288], "interv": 135, "quasi": 135, "icosahedr": 135, "rest": 135, "sphericalconvergenceforward": 137, "add_spherical_base_mesh_step": 138, "oceanmodelstep": [139, 140, 141, 142, 143], "compute_cell_count": [140, 150, 175, 191, 205], "get_time_interval_str": 144, "compute_rp": 145, "add_baroclinic_channel_task": 146, "decomp": [147, 232, 277], "default": [148, 232, 265, 277], "forward": [149, 150, 151, 174, 175, 176, 190, 191, 192, 204, 205, 206, 213, 232, 233, 235, 236, 237, 254, 261, 265], "init": [152, 153, 154, 177, 178, 193, 194, 207, 208, 215, 216, 232, 233, 235, 236, 237, 265], "restart": [155, 156, 157, 232, 277, 287], "restart_step": [156, 157], "restartstep": [156, 157], "analysi": [160, 161, 162, 171, 172, 173, 185, 186, 199, 200, 233, 235, 236, 265], "thread": [163, 232, 277], "cosinebel": [168, 169], "add_cosine_bell_task": 170, "rmse": 172, "vizmap": [181, 182], "inertialgravitywav": 183, "add_inertial_gravity_wave_task": 184, "exact_solut": [187, 188, 189, 201, 202, 203, 235, 236], "exactsolut": [187, 188, 189, 201, 202, 203], "normal_veloc": [188, 202], "ssh": [189, 203], "manufacturedsolut": 197, "add_manufactured_solution_task": 198, "add_single_column_task": [211, 250], "cvmix": [212, 237, 282], "ideal_ag": 214, "idealag": 214, "grid_1d": [219, 220], "generate_1d_grid": 219, "write_1d_grid": 220, "init_vertical_coord": 221, "partial_cel": [222, 223], "alter_bottom_depth": 222, "alter_ssh": 223, "zlevel": [224, 225, 226, 227], "compute_min_max_level_cel": 224, "compute_z_level_layer_thick": 225, "compute_z_level_resting_thick": 226, "init_z_level_vertical_coord": 227, "zstar": 228, "init_z_star_vertical_coord": 228, "initi": [231, 259, 265, 277, 278, 280, 281, 282, 283, 287, 288], "condit": [231, 259, 265, 277, 278, 280, 281, 282, 283, 287, 288], "boundari": 231, "forc": [231, 259, 277, 278, 280, 281, 282, 283, 287, 288], "base_mesh": 233, "ideal": [237, 282], "ag": [237, 282], "categori": [238, 283, 288], "constructor": [239, 242, 244], "organ": 241, "attribut": [242, 244], "copi": 242, "pull": 243, "request": 243, "pr": 243, "nightli": 243, "overview": 245, "code": [245, 246, 265], "style": [245, 246], "packag": 245, "within": 245, "group": [245, 265], "relat": 245, "quick": [246, 284], "start": [246, 265, 284], "develop": [246, 264, 265], "unix": 246, "shell": 246, "repositori": 246, "beginn": 246, "compil": 246, "system": 246, "unknown": 246, "what": 246, "script": [246, 284], "doe": 246, "flag": 246, "activ": 246, "switch": 246, "between": [246, 265], "differ": 246, "onli": 246, "repo": 246, "worktre": 246, "advanc": 246, "seaic": [247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "exact_restart": [251, 252, 253], "exactrestart": 251, "standard_phys": [255, 256, 257], "standardphys": 255, "standard_physics_test": 261, "exact_restart_test": 261, "solver": 262, "error": 262, "when": 262, "proxi": 262, "lanl": 262, "mac": 262, "gethostbynam": 262, "fail": 262, "glossari": [263, 264], "": 264, "guid": 264, "tutori": [264, 265], "compass": 264, "get": 265, "vari": 265, "resolut": 265, "paramet": 265, "thing": 265, "out": 265, "defin": 265, "more": 265, "again": 265, "one": 265, "second": 265, "enhanc": 265, "comput": 265, "cell": 265, "count": 265, "superclass": 265, "studi": 265, "how": 265, "pass": 265, "data": [265, 272], "A": 266, "case": 266, "slurm": 271, "queue": 271, "mpich": 271, "openmpi": 271, "No": 271, "forg": 271, "jupyt": 272, "notebook": 272, "1d": 274, "grid": [274, 277, 278, 280, 281, 282, 283], "type": 274, "tanh_dz": 274, "60layerphc": 274, "100layere3smv1": 274, "3d": 274, "z": 274, "star": 274, "level": 274, "cosine_bell_cached_init": 276, "baroclin": 277, "channel": 277, "descript": [277, 278, 280, 281, 282, 283, 287, 288], "durat": [277, 278, 280, 281, 282, 283, 287, 288], "core": [277, 278, 280, 281, 282, 283, 287, 288], "cosin": 278, "bell": 278, "inerti": 280, "graviti": 280, "wave": 280, "manufactur": 281, "solut": 281, "singl": [282, 287], "column": [282, 287], "task_nam": [283, 288], "yet": 284, "load": 284, "standalon": 284, "sea": 285, "ic": 285, "standard": 287, "physic": 287, "timestep": 287, "exact": 287}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [239, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [277, "mesh"], [277, "id2"], [277, "id9"], [277, "id17"], [277, "id25"], [277, "id32"], [278, "mesh"], [280, "mesh"], [281, "mesh"], [282, "mesh"], [282, "id3"], [282, "id8"], [283, "mesh"], [287, "mesh"], [287, "id1"], [287, "id6"], [288, "mesh"]], "model_step": [[3, "model-step"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [232, "validate"]], "viz": [[3, "viz"], [233, "viz"], [235, "viz"], [236, "viz"], [237, "viz"], [261, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [265, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [273, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [135, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [135, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "Provenance": [[15, "provenance"]], "Remapping": [[16, "remapping"]], "Validation": [[17, "validation"]], "Validating variables against a baseline": [[17, "validating-variables-against-a-baseline"]], "Validating variables": [[17, "validating-variables"]], "Norms": [[17, "norms"]], "Visualization": [[18, "visualization"]], "horizontal fields from planar meshes": [[18, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[18, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[19, "polaris-component"]], "polaris.Component.add_config": [[20, "polaris-component-add-config"]], "polaris.Component.add_step": [[21, "polaris-component-add-step"]], "polaris.Component.add_task": [[22, "polaris-component-add-task"]], "polaris.Component.remove_step": [[23, "polaris-component-remove-step"]], "polaris.ModelStep": [[24, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[25, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[26, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[27, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[28, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[29, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[30, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[31, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[32, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[33, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[34, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[35, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[36, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[37, "polaris-step"]], "polaris.Step.add_dependency": [[38, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[39, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[40, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[41, "polaris-step-constrain-resources"]], "polaris.Step.run": [[42, "polaris-step-run"]], "polaris.Step.runtime_setup": [[43, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[44, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[45, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[46, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[47, "polaris-step-validate-baselines"]], "polaris.Task": [[48, "polaris-task"]], "polaris.Task.add_step": [[49, "polaris-task-add-step"]], "polaris.Task.configure": [[50, "polaris-task-configure"]], "polaris.Task.remove_step": [[51, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[52, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[53, "polaris-main-main"]], "polaris.cache.update_cache": [[54, "polaris-cache-update-cache"]], "polaris.components.get_components": [[55, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[56, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[57, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[58, "polaris-io-download"]], "polaris.io.imp_res": [[59, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[61, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[62, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[63, "polaris-list-list-cases"]], "polaris.list.list_machines": [[64, "polaris-list-list-machines"]], "polaris.list.list_suites": [[65, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[66, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[67, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[68, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[69, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[70, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[71, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[72, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[73, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[75, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[79, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[81, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[82, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[83, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[84, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[85, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[86, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[87, "polaris-namelist-replace"]], "polaris.namelist.write": [[88, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[89, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[90, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[91, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[92, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[93, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[94, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[95, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[96, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[97, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[98, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[99, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[100, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[101, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[102, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[103, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[104, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[105, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[106, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[107, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[108, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[109, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[110, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[111, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[112, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[113, "polaris-streams-read"]], "polaris.streams.update_defaults": [[114, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[115, "polaris-streams-update-tree"]], "polaris.streams.write": [[116, "polaris-streams-write"]], "polaris.suite.setup_suite": [[117, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[118, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[119, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[120, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[121, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[122, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[123, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[124, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[125, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[126, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[127, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[128, "anvil"], [267, "anvil"]], "intel": [[128, "intel"], [130, "intel"], [131, "intel"]], "gnu": [[128, "gnu"], [130, "gnu"], [131, "gnu"]], "Chicoma": [[129, "chicoma"], [268, "chicoma"]], "chicoma-cpu, gnu": [[129, "chicoma-cpu-gnu"]], "Chrysalis": [[130, "chrysalis"], [269, "chrysalis"]], "CompyMcNodeFace": [[131, "compymcnodeface"], [270, "compymcnodeface"]], "Machines": [[132, "machines"], [271, "machines"]], "Supported Machines": [[132, "supported-machines"], [271, "supported-machines"]], "Other Machines": [[132, "other-machines"], [271, "other-machines"]], "Adding a New Supported Machine": [[132, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[132, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[132, "describing-a-spack-environment"]], "Building the Spack Environment": [[132, "building-the-spack-environment"]], "Perlmutter": [[133, "perlmutter"], [272, "perlmutter"]], "pm-cpu, gnu": [[133, "pm-cpu-gnu"]], "ocean": [[134, "ocean"]], "Tasks": [[134, "tasks"], [234, "tasks"], [244, "tasks"], [247, "tasks"], [260, "tasks"], [279, "tasks"], [286, "tasks"], [290, "tasks"]], "baroclinic_channel": [[134, "baroclinic-channel"], [232, "baroclinic-channel"]], "inertial_gravity_wave": [[134, "inertial-gravity-wave"], [235, "inertial-gravity-wave"]], "cosine_bell": [[134, "cosine-bell"], [233, "cosine-bell"]], "manufactured_solution": [[134, "manufactured-solution"], [236, "manufactured-solution"]], "single_column": [[134, "single-column"], [237, "single-column"], [247, "single-column"], [261, "single-column"]], "Ocean Framework": [[134, "ocean-framework"]], "Spherical Convergence Tests": [[134, "spherical-convergence-tests"], [135, "spherical-convergence-tests"]], "Ocean Model": [[134, "ocean-model"]], "Spherical Base Mesh Step": [[134, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[134, "reference-potential-energy-rpe"]], "Vertical coordinates": [[134, "vertical-coordinates"]], "Ocean framework": [[135, "ocean-framework"]], "YAML files vs. namelists and streams": [[135, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[135, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[135, "setting-mpi-resources"]], "Setting time intervals in model config options": [[135, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[135, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[135, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[135, "vertical-coordinate"], [274, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[135, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[136, "polaris-ocean-ocean"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[137, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[138, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[139, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[140, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[141, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[142, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[143, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[144, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[145, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[146, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[147, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[148, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[149, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[150, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[151, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[152, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[153, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[154, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[155, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[156, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[157, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[158, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[159, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[160, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[161, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[162, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[163, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[164, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[165, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[166, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[167, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[168, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[169, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[170, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[171, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse": [[172, "polaris-ocean-tasks-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run": [[173, "polaris-ocean-tasks-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[174, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[175, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[176, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[177, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[178, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[179, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[180, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[181, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[182, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[183, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[184, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[185, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[186, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[187, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[188, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[189, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[190, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[191, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[192, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[193, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[194, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[195, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[196, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[197, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[198, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[199, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[200, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[201, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[202, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[203, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[204, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[205, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[206, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[207, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[208, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[209, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[210, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[211, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[212, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[213, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[214, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[215, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[216, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[217, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[218, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[219, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[220, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[221, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[222, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[223, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[224, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[225, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[226, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[227, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[228, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[229, "ocean-component"], [275, "ocean-component"]], "Models": [[230, "models"]], "Supported Models": [[230, "supported-models"]], "MPAS-Ocean": [[231, "mpas-ocean"]], "Initial conditions": [[231, "initial-conditions"], [259, "initial-conditions"]], "Boundary conditions": [[231, "boundary-conditions"]], "Forcing": [[231, "forcing"], [259, "forcing"]], "framework": [[232, "framework"], [233, "framework"], [235, "framework"], [236, "framework"], [237, "framework"], [261, "framework"]], "init": [[232, "init"], [233, "init"], [235, "init"], [236, "init"], [237, "init"]], "forward": [[232, "forward"], [233, "forward"], [235, "forward"], [236, "forward"], [237, "forward"], [261, "forward"]], "default": [[232, "default"], [277, "default"]], "decomp": [[232, "decomp"], [277, "decomp"]], "restart": [[232, "restart"], [277, "restart"]], "threads": [[232, "threads"]], "rpe": [[232, "rpe"], [277, "rpe"]], "base_mesh": [[233, "base-mesh"]], "analysis": [[233, "analysis"], [235, "analysis"], [236, "analysis"]], "exact_solution": [[235, "exact-solution"], [236, "exact-solution"]], "cvmix": [[237, "cvmix"], [282, "cvmix"]], "ideal age": [[237, "ideal-age"], [282, "ocean-single-column-ideal-age"]], "Categories of tasks": [[238, "categories-of-tasks"]], "Constructor": [[239, "constructor"]], "Config file": [[239, "config-file"]], "Directory structure": [[240, "directory-structure"]], "Organization of Tasks": [[241, "organization-of-tasks"]], "Steps": [[242, "steps"]], "Step attributes": [[242, "step-attributes"]], "constructor": [[242, "constructor"], [244, "constructor"]], "setup()": [[242, "setup"]], "constrain_resources()": [[242, "constrain-resources"]], "runtime_setup()": [[242, "runtime-setup"]], "run()": [[242, "run"]], "inputs and outputs": [[242, "inputs-and-outputs"]], "Input files": [[242, "input-files"]], "Symlinks to input files": [[242, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[242, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[242, "downloading-and-symlinking-input-files"]], "Copying input files": [[242, "copying-input-files"]], "Output files": [[242, "output-files"]], "Cached output files": [[242, "cached-output-files"]], "Adding other steps as dependencies": [[242, "adding-other-steps-as-dependencies"]], "Suites": [[243, "suites"], [276, "suites"], [284, "suites"], [289, "suites"]], "Pull-Request (PR) suite": [[243, "pull-request-pr-suite"]], "Nightly suite": [[243, "nightly-suite"]], "Task attributes": [[244, "task-attributes"]], "configure()": [[244, "configure"]], "Overview": [[245, "overview"]], "Code Style": [[245, "code-style"]], "Packages and Modules": [[245, "packages-and-modules"]], "Packages": [[245, "packages"]], "Modules": [[245, "modules"]], "Classes": [[245, "classes"]], "Code sharing": [[245, "code-sharing"]], "\u2026in the polaris framework": [[245, "in-the-polaris-framework"]], "\u2026within a component": [[245, "within-a-component"]], "\u2026within a group of related tasks": [[245, "within-a-group-of-related-tasks"]], "\u2026within a task": [[245, "within-a-task"]], "Quick Start for Developers": [[246, "quick-start-for-developers"]], "Unix Shell": [[246, "unix-shell"]], "Set up a polaris repository: for beginners": [[246, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[246, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[246, "supported-machines"]], "Environments with Albany": [[246, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[246, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[246, "unknown-machines"]], "What the script does": [[246, "what-the-script-does"]], "Optional flags": [[246, "optional-flags"]], "Activating the environment": [[246, "activating-the-environment"]], "Switching between different polaris environments": [[246, "switching-between-different-polaris-environments"]], "Troubleshooting": [[246, "troubleshooting"], [262, "troubleshooting"]], "Creating/updating only the polaris environment": [[246, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[246, "building-e3sm-components"]], "Running polaris from the repo": [[246, "running-polaris-from-the-repo"]], "Code style for polaris": [[246, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[246, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[247, "seaice"]], "SeaIce framework": [[248, "seaice-framework"]], "polaris.seaice.SeaIce": [[249, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[250, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[251, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[252, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[253, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[254, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[255, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[256, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[257, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[258, "seaice-component"]], "Supported Model: MPAS-Seaice": [[259, "supported-model-mpas-seaice"]], "standard_physics_test": [[261, "standard-physics-test"]], "exact_restart_test": [[261, "exact-restart-test"]], "Solver errors when configuring conda environment": [[262, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[262, "proxy-on-lanl-macs"]], "gethostbyname failed": [[262, "gethostbyname-failed"]], "Glossary": [[263, "glossary"], [264, null]], "Polaris": [[264, "polaris"]], "User's guide": [[264, null]], "Developer's guide": [[264, null]], "Tutorials": [[264, null]], "Compass": [[264, "compass"]], "Developer Tutorial: Adding a new test group": [[265, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[265, "getting-started"]], "Making a new test group": [[265, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[265, "adding-a-default-task"]], "Varying resolution and other parameters": [[265, "varying-resolution-and-other-parameters"]], "Adding the init step": [[265, "adding-the-init-step"]], "Creating a horizontal mesh": [[265, "creating-a-horizontal-mesh"]], "Adding a config file": [[265, "adding-a-config-file"]], "Adding the step to the task": [[265, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[265, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[265, "creating-an-initial-condition"]], "Adding plots": [[265, "adding-plots"]], "Adding step outputs": [[265, "adding-step-outputs"]], "Adding validation": [[265, "adding-validation"], [265, "id1"]], "Test things out!": [[265, "test-things-out"]], "Adding the forward step": [[265, "adding-the-forward-step"]], "Defining model config options and streams": [[265, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[265, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[265, "adding-more-validation"]], "Test the task again!": [[265, "test-the-task-again"]], "Adding a visualization step": [[265, "adding-a-visualization-step"]], "Adding the viz step to the task": [[265, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[265, "test-the-task-one-more-time"]], "Adding a second task": [[265, "adding-a-second-task"]], "Enhancements": [[265, "enhancements"]], "Adding model config options in code": [[265, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[265, "adding-dynamic-model-config-options"]], "Computing the cell count": [[265, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[265, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[265, "adding-a-parameter-study"]], "Adding the steps to the task": [[265, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[265, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[265, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[266, "config-files"]], "A \u201cuser\u201d config file": [[266, "a-user-config-file"]], "Test-case config files": [[266, "test-case-config-files"]], "config options": [[267, "config-options"], [268, "config-options"], [269, "config-options"], [270, "config-options"], [271, "config-options"], [272, "config-options"], [277, "config-options"], [277, "id7"], [277, "id14"], [277, "id22"], [277, "id30"], [277, "id37"], [278, "config-options"], [280, "config-options"], [281, "config-options"], [282, "config-options"], [282, "id1"], [282, "id6"], [282, "id13"], [283, "config-options"], [287, "config-options"], [287, "id5"], [287, "id10"], [288, "config-options"]], "Intel on Anvil": [[267, "intel-on-anvil"]], "Gnu on Anvil": [[267, "gnu-on-anvil"]], "Chicoma-CPU": [[268, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[268, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[269, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[269, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[270, "intel-on-compymcnodeface"]], "Slurm job queueing": [[271, "slurm-job-queueing"]], "MPICH": [[271, "mpich"]], "OpenMPI": [[271, "openmpi"]], "No MPI from conda-forge": [[271, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[272, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[272, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[272, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[274, "d-grid-type"]], "uniform": [[274, "uniform"]], "tanh_dz": [[274, "tanh-dz"]], "60layerPHC": [[274, "layerphc"]], "100layerE3SMv1": [[274, "layere3smv1"]], "3D vertical coordinates": [[274, "d-vertical-coordinates"]], "z-star": [[274, "z-star"]], "z-level": [[274, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[276, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[277, "baroclinic-channel"]], "description": [[277, "description"], [277, "id1"], [277, "id8"], [277, "id16"], [277, "id24"], [278, "description"], [280, "description"], [281, "description"], [282, "description"], [282, "id2"], [282, "id7"], [283, "description"], [287, "description"], [288, "description"]], "vertical grid": [[277, "vertical-grid"], [277, "id3"], [277, "id10"], [277, "id18"], [277, "id26"], [277, "id33"], [278, "vertical-grid"], [280, "vertical-grid"], [281, "vertical-grid"], [282, "vertical-grid"], [282, "id4"], [282, "id9"], [283, "vertical-grid"]], "initial conditions": [[277, "initial-conditions"], [277, "id4"], [277, "id11"], [277, "id19"], [277, "id27"], [277, "id34"], [278, "initial-conditions"], [280, "initial-conditions"], [281, "initial-conditions"], [282, "initial-conditions"], [282, "id5"], [282, "id10"], [283, "initial-conditions"], [287, "initial-conditions"], [287, "id2"], [287, "id7"], [288, "initial-conditions"]], "forcing": [[277, "forcing"], [277, "id5"], [277, "id12"], [277, "id20"], [277, "id28"], [277, "id35"], [278, "forcing"], [280, "forcing"], [281, "forcing"], [282, "forcing"], [282, "id11"], [283, "forcing"], [287, "forcing"], [287, "id3"], [287, "id8"], [288, "forcing"]], "time step and run duration": [[277, "time-step-and-run-duration"], [277, "id6"], [277, "id13"], [277, "id21"], [277, "id29"], [277, "id36"], [278, "time-step-and-run-duration"], [280, "time-step-and-run-duration"], [281, "time-step-and-run-duration"], [282, "time-step-and-run-duration"], [282, "id12"], [283, "time-step-and-run-duration"], [288, "time-step-and-run-duration"]], "cores": [[277, "cores"], [277, "id15"], [277, "id23"], [277, "id31"], [277, "id38"], [278, "cores"], [280, "cores"], [281, "cores"], [282, "cores"], [282, "id14"], [283, "cores"], [287, "cores"], [287, "id4"], [287, "id9"], [288, "cores"]], "thread": [[277, "thread"]], "cosine bell": [[278, "cosine-bell"]], "inertial gravity wave": [[280, "inertial-gravity-wave"]], "manufactured solution": [[281, "manufactured-solution"]], "convergence": [[281, "convergence"]], "single column": [[282, "single-column"], [287, "single-column"]], "<Category of task>": [[283, "ocean-category-of-task"], [288, "seaice-category-of-task"]], "task_name": [[283, "task-name"], [288, "task-name"]], "Quick Start for Users": [[284, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[284, null]], "Loading polaris conda and spack environments": [[284, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[284, "e3sm-supported-machines"]], "Other machines": [[284, "other-machines"]], "Building supported E3SM components as standalone models": [[284, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[284, "setting-up-tasks"]], "Running a task": [[284, "running-a-task"]], "Running with a job script": [[284, "running-with-a-job-script"]], "Sea ice component": [[285, "sea-ice-component"]], "standard physics test": [[287, "standard-physics-test"]], "timestep and run duration": [[287, "timestep-and-run-duration"], [287, "id11"]], "visualization": [[287, "visualization"]], "exact restart test": [[287, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[19, "polaris.Component"]], "__init__() (polaris.component method)": [[19, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[20, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[21, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[22, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[23, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[24, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[24, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[25, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[29, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[30, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[31, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[32, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[33, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[34, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[35, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[36, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[37, "polaris.Step"]], "__init__() (polaris.step method)": [[37, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[38, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[39, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[40, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[41, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[42, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[43, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[44, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[45, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[46, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[47, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[48, "polaris.Task"]], "__init__() (polaris.task method)": [[48, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[49, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[50, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[51, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[52, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[53, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[54, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[55, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[56, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[56, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[58, "polaris.io.download"]], "module": [[59, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[59, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[61, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[62, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[63, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[64, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[65, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[66, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[69, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[79, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[80, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[80, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[84, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[85, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[86, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[87, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[88, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[89, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[90, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[91, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[92, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[93, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[94, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[105, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[106, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[107, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[108, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[109, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[110, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[111, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[112, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[113, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[114, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[115, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[116, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[117, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[118, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[119, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[120, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[121, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[121, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[122, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[123, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[124, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[125, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[126, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[127, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[136, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[136, "polaris.ocean.Ocean.__init__"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[137, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[137, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[138, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[139, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[139, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[140, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[141, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[142, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[143, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[144, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[145, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[146, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[147, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[147, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[148, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[148, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[149, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[149, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[150, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[151, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[152, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[152, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[153, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[154, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[155, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[155, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[156, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[156, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[157, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[158, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[158, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[159, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[160, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[160, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[161, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[162, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[163, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[163, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[164, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[164, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[165, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[166, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[166, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[167, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[168, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[168, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[169, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[170, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[171, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[171, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[172, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[173, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[174, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[174, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[175, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[176, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[177, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[177, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[178, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[179, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[179, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[180, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[181, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[181, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[182, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[184, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[185, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[185, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[186, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[187, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[187, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[188, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[189, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[191, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[192, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[193, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[193, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[194, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[195, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[195, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[196, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[197, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[197, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[198, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[199, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[199, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[200, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[201, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[201, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[202, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[203, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[204, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[204, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[205, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[206, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[207, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[207, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[208, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[209, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[209, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[210, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[211, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[212, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[212, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[213, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[213, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[214, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[214, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[215, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[215, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[216, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[217, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[217, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[218, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[219, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[220, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[221, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[222, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[223, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[224, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[225, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[226, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[227, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[228, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[249, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[249, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[250, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[251, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[251, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[252, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[252, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[253, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[254, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[254, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[255, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[255, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[256, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[256, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[257, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})