Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/inertial_gravity_wave", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/inertial_gravity_wave", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/inertial_gravity_wave.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/inertial_gravity_wave.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState", "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.ideal_age.IdealAge", "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tests.single_column.initial_state.InitialState", "polaris.ocean.tests.single_column.initial_state.InitialState.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "inertial_gravity_wave", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "inertial gravity wave", "single_column", "test_group_name", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 104, 114, 118, 144, 151, 231, 232, 233], "date": [1, 4, 48, 212, 228, 233], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 72, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 118, 119, 124, 127, 128, 129, 130, 136, 138, 140, 142, 143, 145, 147, 148, 150, 152, 155, 157, 158, 160, 163, 166, 167, 169, 170, 172, 174, 176, 179, 181, 185, 186, 188, 190, 193, 195, 196, 198, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251], "purpos": [1, 45, 226, 227, 230, 232, 251], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 55, 59, 60, 61, 64, 65, 67, 68, 69, 70, 73, 74, 83, 84, 86, 87, 93, 99, 109, 110, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 135, 136, 138, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 241, 244, 245, 247, 248, 249, 250, 252], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 68, 111, 115, 127, 129, 132, 202, 204, 210, 211, 212, 219, 220, 223, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 248, 249, 250], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 67, 68, 73, 83, 84, 87, 91, 97, 98, 99, 102, 104, 106, 109, 110, 112, 114, 119, 120, 122, 123, 124, 127, 129, 130, 142, 143, 144, 151, 170, 171, 185, 186, 187, 195, 204, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 251, 252], "summar": 1, "what": [1, 9, 11, 14, 124, 227, 232, 239, 249, 250], "capabl": [1, 14, 124, 223, 227, 232, 238, 250], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 110, 136, 147, 157, 204, 210, 211, 225, 226, 228, 231, 234, 235, 236, 237, 239, 250], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 120, 122, 123, 124, 127, 212, 213, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 251, 252], "through": [1, 103, 227, 228, 232], "process": [1, 6, 12, 27, 83, 84, 119, 223, 227, 228, 230, 231, 232], "It": [1, 4, 12, 14, 32, 38, 111, 215, 218, 223, 224, 225, 226, 227, 228, 230, 232, 233, 238, 247], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 55, 68, 102, 103, 110, 111, 112, 120, 121, 122, 123, 124, 125, 127, 132, 147, 157, 212, 220, 223, 224, 225, 226, 228, 229, 232, 233, 244, 245, 248, 249, 250], "clear": [1, 227, 232], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 60, 67, 73, 87, 105, 106, 142, 150, 169, 183, 185, 195, 204, 210, 211, 223, 227, 228, 229, 230, 231, 250], "code": [1, 4, 5, 7, 10, 12, 32, 127, 212, 220, 223, 224, 225, 230, 231, 233, 240, 244, 248, 250], "do": [1, 4, 7, 9, 12, 14, 15, 114, 223, 225, 228, 229, 230, 232, 238, 245, 250], "current": [1, 4, 6, 9, 19, 29, 32, 39, 109, 110, 124, 129, 195, 212, 216, 219, 220, 223, 227, 228, 230, 231, 232, 233, 238, 241, 244, 245, 247, 248, 250, 251, 252], "doe": [1, 7, 10, 12, 223, 231, 232, 238], "primari": [1, 4, 7, 232, 252], "challeng": 1, "respect": [1, 6, 7, 12, 16, 127, 223, 227, 245, 249], "softwar": [1, 77, 239, 250], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 109, 110, 111, 127, 174, 204, 210, 211, 212, 218, 219, 220, 221, 223, 225, 226, 227, 228, 232, 233, 238, 239, 241, 245, 247, 249, 250, 251], "appropri": [1, 4, 12, 20, 72, 124, 212, 215, 218, 219, 220, 223, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 249, 250], "final": [1, 5, 215, 216, 218, 219, 221, 223, 225, 232, 245], "statement": [1, 10, 223, 230], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 36, 49, 52, 79, 82, 88, 89, 90, 91, 95, 96, 97, 104, 112, 113, 127, 134, 204, 210, 211, 220, 221, 222, 223, 227, 228, 230, 232, 233, 238, 242, 247, 249, 250], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 67, 110, 127, 147, 157, 202, 212, 214, 215, 216, 218, 219, 220, 223, 228, 232, 233, 238, 245, 247, 250], "regard": 1, "success": [1, 51, 212, 220, 232, 233], "last": [1, 224, 228, 244, 250], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 104, 106, 129, 153, 215, 218, 223, 225, 226, 228, 231, 232, 233, 244, 250], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 66, 71, 76, 104, 105, 106, 114, 115, 118, 119, 144, 151, 215, 220, 223, 225, 226, 227, 228, 230, 232, 233, 239, 245], "your": [1, 3, 4, 9, 124, 212, 227, 228, 229, 232, 233, 234, 235, 238, 239, 245, 250], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 83, 84, 99, 102, 103, 108, 109, 110, 134, 155, 163, 166, 179, 190, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 238, 239, 245, 250, 251, 252], "appear": [1, 124, 223, 232], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 56, 62, 63, 72, 103, 119, 124, 127, 139, 149, 159, 163, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 238, 241, 244, 245, 247, 249, 250, 252], "under": [1, 14, 32, 33, 109, 124, 127, 214, 223, 224, 228, 231, 241, 251], "head": [1, 214, 235], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 102, 103, 108, 110, 127, 129, 137, 139, 141, 148, 149, 154, 159, 182, 194, 197, 212, 215, 218, 219, 223, 225, 226, 227, 228, 229, 230, 231, 233, 238, 239, 241, 244, 245, 247, 249, 250, 251, 252], "correspond": [1, 5, 15, 109, 110, 127, 212, 223, 228, 244], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 61, 68, 69, 72, 75, 87, 93, 109, 110, 129, 148, 183, 204, 210, 211, 216, 220, 223, 226, 227, 238, 241, 244, 247], "propos": 1, "discuss": [1, 127, 223, 225, 226, 227, 232, 244, 245], "technic": [1, 5], "issu": [1, 223, 224, 228, 245, 247], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 124, 215, 223, 225, 226, 228, 229, 232, 241], "focu": [1, 232], "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 102, 103, 108, 113, 118, 120, 121, 122, 123, 124, 125, 138, 142, 144, 148, 150, 151, 152, 158, 171, 187, 195, 212, 215, 218, 219, 220, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 244, 247, 249], "To": [1, 4, 10, 14, 15, 110, 124, 127, 212, 223, 227, 228, 232, 234, 235, 236, 237, 238, 239, 241, 245, 250], "extent": [1, 11, 14, 232, 244], "possibl": [1, 6, 9, 63, 127, 214, 223, 224, 227, 232, 241], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 102, 103, 108, 109, 110, 212, 220, 223, 227, 228, 230, 232, 244, 250, 251], "independ": [1, 4, 224, 230], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 120, 139, 149, 159, 216, 219, 220, 221, 225, 226, 227, 228, 229, 230, 231, 233, 234, 244, 251], "thu": [1, 5, 12, 232], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 110, 127, 129, 223, 226, 230, 232, 233, 238, 241, 245, 251], "clean": [1, 223, 225, 228], "plan": [1, 11, 212, 218, 223, 230, 247, 251], "For": [1, 2, 4, 5, 10, 12, 14, 16, 103, 120, 214, 215, 218, 219, 223, 227, 228, 230, 232, 233, 234, 242, 245, 247, 250, 251], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 120, 121, 122, 123, 124, 125, 212, 220, 223, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 245, 250, 251, 252], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 64, 67, 69, 88, 92, 93, 95, 102, 103, 108, 110, 120, 121, 122, 123, 124, 125, 127, 212, 215, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 247, 250, 251, 252], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 91, 97, 109, 110, 114, 127, 137, 139, 141, 149, 154, 159, 182, 194, 197, 212, 215, 216, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 238, 242, 245, 249, 250], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 60, 62, 63, 89, 96, 104, 106, 109, 110, 111, 118, 124, 129, 172, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 238, 241, 247, 250, 251, 252], "intend": [1, 6, 7, 224, 233, 251], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 99, 111, 124, 127, 136, 147, 157, 163, 215, 216, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 56, 110, 214, 216, 221, 223, 225, 227, 228, 229, 232, 245, 250], "pde": 1, "solver": [1, 225, 228, 231, 250], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 121, 124, 125, 221, 225, 226, 227, 228, 232, 250], "well": [1, 6, 7, 10, 11, 127, 207, 215, 218, 219, 223, 228, 230, 232, 233, 245, 250, 251], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 60, 109, 110, 140, 142, 147, 152, 157, 162, 169, 177, 185, 193, 195, 196, 212, 215, 216, 218, 219, 223, 224, 225, 230, 231, 232, 233, 238, 244, 252], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 127, 216, 221, 223, 224, 225, 226, 227, 228, 231, 232, 233, 238, 241, 245, 247, 249, 250, 251, 252], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 77, 79, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 103, 104, 105, 106, 109, 110, 112, 114, 115, 118, 119, 124, 129, 132, 137, 142, 166, 171, 174, 179, 187, 190, 208, 212, 214, 215, 216, 218, 219, 220, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 244, 245, 247, 249, 250, 251, 252], "low": [1, 112], "level": [1, 9, 10, 11, 15, 16, 127, 204, 205, 206, 207, 208, 209, 210, 211, 215, 221, 222, 223, 225, 226, 232, 233, 244, 245, 247, 248, 249, 252], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 60, 67, 73, 77, 87, 88, 92, 95, 109, 110, 112, 113, 114, 119, 124, 127, 129, 136, 142, 145, 155, 163, 165, 166, 169, 174, 176, 179, 183, 185, 188, 190, 195, 196, 204, 210, 211, 214, 219, 225, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 242, 244, 249, 250], "declar": [1, 5], "interfac": [1, 8, 202, 203, 204, 210, 211, 223, 227, 228, 231, 232, 241], "sequenc": [1, 4, 12, 222, 223, 227, 230, 232, 250, 251, 252], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 83, 84, 85, 102, 109, 110, 112, 120, 121, 122, 123, 124, 125, 129, 142, 185, 195, 215, 223, 225, 226, 227, 228, 229, 230, 232, 233, 238, 239, 241, 245, 249, 250], "want": [1, 4, 9, 12, 14, 15, 43, 127, 223, 226, 228, 229, 232, 233, 238, 239, 248, 250, 251], "math": 1, "syntax": [1, 232], "almost": [1, 7], "ident": [1, 4, 15, 138, 148, 158, 215, 224, 227, 232, 244], "latex": 1, "b": [1, 4, 228, 230, 232, 250], "2": [1, 11, 12, 15, 33, 158, 214, 215, 221, 224, 228, 232, 233, 235, 238, 241, 244, 245, 247, 250], "2ab": 1, "imag": [1, 5, 16, 111, 112, 226, 232, 249], "keep": [1, 4, 7, 12, 19, 50, 223, 225, 228, 232, 249], "mind": [1, 4, 232], "quit": [1, 221, 223, 225, 232], "small": [1, 7, 38, 223, 226, 232, 234, 235, 240, 241, 248, 250], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 72, 83, 84, 99, 103, 110, 115, 124, 127, 129, 142, 185, 195, 204, 207, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 247, 248, 249, 250, 251, 252], "prefer": [1, 223, 224, 232, 233], "png": [1, 11, 16, 216, 232], "okai": [1, 223, 232], "size": [1, 11, 62, 63, 72, 127, 131, 133, 134, 215, 226, 232, 233, 244, 245, 247, 248, 249], "repo": [1, 4, 212, 231, 232], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 241, 249, 250, 251, 252], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 124, 223, 226, 228, 232, 238, 242, 250], "actual": [1, 4, 10, 223, 225, 228, 232], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 223, 228, 232, 233, 234, 235, 236, 237, 238, 239, 250], "project": [1, 4, 5, 59, 91, 97, 212, 227, 228, 232, 233, 234, 235, 238, 250], "manag": [1, 229, 238], "item": [1, 232], "git": [1, 13, 86, 212, 228, 232, 233, 250], "branch": [1, 4, 124, 212, 220, 223, 228, 232, 250], "timelin": 1, "staf": 1, "via": [1, 4, 12, 223, 228, 238], "block": [1, 225], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 88, 92, 95, 127, 221, 223, 226, 227, 228, 229, 231, 232, 233, 238, 244, 245, 250, 251], "def": [1, 5, 7, 9, 10, 14, 16, 220, 223, 225, 226, 227, 232], "example_funct": 1, "foo": [1, 227], "return": [1, 5, 25, 49, 51, 54, 61, 62, 63, 68, 72, 79, 82, 83, 93, 100, 101, 103, 104, 106, 114, 118, 119, 127, 130, 132, 134, 143, 167, 170, 184, 186, 202, 205, 206, 207, 208, 209, 227, 232, 245], "0": [1, 4, 5, 11, 12, 14, 15, 16, 62, 88, 92, 95, 110, 112, 120, 121, 122, 123, 124, 125, 127, 204, 209, 210, 211, 214, 216, 223, 226, 227, 229, 232, 233, 235, 238, 241, 242, 244, 245, 247, 248, 249, 250], "how": [1, 4, 10, 12, 67, 127, 222, 223, 225, 227, 228, 233, 238, 239], "show": [1, 5, 11, 223, 232, 238, 239, 244, 245, 249], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 123, 124, 127, 133, 215, 216, 218, 219, 222, 223, 225, 226, 227, 228, 232, 233, 235, 237, 238, 239, 241, 245, 248, 250, 252], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 102, 103, 108, 123, 124, 127, 132, 166, 179, 190, 212, 215, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 250, 251, 252], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 89, 96, 102, 103, 104, 108, 110, 112, 114, 127, 132, 138, 148, 158, 184, 212, 214, 220, 222, 223, 225, 226, 227, 228, 232, 233, 235, 238, 241, 244, 245, 247, 248, 249, 250, 251, 252], "regress": [1, 162, 215, 216, 224, 230, 231, 232, 244, 245, 250, 252], "suit": [1, 5, 10, 15, 32, 41, 55, 56, 98, 99, 101, 103, 124, 215, 222, 223, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 244], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 83, 84, 87, 110, 127, 129, 142, 185, 195, 215, 221, 223, 225, 226, 227, 228, 229, 232, 238, 241, 250], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 67, 99, 115, 127, 212, 215, 216, 220, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 238, 241, 244, 245, 250, 252], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 68, 127, 144, 151, 212, 220, 223, 225, 227, 228, 229, 231, 232, 233, 234, 238, 239, 241, 244, 245, 250, 252], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 55, 82, 83, 84, 85, 86, 102, 103, 108, 124, 127, 202, 204, 205, 206, 210, 211, 215, 223, 226, 227, 231, 232, 233, 235, 238, 239, 241, 247, 249, 250, 251], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 55, 86, 98, 102, 103, 108, 123, 124, 147, 157, 174, 176, 177, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 238, 245, 248, 250, 251], "properli": [1, 120, 122, 123, 232, 233, 250], "addit": [1, 5, 7, 32, 219, 220, 221, 223, 225, 226, 227, 228, 232], "modif": [1, 5, 223], "nightli": [1, 228, 250, 252], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 109, 110, 212, 223, 225, 226, 227, 228, 230, 232, 233, 244, 250, 251, 252], "might": [1, 9, 12, 14, 16, 223, 226, 228, 232, 233, 238, 250], "made": [1, 4, 14, 32, 35, 41, 110, 223, 225, 227, 230, 232, 251], "ensur": [1, 7, 12, 50, 215, 227, 228, 245, 248], "continu": [1, 223, 232], "expect": [1, 10, 14, 220, 223, 228, 232, 245, 248], "page": [2, 5, 234], "auto": 2, "summari": [2, 235], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 68, 102, 103, 127, 214, 215, 216, 221, 223, 224, 225, 227, 228, 230, 238, 242, 244, 245, 249, 250, 251], "relev": [2, 5, 7, 127, 218, 232, 234, 235, 236, 237, 238, 239, 249, 250], "main": [2, 5, 7, 12, 37, 124, 177, 220, 226, 227, 228, 232, 251], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 142, 169, 185, 195, 215, 218, 223, 224, 227, 228, 231, 232, 241], "document": [2, 7, 12, 223, 227, 231, 233, 250], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 108, 213, 215, 216, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252], "As": [3, 4, 11, 15, 62, 127, 223, 224, 225, 226, 227, 228, 232, 233, 241, 245, 248, 252], "long": [3, 19, 29, 32, 39, 83, 84, 129, 142, 185, 195, 223, 232, 244, 250], "follow": [3, 4, 5, 11, 12, 16, 59, 124, 204, 210, 211, 212, 214, 215, 223, 224, 225, 228, 229, 232, 233, 238, 239, 241, 243, 245, 247, 248, 250], "procedur": [3, 124, 228, 232, 239], "conda": [3, 4, 13, 86, 120, 122, 123, 124, 212, 220, 227, 231, 232, 233, 234, 235, 236, 237, 239], "environ": [3, 4, 120, 122, 123, 124, 212, 220, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239], "spack": [3, 4, 120, 122, 123, 124, 229, 231, 232, 234, 235, 236, 237, 238, 239], "compil": [3, 4, 12, 120, 121, 122, 123, 124, 125, 229, 231, 232, 234, 235, 236, 237, 238, 239, 250], "system": [3, 4, 19, 29, 32, 39, 83, 84, 85, 120, 122, 123, 124, 129, 142, 185, 195, 223, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 250], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 59, 79, 104, 120, 122, 123, 124, 127, 220, 221, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 250], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 68, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 102, 103, 104, 106, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 142, 144, 147, 151, 157, 162, 164, 171, 187, 195, 204, 210, 211, 212, 214, 215, 216, 218, 219, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 247, 248, 249, 252], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 74, 86, 100, 102, 103, 108, 109, 110, 120, 121, 122, 123, 124, 125, 127, 147, 157, 162, 212, 215, 216, 218, 219, 222, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 245, 249, 251], "alreadi": [3, 9, 12, 43, 53, 127, 142, 195, 225, 227, 228, 232, 233, 238, 241, 245, 250], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 79, 86, 104, 108, 114, 124, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 250], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 56, 82, 83, 84, 129, 142, 185, 195, 216, 223, 225, 227, 228, 232, 234, 235, 236, 237, 239, 244, 250, 252], "Then": [3, 5, 9, 120, 121, 122, 123, 124, 125, 127, 212, 215, 218, 219, 220, 223, 225, 226, 228, 232, 238, 244, 250], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 59, 82, 83, 84, 93, 102, 103, 108, 110, 123, 124, 129, 130, 140, 142, 143, 144, 148, 151, 155, 160, 166, 169, 170, 171, 179, 185, 186, 187, 190, 193, 195, 196, 200, 212, 215, 216, 218, 219, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 251, 252], "script": [3, 4, 10, 16, 47, 55, 121, 124, 125, 227, 230, 231, 232, 235, 238], "doc": [3, 5, 225, 232, 239], "cd": [3, 212, 228, 232, 235, 250], "rm": 3, "rf": 3, "developers_guid": [3, 232], "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 61, 62, 64, 77, 110, 120, 121, 122, 123, 124, 125, 129, 133, 138, 148, 158, 176, 204, 210, 211, 212, 215, 223, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 244, 245, 250, 252], "html": [3, 242], "view": [3, 218, 228, 247], "open": [3, 228, 232], "index": [3, 15, 112, 204, 205, 206, 207, 208, 209, 210, 211, 225, 226, 232], "act": [4, 227, 241], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 138, 140, 193, 196, 215, 218, 219, 223, 225, 232, 233, 238, 244, 247, 248, 250], "These": [4, 6, 12, 15, 17, 32, 127, 212, 214, 220, 223, 225, 227, 228, 231, 232, 233, 238, 244, 250, 251, 252], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 55, 86, 110, 124, 127, 215, 218, 219, 223, 224, 225, 226, 229, 230, 232, 235, 238, 239, 242, 244, 245], "describ": [4, 5, 12, 14, 86, 104, 106, 109, 110, 119, 124, 127, 215, 216, 218, 219, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 250], "below": [4, 12, 19, 29, 32, 39, 83, 84, 124, 129, 142, 185, 195, 212, 221, 223, 225, 226, 228, 232, 233, 238, 241, 245, 247, 248, 250], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 56, 98, 109, 110, 124, 127, 132, 209, 215, 216, 218, 219, 223, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 239, 241, 244, 245, 248, 250, 251], "instal": [4, 228, 232, 238, 239, 250], "abov": [4, 5, 12, 15, 221, 223, 224, 225, 226, 227, 228, 232, 233, 245, 247, 248, 250, 252], "develop": [4, 5, 6, 10, 11, 16, 124, 127, 212, 214, 220, 223, 224, 227, 229, 233, 238, 242, 250], "local": [4, 6, 9, 32, 34, 41, 212, 221, 223, 225, 228, 229, 232, 233, 238, 239, 241], "off": [4, 228, 229], "http": [4, 5, 9, 53, 223, 227, 229, 231, 232, 233, 239, 242, 250], "github": [4, 5, 227, 228, 231, 232, 233, 242, 250], "com": [4, 5, 53, 227, 228, 231, 232, 233, 250], "e3sm": [4, 5, 8, 9, 32, 113, 212, 220, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 60, 61, 67, 68, 73, 87, 94, 102, 103, 108, 113, 124, 127, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 163, 166, 169, 172, 174, 176, 179, 181, 183, 185, 188, 190, 193, 195, 196, 198, 200, 204, 210, 211, 216, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 245, 250], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 120, 122, 123, 215, 216, 223, 225, 228, 229, 232, 233, 238, 242, 243, 244, 248, 249, 250, 251, 252], "mode": [4, 12, 220, 228, 230, 231, 232, 250], "mean": [4, 15, 167, 216, 218, 228, 232, 241, 244, 247, 252], "chang": [4, 6, 12, 14, 15, 67, 212, 220, 223, 224, 225, 227, 228, 230, 232, 233, 235, 239, 241, 244, 250, 252], "reflect": [4, 228], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 59, 93, 98, 124, 127, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 238, 239, 250], "tool": [4, 7, 10, 12, 14, 212, 220, 223, 228, 231, 232, 233], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 55, 68, 77, 80, 83, 84, 87, 93, 98, 110, 111, 112, 113, 114, 119, 120, 124, 127, 129, 130, 131, 132, 133, 142, 143, 144, 151, 163, 166, 170, 174, 185, 186, 195, 202, 204, 205, 206, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 55, 56, 59, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 101, 102, 103, 108, 109, 110, 124, 127, 128, 129, 202, 212, 214, 215, 216, 218, 219, 220, 221, 223, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 55, 56, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 102, 103, 104, 108, 109, 110, 124, 127, 128, 129, 135, 136, 138, 140, 142, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 163, 164, 166, 168, 169, 172, 174, 175, 176, 178, 179, 180, 181, 183, 185, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 228, 230, 231, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 252], "support": [4, 6, 11, 14, 32, 127, 204, 210, 211, 214, 216, 223, 225, 226, 227, 231, 232, 233, 235, 239, 241, 244, 248, 251], "machin": [4, 6, 32, 34, 41, 54, 55, 86, 102, 103, 108, 212, 223, 225, 227, 231, 232, 233, 234, 235, 236, 237, 239], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 55, 56, 60, 66, 67, 68, 71, 73, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 129, 132, 142, 144, 151, 153, 164, 171, 183, 185, 187, 195, 202, 204, 205, 206, 210, 211, 212, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 229, 231, 233, 241, 243, 250, 251], "h": [4, 12, 232], "t": [4, 5, 7, 9, 10, 12, 32, 33, 119, 127, 142, 184, 195, 218, 223, 225, 227, 228, 229, 232, 233, 235, 237, 238, 243, 244, 247, 250, 251, 252], "n": [4, 61, 68, 69, 75, 223, 232, 235, 238, 239, 244, 245, 247, 249, 250], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 82, 83, 84, 87, 103, 127, 129, 130, 131, 133, 142, 143, 167, 170, 183, 185, 186, 195, 212, 215, 218, 223, 224, 225, 226, 227, 230, 232, 233, 238, 241, 243, 244, 245, 247, 248, 249, 250], "v": [4, 228, 232, 247, 252], "By": [4, 12, 15, 33, 34, 127, 212, 220, 225, 232, 233, 244, 248], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 55, 68, 73, 78, 86, 87, 88, 92, 95, 99, 102, 103, 105, 108, 112, 120, 122, 123, 127, 129, 142, 193, 195, 196, 212, 216, 218, 219, 220, 223, 225, 226, 228, 231, 233, 234, 235, 236, 237, 238, 239, 241, 245, 248, 249, 250, 251, 252], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 83, 84, 86, 102, 103, 127, 128, 129, 136, 142, 185, 195, 204, 210, 211, 212, 215, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 238, 241, 242, 244, 245, 249, 250, 251], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 60, 67, 73, 87, 102, 103, 109, 110, 129, 142, 145, 150, 155, 160, 173, 174, 176, 179, 185, 188, 195, 198, 200, 223, 227, 232, 233, 244, 248, 250], "example_compact": [4, 212, 220, 233], "1km": [4, 225, 226, 232, 244, 250], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 62, 120, 121, 122, 123, 124, 125, 127, 138, 142, 158, 185, 195, 204, 210, 211, 215, 216, 218, 219, 221, 223, 225, 228, 229, 232, 233, 235, 238, 239, 241, 244, 245, 247, 248, 249, 250], "test2": 4, "displai": [4, 6, 239], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 56, 59, 86, 102, 103, 108, 109, 110, 112, 212, 220, 223, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 250, 251], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 55, 86, 98, 102, 103, 108, 109, 110, 124, 147, 157, 174, 176, 212, 215, 220, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 245, 250, 251], "help": [4, 11, 221, 223, 228, 231, 232, 238, 242], "messag": [4, 6, 15, 223, 225, 229, 239], "test_expr": [4, 56], "flag": [4, 223, 227, 229, 230, 232, 233, 242, 244, 250], "suppli": [4, 5, 15, 119, 223, 228, 232], "substr": 4, "regular": [4, 16, 56, 61, 68, 163, 166, 232, 234, 237, 238, 239, 250], "express": [4, 56], "subset": 4, "think": [4, 232], "search": [4, 56, 235], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 108, 109, 110, 215, 218, 220, 221, 223, 224, 225, 226, 228, 230, 232, 233, 235, 238, 245, 248, 249], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 118, 127, 129, 132, 134, 136, 142, 150, 167, 169, 172, 174, 176, 195, 203, 220, 223, 225, 226, 227, 228, 230, 232, 233, 239, 244, 250, 252], "singl": [4, 6, 16, 112, 192, 193, 196, 198, 219, 223, 225, 227, 230, 232, 238, 245, 247, 248], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 62, 72, 79, 83, 84, 99, 104, 106, 109, 110, 114, 127, 129, 152, 167, 207, 215, 216, 219, 223, 225, 229, 231, 232, 233, 244, 245, 248, 249, 250, 252], "instead": [4, 10, 12, 19, 99, 120, 124, 223, 225, 227, 228, 232, 234, 250, 252], "pass": [4, 6, 10, 11, 12, 15, 41, 72, 110, 111, 220, 223, 225, 226, 227, 228, 230, 250], "similarli": [4, 6, 212, 223, 228, 238, 250], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 55, 58, 86, 108, 113, 129, 135, 142, 162, 169, 178, 185, 192, 195, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 238, 240, 243, 251], "result": [4, 11, 15, 51, 63, 72, 109, 110, 124, 127, 138, 148, 155, 158, 160, 200, 215, 216, 223, 224, 227, 228, 230, 232, 233, 244, 245, 249, 252], "verbos": [4, 56, 58, 223, 232, 252], "about": [4, 5, 6, 10, 12, 15, 32, 87, 113, 127, 223, 225, 226, 227, 228, 232, 233, 235], "its": [4, 5, 6, 10, 14, 16, 32, 43, 93, 105, 220, 221, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 245, 250, 251], "descript": [4, 5, 232, 233, 242], "short": [4, 140, 193, 196, 223, 224, 225, 227, 232, 244], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 55, 82, 83, 84, 108, 127, 128, 129, 138, 140, 193, 196, 215, 219, 220, 221, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 250, 252], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 56, 60, 67, 73, 87, 129, 142, 174, 176, 195, 215, 221, 223, 225, 227, 232, 250, 251], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 60, 65, 67, 70, 73, 74, 82, 84, 86, 87, 93, 98, 99, 102, 103, 110, 127, 129, 130, 134, 136, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 214, 215, 216, 218, 219, 220, 221, 222, 225, 226, 227, 230, 231, 233, 239, 241, 251, 252], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 60, 67, 73, 87, 129, 142, 174, 176, 195, 223, 225, 232], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 98, 110, 212, 220, 223, 225, 226, 230, 231, 232, 242], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 108, 111, 112, 127, 129, 177, 214, 223, 225, 226, 228, 232, 241, 251], "built": [4, 12, 102, 103, 108, 212, 220, 228, 231, 233, 238, 250], "execut": [4, 6, 12, 15, 19, 102, 103, 108, 129, 212, 220, 223, 228, 232, 233, 234, 235, 236, 237, 238, 239, 250], "standalon": [4, 12, 123, 220, 228, 230, 231, 238], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 59, 77, 89, 96, 104, 106, 108, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 162, 163, 174, 183, 203, 212, 213, 215, 216, 218, 219, 220, 221, 223, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 247, 248, 249, 250, 251, 252], "befor": [4, 6, 12, 14, 38, 223, 226, 227, 228, 229, 232, 235, 239, 241, 245, 250], "w": [4, 228, 230, 232, 250], "num": 4, "f": [4, 7, 9, 12, 225, 227, 228, 232, 233, 239, 244, 247, 250], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 59, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 124, 129, 133, 134, 144, 147, 151, 157, 174, 176, 203, 212, 215, 216, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 235, 238, 239, 241, 244, 245, 249, 250, 251], "m": [4, 12, 61, 68, 69, 75, 215, 219, 226, 228, 232, 234, 235, 236, 237, 239, 241, 244, 245, 248, 250], "mach": [4, 32, 234, 235, 236, 237, 238, 239, 250], "p": [4, 228, 232, 233, 250], "suite_nam": [4, 6, 99, 101, 103, 108, 250], "specifi": [4, 12, 14, 15, 16, 34, 214, 223, 228, 232, 233, 239, 244, 245, 249, 250], "either": [4, 5, 6, 10, 11, 12, 14, 62, 127, 212, 223, 228, 230, 232, 233, 241, 248, 250], "onli": [4, 5, 6, 12, 14, 15, 41, 124, 212, 214, 216, 219, 220, 223, 225, 227, 231, 232, 233, 235, 238, 239, 241, 243, 244, 245, 248, 250], "time": [4, 5, 6, 12, 15, 16, 32, 41, 54, 112, 127, 134, 142, 152, 171, 184, 187, 195, 214, 215, 216, 218, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 239, 250, 252], "wai": [4, 5, 11, 12, 32, 64, 69, 124, 127, 223, 225, 226, 227, 228, 229, 231, 232, 238, 241, 248], "altern": [4, 11, 250], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 102, 103, 147, 157, 220, 221, 223, 224, 225, 226, 227, 228, 232, 233, 238, 244, 245, 248, 249, 250], "case_numb": 4, "multipl": [4, 5, 12, 15, 213, 224, 227, 228, 232, 238, 244, 250], "separ": [4, 5, 7, 12, 14, 15, 223, 224, 230, 232, 245, 250], "space": [4, 5, 7, 11, 218, 223, 228, 232, 235, 238, 250], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 87, 129, 142, 185, 195, 212, 220, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 238, 241, 242, 249, 250, 251], "few": [4, 11, 12, 19, 29, 32, 39, 83, 84, 124, 129, 215, 218, 219, 223, 227, 232, 233, 238], "basic": [4, 5, 233, 235, 238, 250], "piec": [4, 220, 232], "inform": [4, 5, 6, 32, 87, 110, 119, 183, 223, 225, 228, 233, 235, 242, 250], "abl": [4, 120, 121, 122, 123, 125, 127, 223, 224, 226, 228, 232, 238, 250], "place": [4, 12, 15, 111, 223, 225, 232, 238], "download": [4, 6, 8, 32, 34, 40, 147, 157, 225, 227, 228, 233, 250, 252], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 214, 215, 221, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 250, 251, 252], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 93, 104, 106, 107, 111, 112, 113, 119, 124, 174, 204, 210, 211, 223, 228, 231, 233, 234, 235, 236, 237, 238, 250, 251, 252], "locat": [4, 12, 15, 16, 41, 102, 103, 108, 212, 223, 228, 230, 232, 233, 235, 238, 241, 244, 245, 250], "where": [4, 5, 12, 15, 32, 34, 41, 51, 55, 86, 102, 103, 108, 111, 127, 204, 207, 210, 211, 212, 220, 222, 223, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 248, 249, 250, 252], "There": [4, 11, 204, 210, 211, 219, 221, 223, 227, 228, 229, 232, 233, 250], "r": [4, 239, 245], "tell": [4, 228], "re": [4, 223, 227, 228, 230, 232, 233, 238, 239, 245], "leav": [4, 16, 216, 225, 233, 245], "unknown": [4, 124, 227, 238], "component_path": [4, 102, 103, 108, 212, 220, 233, 250], "absolut": [4, 7, 32, 34, 50, 102, 103, 108, 212, 220, 223, 228, 250], "landic": [4, 8, 10, 17, 34, 59, 108, 220, 222, 223, 225, 226, 228, 230, 231, 232, 233, 250, 251, 252], "e3sm_submodul": [4, 212, 220, 228, 232], "mali": [4, 124, 220, 223, 228, 230, 232, 233, 250, 251], "dev": [4, 5, 220, 222, 223, 226, 227, 228, 231, 242, 250], "albani": [4, 120, 122, 123, 124, 220, 233, 234, 235, 236, 239, 250], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 147, 157, 216, 225, 228, 230, 232, 233, 238, 239, 241, 245, 250, 251], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 102, 103, 108, 110, 111, 112, 115, 127, 129, 130, 142, 143, 144, 151, 163, 166, 170, 171, 186, 187, 195, 218, 223, 226, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 247, 248, 249, 250], "omega": [4, 25, 113, 129, 132, 183, 212, 220, 227, 228, 230, 232, 242, 247, 250], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 54, 55, 66, 68, 71, 82, 83, 84, 85, 86, 100, 102, 103, 108, 110, 111, 113, 114, 115, 116, 118, 119, 124, 129, 132, 144, 151, 164, 171, 183, 187, 202, 204, 205, 206, 210, 211, 212, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 231, 241, 250, 251], "point": [4, 47, 53, 90, 212, 214, 220, 225, 226, 227, 228, 232, 233, 238, 250], "much": [4, 12, 223, 232], "config_fil": [4, 102, 103, 108], "work_dir": [4, 9, 15, 32, 41, 55, 86, 102, 103, 108, 109, 110, 223, 225, 232], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 66, 71, 73, 102, 103, 108, 124, 131, 133, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 251], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 74, 98, 105, 108, 110, 127, 174, 176, 212, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 245, 247, 249, 250], "recommend": [4, 5, 9, 16, 223, 224, 227, 228, 232, 238], "itself": [4, 5, 7, 32, 220, 222, 223, 225, 226, 228, 232, 250], "temp": 4, "scratch": [4, 228, 232, 235, 239, 250], "avoid": [4, 223, 232], "confus": [4, 12, 227, 228, 232], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 76, 77, 84, 87, 99, 110, 127, 129, 134, 147, 157, 166, 174, 179, 190, 203, 215, 218, 219, 225, 230, 233, 239, 250, 252], "compar": [4, 8, 15, 41, 102, 103, 108, 109, 110, 137, 139, 141, 149, 154, 159, 182, 194, 197, 216, 219, 224, 227, 228, 230, 232, 243, 244, 250, 252], "previou": [4, 15, 223, 228, 232, 243, 250, 252], "same": [4, 5, 7, 12, 15, 33, 34, 41, 109, 110, 127, 219, 221, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 248, 250, 251, 252], "baseline_dir": [4, 41, 102, 103, 108], "mani": [4, 6, 7, 127, 221, 223, 225, 227, 228, 230, 231, 232, 244, 249], "valid": [4, 5, 6, 8, 41, 204, 205, 206, 207, 208, 209, 210, 211, 215, 218, 219, 227, 228, 231, 241, 244], "sure": [4, 10, 14, 15, 110, 124, 138, 148, 158, 212, 215, 223, 227, 228, 230, 232, 233, 238, 239, 244, 245], "timer": [4, 41, 44, 109, 224, 225, 227], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 85, 93, 110, 120, 122, 123, 129, 142, 185, 195, 212, 215, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 241, 244, 248, 250], "both": [4, 5, 6, 11, 12, 15, 24, 110, 127, 144, 151, 215, 222, 223, 226, 228, 231, 232, 233, 243, 247, 248], "custom": [4, 6, 11, 14, 50, 51, 102, 103, 108, 212, 220, 228, 233, 239, 250], "order": [4, 6, 11, 12, 127, 216, 220, 223, 224, 228, 232, 245, 248, 250], "give": [4, 12, 15, 223, 227, 228, 232, 233, 250], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 124, 127, 129, 204, 210, 211, 212, 215, 218, 220, 223, 225, 227, 228, 230, 232, 233, 238, 239, 241, 244, 245, 248, 250, 252], "after": [4, 5, 12, 14, 16, 32, 34, 35, 74, 93, 124, 205, 206, 212, 220, 223, 225, 228, 232, 233, 235, 239, 250], "c": [4, 103, 124, 223, 228, 234, 235, 236, 237, 238, 239, 243, 250, 252], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 83, 84, 94, 111, 215, 223, 225, 227, 228, 232, 249, 252], "resid": [4, 34], "test_suit": [4, 101, 223], "build": [4, 8, 11, 12, 64, 69, 120, 121, 122, 123, 124, 125, 212, 216, 220, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239], "mpas_model": [4, 233], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 64, 67, 68, 69, 127, 147, 157, 177, 223, 225, 227, 232, 233, 239, 250], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 111, 124, 127, 212, 214, 223, 224, 225, 226, 228, 229, 230, 232, 233, 239, 245, 248, 249, 250, 251], "baselin": [4, 6, 8, 15, 41, 102, 103, 108, 109, 110, 137, 139, 141, 149, 154, 159, 165, 182, 194, 197, 215, 218, 219, 224, 227, 230, 232, 243, 250], "comparison": [4, 15, 41, 109, 110, 225, 232, 233], "against": [4, 6, 8, 15, 110, 165, 215, 218, 219, 223, 232, 243], "oppos": [4, 24, 130, 143, 144, 151, 163, 166, 170, 171, 186, 187, 232], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 36, 38, 39, 82, 83, 84, 87, 127, 129, 131, 133, 142, 185, 195, 215, 218, 223, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239], "parallel": [4, 14, 19, 29, 32, 38, 39, 129, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 250, 251], "been": [4, 12, 15, 32, 41, 43, 93, 102, 103, 108, 120, 122, 123, 127, 166, 179, 190, 212, 220, 223, 225, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 250], "skip_step": 4, "wherea": [4, 10, 223, 232, 243, 251], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 99, 127, 220, 221, 223, 226, 228, 230, 232, 233, 238, 241, 248, 250, 251], "clone": [4, 212, 221, 228, 232, 250], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 124, 142, 185, 195, 215, 223, 224, 227, 228, 229, 232, 241, 244, 248, 252], "just": [4, 12, 19, 29, 32, 39, 56, 124, 129, 223, 227, 228, 230, 232, 235, 239], "pickl": [4, 6, 223, 232, 250], "latter": [4, 41, 124], "conveni": [4, 14, 204, 210, 211, 223, 230, 232, 233, 250], "tab": [4, 250], "complet": [4, 6, 21, 22, 23, 232, 250], "explicitli": [4, 5, 15, 127, 215, 218, 223, 228, 232, 233, 250], "select": [4, 6, 112, 223, 228, 232], "two": [4, 8, 148, 215, 216, 218, 219, 220, 223, 224, 226, 227, 228, 232, 244, 245, 247, 251], "edit": [4, 5, 110, 228, 232, 250], "steps_to_run": [4, 15, 41, 99, 110, 223, 225, 232, 233], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 60, 67, 73, 86, 87, 102, 103, 109, 110, 129, 142, 145, 150, 155, 160, 166, 169, 172, 174, 176, 179, 185, 188, 190, 195, 198, 200, 223, 225, 232, 233, 250], "initial_st": [4, 5, 16, 136, 214, 216, 223, 225, 227, 233, 244, 245, 247], "full_run": [4, 149, 244], "restart_run": [4, 149, 244], "Or": [4, 223, 233], "accomplish": [4, 223, 227], "thing": [4, 120, 121, 122, 123, 124, 125, 127, 223, 227, 231], "skip": [4, 6, 15, 110, 225, 252], "take": [4, 5, 9, 11, 12, 15, 50, 223, 224, 226, 228, 232, 245, 252], "preced": [4, 50], "over": [4, 7, 12, 50, 111, 223, 227, 231, 232, 241, 244, 248, 250], "special": [4, 230, 249], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 129, 223, 238], "polaris_cach": [4, 6, 17, 223], "symlink": [4, 6, 12, 32, 34, 225, 227, 228], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 77, 147, 157, 215, 218, 219, 232, 248], "structur": [4, 11, 25, 132, 222, 225, 231, 232], "without": [4, 15, 34, 223, 227, 228, 232, 233, 237, 238, 247, 249, 250], "redund": [4, 204, 210, 211, 215, 232], "stamp": 4, "revis": [4, 232, 233], "remov": [4, 12, 15, 99, 215, 218, 228, 232], "older": 4, "ones": [4, 204, 210, 211, 227, 232], "version": [4, 13, 27, 50, 86, 109, 110, 212, 215, 220, 221, 223, 226, 227, 228, 231, 232, 233, 238, 239, 242, 244, 245, 250], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 36, 41, 45, 49, 50, 56, 60, 61, 64, 67, 68, 69, 73, 79, 82, 84, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 132, 135, 138, 142, 145, 148, 150, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 185, 188, 190, 192, 195, 198, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 244, 245, 247, 249, 250], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 105, 123, 131, 142, 195, 212, 215, 218, 223, 229, 231, 232, 250], "cached_fil": [4, 17, 223], "json": [4, 6, 17, 48, 223, 239], "anvil": [4, 124, 223, 233, 238, 250], "chrysali": [4, 124, 223, 232, 233, 238, 250], "sinc": [4, 12, 15, 119, 127, 215, 223, 225, 227, 228, 232, 244, 245, 247, 249], "copi": [4, 6, 34, 48, 102, 103, 108, 232, 235, 250], "onto": [4, 228], "lcrc": [4, 6, 9, 48, 223, 227, 233, 234, 236, 238, 250], "server": [4, 6, 34, 48, 223, 227, 233, 239], "whose": [4, 223], "global_ocean": [4, 7, 9, 12, 220, 223, 225, 227, 228, 233, 250, 252], "qu240": [4, 12, 223, 227, 228, 233, 250, 252], "mesh": [4, 5, 8, 14, 19, 32, 77, 89, 96, 112, 127, 129, 130, 131, 133, 140, 143, 145, 163, 166, 167, 169, 170, 172, 174, 176, 179, 183, 186, 188, 190, 193, 196, 198, 204, 210, 211, 214, 215, 218, 219, 221, 223, 225, 226, 227, 228, 230, 231, 233, 241, 243, 250, 252], "phc": [4, 223, 241, 252], "init": [4, 12, 16, 29, 39, 212, 220, 223, 225, 227, 228, 232, 233, 250, 252], "ocean_cached_fil": 4, "pr": [4, 250, 252], "look": [4, 5, 9, 15, 226, 227, 232, 233], "someth": [4, 5, 88, 92, 95, 228, 232], "culled_mesh": [4, 223, 232], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 87, 223, 225, 227, 232], "210803": 4, "culled_graph": [4, 223, 232], "info": [4, 10, 12, 19, 26, 77, 129, 223, 232], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 223], "date_str": [4, 48], "let": [4, 223, 228, 230, 232, 233, 239], "string": [4, 7, 12, 34, 91, 97], "choos": [4, 223, 227, 228, 232, 234, 235, 236, 237, 239, 251], "todai": [4, 48], "dry_run": [4, 48], "saniti": [4, 232], "check": [4, 15, 110, 228, 230, 232, 233, 235, 239, 250, 252], "print": [4, 10, 15, 56, 110, 115, 223, 227, 252], "stdout": [4, 10, 32, 41, 223], "translat": [4, 25, 127, 132], "compass": [4, 87, 212, 223, 227, 230, 232], "convert": [4, 7, 11, 12, 127, 223, 232], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 102, 103, 108, 118, 119, 129, 132, 133, 144, 147, 151, 157, 212, 215, 216, 218, 220, 223, 225, 226, 227, 231, 232, 233, 248], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 113, 118, 119, 133, 144, 147, 151, 157, 212, 214, 215, 218, 219, 220, 223, 225, 226, 227, 233, 249], "yaml": [4, 8, 19, 20, 23, 24, 25, 129, 132, 133, 144, 151, 215, 218, 219, 223, 231, 232, 235, 239], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 113, 124, 127, 132, 212, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 239, 241, 244, 245, 247, 248, 249, 250, 251, 252], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 113, 124, 127, 132, 212, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 241, 244, 245, 247, 248, 249, 250, 252], "forward": [4, 5, 12, 15, 32, 134, 140, 141, 150, 152, 154, 182, 193, 194, 196, 197, 212, 220, 223, 225, 227, 233, 244, 245, 247, 249], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 214, 223, 225, 227, 228, 232, 235, 237, 239, 250], "don": [4, 5, 12, 127, 223, 225, 227, 228, 232, 237, 250, 251], "format": [4, 5, 9, 11, 12, 113, 119, 223, 224, 225, 226, 228, 232, 233, 235], "note": [4, 5, 14, 15, 195, 232, 239], "keyword": [4, 5, 12, 15, 16, 216, 223, 225, 245], "top": [4, 16, 204, 205, 206, 207, 208, 209, 210, 211, 214, 221, 232, 241], "ignor": [4, 91, 97], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 54, 62, 82, 93, 98, 124, 127, 129, 222, 223, 225, 226, 227, 228, 230, 233, 241, 250], "pars": [4, 7, 12, 20, 21, 22, 23, 79, 104, 106], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 110, 111, 112, 115, 132, 152, 215, 220, 223, 225, 226, 227, 231, 232, 233, 241, 244, 245, 248], "doesn": [4, 7, 119, 223, 225, 232, 233, 238, 250], "matter": [4, 232], "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 55, 111, 112, 223, 225, 232], "myst": [5, 232], "tip": [5, 228], "easi": [5, 34, 227, 232], "start": [5, 6, 12, 105, 214, 215, 224, 226, 227, 231, 235, 238, 239, 242], "exist": [5, 7, 25, 32, 35, 53, 104, 106, 108, 132, 215, 223, 227, 228, 229, 232, 238, 252], "tree": [5, 104, 106, 119], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 135, 136, 138, 140, 142, 148, 152, 155, 158, 160, 162, 163, 178, 181, 192, 193, 196, 200, 212, 215, 216, 218, 219, 220, 221, 222, 223, 225, 230, 231, 233, 234, 236, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252], "pull": [5, 227, 228, 232, 233], "request": [5, 12, 19, 26, 28, 129, 205, 206, 223, 227, 228, 229, 232, 233, 245], "guid": [5, 127, 215, 218, 219, 224, 227, 232, 235, 238, 242], "baroclinic_channel": [5, 12, 15, 212, 217, 220, 223, 225, 226, 227, 230, 232, 242, 246, 250, 251, 252], "label": [5, 111, 238, 250], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 124, 129, 216, 220, 223, 225, 226, 227, 228, 230, 232, 237, 238, 243, 250, 251], "baroclin": [5, 45, 135, 136, 138, 140, 142, 145, 148, 152, 155, 158, 160, 195, 200, 215, 223, 225, 226, 232, 244], "channel": [5, 45, 135, 136, 138, 140, 142, 145, 148, 152, 155, 158, 160, 195, 200, 215, 223, 225, 229, 232, 244], "And": [5, 12, 228, 232], "becom": [5, 223, 225, 232], "who": [5, 228, 232, 233, 239], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 67, 91, 97, 102, 103, 108, 124, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 238, 241, 244, 245, 248, 251, 252], "brief": [5, 232], "overview": [5, 231, 235, 239], "comment": [5, 224, 233], "appli": [5, 11, 12, 56, 214, 226, 232, 244, 248, 249], "vertic": [5, 16, 214, 215, 218, 219, 223, 233, 240, 242], "grid": [5, 11, 14, 61, 68, 72, 75, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 127, 174, 202, 203, 204, 205, 206, 207, 210, 211, 215, 216, 218, 219, 223, 232, 233], "initi": [5, 6, 32, 112, 134, 137, 140, 145, 162, 172, 188, 193, 196, 198, 215, 216, 218, 219, 223, 225, 226, 227, 229, 230, 231, 233, 241, 243, 251], "condit": [5, 32, 137, 140, 145, 162, 172, 188, 193, 196, 198, 215, 216, 218, 219, 223, 224, 225, 226, 227, 230, 231, 233, 243, 251], "forc": [5, 15, 219, 232, 251], "common": [5, 7, 10, 38, 41, 45, 215, 216, 218, 219, 223, 224, 225, 226, 227, 229, 230, 232, 233, 238, 239, 250, 251, 252], "refer": [5, 12, 32, 134, 152, 204, 207, 210, 211, 223, 225, 227, 228, 230, 231, 232, 241, 244, 250], "awar": [5, 124, 220, 232, 238], "wish": [5, 12, 223, 228, 232, 250, 252], "test_group_nam": 5, "specif": [5, 7, 12, 43, 124, 212, 220, 221, 226, 231, 232, 233, 235, 238, 244, 249, 250, 252], "share": [5, 16, 127, 136, 212, 215, 218, 219, 220, 221, 223, 225, 226, 228, 231, 234, 235, 236, 237, 238, 239, 240, 244, 249, 250], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 61, 68, 124, 127, 136, 147, 157, 223, 225, 226, 227, 231, 232, 245, 251], "public": [5, 9, 223, 232, 233], "api": [5, 10, 231, 232], "underscor": [5, 232], "md": [5, 232], "eval": 5, "rst": [5, 12, 232], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 136, 138, 140, 148, 152, 158, 215, 220, 225, 232], "baroclinicchanneltestcas": [5, 215], "compute_cell_count": [5, 127, 215, 218, 232], "dynamic_model_config": [5, 215, 218, 232], "initialst": [5, 215, 218, 219, 223, 225, 232], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 127, 130, 143, 144, 151, 170, 171, 186, 187, 215, 218, 219, 225, 227, 228, 230, 231, 232, 233, 245, 250, 251], "across": [5, 12, 16, 215, 223, 224, 225, 226, 227, 228, 230, 232, 240, 244, 245], "ot": [5, 232], "automat": [5, 7, 10, 12, 16, 127, 223, 225, 227, 228, 232, 233, 234, 236, 237, 238, 239, 250], "python": [5, 6, 7, 20, 38, 43, 221, 223, 225, 226, 227, 228, 230, 231, 232, 233, 238, 239, 250], "begin": [5, 15, 215, 223, 228, 231, 232, 238, 244, 245, 248], "numpydoc": [5, 232], "text": [5, 6, 244, 245, 248], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 127, 204, 206, 207, 208, 209, 210, 211, 212, 218, 225, 232, 233, 235, 239, 247], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 72, 124, 127, 129, 130, 134, 143, 167, 170, 183, 186, 207, 208, 209, 215, 216, 218, 219, 223, 228, 235, 236, 238, 239, 244, 247, 250], "pressur": [5, 212, 233, 247], "overli": [5, 232], "ic": [5, 127, 212, 227, 228, 231, 232, 233, 235, 241, 251], "shelf": [5, 127, 226, 227, 232, 233, 241], "draft": [5, 241], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 67, 72, 73, 75, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 127, 129, 130, 132, 134, 136, 138, 140, 142, 143, 144, 145, 148, 150, 151, 152, 155, 158, 160, 163, 166, 167, 169, 170, 171, 172, 174, 176, 179, 181, 183, 184, 185, 186, 187, 188, 190, 195, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 223, 225, 226, 244, 245, 247, 248], "xarrai": [5, 14, 16, 112, 204, 205, 206, 207, 208, 209, 210, 211, 223, 232], "dataarrai": [5, 183, 184, 205, 206, 207, 208, 209, 223], "sea": [5, 127, 183, 184, 206, 207, 208, 209, 212, 232, 233, 241, 247], "surfac": [5, 127, 183, 184, 206, 207, 208, 209, 212, 214, 219, 232, 233, 241, 244, 247, 248], "height": [5, 127, 183, 184, 206, 207, 208, 209, 212, 232, 233, 241, 247], "mask": [5, 204, 207, 210, 211, 223, 232, 233, 241], "landicepressur": [5, 225], "deviat": 5, "float": [5, 7, 12, 20, 60, 62, 63, 67, 72, 92, 110, 112, 136, 138, 140, 142, 145, 148, 152, 155, 158, 167, 183, 184, 185, 188, 195, 196, 198, 223, 225, 232], "densiti": [5, 11, 127, 232], "seawat": 5, "displac": 5, "land": [5, 127, 212, 231, 232, 233, 241, 251], "landicedraft": 5, "equal": [5, 219, 223, 227, 248], "entri": [5, 47, 80, 102, 103], "alwai": [5, 7, 10, 15, 50, 127, 212, 220, 223, 227, 228, 232, 233], "own": [5, 6, 9, 10, 16, 32, 223, 225, 227, 228, 230, 232, 233, 245, 250, 251], "line": [5, 8, 30, 32, 83, 84, 94, 223, 224, 227, 228, 231, 250], "type": [5, 12, 14, 16, 20, 89, 96, 119, 193, 196, 198, 223, 225, 226, 227, 228, 229, 230, 232, 233, 244, 245, 247, 248, 249, 252], "side": 5, "colon": 5, "doubl": [5, 127, 223, 224, 232], "back": [5, 232, 235, 250], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 63, 85, 212, 227, 228, 229, 232, 233, 250], "arg": [5, 10, 32, 83, 84, 223], "indic": [5, 6, 12, 14, 15, 32, 33, 103, 110, 112, 207, 221, 223, 229, 232, 233, 241, 248], "On": [5, 11, 228, 238], "next": [5, 226, 232, 241, 250], "indent": [5, 223], "obviou": [5, 12, 232], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 55, 56, 58, 60, 67, 73, 77, 86, 87, 88, 91, 92, 95, 97, 99, 103, 104, 108, 109, 110, 111, 112, 114, 118, 129, 130, 142, 143, 170, 185, 186, 195, 223, 232, 241, 244, 245, 247, 248, 249], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 79, 104, 114, 115, 132, 144, 151, 225, 227, 232, 233, 250], "els": [5, 6, 223, 232], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 110, 111, 112, 115, 120, 121, 122, 123, 125, 127, 129, 196, 214, 223, 225, 226, 228, 232, 233, 234, 235, 236, 237, 238, 239, 244, 250, 251], "further": [5, 225, 226, 239, 249], "necessari": [5, 11, 220, 232], "rais": [5, 7, 15, 32, 35, 51, 53, 110, 127, 223, 225, 226, 227, 232], "list_cas": 6, "list_machin": [6, 227], "list_suit": 6, "anywher": [6, 10, 228], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 79, 100, 104, 109, 110, 113, 114, 118, 119, 183, 220, 225, 226, 227, 232], "later": [6, 15, 19, 29, 32, 39, 50, 110, 129, 223, 232, 233], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 78, 79, 113, 127, 214, 223, 225, 232], "properti": [6, 12, 214, 223, 238, 245], "clean_cas": 6, "delet": [6, 227, 228, 229, 250], "constant": [6, 60, 67, 68, 127, 214, 232, 244, 245, 247, 248, 249], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 113, 203, 223, 225, 228, 232], "out": [6, 11, 81, 85, 112, 221, 223, 227, 228, 233, 241, 250], "proven": [6, 8, 50, 231, 233], "save": [6, 16, 51, 75, 215, 223, 225, 226, 232, 238, 243, 244], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 36, 41, 45, 50, 79, 82, 86, 103, 104, 110, 113, 114, 115, 132, 216, 223, 225, 226, 227, 232, 245], "target": [6, 9, 14, 19, 34, 53, 55, 87, 124, 127, 129, 215, 218, 223, 225, 232, 245], "minimum": [6, 55, 112, 127, 129, 215, 218, 223, 232, 233, 241, 244, 245, 247, 248, 249], "determin": [6, 11, 12, 16, 34, 38, 41, 119, 127, 133, 215, 216, 218, 223, 226, 232, 241, 244, 245, 247, 249, 250], "maximum": [6, 15, 110, 112, 232, 233, 241], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 83, 84, 87, 127, 129, 142, 185, 195, 223, 225, 232], "cpus_per_task": [6, 12, 32, 36, 39, 83, 84, 223], "attribut": [6, 10, 11, 12, 15, 38, 91, 97, 218, 226, 232], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 232, 241, 244, 245, 247, 248, 249], "runtim": [6, 24, 38, 127, 130, 143, 144, 151, 170, 171, 186, 187, 223, 225, 232], "min_task": [6, 12, 14, 19, 29, 32, 39, 83, 84, 87, 127, 129, 142, 185, 195, 223, 225, 232], "min_cpus_per_task": [6, 12, 32, 39, 83, 84, 223], "fewest": 6, "least": [6, 11, 15, 220, 228], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 110, 129, 142, 185, 195, 223, 231, 232, 233, 245, 247], "run_test": [6, 223, 225], "run_single_step": 6, "oper": [6, 40, 147, 157, 223, 225, 252], "log": [6, 8, 15, 16, 32, 41, 84, 110, 111, 112, 223, 225, 228, 231, 250], "figur": [6, 219, 221, 223, 226, 233], "cpu": [6, 12, 124, 223, 232, 250], "per": [6, 12, 19, 29, 31, 32, 39, 83, 84, 127, 129, 223, 232, 233, 234, 235, 236, 237, 238, 239, 244, 245, 247, 249], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 59, 60, 64, 67, 68, 69, 73, 74, 87, 93, 113, 127, 128, 129, 130, 132, 135, 136, 138, 140, 142, 143, 144, 145, 148, 150, 151, 152, 155, 158, 160, 162, 163, 166, 169, 170, 171, 172, 174, 176, 177, 178, 179, 181, 183, 185, 186, 187, 188, 190, 192, 193, 195, 196, 198, 200, 215, 216, 218, 220, 223, 225, 227, 232, 245, 249], "wa": [6, 15, 51, 109, 110, 124, 137, 139, 141, 149, 154, 159, 182, 194, 197, 223, 225, 227, 228, 229, 232, 233, 241, 250], "retriev": [6, 229], "store": [6, 15, 43, 127, 218, 223, 225, 232, 250], "dure": [6, 9, 12, 24, 32, 41, 127, 130, 143, 144, 151, 170, 171, 186, 187, 223, 225, 227, 228, 232, 233, 250, 251, 252], "txt": [6, 108, 224, 229], "case_output": [6, 10], "individu": [6, 7, 16, 110, 225, 227, 232, 238, 239, 244, 250, 251], "involv": [6, 12, 15, 110, 223, 225, 230, 232], "implement": [6, 7, 215, 216, 218, 219, 227, 244, 245, 247], "termin": [6, 15, 223, 228, 232], "window": 6, "update_cach": 6, "_cached_fil": [6, 223], "map": [6, 14, 17, 25, 67, 68, 87, 111, 112, 132, 174, 176, 216, 228, 233], "origin": [6, 48, 228, 232, 250], "enabl": [6, 16, 223, 229, 233, 239, 247], "consum": [6, 223, 225, 232, 252], "faster": [6, 228], "debug": [6, 120, 121, 122, 123, 125, 232, 234, 235, 236, 237, 239], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 215, 218, 219, 222, 223, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 248, 249, 250, 252], "mpas_tool": [7, 10, 11, 72, 215, 218, 219, 223, 232], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 54, 55, 82, 85, 86, 100, 111, 183, 202, 204, 205, 206, 210, 211, 232], "certain": [7, 15, 50, 223, 228, 233, 249], "add_from_packag": [7, 227, 232], "content": [7, 12, 104, 106, 119, 221, 223, 227, 232, 250], "found": [7, 12, 114, 227, 228, 231, 232, 234, 235, 236, 237, 238, 239], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 75, 127, 220, 223, 225, 226, 227, 232, 233], "cfg": [7, 43, 220, 225, 226, 227, 232, 233, 250], "except": [7, 15, 32, 35, 51, 110, 223, 227, 232], "first": [7, 12, 102, 103, 215, 218, 219, 223, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 244, 245, 248, 250], "second": [7, 11, 12, 142, 195, 219, 223, 227, 244, 248], "know": [7, 9, 11, 127, 223, 227, 228, 232], "behavior": [7, 12, 99, 223, 224, 225, 228, 232], "noth": [7, 229, 245], "being": [7, 24, 32, 41, 98, 103, 110, 130, 143, 144, 151, 170, 171, 186, 187, 223, 225, 226, 227, 228, 232, 241], "test_group": [7, 17, 18, 32, 41, 136, 138, 140, 148, 152, 158, 163, 181, 193, 196, 223, 225, 226, 232], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 56, 58, 98, 99, 103, 108, 110, 112, 127, 129, 198, 200, 214, 223, 225, 226, 232, 233, 235, 237, 239, 244], "happen": [7, 10, 12, 14, 110, 223, 225, 232, 245], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 59, 60, 67, 73, 87, 113, 127, 128, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 177, 178, 179, 181, 183, 185, 188, 190, 192, 193, 195, 196, 198, 200, 212, 215, 216, 218, 219, 220, 223, 225, 226, 232], "larg": [7, 15, 223, 225, 232, 234], "those": [7, 12, 15, 41, 109, 110, 124, 225, 226, 227, 228, 231, 232, 245, 249, 252], "configpars": [7, 83, 84, 226], "getinteg": 7, "getfloat": [7, 10, 12, 14, 223, 232], "getboolean": [7, 223, 232], "getlist": [7, 232], "comma": [7, 245], "integ": [7, 11], "boolean": [7, 112, 207], "etc": [7, 12, 105, 108, 220, 223, 225, 244], "getexpress": 7, "tupl": 7, "rang": [7, 112, 232, 245], "numpi": [7, 11, 61, 68, 69, 75, 111, 127, 134, 202, 203, 223, 232], "linspac": [7, 16, 216, 245], "arang": 7, "arrai": [7, 61, 68, 69, 75, 111, 127, 202, 203, 205, 206, 207, 208, 232], "One": [7, 11, 232, 250, 252], "advantag": [7, 12, 124, 227, 232, 238], "track": [7, 19, 223, 225, 228], "associ": [7, 11, 12, 16, 204, 210, 211, 215, 225, 226, 228, 230], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 60, 67, 73, 87, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 181, 185, 188, 190, 192, 193, 195, 196, 198, 200, 220, 223, 225, 226, 227, 232, 252], "command": [8, 13, 30, 32, 38, 83, 84, 86, 94, 223, 227, 228, 230, 231, 232, 235, 238, 239, 250], "while": [8, 14, 16, 214, 215, 223, 226, 229, 230, 232], "meant": [8, 227, 233], "simplifi": 8, "verifi": [8, 224, 233], "io": [8, 223, 225, 227, 231, 232, 233, 242], "remap": [8, 16, 174, 216, 231, 245, 249], "visual": [8, 11, 14, 166, 190, 216, 218, 223, 225, 226, 230, 231, 245, 247, 249], "lot": [9, 127, 223, 227, 232], "o": [9, 10, 104, 106, 119, 227, 228, 232, 233, 250], "relat": [9, 11, 12, 127, 212, 215, 218, 219, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 248, 249, 250], "handl": [9, 10, 225, 228, 232, 238], "intern": [9, 19, 41, 223, 228, 229], "lower": [9, 225, 232, 244], "directli": [9, 11, 12, 14, 32, 221, 223, 227, 230, 231, 232, 235], "aren": [9, 32, 33, 223, 227, 228, 232, 252], "readm": [9, 225], "importlib": [9, 225], "resourc": [9, 12, 29, 36, 39, 52, 82, 83, 84, 130, 142, 143, 170, 186, 195, 215, 218, 223, 225, 232], "import": [9, 10, 11, 12, 14, 16, 220, 223, 225, 226, 227, 228, 230, 232], "files_for_e3sm": [9, 225, 233], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 129, 134, 136, 142, 150, 167, 169, 172, 174, 176, 195, 203, 223, 225, 226, 232], "did": [9, 15, 110, 232], "add_input_fil": [9, 14, 33, 223, 225, 232], "collect": [9, 45, 90, 128, 220, 222, 230, 232], "though": [9, 32, 225, 227, 232], "whenev": [9, 223, 232], "flexibl": [9, 216, 225, 228, 232], "care": [9, 11, 223, 226, 228, 232], "No": [9, 231, 247], "step_dir": 9, "database_root": [9, 223, 233, 234, 235, 236, 237, 238, 239, 250], "download_path": 9, "join": [9, 232], "bathymetry_databas": [9, 223, 233], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 207, 223, 226, 232, 241, 244, 245, 247, 248, 249, 251], "url": [9, 34, 51, 223, 229, 233], "web": [9, 223, 233], "anl": [9, 223, 233], "gov": [9, 223, 229, 233, 235, 239], "mpas_standalonedata": [9, 233, 238], "dest_path": [9, 51], "remot": [9, 34, 228], "bathymetri": [9, 223, 233], "strategi": 10, "stderr": [10, 32, 41, 223], "loggingcontext": 10, "check_cal": [10, 223], "most": [10, 38, 124, 212, 220, 223, 226, 227, 228, 230, 232, 233, 238, 239, 241, 242, 251], "won": [10, 227, 232, 233], "logger": [10, 32, 41, 59, 84, 223, 225, 232], "full": [10, 32, 83, 99, 205, 206, 215, 216, 223, 225, 228, 231, 232, 238, 241, 243, 244, 245, 247, 248, 249, 250], "although": 10, "captur": 10, "insid": [10, 223, 227], "good": [10, 32, 223, 228, 232], "idea": [10, 232], "explicit": [10, 227], "go": [10, 223, 225, 226, 227, 228, 232, 239], "even": [10, 11, 12, 15, 34, 50, 124, 223, 227, 228, 232, 233, 238, 250], "subprocess": [10, 32, 83, 84, 98, 223, 227, 229], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 127, 138, 148, 158, 215, 216, 218, 219, 223, 227, 228, 232, 247, 250], "otherwis": [10, 15, 223, 225, 232, 234, 235, 236, 237, 238, 239, 244], "intent": 10, "desir": [10, 11, 12, 15, 16, 110, 127, 216, 223, 224, 232, 233, 250], "trick": [10, 223], "direct": [10, 11, 12, 72, 183, 215, 218, 225, 232, 239, 244, 247], "snippet": [10, 232], "dome": [10, 59, 223, 225, 226, 230, 250, 251], "setup_mesh": [10, 223], "setupmesh": [10, 223, 225], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 59, 124, 220, 226, 227, 228, 230, 232, 233], "mpas_grid": [10, 223], "landice_grid": [10, 223, 232], "l": [10, 110, 232, 239], "sever": [10, 223, 225, 226, 227, 228, 230, 231, 232, 249, 250, 252], "global": [11, 14, 45, 91, 92, 97, 162, 163, 216, 223, 224, 226, 227, 230, 231, 232, 233, 239, 245, 249, 250, 251], "quasiuniformsphericalmeshstep": [11, 216], "icosahedralmeshstep": [11, 216], "jigsaw": [11, 60, 64, 66, 67, 69, 71, 73, 163, 166, 223], "complex": [11, 15, 68, 225, 227, 232], "build_cell_width_lat_lon": [11, 67], "opt": [11, 73], "make_jigsaw_mesh": [11, 67], "icosahedr": [11, 60, 62, 163, 166, 245], "significantli": [11, 241], "smooth": 11, "cell": [11, 12, 16, 60, 61, 62, 63, 67, 68, 69, 72, 75, 89, 96, 127, 129, 130, 143, 167, 170, 183, 184, 186, 204, 205, 206, 207, 210, 211, 215, 218, 223, 225, 226, 241, 244, 245, 247, 248, 249], "quasi": [11, 67, 233, 245, 249], "hand": [11, 92, 227], "restrict": [11, 232, 249], "resolut": [11, 12, 14, 60, 63, 67, 68, 72, 88, 92, 95, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 163, 166, 167, 169, 179, 185, 188, 190, 193, 195, 196, 198, 215, 216, 218, 219, 221, 223, 225, 226, 233, 244, 245, 247, 248, 249, 251], "subdivis": [11, 60, 61, 62, 63, 64], "icosahedron": [11, 61, 62, 63, 64], "tabl": [11, 228, 238, 250], "approxim": [11, 60, 62, 63, 67, 127, 130, 143, 170, 186, 228, 232], "width": [11, 60, 61, 62, 67, 68, 69, 75, 232, 244], "km": [11, 60, 61, 62, 63, 67, 68, 69, 72, 75, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 169, 185, 188, 195, 196, 198, 215, 216, 218, 232, 233, 244, 245, 247, 248, 249, 251], "5": [11, 62, 127, 152, 215, 216, 223, 224, 225, 227, 229, 232, 233, 244, 245, 249, 250], "240": [11, 62, 216, 233, 245], "6": [11, 62, 223, 232, 242, 244, 248, 250], "120": [11, 62, 224, 245], "7": [11, 62, 232, 239, 245, 250], "60": [11, 12, 62, 216, 241, 245], "8": [11, 62, 215, 225, 228, 232, 233, 244, 245, 247, 250], "30": [11, 62, 226, 232, 239, 244, 245, 248, 249], "9": [11, 16, 62, 216, 232, 245, 250], "15": [11, 12, 62, 215, 232, 244, 245, 248, 249, 250], "10": [11, 15, 62, 212, 215, 218, 225, 226, 232, 233, 238, 241, 244, 247, 248, 251], "11": [11, 62, 232, 250], "3": [11, 62, 215, 223, 224, 226, 228, 229, 232, 233, 238, 239, 241, 244, 245, 247, 249, 250], "12": [11, 62, 232, 235], "13": [11, 62, 232, 244], "94": [11, 62], "spherical_mesh": [11, 68], "cell_width": [11, 60, 61, 62, 63, 67, 68, 69, 75], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 60, 67, 223, 232], "plot": [11, 75, 111, 112, 127, 155, 160, 174, 200, 215, 216, 218, 245, 247, 251], "plot_cell_width": 11, "cell_width_filenam": [11, 75], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 111, 174, 216, 233, 245], "lon": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 111, 174, 216, 233, 245], "sphere": [11, 216, 245], "vtk_lat_lon": 11, "far": [11, 204, 210, 211, 227, 232], "But": [11, 124, 223, 226, 227, 228, 232, 233, 238], "hexagon": [11, 72, 232, 247], "planar_hex": [11, 72, 215, 218, 219, 223, 232], "make_planar_hex_mesh": [11, 72, 215, 218, 219, 223, 232], "x": [11, 16, 61, 68, 69, 72, 75, 91, 97, 112, 134, 183, 223, 225, 232, 244, 247, 248], "y": [11, 12, 16, 72, 91, 97, 112, 183, 215, 218, 223, 225, 232, 239, 244, 247], "nx": [11, 72, 223, 226, 232], "ny": [11, 72, 223, 226, 232], "dc": [11, 223, 226, 232], "distanc": [11, 72, 232, 244], "adjac": [11, 241], "center": [11, 16, 72, 183, 226, 232, 241, 244], "admittedli": 11, "oddli": 11, "period": [11, 214, 215, 218, 223, 232, 244, 247], "nonperiodic_x": [11, 223, 232], "nonperiodic_i": [11, 223, 232], "consider": [11, 204, 210, 211, 214], "compute_planar_hex_nx_ni": [11, 232], "lx": [11, 72, 232, 244, 247, 248], "ly": [11, 72, 232, 244, 248], "explan": 11, "subtleti": 11, "account": [11, 72, 228, 232, 234, 235, 237, 238, 239, 250], "behav": 11, "stagger": [11, 72], "strictli": [11, 227, 232], "physic": [11, 72, 232], "howev": [11, 223, 224, 225, 228, 232], "np": [11, 16, 216, 232, 245], "sqrt": [11, 247], "domain": [11, 19, 26, 72, 112, 127, 129, 134, 214, 226, 232, 244, 245, 247, 248, 249, 251], "extra": [11, 228], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 226, 232], "max": [11, 127, 223, 232, 245], "int": [11, 12, 19, 20, 29, 32, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 83, 84, 87, 112, 129, 130, 142, 143, 163, 166, 167, 169, 170, 179, 185, 186, 190, 195, 223, 232, 248], "ds_mesh": [11, 16, 112, 232], "creation": [11, 223, 233], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 83, 84, 129, 223, 226, 227, 232], "distant": 11, "futur": [11, 38, 223, 227, 230, 231, 232, 233, 248, 250, 251], "descend": [12, 14, 127, 220, 223, 225, 226, 227, 232], "modelstep": [12, 127, 223, 225, 232], "update_pio": [12, 19, 129], "librari": [12, 120, 124, 228, 232, 234, 235, 236, 237, 238, 239, 250], "make_graph": [12, 19, 129], "mpi": [12, 14, 87, 120, 123, 124, 129, 131, 133, 215, 218, 223, 228, 229, 231, 232, 234, 235, 236, 237, 239, 250], "construct": [12, 128, 202, 204, 205, 206, 210, 211, 214, 219, 220, 225, 226, 232, 244], "non": [12, 15, 214, 223, 232, 250], "At": [12, 32, 41, 221, 222, 232], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 84, 129, 142, 158, 185, 195, 215, 223, 224, 230, 232, 233, 235, 239, 244], "openmp_thread": [12, 19, 29, 32, 39, 84, 129, 142, 185, 195, 223, 225, 232], "definit": [12, 232], "prefix": [12, 34, 228, 233], "end": [12, 215, 223, 225, 227, 228, 230, 232, 235, 244, 245, 247, 248], "yml": 12, "reason": [12, 14, 38, 223, 227, 232, 252], "add_namelist_fil": [12, 19, 127, 223, 225], "add_yaml_fil": [12, 19, 223, 225, 232], "add_model_config_opt": [12, 19, 223, 225, 232], "add_streams_fil": [12, 19, 127, 223, 225], "themselv": [12, 227, 231], "question": [12, 223, 233], "constructor": [12, 215, 218, 220, 226, 232], "simpli": [12, 50, 140, 193, 196, 220, 223, 225, 226, 228, 232, 241, 250, 252], "safe": [12, 15, 223, 228, 244], "never": [12, 230], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": [12, 232], "config_run_dur": [12, 225, 232], "0024_00": 12, "00": [12, 15, 225, 232, 239, 250], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 138, 230, 232], "config_block_decomp_file_prefix": [12, 232], "time_integr": [12, 232], "config_time_integr": 12, "rk4": [12, 227, 252], "filename_templ": [12, 232], "restart": [12, 41, 148, 150, 215, 218, 219, 224, 227, 230, 232, 244], "output_interv": [12, 232], "0030_00": 12, "clobber_mod": [12, 232], "truncat": [12, 232], "reference_tim": 12, "0001": [12, 232], "01": [12, 232, 248], "01_00": [12, 232], "tracer": [12, 16, 215, 216, 218, 219, 232, 245, 247, 248], "xtime": [12, 232], "normalveloc": [12, 15, 16, 139, 141, 149, 154, 159, 182, 194, 214, 215, 218, 219, 223, 232, 248], "layerthick": [12, 15, 127, 137, 139, 141, 149, 154, 159, 182, 194, 204, 208, 209, 210, 211, 215, 218, 219, 223, 225, 232], "refzmid": [12, 204, 210, 211, 223, 232], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15, 232], "clariti": [12, 223], "guarante": [12, 212, 228], "uniqu": [12, 225, 232], "global_converg": [12, 212, 217, 232, 242, 243, 246], "cosine_bel": [12, 232, 249], "substitut": 12, "config_write_output_on_startup": [12, 232], "0000_00": [12, 232], "config_use_mom_del2": [12, 232], "config_implicit_bottom_drag_coeff": [12, 232], "0e": [12, 248], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": [12, 232], "config_cvmix_background_viscos": [12, 232], "worri": 12, "sometim": [12, 204, 210, 211, 223, 225, 230, 232], "easier": [12, 223, 227, 228, 233, 250, 252], "togeth": [12, 230, 232, 252], "seem": [12, 232, 235, 239], "overkil": 12, "reli": [12, 223, 232], "differ": [12, 14, 15, 50, 64, 69, 110, 124, 127, 142, 152, 212, 215, 220, 221, 223, 224, 225, 226, 227, 230, 232, 233, 235, 239, 244, 245, 247, 249], "along": [12, 16, 215, 223, 225, 231, 232], "could": [12, 14, 16, 216, 223, 224, 225, 227, 228, 232, 245], "nu": [12, 142, 155, 195, 215, 223, 225, 232], "viscos": [12, 142, 152, 155, 215, 223, 225, 227, 232, 244], "hmix": 12, "config_mom_del2": [12, 215, 223, 232], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 102, 103, 108, 110, 111, 115, 129, 130, 142, 143, 144, 151, 163, 166, 170, 171, 186, 187, 195, 232], "cannot": [12, 15], "known": [12, 32, 33, 216, 223, 232], "beforehand": 12, "particularli": [12, 229, 232, 249], "openmp": [12, 19, 29, 32, 39, 84, 120, 122, 123, 129, 142, 185, 195, 223, 232, 234, 235, 236, 237, 239], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 227, 230, 232, 244, 250], "complic": [12, 226, 227, 228, 232], "xml": [12, 104, 106, 107, 119, 230], "slightli": [12, 15, 228], "sophist": 12, "immutable_stream": [12, 232], "var_struct": 12, "var": [12, 105, 232], "var_arrai": 12, "tag": [12, 231], "taken": [12, 19, 129, 216, 223, 232, 239, 250], "past": 12, "experi": [12, 124, 227, 241], "shown": [12, 221, 225, 248], "featur": [12, 227, 228, 230, 232, 233, 244, 248], "difficult": [12, 124, 238], "synchron": [12, 231], "equival": [12, 228, 232, 234], "try": [12, 53, 227, 228, 229, 232, 233, 235, 239, 250], "template_replac": [12, 22, 23], "treat": [12, 224, 227], "jinja2": [12, 22, 23, 104], "render": [12, 22, 23, 104], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 233], "qu240dynamicadjust": 12, "seri": [12, 127, 155, 160, 200, 216, 218, 232, 243], "dynam": [12, 129, 162, 212, 219, 233, 244, 245, 248, 249], "adjust": [12, 127, 162, 212, 233], "durat": [12, 215, 218, 219, 224, 232], "interv": 12, "spin": 12, "reus": [12, 223, 227, 228, 232, 233, 250], "qualit": [12, 15], "affect": [12, 15, 223, 228, 232], "update_streams_at_runtim": 12, "fairli": [12, 225, 227, 228, 232], "hour": [12, 218, 224, 235, 239, 247, 250], "turn": [12, 32, 49, 223, 229, 232, 248], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 241, 244, 248], "minut": [12, 215, 224, 244, 252], "dai": [12, 152, 215, 216, 219, 225, 232, 244, 245, 248], "03d": 12, "_": [12, 87, 223, 225, 228, 232, 248], "02d": 12, "forgotten": 12, "broken": [12, 223, 227], "immedi": [12, 59, 228, 232], "miss": [12, 15, 223, 232, 233], "detect": [12, 16, 233, 234, 236, 237, 238, 250], "gpmeti": [12, 233], "divid": [12, 241], "partition_graph": [12, 19, 129], "circumst": [12, 15, 32, 33, 223, 232], "wast": 12, "manual": [12, 15, 41, 42, 223, 225, 251], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 36, 39, 54, 82, 83, 84, 124, 129, 223, 224, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 250], "v1": [12, 241], "better": [12, 14, 124, 250], "v2": [12, 233, 241], "littl": [12, 227, 228, 231, 232], "feel": [12, 223, 232], "runtime_setup": [12, 14, 29, 39, 215, 218, 225], "onc": [12, 215, 228, 232, 233, 245, 250], "yourself": [12, 232, 238], "fact": [12, 32], "culler": 12, "cull": [12, 215, 218, 223, 232], "model_step": [12, 223], "make_graph_fil": [12, 223], "field": [12, 15, 75, 77, 112, 174, 204, 210, 211, 214, 215, 218, 219, 232, 244, 245, 247], "weight": [12, 14, 77, 204, 210, 211, 232, 241], "weight_field": [12, 77], "frequent": [14, 212], "observ": [14, 231], "dataset": [14, 112, 183, 204, 210, 211, 223, 232], "region": [14, 16, 231, 233], "pyremap": [14, 93], "interpol": [14, 87, 216, 233], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 223, 228], "mappingfilestep": [14, 16], "woa": 14, "2023": [14, 247], "__init__": [14, 17, 19, 32, 41, 45, 50, 59, 60, 67, 73, 87, 113, 128, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 181, 183, 185, 188, 190, 192, 193, 195, 196, 198, 200, 220, 223, 225, 226, 227, 230, 232], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 241], "bilinear": [14, 87, 216, 245, 249], "filenam": [14, 34, 35, 81, 88, 89, 90, 91, 95, 96, 97, 100, 110, 114, 116, 223, 228, 232], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 233], "destin": [14, 87, 88, 89, 90, 91, 92, 93], "src_from_lon_lat": 14, "lon_var": [14, 88, 90, 95], "lat_var": [14, 88, 90, 95], "dst_from_mpa": 14, "mesh_nam": [14, 88, 89, 90, 91, 92, 95, 96, 97, 167, 169, 172, 174, 176], "qu60": 14, "subclass": [14, 64, 67, 68, 69, 74, 127, 232], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 163, 174, 216], "super": [14, 220, 223, 225, 226, 227, 232], "128": [14, 224, 235, 236, 239], "cosine_bell_viz": [14, 16, 216, 245, 249], "dlon": [14, 92, 216, 245, 249], "dlat": [14, 92, 216, 245, 249], "remap_method": [14, 216, 245, 249], "src_from_mpa": 14, "dst_global_lon_lat": 14, "lon_min": [14, 92], "With": [14, 228], "approach": [14, 223, 226, 227, 228, 229, 232, 241], "perhap": [14, 16, 35, 226], "cover": [14, 232], "nearli": [14, 223, 230, 231, 232], "situat": [14, 25, 132, 232, 250], "workflow": [14, 223, 228], "critic": [15, 232], "compare_vari": [15, 225, 232], "filename1": [15, 110, 225, 232], "filename2": [15, 110, 232], "simpl": [15, 227, 232, 250], "temperatur": [15, 137, 139, 141, 149, 154, 159, 194, 197, 214, 215, 219, 223, 225, 232, 244, 245, 248, 249], "salin": [15, 137, 139, 141, 149, 154, 159, 194, 197, 214, 215, 219, 223, 225, 232, 244, 245, 248, 249], "prognost": [15, 244], "4proc": [15, 139, 232, 244], "8proc": [15, 139, 232, 244], "alter": [15, 205, 206, 223, 225, 231, 232, 241, 244, 245, 247, 248, 249], "skip_if_step_not_run": [15, 110, 225], "possibli": [15, 223, 228, 232], "failur": 15, "valueerror": [15, 225, 226, 227], "quiet": [15, 99, 110, 115], "report": 15, "threshold": [15, 245, 247], "l1": [15, 110], "00000000000000e": 15, "l2": [15, 110], "l_infin": 15, "linf": [15, 110], "home": [15, 228, 232, 233, 235, 238, 239], "xylar": [15, 232, 233, 238], "test_nightly_latest": 15, "10km": [15, 215, 225, 226, 232, 244, 250, 251, 252], "threads_test": [15, 232, 250, 252], "1thread": [15, 159, 215, 244], "2thread": [15, 159, 244], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 223, 225, 232], "disabl": [15, 16, 214, 245, 251], "check_output": [15, 110], "zero": [15, 205, 206, 207, 208, 209, 214, 215, 219, 232, 245, 248], "l1_norm": [15, 110], "l2_norm": [15, 110], "linf_norm": [15, 110], "nonzero": [15, 110], "easiest": [15, 228], "solut": [15, 123, 183, 184, 216, 218, 224, 229, 232, 247], "clobber": 15, "error": [15, 32, 41, 127, 167, 216, 218, 223, 228, 231, 232, 247], "judgment": 15, "enough": [15, 215, 223, 227, 232], "problem": [15, 223, 228, 229, 232], "compare_tim": 15, "integr": [15, 152, 215, 225, 227, 232, 244, 245, 249], "rundir1": [15, 109], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": [16, 232], "often": [16, 32, 223, 224, 225, 226, 227, 228, 230, 232, 233, 251, 252], "analysi": [16, 127, 215, 225, 227, 230, 231, 233, 245, 247, 251], "routin": 16, "viz": [16, 163], "plot_horiz_field": [16, 232], "patch": [16, 112, 232], "style": [16, 127, 231, 232], "edg": [16, 89, 92, 96, 112, 183, 214, 232], "polygon": 16, "character": 16, "accordingli": [16, 85], "d": [16, 112, 183, 204, 210, 211, 214, 223, 232, 248], "final_normalveloc": [16, 232], "t_index": [16, 112, 232], "vmin": [16, 112, 216, 232, 245], "max_veloc": [16, 232], "vmax": [16, 112, 216, 232, 245], "cmap": [16, 112, 232], "cmo": [16, 232], "balanc": [16, 232], "show_patch_edg": [16, 112, 232], "globe": [16, 216, 245], "plot_glob": 16, "plot_land": [16, 111], "contin": [16, 111], "overlain": 16, "usag": [16, 233, 235, 239], "cmocean": [16, 232], "noqa": [16, 59, 166, 169, 172, 190, 232], "f401": [16, 232], "xr": [16, 183, 184, 232], "open_dataset": [16, 223, 232], "tracer1": 16, "isel": 16, "nvertlevel": [16, 112, 204, 210, 211, 223, 232, 241], "out_filenam": [16, 107, 111, 203], "colormap_sect": [16, 111], "titl": [16, 111, 112], "colormap": [16, 111, 112, 216, 232, 245], "cosin": [16, 166, 169, 172, 174, 176, 216, 245, 249], "bell": [16, 166, 169, 172, 174, 176, 216, 245, 249], "converg": [16, 190, 216, 221, 224, 231, 232, 245, 249], "colormap_nam": [16, 111, 216, 245], "viridi": [16, 216, 232, 245], "norm": [16, 110, 111, 216, 245], "norm_typ": [16, 111, 216, 245], "linear": [16, 111, 112, 216, 218, 232, 244, 245, 247], "norm_arg": [16, 111, 216, 245], "colorbar": [16, 111, 112, 216, 245], "tick": [16, 111, 216, 245], "mark": [16, 216, 228, 245], "ll": [16, 216, 227, 232, 239, 245], "colorbar_tick": [16, 111, 216, 245], "matplotlib": [16, 232], "standard": [16, 227, 228, 232, 235, 250], "symlog": [16, 111], "symmetr": 16, "central": [16, 245], "logarithm": [16, 112], "color": [16, 112], "normal": [16, 183, 214, 223, 224, 228, 232, 238], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 223, 250], "dict": [17, 20, 22, 23, 25, 32, 36, 41, 45, 79, 80, 82, 86, 87, 101, 103, 104, 111, 113, 114, 115, 132, 225, 232], "kei": [17, 41, 45, 103, 225], "cach": [17, 19, 32, 34, 102, 103, 129, 231, 233, 238, 243, 250, 252], "testgroup": [18, 32, 41, 226, 227, 232], "max_memori": [19, 29, 32, 39, 129], "mesh_filenam": [19, 77, 129], "graph_filenam": [19, 77, 129], "graph": [19, 26, 28, 38, 77, 129, 215, 218, 223, 232, 233], "make_yaml": 19, "pio": [19, 28, 31, 129, 215, 218], "stride": [19, 31, 129], "consist": [19, 31, 129, 212, 228, 232, 233, 244], "partit": [19, 28, 38, 54, 77, 129, 215, 218, 223, 233, 234, 235, 236, 237, 239, 250], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 83, 84, 87, 127, 129, 142, 185, 195, 223, 226, 227, 231, 232, 233, 251], "accommod": [19, 29, 32, 39, 83, 84, 129], "fewer": [19, 29, 32, 39, 83, 84, 129, 142, 185, 195, 223, 232, 250], "amount": [19, 29, 32, 39, 129, 223, 240, 248], "memori": [19, 29, 32, 39, 129, 223, 233], "mb": [19, 29, 32, 39, 129, 233], "placehold": [19, 29, 32, 39, 129, 223, 250], "at_setup": [24, 127, 130, 143, 144, 151, 170, 171, 186, 187, 232], "overridden": [25, 132, 223, 225, 232], "diverg": [25, 132], "counterpart": [25, 127, 132], "nest": [25, 113, 115, 132], "graph_fil": 26, "parent": [27, 220, 223, 226], "done": [29, 39, 223, 228, 232, 250], "run_as_subprocess": [32, 223], "smallest": [32, 223, 230, 241, 251], "unit": [32, 88, 92, 95, 223, 230, 244, 251], "term": [32, 230, 232, 247], "necessarili": [32, 34, 230], "input_data": 32, "until": [32, 33, 223, 225, 250], "finish": [32, 33, 74, 232], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 55, 86, 113, 223, 224, 225, 229, 232, 233, 250], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 100, 223, 225], "base_work_dir": [32, 41, 223, 225], "log_filenam": [32, 41, 223], "redirect": [32, 223], "extern": [32, 212, 220, 223, 242], "access": [33, 225, 227, 228, 232, 234, 238, 239], "database_compon": [34, 223], "work_dir_target": [34, 223], "come": [34, 223, 228, 232, 234, 235, 236, 237, 238, 239, 242], "root": [34, 167, 212, 216, 218, 220, 223, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 241, 247, 250], "suffix": [34, 103, 223], "_database_root": 34, "append": 34, "available_resourc": [36, 82], "constrain": [36, 130, 143, 170, 186, 215, 218, 223, 232], "cores_per_nod": [36, 82, 85, 233, 234, 235, 236, 237, 238, 239, 250], "everi": [37, 177, 215, 223, 225, 227, 229, 230, 232, 244, 248], "child": [37, 177, 220, 223, 225, 227], "serial": [38, 223, 225, 231, 232, 250], "subtask": 39, "stdout_logg": 41, "goe": [41, 223, 232], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 134, 225, 227, 232, 250], "statu": 41, "run_by_default": [42, 223, 225], "assum": [43, 104, 114, 225, 228, 232, 239, 244], "prior": [43, 223, 225], "greenland": [45, 226, 230, 231, 251], "eismint2": 45, "step_path": 48, "variant": [48, 215, 224, 226, 227, 228, 232, 238, 241, 244, 245], "uncach": 48, "datestamp": 48, "yymmdd": [48, 233], "dry": [48, 224], "meta": 50, "empti": [50, 223, 227, 228, 230, 232], "link_nam": 53, "overwrit": 53, "stackoverflow": [53, 232], "55742015": 53, "7728169": [53, 232], "symbol": [53, 223], "fileexistserror": 53, "unless": [53, 99, 228], "isadirectoryerror": 53, "slurm": [54, 85, 223, 231, 233, 234, 235, 236, 237, 239, 250], "qo": [54, 234, 235, 237, 238, 239, 250], "qualiti": [54, 234, 235, 237, 238, 239, 250], "servic": [54, 234, 235, 237, 238, 239, 250], "constraint": [54, 239, 250], "wall_tim": [54, 250], "wall": [54, 250], "target_cor": 55, "min_cor": 55, "decomposition_test": [59, 226, 250], "decompositiontest": [59, 226], "e501": [59, 166, 169, 172, 190, 232], "turquois": [59, 235], "usr": [59, 235, 250], "climat": [59, 234, 235, 236, 238, 250], "mhoffman": 59, "latitud": [61, 68, 88, 90, 92, 95, 111, 216, 245, 249], "longitud": [61, 68, 69, 75, 88, 90, 92, 95, 111, 216, 245, 249], "ndarrai": [61, 68, 69, 75, 111, 134, 202, 203, 232], "degre": [61, 68, 69, 75, 92, 233, 244], "length": [61, 68, 69, 75], "180": [61, 68, 69, 75, 92, 245], "90": [61, 68, 69, 75, 223, 245], "static": [62, 63], "rule": 62, "thumb": 62, "achiev": [63, 224], "close": [63, 231, 245], "uniform": [67, 72, 169, 215, 216, 218, 226, 232, 233, 244, 245, 247, 248, 249], "natur": 72, "jigsawpi": [73, 223], "jigsaw_jig_t": 73, "meti": 77, "defaults_filenam": 78, "total": [82, 223, 224, 227, 232, 233, 235, 250], "substep": [83, 84], "command_line_arg": 83, "cpus_per_nod": 85, "map_filenam": 87, "src_grid_info": 87, "dst_grid_info": 87, "neareststod": [87, 216, 245, 249], "conserv": [87, 216, 245, 249], "map_": 87, "source_typ": 87, "dest_typ": 87, "1d": [88, 92, 95, 111, 127, 202, 203, 204, 205, 206, 207, 208, 210, 211], "2d": [88, 92, 95, 111], "5x0": [88, 92, 95], "5degre": [88, 92, 95], "coordin": [88, 90, 91, 95, 97, 111, 112, 183, 204, 210, 211, 240, 242, 244, 245, 247, 248, 249], "mesh_typ": [89, 96, 223, 225, 226], "vertex": [89, 96], "x_var": [91, 97], "y_var": [91, 97], "proj_attr": [91, 97], "proj_str": [91, 97], "proj": [91, 97], "left": [92, 127, 232, 241, 245], "remapp": [93, 94], "remap_fil": 93, "step_is_subprocess": 98, "is_test_cas": 99, "steps_to_skip": 99, "progress": 99, "unpickl": [101, 223], "cached_step": 102, "copy_execut": [102, 103, 108, 250], "serv": [102, 103, 108, 226, 232], "_all": [102, 103], "streams_filenam": 104, "lxml": [104, 106, 119], "etre": [104, 106, 119], "new_child": 105, "children": 105, "sub": [105, 232], "new_tre": 106, "rundir2": 109, "infin": 110, "toler": 110, "exclud": [110, 250], "data_arrai": 111, "colorbar_label": 111, "subtitl": 111, "field_nam": 112, "out_file_nam": 112, "ax": 112, "z_index": 112, "cmap_set_und": 112, "cmap_scal": 112, "cmap_titl": 112, "horizont": [112, 127, 196, 214, 215, 218, 219, 244, 247, 248], "planar": [112, 127, 214, 232, 247, 248, 249], "depth": [112, 127, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 232, 233, 241, 244, 245, 247, 248, 249], "slice": 112, "fieldnam": 112, "present": [112, 228, 232], "visibl": 112, "bar": 112, "classmethod": 114, "jinja": 114, "namelist_templ": 118, "polarisyaml": [118, 119], "processed_registry_filenam": 119, "registri": [119, 214], "steam": 119, "load_dev_polaris_0": [120, 121, 122, 123, 124, 125, 232], "alpha": [120, 121, 122, 123, 124, 125, 232], "1_anvil_intel_impi": [120, 124], "sh": [120, 121, 122, 123, 124, 125, 228, 229, 232, 234, 235, 236, 237, 239, 250], "openmpi": [120, 124, 228, 231, 234, 236, 237, 250], "mvapich": [120, 124, 234], "impi": [120, 124, 234, 237], "ifort": [120, 122, 124, 232, 234, 236], "ve": [120, 121, 122, 123, 125, 223, 228, 232], "1_anvil_gnu_openmpi": 120, "gfortran": [120, 122, 123, 124, 228, 234, 236], "load": [121, 124, 125, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239], "1_chicoma": 121, "cpu_gnu_mpich": [121, 125], "crai": [121, 124, 125, 235, 239], "1_chrysalis_intel_openmpi": 122, "1_chrysalis_gnu_openmpi": 122, "yet": [123, 127, 223, 227, 232], "again": [123, 212, 223, 228, 229, 250], "soon": [123, 232, 250], "1_compy_intel_impi": 123, "1_compy_gnu_openmpi": 123, "attempt": [124, 231, 238], "particular": [124, 226, 228, 231, 235, 238, 250], "activ": [124, 238, 239, 250], "load_polaris_env": [124, 228, 232, 250], "were": [124, 142, 195, 223, 227, 230, 232, 233, 237, 241], "job": [124, 228, 231, 232, 234, 235, 236, 237, 239], "right": [124, 127, 225, 228, 232, 233, 241, 245, 250], "therefor": [124, 223, 230, 232], "gnu": [124, 228, 237, 238, 250], "lib": 124, "intel": [124, 238], "chicoma": [124, 238, 250], "mpich": [124, 228, 231, 235, 239, 250], "compi": [124, 237, 250], "pm": [124, 239, 250], "compymcnodefac": [124, 238], "perlmutt": [124, 235, 238, 250], "pretti": [124, 223, 227, 232, 233], "forg": [124, 231, 250], "linux": [124, 228, 238], "configure_polaris_env": [124, 228, 229, 232], "conda_path": [124, 228], "osx": [124, 238], "clang": [124, 228], "had": 124, "1_": 124, "1_pm": 125, "ever": [127, 227], "expand": [127, 241], "oceanmodelstep": [127, 232], "decid": [127, 232], "veri": [127, 220, 223, 227, 228, 232, 248], "earli": [127, 242, 250], "stage": [127, 214, 223, 225, 228, 242, 250], "map_yaml_to_namelist": 127, "count": [127, 224], "heurist": 127, "exact": [127, 183, 184, 216, 218, 227, 247], "algorithm": [127, 142, 195, 215, 218, 223, 232], "200": [127, 218, 225, 232, 244, 247, 248], "round": [127, 245], "cell_count": [127, 130, 143, 170, 186, 232], "goal_cells_per_cor": [127, 232, 245, 247, 249], "pinch": 127, "2000": [127, 226, 232], "max_cells_per_cor": [127, 232, 245, 247, 249], "seciton": 127, "control": [127, 216, 223, 233, 244, 245, 248, 250], "scale": [127, 244, 250], "tri": [127, 227], "apport": 127, "precis": [127, 223, 232], "caviti": [127, 227, 232, 233, 241], "frazil": 127, "flux": [127, 214, 248], "grid_1d": 127, "generate_1d_grid": 127, "vertical_grid": [127, 202, 204, 210, 211, 226, 232, 233, 241, 244, 245, 247, 248, 249], "z": [127, 205, 206, 207, 208, 209, 210, 211, 232, 244, 245, 247, 248, 249, 252], "star": [127, 209, 211, 232, 244, 245, 247, 248, 249, 252], "init_vertical_coord": [127, 232], "minlevelcel": [127, 204, 206, 207, 208, 209, 210, 211, 232], "maxlevelcel": [127, 204, 205, 206, 207, 208, 209, 210, 211, 223, 232], "cellmask": [127, 204, 207, 210, 211, 232], "zmid": [127, 204, 210, 211, 232], "restingthick": [127, 204, 209, 210, 211, 223, 232], "bottomdepth": [127, 204, 205, 207, 208, 209, 210, 211, 223, 232], "entir": [127, 232, 244, 252], "petersen": [127, 228, 232, 244], "et": [127, 232, 241, 244, 245, 247], "al": [127, 232, 241, 244, 245, 247], "2015": [127, 232, 244], "int_": 127, "rho": 127, "dv": 127, "sort": [127, 221, 227, 228], "increas": [127, 227], "compute_rp": [127, 232], "csv": [127, 232], "dynamic_ntask": 129, "available_cor": 131, "estim": [131, 133, 232], "initial_state_file_nam": [134, 232], "output_fil": [134, 223, 232], "rest": [134, 209, 241, 245], "potenti": [134, 152, 223, 225, 232, 244], "energi": [134, 152, 225, 231, 232, 244], "netcdf": [134, 219, 233, 234, 235, 236, 237, 238, 239], "state": [134, 214, 215, 216, 218, 219, 223, 224, 232, 245], "len": [134, 223, 232], "superclass": [136, 215, 223], "run_time_step": [142, 195, 232], "resources_fix": [142, 195], "shouldn": [142, 195, 232], "dt": [142, 195, 232, 244, 245, 247, 249], "btr_dt": [142, 195, 232, 244], "barotrop": [142, 195, 232, 244, 248], "longer": [148, 215, 224, 232, 244, 245, 252], "shorter": [148, 224], "rpe": [152, 155, 160, 200, 225, 232, 244], "20": [152, 215, 224, 225, 232, 244, 248], "include_viz": 163, "less": [163, 166, 223, 241, 248], "globalocean": [163, 220], "cosinebel": [166, 169, 172, 216], "rmsevalu": 167, "squar": [167, 216, 218, 247], "ncell": [167, 223, 232], "viz_map": 174, "inerti": [178, 179, 181, 183, 185, 188, 190, 218, 242, 246], "graviti": [178, 179, 181, 183, 185, 188, 190, 218, 242, 246], "wave": [178, 179, 181, 183, 185, 188, 190, 218, 223, 232, 242, 244, 246], "analys": 179, "inertialgravitywav": [181, 218], "angleedg": 183, "angl": 183, "posit": [183, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 232, 241, 248], "xcell": [183, 223, 232], "ycell": [183, 223, 232], "xedg": [183, 223, 232], "yedg": 183, "f0": 183, "corioli": [183, 218, 232, 244, 245, 248], "eta0": 183, "amplitid": 183, "kx": 183, "ky": 183, "angular": 183, "frequenc": [183, 215], "evalu": 184, "eta": [184, 247], "column": [192, 193, 196, 198, 219, 228, 248, 250], "param": [193, 196, 198, 225, 226], "singlecolumn": [193, 196, 219], "iag": 197, "ideal_ag": [198, 200], "ivar": 198, "layer": [202, 203, 204, 208, 209, 210, 211, 214, 215, 218, 219, 232, 233, 241, 244, 245, 247, 248, 249], "meter": [202, 203], "bottom": [204, 205, 206, 207, 208, 209, 210, 211, 214, 232, 233, 241, 244, 245, 247, 248, 249], "thick": [204, 208, 209, 210, 211, 215, 219, 232, 233, 241, 244, 247], "stretch": [204, 210, 211, 232, 241], "elev": [204, 210, 211, 232, 241], "midpoint": [204, 210, 211, 232], "reftopdepth": [204, 207, 208, 210, 211, 232], "down": [204, 205, 206, 207, 208, 209, 210, 211, 216, 232, 241, 245], "ref": [204, 210, 211, 232], "middl": [204, 210, 211, 232], "refbottomdepth": [204, 205, 206, 207, 208, 210, 211, 223, 232], "refinterfac": [204, 210, 211, 232], "element": [204, 210, 211, 232], "vertcoordmovementweight": [204, 210, 211, 223, 232], "movement": [204, 210, 211, 232], "partial": [205, 206, 232, 241, 244, 245, 247, 248, 249], "seafloor": [205, 207, 208, 209, 241], "unstretch": 209, "shelv": [212, 233, 241], "ssh_adjust": [212, 223, 225, 233], "iter": [212, 233], "compass_branch": 212, "default_input": [212, 220, 232, 233], "ocean_model": [212, 228, 233], "submodul": [212, 220, 228, 232, 250], "latest": [212, 228, 231, 242, 250], "master": 212, "compat": [212, 228, 229, 231], "verison": 212, "maintain": [212, 250], "recurs": [212, 227, 228, 232, 250], "whichev": [212, 241], "inertial_gravity_wav": [212, 217, 247], "single_column": [212, 217, 242, 246], "design": [213, 223, 225, 227, 231, 238, 244], "minim": 214, "fcell": [214, 223, 232, 245], "fedg": [214, 223, 232, 245], "fvertex": [214, 223, 232, 245], "free": [214, 232, 233], "slip": 214, "solid": [214, 244, 245], "tangenti": 214, "enforc": [214, 228], "nonperiod": 214, "drag": 214, "mass": 214, "momentum": [214, 215, 218, 247], "scalar": 214, "rigid": 214, "veloc": [214, 215, 218, 225, 228, 232, 245, 248, 250], "solv": [214, 229, 241], "mid": [214, 244], "vari": [214, 216, 223, 229, 238, 241, 245], "consult": [214, 232], "tidal_forc": 214, "eddi": [215, 244], "addition": [215, 218, 219, 234, 235, 236, 237, 239], "diffus": [215, 218, 219], "50": [215, 218, 226, 232, 244, 247, 248], "prescrib": [215, 218], "decomptest": [215, 232], "restarttest": [215, 226], "threadstest": 215, "thread_test": 215, "rpetest": [215, 225, 232], "intens": 215, "globalconverg": [216, 227, 232], "studi": [216, 245], "advect": [216, 245, 247, 248], "qu": [216, 232, 233, 243, 245], "ico": [216, 232, 243, 245], "fix": [216, 226, 232], "spheric": [216, 245], "24": [216, 245], "shape": [216, 245], "blob": 216, "around": [216, 232, 233, 244, 245], "rate": [216, 218, 232, 245, 247, 248], "cosine_bell_with_viz": [216, 243], "distribut": 216, "dt_per_km": [216, 232, 244, 245, 247, 249], "rmse": [216, 218, 247], "slow": [216, 245], "shallow": [218, 228, 245, 247, 249], "water": [218, 232, 244, 245, 247, 248, 249], "100": [218, 219, 241, 247, 248], "25": [218, 247, 248], "exactsolut": 218, "obtain": [218, 228, 235], "assign": [218, 245], "simul": [218, 223, 230, 232, 243, 244, 247, 249, 250], "fall": [218, 250], "accept": 218, "bound": 218, "calcul": [218, 223, 225], "exercis": [219, 245, 248], "kpp_test": 219, "mixedlayerdepthsoutput": 219, "enabel": 219, "idealagetrac": [219, 248], "dimens": [219, 244, 248], "single_column_forc": [219, 248], "profil": [219, 229, 248], "throughout": [219, 244, 248], "idealag": 219, "encompass": 220, "perspect": 220, "four": 220, "major": [220, 223], "add_test_group": [220, 227, 232], "variou": [220, 223, 228], "univers": 220, "mix": [220, 226, 247, 248], "ice_shelf_2d": [220, 252], "iceshelf2d": 220, "ziso": [220, 241, 251, 252], "landice_model": [220, 228], "organ": [221, 224, 226, 231], "green": 221, "blue": [221, 234, 250], "orang": 221, "red": 221, "repositori": [221, 231, 232, 250], "laid": 221, "fig": 221, "among": [221, 226, 228, 232], "organiz": 221, "concept": [221, 227, 230, 232, 251], "multiprocess": [223, 227, 233], "outsid": [223, 228], "emploi": 223, "prevent": 223, "unwant": 223, "outer": 223, "inner": 223, "variable_resolut": [223, 226, 250], "dome_varres_grid": 223, "signific": [223, 224, 225], "neglig": 223, "convent": [223, 228, 232], "high": [223, 236, 238], "fit": [223, 233], "applic": [223, 227, 228, 249], "meshstep": 223, "getint": 223, "mesh_cpus_per_task": 223, "mesh_min_cpus_per_task": 223, "previous": [223, 232], "processor": [223, 244], "readi": [223, 232, 239], "write_netcdf": [223, 232], "convers": [223, 232], "generate_grid": 223, "dsmesh": 223, "graphinfofilenam": [223, 232], "use_dist": [223, 232, 244], "gradient_width_dist": [223, 232, 244], "gradient_width_frac": [223, 232, 244], "bottom_temperatur": [223, 232, 244], "surface_temperatur": [223, 232, 244, 248], "temperature_differ": [223, 232, 244], "coriolis_paramet": [223, 232, 244, 247, 248], "bottom_depth": [223, 232, 233, 241, 244, 245, 247, 248, 249], "vert_level": [223, 232, 233, 241, 244, 245, 247, 248, 249], "ones_lik": [223, 232], "xmin": 223, "min": [223, 232, 244, 248], "xmax": 223, "ymin": 223, "ymax": 223, "ymid": 223, "xperturbmin": 223, "xperturbmax": 223, "perturbationwidth": 223, "yoffset": 223, "sin": [223, 232, 244, 247], "pi": [223, 232, 241, 244, 245], "temp_vert": [223, 232], "frac": [223, 232, 241, 244, 247], "logical_and": [223, 232], "transpos": [223, 232], "3rd": [223, 232], "crest": [223, 232, 244], "expand_dim": [223, 232], "dim": [223, 232], "axi": [223, 232], "broadcast": [223, 232], "zeros_lik": [223, 232], "nedg": [223, 232], "dtype": [223, 232], "xvertex": [223, 232], "commandlin": 223, "explor": [223, 226, 232, 241], "harm": 223, "likewis": [223, 232], "subsequ": [223, 230, 252], "arisen": 223, "now": [223, 228, 232, 233, 238], "omit": [223, 250], "problemat": 223, "usual": [223, 225, 228, 232, 250], "isn": [223, 227, 232], "forwardstep": 223, "mesh_path": 223, "mesh_step": 223, "with_ice_shelf_cav": [223, 225], "initial_state_target": 223, "adjusted_init": [223, 225], "forcing_data": 223, "entha_analy_result": 223, "mat": 223, "enthalpy_benchmark": 223, "ourselv": 223, "reduc": 223, "firewal": 223, "bedmachineantarctica_v2_and_gebco_2022_0": 223, "05_degree_20220729": 223, "slate": 223, "icepresent_qu60km_polar": 223, "practic": [223, 227, 228], "u": [223, 232, 238, 239, 247], "straightforward": 223, "commonli": [223, 230], "expens": [223, 224], "mechan": 223, "notat": [223, 249], "That": [223, 227, 230, 232, 250], "word": 223, "ff": 223, "quwisc240": [223, 227, 250, 252], "90c": 223, "91c": 223, "92": [223, 241], "91": 223, "sowisc12to60": [223, 250, 252], "performance_test": [223, 252], "effici": [223, 232], "transfer": 223, "feasibl": 223, "nor": [223, 232], "add_depend": 223, "overhead": 223, "philosophi": [224, 227, 232], "context": [224, 232], "namesak": 224, "256": [224, 235, 239], "quicker": 224, "32": [224, 250], "exce": 224, "limit": [224, 228, 244], "offer": 224, "benefit": [224, 231], "catch": 224, "bug": 224, "covereag": 224, "timestep": 224, "exhaust": 224, "recent": [224, 242], "merg": 224, "reach": 224, "steadi": 224, "encount": [224, 229], "wet": 224, "fundament": 225, "incorpor": 225, "deprec": 225, "constrain_resourc": [225, 232], "smoke_test": [225, 226], "smoketest": [225, 226], "velo_solv": 225, "sia": [225, 228], "fo": 225, "add_step": [225, 232], "runmodel": 225, "run_step": 225, "0200": 225, "00_00": [225, 232], "fine": [225, 232, 248], "recip": 225, "rpe_test": [225, 227, 232, 250], "res_param": [225, 226], "144": 225, "36": [225, 234, 238, 248, 250], "4km": [225, 226, 232, 244, 250], "unsupport": [225, 226, 228], "enumer": [225, 232], "rpe_test_": [225, 232], "_nu_": [225, 232], "deliber": 225, "chosen": [225, 248], "demonstr": [225, 232], "clumsi": [225, 227], "rpe_test_1_nu_1": [225, 232, 244], "rpe_test_2_nu_5": [225, 232, 244], "filesfore3sm": 225, "configure_global_ocean": 225, "with_bgc": 225, "po4": 225, "no3": 225, "sio3": 225, "nh4": 225, "fe": [225, 235], "o2": 225, "dic": 225, "dic_alt_co2": 225, "alk": 225, "dofe": 225, "dop": 225, "dopr": 225, "donr": 225, "zooc": 225, "spchl": 225, "spc": 225, "spfe": 225, "spcaco3": 225, "diatchl": 225, "diatc": 225, "diatf": 225, "diatsi": 225, "diazchl": 225, "diazc": 225, "diazf": 225, "phaeochl": 225, "phaeoc": 225, "phaeof": 225, "dm": 225, "dmsp": 225, "prot": 225, "poli": 225, "lip": 225, "conceptu": [226, 227], "realist": [226, 231, 251], "2000m": [226, 250], "34": [226, 250], "halfar": 226, "cism": 226, "dome_typ": 226, "closest": 226, "put_origin_on_a_cel": 226, "hydrologi": 226, "hydro": [226, 251], "dome_viz": 226, "time_slic": 226, "save_imag": 226, "hide": [226, 232], "hide_fig": 226, "add_test_cas": [226, 232], "restart_test": [226, 232, 250, 252], "talk": 226, "16": [226, 233, 248, 250], "10e3": 226, "40": [226, 237], "126": 226, "4e3": 226, "160": [226, 232, 244], "500": [226, 232, 233, 241, 244], "held": 226, "initial_condit": 227, "dig": [227, 233], "infrastructur": [227, 232], "background": 227, "behind": 227, "adher": [227, 232], "pep8": [227, 228], "bot": [227, 241], "violat": 227, "pleas": [227, 228, 232, 250], "consid": 227, "editor": 227, "pycharm": [227, 228, 232], "spyder": 227, "linter": 227, "flake8": [227, 228], "discourag": 227, "reformat": 227, "autopep8": 227, "undesir": 227, "util": 227, "lint": 227, "wildcard": 227, "vim": [227, 232], "plugin": 227, "id": [227, 228], "commit": [227, 228], "why": 227, "sound": 227, "subpackag": 227, "understand": [227, 233], "releas": [227, 231, 238, 242, 250], "our": [227, 232, 250], "downstream": 227, "tutori": [227, 228], "clu": 227, "intro": 227, "docstr": [227, 231, 232], "strip": 227, "mpas_ocean": 227, "hidden": 227, "shortcut": [227, 250], "referenc": [227, 232], "mention": 227, "dot": 227, "charact": 227, "unix": [227, 231], "distinct": 227, "mayb": [227, 232], "machine_config": 227, "endswith": 227, "splitext": 227, "exactli": [227, 228, 232, 241], "move": [227, 228, 232, 249], "renam": 227, "visa": 227, "versa": 227, "comfort": [227, 232], "inherit": [227, 232], "orient": 227, "program": [227, 233], "led": 227, "felt": 227, "contribut": 227, "hesit": 227, "predecessor": [227, 230, 231], "harder": 227, "outcom": 227, "augment": 227, "explain": 227, "hope": 227, "dens": 227, "learn": [227, 232], "curv": 227, "worth": [227, 232], "skill": 227, "broadli": 227, "endeavor": 227, "readabl": 227, "manipul": 227, "get_available_cores_and_nod": 227, "theoret": 227, "dozen": 227, "split": 227, "theori": 227, "biogeochemistri": 227, "bash": [228, 229, 232, 250], "ksh": 228, "mac": [228, 231], "csh": 228, "tcsh": 228, "temporarili": 228, "bin": [228, 239, 250], "recogn": [228, 233, 250], "mambaforg": [228, 232, 238, 250], "permiss": 228, "miniconda3": 228, "unifi": [228, 239], "anyon": 228, "caus": [228, 235, 239, 241], "person": [228, 229], "base_path_to_install_or_update_conda": 228, "with_albani": 228, "with_netlib_lapack": 228, "with_petsc": 228, "flavor": [228, 232], "login": [228, 235, 239], "troubl": [228, 232], "recognit": 228, "trilino": 228, "downsid": 228, "unneed": 228, "laptop": [228, 232, 233], "workstat": 228, "deploy": 228, "hpc": [228, 235, 238], "touch": 228, "update_spack": 228, "reinstal": 228, "scorpio": [228, 238, 250], "esmf": [228, 250], "caution": 228, "deploi": [228, 234, 235, 236, 237, 238, 239], "load_": 228, "encod": 228, "load_dev_polaris_": [228, 232], "env_nam": 228, "dev_polaris_": [228, 229], "workdir": [228, 250], "unexpect": [228, 230, 232], "occur": [228, 229], "safest": 228, "rerun": 228, "echo": 228, "correct": 228, "checkout": [228, 232], "proceed": 228, "notic": 228, "conda_env": [228, 237, 250], "rememb": 228, "recreat": [228, 229], "incorrect": 228, "unus": 228, "session": [228, 232], "pip": 228, "substanti": 228, "risk": [228, 232], "rare": 228, "env_onli": 228, "mpas_make_target": [228, 250], "scientif": [228, 250], "_albani": 228, "instruct": [228, 232], "proce": 228, "es3m": 228, "compli": 228, "memor": 228, "guidelin": 228, "stai": 228, "complianc": 228, "checker": 228, "pre": 228, "isort": 228, "mypi": 228, "77": 228, "e302": 228, "blank": 228, "resolv": 228, "simpler": [228, 232], "mkdir": 228, "fetch": [228, 232], "new_branch_nam": 228, "put": [228, 232], "elsewher": 228, "disk": [228, 233, 235, 239], "respons": 228, "simplest": 228, "your_new_branch": 228, "suggest": 229, "geo": 229, "cartopi": 229, "14": 229, "np110py27_4": 229, "calledprocesserror": 229, "deploy_tmp": 229, "spec": [229, 239], "vpn": 229, "site": 229, "shell": [229, 231], "honor": 229, "wide": 229, "coupl": [229, 231], "spawn": 229, "usernam": [229, 232, 235, 239], "proxy_en": 229, "export": 229, "all_proxi": 229, "proxyout": 229, "8080": 229, "no_proxi": 229, "localhost": [229, 233, 238, 239, 250], "127": 229, "proxy_dis": 229, "unset": 229, "anytim": 229, "fatal": 229, "mpi_init": 229, "stack": 229, "mpir_init_thread": 229, "159": 229, "mpid_init": 229, "164": 229, "mpidi_ch3_init": 229, "95": 229, "mpid_nem_init": 229, "314": 229, "mpid_nem_tcp_init": 229, "173": 229, "mpid_nem_tcp_get_business_card": 229, "395": 229, "getsockinterfaceaddr": 229, "369": 229, "pn2034311": 229, "errno": 229, "host": [229, 233, 238, 250], "mpirun": [229, 233, 234, 235, 236, 237, 238, 239, 250], "srun": [229, 232, 233, 234, 235, 236, 237, 238, 239, 250], "parallel_execut": [229, 233, 234, 235, 236, 237, 238, 239, 250], "plu": 230, "autom": 231, "exascal": 231, "earth": 231, "kept": 231, "sens": [231, 232], "boundari": [231, 244, 251], "expert": 231, "team": 231, "launch": 231, "uncoupl": 231, "evolv": [231, 241, 245, 248], "quick": [231, 232, 242, 252], "queue": 231, "beginn": [231, 232], "worktre": [231, 232], "advanc": [231, 232], "mpas_to_yaml": 231, "troubleshoot": 231, "proxi": 231, "lanl": [231, 233, 235], "gethostbynam": 231, "glossari": 232, "port": [232, 239], "stick": 232, "miniconda": 232, "haven": 232, "3_chrysalis_intel_openmpi": 232, "switch": [232, 233], "strict": 232, "fork": 232, "push": 232, "lowercas": 232, "hyphen": 232, "settl": 232, "desktop": 232, "realli": [232, 239], "nice": [232, 239], "supercomput": 232, "yet_another_channel": 232, "vi": 232, "polaris_head": 232, "yetanotherchannel": 232, "instanc": 232, "repres": [232, 241, 245], "highli": 232, "camelcas": 232, "capit": 232, "letter": 232, "cap": 232, "awkward": 232, "encourag": 232, "enclos": 232, "briefli": 232, "alphabet": 232, "interest": 232, "anyth": 232, "probabl": [232, 238], "suppos": 232, "easili": 232, "tide": 232, "analyz": 232, "hard": [232, 244, 248], "sai": [232, 238], "res_str": 232, "1000": [232, 233, 241, 244, 247], "still": [232, 242, 249, 250], "ti": 232, "loop": 232, "coarsest": [232, 233], "especi": 232, "anticip": 232, "promot": 232, "pattern": 232, "familiar": 232, "seen": 232, "brows": 232, "row": 232, "greater": 232, "disadvantag": 232, "foremost": 232, "magic": 232, "effect": [232, 249], "kind": 232, "pain": 232, "path_to_mpas_ocean": 232, "path_to_working_dir": 232, "sbatch": [232, 238, 250], "job_script": [232, 250], "cat": 232, "slurm_jobid": 232, "_run_test": 232, "gpf": 232, "fs1": 232, "ac": 232, "cbegeman": 232, "successfulli": 232, "x_cell": 232, "y_cell": 232, "grid_typ": [232, 233, 241, 244, 245, 247, 248, 249], "coord_typ": [232, 241, 244, 245, 247, 248, 249], "partial_cell_typ": [232, 241, 244, 245, 247, 248, 249], "min_pc_fract": [232, 241, 244, 245, 247, 248, 249], "everywher": 232, "depress": [232, 241], "x_min": 232, "x_max": 232, "y_min": 232, "y_max": 232, "y_mid": 232, "x_perturb_min": 232, "x_perturb_max": 232, "perturb_width": [232, 244], "y_offset": 232, "normal_veloc": 232, "attr": 232, "mostli": 232, "logic": [232, 244], "northern": [232, 244], "half": [232, 244], "southern": [232, 244], "halv": [232, 244], "gradient": [232, 244, 247, 248], "08": [232, 244], "500km": [232, 244], "40e3": [232, 244], "35": [232, 244, 245, 248, 249, 250], "2e": [232, 244], "initial_temperatur": 232, "initial_normal_veloc": 232, "connect": [232, 239], "match": 232, "decomp_test": [232, 250, 252], "light": 232, "fast": 232, "e3sm_compon": 232, "interact": [232, 235, 238, 239, 250], "interrupt": 232, "pty": 232, "navig": 232, "newli": 232, "bunch": 232, "didn": 232, "mistak": 232, "finger": 232, "cross": 232, "initial_normalveloc": 232, "initial_salin": 232, "btr_dt_per_km": [232, 244], "obvious": 232, "stress": [232, 248], "steem": 232, "bring": 232, "landicemodelstep": 232, "huge": 232, "cp": 232, "config_dt": 232, "05": 232, "split_explicit_t": 232, "config_btr_dt": 232, "hmix_del2": 232, "bottom_drag": 232, "cvmix": 232, "0002": 232, "filename_interv": 232, "0100": 232, "input_interv": 232, "initial_onli": 232, "basicmesh": 232, "dayssincestart": 232, "surfacespe": 232, "lowersurfac": 232, "uppersurfac": 232, "ureconstructx": 232, "ureconstructi": 232, "great": 232, "remain": [232, 245, 248], "load_dataset": 232, "final_temperatur": 232, "ab": 232, "fresh": 232, "decomp": 232, "proc": 232, "area": 232, "markdown": 232, "users_guid": 232, "daunt": 232, "flesh": 232, "bonu": 232, "improv": 232, "introduc": 232, "techniqu": 232, "proport": [232, 241, 244, 245, 247, 249], "1384565": 232, "strftime": 232, "gmtime": 232, "run_second": 232, "twice": 232, "guess": 232, "recomput": 232, "aim": 232, "becam": 232, "mainten": 232, "counter": 232, "thought": 232, "yet_another_channel_test_cas": 232, "yetanotherchanneltestcas": 232, "choic": [232, 245], "spuriou": [232, 244], "dissip": [232, 244], "pop": [232, 244], "mom": [232, 244], "mitgcm": [232, 244], "higher": 232, "heavi": 232, "analogi": 232, "tet": 232, "bear": 232, "me": 232, "late": 232, "_add_step": 232, "startswith": 232, "privat": 232, "break": [232, 244], "unusu": 232, "rpe_test_3_nu_10": 232, "rpe_test_4_nu_20": 232, "rpe_test_5_nu_200": 232, "_setup_step": 232, "20_00": 232, "0000": 232, "dayssincestartofsim": 232, "relativevort": 232, "pyplot": 232, "plt": 232, "output_": 232, "sections_yet_another_channel_": 232, "rpe_t": 232, "init_filenam": 232, "ds_init": 232, "_plot": 232, "compact": 232, "dirti": 232, "adopt": 232, "lesson": 232, "tricki": 232, "commun": 232, "nuanc": 232, "fake": 232, "wasn": 232, "fold": 232, "proper": 232, "third": 232, "extens": 233, "single_nod": [233, 234, 235, 236, 237, 238, 239, 250], "multinod": [233, 250], "hopefulli": 233, "explanatori": 233, "my_machin": 233, "extend": 233, "gitconfig": 233, "enter": 233, "author": 233, "asai": 233, "davi": 233, "email": 233, "pull_request": 233, "28": 233, "address": 233, "metadata": 233, "customize_config_pars": 233, "server_base_url": 233, "inej": 233, "check_siz": 233, "ssl": 233, "certif": 233, "core_path": 233, "partition_execut": 233, "dask": 233, "netcdf4": 233, "netcdf4_class": 233, "netcdf3_64bit": 233, "netcdf3_class": 233, "engin": 233, "scipi": 233, "mesh_databas": 233, "ocean_database_root": 233, "landice_database_root": 233, "mesh_cor": 233, "18": [233, 235], "mesh_min_cor": 233, "mesh_max_memori": 233, "mesh_max_disk": 233, "init_cor": 233, "init_min_cor": 233, "init_max_memori": 233, "init_max_disk": 233, "init_thread": 233, "forward_cor": 233, "forward_min_cor": 233, "forward_thread": 233, "forward_max_memori": 233, "forward_max_disk": 233, "add_metadata": 233, "ec": 233, "wc": 233, "mesh_descript": 233, "autodetect": 233, "bathy_descript": 233, "gebco": 233, "2022": 233, "bedmachin": 233, "antarctica": 233, "init_descript": 233, "e3sm_vers": 233, "increment": 233, "mesh_revis": 233, "finest": 233, "min_r": 233, "max_r": 233, "max_depth": 233, "creation_d": 233, "peopl": 233, "contact": 233, "temperaturemax": 233, "statist": 233, "temperature_max": 233, "33": [233, 250], "diagnost": [233, 234, 235, 237, 238, 239, 250], "enable_ocean_initial_condit": 233, "enable_ocean_graph_partit": 233, "enable_seaice_initial_condit": 233, "scrip": 233, "enable_scrip": 233, "transect": 233, "onlin": 233, "member": 233, "offlin": 233, "enable_diagnostics_fil": 233, "coarser": [233, 245], "finer": 233, "comparisonlatresolut": 233, "comparisonlonresolut": 233, "antarct": 233, "polar": [233, 234, 236, 241], "stereograph": 233, "comparisonantarcticstereowidth": 233, "6000": [233, 241], "comparisonantarcticstereoresolut": 233, "arctic": 233, "comparisonarcticstereowidth": 233, "comparisonarcticstereoresolut": 233, "tanh_dz": 233, "3000": 233, "min_layer_thick": [233, 241], "max_layer_thick": [233, 241], "retain": 233, "ecosystem": 234, "gain": 234, "confluenc": 234, "public_html": [234, 236, 238], "polaris_env": [234, 235, 236, 237, 238, 239], "soft": [234, 236, 238, 250], "mpi_intel": [234, 236, 237, 238], "mpi_gnu": [234, 235, 236, 237, 238, 239], "hdf5": [234, 235, 236, 237, 238, 239], "fortran": [234, 235, 236, 237, 238, 239], "pnetcdf": [234, 235, 236, 237, 238, 239], "use_e3sm_hdf5_netcdf": [234, 235, 236, 237, 238, 239], "cobalt": [234, 235, 236, 237, 238, 239], "condo": [234, 250], "acm": [234, 250], "medium": 234, "acme_high": 234, "load_latest_polaris_intel_impi": [234, 237], "load_latest_polaris_gnu_openmpi": [234, 236, 250], "dst": 235, "calendar": 235, "network": 235, "introduct": 235, "platform": 235, "batch": 235, "wtrw": 235, "ch": 235, "lustr": 235, "scratch4": 235, "scratch5": 235, "sacctmgr": 235, "assoc": 235, "cluster": 235, "45": 235, "my": 235, "sshare": 235, "grep": [235, 250], "sreport": 235, "accountutilizationbyus": 235, "2019": 235, "02": 235, "prioriti": 235, "yellow": 235, "chkhome": 235, "petabyt": 235, "df": 235, "bp": 235, "archiv": [235, 239], "hpss": [235, 239], "front": 235, "tn": 235, "storag": 235, "project_nam": 235, "salloc": [235, 238, 239], "account_nam": 235, "gpu": [235, 239], "hyperthread": [235, 239], "hang": [235, 239], "threads_per_cor": [235, 239], "modules_befor": [235, 239], "modules_aft": [235, 239], "shared_clim": [235, 250], "load_latest_polaris_gnu_mpich": [235, 239], "load_latest_polaris_intel_openmpi": 236, "compyf": 237, "app": [237, 250], "pmi2": 237, "submit": 238, "workload": 238, "squeue": 238, "my_usernam": [238, 239], "scancel": 238, "jobid": 238, "cancel": 238, "emtpi": 238, "three": 238, "mpi_mpich": [238, 250], "mpi_openmpi": [238, 250], "nompi": [238, 250], "p1": 239, "nersc": 239, "iri": 239, "filesystem": 239, "myquota": 239, "prjquota": 239, "projectid": 239, "m1795": 239, "hsi": 239, "htar": 239, "zstash": 239, "cf": [239, 250], "cdir": [239, 250], "premium": 239, "cray_compil": 239, "8844": 239, "monik": 239, "browser": 239, "grab": 239, "logon": 239, "kernel": 239, "myenv": 239, "ipykernel": 239, "kernelspec": 239, "u1": 239, "Be": 239, "interpret": 239, "argv": 239, "env": 239, "ipykernel_launch": 239, "connection_fil": 239, "display_nam": 239, "languag": 239, "2500": 241, "deepest": 241, "stewart": 241, "2017": 241, "z_2": 241, "z_1": 241, "mathrm": 241, "tanh": 241, "rightarrow": 241, "infti": 241, "z_k": 241, "z_0": 241, "z_": [241, 248], "k": 241, "finder": 241, "n_z": 241, "h_": 241, "210": [241, 245], "scienc": 241, "hydrograph": 241, "climatologi": 241, "250": 241, "5500": 241, "renorm": 241, "51": 241, "221": 241, "63": 241, "floor": 241, "flat": [241, 244], "collaps": 241, "adcroft": 241, "campin": 241, "2004": 241, "absenc": 241, "squash": 241, "watercolumn": 241, "press": 241, "batymetri": 241, "stair": 241, "month": 242, "year": 242, "websit": 242, "release_6": 242, "ilicak": 244, "2012": 244, "distinguish": 244, "zonal": [244, 248], "meridion": [244, 248], "psu": [244, 248], "cooler": 244, "north": 244, "sinusoid": 244, "perturb": [244, 245], "t_0": 244, "t_b": 244, "t_": 244, "z_b": 244, "y_": 244, "l_x": 244, "warmer": 244, "ge": [244, 245], "gradient_width_fract": 244, "l_y": 244, "le": [244, 248], "flow": [244, 245], "stationari": [244, 248], "literatur": 244, "mk": 244, "celsiu": 244, "williamson": 245, "1992": 245, "sec": 245, "3a": 245, "skamarock": 245, "gassmann": 245, "bodi": 245, "rotat": [245, 247], "transport": 245, "psi": 245, "proportion": 245, "icosohydr": 245, "480": 245, "150": 245, "nearest": 245, "insensit": [245, 248], "300": [245, 249], "passiv": 245, "psi_0": 245, "co": [245, 247], "radiu": 245, "debug_tracers_1": 245, "equatori": 245, "u_0": 245, "tau": 245, "transit": 245, "equat": [245, 247, 248], "vel_pd": 245, "tendenc": 245, "multipli": 245, "rad": 245, "lat_cent": 245, "lon_cent": 245, "14159265": 245, "2123666": 245, "6667": 245, "hill": 245, "psi0": 245, "qu_conv_thresh": 245, "warn": [245, 247], "qu_conv_max": 245, "icos_conv_thresh": 245, "icos_conv_max": 245, "roughli": 245, "propag": 247, "doubli": 247, "assess": 247, "numer": 247, "accuraci": 247, "discret": 247, "implemen": 247, "bishnu": 247, "friction": 247, "neglect": 247, "nonlinear": 247, "analyt": [247, 251], "k_x": 247, "k_y": 247, "accord": [247, 250], "availi": 247, "10000": 247, "coriloi": 247, "1e": 247, "amplitud": 247, "ssh_amplitud": 247, "wavelength": 247, "n_wavelengths_x": 247, "n_wavelengths_i": 247, "conv_thresh": 247, "conv_max": 247, "span": 248, "arbitrarili": 248, "virtu": 248, "examin": 248, "400": 248, "phi": 248, "phi_0": 248, "dz": 248, "ml": 248, "mld": 248, "surface_x": 248, "x_gradient_mixed_lay": 248, "mixed_layer_depth_x": 248, "x_difference_across_mixed_lay": 248, "x_gradient_interior": 248, "spatial": 248, "degc": 248, "temperature_gradient_mixed_lay": 248, "temperature_difference_across_mixed_lay": 248, "temperature_gradient_interior": 248, "mixed_layer_depth_temperatur": 248, "surface_salin": 248, "salinity_gradient_mixed_lay": 248, "salinity_difference_across_mixed_lay": 248, "salinity_gradient_interior": 248, "mixed_layer_depth_salin": 248, "scheme": 248, "dictat": 248, "kpp": 248, "restor": 248, "piston": 248, "toward": 248, "temperature_surface_restoring_valu": 248, "temperature_piston_veloc": 248, "salinity_surface_restoring_valu": 248, "salinity_piston_veloc": 248, "temperature_interior_restoring_r": 248, "salinity_interior_restoring_r": 248, "net": 248, "latent": 248, "heat": 248, "bulk": 248, "latent_heat_flux": 248, "sensibl": 248, "sensible_heat_flux": 248, "solar": 248, "shortwav": 248, "shortwave_heat_flux": 248, "evapor": 248, "evaporation_flux": 248, "5e": 248, "rain": 248, "rain_flux": 248, "wind": 248, "wind_stress_zon": 248, "wind_stress_meridion": 248, "characterist": 249, "welcom": 249, "icosohedr": 249, "pertain": 249, "inher": 249, "warrant": 249, "investig": 249, "load_latest_polari": 250, "minu": 250, "create_polaris_load_script": 250, "load_polaris_1": 250, "0_mpich": 250, "wiki": 250, "circular_shelf": 250, "sia_smoke_test": 250, "sia_decomposition_test": 250, "sia_restart_test": 250, "fo_smoke_test": 250, "fo_decomposition_test": 250, "fo_restart_test": 250, "37": 250, "38": 250, "17": 250, "210131_test_new_branch": 250, "my_config": 250, "smaller": 250, "previous_workdir": 250, "paper": 250, "recompil": 250, "live": 250, "safer": 250, "preserv": 250, "test_subdir": 250, "whatev": 250, "clock": 250, "j": 250, "exclus": 250, "job_nam": 250, "fo_integr": [250, 252], "full_integr": [250, 252], "sia_integr": [250, 252], "cosine_bell_cached_init": [250, 252], "ec30to60": [250, 252], "ecwisc30to60": [250, 252], "qu240_for_e3sm": [250, 252], "quwisc240_for_e3sm": [250, 252], "wc14": [250, 252], "suitenam": 250, "radial": 251, "form": 251, "identifi": 251, "analysis_test": 252, "5km": 252, "20km": 252, "with_frazil": 252, "prohibit": 252}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.job": [[54, 2, 1, "", "get_slurm_options"], [55, 2, 1, "", "write_job_script"]], "polaris.list": [[56, 2, 1, "", "list_cases"], [57, 2, 1, "", "list_machines"], [58, 2, 1, "", "list_suites"]], "polaris.logging": [[59, 2, 1, "", "log_method_call"]], "polaris.mesh": [[60, 0, 1, "", "IcosahedralMeshStep"], [67, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[60, 1, 1, "", "__init__"], [61, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [62, 1, 1, "", "get_cell_width"], [63, 1, 1, "", "get_subdivisions"], [64, 1, 1, "", "make_jigsaw_mesh"], [65, 1, 1, "", "run"], [66, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_cell_width_lat_lon"], [69, 1, 1, "", "make_jigsaw_mesh"], [70, 1, 1, "", "run"], [71, 1, 1, "", "setup"]], "polaris.mesh.planar": [[72, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[73, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, 1, 1, "", "__init__"], [74, 1, 1, "", "run"], [75, 1, 1, "", "save_and_plot_cell_width"], [76, 1, 1, "", "setup"]], "polaris.model_step": [[77, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[78, 2, 1, "", "ingest"], [79, 2, 1, "", "parse_replacements"], [80, 2, 1, "", "replace"], [81, 2, 1, "", "write"]], "polaris.ocean": [[128, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[128, 1, 1, "", "__init__"]], "polaris.ocean.model": [[129, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "compute_cell_count"], [131, 1, 1, "", "constrain_resources"], [132, 1, 1, "", "map_yaml_to_namelist"], [133, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[134, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[135, 0, 1, "", "BaroclinicChannel"], [136, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[135, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[138, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[140, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[142, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "compute_cell_count"], [144, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[145, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "run"], [147, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[148, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[150, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[152, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "configure"], [154, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[155, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "run"], [157, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[158, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[160, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[162, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[162, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[163, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "configure"], [165, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[166, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "rmse"], [168, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[169, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "compute_cell_count"], [171, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[172, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[174, 0, 1, "", "Viz"], [176, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave": [[178, 0, 1, "", "InertialGravityWave"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[178, 1, 1, "", "__init__"]], "polaris.ocean.tests.inertial_gravity_wave.analysis": [[179, 0, 1, "", "Analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence": [[181, 0, 1, "", "Convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution": [[183, 0, 1, "", "ExactSolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward": [[185, 0, 1, "", "Forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "compute_cell_count"], [187, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state": [[188, 0, 1, "", "InitialState"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState": [[188, 1, 1, "", "__init__"], [189, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.viz": [[190, 0, 1, "", "Viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[192, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[192, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[193, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[195, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[195, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.ideal_age": [[196, 0, 1, "", "IdealAge"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.initial_state": [[198, 0, 1, "", "InitialState"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[200, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[200, 1, 1, "", "__init__"], [201, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[202, 2, 1, "", "generate_1d_grid"], [203, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[204, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[205, 2, 1, "", "alter_bottom_depth"], [206, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[207, 2, 1, "", "compute_min_max_level_cell"], [208, 2, 1, "", "compute_z_level_layer_thickness"], [209, 2, 1, "", "compute_z_level_resting_thickness"], [210, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[211, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[82, 2, 1, "", "get_available_parallel_resources"], [83, 2, 1, "", "get_parallel_command"], [84, 2, 1, "", "run_command"], [85, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[86, 2, 1, "", "write"]], "polaris.remap": [[87, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "dst_from_lon_lat"], [89, 1, 1, "", "dst_from_mpas"], [90, 1, 1, "", "dst_from_points"], [91, 1, 1, "", "dst_from_proj"], [92, 1, 1, "", "dst_global_lon_lat"], [93, 1, 1, "", "get_remapper"], [94, 1, 1, "", "runtime_setup"], [95, 1, 1, "", "src_from_lon_lat"], [96, 1, 1, "", "src_from_mpas"], [97, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[98, 2, 1, "", "run_single_step"], [99, 2, 1, "", "run_tests"]], "polaris.run": [[100, 2, 1, "", "setup_config"], [101, 2, 1, "", "unpickle_suite"]], "polaris.setup": [[102, 2, 1, "", "setup_case"], [103, 2, 1, "", "setup_cases"]], "polaris.streams": [[104, 2, 1, "", "read"], [105, 2, 1, "", "update_defaults"], [106, 2, 1, "", "update_tree"], [107, 2, 1, "", "write"]], "polaris.suite": [[108, 2, 1, "", "setup_suite"]], "polaris.validate": [[109, 2, 1, "", "compare_timers"], [110, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[111, 2, 1, "", "plot_global"]], "polaris.viz": [[112, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[113, 0, 1, "", "PolarisYaml"], [117, 2, 1, "", "main_mpas_to_yaml"], [118, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [119, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "read"], [115, 1, 1, "", "update"], [116, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5, 232], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 127, 228, 232, 234, 235, 236, 237, 238, 239, 244, 245, 247, 248, 249], "same": 1, "implement": 1, "test": [1, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 217, 222, 224, 225, 226, 227, 232, 233, 243, 246, 250, 251, 252], "valid": [1, 2, 15, 44, 109, 110, 137, 139, 141, 149, 154, 159, 165, 182, 194, 197, 225, 232, 250], "api": 2, "refer": [2, 126, 127], "compon": [2, 12, 17, 18, 49, 127, 212, 220, 227, 228, 242, 250], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 223, 227, 228, 231, 250], "framework": [2, 8, 126, 127, 215, 218, 219, 227, 240], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 56, 57, 58], "setup": [2, 4, 6, 30, 40, 66, 71, 76, 102, 103, 133, 147, 157, 223], "suit": [2, 4, 6, 108, 224, 243, 250, 252], "run": [2, 6, 12, 37, 65, 70, 74, 98, 99, 100, 101, 127, 146, 156, 161, 168, 173, 175, 177, 180, 189, 191, 199, 201, 223, 228, 244, 245, 247, 248, 249, 250], "cach": [2, 4, 6, 48, 223], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 227], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 225], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 223, 232, 244, 245, 247, 248, 249], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 127, 232, 233, 234, 235, 236, 237, 238, 239, 244, 245, 247, 248, 249], "io": [2, 9, 51, 52, 53], "job": [2, 54, 55, 238, 250], "log": [2, 10, 59], "mesh": [2, 11, 12, 16, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 216, 232, 244, 245, 247, 248, 249], "model_step": [2, 77], "namelist": [2, 12, 78, 79, 80, 81, 127], "parallel": [2, 82, 83, 84, 85], "proven": [2, 13, 86], "remap": [2, 14, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "stream": [2, 12, 104, 105, 106, 107, 127, 232], "viz": [2, 111, 112, 160, 161, 174, 175, 176, 177, 190, 191, 200, 201, 216, 218, 219, 232], "yaml": [2, 12, 113, 114, 115, 116, 117, 118, 119, 127], "build": [3, 228, 250], "serial": [4, 6, 98, 99], "docstr": 5, "modul": [6, 227, 228], "clean": 6, "file": [7, 12, 127, 223, 232, 233], "comment": 7, "symlink": [9, 53, 223], "download": [9, 51, 223], "spheric": [11, 16, 73, 74, 75, 76], "planar": [11, 16, 72], "uniform": [11, 241], "gener": 11, "model": [12, 127, 129, 130, 131, 132, 133, 213, 232, 250], "an": [12, 127, 232], "e3sm": [12, 127, 228, 250], "ad": [12, 223, 232], "updat": [12, 115, 228], "runtim": 12, "input": [12, 223], "partit": [12, 26], "pio": 12, "make": [12, 232], "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": [16, 232], "horizont": [16, 232], "field": 16, "from": [16, 127, 223, 228, 238], "global": 16, "lat": 16, "lon": 16, "plot": [16, 232], "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 144, 151, 171, 187], "map_yaml_to_namelist": [25, 132], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 94, 223], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 131, 223], "set_resourc": 39, "add_step": 42, "configur": [43, 153, 164, 225, 229], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "get_slurm_opt": 54, "write_job_script": 55, "list_cas": 56, "list_machin": 57, "list_suit": 58, "log_method_cal": 59, "icosahedralmeshstep": [60, 61, 62, 63, 64, 65, 66], "build_subdivisions_cell_width_lat_lon": 61, "get_cell_width": 62, "get_subdivis": 63, "make_jigsaw_mesh": [64, 69], "quasiuniformsphericalmeshstep": [67, 68, 69, 70, 71], "build_cell_width_lat_lon": 68, "compute_planar_hex_nx_ni": 72, "sphericalbasestep": [73, 74, 75, 76], "save_and_plot_cell_width": 75, "make_graph_fil": 77, "ingest": 78, "parse_replac": 79, "replac": 80, "write": [81, 86, 107, 116], "get_available_parallel_resourc": 82, "get_parallel_command": 83, "run_command": 84, "set_cores_per_nod": 85, "mappingfilestep": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "dst_from_lon_lat": 88, "dst_from_mpa": 89, "dst_from_point": 90, "dst_from_proj": 91, "dst_global_lon_lat": 92, "get_remapp": 93, "src_from_lon_lat": 95, "src_from_mpa": 96, "src_from_proj": 97, "run_single_step": 98, "run_test": 99, "setup_config": 100, "unpickle_suit": 101, "setup_cas": [102, 103], "read": [104, 114], "update_default": 105, "update_tre": 106, "setup_suit": 108, "compare_tim": 109, "compare_vari": 110, "globe": 111, "plot_glob": 111, "plot_horiz_field": 112, "polarisyaml": [113, 114, 115, 116], "main_mpas_to_yaml": 117, "mpas_namelist_and_streams_to_yaml": 118, "yaml_to_mpas_stream": 119, "anvil": [120, 234], "intel": [120, 122, 123, 234, 236, 237], "gnu": [120, 121, 122, 123, 125, 234, 235, 236, 239], "chicoma": [121, 235], "cpu": [121, 125, 235, 239], "chrysali": [122, 236], "compymcnodefac": [123, 237], "machin": [124, 228, 238, 250], "support": [124, 213, 228, 238, 250], "other": [124, 223, 232, 238, 250], "perlmutt": [125, 239], "pm": 125, "ocean": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 242], "group": [126, 217, 226, 227, 232, 246], "baroclinic_channel": [126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 215, 244], "inertial_gravity_wav": [126, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 218], "global_converg": [126, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 216, 245], "cosine_bel": [126, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 216, 243, 245], "single_column": [126, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 248], "oceanmodelstep": [126, 129, 130, 131, 132, 133], "potenti": [126, 127], "energi": [126, 127], "rpe": [126, 127, 134], "vertic": [126, 127, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 232, 241, 244, 245, 247, 248, 249], "coordin": [126, 127, 232, 241], "v": 127, "map": 127, "omega": 127, "mpa": [127, 214], "set": [127, 228, 250], "mpi": [127, 238], "resourc": 127, "rest": 127, "compute_cell_count": [130, 143, 170, 186], "compute_rp": 134, "baroclinicchannel": 135, "baroclinicchanneltestcas": [136, 137], "decomp_test": [138, 139, 215, 244], "decomptest": [138, 139], "default": [140, 141, 215, 232, 244], "forward": [142, 143, 144, 169, 170, 171, 185, 186, 187, 195, 215, 216, 218, 219, 232], "initial_st": [145, 146, 147, 188, 189, 198, 199, 215, 218, 219, 232], "initialst": [145, 146, 147, 188, 189, 198, 199], "restart_test": [148, 149, 150, 151, 215, 244], "restarttest": [148, 149], "restart_step": [150, 151], "restartstep": [150, 151], "rpe_test": [152, 153, 154, 155, 156, 157, 215, 244], "rpetest": [152, 153, 154], "analysi": [155, 156, 157, 166, 167, 168, 179, 180, 216, 218, 232], "threads_test": [158, 159, 215], "threadstest": [158, 159], "globalconverg": 162, "cosinebel": [163, 164, 165], "rmse": 167, "init": [172, 173, 216], "vizmap": [176, 177], "inertialgravitywav": 178, "converg": [181, 182, 218, 247], "exact_solut": [183, 184, 218], "exactsolut": [183, 184], "ssh": 184, "singlecolumn": 192, "cvmix": [193, 194, 219, 248], "ideal_ag": [196, 197], "idealag": [196, 197], "grid_1d": [202, 203], "generate_1d_grid": 202, "write_1d_grid": 203, "init_vertical_coord": 204, "partial_cel": [205, 206], "alter_bottom_depth": 205, "alter_ssh": 206, "zlevel": [207, 208, 209, 210], "compute_min_max_level_cel": 207, "compute_z_level_layer_thick": 208, "compute_z_level_resting_thick": 209, "init_z_level_vertical_coord": 210, "zstar": 211, "init_z_star_vertical_coord": 211, "initi": [214, 232, 244, 245, 247, 248, 249], "condit": [214, 232, 244, 245, 247, 248, 249], "boundari": 214, "forc": [214, 244, 245, 247, 248, 249], "baroclinic_channel_test_cas": 215, "type": [216, 241], "ideal": [219, 248], "ag": [219, 248], "directori": 221, "structur": 221, "organ": 222, "attribut": [223, 225], "constructor": [223, 225], "output": [223, 232], "copi": 223, "depend": 223, "pull": 224, "request": 224, "pr": 224, "nightli": 224, "case": [225, 227, 232, 233, 250, 251], "overview": 227, "code": [227, 228, 232], "style": [227, 228], "packag": 227, "share": [227, 232], "within": 227, "quick": [228, 250], "start": [228, 232, 250], "develop": [228, 231, 232], "unix": 228, "shell": 228, "up": [228, 250], "repositori": 228, "beginn": 228, "conda": [228, 229, 238, 250], "environ": [228, 229, 250], "spack": [228, 250], "compil": 228, "system": 228, "albani": 228, "petsc": 228, "netlib": 228, "lapack": 228, "unknown": 228, "what": 228, "script": [228, 250], "doe": 228, "flag": 228, "activ": 228, "switch": 228, "between": [228, 232], "differ": 228, "troubleshoot": [228, 229], "creat": [228, 232], "onli": 228, "repo": 228, "worktre": 228, "advanc": 228, "user": [228, 231, 233, 250], "solver": 229, "error": 229, "when": 229, "proxi": 229, "lanl": 229, "mac": 229, "gethostbynam": 229, "fail": 229, "glossari": [230, 231], "": 231, "guid": 231, "tutori": [231, 232], "compass": 231, "new": 232, "get": 232, "vari": 232, "resolut": 232, "paramet": 232, "thing": 232, "out": 232, "defin": 232, "more": 232, "again": 232, "one": 232, "time": [232, 244, 245, 247, 248, 249], "second": 232, "enhanc": 232, "dynam": 232, "comput": 232, "cell": 232, "count": 232, "superclass": 232, "studi": 232, "how": 232, "pass": 232, "data": [232, 239], "A": 233, "slurm": 238, "queue": 238, "mpich": 238, "openmpi": 238, "No": 238, "forg": 238, "jupyt": 239, "notebook": 239, "remot": 239, "1d": 241, "grid": [241, 244, 245, 247, 248, 249], "tanh_dz": 241, "60layerphc": 241, "100layere3smv1": 241, "3d": 241, "z": 241, "star": 241, "level": 241, "cosine_bell_cached_init": 243, "descript": [244, 245, 247, 248, 249], "durat": [244, 245, 247, 248, 249], "core": [244, 245, 247, 248, 249], "thread_test": 244, "cosine_bell_with_viz": 245, "inerti": 247, "graviti": 247, "wave": 247, "test_group_nam": 249, "test_case_nam": 249, "i": 250, "yet": 250, "load": 250, "standalon": 250}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [220, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [216, "mesh"], [244, "mesh"], [244, "id2"], [244, "id9"], [244, "id17"], [244, "id25"], [244, "id32"], [245, "mesh"], [247, "mesh"], [248, "mesh"], [248, "id3"], [248, "id8"], [249, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [216, "viz"], [218, "viz"], [219, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"], [232, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [240, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [127, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [127, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[54, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[55, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[56, "polaris-list-list-cases"]], "polaris.list.list_machines": [[57, "polaris-list-list-machines"]], "polaris.list.list_suites": [[58, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[59, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[60, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[61, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[62, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[63, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[64, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[65, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[66, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[71, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[72, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[74, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[75, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[76, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[77, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[78, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[79, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[80, "polaris-namelist-replace"]], "polaris.namelist.write": [[81, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[82, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[83, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[84, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[85, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[86, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[87, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[88, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[89, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[90, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[91, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[92, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[93, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[94, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[95, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[96, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[97, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[98, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[99, "polaris-run-serial-run-tests"]], "polaris.run.setup_config": [[100, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[101, "polaris-run-unpickle-suite"]], "polaris.setup.setup_case": [[102, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[103, "polaris-setup-setup-cases"]], "polaris.streams.read": [[104, "polaris-streams-read"]], "polaris.streams.update_defaults": [[105, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[106, "polaris-streams-update-tree"]], "polaris.streams.write": [[107, "polaris-streams-write"]], "polaris.suite.setup_suite": [[108, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[109, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[110, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[111, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[112, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[113, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[114, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[115, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[116, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[117, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[118, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[119, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[120, "anvil"], [234, "anvil"]], "intel": [[120, "intel"], [122, "intel"], [123, "intel"]], "gnu": [[120, "gnu"], [122, "gnu"], [123, "gnu"]], "Chicoma": [[121, "chicoma"], [235, "chicoma"]], "chicoma-cpu, gnu": [[121, "chicoma-cpu-gnu"]], "Chrysalis": [[122, "chrysalis"], [236, "chrysalis"]], "CompyMcNodeFace": [[123, "compymcnodeface"], [237, "compymcnodeface"]], "Machines": [[124, "machines"], [238, "machines"]], "Supported Machines": [[124, "supported-machines"], [238, "supported-machines"]], "Other Machines": [[124, "other-machines"], [238, "other-machines"]], "Perlmutter": [[125, "perlmutter"], [239, "perlmutter"]], "pm-cpu, gnu": [[125, "pm-cpu-gnu"]], "ocean": [[126, "ocean"]], "Test Groups": [[126, "test-groups"], [226, "test-groups"]], "baroclinic_channel": [[126, "baroclinic-channel"], [215, "baroclinic-channel"], [244, "baroclinic-channel"]], "inertial_gravity_wave": [[126, "inertial-gravity-wave"], [218, "inertial-gravity-wave"]], "global_convergence": [[126, "global-convergence"], [216, "global-convergence"], [245, "global-convergence"]], "cosine_bell": [[126, "cosine-bell"], [216, "cosine-bell"]], "single_column": [[126, "single-column"], [219, "single-column"], [248, "single-column"]], "Ocean Framework": [[126, "ocean-framework"]], "OceanModelStep": [[126, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[126, "reference-potential-energy-rpe"]], "Vertical coordinates": [[126, "vertical-coordinates"]], "Ocean framework": [[127, "ocean-framework"]], "YAML files vs. namelists and streams": [[127, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[127, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[127, "setting-mpi-resources"]], "Model config options and streams": [[127, "model-config-options-and-streams"]], "Vertical coordinate": [[127, "vertical-coordinate"], [241, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[127, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[128, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[129, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[130, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[131, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[132, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[133, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[134, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[135, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[136, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[137, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[138, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[139, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[140, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[141, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[142, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[143, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[144, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[145, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[146, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[147, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[148, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[149, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[150, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[151, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[154, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[155, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[156, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[157, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[158, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[159, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[160, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[161, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[162, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[174, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[175, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[176, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[177, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[178, "polaris-ocean-tests-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[179, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run": [[180, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[181, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate": [[182, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence-validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[183, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[184, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[185, "polaris-ocean-tests-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count": [[186, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[187, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState": [[188, "polaris-ocean-tests-inertial-gravity-wave-initial-state-initialstate"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run": [[189, "polaris-ocean-tests-inertial-gravity-wave-initial-state-initialstate-run"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[190, "polaris-ocean-tests-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run": [[191, "polaris-ocean-tests-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[192, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[193, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[194, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[195, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[196, "polaris-ocean-tests-single-column-ideal-age-idealage"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate": [[197, "polaris-ocean-tests-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[198, "polaris-ocean-tests-single-column-initial-state-initialstate"]], "polaris.ocean.tests.single_column.initial_state.InitialState.run": [[199, "polaris-ocean-tests-single-column-initial-state-initialstate-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[200, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[201, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[202, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[203, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[204, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[205, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[206, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[207, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[208, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[209, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[210, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[211, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[212, "ocean-component"], [242, "ocean-component"]], "Models": [[213, "models"]], "Supported Models": [[213, "supported-models"]], "MPAS-Ocean": [[214, "mpas-ocean"]], "Initial conditions": [[214, "initial-conditions"]], "Boundary conditions": [[214, "boundary-conditions"]], "Forcing": [[214, "forcing"]], "framework": [[215, "framework"], [218, "framework"], [219, "framework"]], "baroclinic_channel_test_case": [[215, "baroclinic-channel-test-case"]], "initial_state": [[215, "initial-state"], [218, "initial-state"], [219, "initial-state"]], "forward": [[215, "forward"], [216, "forward"], [218, "forward"], [219, "forward"]], "default": [[215, "default"], [244, "default"]], "decomp_test": [[215, "decomp-test"], [244, "decomp-test"]], "restart_test": [[215, "restart-test"], [244, "restart-test"]], "threads_test": [[215, "threads-test"]], "rpe_test": [[215, "rpe-test"], [244, "rpe-test"]], "mesh types": [[216, "mesh-types"]], "init": [[216, "init"]], "analysis": [[216, "analysis"], [218, "analysis"]], "Test groups": [[217, "test-groups"], [246, "test-groups"]], "exact_solution": [[218, "exact-solution"]], "convergence": [[218, "convergence"], [247, "convergence"]], "cvmix": [[219, "cvmix"], [248, "cvmix"]], "ideal age": [[219, "ideal-age"], [248, "ocean-single-column-ideal-age"]], "Directory structure": [[221, "directory-structure"]], "Organization of Tests": [[222, "organization-of-tests"]], "Steps": [[223, "steps"]], "Step attributes": [[223, "step-attributes"]], "constructor": [[223, "constructor"], [225, "constructor"]], "constrain_resources()": [[223, "constrain-resources"]], "setup()": [[223, "setup"]], "runtime_setup()": [[223, "runtime-setup"]], "run()": [[223, "run"]], "inputs and outputs": [[223, "inputs-and-outputs"]], "Input files": [[223, "input-files"]], "Symlinks to input files": [[223, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[223, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[223, "downloading-and-symlinking-input-files"]], "Copying input files": [[223, "copying-input-files"]], "Output files": [[223, "output-files"]], "Cached output files": [[223, "cached-output-files"]], "Adding other steps as dependencies": [[223, "adding-other-steps-as-dependencies"]], "Test Suites": [[224, "test-suites"], [250, "test-suites"], [252, "test-suites"]], "Pull-Request (PR) suite": [[224, "pull-request-pr-suite"]], "Nightly suite": [[224, "nightly-suite"]], "Test cases": [[225, "test-cases"]], "TestCase attributes": [[225, "testcase-attributes"]], "configure()": [[225, "configure"]], "validate()": [[225, "validate"]], "Overview": [[227, "overview"]], "Code Style": [[227, "code-style"]], "Packages and Modules": [[227, "packages-and-modules"]], "Packages": [[227, "packages"]], "Modules": [[227, "modules"]], "Classes": [[227, "classes"]], "Code sharing": [[227, "code-sharing"]], "\u2026in the polaris framework": [[227, "in-the-polaris-framework"]], "\u2026within a component": [[227, "within-a-component"]], "\u2026within a test group": [[227, "within-a-test-group"]], "\u2026within a test case": [[227, "within-a-test-case"]], "Quick Start for Developers": [[228, "quick-start-for-developers"]], "Unix Shell": [[228, "unix-shell"]], "Set up a polaris repository: for beginners": [[228, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[228, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[228, "supported-machines"]], "Environments with Albany": [[228, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[228, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[228, "unknown-machines"]], "What the script does": [[228, "what-the-script-does"]], "Optional flags": [[228, "optional-flags"]], "Activating the environment": [[228, "activating-the-environment"]], "Switching between different polaris environments": [[228, "switching-between-different-polaris-environments"]], "Troubleshooting": [[228, "troubleshooting"], [229, "troubleshooting"]], "Creating/updating only the polaris environment": [[228, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[228, "building-e3sm-components"]], "Running polaris from the repo": [[228, "running-polaris-from-the-repo"]], "Code style for polaris": [[228, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[228, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[229, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[229, "proxy-on-lanl-macs"]], "gethostbyname failed": [[229, "gethostbyname-failed"]], "Glossary": [[230, "glossary"], [231, null]], "Polaris": [[231, "polaris"]], "User's guide": [[231, null]], "Developer's guide": [[231, null]], "Tutorials": [[231, null]], "Compass": [[231, "compass"]], "Developer Tutorial: Adding a new test group": [[232, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[232, "getting-started"]], "Making a new test group": [[232, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[232, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[232, "varying-resolution-and-other-parameters"]], "Adding the initial_state step": [[232, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[232, "creating-a-horizontal-mesh"]], "Adding a config file": [[232, "adding-a-config-file"]], "Adding the step to the test case": [[232, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[232, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[232, "creating-an-initial-condition"]], "Adding plots": [[232, "adding-plots"]], "Adding step outputs": [[232, "adding-step-outputs"]], "Adding validation": [[232, "adding-validation"], [232, "id1"]], "Test things out!": [[232, "test-things-out"]], "Adding the forward step": [[232, "adding-the-forward-step"]], "Defining model config options and streams": [[232, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[232, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[232, "adding-more-validation"]], "Test the test case again!": [[232, "test-the-test-case-again"]], "Adding a visualization step": [[232, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[232, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[232, "test-the-test-case-one-more-time"]], "Adding a second test case": [[232, "adding-a-second-test-case"]], "Enhancements": [[232, "enhancements"]], "Adding model config options in code": [[232, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[232, "adding-dynamic-model-config-options"]], "Computing the cell count": [[232, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[232, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[232, "adding-a-parameter-study"]], "Adding the steps to the test case": [[232, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[232, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[232, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[233, "config-files"]], "A \u201cuser\u201d config file": [[233, "a-user-config-file"]], "Test-case config files": [[233, "test-case-config-files"]], "config options": [[234, "config-options"], [235, "config-options"], [236, "config-options"], [237, "config-options"], [238, "config-options"], [239, "config-options"], [244, "config-options"], [244, "id7"], [244, "id14"], [244, "id22"], [244, "id30"], [244, "id37"], [245, "config-options"], [247, "config-options"], [248, "config-options"], [248, "id1"], [248, "id6"], [248, "id13"], [249, "config-options"]], "Intel on Anvil": [[234, "intel-on-anvil"]], "Gnu on Anvil": [[234, "gnu-on-anvil"]], "Chicoma-CPU": [[235, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[235, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[236, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[236, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[237, "intel-on-compymcnodeface"]], "Slurm job queueing": [[238, "slurm-job-queueing"]], "MPICH": [[238, "mpich"]], "OpenMPI": [[238, "openmpi"]], "No MPI from conda-forge": [[238, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[239, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[239, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[239, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[241, "d-grid-type"]], "uniform": [[241, "uniform"]], "tanh_dz": [[241, "tanh-dz"]], "60layerPHC": [[241, "layerphc"]], "100layerE3SMv1": [[241, "layere3smv1"]], "3D vertical coordinates": [[241, "d-vertical-coordinates"]], "z-star": [[241, "z-star"]], "z-level": [[241, "z-level"]], "Test suites": [[243, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[243, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[244, "description"], [244, "id1"], [244, "id8"], [244, "id16"], [244, "id24"], [247, "description"], [248, "description"], [248, "id2"], [248, "id7"], [249, "description"]], "vertical grid": [[244, "vertical-grid"], [244, "id3"], [244, "id10"], [244, "id18"], [244, "id26"], [244, "id33"], [245, "vertical-grid"], [247, "vertical-grid"], [248, "vertical-grid"], [248, "id4"], [248, "id9"], [249, "vertical-grid"]], "initial conditions": [[244, "initial-conditions"], [244, "id4"], [244, "id11"], [244, "id19"], [244, "id27"], [244, "id34"], [245, "initial-conditions"], [247, "initial-conditions"], [248, "initial-conditions"], [248, "id5"], [248, "id10"], [249, "initial-conditions"]], "forcing": [[244, "forcing"], [244, "id5"], [244, "id12"], [244, "id20"], [244, "id28"], [244, "id35"], [245, "forcing"], [247, "forcing"], [248, "forcing"], [248, "id11"], [249, "forcing"]], "time step and run duration": [[244, "time-step-and-run-duration"], [244, "id6"], [244, "id13"], [244, "id21"], [244, "id29"], [244, "id36"], [245, "time-step-and-run-duration"], [247, "time-step-and-run-duration"], [248, "time-step-and-run-duration"], [248, "id12"], [249, "time-step-and-run-duration"]], "cores": [[244, "cores"], [244, "id15"], [244, "id23"], [244, "id31"], [244, "id38"], [245, "cores"], [247, "cores"], [248, "cores"], [248, "id14"], [249, "cores"]], "thread_test": [[244, "thread-test"]], "cosine_bell and cosine_bell_with_viz": [[245, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[245, "description"]], "inertial gravity wave": [[247, "inertial-gravity-wave"]], "test_group_name": [[249, "test-group-name"]], "test_case_name": [[249, "test-case-name"]], "Quick Start for Users": [[250, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[250, null]], "Loading polaris conda and spack environments": [[250, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[250, "e3sm-supported-machines"]], "Other machines": [[250, "other-machines"]], "Building supported E3SM components as standalone models": [[250, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[250, "setting-up-test-cases"]], "Running a test case": [[250, "running-a-test-case"]], "Running with a job script": [[250, "running-with-a-job-script"]], "Test Cases": [[251, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[54, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[55, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[56, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[57, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[58, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[59, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[60, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[60, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[62, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[63, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[66, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[71, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[72, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[73, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[76, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[77, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[78, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[79, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[80, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[81, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[82, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[83, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[84, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[85, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[86, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[87, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[98, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[99, "polaris.run.serial.run_tests"]], "setup_config() (in module polaris.run)": [[100, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[101, "polaris.run.unpickle_suite"]], "setup_case() (in module polaris.setup)": [[102, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[103, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[104, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[105, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[106, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[107, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[108, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[109, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[110, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[111, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[112, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[113, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[114, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[115, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[116, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[117, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[118, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[119, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[128, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[128, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[129, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[132, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[133, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[134, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[135, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[135, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[136, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[136, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[137, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[138, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[138, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[139, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[140, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[140, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[141, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[142, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[142, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[143, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[144, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[145, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[145, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[146, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[147, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[149, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[150, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[150, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[151, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[154, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[156, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[157, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[158, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[158, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[159, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[160, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[160, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[161, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[162, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[162, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[175, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[176, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[176, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[177, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tests.inertial_gravity_wave)": [[178, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.inertialgravitywave method)": [[178, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.__init__"]], "analysis (class in polaris.ocean.tests.inertial_gravity_wave.analysis)": [[179, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[179, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[180, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tests.inertial_gravity_wave.convergence)": [[181, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[181, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[182, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tests.inertial_gravity_wave.exact_solution)": [[183, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[183, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "ssh() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[184, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tests.inertial_gravity_wave.forward)": [[185, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[185, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[186, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[187, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.inertial_gravity_wave.initial_state)": [[188, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.initial_state.initialstate method)": [[188, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.initial_state.initialstate method)": [[189, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.inertial_gravity_wave.viz)": [[190, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[190, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[191, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[192, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[192, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[193, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[193, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[194, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[195, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[195, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tests.single_column.ideal_age)": [[196, "polaris.ocean.tests.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[196, "polaris.ocean.tests.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[197, "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate"]], "initialstate (class in polaris.ocean.tests.single_column.initial_state)": [[198, "polaris.ocean.tests.single_column.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[198, "polaris.ocean.tests.single_column.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[199, "polaris.ocean.tests.single_column.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[200, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[200, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[201, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[202, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[203, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[204, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[205, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[206, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[207, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[208, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[209, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[210, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[211, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})