Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.geostrophic.viz.VizMap", "polaris.ocean.tasks.geostrophic.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.viz.VizMap", "polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "Tasks", "inertial_gravity_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "Tasks", "inertial gravity wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 19, 21, 38, 46, 49, 50, 53, 136, 139, 154, 163, 164, 171, 174, 179, 184, 199, 246, 272, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 288, 290, 292, 294, 296, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 333, 334, 335, 336, 337, 341, 343], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 68, 73, 75, 78, 81, 82, 92, 94, 96, 97, 103, 108, 109, 110, 111, 114, 115, 136, 139, 141, 147, 149, 151, 152, 154, 155, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 202, 205, 206, 207, 208, 209, 210, 211, 214, 219, 221, 222, 223, 224, 227, 232, 234, 235, 236, 237, 240, 242, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 300, 301, 302, 304, 305, 309, 311, 312, 314, 320, 322, 342, 343], "templat": [0, 5, 6, 7, 28, 29, 30, 116, 126, 130, 136, 139, 149, 152, 167, 173, 276, 277, 278, 283, 284, 312, 313, 314], "date": [1, 2, 5, 55, 272, 288, 294, 306, 314], "2023": [1, 17, 331, 332], "08": [1, 313, 325], "18": [1, 6, 314, 316], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 136, 313, 314, 319], "asai": [1, 314], "davi": [1, 314], "capabl": [1, 2, 6, 17, 136, 290, 293, 313, 319, 337], "design": [1, 136, 273, 290, 292, 293, 312, 319, 325], "here": [1, 6, 9, 12, 14, 17, 18, 136, 139, 275, 285, 286, 289, 290, 292, 293, 294, 309, 313, 314, 315, 316, 317, 318, 319, 320, 326, 327, 328, 329, 333, 334, 335, 336, 337, 341, 342], "abil": [1, 7, 326, 333], "across": [1, 6, 7, 9, 14, 19, 139, 275, 286, 290, 291, 292, 293, 294, 311, 313, 321, 325, 326, 327, 328, 333, 334], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 136, 139, 286, 288, 290, 291, 292, 293, 294, 312, 313, 314, 319, 322, 327, 329, 336, 337, 341, 342, 343], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 63, 67, 69, 72, 73, 76, 77, 78, 82, 93, 94, 96, 97, 103, 108, 111, 121, 132, 133, 134, 135, 136, 137, 139, 141, 147, 151, 155, 158, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 177, 178, 179, 183, 184, 187, 191, 193, 196, 198, 199, 202, 207, 209, 211, 212, 214, 222, 224, 225, 227, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 252, 255, 256, 257, 259, 261, 272, 275, 276, 277, 278, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 305, 306, 310, 311, 312, 313, 314, 316, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 341, 342], "document": [1, 3, 9, 14, 290, 293, 312, 314, 337], "refer": [1, 7, 14, 38, 161, 174, 264, 267, 270, 271, 290, 293, 294, 311, 312, 313, 322, 325, 329, 337], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 34, 47, 108, 114, 115, 170, 178, 286, 287, 288, 290, 291, 292, 293, 294, 296, 313, 314, 319, 325, 327, 335, 336, 337, 340, 341], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 86, 97, 99, 106, 114, 115, 116, 120, 123, 126, 136, 139, 141, 142, 143, 144, 145, 146, 148, 155, 158, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 188, 203, 204, 210, 215, 217, 218, 219, 228, 230, 231, 232, 240, 246, 250, 272, 274, 276, 278, 283, 284, 286, 287, 289, 290, 292, 294, 299, 300, 302, 304, 313, 314, 316, 319, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 64, 92, 93, 94, 136, 139, 155, 165, 240, 275, 276, 277, 278, 279, 283, 284, 290, 292, 293, 294, 313, 315, 316, 317, 318, 320, 325, 337, 342], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 132, 134, 135, 136, 139, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 306, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 338, 342, 343], "main": [1, 3, 6, 7, 9, 14, 43, 136, 198, 211, 286, 287, 292, 293, 294, 313, 343], "motiv": 1, "behind": [1, 293], "comput": [1, 7, 13, 14, 15, 80, 136, 139, 142, 143, 146, 150, 153, 155, 156, 161, 166, 190, 194, 216, 220, 229, 233, 267, 268, 269, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 294, 316, 317, 319, 320, 325, 326, 327, 328, 329, 331, 332, 333, 334, 337], "expens": [1, 290, 291], "could": [1, 14, 17, 19, 136, 276, 277, 278, 283, 284, 290, 291, 292, 293, 294, 313, 326, 327, 328, 333, 334], "time": [1, 5, 6, 7, 8, 14, 18, 19, 38, 49, 62, 87, 123, 136, 144, 145, 151, 160, 161, 165, 174, 188, 191, 203, 204, 215, 217, 218, 228, 230, 231, 240, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 286, 290, 291, 292, 293, 294, 309, 310, 311, 314, 316, 320, 337, 342], "order": [1, 5, 8, 13, 14, 139, 276, 277, 278, 279, 283, 284, 287, 290, 291, 294, 313, 326, 327, 328, 329, 332, 333, 334, 335, 337], "reflect": [1, 5, 294], "fact": [1, 14, 38, 136], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 135, 136, 139, 143, 144, 145, 159, 188, 203, 204, 215, 228, 250, 275, 276, 277, 278, 283, 284, 285, 286, 289, 290, 292, 293, 294, 309, 312, 313, 314, 316, 318, 319, 320, 322, 326, 327, 328, 329, 333, 334, 337, 342], "present": [1, 50, 123, 294, 313], "new": [1, 2, 5, 20, 26, 38, 49, 57, 61, 68, 75, 81, 97, 117, 118, 139, 149, 152, 165, 172, 189, 205, 216, 219, 229, 232, 240, 253, 264, 270, 271, 290, 292, 293, 294, 307, 310, 311, 312, 337], "success": [1, 2, 8, 48, 59, 272, 287, 306, 313, 314], "insofar": 1, "guarante": [1, 14, 136, 272, 294, 306], "per": [1, 8, 14, 25, 35, 37, 38, 45, 93, 94, 136, 139, 155, 290, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 341], "slurm": [1, 62, 95, 136, 290, 312, 314, 315, 316, 317, 318, 320, 337], "job": [1, 6, 136, 294, 312, 313, 315, 316, 317, 318, 320], "role": 1, "clear": [1, 2, 293, 313], "should": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 63, 76, 114, 115, 122, 123, 132, 133, 134, 135, 136, 137, 139, 141, 146, 158, 170, 178, 242, 244, 272, 286, 287, 288, 290, 291, 292, 294, 306, 307, 310, 311, 313, 314, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 341], "invoc": 1, "serial": [1, 44, 290, 292, 312, 313, 337], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 64, 68, 69, 72, 75, 76, 77, 81, 89, 92, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 111, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 139, 141, 149, 152, 158, 160, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 199, 202, 205, 206, 208, 210, 214, 219, 221, 223, 227, 232, 234, 236, 240, 242, 244, 246, 249, 251, 253, 254, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 275, 276, 277, 278, 281, 282, 283, 284, 285, 287, 290, 291, 292, 293, 294, 299, 300, 302, 304, 311, 312, 313, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 340, 341], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 82, 110, 112, 117, 120, 136, 139, 195, 208, 258, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 306, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 341], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 67, 68, 75, 81, 97, 125, 139, 140, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 198, 199, 202, 205, 206, 208, 210, 211, 212, 214, 216, 219, 221, 223, 225, 227, 229, 232, 234, 236, 239, 240, 241, 242, 244, 246, 249, 251, 253, 254, 256, 258, 260, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 290, 292, 297, 299, 300, 302, 303, 304, 306, 309, 313], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 101, 107, 108, 141, 281, 282, 313], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 40, 47, 49, 59, 110, 111, 122, 136, 139, 170, 178, 184, 199, 242, 244, 246, 275, 276, 277, 278, 279, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 310, 311, 312, 313, 314, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343], "relat": [1, 6, 7, 11, 13, 14, 136, 139, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 290, 294, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338], "inform": [1, 5, 7, 8, 38, 97, 121, 131, 216, 229, 290, 292, 294, 314, 316, 323, 337, 338], "belong": [1, 10, 12, 14, 25, 35, 38, 45, 49, 68, 75, 81, 97, 112, 139, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 199, 202, 205, 206, 208, 210, 212, 214, 219, 221, 223, 225, 227, 232, 234, 236, 239, 240, 241, 242, 244, 246, 249, 251, 253, 254, 256, 258, 260, 286, 287, 290, 292, 293, 299, 300, 302, 303, 304, 313, 342], "locat": [1, 5, 6, 9, 14, 19, 38, 50, 114, 115, 120, 139, 272, 290, 292, 294, 306, 311, 313, 314, 316, 319, 322, 325, 327, 337], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 139, 144, 145, 188, 203, 204, 215, 228, 264, 265, 266, 267, 268, 269, 270, 271, 275, 286, 288, 289, 290, 292, 313, 314, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 341], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 63, 96, 112, 115, 120, 122, 136, 139, 264, 267, 270, 271, 272, 287, 289, 290, 292, 294, 306, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 333, 335, 336, 337, 341, 342], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 93, 94, 96, 115, 121, 136, 139, 140, 143, 144, 155, 165, 188, 203, 215, 228, 240, 250, 264, 270, 271, 272, 275, 286, 287, 288, 290, 291, 292, 293, 294, 297, 306, 311, 312, 313, 314, 319, 322, 323, 325, 326, 327, 328, 329, 333, 334, 336, 337, 338, 341, 343], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 93, 94, 136, 139, 155, 165, 240, 272, 286, 288, 290, 292, 294, 313, 314, 319, 322, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337], "There": [1, 5, 6, 13, 264, 270, 271, 285, 286, 288, 290, 293, 294, 310, 313, 314, 337], "wai": [1, 5, 7, 13, 14, 38, 72, 77, 136, 139, 290, 292, 293, 294, 310, 312, 313, 319, 322, 329, 335], "list": [1, 2, 6, 7, 9, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 87, 93, 94, 111, 114, 115, 120, 121, 139, 141, 149, 152, 161, 176, 180, 184, 187, 199, 202, 214, 223, 225, 227, 236, 240, 246, 249, 251, 256, 290, 291, 292, 293, 294, 300, 311, 312, 313, 314, 316, 319, 320, 326, 327, 328, 333, 334, 337, 342, 343], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 60, 112, 120, 121, 136, 139, 275, 281, 282, 286, 287, 288, 290, 291, 292, 294, 307, 311, 313, 314, 316, 319, 335, 336, 341], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 64, 70, 71, 80, 109, 115, 131, 136, 139, 141, 146, 180, 181, 184, 199, 246, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 300, 301, 309, 311, 313, 314, 319, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 341, 342], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 121, 122, 136, 139, 195, 208, 258, 264, 270, 271, 272, 281, 282, 285, 286, 287, 288, 290, 292, 293, 294, 313, 314, 319, 320, 322, 327, 329, 331, 332, 336, 337, 341, 343], "find": [1, 6, 7, 15, 59, 71, 95, 136, 272, 292, 293, 294, 310, 313, 314, 337], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 136, 139, 272, 274, 276, 277, 278, 279, 283, 284, 285, 287, 290, 292, 293, 306, 309, 312, 313, 314, 316, 319, 320, 322, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 337, 340], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 103, 108, 109, 117, 136, 139, 286, 287, 288, 290, 291, 292, 293, 294, 311, 313, 314, 315, 327, 337, 343], "would": [1, 2, 5, 9, 14, 18, 25, 35, 38, 45, 50, 93, 94, 97, 136, 139, 155, 165, 240, 275, 288, 290, 292, 293, 294, 310, 313, 319, 322, 337], "ident": [1, 2, 5, 18, 163, 171, 179, 275, 290, 291, 293, 299, 313, 325], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 83, 139, 287, 290, 292, 293, 313, 314], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 60, 89, 92, 98, 99, 100, 101, 105, 106, 107, 116, 123, 125, 139, 141, 149, 152, 161, 264, 270, 271, 287, 288, 289, 290, 293, 294, 296, 306, 307, 311, 313, 314, 319, 323, 336, 337, 338, 341], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 70, 136, 139, 272, 290, 294, 311, 313, 314, 322, 329, 335, 337], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 75, 111, 127, 136, 139, 160, 272, 275, 276, 277, 278, 279, 283, 284, 286, 289, 290, 292, 293, 294, 307, 311, 312, 313, 314, 319, 322, 325, 326, 327, 328, 329, 333, 334, 337], "As": [1, 4, 5, 6, 9, 13, 18, 70, 139, 286, 290, 291, 292, 293, 294, 313, 314, 322, 326, 327, 328, 329, 333, 334, 335, 342], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 136, 139, 151, 167, 173, 191, 275, 281, 282, 285, 292, 293, 294, 311, 312, 313, 314, 326, 327, 328, 329, 333, 334, 337, 343], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 63, 64, 110, 111, 112, 113, 115, 136, 275, 289, 290, 292, 294, 311, 312, 313, 314, 315, 316, 317, 318, 320, 323, 325], "proce": [1, 294], "iter": [1, 272, 314], "through": [1, 2, 115, 293, 294, 307, 313], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 61, 68, 70, 71, 99, 106, 116, 118, 122, 130, 136, 141, 146, 155, 192, 206, 254, 275, 276, 277, 278, 279, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 310, 311, 312, 314, 316, 319, 322, 329, 331, 334, 337, 342, 343], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 95, 103, 108, 132, 134, 135, 136, 154, 155, 165, 240, 272, 276, 277, 278, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 310, 311, 313, 314, 322, 325, 327, 331, 335, 337], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 103, 115, 120, 132, 134, 135, 136, 139, 141, 148, 154, 187, 202, 214, 223, 227, 236, 249, 251, 256, 272, 287, 290, 292, 293, 294, 306, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 337], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 139, 154, 160, 162, 170, 178, 186, 201, 213, 226, 238, 248, 264, 270, 271, 286, 287, 292, 294, 298, 307, 312, 315, 316, 317, 318, 320, 337], "initi": [1, 7, 8, 38, 123, 139, 144, 161, 163, 164, 168, 171, 174, 179, 188, 192, 203, 206, 215, 219, 221, 228, 232, 234, 239, 241, 242, 244, 254, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 290, 292, 293, 303, 310, 311, 312, 314, 322, 324, 342, 343], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 64, 66, 110, 111, 115, 120, 121, 123, 136, 139, 155, 242, 244, 274, 286, 290, 292, 307, 313, 314, 316, 318, 320, 325], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 69, 76, 136, 139, 170, 178, 194, 286, 287, 290, 292, 293, 311, 312, 313, 326, 327, 328, 329, 333, 334, 343], "skip": [1, 5, 8, 121, 342], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 61, 121, 122, 123, 127, 132, 133, 134, 135, 136, 137, 139, 155, 241, 274, 286, 290, 294, 313, 314, 315, 316, 317, 318, 319, 320, 325, 337, 343], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 61, 64, 110, 121, 136, 139, 158, 269, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 290, 292, 293, 294, 312, 313, 315, 316, 317, 318, 320, 322, 325, 327, 329, 335, 337, 343], "complet": [1, 5, 8, 27, 28, 29, 108, 313, 337], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 61, 136, 139, 154, 240, 290, 292, 293, 294, 313, 314, 319, 322, 326, 327, 328, 333, 334, 337], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 139, 149, 152, 165, 189, 205, 219, 232, 240, 253, 275, 281, 282, 290, 291, 292, 293, 294, 312, 313, 322], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 136, 155, 290, 293, 294, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 337, 343], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 69, 70, 72, 85, 132, 133, 134, 135, 136, 137, 139, 155, 159, 163, 171, 179, 197, 210, 260, 264, 270, 271, 272, 275, 286, 290, 292, 293, 294, 299, 306, 311, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 333, 334, 337, 342], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 61, 67, 84, 85, 88, 89, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 141, 144, 145, 146, 148, 149, 152, 155, 159, 161, 167, 170, 173, 178, 188, 195, 197, 203, 204, 208, 210, 215, 228, 258, 260, 263, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 300, 306, 307, 309, 310, 311, 312, 316, 319, 320, 322, 325, 326, 327, 328, 329, 333, 334, 336, 337, 340, 341, 343], "mode": [1, 5, 14, 287, 294, 311, 312, 313, 337], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 136, 139, 163, 171, 179, 272, 275, 290, 293, 294, 299, 306, 311, 313, 314, 319, 320, 325, 326, 327, 328, 333, 334], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 89, 92, 96, 115, 116, 125, 126, 127, 139, 149, 152, 158, 276, 277, 278, 283, 284, 290, 292, 293, 313, 326, 327, 328, 329, 333, 334], "them": [1, 7, 8, 9, 14, 17, 18, 25, 37, 136, 139, 155, 276, 277, 278, 279, 283, 284, 287, 288, 290, 292, 293, 294, 311, 313, 318, 319, 324, 337, 343], "constructor": [1, 9, 14, 139, 275, 281, 282, 286, 313], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 93, 94, 104, 122, 275, 287, 290, 292, 293, 294, 313, 336, 341, 342], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 61, 89, 116, 126, 127, 136, 139, 149, 152, 158, 167, 173, 292, 293, 313, 314, 337], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 63, 66, 68, 75, 81, 96, 97, 112, 114, 120, 125, 136, 141, 149, 152, 154, 155, 162, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 186, 187, 189, 192, 195, 197, 199, 201, 202, 205, 206, 208, 210, 212, 213, 214, 219, 221, 223, 225, 226, 227, 232, 234, 236, 238, 239, 240, 241, 242, 244, 246, 248, 249, 251, 253, 254, 256, 258, 260, 286, 288, 289, 290, 291, 292, 296, 297, 298, 299, 300, 302, 303, 304, 307, 311, 312, 313, 314, 319, 321, 324, 342, 343], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 68, 75, 81, 97, 139, 141, 149, 152, 155, 165, 187, 189, 192, 195, 197, 202, 205, 206, 208, 210, 214, 219, 227, 232, 240, 249, 251, 253, 254, 256, 258, 260, 290, 292, 300, 313], "now": [1, 6, 136, 290, 294, 313, 314, 319], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 114, 115, 120, 121, 272, 287, 290, 292, 293, 294, 300, 306, 311, 313, 325, 329, 337, 343], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 136, 139, 275, 290, 294, 310, 313, 322], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 136, 165, 240, 275, 290, 291, 293, 294, 310, 313, 322, 325], "parent": [1, 33, 139, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 290], "resid": [1, 5, 9, 40, 139, 141, 187, 202, 214, 227, 249, 251, 256, 288, 290, 292], "insid": [1, 12, 288, 290, 293, 326, 327, 328, 333, 334], "situat": [1, 17, 31, 158, 313, 337], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 38, 39, 40, 121, 272, 275, 286, 288, 290, 292, 293, 294, 311, 313, 314, 325, 337, 342, 343], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 139, 250, 272, 280, 287, 292, 313, 327, 334, 336, 341, 342], "with_viz": [1, 276, 277, 278, 279, 283, 284, 292, 326, 327, 328, 329, 333, 334], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 74, 79, 81, 112, 114, 115, 120, 136, 139, 148, 154, 157, 159, 189, 192, 195, 197, 205, 206, 210, 253, 254, 258, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 289, 290, 292, 293, 294, 306, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 328, 329, 333, 334, 343], "mesh": [1, 5, 7, 10, 17, 25, 38, 85, 86, 99, 106, 123, 141, 142, 144, 145, 149, 150, 152, 153, 155, 156, 157, 159, 161, 164, 166, 168, 184, 187, 188, 189, 190, 192, 195, 197, 199, 202, 203, 204, 205, 206, 208, 210, 214, 215, 216, 219, 220, 221, 223, 227, 228, 229, 232, 233, 234, 236, 239, 241, 242, 246, 249, 251, 253, 254, 256, 258, 260, 264, 270, 271, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 302, 303, 311, 312, 314, 322, 324, 337, 342], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 139, 141, 149, 152, 163, 164, 171, 174, 179, 189, 195, 205, 208, 219, 232, 253, 258, 272, 274, 287, 290, 292, 293, 294, 306, 314, 325, 327, 331, 332, 337], "forward": [1, 5, 7, 9, 14, 38, 139, 141, 149, 152, 161, 164, 172, 174, 195, 208, 239, 241, 258, 272, 287, 290, 292, 293, 303, 306, 314, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 341], "resolut": [1, 9, 13, 14, 17, 68, 71, 75, 76, 80, 98, 102, 105, 139, 141, 142, 146, 148, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 184, 187, 189, 199, 202, 205, 214, 219, 221, 223, 225, 227, 232, 234, 236, 246, 249, 251, 253, 256, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 314, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 341, 343], "singl": [1, 5, 8, 9, 19, 123, 136, 238, 239, 241, 242, 244, 285, 290, 292, 293, 298, 299, 300, 302, 303, 304, 306, 307, 311, 313, 319, 323, 326, 327, 328, 330, 331, 332, 333, 334, 338, 339], "analysi": [1, 6, 9, 19, 139, 275, 292, 293, 311, 312, 314, 326, 327, 328, 331, 332, 333, 334, 343], "add": [1, 2, 5, 6, 7, 9, 13, 14, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 74, 79, 84, 116, 117, 118, 126, 127, 130, 131, 136, 139, 148, 154, 162, 167, 173, 186, 201, 213, 226, 238, 248, 286, 287, 290, 292, 293, 294, 298, 311, 313, 314, 320, 326, 327, 328, 333, 334], "remap": [1, 10, 19, 195, 208, 258, 276, 277, 278, 283, 284, 312, 326, 327, 328, 329, 333, 334, 336, 341], "visual": [1, 10, 13, 17, 223, 236, 276, 277, 278, 279, 281, 282, 283, 284, 286, 290, 292, 311, 312, 326, 327, 328, 329, 331, 332, 333, 334, 336, 341], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 120, 136, 273, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 311, 312, 313, 314, 319, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 342, 343], "spheric": [1, 5, 149, 276, 277, 278, 279, 283, 284, 292, 326, 327, 328, 333, 334, 342], "qu": [1, 5, 139, 292, 313, 314, 324, 326, 327, 328, 329, 333, 334, 342], "base_mesh": [1, 5, 13, 68, 75, 141, 154, 192, 195, 197, 206, 210, 253, 254, 258, 260, 290, 292, 313, 326, 327, 328, 333, 334], "60km": [1, 5, 292, 326, 327, 328, 333, 334], "90km": [1, 5], "120km": [1, 5, 292], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 154, 292], "map": [1, 8, 17, 20, 31, 75, 76, 97, 122, 123, 158, 195, 197, 208, 210, 258, 260, 276, 277, 278, 279, 283, 284, 292, 294, 314], "viz": [1, 5, 19, 184, 199, 246, 290, 292, 326, 328, 333, 334], "two": [1, 5, 10, 18, 121, 139, 171, 181, 275, 276, 277, 279, 285, 286, 287, 290, 291, 293, 294, 299, 301, 313, 325, 326, 327, 328, 331, 332, 333, 334, 340], "first": [1, 6, 9, 14, 15, 87, 115, 136, 139, 275, 281, 282, 285, 290, 292, 293, 294, 310, 313, 315, 316, 317, 318, 319, 320, 325, 327, 329, 335, 337], "verbos": [1, 5, 6, 64, 66, 136, 290, 313, 342], "10": [1, 9, 13, 70, 136, 272, 275, 281, 282, 286, 287, 313, 314, 319, 322, 325, 326, 328, 329, 331, 332, 333, 335, 343], "name": [1, 5, 7, 8, 9, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 61, 62, 63, 64, 68, 75, 81, 85, 89, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 130, 136, 139, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 158, 161, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 188, 189, 192, 195, 197, 203, 204, 205, 206, 208, 210, 215, 219, 228, 232, 240, 246, 249, 250, 251, 253, 254, 256, 258, 260, 263, 286, 287, 290, 292, 293, 294, 300, 302, 304, 311, 313, 314, 320, 325, 337, 342], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 87, 139, 144, 145, 160, 165, 188, 203, 204, 215, 228, 240, 285, 290, 293, 325, 326, 328, 333, 335, 340], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 57, 292, 293, 294, 326, 327, 328, 333, 334], "what": [1, 2, 6, 11, 13, 17, 136, 246, 292, 293, 313, 320, 336, 337, 341], "follow": [1, 4, 5, 7, 9, 13, 14, 19, 67, 136, 141, 264, 270, 271, 272, 274, 290, 291, 292, 294, 306, 307, 310, 313, 314, 319, 320, 322, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 340], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 64, 68, 75, 81, 97, 114, 139, 141, 149, 152, 155, 165, 187, 189, 192, 195, 197, 202, 205, 206, 208, 210, 214, 219, 221, 223, 227, 232, 234, 236, 240, 242, 244, 249, 251, 253, 254, 256, 258, 260, 286, 288, 290, 292, 293, 313, 336, 337, 341, 343], "bold": [1, 292], "elsewher": [1, 294], "tree": [1, 7, 116, 118, 131, 292, 338], "thu": [1, 2, 7, 14, 313, 326, 327, 328, 333, 334], "similar": [1, 2, 5, 9, 12, 13, 14, 133, 136, 137, 139, 286, 288, 293, 294, 313, 314, 326, 328, 333, 334, 337], "had": [1, 136], "maintain": [1, 272, 326, 337], "local": [1, 5, 6, 8, 9, 11, 18, 40, 272, 288, 290, 294, 306, 310, 313, 314, 319, 320, 322], "debug": [1, 8, 132, 133, 134, 135, 136, 137, 313, 315, 316, 317, 318, 320, 326, 333], "easier": [1, 14, 290, 292, 293, 294, 314, 337, 342], "symbol": [1, 61, 290], "link": [1, 2, 7, 9, 11, 14, 40, 46, 53, 61, 136, 286, 290, 292, 294, 313, 319, 323, 337, 338], "were": [1, 48, 136, 240, 290, 293, 311, 313, 314, 318, 322], "even": [1, 6, 12, 13, 14, 40, 57, 136, 290, 293, 294, 313, 314, 319, 337], "compass": [1, 5, 272, 290, 292, 293, 311, 313], "though": [1, 11, 38, 292, 293, 313], "global": [1, 13, 17, 101, 102, 107, 246, 276, 277, 278, 279, 283, 284, 286, 290, 291, 293, 311, 312, 313, 314, 320, 326, 327, 328, 329, 333, 334, 336, 337, 341, 343], "dynamic_adjust": [1, 14, 314], "allow": [1, 2, 8, 17, 18, 25, 35, 38, 45, 57, 121, 136, 139, 155, 290, 311, 313, 314, 319, 322, 326, 327, 328, 333, 334, 335, 343], "one": [1, 2, 5, 6, 7, 10, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 61, 114, 115, 120, 136, 139, 154, 155, 171, 240, 272, 275, 276, 278, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 299, 309, 310, 311, 312, 314, 319, 320, 322, 325, 326, 327, 328, 332, 333, 334, 336, 337, 340, 341, 342, 343], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 85, 139, 148, 170, 178, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 313, 335], "port": [1, 313, 320], "instead": [1, 5, 6, 12, 14, 15, 25, 111, 132, 136, 290, 293, 294, 311, 313, 315, 326, 327, 328, 333, 334, 337, 342], "seri": [1, 14, 139, 176, 182, 277, 279, 281, 309, 313, 324], "indic": [1, 7, 8, 14, 17, 18, 38, 39, 108, 115, 123, 136, 139, 267, 288, 290, 310, 313, 314, 322, 335], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 274, 290, 292, 293, 294, 313, 316, 318, 320, 337], "ran": [1, 109], "ico": [1, 5, 139, 292, 313, 324, 326, 327, 328, 333, 334, 342], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 115, 120, 136, 155, 272, 287, 290, 294, 306, 313, 314, 315, 316, 317, 318, 319, 320, 337], "runtim": [1, 8, 14, 30, 44, 139, 151, 167, 173, 191, 290, 313], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 70, 98, 102, 105, 121, 123, 132, 133, 134, 135, 136, 137, 139, 264, 269, 270, 271, 274, 276, 277, 278, 283, 284, 286, 290, 293, 307, 310, 313, 314, 316, 319, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 341], "01": [1, 14, 139, 307, 313, 335, 340], "00": [1, 14, 18, 139, 292, 307, 313, 320, 337], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 337], "02": [1, 316], "59": 1, "icos_map_60km": 1, "20": [1, 174, 275, 291, 313, 325, 335], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 57, 136, 275, 293, 294, 326, 327, 328, 333, 334, 335], "mechan": [1, 290], "prevent": [1, 290], "expect": [1, 2, 12, 17, 136, 139, 287, 290, 294, 313], "affect": [1, 6, 276, 278, 283, 284, 290, 294, 313, 329], "howev": [1, 13, 290, 291, 292, 294, 313], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 68, 121, 136, 139, 149, 152, 164, 165, 170, 174, 178, 189, 198, 205, 211, 219, 232, 239, 240, 241, 253, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 291, 292, 303, 311, 312, 313, 314, 319, 325, 342], "successfulli": [1, 48, 313], "after": [1, 5, 6, 7, 9, 17, 18, 19, 38, 40, 41, 82, 103, 108, 136, 265, 266, 272, 276, 278, 279, 283, 284, 287, 290, 292, 294, 306, 313, 314, 316, 320, 327, 329, 337, 340], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 109, 115, 120, 135, 136, 139, 141, 146, 148, 158, 187, 202, 214, 223, 227, 236, 249, 251, 256, 272, 275, 281, 282, 286, 288, 290, 291, 292, 293, 294, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 333, 334, 337, 342, 343], "remov": [1, 5, 14, 24, 52, 111, 275, 281, 282, 292, 294, 313], "longer": [1, 171, 275, 291, 299, 313, 325, 326, 327, 328, 329, 333, 334], "about": [1, 5, 6, 7, 8, 12, 14, 38, 97, 125, 139, 286, 290, 292, 293, 294, 313, 314, 316, 329, 334], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 30, 50, 57, 76, 136, 139, 167, 173, 272, 276, 277, 278, 279, 283, 284, 287, 290, 292, 293, 294, 306, 307, 310, 312, 313, 314, 315, 319, 320, 322, 325, 326, 327, 328, 333, 334, 337, 342], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 136, 139, 272, 274, 287, 290, 291, 292, 293, 307, 310, 314, 319, 323, 337], "enforc": [1, 274, 294], "framework": [1, 5, 7, 9, 12, 13, 14, 110, 272, 286, 287, 290, 292, 306, 311, 312, 313, 323, 335, 336, 338, 341, 343], "propos": [1, 2], "close": [1, 6, 71, 136, 312, 326, 327, 328, 333, 334], "root": [1, 40, 136, 272, 287, 290, 293, 294, 306, 311, 314, 315, 316, 317, 318, 319, 320, 322, 337], "live": [1, 50, 292, 337], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 69, 76, 77, 80, 83, 97, 103, 121, 139, 155, 171, 180, 216, 229, 264, 270, 271, 276, 277, 278, 279, 283, 284, 287, 288, 290, 292, 293, 299, 300, 319, 322, 325, 326, 329, 331, 332], "think": [1, 5, 313], "condit": [1, 7, 38, 139, 144, 164, 168, 188, 192, 203, 206, 215, 219, 221, 228, 232, 234, 239, 241, 242, 244, 254, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 303, 309, 311, 312, 314, 324, 342, 343], "shown": [1, 14, 136, 279, 288, 335], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 72, 75, 77, 98, 102, 103, 105, 114, 115, 120, 132, 133, 134, 135, 136, 137, 139, 272, 275, 281, 282, 286, 287, 288, 290, 291, 292, 293, 294, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 325, 326, 327, 328, 329, 332, 333, 334, 337, 342, 343], "simpli": [1, 14, 18, 57, 136, 164, 287, 290, 292, 294, 313, 322, 337, 342], "prefer": [1, 2, 136, 290, 291, 313, 314], "convent": [1, 290, 294, 313], "futur": [1, 13, 44, 290, 293, 311, 312, 313, 314, 329, 335, 337, 343], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 121, 136, 155, 272, 285, 287, 290, 293, 294, 296, 306, 307, 311, 312, 313, 314, 319, 322, 325, 332, 335, 337, 342, 343], "independ": [1, 2, 5, 291, 311], "yyyi": 2, "mm": [2, 139, 160], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 61, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 80, 81, 85, 86, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 130, 131, 136, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 156, 160, 163, 164, 165, 166, 168, 170, 171, 172, 174, 176, 178, 179, 180, 182, 184, 187, 188, 189, 190, 192, 195, 197, 199, 202, 203, 204, 205, 206, 208, 210, 212, 214, 215, 219, 220, 221, 223, 225, 227, 228, 232, 233, 234, 236, 239, 240, 241, 242, 244, 246, 249, 250, 251, 253, 254, 256, 258, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 300, 302, 303, 304, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 343], "purpos": [2, 286, 293, 313, 343], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 76, 122, 127, 136, 139, 155, 158, 262, 264, 270, 271, 272, 276, 277, 278, 279, 283, 284, 285, 286, 287, 290, 291, 293, 294, 306, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326, 327, 328, 329, 333, 334, 335, 336, 337, 341], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 61, 75, 76, 81, 87, 93, 94, 97, 101, 107, 108, 110, 111, 116, 118, 121, 123, 126, 131, 132, 134, 135, 136, 139, 144, 145, 149, 151, 152, 154, 155, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 188, 191, 203, 204, 215, 228, 240, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 300, 302, 304, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343], "summar": 2, "process": [2, 6, 8, 14, 33, 93, 94, 131, 290, 293, 294, 306, 311, 312, 313], "It": [2, 5, 6, 9, 14, 17, 38, 44, 122, 139, 281, 282, 286, 290, 291, 292, 293, 294, 311, 313, 314, 319, 327, 331, 332, 333, 334], "code": [2, 5, 7, 9, 12, 14, 38, 139, 272, 286, 287, 290, 291, 292, 296, 306, 311, 312, 314, 321, 325, 335, 337], "do": [2, 5, 9, 11, 14, 17, 18, 126, 136, 139, 286, 290, 292, 294, 310, 311, 312, 313, 319, 326, 327, 328, 329, 333, 334, 337], "doe": [2, 6, 9, 12, 14, 290, 296, 312, 313, 319], "primari": [2, 5, 9, 313, 342], "challeng": 2, "respect": [2, 8, 9, 14, 19, 139, 142, 290, 293, 326, 327, 328, 333, 334, 336, 341], "softwar": [2, 85, 320, 337], "appropri": [2, 5, 6, 14, 15, 26, 80, 86, 136, 139, 272, 275, 281, 282, 285, 287, 288, 290, 294, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320, 336, 337, 341], "final": [2, 5, 6, 7, 8, 136, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 292, 309, 313, 327, 333], "statement": [2, 12, 290, 311], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 75, 121, 139, 170, 178, 219, 232, 262, 272, 274, 275, 281, 282, 285, 287, 290, 294, 306, 313, 314, 319, 326, 327, 328, 329, 331, 332, 333, 334, 337], "regard": 2, "last": [2, 291, 294, 325, 337], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 116, 118, 139, 155, 175, 275, 281, 282, 290, 292, 294, 312, 313, 314, 325, 337], "your": [2, 4, 5, 6, 11, 136, 272, 293, 294, 306, 310, 313, 314, 315, 316, 319, 320, 326, 327, 328, 333, 334, 337], "appear": [2, 136, 290, 313], "under": [2, 17, 38, 39, 136, 139, 274, 290, 291, 294, 312, 322, 343], "head": [2, 274, 316], "correspond": [2, 6, 7, 121, 136, 139, 141, 272, 290, 294, 306, 325], "discuss": [2, 6, 139, 276, 277, 278, 279, 283, 284, 290, 293, 313, 325], "technic": [2, 7], "issu": [2, 6, 290, 291, 294], "focu": [2, 313], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 115, 120, 125, 130, 132, 133, 134, 135, 136, 137, 145, 149, 151, 152, 163, 165, 167, 171, 172, 173, 174, 179, 191, 204, 240, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 290, 291, 293, 294, 299, 306, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 325, 331, 332, 336], "To": [2, 5, 6, 12, 17, 18, 121, 136, 139, 272, 290, 293, 294, 306, 307, 313, 315, 316, 317, 318, 319, 320, 322, 326, 327, 328, 333, 334, 337], "extent": [2, 13, 17, 313, 325], "possibl": [2, 8, 11, 71, 139, 274, 276, 277, 278, 279, 283, 284, 290, 291, 292, 293, 313, 322, 329], "other": [2, 5, 6, 7, 8, 9, 10, 13, 15, 17, 19, 38, 39, 41, 49, 57, 108, 132, 181, 276, 277, 278, 279, 283, 284, 285, 286, 287, 288, 292, 293, 294, 301, 310, 311, 312, 314, 315, 325, 326, 327, 328, 333, 334, 343], "clean": [2, 4, 5, 6, 115, 120, 290, 292, 294], "plan": [2, 13, 139, 272, 281, 282, 290, 306, 311, 331, 332, 343], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 115, 132, 136, 139, 143, 144, 188, 203, 215, 228, 250, 274, 275, 281, 282, 285, 290, 293, 294, 313, 314, 315, 323, 326, 327, 328, 329, 331, 332, 333, 334, 337, 338, 343], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 132, 133, 134, 135, 136, 137, 139, 272, 287, 290, 292, 293, 294, 306, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 326, 327, 328, 329, 333, 334, 337, 342, 343], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 97, 101, 107, 121, 126, 136, 139, 155, 160, 165, 240, 272, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 306, 309, 310, 311, 312, 313, 314, 319, 323, 326, 327, 328, 333, 334, 336, 337], "intend": [2, 6, 8, 9, 291, 314, 332, 343], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 64, 121, 274, 276, 277, 278, 279, 283, 284, 288, 290, 293, 294, 310, 313, 329, 337], "pde": 2, "solver": [2, 292, 294, 312, 337], "well": [2, 6, 9, 12, 13, 136, 139, 267, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 294, 311, 313, 314, 327, 337, 343], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 61, 85, 89, 94, 98, 99, 100, 101, 102, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 121, 123, 126, 127, 130, 131, 136, 141, 144, 145, 151, 155, 158, 165, 187, 191, 194, 195, 202, 204, 208, 214, 215, 223, 227, 228, 236, 249, 251, 256, 258, 268, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 292, 293, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 340, 341, 342, 343], "low": [2, 123, 329], "variabl": [2, 5, 13, 19, 20, 25, 38, 41, 48, 49, 57, 68, 75, 81, 85, 97, 98, 102, 105, 121, 123, 125, 126, 131, 136, 139, 141, 142, 143, 144, 145, 146, 149, 152, 155, 161, 165, 168, 174, 176, 180, 184, 188, 195, 197, 199, 203, 204, 208, 210, 214, 215, 216, 219, 221, 223, 225, 227, 228, 229, 232, 234, 236, 240, 246, 249, 250, 251, 256, 258, 260, 264, 270, 271, 274, 285, 290, 293, 294, 300, 301, 306, 310, 313, 315, 316, 317, 318, 319, 320, 323, 325, 336, 337, 338, 341], "declar": [2, 7], "interfac": [2, 10, 262, 263, 264, 270, 271, 293, 294, 312, 313, 322], "sequenc": [2, 5, 14, 276, 277, 278, 279, 283, 284, 289, 290, 293, 311, 313, 337, 342, 343], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 61, 93, 94, 95, 97, 108, 121, 123, 132, 133, 134, 135, 136, 137, 139, 155, 160, 165, 240, 275, 290, 292, 293, 294, 307, 310, 311, 313, 314, 319, 320, 322, 326, 327, 328, 329, 333, 334, 336, 337, 341], "want": [2, 5, 6, 11, 14, 17, 18, 51, 136, 139, 290, 292, 294, 310, 313, 314, 319, 320, 335, 337, 343], "math": 2, "syntax": [2, 139, 313], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 294, 311, 313, 337], "2": [2, 6, 13, 14, 15, 18, 39, 136, 139, 179, 274, 275, 278, 283, 284, 288, 291, 294, 300, 307, 313, 314, 316, 319, 322, 323, 325, 327, 329, 330, 331, 332, 337], "2ab": 2, "imag": [2, 7, 19, 122, 123, 286, 313, 336, 341], "keep": [2, 5, 6, 9, 14, 25, 57, 276, 277, 278, 279, 283, 284, 286, 287, 290, 292, 294, 313, 336, 341], "mind": [2, 5, 313], "quit": [2, 288, 290, 292, 313], "small": [2, 9, 44, 136, 286, 290, 313, 315, 316, 321, 322, 333, 335, 337], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 80, 93, 94, 97, 110, 111, 112, 115, 127, 136, 139, 141, 155, 160, 165, 240, 264, 267, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343], "png": [2, 13, 19, 276, 277, 278, 279, 283, 284, 290, 313], "okai": [2, 6, 290, 313], "size": [2, 13, 19, 70, 71, 80, 139, 157, 159, 161, 286, 313, 314, 325, 327, 329, 331, 332, 335, 336, 341], "repo": [2, 5, 6, 136, 272, 306, 312, 313, 338], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 136, 139, 286, 287, 288, 290, 291, 292, 293, 294, 310, 311, 313, 314, 316, 322, 336, 337, 342, 343], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 290, 292, 294, 313], "sourc": [2, 6, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 290, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 337], "project": [2, 5, 6, 7, 67, 101, 107, 272, 293, 294, 306, 307, 313, 314, 315, 316, 319, 337, 338], "manag": [2, 310, 319], "item": [2, 313], "git": [2, 6, 16, 96, 272, 294, 306, 313, 314, 337], "branch": [2, 5, 136, 272, 287, 290, 294, 306, 312, 313, 337], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 290, 294, 319], "block": [2, 292], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 98, 102, 105, 136, 139, 286, 288, 290, 292, 293, 294, 310, 312, 313, 314, 319, 325, 326, 327, 328, 329, 333, 334, 337, 343], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 139, 286, 287, 290, 292, 293, 313], "example_funct": 2, "foo": [2, 293], "return": [2, 7, 15, 31, 48, 56, 59, 62, 69, 70, 71, 76, 80, 86, 87, 89, 92, 93, 103, 112, 113, 115, 116, 118, 121, 126, 130, 131, 139, 142, 143, 144, 145, 150, 153, 154, 156, 158, 160, 161, 166, 188, 190, 194, 203, 204, 215, 217, 218, 220, 228, 230, 231, 233, 250, 262, 265, 266, 267, 268, 269, 292, 293, 313, 327], "how": [2, 5, 6, 12, 14, 75, 139, 289, 290, 292, 293, 294, 314, 319, 320], "show": [2, 7, 13, 290, 313, 319, 320, 325, 326, 327, 328, 329, 333, 334, 336, 341], "met": 2, "regress": [2, 275, 276, 277, 278, 279, 283, 284, 291, 311, 312, 313, 325, 327, 337, 342], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 63, 92, 93, 94, 95, 96, 115, 120, 136, 139, 199, 246, 262, 264, 265, 266, 270, 271, 290, 293, 312, 313, 314, 316, 319, 320, 322, 331, 332, 336, 337, 341, 343], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 63, 96, 110, 112, 115, 120, 135, 136, 170, 178, 195, 198, 208, 211, 258, 288, 289, 290, 291, 292, 293, 294, 310, 311, 313, 314, 319, 326, 327, 328, 329, 333, 334, 335, 337, 343], "properli": [2, 132, 134, 135, 313, 314, 337], "addit": [2, 7, 9, 18, 38, 139, 285, 286, 287, 288, 290, 292, 293, 294, 313, 329], "modif": [2, 7, 290, 307], "nightli": [2, 294, 337, 342], "might": [2, 6, 11, 14, 17, 19, 136, 139, 286, 290, 294, 313, 314, 319, 337], "made": [2, 5, 17, 38, 41, 49, 121, 290, 292, 293, 307, 309, 311, 313, 343], "continu": [2, 6, 290, 313], "page": [3, 7, 136, 315], "auto": 3, "summari": [3, 316], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 76, 114, 115, 136, 139, 274, 275, 276, 277, 278, 279, 283, 284, 286, 288, 290, 291, 292, 293, 294, 311, 319, 323, 325, 329, 336, 337, 338, 341, 343], "relev": [3, 7, 9, 139, 276, 277, 278, 279, 281, 282, 283, 284, 313, 315, 316, 317, 318, 319, 320, 336, 337, 341], "seaic": [3, 10, 20, 40, 287, 290, 309, 311, 312, 337, 338, 341, 343], "long": [4, 25, 35, 38, 45, 93, 94, 155, 165, 240, 290, 313, 325, 337], "procedur": [4, 136, 294, 313, 320], "conda": [4, 5, 16, 96, 132, 134, 135, 136, 272, 287, 293, 306, 312, 313, 314, 315, 316, 317, 318, 320], "environ": [4, 5, 132, 134, 135, 272, 287, 293, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320], "spack": [4, 5, 132, 134, 135, 310, 312, 313, 315, 316, 317, 318, 319, 320], "compil": [4, 5, 6, 14, 132, 133, 134, 135, 136, 137, 310, 312, 313, 315, 316, 317, 318, 319, 320, 337], "system": [4, 5, 6, 25, 35, 38, 45, 93, 94, 95, 132, 134, 135, 136, 155, 165, 240, 290, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 337], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 67, 89, 116, 132, 134, 135, 136, 139, 149, 152, 286, 287, 288, 290, 292, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 337], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 76, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 112, 114, 115, 116, 118, 120, 121, 122, 123, 132, 133, 134, 135, 136, 137, 151, 167, 170, 173, 178, 185, 191, 200, 240, 247, 261, 264, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289, 290, 292, 293, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 341, 342], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 82, 96, 108, 109, 112, 114, 115, 120, 121, 132, 133, 134, 135, 136, 137, 139, 170, 178, 261, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 289, 290, 292, 293, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 326, 327, 328, 333, 334, 336, 341, 342, 343], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 60, 89, 96, 116, 120, 126, 136, 139, 149, 152, 286, 287, 288, 289, 290, 292, 294, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 337], "Then": [4, 6, 7, 11, 14, 132, 133, 134, 135, 136, 137, 272, 275, 281, 282, 285, 287, 290, 292, 294, 306, 313, 319, 325, 329, 337], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 67, 92, 93, 94, 103, 115, 120, 135, 136, 141, 149, 151, 152, 155, 164, 165, 167, 171, 173, 176, 180, 182, 187, 189, 191, 202, 205, 214, 219, 223, 227, 232, 236, 239, 240, 241, 249, 251, 253, 256, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 288, 289, 291, 292, 293, 299, 300, 303, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 342, 343], "script": [4, 5, 6, 12, 19, 54, 63, 133, 136, 137, 293, 311, 312, 313, 316, 319], "doc": [4, 7, 313, 320], "cd": [4, 6, 272, 294, 306, 313, 316, 337], "html": [4, 323], "view": [4, 281, 282, 294, 331, 332], "open": [4, 6, 294, 313], "_build": 4, "index": [4, 15, 18, 87, 123, 139, 141, 142, 144, 145, 146, 188, 203, 204, 215, 228, 264, 265, 266, 267, 268, 269, 270, 271, 286, 313], "act": [5, 293, 322], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 136, 163, 164, 275, 281, 282, 285, 287, 290, 292, 313, 314, 319, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337], "These": [5, 6, 8, 9, 14, 20, 38, 136, 139, 272, 274, 287, 290, 292, 293, 294, 306, 307, 312, 313, 314, 319, 325, 329, 332, 333, 337, 342, 343], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 63, 96, 136, 139, 148, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 291, 292, 310, 311, 313, 316, 319, 320, 323, 325, 326, 327, 328, 329, 333, 334, 338], "describ": [5, 7, 14, 17, 19, 96, 116, 118, 131, 139, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326, 327, 328, 329, 333, 337], "instal": [5, 6, 136, 294, 313, 319, 320, 337], "abov": [5, 7, 14, 18, 136, 286, 288, 290, 291, 292, 293, 294, 313, 314, 326, 327, 328, 329, 333, 335, 337, 342], "off": [5, 6, 294, 310], "http": [5, 7, 11, 14, 61, 290, 293, 310, 312, 313, 314, 320, 323, 337, 338], "github": [5, 6, 7, 293, 294, 312, 313, 314, 323, 337, 338], "com": [5, 6, 7, 14, 61, 293, 294, 312, 313, 314, 337, 338], "e3sm": [5, 7, 10, 11, 38, 125, 136, 272, 287, 290, 291, 293, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 338], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 57, 61, 68, 69, 75, 76, 81, 97, 104, 114, 115, 120, 125, 136, 139, 141, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 199, 202, 205, 206, 208, 210, 212, 214, 216, 219, 221, 223, 225, 227, 229, 232, 234, 236, 239, 240, 241, 242, 244, 246, 249, 251, 253, 254, 256, 258, 260, 264, 270, 271, 276, 277, 278, 279, 283, 284, 285, 286, 290, 291, 292, 293, 299, 300, 302, 303, 304, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 326, 327, 328, 333, 334, 337, 342], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 132, 134, 135, 136, 275, 276, 277, 278, 279, 282, 283, 284, 290, 294, 310, 313, 314, 319, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 340, 342, 343], "mean": [5, 294, 313, 322, 325, 326, 327, 328, 329, 333, 334, 342], "chang": [5, 6, 8, 17, 75, 108, 109, 139, 148, 272, 287, 290, 291, 292, 293, 294, 306, 311, 313, 314, 316, 320, 322, 325, 326, 327, 328, 333, 334, 337, 342], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 67, 103, 110, 136, 139, 275, 281, 282, 285, 287, 290, 291, 292, 293, 294, 310, 311, 312, 313, 314, 319, 320, 337], "tool": [5, 6, 9, 12, 14, 17, 272, 287, 290, 294, 306, 312, 313, 314], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 63, 76, 85, 90, 93, 94, 97, 103, 110, 121, 122, 123, 124, 125, 126, 131, 132, 136, 139, 141, 142, 143, 144, 146, 150, 153, 155, 156, 157, 158, 159, 160, 165, 166, 167, 173, 180, 184, 188, 190, 195, 199, 203, 208, 215, 220, 225, 226, 228, 233, 240, 246, 250, 251, 256, 258, 262, 264, 265, 266, 270, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 300, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 342, 343], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 64, 67, 73, 78, 92, 93, 94, 96, 97, 110, 111, 112, 114, 115, 120, 136, 139, 155, 157, 159, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 288, 290, 291, 294, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 342], "support": [5, 6, 8, 13, 17, 38, 139, 264, 270, 271, 274, 290, 293, 306, 311, 312, 313, 314, 316, 320, 322, 325, 335, 343], "machin": [5, 8, 9, 38, 40, 62, 63, 96, 114, 115, 120, 272, 290, 293, 306, 312, 313, 314, 315, 316, 317, 318, 320], "option": [5, 7, 9, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 61, 62, 63, 64, 68, 74, 75, 76, 79, 81, 85, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 114, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 142, 144, 145, 148, 149, 151, 152, 155, 158, 160, 165, 167, 173, 175, 185, 188, 191, 200, 203, 204, 215, 216, 228, 229, 240, 242, 244, 247, 262, 264, 265, 266, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 302, 306, 307, 310, 312, 314, 322, 324, 337, 343], "help": [5, 6, 13, 136, 286, 287, 288, 290, 294, 312, 313, 319, 323, 338], "usag": [5, 15, 19, 292, 314, 316, 320], "h": [5, 14, 313, 329], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 131, 136, 139, 141, 146, 217, 218, 230, 231, 240, 276, 277, 278, 279, 283, 284, 290, 292, 293, 294, 310, 313, 314, 316, 318, 319, 324, 325, 326, 328, 331, 332, 333, 337, 342, 343], "n": [5, 6, 69, 76, 77, 83, 290, 313, 316, 319, 320, 325, 327, 329, 331, 332, 336, 337, 341], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 92, 93, 94, 97, 115, 136, 139, 150, 153, 155, 156, 157, 159, 165, 166, 180, 190, 216, 220, 229, 233, 240, 272, 275, 281, 282, 286, 290, 291, 292, 293, 300, 311, 313, 314, 319, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 341], "v": [5, 294, 313, 326, 328, 329, 331, 332, 333, 342], "By": [5, 14, 18, 39, 40, 139, 272, 287, 290, 292, 306, 313, 314, 325, 327, 335], "default": [5, 7, 9, 14, 15, 18, 19, 25, 39, 40, 49, 55, 63, 76, 81, 87, 88, 96, 97, 98, 102, 105, 111, 115, 117, 120, 123, 132, 134, 135, 136, 139, 143, 144, 165, 188, 203, 215, 228, 272, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 292, 294, 306, 307, 312, 314, 315, 316, 317, 318, 319, 320, 322, 326, 327, 328, 333, 334, 335, 336, 337, 341, 343], "planar": [5, 9, 123, 139, 274, 287, 290, 313, 331, 332, 335, 336, 341, 342, 343], "baroclinic_channel": [5, 7, 9, 14, 18, 272, 280, 286, 287, 290, 293, 313, 325, 337, 342, 343], "10km": [5, 18, 275, 313, 325, 337, 342, 343], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 70, 132, 133, 134, 135, 136, 137, 139, 163, 165, 179, 239, 240, 241, 264, 270, 271, 275, 276, 277, 278, 281, 282, 283, 284, 285, 287, 288, 290, 292, 294, 307, 310, 313, 314, 316, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337], "decomp": [5, 287, 313, 337, 342], "displai": [5, 8, 320], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 61, 64, 67, 96, 112, 114, 115, 120, 121, 123, 136, 141, 272, 287, 290, 292, 293, 294, 300, 306, 311, 313, 314, 315, 316, 317, 318, 319, 320, 337, 343], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 61, 63, 96, 97, 110, 112, 114, 115, 120, 121, 136, 155, 163, 164, 165, 168, 170, 171, 172, 174, 176, 178, 179, 180, 182, 195, 208, 240, 258, 272, 275, 287, 289, 290, 291, 292, 293, 294, 300, 302, 304, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 326, 327, 328, 329, 333, 334, 337, 343], "messag": [5, 8, 136, 290, 310, 320], "task_expr": [5, 64], "flag": [5, 6, 136, 290, 293, 310, 311, 313, 314, 323, 325, 337, 338], "suppli": [5, 6, 7, 15, 18, 131, 136, 290, 294, 313], "substr": [5, 136], "regular": [5, 19, 64, 69, 76, 184, 199, 246, 251, 256, 313, 315, 318, 319, 320, 329, 337], "express": [5, 64], "subset": 5, "search": [5, 64, 316], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 70, 80, 86, 89, 93, 94, 111, 116, 118, 121, 126, 139, 141, 142, 145, 146, 154, 155, 174, 204, 267, 275, 276, 277, 278, 279, 283, 284, 285, 290, 292, 310, 312, 313, 314, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 341, 342], "pass": [5, 8, 9, 12, 13, 14, 18, 80, 121, 122, 139, 286, 287, 290, 292, 293, 294, 311, 337], "similarli": [5, 8, 272, 290, 292, 294, 319, 337], "result": [5, 13, 18, 59, 71, 80, 136, 139, 163, 171, 176, 179, 182, 244, 275, 276, 277, 278, 279, 283, 284, 290, 291, 293, 294, 299, 304, 311, 313, 314, 325, 326, 327, 328, 329, 333, 334, 336, 341, 342], "descript": [5, 7, 313, 314, 323, 338], "short": [5, 164, 239, 241, 290, 291, 292, 293, 303, 313, 325], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 63, 92, 93, 94, 120, 136, 139, 140, 155, 163, 164, 239, 241, 275, 285, 286, 287, 290, 291, 292, 293, 307, 311, 313, 314, 315, 316, 317, 318, 319, 320, 337, 342], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 120, 122, 123, 136, 139, 141, 155, 198, 211, 274, 290, 292, 294, 313, 322, 329, 343], "built": [5, 14, 115, 120, 136, 272, 287, 294, 306, 312, 314, 319, 337], "standalon": [5, 14, 135, 136, 287, 294, 311, 312, 319, 338], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 31, 38, 40, 67, 85, 99, 106, 116, 118, 120, 130, 131, 132, 133, 134, 135, 136, 137, 140, 155, 158, 161, 195, 208, 210, 216, 229, 246, 258, 263, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 290, 293, 294, 297, 306, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 329, 331, 335, 336, 337, 338, 341, 342, 343], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 115, 120, 136, 290, 292, 293, 294, 310, 313, 316, 320, 322, 326, 327, 328, 329, 333, 334, 337], "num": 5, "f": [5, 9, 11, 18, 139, 194, 287, 290, 292, 293, 294, 313, 314, 320, 325, 329, 331, 337], "m": [5, 6, 14, 69, 76, 77, 83, 275, 285, 286, 294, 313, 315, 316, 317, 318, 320, 322, 325, 327, 328, 329, 333, 335, 337], "mach": [5, 9, 38, 136, 312, 315, 316, 317, 318, 319, 320, 337], "w": [5, 6, 294, 311, 313, 337], "p": [5, 6, 294, 313, 314, 337], "suite_nam": [5, 8, 111, 113, 115, 120, 337], "copy_execut": [5, 115, 120, 337], "specifi": [5, 6, 14, 17, 18, 19, 40, 136, 139, 274, 290, 294, 309, 313, 314, 320, 325, 326, 327, 328, 333, 334, 336, 337, 341], "altern": [5, 13, 290, 307, 337], "task_numb": 5, "multipl": [5, 9, 14, 136, 273, 291, 292, 293, 294, 313, 319, 325, 337], "test": [5, 7, 8, 9, 19, 49, 50, 55, 63, 92, 93, 94, 113, 121, 136, 140, 141, 147, 149, 152, 162, 164, 165, 171, 172, 174, 175, 176, 177, 179, 184, 185, 186, 187, 189, 192, 195, 196, 199, 200, 201, 202, 205, 206, 208, 209, 212, 213, 214, 216, 219, 221, 222, 223, 224, 225, 226, 227, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 262, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 302, 303, 304, 305, 306, 309, 311, 312, 318, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342], "separ": [5, 7, 9, 14, 17, 18, 141, 290, 291, 311, 313, 326, 327, 328, 333, 334, 337], "space": [5, 6, 7, 9, 13, 136, 281, 282, 290, 294, 313, 316, 319, 329, 337], "requir": [5, 6, 8, 14, 25, 35, 38, 39, 45, 97, 139, 155, 165, 240, 272, 286, 287, 290, 291, 292, 293, 294, 306, 307, 310, 312, 313, 314, 319, 322, 323, 336, 337, 338, 341, 343], "few": [5, 13, 14, 25, 35, 38, 45, 93, 94, 136, 155, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 293, 313, 314, 319], "basic": [5, 7, 314, 316, 319, 329, 337], "piec": [5, 286, 287, 313], "abl": [5, 132, 133, 134, 135, 137, 139, 290, 291, 294, 313, 319, 337], "place": [5, 6, 14, 122, 136, 286, 290, 292, 307, 313, 319], "download": [5, 6, 8, 10, 38, 40, 47, 136, 170, 178, 292, 293, 294, 314, 337, 342], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 136, 139, 274, 276, 277, 278, 279, 283, 284, 286, 288, 290, 292, 293, 294, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 337, 338, 342, 343], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 103, 116, 118, 119, 122, 123, 125, 131, 136, 195, 208, 258, 264, 270, 271, 290, 294, 312, 314, 315, 316, 317, 318, 319, 337, 342, 343], "r": [5, 194, 320, 326, 327, 328, 333], "tell": [5, 6, 136, 294], "re": [5, 6, 9, 292, 293, 294, 311, 313, 314, 319, 320, 326, 327, 328, 333, 334], "leav": [5, 19, 276, 277, 278, 283, 284, 314, 326, 327, 328, 333, 334], "unknown": [5, 136, 293, 319], "component_path": [5, 9, 115, 120, 272, 287, 306, 314, 337], "absolut": [5, 9, 38, 40, 57, 115, 120, 272, 287, 290, 294, 306, 337], "landic": [5, 6, 12, 20, 40, 67, 120, 286, 287, 289, 290, 292, 294, 311, 312, 313, 314, 337, 343], "e3sm_submodul": [5, 272, 287, 294, 306, 307, 313], "mali": [5, 136, 287, 290, 294, 311, 313, 314, 337, 343], "dev": [5, 6, 7, 276, 278, 279, 283, 284, 286, 287, 289, 290, 293, 294, 312, 313, 323, 337, 338], "albani": [5, 132, 134, 135, 136, 287, 314, 315, 316, 317, 320, 337], "depend": [5, 14, 17, 19, 38, 39, 47, 108, 109, 136, 139, 141, 170, 178, 187, 202, 214, 227, 249, 251, 256, 292, 294, 311, 312, 313, 314, 319, 320, 322, 326, 327, 328, 333, 334, 337, 343], "whether": [5, 8, 13, 14, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 61, 64, 110, 111, 115, 120, 121, 122, 123, 127, 136, 139, 151, 154, 155, 167, 173, 184, 191, 199, 240, 242, 244, 246, 251, 256, 281, 282, 286, 290, 292, 294, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 341], "omega": [5, 31, 125, 155, 158, 216, 229, 272, 287, 293, 294, 311, 313, 323, 329, 331, 332, 337], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 62, 63, 74, 76, 79, 92, 93, 94, 95, 96, 112, 114, 115, 120, 122, 125, 126, 127, 128, 130, 131, 148, 149, 151, 152, 155, 158, 160, 167, 173, 174, 184, 185, 191, 199, 200, 216, 229, 246, 247, 262, 264, 265, 266, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 306, 307, 310, 312, 322, 337, 343], "point": [5, 6, 9, 54, 61, 100, 136, 272, 274, 286, 287, 292, 293, 294, 306, 313, 314, 319, 333, 337], "much": [5, 6, 14, 290, 313], "config_fil": [5, 9, 115, 120], "work_dir": [5, 11, 38, 49, 63, 96, 114, 115, 120, 121, 290, 292, 313], "recommend": [5, 7, 11, 19, 136, 290, 291, 293, 294, 313, 319], "itself": [5, 6, 7, 9, 38, 46, 53, 286, 287, 289, 290, 292, 294, 313, 337], "temp": 5, "scratch": [5, 6, 294, 313, 316, 320, 337], "avoid": [5, 290, 313], "confus": [5, 14, 293, 294, 313], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 84, 85, 94, 97, 110, 111, 121, 139, 141, 145, 146, 149, 152, 155, 161, 170, 178, 180, 181, 187, 195, 202, 204, 208, 214, 223, 227, 236, 249, 251, 256, 258, 263, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 292, 300, 301, 309, 311, 314, 320, 326, 327, 328, 329, 333, 334, 337, 342], "compar": [5, 10, 18, 38, 41, 48, 114, 115, 120, 121, 139, 180, 181, 240, 276, 277, 278, 279, 283, 284, 285, 290, 291, 292, 293, 294, 300, 301, 309, 311, 313, 324, 325, 337, 340, 342], "previou": [5, 181, 290, 294, 301, 313, 324, 337, 342], "same": [5, 7, 9, 14, 18, 38, 39, 40, 48, 121, 136, 139, 143, 144, 188, 203, 215, 228, 250, 275, 285, 286, 288, 290, 291, 292, 293, 294, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 333, 334, 335, 337, 342, 343], "baseline_dir": [5, 38, 114, 115, 120, 290], "mani": [5, 6, 8, 9, 139, 286, 288, 290, 292, 293, 294, 312, 313, 325, 336, 341], "valid": [5, 10, 38, 41, 48, 139, 149, 152, 264, 265, 266, 267, 268, 269, 270, 271, 281, 282, 285, 290, 293, 294, 312, 322, 325], "timer": [5, 18, 38, 290, 291, 293], "both": [5, 6, 7, 8, 13, 14, 30, 136, 139, 160, 167, 173, 275, 286, 287, 289, 290, 294, 312, 313, 314, 324, 327, 331, 332, 335], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 115, 120, 272, 287, 294, 306, 314, 320, 337], "give": [5, 14, 18, 136, 290, 293, 294, 313, 314, 337], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 18, 19, 25, 37, 108, 136, 139, 155, 264, 270, 271, 272, 275, 281, 282, 286, 287, 290, 292, 293, 294, 306, 311, 313, 314, 319, 320, 322, 325, 326, 327, 328, 329, 333, 334, 335, 337, 342], "case": [5, 6, 7, 8, 9, 14, 19, 28, 29, 49, 50, 55, 63, 92, 93, 94, 116, 121, 136, 139, 140, 147, 164, 171, 172, 174, 175, 176, 177, 179, 185, 186, 187, 189, 192, 195, 196, 200, 202, 205, 206, 208, 209, 212, 214, 216, 219, 221, 222, 223, 224, 225, 227, 229, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 262, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 294, 297, 299, 302, 303, 305, 311, 312, 313, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 341, 342], "pre": [5, 136, 294], "copi": [5, 6, 8, 40, 55, 115, 120, 313, 316, 337], "just": [5, 14, 25, 35, 38, 45, 64, 136, 155, 290, 293, 294, 311, 313, 316, 320], "wish": [5, 7, 14, 50, 290, 294, 313, 337], "again": [5, 14, 135, 139, 272, 290, 292, 294, 310, 337], "later": [5, 8, 18, 25, 35, 38, 45, 57, 136, 155, 290, 313, 314], "anticip": [5, 313], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 109, 122, 136, 148, 272, 274, 286, 290, 291, 292, 294, 306, 307, 310, 311, 313, 314, 320, 326, 327, 328, 329, 333, 334, 335, 336, 337, 341, 343], "delet": [5, 115, 120, 293, 294, 310, 337], "fresh": [5, 6, 292, 313], "sinc": [5, 14, 87, 109, 131, 139, 275, 290, 292, 293, 294, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 341], "rerun": [5, 294], "c": [5, 6, 115, 136, 290, 294, 315, 316, 317, 318, 319, 320, 324, 326, 328, 333, 334, 337, 342], "test_suit": [5, 113, 290], "build": [5, 6, 10, 13, 14, 72, 77, 132, 133, 134, 135, 137, 272, 287, 292, 293, 306, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320], "mpas_model": [5, 314], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 72, 75, 76, 77, 139, 170, 178, 198, 211, 290, 292, 293, 313, 314, 320, 337], "baselin": [5, 6, 8, 10, 38, 41, 48, 114, 115, 120, 121, 139, 149, 152, 240, 275, 281, 282, 285, 290, 291, 293, 309, 311, 313, 324, 337], "comparison": [5, 8, 18, 38, 48, 121, 290, 313, 314, 333], "against": [5, 10, 41, 48, 121, 139, 149, 152, 275, 281, 282, 285, 290, 309, 313, 324], "oppos": [5, 14, 30, 151, 154, 167, 173, 184, 191, 199, 246, 251, 256, 313], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 110], "wherea": [5, 12, 290, 311, 313, 324, 343], "typic": [5, 7, 9, 13, 14, 17, 18, 19, 38, 50, 111, 136, 139, 286, 287, 288, 290, 292, 294, 311, 313, 314, 319, 322, 335, 337, 343], "clone": [5, 6, 136, 272, 288, 294, 306, 313, 337], "pickl": [5, 8, 108, 109, 290, 313, 337], "latter": [5, 49, 136], "conveni": [5, 9, 17, 264, 270, 271, 286, 290, 313, 314, 326, 327, 328, 333, 334, 337, 343], "tab": [5, 337], "explicitli": [5, 7, 139, 275, 281, 282, 290, 294, 313, 314, 337], "select": [5, 8, 123, 290, 294, 313], "edit": [5, 7, 294, 313, 337], "steps_to_run": [5, 49, 111, 290, 292, 313, 314], "full_run": [5, 18, 309, 325, 340], "restart_run": [5, 18, 309, 325, 340], "Or": [5, 290, 314], "accomplish": [5, 290, 293], "thing": [5, 132, 133, 134, 135, 136, 137, 139, 286, 290, 293, 312, 342], "take": [5, 6, 7, 11, 13, 14, 57, 136, 139, 145, 204, 286, 290, 291, 292, 294, 313, 326, 327, 328, 333, 342], "preced": [5, 57, 139], "over": [5, 9, 14, 57, 122, 290, 293, 312, 313, 322, 325, 335, 337], "intern": [5, 11, 25, 290, 294, 310], "shouldn": [5, 136, 240, 313], "special": [5, 311, 336], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 155, 290, 319], "polaris_cach": [5, 8, 20, 290], "structur": [5, 13, 31, 158, 289, 292, 312, 313], "without": [5, 40, 290, 293, 294, 313, 314, 318, 319, 331, 332, 336, 337], "redund": [5, 264, 270, 271, 275, 286, 313], "stamp": 5, "revis": [5, 314], "older": 5, "ones": [5, 264, 270, 271, 293, 313], "version": [5, 6, 16, 33, 57, 96, 121, 136, 272, 275, 286, 287, 288, 290, 292, 293, 294, 306, 312, 313, 314, 319, 320, 323, 325, 327, 337, 338], "updat": [5, 7, 8, 25, 27, 29, 34, 35, 44, 45, 117, 135, 136, 157, 240, 272, 275, 276, 277, 278, 281, 282, 283, 284, 290, 306, 310, 312, 313, 337], "cached_fil": [5, 20, 290], "json": [5, 8, 20, 55, 290, 320], "anvil": [5, 6, 136, 290, 314, 319, 337], "chrysali": [5, 6, 136, 290, 313, 314, 319, 337], "onto": [5, 294], "lcrc": [5, 6, 8, 11, 55, 290, 293, 314, 315, 317, 319, 337], "server": [5, 8, 40, 55, 290, 293, 314, 320], "d": [5, 19, 123, 216, 229, 264, 270, 271, 274, 278, 283, 284, 290, 313, 323, 330, 335], "whose": [5, 46, 53, 86, 290], "ocean_cached_fil": 5, "pr": [5, 6, 337, 342], "look": [5, 6, 7, 11, 18, 292, 293, 313, 314], "someth": [5, 7, 98, 102, 105, 136, 294, 313], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 97, 139, 141, 149, 152, 275, 290, 293, 313], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 85, 149, 152, 155, 275, 281, 282, 290, 313, 314], "info": [5, 12, 14, 25, 32, 85, 136, 149, 152, 155, 290, 313], "initial_st": [5, 18, 19, 141, 275, 290, 313], "date_str": [5, 55], "let": [5, 290, 294, 311, 313, 314, 320], "string": [5, 9, 15, 40, 101, 107, 136, 139, 160, 246, 294], "choos": [5, 290, 293, 294, 313, 315, 316, 317, 318, 320, 343], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 313], "check": [5, 6, 18, 121, 290, 294, 313, 314, 316, 320, 337, 342], "print": [5, 12, 18, 64, 121, 127, 290, 293, 342], "stdout": [5, 12, 38, 49, 290, 292], "translat": [5, 31, 139, 158], "convert": [5, 9, 13, 14, 139, 160, 290, 313], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 115, 120, 130, 131, 155, 158, 159, 167, 170, 173, 178, 272, 275, 281, 282, 286, 287, 290, 292, 293, 306, 307, 309, 312, 313, 314, 335], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 125, 130, 131, 159, 167, 170, 173, 178, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 306, 309, 314, 336, 341], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 136, 149, 152, 155, 158, 159, 167, 173, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 290, 292, 312, 313, 316, 320], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 125, 136, 139, 154, 158, 272, 286, 288, 290, 291, 293, 294, 306, 310, 311, 312, 313, 314, 320, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 341, 343], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 125, 136, 139, 154, 158, 272, 286, 288, 290, 291, 293, 294, 306, 310, 311, 312, 313, 314, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 341], "don": [5, 6, 7, 14, 136, 139, 141, 146, 290, 292, 293, 294, 313, 318, 337, 343], "format": [5, 7, 11, 13, 14, 125, 131, 160, 291, 292, 294, 313, 314, 316], "note": [5, 7, 17, 18, 313, 320], "keyword": [5, 7, 14, 18, 19, 276, 277, 278, 283, 284, 290, 326, 327, 328, 329, 333, 334], "top": [5, 19, 264, 265, 266, 267, 268, 269, 270, 271, 274, 288, 313, 322], "ignor": [5, 101, 107], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 62, 70, 86, 92, 103, 110, 136, 139, 143, 144, 145, 155, 188, 203, 204, 215, 228, 250, 286, 289, 290, 292, 293, 294, 311, 314, 322, 337], "pars": [5, 9, 14, 26, 27, 28, 29, 89, 116, 118], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 87, 121, 122, 123, 127, 139, 141, 149, 152, 158, 174, 194, 275, 283, 287, 290, 292, 293, 312, 313, 314, 322, 325, 326, 327, 328, 329, 333, 334, 335], "doesn": [5, 6, 131, 136, 290, 292, 313, 314, 319, 337], "matter": [5, 313], "usabl": 5, "try": [6, 14, 61, 136, 293, 294, 310, 313, 314, 316, 320, 337], "stai": [6, 294], "sync": 6, "mpi": [6, 14, 17, 97, 132, 135, 136, 155, 157, 159, 275, 281, 282, 290, 294, 310, 312, 313, 315, 316, 317, 318, 320, 337], "librari": [6, 14, 132, 136, 294, 313, 315, 316, 317, 318, 319, 320, 337], "netcdf": [6, 136, 141, 146, 161, 285, 314, 315, 316, 317, 318, 319, 320], "fortran": [6, 136, 315, 316, 317, 318, 319, 320], "pnetcdf": [6, 136, 315, 316, 317, 318, 319, 320], "mkl": [6, 136], "linear": [6, 19, 122, 123, 276, 277, 278, 281, 283, 284, 313, 325, 326, 327, 328, 329, 331, 333, 334], "algebra": 6, "lib": [6, 136], "esmf": [6, 294, 337], "scorpio": [6, 294, 319, 337], "forg": [6, 136, 312, 337], "python": [6, 7, 8, 9, 26, 44, 51, 139, 286, 288, 290, 292, 293, 294, 311, 312, 313, 314, 319, 320, 337], "aren": [6, 11, 38, 39, 136, 290, 293, 294, 313, 342], "brief": [6, 7, 313], "tour": 6, "login": [6, 136, 294, 316, 320], "node": [6, 14, 25, 37, 38, 42, 45, 62, 92, 93, 94, 136, 155, 290, 291, 293, 294, 313, 314, 315, 316, 317, 318, 319, 320, 337], "bootstrap": 6, "rest": [6, 161, 269, 322, 327], "u": [6, 290, 313, 319, 320, 326, 328, 329, 331, 332, 333], "unifi": [6, 136, 294, 320], "diagnost": [6, 283, 314, 315, 316, 318, 319, 320, 326, 337], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 139, 290, 292, 293, 294, 313], "cach": [6, 20, 25, 38, 40, 114, 115, 155, 312, 314, 319, 324, 337, 342], "own": [6, 7, 8, 9, 11, 12, 19, 38, 136, 139, 290, 292, 293, 294, 311, 313, 314, 326, 327, 328, 333, 334, 337, 343], "config_machin": 6, "xml": [6, 14, 116, 118, 119, 131, 306], "ey": 6, "master": [6, 272, 306, 338], "happen": [6, 9, 12, 17, 109, 290, 313, 326, 327, 328, 333, 334], "me": [6, 313], "dev_quick_start": 6, "fork": [6, 313], "haven": [6, 313], "mkdir": [6, 294], "involv": [6, 14, 290, 311, 313], "coupl": [6, 310, 312], "alpha": [6, 132, 133, 134, 135, 136, 137, 313, 329], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 139, 286, 288, 290, 291, 292, 293, 294, 313, 314, 342, 343], "stand": 6, "omit": [6, 290, 337], "suffix": [6, 40, 115, 290], "onc": [6, 14, 41, 275, 294, 313, 314, 326, 327, 328, 333, 334, 337], "releas": [6, 136, 293, 312, 319, 323, 337], "spack_for_mache_1": 6, "12": [6, 13, 70, 276, 278, 283, 284, 309, 313, 316, 326, 328, 329, 333, 334, 340], "worktre": [6, 312, 313], "my": [6, 136, 316], "fetch": [6, 294, 313], "out": [6, 8, 9, 13, 57, 91, 95, 123, 136, 149, 152, 288, 290, 293, 294, 314, 322, 337], "checkout": [6, 294, 313], "mambaforg": [6, 294, 313, 319, 337], "manual": [6, 14, 49, 50, 290, 292, 343], "linux": [6, 136, 294, 319], "x86_64": [6, 136], "our": [6, 136, 293, 313, 337], "found": [6, 9, 14, 126, 136, 293, 294, 312, 313, 315, 316, 317, 318, 319, 320], "exist": [6, 7, 9, 31, 38, 41, 61, 116, 118, 120, 136, 158, 275, 290, 292, 293, 294, 310, 313, 319, 342], "miniconda3": [6, 294], "alwai": [6, 7, 9, 12, 57, 136, 139, 144, 188, 203, 215, 228, 272, 287, 290, 292, 293, 294, 306, 311, 313, 314], "pleas": [6, 136, 287, 293, 294, 313, 337], "start": [6, 7, 8, 14, 15, 87, 117, 136, 274, 275, 279, 286, 291, 292, 293, 312, 316, 319, 320, 323, 338, 340], "definit": [6, 14, 313], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 75, 101, 107, 114, 115, 120, 136, 139, 186, 201, 213, 226, 248, 272, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 306, 307, 309, 311, 312, 314, 319, 322, 325, 327, 334, 335, 342, 343], "export": [6, 310], "conda_bas": 6, "home": [6, 18, 136, 294, 313, 314, 316, 319, 320], "readi": [6, 313, 320], "configure_polaris_env": [6, 136, 294, 310, 313], "py": [6, 12, 14, 18, 67, 136, 286, 287, 293, 294, 311, 313, 314], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 136, 294], "tmpdir": [6, 136], "group": [6, 7, 286, 312, 315, 317, 319, 320, 336, 337, 343], "spack_temp": 6, "spack_test": 6, "intel": [6, 136, 319], "gnu": [6, 136, 294, 318, 319, 337], "openmpi": [6, 132, 136, 294, 312, 315, 317, 318, 337], "impi": [6, 132, 136, 315, 318], "recreat": [6, 292, 294, 310], "request": [6, 7, 14, 15, 25, 32, 34, 136, 139, 149, 152, 155, 265, 266, 290, 292, 293, 294, 310, 313, 314, 326, 327, 328, 333, 334], "twice": [6, 313], "deploy": [6, 294], "prebootstrap": 6, "load": [6, 19, 109, 133, 136, 137, 290, 294, 312, 313, 314, 315, 316, 317, 318, 319, 320], "activ": [6, 136, 319, 320, 337], "differ": [6, 14, 15, 17, 18, 57, 72, 77, 121, 136, 139, 162, 165, 174, 272, 275, 286, 287, 288, 290, 291, 292, 293, 306, 311, 313, 314, 316, 320, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 341], "On": [6, 7, 13, 136, 294, 319], "tmp": [6, 136], "safe": [6, 14, 290, 294, 325], "strictli": [6, 13, 293, 313], "necessari": [6, 7, 13, 136, 313], "good": [6, 12, 38, 290, 294, 313], "idea": [6, 12, 313], "Be": [6, 320], "awar": [6, 7, 136, 313, 319], "with_petsc": [6, 294], "wa": [6, 8, 48, 59, 121, 136, 290, 292, 293, 294, 310, 311, 313, 314, 322, 337], "limit": [6, 291, 294, 325], "amount": [6, 25, 35, 38, 45, 155, 290, 321, 335], "team": [6, 136, 312], "petsc_support": 6, "txt": [6, 8, 120, 291, 310], "with_albani": [6, 294], "albany_support": 6, "encount": [6, 291, 310], "error": [6, 8, 15, 38, 49, 136, 139, 142, 143, 146, 276, 277, 278, 279, 281, 282, 283, 284, 290, 292, 294, 312, 313, 326, 327, 328, 329, 333, 334], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 151, 167, 173, 191, 290, 292, 293, 294, 313, 314, 337, 342, 343], "attempt": [6, 136, 312, 319], "sh": [6, 132, 133, 134, 135, 136, 137, 294, 310, 313, 315, 316, 317, 318, 320, 337], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 93, 94, 96, 104, 136, 290, 293, 294, 311, 312, 313, 316, 319, 320, 337], "pscratch": 6, "suggest": [6, 136, 310], "correctli": 6, "seem": [6, 14, 313, 316, 320], "switch": [6, 313, 314], "v0": 6, "19": 6, "submodul": [6, 272, 287, 294, 306, 313, 337], "serv": [6, 114, 115, 120, 139, 286, 313], "kind": [6, 313], "whichev": [6, 272, 306, 322], "load_dev_polaris_0": [6, 132, 133, 134, 135, 136, 137, 313], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 272, 293, 294, 306, 313, 337], "pio": [6, 25, 34, 37, 155, 275, 281, 282], "openmp": [6, 25, 35, 38, 45, 94, 132, 134, 135, 155, 165, 240, 290, 313, 315, 316, 317, 318, 320], "ifort": [6, 132, 134, 136, 313, 315, 317], "ac": [6, 313], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 313, 319, 337], "job_script": [6, 313, 337], "bash": [6, 294, 310, 313, 337], "termin": [6, 8, 136, 290, 294, 313], "isn": [6, 9, 15, 276, 277, 278, 279, 283, 284, 290, 293, 313], "ll": [6, 19, 136, 276, 277, 278, 283, 284, 293, 313, 320, 326, 327, 328, 333, 334], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 132, 134, 135, 136, 294, 315, 317], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 286, 290, 313, 322, 333], "util": [6, 293, 332], "matrix": 6, "sever": [6, 12, 136, 139, 286, 290, 292, 293, 294, 312, 313, 336, 337, 342], "automat": [6, 7, 9, 12, 14, 19, 136, 139, 290, 293, 294, 313, 314, 315, 317, 318, 319, 320, 337], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 337], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 135, 136, 139, 290, 293, 313], "integr": [6, 15, 139, 174, 275, 293, 313, 325, 326, 327, 328, 329, 333, 334, 336, 341], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 316, 337], "245": 6, "246": 6, "non": [6, 14, 18, 274, 290, 313, 326, 333, 337], "care": [6, 11, 13, 139, 286, 290, 294, 313], "temporari": [6, 136], "begin": [6, 7, 18, 275, 290, 294, 307, 312, 313, 319, 325, 327, 335], "anymor": 6, "best": [6, 17, 136, 290, 294], "hard": [6, 290, 313, 325, 335], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 63, 122, 123, 149, 152, 290, 292, 313, 340], "myst": [7, 313], "tip": [7, 294], "easi": [7, 9, 40, 293, 313], "pull": [7, 136, 293, 294, 313, 314], "guid": [7, 139, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 291, 293, 313, 316, 319, 323, 338], "baroclin": [7, 9, 14, 162, 163, 164, 165, 168, 171, 174, 176, 179, 180, 182, 240, 275, 287, 290, 313, 323, 330, 343], "channel": [7, 9, 14, 162, 163, 164, 165, 168, 171, 174, 176, 179, 180, 182, 240, 275, 287, 290, 310, 313, 323, 330, 343], "label": [7, 122, 319, 337], "prepend": 7, "categori": [7, 287, 288, 289, 312, 343], "uniqu": [7, 14, 136, 292, 313], "And": [7, 14, 294, 313], "becom": [7, 290, 292, 313], "who": [7, 294, 313, 314, 320], "citat": 7, "basi": [7, 313], "overview": [7, 312, 316, 320], "common": [7, 12, 14, 44, 49, 136, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 290, 291, 292, 293, 310, 311, 313, 314, 319, 320, 336, 337, 341, 342, 343], "characterist": [7, 336, 341], "comment": [7, 291, 314], "appli": [7, 13, 14, 64, 274, 286, 313, 325, 335, 336, 341], "vertic": [7, 15, 19, 86, 144, 145, 188, 203, 204, 215, 228, 239, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 314, 321, 323], "grid": [7, 13, 17, 69, 76, 80, 83, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 139, 195, 208, 258, 261, 262, 263, 264, 265, 266, 267, 270, 271, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 307, 313, 314], "forc": [7, 285, 309, 313, 343], "specif": [7, 9, 14, 51, 136, 139, 272, 286, 287, 288, 290, 306, 307, 312, 313, 314, 316, 319, 325, 336, 337, 341, 342], "public": [7, 11, 290, 313, 314], "api": [7, 12, 312, 313], "underscor": [7, 313], "md": [7, 313], "eval": 7, "rst": [7, 14, 313], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 287, 293], "compute_cell_count": [7, 139, 275, 281, 282, 313], "dynamic_model_config": [7, 14, 275, 313], "ot": [7, 313], "numpydoc": [7, 313], "text": [7, 8, 325, 327, 329, 335], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 139, 264, 266, 267, 268, 269, 270, 271, 272, 281, 282, 290, 313, 314, 316, 320, 329, 331, 332], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 272, 314, 331, 332], "overli": [7, 313], "ic": [7, 139, 272, 292, 293, 294, 307, 309, 312, 313, 314, 316, 322, 340, 343], "shelf": [7, 139, 286, 293, 313, 314, 322], "draft": [7, 322], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 61, 62, 63, 64, 67, 68, 70, 71, 72, 75, 80, 81, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 126, 127, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 149, 151, 152, 154, 155, 158, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 184, 187, 188, 189, 191, 192, 194, 195, 197, 199, 202, 203, 204, 205, 206, 208, 210, 212, 214, 215, 216, 217, 218, 219, 221, 223, 225, 227, 228, 229, 230, 231, 232, 234, 236, 240, 242, 244, 246, 249, 250, 251, 253, 254, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 281, 282, 286, 290, 292, 298, 299, 300, 302, 303, 304, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335], "xarrai": [7, 15, 17, 19, 86, 123, 144, 145, 188, 203, 204, 215, 228, 264, 265, 266, 267, 268, 269, 270, 271, 290, 313], "dataarrai": [7, 86, 144, 145, 188, 203, 204, 215, 216, 217, 218, 228, 229, 230, 231, 265, 266, 267, 268, 269], "sea": [7, 139, 216, 218, 229, 231, 266, 267, 268, 269, 272, 307, 309, 312, 313, 314, 322, 331, 332, 340, 343], "surfac": [7, 139, 216, 218, 229, 231, 266, 267, 268, 269, 272, 274, 285, 309, 313, 314, 322, 325, 331, 332, 335], "height": [7, 139, 216, 218, 229, 231, 266, 267, 268, 269, 272, 313, 314, 322, 331, 332], "mask": [7, 264, 267, 270, 271, 290, 313, 314, 322], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 26, 68, 70, 71, 75, 80, 87, 102, 121, 123, 139, 141, 142, 143, 144, 145, 149, 152, 154, 160, 163, 164, 165, 168, 171, 174, 176, 179, 184, 187, 188, 189, 194, 199, 202, 203, 204, 205, 214, 215, 216, 217, 218, 219, 221, 223, 225, 227, 228, 229, 230, 231, 232, 234, 236, 240, 246, 249, 250, 251, 253, 256, 290, 292, 313], "densiti": [7, 13, 139, 313], "seawat": 7, "displac": 7, "land": [7, 139, 272, 292, 312, 313, 314, 322], "landicedraft": 7, "equal": [7, 285, 290, 293, 335], "entri": [7, 54, 87, 90, 115], "line": [7, 10, 36, 38, 93, 94, 104, 136, 290, 291, 293, 294, 312, 337], "type": [7, 14, 17, 18, 19, 26, 99, 106, 131, 136, 139, 142, 194, 210, 239, 241, 276, 277, 278, 283, 284, 286, 290, 292, 293, 294, 306, 310, 311, 313, 314, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 342], "side": 7, "colon": 7, "doubl": [7, 14, 139, 290, 291, 313], "back": [7, 313, 316, 337], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 93, 94, 290], "next": [7, 136, 275, 313, 322, 337], "indent": [7, 290], "obviou": [7, 14, 313], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 63, 64, 66, 68, 75, 81, 85, 87, 96, 97, 98, 101, 102, 105, 107, 111, 115, 116, 120, 121, 122, 123, 126, 130, 139, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 155, 156, 160, 165, 166, 188, 190, 203, 204, 215, 220, 228, 229, 233, 240, 250, 290, 292, 302, 313, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 340], "els": [7, 8, 136, 290, 292, 313], "further": [7, 286, 292, 320, 336, 341], "rais": [7, 9, 18, 38, 41, 59, 61, 139, 290, 293, 313, 329], "list_cas": 8, "list_machin": [8, 293], "list_suit": 8, "anywher": [8, 12, 136, 294], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 89, 108, 109, 112, 116, 125, 126, 130, 131, 149, 152, 216, 229, 287, 292, 293, 313], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 60, 88, 89, 125, 139, 274, 290, 292, 313], "properti": [8, 246, 274, 290, 319, 326, 327, 328, 333, 334], "setup_suit": 8, "write": [8, 12, 13, 16, 19, 108, 125, 263, 290, 292, 294, 309, 313], "proven": [8, 10, 57, 312, 314], "save": [8, 19, 59, 83, 136, 275, 276, 277, 278, 279, 283, 284, 286, 290, 292, 313, 319, 324, 325], "target": [8, 11, 17, 18, 25, 40, 61, 63, 87, 97, 136, 139, 155, 275, 281, 282, 290, 292, 313, 326, 327, 328, 333, 334], "minimum": [8, 63, 123, 139, 143, 155, 250, 275, 281, 282, 290, 313, 314, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 341], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 86, 87, 131, 136, 139, 159, 246, 275, 276, 277, 278, 279, 281, 282, 283, 284, 290, 313, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 341], "maximum": [8, 18, 121, 123, 194, 250, 313, 314, 322], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 93, 94, 97, 139, 155, 165, 240, 290, 292, 313], "cpus_per_task": [8, 14, 38, 42, 45, 93, 94, 290], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 313, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 93, 94, 97, 139, 155, 165, 240, 290, 313], "min_cpus_per_task": [8, 14, 38, 45, 93, 94, 290], "fewest": 8, "least": [8, 13, 287, 294, 325, 329], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 136, 139, 155, 165, 240, 290, 312, 313, 314, 326, 327, 328, 329, 331, 332, 333, 334], "run_task": [8, 290, 292], "run_single_step": 8, "oper": [8, 47, 136, 170, 178, 290, 292, 342], "log": [8, 10, 19, 38, 49, 94, 121, 122, 123, 290, 292, 294, 312, 337], "figur": [8, 19, 281, 282, 285, 286, 288, 290, 314, 326, 328, 333, 334], "cpu": [8, 136, 290, 313, 337], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 67, 68, 72, 75, 76, 77, 81, 82, 97, 103, 125, 139, 140, 141, 143, 144, 149, 151, 152, 155, 158, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 184, 187, 188, 189, 191, 192, 195, 197, 198, 199, 202, 203, 205, 206, 208, 210, 211, 212, 214, 215, 216, 219, 221, 223, 225, 226, 227, 228, 229, 232, 234, 236, 239, 240, 241, 242, 244, 246, 249, 251, 253, 254, 256, 258, 260, 276, 277, 278, 279, 281, 282, 283, 284, 287, 290, 292, 293, 297, 299, 300, 302, 303, 304, 313, 326, 327, 328, 329, 333, 334, 336, 341], "retriev": [8, 310], "store": [8, 51, 136, 139, 281, 282, 290, 313, 326, 328, 333, 334, 337], "case_output": [8, 12], "individu": [8, 9, 19, 287, 292, 293, 313, 319, 320, 325, 337, 343], "overal": 8, "whole": [8, 49, 161, 286, 292, 293, 313, 337], "window": 8, "update_cach": 8, "_cached_fil": [8, 290], "origin": [8, 55, 294, 313, 337], "enabl": [8, 19, 285, 290, 310, 314, 320, 331, 332], "consum": [8, 290, 292, 313, 342], "faster": [8, 294], "parser": [9, 46, 53, 57, 174, 184, 199, 246], "mpas_tool": [9, 12, 13, 80, 275, 281, 282, 285, 290, 292, 313], "mpasconfigpars": [9, 290, 292], "polarisconfigpars": [9, 21, 38, 46, 49, 53, 59, 62, 63, 92, 95, 96, 112, 122, 139, 174, 184, 199, 216, 229, 246, 262, 264, 265, 266, 270, 271, 313], "certain": [9, 18, 57, 136, 290, 294, 314, 336, 341], "filepath": [9, 46, 53, 57, 139], "overridden": [9, 31, 58, 139, 158, 313], "algorithm": [9, 14, 139, 240, 275, 281, 282, 290, 313], "featur": [9, 14, 293, 294, 311, 313, 314, 325, 335], "accommod": [9, 25, 35, 38, 45, 93, 94, 155], "add_from_packag": [9, 139, 290, 292, 293, 313], "content": [9, 14, 115, 116, 118, 120, 131, 139, 286, 288, 290, 293, 309, 313, 337, 340], "inertial_gravity_wav": [9, 272, 280, 282, 287, 292, 331, 342], "inertialgravitywav": [9, 281, 292], "import": [9, 11, 12, 13, 15, 17, 18, 19, 139, 286, 287, 290, 292, 293, 294, 311, 313], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 67, 68, 75, 81, 97, 125, 139, 140, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 199, 202, 205, 206, 208, 210, 212, 214, 216, 219, 221, 223, 225, 227, 229, 232, 234, 236, 239, 240, 241, 242, 244, 246, 249, 251, 253, 254, 256, 258, 260, 286, 287, 290, 292, 293, 297, 299, 300, 302, 303, 304, 311, 313], "super": [9, 14, 17, 18, 139, 287, 290, 292, 293, 313], "cfg": [9, 51, 139, 287, 292, 293, 313, 314, 326, 328, 333, 334, 337], "except": [9, 38, 41, 59, 290, 293, 313, 334], "behavior": [9, 14, 111, 139, 290, 291, 294, 313], "noth": [9, 136, 310, 326, 327, 328, 333, 334], "particular": [9, 136, 286, 294, 312, 316, 319, 337], "fine": [9, 292, 313, 335], "_get_basic_config": 9, "larg": [9, 290, 292, 313, 315, 333], "those": [9, 14, 49, 121, 136, 139, 275, 292, 293, 294, 312, 313, 326, 327, 328, 329, 333, 334, 336, 341, 342], "configpars": [9, 93, 94], "getinteg": 9, "getfloat": [9, 12, 14, 17, 139, 290, 313], "getboolean": [9, 290, 313], "implement": [9, 287, 290, 293, 325, 326, 327, 328, 329, 331, 332, 333, 334], "getlist": [9, 292, 313], "comma": [9, 326, 327, 328, 333, 334], "integ": [9, 13], "boolean": [9, 123, 267], "etc": [9, 14, 117, 120, 287, 290, 325], "getexpress": 9, "tupl": 9, "rang": [9, 123, 313], "numpi": [9, 13, 15, 69, 76, 77, 83, 87, 122, 139, 161, 262, 263, 290, 313], "linspac": [9, 19, 276, 277, 278, 283, 284, 326, 327, 328, 333, 334], "arang": 9, "arrai": [9, 15, 69, 76, 77, 83, 122, 139, 262, 263, 265, 266, 267, 268, 313], "sens": [9, 312, 313], "set_shared_config": [9, 292], "intuit": 9, "resolution_to_subdir": [9, 287], "rpe": [9, 182, 287, 293, 313, 337], "resdir": [9, 287], "config_filenam": [9, 38, 49, 290, 292], "indir": [9, 25, 38, 49, 97, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 240, 242, 244, 287, 290, 300, 302, 304], "add_task": [9, 286, 287], "most": [9, 12, 44, 136, 272, 286, 287, 290, 293, 294, 306, 313, 314, 319, 320, 322, 323, 338, 343], "construct": [9, 14, 140, 262, 264, 265, 266, 270, 271, 274, 285, 287, 292, 297, 313, 325, 329], "bring": [9, 139, 313], "add_step": [9, 292, 313], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 165, 176, 275, 290, 313], "baroclinic_channel_rp": 9, "viscos": [9, 14, 165, 174, 176, 275, 290, 293, 313, 325], "dtype": [9, 292, 313], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 94, 155, 165, 240, 290, 292, 313], "add_yaml_fil": [9, 14, 25, 139, 290, 292, 313], "One": [9, 13, 313, 337, 342], "advantag": [9, 14, 136, 292, 293, 313, 319], "track": [9, 25, 290, 292, 294], "associ": [9, 13, 14, 15, 19, 139, 264, 270, 271, 275, 276, 278, 283, 284, 290, 292, 294, 311], "while": [10, 17, 19, 274, 275, 290, 310, 313], "meant": [10, 293, 314], "simplifi": 10, "verifi": [10, 291, 314], "io": [10, 290, 292, 293, 312, 313, 314, 323, 338], "lot": [11, 139, 290, 293, 313], "o": [11, 12, 116, 118, 131, 136, 293, 294, 313, 314, 337], "handl": [11, 12, 294, 313, 319, 329], "lower": [11, 292, 313, 325], "directli": [11, 13, 14, 17, 38, 139, 288, 290, 293, 311, 312, 313, 316], "readm": [11, 292], "importlib": 11, "resourc": [11, 14, 35, 42, 45, 60, 92, 93, 94, 150, 153, 156, 166, 190, 220, 233, 240, 275, 281, 282, 290, 292, 313], "global_ocean": [11, 14, 290, 292, 293, 294, 314, 337], "files_for_e3sm": [11, 290, 292, 314], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 61, 62, 63, 64, 68, 75, 81, 85, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 160, 161, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 187, 188, 189, 192, 195, 197, 202, 203, 204, 205, 206, 208, 210, 214, 215, 219, 221, 223, 227, 228, 232, 234, 236, 240, 242, 244, 249, 250, 251, 253, 254, 256, 258, 260, 263, 290, 292, 300, 302, 304, 313], "did": [11, 311, 313], "add_input_fil": [11, 17, 18, 39, 290, 292, 313], "collect": [11, 100, 140, 287, 289, 297, 311, 313], "whenev": [11, 290, 313], "flexibl": [11, 139, 290, 292, 294, 313], "No": [11, 312, 331, 332], "step_dir": 11, "database_root": [11, 136, 290, 314, 315, 316, 317, 318, 319, 320, 337], "download_path": 11, "join": [11, 313], "bathymetry_databas": [11, 290, 314], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 267, 286, 290, 313, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 343], "url": [11, 40, 59, 290, 310, 314], "web": [11, 290, 314], "anl": [11, 290, 314], "gov": [11, 290, 310, 314, 316, 320], "mpas_standalonedata": [11, 136, 314, 319], "dest_path": [11, 59], "remot": [11, 40, 294, 312], "bathymetri": [11, 290, 314], "strategi": 12, "stderr": [12, 38, 49, 290, 292], "loggingcontext": 12, "check_cal": [12, 290], "won": [12, 293, 313, 314], "logger": [12, 18, 38, 49, 67, 94, 121, 290, 292, 313], "full": [12, 38, 93, 111, 265, 266, 275, 290, 292, 294, 309, 312, 313, 319, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337], "although": [12, 139], "captur": 12, "explicit": [12, 293], "go": [12, 46, 53, 242, 244, 286, 290, 292, 293, 294, 313, 320], "subprocess": [12, 38, 93, 94, 110, 290, 293, 310], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 139, 146, 163, 171, 179, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 293, 294, 299, 309, 313, 326, 328, 331, 332, 333, 334, 337, 340], "otherwis": [12, 136, 290, 292, 313, 315, 316, 317, 318, 319, 320, 325], "intent": 12, "desir": [12, 13, 14, 18, 19, 121, 139, 290, 291, 292, 313, 314, 337], "trick": [12, 290], "direct": [12, 13, 14, 80, 216, 229, 275, 281, 282, 313, 320, 325, 331, 332], "snippet": [12, 313], "dome": [12, 67, 286, 290, 292, 337, 343], "setup_mesh": [12, 290], "setupmesh": [12, 290, 292], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 290], "landice_grid": [12, 290, 313], "l": [12, 121, 139, 313, 320], "quasiuniformsphericalmeshstep": [13, 139, 292], "icosahedralmeshstep": [13, 139, 292], "jigsaw": [13, 68, 72, 74, 75, 77, 79, 81, 184, 199, 246, 251, 256, 290], "complex": [13, 76, 292, 293, 313], "build_cell_width_lat_lon": [13, 75], "opt": [13, 81], "make_jigsaw_mesh": [13, 75], "icosahedr": [13, 68, 70, 154, 184, 199, 246, 251, 256, 276, 277, 278, 279, 283, 284, 292, 326, 327, 328, 329, 333, 334], "significantli": [13, 322, 329], "smooth": 13, "cell": [13, 14, 15, 19, 68, 69, 70, 71, 75, 76, 77, 80, 83, 86, 99, 106, 139, 150, 153, 155, 156, 166, 190, 208, 210, 216, 218, 220, 229, 231, 233, 264, 265, 266, 267, 270, 271, 275, 281, 282, 286, 307, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 340], "quasi": [13, 75, 276, 277, 278, 279, 283, 284, 292, 314, 326, 327, 328, 329, 333, 334, 336, 341], "hand": [13, 102, 293], "restrict": [13, 313, 336], "subdivis": [13, 68, 69, 70, 71, 72], "icosahedron": [13, 69, 70, 71, 72], "tabl": [13, 294, 319, 337], "approxim": [13, 68, 70, 71, 75, 139, 150, 153, 156, 166, 190, 220, 233, 275, 281, 282, 294, 313], "width": [13, 68, 69, 70, 75, 76, 77, 83, 313, 325], "km": [13, 14, 68, 69, 70, 71, 75, 76, 77, 80, 83, 139, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 189, 205, 219, 221, 225, 232, 234, 253, 275, 276, 277, 278, 279, 281, 282, 283, 284, 290, 313, 314, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 341, 343], "5": [13, 14, 70, 136, 139, 174, 275, 276, 277, 278, 279, 283, 284, 290, 291, 293, 310, 313, 314, 325, 326, 327, 328, 329, 333, 334, 336, 337, 341], "240": [13, 70, 139, 276, 277, 278, 279, 283, 284, 314, 326, 327, 328, 333, 334], "6": [13, 70, 290, 313, 323, 325, 326, 333, 335, 337, 338], "120": [13, 70, 139, 291, 326, 327, 328, 329, 333, 334], "7": [13, 70, 136, 313, 320, 326, 327, 334, 337], "60": [13, 70, 139, 276, 277, 278, 279, 283, 284, 322, 326, 327, 328, 333, 334], "8": [13, 70, 136, 275, 294, 313, 314, 325, 327, 331, 332, 334, 337], "30": [13, 14, 70, 139, 286, 313, 320, 325, 335, 336, 341], "9": [13, 19, 70, 136, 276, 277, 278, 283, 284, 313, 326, 327, 328, 333, 334, 337], "15": [13, 14, 70, 275, 313, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 341], "11": [13, 70, 136, 313, 337], "3": [13, 70, 136, 139, 275, 290, 291, 294, 310, 313, 314, 319, 320, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337], "13": [13, 70, 313, 325], "94": [13, 70, 329], "spherical_mesh": [13, 76], "cell_width": [13, 68, 69, 70, 71, 75, 76, 77, 83], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 83, 122, 123, 139, 141, 146, 176, 182, 195, 208, 244, 258, 275, 276, 277, 278, 279, 283, 284, 304, 326, 327, 328, 329, 331, 332, 333, 334, 340, 343], "plot_cell_width": 13, "cell_width_filenam": [13, 83], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 195, 208, 258, 276, 277, 278, 279, 283, 284, 314, 327], "lon": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 195, 208, 258, 276, 277, 278, 279, 283, 284, 314, 327], "sphere": [13, 248, 249, 251, 253, 256, 276, 277, 278, 279, 283, 284, 326, 327, 328, 333, 334], "vtk_lat_lon": 13, "far": [13, 136, 264, 270, 271, 293, 313], "But": [13, 136, 286, 290, 293, 294, 313, 314, 319], "hexagon": [13, 80, 313, 331, 332], "planar_hex": [13, 80, 275, 281, 282, 285, 290, 313], "make_planar_hex_mesh": [13, 80, 275, 281, 282, 285, 290, 313], "x": [13, 19, 69, 76, 77, 80, 83, 101, 107, 123, 161, 216, 229, 290, 313, 325, 331, 332, 335], "y": [13, 14, 19, 80, 101, 107, 123, 216, 229, 275, 281, 282, 290, 313, 320, 325, 331, 332], "nx": [13, 80, 286, 290, 313, 335], "ny": [13, 80, 286, 290, 313, 335], "dc": [13, 286, 290, 313], "distanc": [13, 80, 194, 313, 325], "adjac": [13, 322], "center": [13, 19, 80, 194, 216, 229, 286, 313, 322, 325], "admittedli": 13, "oddli": 13, "period": [13, 274, 275, 276, 278, 281, 282, 283, 284, 290, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334], "nonperiodic_x": [13, 290, 313], "nonperiodic_i": [13, 290, 313], "consider": [13, 264, 270, 271, 274, 307], "compute_planar_hex_nx_ni": [13, 290, 313], "lx": [13, 80, 290, 313, 325, 331, 332, 335], "ly": [13, 80, 290, 313, 325, 335], "explan": 13, "subtleti": 13, "account": [13, 80, 294, 313, 315, 316, 318, 319, 320, 337], "behav": 13, "stagger": [13, 80], "physic": [13, 80, 303, 309, 313], "np": [13, 15, 19, 194, 276, 277, 278, 283, 284, 290, 313, 326, 327, 328, 333, 334], "sqrt": [13, 15, 331], "domain": [13, 25, 32, 80, 123, 139, 155, 161, 274, 286, 307, 313, 325, 327, 329, 331, 332, 335, 336, 341, 343], "extra": [13, 294], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 290, 313], "max": [13, 139, 290, 313, 325, 327], "int": [13, 14, 25, 26, 35, 38, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 87, 93, 94, 97, 123, 141, 142, 144, 145, 146, 150, 153, 155, 156, 165, 166, 188, 190, 203, 204, 215, 220, 228, 233, 240, 290, 313, 335], "ds_mesh": [13, 15, 19, 86, 123, 290, 313], "creation": [13, 290, 314], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 93, 94, 155, 286, 290, 293, 313], "distant": 13, "descend": [14, 17, 139, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 290, 292, 293, 313], "modelstep": [14, 139, 290, 292, 313], "update_pio": [14, 25, 155], "make_graph": [14, 25, 155], "At": [14, 38, 49, 288, 289, 292, 313, 329], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 94, 155, 165, 240, 287, 290, 291, 311, 313, 314, 316, 320, 337, 342], "prefix": [14, 40, 136, 139, 144, 145, 188, 203, 204, 215, 228, 292, 294, 314], "end": [14, 149, 152, 290, 292, 293, 294, 309, 311, 313, 316, 325, 326, 327, 331, 332, 335, 340], "yml": 14, "reason": [14, 17, 44, 136, 290, 293, 313, 342], "add_namelist_fil": [14, 25, 139, 290, 292], "add_model_config_opt": [14, 25, 139, 290, 292, 313], "add_streams_fil": [14, 25, 139, 290, 292], "themselv": [14, 293, 312], "question": [14, 290, 314], "never": [14, 136, 311], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 139, 313], "config_run_dur": [14, 139, 292, 313], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 163, 311, 313], "config_block_decomp_file_prefix": [14, 313], "time_integr": [14, 139, 313, 326, 327, 328, 329, 333, 334], "config_time_integr": [14, 139], "rk4": [14, 139, 293, 326, 327, 328, 329, 333, 334], "filename_templ": [14, 139, 313], "restart": [14, 18, 49, 139, 276, 277, 278, 279, 281, 282, 283, 284, 285, 287, 291, 293, 299, 300, 309, 311, 313, 337, 342], "output_interv": [14, 139, 313, 326, 327, 328, 329, 333, 334], "0030_00": 14, "clobber_mod": [14, 139, 313], "truncat": [14, 139, 313], "reference_tim": [14, 139], "0001": [14, 139, 313], "01_00": [14, 139, 307, 313], "tracer": [14, 19, 184, 194, 241, 242, 244, 246, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 313, 323, 327, 328, 330, 331, 332, 333, 334, 335], "xtime": [14, 15, 87, 139, 313], "normalveloc": [14, 18, 19, 139, 181, 230, 274, 275, 281, 282, 285, 290, 313, 335], "layerthick": [14, 18, 139, 181, 264, 268, 269, 270, 271, 275, 281, 282, 285, 290, 313], "refzmid": [14, 264, 270, 271, 290, 313], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 313], "clariti": [14, 290], "global_converg": [14, 292, 313, 324], "substitut": 14, "config_write_output_on_startup": [14, 313], "0000_00": [14, 313], "config_use_mom_del2": [14, 313], "config_implicit_bottom_drag_coeff": [14, 313], "0e": [14, 332, 335], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 313], "config_cvmix_background_viscos": [14, 313], "worri": 14, "sometim": [14, 264, 270, 271, 286, 288, 290, 292, 311, 313, 342], "togeth": [14, 18, 136, 286, 311, 313, 342], "overkil": 14, "reli": [14, 290, 292, 313], "along": [14, 19, 136, 275, 290, 312, 313], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 89, 90, 92, 96, 97, 113, 115, 116, 122, 125, 126, 127, 139, 141, 149, 152, 158, 187, 202, 214, 227, 249, 251, 256, 290, 292, 313], "config_mom_del2": [14, 275, 290, 313], "precis": [14, 139, 290, 313], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 61, 64, 110, 111, 115, 120, 121, 122, 127, 151, 154, 155, 167, 173, 184, 191, 199, 240, 242, 244, 246, 251, 256, 313], "possibli": [14, 38, 49, 287, 290, 292, 294, 313], "at_setup": [14, 30, 151, 167, 173, 191, 313], "being": [14, 30, 38, 49, 110, 112, 115, 121, 136, 139, 151, 167, 173, 191, 290, 292, 293, 294, 313, 322], "dt": [14, 139, 165, 240, 290, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 341], "proport": [14, 139, 313, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 341], "dt_per_km": [14, 139, 276, 277, 278, 279, 283, 284, 313, 325, 331, 332, 336, 341], "stackoverflow": [14, 61, 313], "1384565": [14, 313], "7728169": [14, 61, 313], "config_dt": [14, 139, 313], "strftime": [14, 313], "gmtime": [14, 313], "run_time_step": [14, 165, 290, 313], "durat": [14, 139, 275, 281, 282, 285, 291, 313], "run_second": [14, 313], "btr_dt": [14, 139, 165, 240, 290, 313, 325], "btr_dt_per_km": [14, 139, 313, 325], "config_btr_dt": [14, 139, 313], "bit": [14, 136, 293, 311, 313, 325, 337], "complic": [14, 293, 294, 313], "slightli": [14, 294], "sophist": 14, "immutable_stream": [14, 313], "var_struct": [14, 306], "var": [14, 117, 306, 313], "var_arrai": [14, 306], "tag": [14, 312], "taken": [14, 25, 155, 276, 277, 278, 279, 283, 284, 290, 313, 320, 337], "past": 14, "experi": [14, 136, 293, 322], "difficult": [14, 136, 319], "synchron": [14, 312], "out_nam": 14, "equival": [14, 294, 313, 315], "template_replac": [14, 28, 29, 139], "treat": [14, 291, 293], "jinja2": [14, 28, 29, 116, 149, 152], "render": [14, 28, 29, 116], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 290, 293, 294, 314, 337], "qu240dynamicadjust": 14, "adjust": [14, 136, 139, 272, 314], "interv": [14, 15, 160, 326, 327, 328, 329, 333, 334], "spin": 14, "reus": [14, 290, 293, 294, 313, 314, 337], "qualit": 14, "forgotten": 14, "broken": [14, 290, 293], "immedi": [14, 67, 294, 313], "miss": [14, 290, 313, 314], "detect": [14, 19, 314, 315, 317, 318, 319, 329, 337], "gpmeti": [14, 314], "divid": [14, 322], "partition_graph": [14, 25, 155], "circumst": [14, 18, 38, 39, 290, 313], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 310, 313, 336, 341], "v1": [14, 322], "better": [14, 17, 136, 337], "v2": [14, 314, 322], "littl": [14, 293, 294, 312, 313], "feel": [14, 136, 290, 313], "runtime_setup": [14, 17, 35, 45, 275, 281, 282, 292], "yourself": [14, 313, 319], "culler": 14, "cull": [14, 275, 281, 282, 290, 313], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 83, 85, 86, 123, 139, 142, 143, 144, 145, 188, 195, 203, 204, 208, 215, 228, 250, 258, 264, 270, 271, 274, 275, 279, 281, 282, 285, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334], "weight": [14, 15, 17, 85, 264, 270, 271, 313, 322], "weight_field": [14, 85], "helper": [15, 286, 287], "handi": 15, "area_for_field": 15, "right": [15, 136, 139, 292, 294, 313, 314, 322, 325, 327, 337], "edg": [15, 19, 86, 99, 102, 106, 123, 208, 210, 216, 217, 229, 230, 274, 313], "dimens": [15, 86, 141, 146, 188, 203, 285, 325], "statist": [15, 314], "calcul": [15, 281, 290, 292], "xr": [15, 19, 216, 217, 218, 229, 230, 231, 290, 313], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 145, 204], "mesh_filenam": [15, 25, 85, 155, 161], "open_dataset": [15, 19, 290, 313], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 87, 139, 286], "get_output_field": [15, 139], "field_nam": [15, 123, 143, 144, 145, 188, 203, 204, 215, 228, 250], "output_filenam": [15, 139, 149, 152, 161], "ds_out": 15, "time_index": [15, 87], "isel": [15, 19], "frequent": [17, 272, 306], "observ": [17, 312], "dataset": [17, 86, 87, 123, 216, 229, 264, 270, 271, 290, 313], "region": [17, 19, 312, 314], "pyremap": [17, 103], "interpol": [17, 97, 276, 277, 278, 279, 283, 284, 314], "hood": 17, "esmf_regridweightgen": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 322], "bilinear": [17, 97, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334, 336, 341], "filenam": [17, 18, 38, 40, 41, 49, 91, 98, 99, 100, 101, 105, 106, 107, 121, 126, 128, 290, 292, 294, 313], "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 314], "destin": [17, 97, 98, 99, 100, 101, 102, 103, 261], "src_from_lon_lat": 17, "lon_var": [17, 98, 100, 105], "lat_var": [17, 98, 100, 105], "dst_from_mpa": 17, "mesh_nam": [17, 98, 99, 100, 101, 102, 105, 106, 107, 142, 144, 145, 154, 188, 195, 197, 203, 204, 208, 210, 215, 228, 258, 260, 292], "qu60": 17, "subclass": [17, 72, 75, 76, 77, 82, 139, 313], "src_": 17, "dst_": 17, "pick": [17, 108, 109], "vizmap": [17, 184, 195, 199, 208, 246, 258, 276, 277, 278, 279, 283, 284, 292], "128": [17, 291, 316, 317, 320], "cosine_bell_viz": [17, 19, 277, 327, 336, 341], "dlon": [17, 102, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334, 336, 341], "dlat": [17, 102, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334, 336, 341], "remap_method": [17, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334, 336, 341], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 102], "With": [17, 294], "approach": [17, 290, 293, 294, 310, 313, 322], "perhap": [17, 19, 41, 286, 288], "cover": [17, 307, 313], "nearli": [17, 290, 292, 311, 312, 313], "workflow": [17, 290, 294], "critic": [18, 313], "easiest": [18, 136, 294], "validate_var": [18, 38, 41, 139, 149, 152, 240, 290], "meth": 18, "add_output_fil": [18, 39, 290, 292, 313], "temperatur": [18, 181, 274, 275, 282, 285, 290, 309, 313, 325, 326, 327, 328, 329, 333, 334, 335, 336, 341], "salin": [18, 181, 274, 275, 285, 290, 313, 325, 326, 327, 328, 329, 333, 334, 335, 336, 341], "done": [18, 35, 45, 290, 292, 294, 313, 337], "compare_vari": [18, 313], "filename1": [18, 121, 313], "filename2": [18, 121, 313], "compact": [18, 313], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 121], "valueerror": [18, 293], "quiet": [18, 110, 111, 121, 127], "report": 18, "threshold": [18, 139, 283, 326, 327, 328, 329, 331, 332, 333, 334], "l1": [18, 121], "00000000000000e": 18, "l2": [18, 121, 139, 142, 143, 276, 277, 278, 279, 283, 284, 326, 327, 328, 329, 331, 332, 333, 334], "l_infin": 18, "linf": [18, 121], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 275, 325], "2thread": [18, 325], "test_20210616": 18, "further_valid": 18, "zero": [18, 265, 266, 267, 268, 269, 274, 275, 285, 313, 326, 327, 328, 333, 334, 335], "l1_norm": [18, 121], "l2_norm": [18, 121], "linf_norm": [18, 121], "nonzero": [18, 121], "solut": [18, 135, 142, 144, 145, 188, 203, 204, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 277, 279, 281, 282, 291, 310, 313, 323, 329, 330, 331], "aspect": [19, 313], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 136, 155, 272, 294, 313, 314, 325], "plot_horiz_field": [19, 290, 313], "patch": [19, 123, 313], "polygon": 19, "character": [19, 326, 328, 333, 334], "accordingli": [19, 95], "final_normalveloc": [19, 313], "t_index": [19, 123, 313], "vmin": [19, 123, 276, 277, 278, 283, 284, 313, 326, 327, 328, 329, 333, 334], "max_veloc": [19, 313], "vmax": [19, 123, 276, 277, 278, 283, 284, 313, 326, 327, 328, 329, 333, 334], "cmap": [19, 123, 290, 313], "cmo": [19, 290, 313, 326, 328, 329, 333, 334], "balanc": [19, 199, 279, 290, 313, 326, 328, 329, 333, 334], "show_patch_edg": [19, 123, 290, 313], "plot_global_field": 19, "plot_land": [19, 122], "disabl": [19, 274, 327, 343], "contin": [19, 122], "overlain": 19, "cmocean": [19, 290, 313], "noqa": [19, 67, 290, 313], "f401": [19, 290, 313], "tracer1": [19, 139, 326, 328, 333, 334], "nvertlevel": [19, 123, 141, 146, 264, 270, 271, 290, 313, 322], "out_filenam": [19, 119, 122, 263], "colormap_sect": [19, 122], "titl": [19, 122, 123, 139, 141, 146], "colormap": [19, 122, 123, 276, 277, 278, 279, 283, 284, 313, 326, 327, 328, 329, 333, 334], "cosin": [19, 139, 184, 186, 187, 189, 192, 194, 195, 197, 205, 208, 210, 254, 258, 260, 276, 277, 278, 283, 284, 292, 313, 323, 324, 326, 328, 329, 330, 333, 334, 336, 341], "bell": [19, 139, 184, 186, 187, 189, 192, 194, 195, 197, 205, 208, 210, 254, 258, 260, 276, 277, 278, 283, 284, 292, 313, 323, 324, 326, 328, 329, 330, 333, 334, 336, 341], "converg": [19, 184, 188, 199, 203, 204, 212, 213, 215, 225, 226, 228, 250, 276, 277, 278, 279, 281, 282, 283, 284, 288, 291, 312, 313, 326, 327, 328, 329, 331, 333, 334, 336, 341], "colormap_nam": [19, 122, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334], "viridi": [19, 276, 277, 278, 283, 284, 313, 326, 327, 328, 333, 334], "norm": [19, 121, 122, 139, 143, 146, 276, 277, 278, 279, 283, 284, 326, 327, 328, 329, 331, 332, 333, 334], "norm_typ": [19, 122, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334], "norm_arg": [19, 122, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334], "colorbar": [19, 122, 123, 276, 277, 278, 283, 284, 326, 327, 328, 333, 334], "tick": [19, 122, 276, 277, 278, 283, 284, 326, 327, 328, 333, 334], "mark": [19, 276, 277, 278, 283, 284, 294, 326, 327, 328, 333, 334], "colorbar_tick": [19, 122, 276, 277, 278, 283, 284, 326, 327, 328, 333, 334], "standard": [19, 293, 294, 303, 313, 316, 337], "symlog": [19, 122], "symmetr": 19, "central": [19, 327], "logarithm": [19, 123], "color": [19, 123], "normal": [19, 216, 217, 229, 230, 274, 279, 290, 291, 294, 313, 319, 329], "symlognorm": 19, "lognorm": 19, "hous": [20, 326, 327, 328, 333, 334], "kei": [20, 49, 115, 139, 141, 292], "max_memori": [25, 35, 38, 45, 155, 290], "graph_filenam": [25, 85, 149, 152, 155], "make_yaml": 25, "stride": [25, 37, 155], "partit": [25, 34, 44, 62, 85, 155, 275, 281, 282, 290, 314, 315, 316, 317, 318, 320, 337], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 97, 155, 165, 240, 290], "nor": [25, 38, 49, 97, 155, 165, 240, 290, 313], "append": [25, 38, 40, 49, 97, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 240, 290, 300, 302, 304], "ideal": [25, 35, 38, 45, 93, 94, 97, 139, 155, 165, 240, 241, 242, 244, 286, 290, 293, 312, 313, 314, 343], "fewer": [25, 35, 38, 45, 93, 94, 155, 165, 240, 290, 313, 337], "memori": [25, 35, 38, 45, 155, 290, 314], "mb": [25, 35, 38, 45, 155, 290, 314], "placehold": [25, 35, 38, 45, 155, 290, 337], "diverg": [31, 158, 278, 323, 326, 329, 330, 333], "counterpart": [31, 139, 158], "nest": [31, 125, 127, 158], "graph_fil": 32, "run_as_subprocess": [38, 290], "smallest": [38, 290, 311, 322, 343], "unit": [38, 98, 102, 105, 290, 311, 325, 343], "term": [38, 311, 313, 331, 332], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 290, 292, 337], "finish": [38, 39, 82, 290, 313], "known": [38, 39, 136, 277, 290, 313], "suffici": [38, 290], "establish": [38, 39, 290], "is_depend": [38, 290], "machine_info": [38, 290], "machineinfo": 38, "combin": [38, 40, 49, 57, 63, 96, 125, 290, 291, 292, 310, 313, 314, 337], "base_work_dir": [38, 49, 112, 290, 292], "log_filenam": [38, 49, 290, 292], "redirect": [38, 290], "extern": [38, 136, 272, 287, 290, 292, 306, 323, 338], "turn": [38, 56, 287, 290, 310, 313, 335], "access": [39, 292, 293, 294, 313, 315, 319, 320], "database_compon": [40, 290], "work_dir_target": [40, 290], "come": [40, 136, 290, 294, 313, 315, 316, 317, 318, 319, 320, 323], "_database_root": 40, "available_resourc": [42, 92], "constrain": [42, 150, 153, 156, 166, 190, 220, 233, 275, 281, 282, 290, 313], "cores_per_nod": [42, 92, 95, 136, 314, 315, 316, 317, 318, 319, 320, 337], "everi": [43, 198, 211, 275, 290, 292, 293, 309, 310, 311, 313, 325, 335], "child": [43, 139, 198, 211, 287, 290, 292, 293], "subtask": 45, "step_symlink": [49, 292], "outsid": [49, 50, 286, 288, 290, 292, 294], "stdout_logg": [49, 292], "goe": [49, 290, 292, 313], "regardless": [49, 292], "new_step_log_fil": [49, 292], "run_by_default": [50, 292], "assum": [51, 116, 126, 136, 294, 313, 320, 325], "prior": [51, 290], "step_path": 55, "variant": [55, 186, 201, 246, 248, 275, 286, 291, 293, 294, 313, 319, 322, 325, 326, 327, 328, 333, 334], "uncach": 55, "datestamp": 55, "yymmdd": [55, 314], "dry": [55, 291], "meta": 57, "empti": [57, 290, 293, 294, 311, 313], "link_nam": 61, "overwrit": 61, "55742015": 61, "fileexistserror": 61, "unless": [61, 111, 294], "isadirectoryerror": 61, "qo": [62, 315, 316, 318, 319, 320, 337], "qualiti": [62, 315, 316, 318, 319, 320, 337], "servic": [62, 315, 316, 318, 319, 320, 337], "constraint": [62, 320, 337], "wall_tim": [62, 337], "wall": [62, 337], "target_cor": 63, "min_cor": 63, "decomposition_test": [67, 286, 337], "decompositiontest": [67, 286], "e501": [67, 313], "turquois": [67, 316], "usr": [67, 136, 316, 337], "climat": [67, 315, 316, 317, 319, 337], "mhoffman": 67, "constant": [68, 75, 76, 139, 274, 284, 313, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 341], "latitud": [69, 76, 98, 100, 102, 105, 122, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334, 336, 341], "longitud": [69, 76, 77, 83, 98, 100, 102, 105, 122, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334, 336, 341], "ndarrai": [69, 76, 77, 83, 87, 122, 161, 194, 262, 263, 313], "degre": [69, 76, 77, 83, 102, 314, 325], "length": [69, 76, 77, 83], "180": [69, 76, 77, 83, 102, 139, 326, 327, 328, 333, 334], "90": [69, 76, 77, 83, 139, 290, 326, 327, 328, 333, 334], "static": [70, 71], "rule": 70, "thumb": 70, "achiev": [71, 291], "uniform": [75, 80, 149, 152, 189, 205, 253, 275, 276, 277, 278, 279, 281, 282, 283, 284, 286, 292, 313, 314, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 341], "natur": 80, "jigsawpi": [81, 290], "jigsaw_jig_t": 81, "meti": 85, "area": [86, 313], "dt_target": 87, "start_xtim": 87, "char": 87, "defaults_filenam": 88, "total": [92, 290, 291, 293, 313, 314, 316, 337], "substep": [93, 94], "command_line_arg": 93, "cpus_per_nod": 95, "map_filenam": 97, "src_grid_info": 97, "dst_grid_info": 97, "neareststod": [97, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334, 336, 341], "conserv": [97, 276, 277, 278, 283, 284, 326, 327, 328, 329, 333, 334, 336, 341], "map_": 97, "source_typ": 97, "_": [97, 136, 290, 292, 294, 313, 335], "dest_typ": 97, "1d": [98, 102, 105, 122, 139, 262, 263, 264, 265, 266, 267, 268, 270, 271], "2d": [98, 102, 105, 122, 276], "5x0": [98, 102, 105], "5degre": [98, 102, 105], "coordin": [98, 100, 101, 105, 107, 122, 123, 216, 229, 264, 270, 271, 321, 323, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 340], "mesh_typ": [99, 106, 210, 286, 290, 292], "vertex": [99, 106, 210], "x_var": [101, 107], "y_var": [101, 107], "proj_attr": [101, 107], "proj_str": [101, 107], "proj": [101, 107], "left": [102, 139, 313, 322, 325, 327], "remapp": [103, 104], "remap_fil": 103, "progress": [110, 111], "is_task": 111, "steps_to_skip": 111, "component_nam": 112, "config_filepath": 112, "unpickl": [113, 290], "cached_step": 114, "identifi": [114, 136, 287, 306, 343], "task_list": 115, "_all": 115, "streams_filenam": 116, "lxml": [116, 118, 131], "etre": [116, 118, 131], "new_child": 117, "children": 117, "sub": [117, 313], "new_tre": 118, "infin": [121, 326, 328, 333, 334], "toler": 121, "data_arrai": 122, "colorbar_label": 122, "subtitl": 122, "out_file_nam": 123, "ax": 123, "z_index": 123, "cmap_set_und": 123, "cmap_scal": 123, "cmap_titl": 123, "horizont": [123, 139, 161, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 325, 326, 328, 331, 332, 333, 334, 335], "depth": [123, 139, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 313, 314, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336], "slice": [123, 142], "fieldnam": 123, "visibl": 123, "bar": 123, "matplotlib": [124, 313], "style": [124, 139, 312, 313], "classmethod": 126, "jinja": [126, 139, 276, 277, 278, 283, 284], "namelist_templ": 130, "polarisyaml": [130, 131], "processed_registry_filenam": 131, "registri": [131, 274, 306], "steam": 131, "1_anvil_intel_impi": [132, 136], "mvapich": [132, 136, 315], "ve": [132, 133, 134, 135, 137, 294, 313], "1_anvil_gnu_openmpi": 132, "1_chicoma": 133, "cpu_gnu_mpich": [133, 137], "crai": [133, 136, 137, 316, 320], "1_chrysalis_intel_openmpi": 134, "1_chrysalis_gnu_openmpi": 134, "soon": [135, 136, 313, 337], "1_compy_intel_impi": 135, "1_compy_gnu_openmpi": 135, "load_polaris_env": [136, 294, 313, 337], "therefor": [136, 290, 311, 313], "chicoma": [136, 319, 337], "mpich": [136, 294, 312, 316, 320, 337], "compi": [136, 318, 337], "pm": [136, 320, 337], "compymcnodefac": [136, 319], "perlmutt": [136, 316, 319, 337], "pretti": [136, 290, 293, 313, 314], "conda_path": [136, 294], "osx": [136, 319], "clang": [136, 294], "1_": 136, "morpheu": 136, "cobalt": [136, 315, 316, 317, 318, 319, 320], "single_nod": [136, 314, 315, 316, 317, 318, 319, 320, 337], "mpirun": [136, 310, 314, 315, 316, 317, 318, 319, 320, 337], "srun": [136, 290, 310, 313, 314, 315, 316, 317, 318, 319, 320, 337], "parallel_execut": [136, 310, 314, 315, 316, 317, 318, 319, 320, 337], "modules_befor": [136, 316, 320], "modules_aft": [136, 316, 320], "polaris_env": [136, 315, 316, 317, 318, 319, 320], "deploi": [136, 294, 312, 315, 316, 317, 318, 319, 320], "mpi_gnu": [136, 315, 316, 317, 318, 319, 320], "hdf5": [136, 315, 316, 317, 318, 319, 320], "use_e3sm_hdf5_netcdf": [136, 315, 316, 317, 318, 319, 320], "discoveri": 136, "hostnam": 136, "hostname_contain": 136, "queu": 136, "laptop": [136, 294, 313, 314], "workstat": [136, 294], "high": [136, 290, 317, 319], "hpc": [136, 294, 316, 319], "safest": [136, 294], "mpi_": 136, "simpl": [136, 139, 293, 306, 313, 337], "compiler_gnu": 136, "compiler_intel": 136, "hopefulli": [136, 314], "parlanc": 136, "concret": 136, "ubuntu": 136, "spec": [136, 310, 320], "gcc": 136, "curl": 136, "81": 136, "buildabl": 136, "install_missing_compil": 136, "cc": 136, "bin": [136, 294, 320, 337], "cxx": 136, "f77": 136, "fc": 136, "operating_system": 136, "ubuntu22": 136, "04": 136, "extra_rpath": 136, "luck": 136, "catch": [136, 291], "22": 136, "guess": [136, 313], "correct": [136, 294], "potenti": [136, 161, 174, 290, 313, 325], "purg": 136, "perl": 136, "32": [136, 291, 337], "bsnc6lt": 136, "ugetvbp": 136, "sxfyy4k": 136, "2020": 136, "304": 136, "n3b5fye": 136, "j3zxncu": 136, "7ohuiwq": 136, "k2zu3y5": 136, "mirrcz7": 136, "variou": [136, 238, 290, 294, 298], "ask": 136, "gb": 136, "minut": [136, 275, 291, 325, 342], "hour": [136, 139, 281, 282, 291, 309, 316, 320, 327, 329, 331, 332, 337, 340], "zlib": 136, "incompat": 136, "ubuntu20": 136, "readlin": 136, "pkgconf": 136, "spackdir": 136, "env": [136, 320], "arch": 136, "repositori": [136, 288, 312, 313, 337], "x86_64_v4": 136, "free": [136, 274, 313, 314], "touch": [136, 294], "everyth": 136, "1_pm": 137, "ever": [139, 293], "expand": [139, 322], "oceanmodelstep": [139, 290, 313], "decid": [139, 313], "veri": [139, 287, 290, 293, 294, 306, 313, 329, 335], "earli": [139, 323, 337], "stage": [139, 274, 290, 292, 294, 302, 309, 323, 337], "map_yaml_to_namelist": 139, "heurist": 139, "200": [139, 281, 282, 313, 325, 331, 332, 335], "round": [139, 326, 327, 328, 333, 334], "cell_count": [139, 150, 153, 156, 166, 190, 220, 233, 313], "goal_cells_per_cor": [139, 313, 326, 327, 328, 331, 332, 333, 334, 336, 341], "pinch": 139, "2000": [139, 286, 307, 309, 313, 340], "max_cells_per_cor": [139, 313, 326, 327, 328, 331, 332, 333, 334, 336, 341], "seciton": 139, "control": [139, 276, 277, 278, 279, 283, 284, 290, 314, 325, 326, 327, 328, 333, 334, 335, 337], "scale": [139, 325, 333, 337], "tri": [139, 293], "apport": 139, "dai": [139, 160, 174, 275, 276, 277, 278, 279, 283, 284, 285, 309, 313, 325, 326, 327, 328, 329, 333, 334, 335, 340], "form": [139, 343], "dddd_hh": [139, 160], "ss": [139, 160], "get_time_interval_str": 139, "run_dur": [139, 326, 327, 328, 329, 333, 334], "fill": 139, "dt_str": 139, "run_duration_str": 139, "output_interval_str": 139, "yaml_filenam": [139, 149, 152], "caviti": [139, 293, 313, 314, 322], "frazil": 139, "flux": [139, 274, 335], "fix": [139, 313], "add_spherical_base_mesh_step": [139, 292], "spherical_converg": [139, 279, 292, 326, 327, 328, 333, 334], "icos_resolut": [139, 326, 327, 328, 333, 334], "480": [139, 326, 327, 328, 333, 334], "qu_resolut": [139, 326, 327, 328, 333, 334], "150": [139, 326, 327, 328, 333, 334], "210": [139, 322, 326, 327, 328, 333, 334], "evalu": [139, 142, 143, 144, 145, 188, 203, 204, 215, 217, 218, 228, 230, 231, 250, 276, 278, 283, 284, 326, 327, 328, 329, 333, 334], "convergence_eval_tim": [139, 326, 327, 328, 329, 333, 334], "24": [139, 277, 327, 340], "convergence_thresh": [139, 327], "error_typ": [139, 142, 143, 326, 327, 328, 329, 333, 334], "convergence_forward": [139, 276, 277, 278, 283, 284, 327, 329], "split_explicit": [139, 326, 327, 328, 329, 333, 334], "rk4_dt_per_km": [139, 326, 327, 328, 329, 333, 334], "split": [139, 293], "split_dt_per_km": 139, "barotrop": [139, 165, 240, 290, 313, 325, 335], "simul": [139, 281, 282, 290, 311, 313, 324, 325, 326, 329, 331, 332, 336, 337, 341], "numer": [139, 276, 278, 283, 284, 326, 328, 331, 332, 333, 334], "infti": [139, 322], "inf": [139, 142, 143, 329], "infrastructur": [139, 293, 313], "add_cosine_bell_task": [139, 287], "sphericalconvergenceforward": [139, 276, 277, 278, 279, 283, 284], "invok": 139, "analyz": [139, 141, 187, 202, 249, 251, 256, 313, 326, 327, 328, 333, 334], "split_explicit_t": [139, 313], "convergenceforward": [139, 281, 282], "convergenceanalysi": [139, 276, 277, 278, 279, 281, 282, 283, 284], "convergence_var": [139, 141], "zidx": [139, 141, 142, 144, 145, 146, 188, 203, 204, 215, 228], "exact_solut": 139, "state": [139, 144, 161, 163, 164, 171, 174, 179, 188, 203, 215, 228, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 291, 313, 327, 329], "put": [139, 294, 313], "grid_1d": 139, "generate_1d_grid": 139, "vertical_grid": [139, 262, 264, 270, 271, 286, 290, 313, 314, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "z": [139, 141, 142, 144, 145, 146, 188, 203, 204, 215, 228, 265, 266, 267, 268, 269, 270, 271, 313, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "star": [139, 269, 271, 313, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "init_vertical_coord": [139, 290, 313], "minlevelcel": [139, 264, 266, 267, 268, 269, 270, 271, 313], "maxlevelcel": [139, 264, 265, 266, 267, 268, 269, 270, 271, 313], "cellmask": [139, 264, 267, 270, 271, 313], "zmid": [139, 264, 270, 271, 313], "restingthick": [139, 264, 269, 270, 271, 313], "bottomdepth": [139, 264, 265, 267, 268, 269, 270, 271, 290, 313, 329], "entir": [139, 313, 325, 342], "petersen": [139, 294, 313, 325], "et": [139, 313, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334], "al": [139, 313, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334], "2015": [139, 313, 325], "int_": 139, "rho": 139, "dv": 139, "sort": [139, 287, 288, 293, 294], "increas": [139, 293], "compute_rp": [139, 313], "csv": [139, 276, 277, 278, 279, 283, 284, 313], "dependencies_dict": 141, "rate": [141, 143, 144, 188, 203, 215, 228, 250, 276, 277, 278, 279, 281, 282, 283, 284, 313, 326, 327, 328, 329, 331, 332, 333, 334, 335], "variable_nam": [142, 146], "exact": [142, 144, 145, 188, 203, 204, 215, 216, 217, 218, 228, 229, 230, 231, 277, 279, 281, 282, 293, 331, 332], "conv_thresh": [143, 250, 331, 332], "deriv": [144, 215, 228], "subdivid": [154, 292], "dynamic_ntask": 155, "dynam": [155, 272, 285, 314, 325, 326, 327, 328, 329, 333, 334, 335, 336], "available_cor": 157, "estim": [157, 159, 313], "time_str": 160, "initial_state_filenam": 161, "energi": [161, 174, 312, 313, 325], "len": [161, 313], "output_fil": [161, 290, 313], "shorter": [171, 291, 299], "step_subdir": [180, 300], "processor": [180, 290, 300, 325], "include_viz": [184, 199, 246, 292], "advect": [184, 246, 276, 277, 278, 279, 283, 284, 326, 327, 328, 331, 332, 333, 334, 335], "less": [184, 199, 246, 251, 256, 290, 322], "ncell": [188, 203, 290, 313], "max_valu": 194, "ri": 194, "accord": [194, 329, 331, 332, 337], "meter": [194, 262, 263, 326, 328, 333], "radiu": [194, 326, 327, 328, 333], "viz_map": [195, 258, 292], "testcas": [207, 313, 314, 325, 335, 337], "viz_map_cel": 208, "viz_map_edg": 208, "inerti": [212, 213, 214, 216, 219, 221, 223, 281, 292, 323, 330], "graviti": [212, 213, 214, 216, 219, 221, 223, 281, 292, 323, 330], "wave": [212, 213, 214, 216, 219, 221, 223, 229, 281, 290, 292, 313, 323, 325, 330, 332], "analys": [214, 227], "angleedg": [216, 229], "angl": [216, 229, 329], "posit": [216, 229, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 313, 322, 335], "xcell": [216, 229, 290, 313], "ycell": [216, 229, 290, 313], "xedg": [216, 229, 290, 313], "yedg": [216, 229], "f0": 216, "corioli": [216, 281, 282, 313, 325, 326, 327, 328, 329, 332, 333, 334, 335], "eta0": [216, 229], "amplitid": [216, 229], "kx": [216, 229], "ky": [216, 229], "angular": [216, 229], "frequenc": [216, 229, 275], "veloc": [217, 230, 274, 275, 279, 281, 282, 292, 294, 313, 326, 327, 328, 329, 333, 334, 335, 337], "norm_vel": [217, 329], "eta": [218, 231, 331, 332], "taskdir": [221, 223, 234, 236], "manufactur": [225, 226, 227, 229, 232, 234, 236, 282, 323, 330], "column": [238, 239, 241, 242, 244, 279, 285, 294, 298, 299, 300, 302, 303, 304, 306, 307, 309, 323, 329, 330, 337, 338, 339], "mix": [239, 286, 287, 326, 331, 332, 335], "param": [239, 241], "resources_fix": 240, "ag": [241, 242, 244], "evolv": [241, 312, 322, 326, 327, 328, 333, 334, 335], "ideal_ag": [242, 244], "case_nam": [246, 249, 251, 253, 254, 256], "transport": [248, 249, 251, 253, 256, 276, 278, 283, 284, 326, 327, 328, 333, 334], "nondivergent_2d": [248, 272, 280, 333], "divergent_2d": [248, 272, 280, 328], "correlated_tracers_2d": [248, 272, 280, 326], "rotation_2d": [248, 272, 280, 334], "layer": [262, 263, 264, 268, 269, 270, 271, 274, 275, 276, 278, 281, 282, 283, 284, 285, 313, 314, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "bottom": [264, 265, 266, 267, 268, 269, 270, 271, 274, 313, 314, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336], "thick": [264, 268, 269, 270, 271, 275, 276, 278, 279, 283, 284, 285, 307, 313, 314, 322, 325, 326, 328, 329, 331, 333, 334, 340], "stretch": [264, 270, 271, 313, 322], "elev": [264, 270, 271, 313, 322], "midpoint": [264, 270, 271, 313], "reftopdepth": [264, 267, 268, 270, 271, 313], "down": [264, 265, 266, 267, 268, 269, 270, 271, 313, 322, 327], "ref": [264, 270, 271, 313], "middl": [264, 270, 271, 313], "refbottomdepth": [264, 265, 266, 267, 268, 270, 271, 290, 313], "refinterfac": [264, 270, 271, 313], "element": [264, 270, 271, 313], "vertcoordmovementweight": [264, 270, 271, 313], "movement": [264, 270, 271, 313], "alter": [265, 266, 290, 292, 312, 313, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336], "partial": [265, 266, 313, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "seafloor": [265, 267, 268, 269, 322], "unstretch": 269, "shelv": [272, 314, 322], "ssh_adjust": [272, 290, 314], "compass_branch": 272, "example_compact": [272, 287, 306, 314], "default_input": [272, 287, 306, 313, 314], "ocean_model": [272, 294, 314], "latest": [272, 294, 306, 312, 323, 337], "compat": [272, 294, 306, 310, 312], "verison": 272, "geostroph": [272, 280, 323, 330], "manufactured_solut": [272, 280, 287, 332], "single_column": [272, 280, 287, 306, 308, 335], "minim": 274, "fcell": [274, 290, 313, 326, 327, 328, 333, 334], "fedg": [274, 290, 313, 326, 327, 328, 333, 334], "fvertex": [274, 290, 313, 326, 327, 328, 333, 334], "slip": 274, "solid": [274, 307, 325, 327], "tangenti": 274, "nonperiod": 274, "drag": [274, 276, 277, 278, 279, 283, 284], "mass": 274, "momentum": [274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 331, 332], "scalar": 274, "rigid": [274, 334], "solv": [274, 310, 322], "mid": [274, 325, 333], "vari": [274, 276, 277, 278, 279, 283, 284, 290, 310, 319, 322, 327, 329], "consult": [274, 313], "tidal_forc": 274, "eddi": [275, 325], "addition": [275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 290, 315, 316, 317, 318, 320], "diffus": [275, 276, 277, 278, 279, 281, 282, 283, 284, 285], "50": [275, 281, 282, 313, 325, 331, 332, 335], "prescrib": [275, 281, 282, 329], "intens": 275, "enough": [275, 290, 293, 313], "sphere_transport": [276, 278, 283, 284, 326, 328, 333, 334], "spheretransport": [276, 278, 283, 284], "deform": [276, 283, 333], "flow": [276, 278, 283, 284, 325, 326, 327, 328, 329, 333, 334], "distribut": [276, 277, 278, 283, 284, 326, 328, 333, 334], "scheme": [276, 278, 283, 284, 326, 333, 335], "correlated_trac": 276, "differenti": [276, 278, 283, 284], "convergence_": [276, 278, 283, 284], "mixinganalysi": 276, "relationship": [276, 326], "correl": [276, 323, 330], "triplot": 276, "fast": [276, 277, 278, 279, 283, 284, 313], "sphere_transport_viz": [276, 278, 283, 284, 326, 328, 333, 334], "sphere_transport_viz_": [276, 278, 283, 284], "cosinebel": [277, 292], "shape": [277, 327], "blob": 277, "around": [277, 313, 314, 325, 326, 327, 328, 333, 334], "convergence_tracer1": 277, "water": [279, 281, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336], "convergence_h": 279, "convergence_normalveloc": 279, "shallow": [281, 294, 326, 327, 328, 329, 331, 332, 333, 334, 336], "100": [281, 282, 285, 322, 331, 332, 335], "25": [281, 282, 326, 328, 331, 332, 333, 334, 335], "exactsolut": [281, 282], "obtain": [281, 282, 294, 316], "normal_veloc": [281, 282, 290, 313], "assign": [281, 282, 327], "fall": [281, 282, 337], "accept": [281, 282], "bound": [281, 282], "manufacturedsolut": 282, "nondiverg": [283, 323, 330], "filamentanalysi": 283, "filament": [283, 333], "rotat": [284, 323, 326, 327, 328, 330, 331, 332, 333], "exercis": [285, 309, 326, 327, 328, 329, 333, 334, 335], "kpp_test": 285, "mixedlayerdepthsoutput": 285, "idealagetrac": [285, 335], "single_column_forc": [285, 335], "profil": [285, 310, 335], "throughout": [285, 325, 335], "idealag": 285, "enabel": 285, "formal": 286, "organ": [286, 288, 291, 312], "conceptu": [286, 293], "broadli": [286, 287, 293], "realist": [286, 312, 343], "greenland": [286, 312, 343], "2000m": [286, 337], "34": [286, 337], "halfar": 286, "cism": 286, "dome_typ": 286, "put_origin_on_a_cel": 286, "hydrologi": 286, "hydro": [286, 343], "dome_viz": 286, "time_slic": 286, "save_imag": 286, "hide": [286, 313], "hide_fig": 286, "clutter": 286, "smoke_test": [286, 292], "smoketest": [286, 292], "restart_test": 286, "restarttest": 286, "add_dome_task": 286, "variable_resolut": [286, 290, 337], "talk": 286, "reduc": [286, 290], "among": [286, 288, 294, 313], "encompass": 287, "perspect": 287, "four": 287, "major": [287, 290], "broader": 287, "univers": 287, "add_inertial_gravity_wave_task": 287, "add_manufactured_solution_task": 287, "add_single_column_task": 287, "alphabet": [287, 313], "landice_model": [287, 294], "diagram": 288, "green": 288, "blue": [288, 315, 337], "orang": 288, "red": 288, "laid": 288, "fig": 288, "organiz": 288, "concept": [288, 293, 313, 343], "somewher": 290, "multiprocess": [290, 293, 314], "aspir": 290, "emploi": 290, "unwant": 290, "outer": 290, "inner": 290, "dome_varres_grid": 290, "signific": [290, 291, 292], "neglig": 290, "culled_graph": [290, 313], "meshstep": 290, "getint": 290, "mesh_cpus_per_task": 290, "mesh_min_cpus_per_task": 290, "fit": [290, 314], "applic": [290, 293, 294, 336, 341], "launch": [290, 312], "write_netcdf": [290, 313], "convers": [290, 313], "greater": [290, 313], "graphinfofilenam": [290, 313], "culled_mesh": [290, 313], "use_dist": [290, 313, 325], "gradient_width_dist": [290, 313, 325], "gradient_width_frac": [290, 313, 325], "bottom_temperatur": [290, 313, 325], "surface_temperatur": [290, 313, 325, 335], "temperature_differ": [290, 313, 325], "coriolis_paramet": [290, 313, 325, 331, 332, 335], "x_cell": [290, 313], "y_cell": [290, 313], "bottom_depth": [290, 313, 314, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336], "ones_lik": [290, 313], "zeros_lik": [290, 313], "x_min": [290, 313], "min": [290, 313, 325, 335], "x_max": [290, 313], "y_min": [290, 313], "y_max": [290, 313], "y_mid": [290, 313], "x_perturb_min": [290, 313], "x_perturb_max": [290, 313], "perturb_width": [290, 313, 325], "y_offset": [290, 313], "sin": [290, 313, 325, 326, 328, 329, 331, 332, 333], "pi": [290, 313, 322, 325, 326, 327, 328, 329, 333], "temp_vert": [290, 313], "frac": [290, 313, 322, 325, 326, 328, 331, 333], "logical_and": [290, 313], "transpos": [290, 313], "3rd": [290, 313], "crest": [290, 313, 325], "expand_dim": [290, 313], "dim": [290, 313], "axi": [290, 313, 334], "broadcast": [290, 313], "nedg": [290, 313], "xvertex": [290, 313], "attr": [290, 313], "initial_temperatur": [290, 313], "initial_normal_veloc": [290, 313], "superclass": 290, "commandlin": 290, "harm": 290, "likewis": [290, 313], "subsequ": [290, 342], "arisen": 290, "problemat": 290, "add_depend": 290, "usual": [290, 292, 294, 313, 337], "forwardstep": 290, "mesh_path": 290, "mesh_step": 290, "with_ice_shelf_cav": 290, "initial_state_target": 290, "adjusted_init": 290, "forcing_data": 290, "init_mode_forcing_data": 290, "entha_analy_result": 290, "mat": 290, "enthalpy_benchmark": 290, "ourselv": 290, "problem": [290, 294, 310, 313], "firewal": 290, "bedmachineantarctica_v2_and_gebco_2022_0": 290, "05_degree_20220729": 290, "slate": 290, "icepresent_qu60km_polar": 290, "practic": [290, 293, 294], "straightforward": 290, "commonli": [290, 311], "notat": [290, 336, 341], "phc": [290, 322], "That": [290, 293, 311, 313, 337], "word": 290, "ff": 290, "quwisc240": [290, 293, 337], "90c": 290, "91c": 290, "92": [290, 322], "91": 290, "sowisc12to60": [290, 337], "performance_test": 290, "effici": [290, 313], "transfer": 290, "feasibl": 290, "overhead": 290, "philosophi": [291, 293, 313], "context": [291, 313], "namesak": 291, "256": [291, 316, 320], "count": [291, 311], "quicker": 291, "exce": 291, "offer": 291, "benefit": [291, 312], "bug": 291, "coverag": 291, "exhaust": 291, "recent": [291, 323, 338], "merg": 291, "reach": 291, "steadi": [291, 329], "wet": 291, "fundament": 292, "incorpor": 292, "velo_solv": 292, "sia": [292, 294], "fo": 292, "runmodel": 292, "run_step": 292, "0200": 292, "00_00": [292, 307, 313], "recip": 292, "demonstr": [292, 313], "fairli": [292, 293, 294, 313], "_cosine_bel": 292, "_with_viz": 292, "_setup_step": [292, 313], "_resolut": 292, "remove_step": 292, "analysis_depend": 292, "base_mesh_step": 292, "cos_bell_dir": 292, "_init_": 292, "init_step": 292, "_forward_": 292, "forward_step": 292, "with_viz_dir": 292, "_map_": 292, "_viz_": 292, "rare": [292, 294], "480km": 292, "closer": 292, "imp_r": 292, "joinpath": 292, "initial_condit": 293, "dig": [293, 314], "background": 293, "adher": [293, 313], "pep8": [293, 294], "bot": [293, 322], "violat": 293, "consid": 293, "editor": 293, "pycharm": [293, 294, 313], "spyder": 293, "linter": 293, "flake8": [293, 294], "discourag": [293, 311], "reformat": 293, "autopep8": 293, "undesir": 293, "lint": 293, "wildcard": 293, "vim": [293, 313], "plugin": 293, "id": [293, 294], "commit": [293, 294], "why": 293, "sound": 293, "subpackag": 293, "understand": [293, 314], "downstream": 293, "tutori": [293, 294], "clu": 293, "intro": 293, "docstr": [293, 312, 313], "strip": 293, "mpas_ocean": 293, "hidden": 293, "shortcut": [293, 337], "referenc": [293, 313], "mention": 293, "dot": 293, "charact": 293, "unix": [293, 312], "distinct": 293, "mayb": [293, 313], "machine_config": 293, "endswith": 293, "splitext": 293, "exactli": [293, 294, 313, 322], "move": [293, 294, 313, 336, 341], "renam": 293, "visa": 293, "versa": 293, "comfort": [293, 313], "inherit": [293, 313], "orient": [293, 329], "program": [293, 314], "led": 293, "felt": 293, "contribut": 293, "hesit": 293, "predecessor": [293, 311, 312], "clumsi": 293, "harder": 293, "outcom": 293, "augment": 293, "explain": 293, "hope": 293, "dens": 293, "learn": [293, 313], "curv": 293, "worth": [293, 313], "skill": 293, "endeavor": 293, "readabl": 293, "manipul": 293, "get_available_cores_and_nod": 293, "theoret": 293, "dozen": 293, "theori": 293, "biogeochemistri": 293, "ksh": 294, "mac": [294, 312], "csh": 294, "tcsh": 294, "temporarili": 294, "recogn": [294, 314, 337], "permiss": 294, "anyon": 294, "caus": [294, 316, 320, 322], "person": [294, 310], "base_path_to_install_or_update_conda": 294, "with_netlib_lapack": 294, "flavor": [294, 313], "troubl": [294, 313], "recognit": 294, "trilino": 294, "downsid": 294, "unneed": 294, "reinstal": 294, "caution": 294, "load_": 294, "encod": 294, "load_dev_polaris_": [294, 313], "env_nam": 294, "dev_polaris_": [294, 310], "workdir": [294, 337], "unexpect": [294, 311, 313], "occur": [294, 310], "echo": 294, "proceed": 294, "notic": 294, "conda_env": [294, 318, 337], "rememb": 294, "incorrect": 294, "unus": 294, "session": [294, 313], "pip": 294, "substanti": 294, "risk": [294, 313], "unsupport": 294, "env_onli": 294, "mpas_make_target": [294, 337], "scientif": [294, 337], "_albani": 294, "instruct": [294, 313], "es3m": 294, "compli": 294, "memor": 294, "guidelin": 294, "complianc": 294, "checker": 294, "isort": 294, "flynt": 294, "mypi": 294, "77": 294, "e302": 294, "blank": 294, "resolv": 294, "simpler": [294, 313], "new_branch_nam": 294, "disk": [294, 314, 316, 320], "respons": 294, "simplest": 294, "your_new_branch": 294, "restart_filenam": 300, "polaris_branch": 306, "post": 306, "src": 306, "registry_process": 306, "seaice_model": 306, "1m": [307, 340], "disc": [307, 340], "config_initial_ice_area": 307, "config_initial_ice_volum": 307, "config_atmospheric_forcing_typ": 307, "config_forcing_start_tim": 307, "config_forcing_cycle_start": 307, "config_forcing_cycle_dur": 307, "config_forcing_precipitation_unit": 307, "mm_per_sec": 307, "config_forcing_sst_typ": 307, "ncar": 307, "config_update_ocean_flux": 307, "config_include_pond_freshwater_feedback": 307, "standard_phys": 309, "standardphys": 309, "year": [309, 323, 340], "volum": 309, "snow": 309, "exact_restart": 309, "exactrestart": 309, "geo": 310, "cartopi": 310, "14": 310, "np110py27_4": 310, "calledprocesserror": 310, "deploy_tmp": 310, "vpn": 310, "site": 310, "shell": [310, 312], "honor": 310, "wide": 310, "spawn": 310, "usernam": [310, 313, 316, 320], "proxy_en": 310, "all_proxi": 310, "proxyout": 310, "8080": 310, "no_proxi": 310, "localhost": [310, 314, 319, 320, 337], "127": 310, "proxy_dis": 310, "unset": 310, "anytim": 310, "fatal": 310, "mpi_init": 310, "stack": 310, "mpir_init_thread": 310, "159": 310, "mpid_init": 310, "164": 310, "mpidi_ch3_init": 310, "95": 310, "mpid_nem_init": 310, "314": 310, "mpid_nem_tcp_init": 310, "173": 310, "mpid_nem_tcp_get_business_card": 310, "395": 310, "getsockinterfaceaddr": 310, "369": 310, "pn2034311": 310, "errno": 310, "host": [310, 314, 319, 337], "focus": 311, "plu": 311, "autom": 312, "exascal": 312, "earth": 312, "kept": 312, "boundari": [312, 325, 343], "expert": 312, "uncoupl": 312, "quick": [312, 313, 323, 338], "queue": 312, "beginn": [312, 313], "advanc": [312, 313], "mpas_to_yaml": 312, "troubleshoot": 312, "proxi": 312, "lanl": [312, 314, 316], "gethostbynam": 312, "glossari": 313, "stick": 313, "miniconda": 313, "3_chrysalis_intel_openmpi": 313, "strict": 313, "push": 313, "lowercas": 313, "hyphen": 313, "settl": 313, "desktop": 313, "realli": [313, 320], "nice": [313, 320], "supercomput": 313, "yet_another_channel": 313, "testgroup": 313, "vi": 313, "polaris_head": 313, "yetanotherchannel": 313, "instanc": 313, "repres": [313, 322, 327, 333], "highli": 313, "camelcas": 313, "capit": 313, "letter": 313, "cap": 313, "awkward": 313, "encourag": 313, "enclos": 313, "briefli": 313, "baroclinicchannel": 313, "globalconverg": 313, "add_test_group": 313, "interest": 313, "test_group": 313, "add_test_cas": 313, "anyth": 313, "probabl": [313, 319, 329], "suppos": 313, "easili": 313, "tide": 313, "sai": [313, 319], "res_str": 313, "1000": [313, 314, 322, 325, 329, 331, 332], "still": [313, 323, 336, 337, 341], "ti": 313, "loop": 313, "1km": [313, 325, 337], "4km": [313, 325, 337], "coarsest": [313, 314], "especi": 313, "promot": 313, "pattern": 313, "familiar": 313, "seen": 313, "brows": 313, "row": 313, "disadvantag": 313, "foremost": 313, "magic": 313, "effect": [313, 336], "pain": 313, "160": [313, 325], "500": [313, 314, 322, 325], "path_to_mpas_ocean": 313, "path_to_working_dir": 313, "cat": 313, "slurm_jobid": 313, "_run_test": 313, "gpf": 313, "fs1": 313, "cbegeman": 313, "grid_typ": [313, 314, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "vert_level": [313, 314, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "coord_typ": [313, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "partial_cell_typ": [313, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "min_pc_fract": [313, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336], "everywher": 313, "depress": [313, 322], "mostli": 313, "logic": [313, 325], "northern": [313, 325], "half": [313, 325], "southern": [313, 325], "halv": [313, 325], "gradient": [313, 325, 331, 332, 335], "500km": [313, 325], "40e3": [313, 325], "35": [313, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 341], "2e": [313, 325], "connect": [313, 320], "match": 313, "light": 313, "e3sm_compon": 313, "interact": [313, 316, 319, 320, 337], "interrupt": 313, "pty": 313, "navig": 313, "newli": 313, "bunch": 313, "didn": 313, "mistak": 313, "finger": 313, "cross": 313, "initial_normalveloc": 313, "initial_salin": 313, "obvious": 313, "stress": [313, 335], "landicemodelstep": 313, "huge": 313, "cp": 313, "05": [313, 329], "hmix_del2": 313, "bottom_drag": 313, "cvmix": 313, "0002": 313, "filename_interv": 313, "0100": 313, "input_interv": 313, "initial_onli": 313, "basicmesh": 313, "dayssincestart": 313, "surfacespe": 313, "lowersurfac": 313, "uppersurfac": 313, "ureconstructx": 313, "ureconstructi": 313, "great": 313, "remain": [313, 327, 329, 335], "load_dataset": 313, "final_temperatur": 313, "ab": 313, "proc": 313, "4proc": [313, 325], "8proc": [313, 325], "markdown": 313, "developers_guid": 313, "users_guid": 313, "daunt": 313, "flesh": 313, "bonu": 313, "improv": 313, "introduc": 313, "techniqu": 313, "cannot": 313, "aim": 313, "constrain_resourc": 313, "becam": 313, "mainten": 313, "counter": 313, "thought": 313, "yet_another_channel_test_cas": 313, "yetanotherchanneltestcas": 313, "choic": [313, 326, 327, 328, 329, 333, 334], "spuriou": [313, 325], "dissip": [313, 325], "pop": [313, 325], "mom": [313, 325], "mitgcm": [313, 325], "higher": 313, "heavi": 313, "analogi": 313, "tet": 313, "bear": 313, "late": 313, "_add_step": 313, "startswith": 313, "enumer": 313, "rpe_": 313, "_nu_": 313, "privat": 313, "break": [313, 325], "unusu": 313, "rpe_1_nu_1": [313, 325], "rpe_2_nu_5": [313, 325], "rpe_3_nu_10": 313, "rpe_4_nu_20": 313, "rpe_5_nu_200": 313, "20_00": 313, "0000": 313, "dayssincestartofsim": 313, "relativevort": 313, "pyplot": 313, "plt": 313, "output_": 313, "sections_yet_another_channel_": 313, "rpe_t": 313, "init_filenam": 313, "initial_state_file_nam": 313, "ds_init": 313, "_plot": 313, "dirti": 313, "adopt": 313, "lesson": 313, "tricki": 313, "commun": 313, "nuanc": 313, "fake": 313, "wasn": 313, "fold": 313, "proper": 313, "third": 313, "previous": 313, "extens": 314, "multinod": [314, 337], "explanatori": 314, "my_machin": 314, "extend": 314, "gitconfig": 314, "enter": 314, "author": 314, "email": 314, "pull_request": 314, "28": [314, 326], "address": [314, 326, 333], "metadata": 314, "customize_config_pars": 314, "server_base_url": 314, "inej": 314, "check_siz": 314, "ssl": 314, "certif": 314, "core_path": 314, "partition_execut": 314, "dask": 314, "netcdf4": 314, "netcdf4_class": 314, "netcdf3_64bit": 314, "netcdf3_class": 314, "engin": 314, "scipi": 314, "mesh_databas": 314, "ocean_database_root": 314, "landice_database_root": 314, "mesh_cor": 314, "mesh_min_cor": 314, "mesh_max_memori": 314, "mesh_max_disk": 314, "init_cor": 314, "init_min_cor": 314, "init_max_memori": 314, "init_max_disk": 314, "init_thread": 314, "forward_cor": 314, "forward_min_cor": 314, "forward_thread": 314, "forward_max_memori": 314, "forward_max_disk": 314, "add_metadata": 314, "ec": 314, "wc": 314, "mesh_descript": 314, "autodetect": 314, "bathy_descript": 314, "gebco": 314, "2022": 314, "bedmachin": 314, "antarctica": 314, "init_descript": 314, "e3sm_vers": 314, "increment": 314, "mesh_revis": 314, "finest": 314, "min_r": 314, "max_r": 314, "max_depth": 314, "creation_d": 314, "peopl": 314, "contact": 314, "temperaturemax": 314, "temperature_max": 314, "33": [314, 337], "enable_ocean_initial_condit": 314, "enable_ocean_graph_partit": 314, "enable_seaice_initial_condit": 314, "scrip": 314, "enable_scrip": 314, "transect": 314, "onlin": 314, "member": 314, "offlin": 314, "enable_diagnostics_fil": 314, "coarser": [314, 326, 327, 328, 329, 333, 334], "finer": 314, "comparisonlatresolut": 314, "comparisonlonresolut": 314, "antarct": 314, "polar": [314, 315, 317, 322], "stereograph": 314, "comparisonantarcticstereowidth": 314, "6000": [314, 322], "comparisonantarcticstereoresolut": 314, "arctic": [314, 340], "comparisonarcticstereowidth": 314, "comparisonarcticstereoresolut": 314, "tanh_dz": 314, "16": [314, 335, 337], "3000": [314, 329], "min_layer_thick": [314, 322], "max_layer_thick": [314, 322], "retain": 314, "ecosystem": 315, "gain": 315, "confluenc": 315, "public_html": [315, 317, 319], "soft": [315, 317, 319, 337], "mpi_intel": [315, 317, 318, 319], "36": [315, 319, 335, 337], "condo": [315, 337], "acm": [315, 337], "medium": 315, "acme_high": 315, "load_latest_polaris_intel_impi": [315, 318], "load_latest_polaris_gnu_openmpi": [315, 317, 337], "dst": 316, "calendar": 316, "network": 316, "introduct": 316, "platform": 316, "batch": 316, "wtrw": 316, "ch": 316, "fe": 316, "lustr": 316, "scratch4": 316, "scratch5": 316, "sacctmgr": 316, "assoc": 316, "cluster": 316, "45": 316, "sshare": 316, "sreport": 316, "accountutilizationbyus": 316, "2019": 316, "prioriti": 316, "yellow": 316, "chkhome": 316, "petabyt": 316, "df": 316, "bp": 316, "archiv": [316, 320], "hpss": [316, 320], "front": 316, "tn": 316, "storag": 316, "project_nam": 316, "salloc": [316, 319, 320], "account_nam": 316, "gpu": [316, 320], "hyperthread": [316, 320], "hang": [316, 320], "threads_per_cor": [316, 320], "shared_clim": [316, 337], "load_latest_polaris_gnu_mpich": [316, 320], "load_latest_polaris_intel_openmpi": 317, "compyf": 318, "app": [318, 337], "pmi2": 318, "40": [318, 329], "submit": 319, "workload": 319, "squeue": 319, "my_usernam": [319, 320], "scancel": 319, "jobid": 319, "cancel": 319, "emtpi": 319, "three": [319, 326, 328, 329, 333, 334, 343], "mpi_mpich": [319, 337], "mpi_openmpi": [319, 337], "nompi": [319, 337], "p1": 320, "nersc": 320, "iri": 320, "filesystem": 320, "myquota": 320, "prjquota": 320, "projectid": 320, "m1795": 320, "hsi": 320, "htar": 320, "zstash": 320, "cf": [320, 337], "cdir": [320, 337], "premium": 320, "cray_compil": 320, "8844": 320, "monik": 320, "browser": 320, "grab": 320, "logon": 320, "kernel": 320, "myenv": 320, "ipykernel": 320, "kernelspec": 320, "u1": 320, "interpret": 320, "argv": 320, "ipykernel_launch": 320, "connection_fil": 320, "display_nam": 320, "languag": 320, "2500": 322, "deepest": 322, "stewart": 322, "2017": 322, "delta": [322, 325, 329, 335], "z_2": 322, "z_1": 322, "mathrm": 322, "tanh": 322, "rightarrow": 322, "z_k": 322, "z_0": 322, "z_": [322, 335], "k": 322, "finder": 322, "n_z": 322, "h_": 322, "scienc": 322, "hydrograph": 322, "climatologi": 322, "250": 322, "5500": 322, "renorm": 322, "51": 322, "221": 322, "ziso": [322, 343], "63": 322, "floor": 322, "flat": [322, 325, 329], "collaps": 322, "adcroft": 322, "campin": 322, "2004": 322, "absenc": 322, "squash": 322, "watercolumn": 322, "press": 322, "batymetri": 322, "stair": 322, "month": 323, "websit": [323, 338], "release_6": 323, "ilicak": 325, "2012": [325, 326, 328, 333, 334], "variat": [325, 329], "distinguish": 325, "zonal": [325, 329, 335], "meridion": [325, 335], "psu": [325, 335], "cooler": 325, "north": 325, "sinusoid": 325, "perturb": [325, 327, 332], "t_0": 325, "t_b": 325, "t_": 325, "z_b": 325, "y_": 325, "l_x": 325, "warmer": 325, "ge": [325, 327], "gradient_width_fract": 325, "l_y": 325, "le": [325, 335], "stationari": [325, 335], "literatur": 325, "mk": 325, "celsiu": 325, "prognost": 325, "lauritzen": [326, 328, 333, 334], "nonlinear": [326, 329, 331, 332], "mixing_analysi": 326, "icosohydr": [326, 327, 328, 333, 334], "nearest": [326, 327, 328, 333, 334], "insensit": [326, 327, 328, 329, 333, 334, 335], "300": [326, 327, 328, 333, 334, 336], "debugtrac": [326, 328, 333, 334], "tracer2": [326, 328, 333, 334], "pair": [326, 328, 333, 334, 340], "tracer3": [326, 328, 333, 334], "nonlinearli": 326, "tau": [326, 327, 328, 333], "lambda": [326, 328, 329, 333], "theta": [326, 328, 329, 333], "co": [326, 327, 328, 329, 331, 332, 333], "transit": [326, 327, 328, 333, 334], "equat": [326, 327, 328, 329, 331, 332, 333, 334, 335], "vel_pd": [326, 327, 328, 333, 334], "rung": [326, 327, 328, 329, 333, 334], "kutta": [326, 327, 328, 329, 333, 334], "4th": [326, 327, 328, 329, 333, 334], "multipli": [326, 327, 328, 329, 333, 334], "spherical_convergence_forward": [326, 328, 333, 334], "globe": [326, 327, 328, 333, 334], "correlated_tracer_2d": 326, "sphere_transport_viz_trac": [326, 328, 333, 334], "sphere_transport_viz_tracer_diff": [326, 328, 333, 334], "sphere_transport_viz_h": [326, 328, 333, 334], "99": [326, 328, 333, 334], "101": [326, 328, 333, 334], "sphere_transport_viz_h_diff": [326, 328, 333, 334], "amplitud": [326, 328, 331, 332, 333], "vel_amp": [326, 328, 333], "convergence_thresh_tracer1": [326, 328, 333, 334], "convergence_thresh_tracer2": [326, 328, 333, 334], "66": 326, "convergence_thresh_tracer3": [326, 328, 333, 334], "mixing_evaluation_tim": 326, "roughli": [326, 327, 328, 333, 334], "studi": [326, 327, 328, 329, 333, 334], "williamson": [327, 329], "1992": [327, 329], "sec": 327, "3a": 327, "skamarock": 327, "gassmann": 327, "bodi": 327, "psi": 327, "proportion": [327, 329], "slow": 327, "passiv": 327, "psi_0": 327, "debug_tracers_1": 327, "equatori": 327, "u_0": [327, 328, 329, 333], "tendenc": [327, 332], "rad": 327, "lat_cent": 327, "lon_cent": 327, "14159265": 327, "2123666": 327, "6667": 327, "hill": 327, "psi0": 327, "576": 327, "circul": 327, "discontinu": [328, 333, 334], "slot": [328, 333, 334], "cylind": [328, 333, 334], "48": 328, "86": 328, "chosen": [329, 335], "h_0": 329, "textrm": 329, "sensit": 329, "wind": [329, 335], "l_1": 329, "l_2": 329, "l_": 329, "examin": [329, 335], "vel_period": 329, "gh_0": 329, "94e4": 329, "william": 329, "paper": [329, 337], "arbitrari": 329, "evolut": 329, "unexpectedli": 329, "convergence_thresh_h": 329, "convergence_thresh_normalveloc": 329, "necessit": 329, "geostropnic_viz": 329, "geostrophic_viz": 329, "geostrophic_viz_h": 329, "deep": 329, "geostrophic_viz_vel": 329, "geostrophic_viz_diff_h": 329, "geostrophic_viz_diff_vel": 329, "propag": [331, 332], "doubli": [331, 332], "assess": [331, 332], "accuraci": [331, 332], "discret": [331, 332], "bishnu": [331, 332], "friction": [331, 332], "neglect": [331, 332], "analyt": [331, 343], "k_x": [331, 332], "k_y": [331, 332], "availi": [331, 332], "10000": [331, 332], "coriloi": 331, "1e": 331, "ssh_amplitud": [331, 332], "wavelength": [331, 332], "n_wavelengths_x": [331, 332], "n_wavelengths_i": [331, 332], "embed": 332, "eta_0": 332, "preserv": [333, 337], "rough": 333, "revers": 333, "filament_analysi": 333, "thhe": 333, "filament_evaluation_tim": 333, "offset": 334, "vector": 334, "rotation_vector": 334, "cartesian": 334, "span": 335, "arbitrarili": 335, "virtu": 335, "400": 335, "phi": 335, "phi_0": 335, "dz": 335, "ml": 335, "mld": 335, "surface_x": 335, "x_gradient_mixed_lay": 335, "mixed_layer_depth_x": 335, "x_difference_across_mixed_lay": 335, "x_gradient_interior": 335, "spatial": 335, "4x4": 335, "960": 335, "degc": 335, "temperature_gradient_mixed_lay": 335, "temperature_difference_across_mixed_lay": 335, "temperature_gradient_interior": 335, "mixed_layer_depth_temperatur": 335, "surface_salin": 335, "salinity_gradient_mixed_lay": 335, "salinity_difference_across_mixed_lay": 335, "salinity_gradient_interior": 335, "mixed_layer_depth_salin": 335, "dictat": 335, "kpp": 335, "restor": 335, "piston": 335, "toward": 335, "temperature_surface_restoring_valu": 335, "temperature_piston_veloc": 335, "salinity_surface_restoring_valu": 335, "salinity_piston_veloc": 335, "temperature_interior_restoring_r": 335, "salinity_interior_restoring_r": 335, "net": 335, "latent": 335, "heat": 335, "bulk": 335, "latent_heat_flux": 335, "sensibl": 335, "sensible_heat_flux": 335, "solar": 335, "shortwav": 335, "shortwave_heat_flux": 335, "evapor": 335, "evaporation_flux": 335, "5e": 335, "rain": 335, "rain_flux": 335, "wind_stress_zon": 335, "wind_stress_meridion": 335, "welcom": [336, 341], "icosohedr": [336, 341], "pertain": [336, 341], "inher": 336, "warrant": 336, "investig": 336, "load_latest_polari": 337, "minu": 337, "create_polaris_load_script": 337, "load_polaris_1": 337, "0_mpich": 337, "exclud": 337, "wiki": 337, "circular_shelf": 337, "sia_smoke_test": 337, "sia_decomposition_test": 337, "sia_restart_test": 337, "fo_smoke_test": 337, "fo_decomposition_test": 337, "fo_restart_test": 337, "37": 337, "17": 337, "210131_test_new_branch": 337, "my_config": 337, "smaller": 337, "previous_workdir": 337, "recompil": 337, "safer": 337, "test_subdir": 337, "whatev": 337, "clock": 337, "j": 337, "exclus": 337, "job_nam": 337, "fo_integr": 337, "sia_integr": 337, "cosine_bell_cached_init": [337, 342], "ec30to60": 337, "ecwisc30to60": 337, "qu240_for_e3sm": 337, "quwisc240_for_e3sm": 337, "wc14": 337, "suitenam": 337, "seaice_standalone_framework": 338, "71": 340, "35n": 340, "156": 340, "5w": 340, "atmospher": 340, "timeseri": 340, "prohibit": 342, "speed": 342, "radial": 343}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 3, 0, "-", "imp_res"], [61, 2, 1, "", "symlink"]], "polaris.job": [[62, 2, 1, "", "get_slurm_options"], [63, 2, 1, "", "write_job_script"]], "polaris.list": [[64, 2, 1, "", "list_cases"], [65, 2, 1, "", "list_machines"], [66, 2, 1, "", "list_suites"]], "polaris.logging": [[67, 2, 1, "", "log_method_call"]], "polaris.mesh": [[68, 0, 1, "", "IcosahedralMeshStep"], [75, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [70, 1, 1, "", "get_cell_width"], [71, 1, 1, "", "get_subdivisions"], [72, 1, 1, "", "make_jigsaw_mesh"], [73, 1, 1, "", "run"], [74, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, 1, 1, "", "__init__"], [76, 1, 1, "", "build_cell_width_lat_lon"], [77, 1, 1, "", "make_jigsaw_mesh"], [78, 1, 1, "", "run"], [79, 1, 1, "", "setup"]], "polaris.mesh.planar": [[80, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[81, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, 1, 1, "", "__init__"], [82, 1, 1, "", "run"], [83, 1, 1, "", "save_and_plot_cell_width"], [84, 1, 1, "", "setup"]], "polaris.model_step": [[85, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[86, 2, 1, "", "area_for_field"], [87, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[88, 2, 1, "", "ingest"], [89, 2, 1, "", "parse_replacements"], [90, 2, 1, "", "replace"], [91, 2, 1, "", "write"]], "polaris.ocean": [[140, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[140, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[141, 0, 1, "", "ConvergenceAnalysis"], [149, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "compute_error"], [143, 1, 1, "", "convergence_parameters"], [144, 1, 1, "", "exact_solution"], [145, 1, 1, "", "get_output_field"], [146, 1, 1, "", "plot_convergence"], [147, 1, 1, "", "run"], [148, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "compute_cell_count"], [151, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[152, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "compute_cell_count"]], "polaris.ocean.mesh.spherical": [[154, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[155, 0, 1, "", "OceanModelStep"], [160, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "compute_cell_count"], [157, 1, 1, "", "constrain_resources"], [158, 1, 1, "", "map_yaml_to_namelist"], [159, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[161, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[162, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[163, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[163, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[164, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[164, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[165, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[168, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"], [170, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[171, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[171, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[172, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[174, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[176, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"], [178, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[179, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[179, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[180, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[182, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[184, 0, 1, "", "CosineBell"], [186, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[187, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[189, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "compute_cell_count"], [191, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[192, 0, 1, "", "Init"], [194, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[195, 0, 1, "", "Viz"], [197, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[199, 0, 1, "", "Geostrophic"], [201, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[202, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "exact_solution"], [204, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[205, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[205, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[206, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[208, 0, 1, "", "Viz"], [210, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[208, 1, 1, "", "__init__"], [209, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz.VizMap": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[212, 0, 1, "", "InertialGravityWave"], [213, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[212, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[214, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[216, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[216, 1, 1, "", "__init__"], [217, 1, 1, "", "normal_velocity"], [218, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[219, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[221, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[221, 1, 1, "", "__init__"], [222, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[223, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[223, 1, 1, "", "__init__"], [224, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[225, 0, 1, "", "ManufacturedSolution"], [226, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[225, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[227, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[227, 1, 1, "", "__init__"], [228, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[229, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[229, 1, 1, "", "__init__"], [230, 1, 1, "", "normal_velocity"], [231, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[232, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[234, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[234, 1, 1, "", "__init__"], [235, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[236, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[238, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[239, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[239, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[240, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[240, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[241, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[241, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[242, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[244, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[244, 1, 1, "", "__init__"], [245, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[246, 0, 1, "", "SphereTransport"], [248, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[246, 1, 1, "", "__init__"], [247, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[249, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[249, 1, 1, "", "__init__"], [250, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[251, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[253, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[253, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[254, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[256, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[258, 0, 1, "", "Viz"], [260, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[258, 1, 1, "", "__init__"], [259, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz.VizMap": [[260, 1, 1, "", "__init__"], [261, 1, 1, "", "runtime_setup"]], "polaris.ocean.vertical.grid_1d": [[262, 2, 1, "", "generate_1d_grid"], [263, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[264, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[265, 2, 1, "", "alter_bottom_depth"], [266, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[267, 2, 1, "", "compute_min_max_level_cell"], [268, 2, 1, "", "compute_z_level_layer_thickness"], [269, 2, 1, "", "compute_z_level_resting_thickness"], [270, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[271, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[92, 2, 1, "", "get_available_parallel_resources"], [93, 2, 1, "", "get_parallel_command"], [94, 2, 1, "", "run_command"], [95, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[96, 2, 1, "", "write"]], "polaris.remap": [[97, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "dst_from_lon_lat"], [99, 1, 1, "", "dst_from_mpas"], [100, 1, 1, "", "dst_from_points"], [101, 1, 1, "", "dst_from_proj"], [102, 1, 1, "", "dst_global_lon_lat"], [103, 1, 1, "", "get_remapper"], [104, 1, 1, "", "runtime_setup"], [105, 1, 1, "", "src_from_lon_lat"], [106, 1, 1, "", "src_from_mpas"], [107, 1, 1, "", "src_from_proj"]], "polaris.run": [[108, 2, 1, "", "complete_step_run"], [109, 2, 1, "", "load_dependencies"], [112, 2, 1, "", "setup_config"], [113, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[110, 2, 1, "", "run_single_step"], [111, 2, 1, "", "run_tasks"]], "polaris.seaice": [[297, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[297, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[298, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[299, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[299, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[300, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[300, 1, 1, "", "__init__"], [301, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[302, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[302, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[303, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[303, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[304, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[304, 1, 1, "", "__init__"], [305, 1, 1, "", "run"]], "polaris.setup": [[114, 2, 1, "", "setup_task"], [115, 2, 1, "", "setup_tasks"]], "polaris.streams": [[116, 2, 1, "", "read"], [117, 2, 1, "", "update_defaults"], [118, 2, 1, "", "update_tree"], [119, 2, 1, "", "write"]], "polaris.suite": [[120, 2, 1, "", "setup_suite"]], "polaris.validate": [[121, 2, 1, "", "compare_variables"]], "polaris.viz": [[122, 2, 1, "", "plot_global_field"], [123, 2, 1, "", "plot_horiz_field"], [124, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[125, 0, 1, "", "PolarisYaml"], [129, 2, 1, "", "main_mpas_to_yaml"], [130, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [131, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "read"], [127, 1, 1, "", "update"], [128, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 313], "share": [1, 6, 9, 293, 313], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 138, 290, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 341], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 73, 78, 82, 108, 109, 110, 111, 112, 113, 139, 147, 169, 177, 181, 183, 193, 196, 198, 207, 209, 211, 222, 224, 235, 237, 243, 245, 252, 255, 257, 259, 290, 294, 301, 305, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341], "onc": 1, "befor": 1, "depend": [1, 6, 290], "output": [1, 290, 313], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 280, 286, 289, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 308, 313, 330, 336, 337, 339, 341, 343], "work": 1, "directori": [1, 288], "structur": [1, 288], "i": [1, 337], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 294, 312, 314, 337], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 139, 290, 294, 319], "other": [1, 136, 290, 313, 319, 337], "implement": [1, 2], "set": [1, 139, 294, 337], "up": [1, 294, 337], "test": [1, 2, 6, 138, 139, 313, 314, 340], "And": 1, "valid": [1, 2, 3, 18, 121, 180, 181, 275, 300, 301, 313, 337], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 139, 294, 313, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "same": 2, "api": 3, "refer": [3, 138, 139], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 139, 272, 287, 293, 294, 306, 323, 337, 338], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 290, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 312, 337], "framework": [3, 10, 138, 139, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 293, 296, 309, 321], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 64, 65, 66], "setup": [3, 5, 8, 36, 47, 58, 74, 79, 84, 114, 115, 148, 159, 170, 178, 290], "suit": [3, 5, 8, 120, 291, 324, 337, 342], "cach": [3, 5, 8, 55, 290], "mpas_to_yaml": [3, 5], "base": [3, 138], "class": [3, 293], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 136, 139, 287, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "io": [3, 11, 59, 60, 61], "job": [3, 62, 63, 319, 337], "log": [3, 12, 67], "mesh": [3, 13, 14, 19, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 138, 139, 154, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "model_step": [3, 85], "mpa": [3, 6, 15, 86, 87, 139, 274, 307], "namelist": [3, 14, 88, 89, 90, 91, 139], "parallel": [3, 92, 93, 94, 95], "proven": [3, 16, 96], "remap": [3, 17, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "stream": [3, 14, 116, 117, 118, 119, 139, 313], "viz": [3, 122, 123, 124, 182, 183, 195, 196, 197, 198, 208, 209, 210, 211, 223, 224, 236, 237, 244, 245, 258, 259, 260, 261, 276, 277, 278, 279, 281, 282, 283, 284, 285, 304, 305, 309, 313], "yaml": [3, 14, 125, 126, 127, 128, 129, 130, 131, 139], "build": [4, 136, 294, 337], "serial": [5, 8, 110, 111], "deploi": 6, "new": [6, 136, 313], "spack": [6, 136, 294, 337], "environ": [6, 136, 294, 310, 337], "where": 6, "we": 6, "updat": [6, 14, 127, 294], "mach": 6, "conda": [6, 294, 310, 319, 337], "identifi": 6, "e3sm": [6, 14, 139, 294, 337], "machin": [6, 136, 294, 319, 337], "describ": [6, 136], "modul": [6, 8, 293, 294], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 294, 313], "remot": [6, 320], "branch": 6, "petsc": [6, 294], "netlib": [6, 294], "lapack": [6, 294], "albani": [6, 294], "troubleshoot": [6, 294, 310], "ocean": [6, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 323], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 136, 139, 287, 290, 313, 314], "comment": 9, "symlink": [11, 61, 290], "download": [11, 59, 290], "spheric": [13, 19, 81, 82, 83, 84, 138, 139, 152, 153, 154], "planar": [13, 19, 80], "uniform": [13, 139, 322], "gener": 13, "model": [14, 138, 139, 155, 156, 157, 158, 159, 160, 273, 307, 313, 337], "an": [14, 139, 313], "ad": [14, 136, 290, 313], "dynam": [14, 313], "input": [14, 290], "partit": [14, 32], "pio": 14, "make": [14, 313], "graph": 14, "area": 15, "time": [15, 139, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 341], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 313, 340], "common": 19, "matplotlib": 19, "style": [19, 293, 294], "horizont": [19, 313], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 313], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 151, 167, 173, 191], "map_yaml_to_namelist": [31, 158], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 104, 261, 290], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 157, 290], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 175, 185, 200, 247, 292, 310], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "imp_r": 60, "get_slurm_opt": 62, "write_job_script": 63, "list_cas": 64, "list_machin": 65, "list_suit": 66, "log_method_cal": 67, "icosahedralmeshstep": [68, 69, 70, 71, 72, 73, 74], "build_subdivisions_cell_width_lat_lon": 69, "get_cell_width": 70, "get_subdivis": 71, "make_jigsaw_mesh": [72, 77], "quasiuniformsphericalmeshstep": [75, 76, 77, 78, 79], "build_cell_width_lat_lon": 76, "compute_planar_hex_nx_ni": 80, "sphericalbasestep": [81, 82, 83, 84], "save_and_plot_cell_width": 83, "make_graph_fil": 85, "area_for_field": 86, "time_index_from_xtim": 87, "ingest": 88, "parse_replac": 89, "replac": 90, "write": [91, 96, 119, 128], "get_available_parallel_resourc": 92, "get_parallel_command": 93, "run_command": 94, "set_cores_per_nod": 95, "mappingfilestep": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "dst_from_lon_lat": 98, "dst_from_mpa": 99, "dst_from_point": 100, "dst_from_proj": 101, "dst_global_lon_lat": 102, "get_remapp": 103, "src_from_lon_lat": 105, "src_from_mpa": 106, "src_from_proj": 107, "complete_step_run": 108, "load_depend": 109, "run_single_step": 110, "run_task": 111, "setup_config": 112, "unpickle_suit": 113, "setup_task": [114, 115], "read": [116, 126], "update_default": 117, "update_tre": 118, "setup_suit": 120, "compare_vari": 121, "plot_global_field": 122, "plot_horiz_field": 123, "use_mplstyl": 124, "polarisyaml": [125, 126, 127, 128], "main_mpas_to_yaml": 129, "mpas_namelist_and_streams_to_yaml": 130, "yaml_to_mpas_stream": 131, "anvil": [132, 315], "intel": [132, 134, 135, 315, 317, 318], "gnu": [132, 133, 134, 135, 137, 315, 316, 317, 320], "chicoma": [133, 316], "cpu": [133, 137, 316, 320], "chrysali": [134, 317], "compymcnodefac": [135, 318], "support": [136, 273, 294, 307, 319, 337], "perlmutt": [137, 320], "pm": 137, "baroclinic_channel": [138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 275], "inertial_gravity_wav": [138, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 281], "sphere_transport": [138, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "cosine_bel": [138, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 277, 324], "geostroph": [138, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 279, 329], "manufactured_solut": [138, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 282], "single_column": [138, 238, 239, 240, 241, 242, 243, 244, 245, 285, 295, 298, 299, 300, 301, 302, 303, 304, 305, 309], "converg": [138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 332], "potenti": [138, 139], "energi": [138, 139], "rpe": [138, 139, 161, 174, 175, 176, 177, 178, 275, 325], "vertic": [138, 139, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 313, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336], "coordin": [138, 139, 313, 322], "v": 139, "map": 139, "omega": 139, "mpi": [139, 319], "resourc": 139, "interv": 139, "quasi": 139, "icosahedr": 139, "rest": 139, "convergenceanalysi": [141, 142, 143, 144, 145, 146, 147, 148], "compute_error": 142, "convergence_paramet": [143, 250], "exact_solut": [144, 188, 203, 215, 216, 217, 218, 228, 229, 230, 231, 281, 282], "get_output_field": [145, 204], "plot_converg": 146, "convergenceforward": [149, 150, 151], "compute_cell_count": [150, 153, 156, 166, 190, 220, 233], "sphericalconvergenceforward": [152, 153], "add_spherical_base_mesh_step": 154, "oceanmodelstep": [155, 156, 157, 158, 159], "get_time_interval_str": 160, "compute_rp": 161, "add_baroclinic_channel_task": 162, "decomp": [163, 275, 325], "default": [164, 275, 313, 325], "forward": [165, 166, 167, 189, 190, 191, 205, 219, 220, 232, 233, 240, 253, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 302, 309, 313], "init": [168, 169, 170, 192, 193, 194, 206, 207, 221, 222, 234, 235, 242, 243, 254, 255, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 313], "restart": [171, 172, 173, 275, 325, 340], "restart_step": [172, 173], "restartstep": [172, 173], "analysi": [176, 177, 178, 187, 188, 202, 203, 204, 214, 215, 227, 228, 249, 250, 276, 277, 278, 279, 281, 282, 283, 284, 313, 329], "thread": [179, 275, 325], "cosinebel": [184, 185], "add_cosine_bell_task": 186, "vizmap": [197, 198, 210, 211, 260, 261], "add_geostrophic_task": 201, "inertialgravitywav": 212, "add_inertial_gravity_wave_task": 213, "exactsolut": [216, 217, 218, 229, 230, 231], "normal_veloc": [217, 230], "ssh": [218, 231], "manufacturedsolut": 225, "add_manufactured_solution_task": 226, "add_single_column_task": [238, 298], "cvmix": [239, 285, 335], "ideal_ag": 241, "idealag": 241, "spheretransport": [246, 247], "add_sphere_transport_task": 248, "filament_analysi": [251, 252, 283], "filamentanalysi": [251, 252], "mixing_analysi": [256, 257, 276], "mixinganalysi": [256, 257], "grid_1d": [262, 263], "generate_1d_grid": 262, "write_1d_grid": 263, "init_vertical_coord": 264, "partial_cel": [265, 266], "alter_bottom_depth": 265, "alter_ssh": 266, "zlevel": [267, 268, 269, 270], "compute_min_max_level_cel": 267, "compute_z_level_layer_thick": 268, "compute_z_level_resting_thick": 269, "init_z_level_vertical_coord": 270, "zstar": 271, "init_z_star_vertical_coord": 271, "initi": [274, 307, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "condit": [274, 307, 313, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "boundari": 274, "forc": [274, 307, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "correlated_tracers_2d": 276, "base_mesh": [276, 277, 278, 279, 283, 284], "divergent_2d": 278, "nondivergent_2d": 283, "rotation_2d": 284, "ideal": [285, 335], "ag": [285, 335], "categori": [286, 336, 341], "constructor": [287, 290, 292], "organ": 289, "attribut": [290, 292], "copi": 290, "pull": 291, "request": 291, "pr": 291, "nightli": 291, "overview": 293, "code": [293, 294, 313], "packag": 293, "within": 293, "group": [293, 313], "relat": 293, "quick": [294, 337], "start": [294, 313, 337], "develop": [294, 312, 313], "unix": 294, "shell": 294, "repositori": 294, "beginn": 294, "compil": 294, "system": 294, "unknown": 294, "what": 294, "script": [294, 337], "doe": 294, "flag": 294, "activ": 294, "switch": 294, "between": [294, 313], "differ": 294, "onli": 294, "repo": 294, "worktre": 294, "advanc": 294, "seaic": [295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307], "exact_restart": [299, 300, 301], "exactrestart": 299, "standard_phys": [303, 304, 305], "standardphys": 303, "standard_physics_test": 309, "exact_restart_test": 309, "solver": 310, "error": 310, "when": 310, "proxi": 310, "lanl": 310, "mac": 310, "gethostbynam": 310, "fail": 310, "glossari": [311, 312], "": 312, "guid": 312, "tutori": [312, 313], "compass": 312, "get": 313, "vari": 313, "resolut": 313, "paramet": 313, "thing": 313, "out": 313, "defin": 313, "more": 313, "again": 313, "one": 313, "second": 313, "enhanc": 313, "comput": 313, "cell": 313, "count": 313, "superclass": 313, "studi": 313, "how": 313, "pass": 313, "data": [313, 320], "A": 314, "case": 314, "slurm": 319, "queue": 319, "mpich": 319, "openmpi": 319, "No": 319, "forg": 319, "jupyt": 320, "notebook": 320, "1d": 322, "grid": [322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336], "type": 322, "tanh_dz": 322, "60layerphc": 322, "100layere3smv1": 322, "3d": 322, "z": 322, "star": 322, "level": 322, "cosine_bell_cached_init": 324, "baroclin": 325, "channel": 325, "descript": [325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "durat": [325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "core": [325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341], "correl": 326, "tracer": 326, "2": [326, 328, 333, 334], "d": [326, 328, 333, 334], "cosin": 327, "bell": 327, "diverg": 328, "inerti": 331, "graviti": 331, "wave": 331, "manufactur": 332, "solut": 332, "nondiverg": 333, "rotat": 334, "singl": [335, 340], "column": [335, 340], "task_nam": [336, 341], "yet": 337, "load": 337, "standalon": 337, "sea": 338, "ic": 338, "standard": 340, "physic": 340, "timestep": 340, "exact": 340}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [287, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [325, "mesh"], [325, "id2"], [325, "id9"], [325, "id17"], [325, "id25"], [325, "id32"], [326, "mesh"], [327, "mesh"], [328, "mesh"], [329, "mesh"], [331, "mesh"], [332, "mesh"], [333, "mesh"], [334, "mesh"], [335, "mesh"], [335, "id3"], [335, "id8"], [336, "mesh"], [340, "mesh"], [340, "id1"], [340, "id6"], [341, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [275, "validate"]], "viz": [[3, "viz"], [276, "viz"], [277, "viz"], [278, "viz"], [279, "viz"], [281, "viz"], [282, "viz"], [283, "viz"], [284, "viz"], [285, "viz"], [309, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [313, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [321, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [139, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [139, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[19, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.imp_res": [[60, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[61, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[62, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[63, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[64, "polaris-list-list-cases"]], "polaris.list.list_machines": [[65, "polaris-list-list-machines"]], "polaris.list.list_suites": [[66, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[67, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[68, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[69, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[70, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[71, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[72, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[73, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[74, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[79, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[80, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[82, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[83, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[84, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[85, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[86, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[87, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[88, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[89, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[90, "polaris-namelist-replace"]], "polaris.namelist.write": [[91, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[92, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[93, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[94, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[95, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[96, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[97, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[98, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[99, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[100, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[101, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[102, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[103, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[104, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[105, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[106, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[107, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[108, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[109, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[110, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[111, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[112, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[113, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[114, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[115, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[116, "polaris-streams-read"]], "polaris.streams.update_defaults": [[117, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[118, "polaris-streams-update-tree"]], "polaris.streams.write": [[119, "polaris-streams-write"]], "polaris.suite.setup_suite": [[120, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[121, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_field": [[122, "polaris-viz-plot-global-field"]], "polaris.viz.plot_horiz_field": [[123, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[124, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[125, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[126, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[127, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[128, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[129, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[130, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[131, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[132, "anvil"], [315, "anvil"]], "intel": [[132, "intel"], [134, "intel"], [135, "intel"]], "gnu": [[132, "gnu"], [134, "gnu"], [135, "gnu"]], "Chicoma": [[133, "chicoma"], [316, "chicoma"]], "chicoma-cpu, gnu": [[133, "chicoma-cpu-gnu"]], "Chrysalis": [[134, "chrysalis"], [317, "chrysalis"]], "CompyMcNodeFace": [[135, "compymcnodeface"], [318, "compymcnodeface"]], "Machines": [[136, "machines"], [319, "machines"]], "Supported Machines": [[136, "supported-machines"], [319, "supported-machines"]], "Other Machines": [[136, "other-machines"], [319, "other-machines"]], "Adding a New Supported Machine": [[136, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[136, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[136, "describing-a-spack-environment"]], "Building the Spack Environment": [[136, "building-the-spack-environment"]], "Perlmutter": [[137, "perlmutter"], [320, "perlmutter"]], "pm-cpu, gnu": [[137, "pm-cpu-gnu"]], "ocean": [[138, "ocean"]], "Tasks": [[138, "tasks"], [280, "tasks"], [292, "tasks"], [295, "tasks"], [308, "tasks"], [330, "tasks"], [339, "tasks"], [343, "tasks"]], "baroclinic_channel": [[138, "baroclinic-channel"], [275, "baroclinic-channel"]], "inertial_gravity_wave": [[138, "inertial-gravity-wave"], [281, "inertial-gravity-wave"]], "sphere_transport": [[138, "sphere-transport"]], "cosine_bell": [[138, "cosine-bell"], [277, "cosine-bell"]], "geostrophic": [[138, "geostrophic"], [279, "geostrophic"], [329, "geostrophic"]], "manufactured_solution": [[138, "manufactured-solution"], [282, "manufactured-solution"]], "single_column": [[138, "single-column"], [285, "single-column"], [295, "single-column"], [309, "single-column"]], "Ocean Framework": [[138, "ocean-framework"]], "Convergence Tests": [[138, "convergence-tests"], [139, "convergence-tests"]], "Spherical Convergence Tests": [[138, "spherical-convergence-tests"]], "Ocean Model": [[138, "ocean-model"]], "Spherical Base Mesh Step": [[138, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[138, "reference-potential-energy-rpe"]], "Vertical coordinates": [[138, "vertical-coordinates"]], "Ocean framework": [[139, "ocean-framework"]], "YAML files vs. namelists and streams": [[139, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[139, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[139, "setting-mpi-resources"]], "Setting time intervals in model config options": [[139, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[139, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[139, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[139, "vertical-coordinate"], [322, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[139, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[140, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[141, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[142, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[143, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[144, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[145, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[146, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[147, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[148, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[149, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[150, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[151, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[152, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[153, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[154, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[155, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[156, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[157, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[158, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[159, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[160, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[161, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[162, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[163, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[164, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[165, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[166, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[167, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[168, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[169, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[170, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[171, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[172, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[173, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[174, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[175, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[176, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[177, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[178, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[179, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[180, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[181, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[182, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[183, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[184, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[185, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[186, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[187, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[188, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[189, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[190, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[191, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[192, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[193, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[194, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[195, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[196, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[197, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[198, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[199, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[200, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[201, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[202, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[203, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[204, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[205, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[206, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[207, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[208, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[209, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.viz.VizMap": [[210, "polaris-ocean-tasks-geostrophic-viz-vizmap"]], "polaris.ocean.tasks.geostrophic.viz.VizMap.run": [[211, "polaris-ocean-tasks-geostrophic-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[212, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[213, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[214, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[215, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[216, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[217, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[218, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[219, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[220, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[221, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[222, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[223, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[224, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[225, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[226, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[227, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[228, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[229, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[230, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[231, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[232, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[233, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[234, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[235, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[236, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[237, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[238, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[239, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[240, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[241, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[242, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[243, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[244, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[245, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[246, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[247, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[248, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[249, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[250, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[251, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[252, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[253, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[254, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[255, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[256, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[257, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[258, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[259, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.viz.VizMap": [[260, "polaris-ocean-tasks-sphere-transport-viz-vizmap"]], "polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup": [[261, "polaris-ocean-tasks-sphere-transport-viz-vizmap-runtime-setup"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[262, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[263, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[264, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[265, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[266, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[267, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[268, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[269, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[270, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[271, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[272, "ocean-component"], [323, "ocean-component"]], "Models": [[273, "models"]], "Supported Models": [[273, "supported-models"]], "MPAS-Ocean": [[274, "mpas-ocean"]], "Initial conditions": [[274, "initial-conditions"], [307, "initial-conditions"]], "Boundary conditions": [[274, "boundary-conditions"]], "Forcing": [[274, "forcing"], [307, "forcing"]], "framework": [[275, "framework"], [276, "framework"], [277, "framework"], [278, "framework"], [279, "framework"], [281, "framework"], [282, "framework"], [283, "framework"], [284, "framework"], [285, "framework"], [309, "framework"]], "init": [[275, "init"], [276, "init"], [277, "init"], [278, "init"], [279, "init"], [281, "init"], [282, "init"], [283, "init"], [284, "init"], [285, "init"]], "forward": [[275, "forward"], [276, "forward"], [277, "forward"], [278, "forward"], [279, "forward"], [281, "forward"], [282, "forward"], [283, "forward"], [284, "forward"], [285, "forward"], [309, "forward"]], "default": [[275, "default"], [325, "default"]], "decomp": [[275, "decomp"], [325, "decomp"]], "restart": [[275, "restart"], [325, "restart"]], "threads": [[275, "threads"]], "rpe": [[275, "rpe"], [325, "rpe"]], "correlated_tracers_2d": [[276, "correlated-tracers-2d"]], "base_mesh": [[276, "base-mesh"], [277, "base-mesh"], [278, "base-mesh"], [279, "base-mesh"], [283, "base-mesh"], [284, "base-mesh"]], "analysis": [[276, "analysis"], [277, "analysis"], [278, "analysis"], [279, "analysis"], [281, "analysis"], [282, "analysis"], [283, "analysis"], [284, "analysis"], [329, "analysis"]], "mixing_analysis": [[276, "mixing-analysis"]], "divergent_2d": [[278, "divergent-2d"]], "exact_solution": [[281, "exact-solution"], [282, "exact-solution"]], "nondivergent_2d": [[283, "nondivergent-2d"]], "filament_analysis": [[283, "filament-analysis"]], "rotation_2d": [[284, "rotation-2d"]], "cvmix": [[285, "cvmix"], [335, "cvmix"]], "ideal age": [[285, "ideal-age"], [335, "ocean-single-column-ideal-age"]], "Categories of tasks": [[286, "categories-of-tasks"]], "Constructor": [[287, "constructor"]], "Config file": [[287, "config-file"]], "Directory structure": [[288, "directory-structure"]], "Organization of Tasks": [[289, "organization-of-tasks"]], "Steps": [[290, "steps"]], "Step attributes": [[290, "step-attributes"]], "constructor": [[290, "constructor"], [292, "constructor"]], "setup()": [[290, "setup"]], "constrain_resources()": [[290, "constrain-resources"]], "runtime_setup()": [[290, "runtime-setup"]], "run()": [[290, "run"]], "inputs and outputs": [[290, "inputs-and-outputs"]], "Input files": [[290, "input-files"]], "Symlinks to input files": [[290, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[290, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[290, "downloading-and-symlinking-input-files"]], "Copying input files": [[290, "copying-input-files"]], "Output files": [[290, "output-files"]], "Cached output files": [[290, "cached-output-files"]], "Adding other steps as dependencies": [[290, "adding-other-steps-as-dependencies"]], "Suites": [[291, "suites"], [324, "suites"], [337, "suites"], [342, "suites"]], "Pull-Request (PR) suite": [[291, "pull-request-pr-suite"]], "Nightly suite": [[291, "nightly-suite"]], "Task attributes": [[292, "task-attributes"]], "configure()": [[292, "configure"]], "Overview": [[293, "overview"]], "Code Style": [[293, "code-style"]], "Packages and Modules": [[293, "packages-and-modules"]], "Packages": [[293, "packages"]], "Modules": [[293, "modules"]], "Classes": [[293, "classes"]], "Code sharing": [[293, "code-sharing"]], "\u2026in the polaris framework": [[293, "in-the-polaris-framework"]], "\u2026within a component": [[293, "within-a-component"]], "\u2026within a group of related tasks": [[293, "within-a-group-of-related-tasks"]], "\u2026within a task": [[293, "within-a-task"]], "Quick Start for Developers": [[294, "quick-start-for-developers"]], "Unix Shell": [[294, "unix-shell"]], "Set up a polaris repository: for beginners": [[294, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[294, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[294, "supported-machines"]], "Environments with Albany": [[294, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[294, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[294, "unknown-machines"]], "What the script does": [[294, "what-the-script-does"]], "Optional flags": [[294, "optional-flags"]], "Activating the environment": [[294, "activating-the-environment"]], "Switching between different polaris environments": [[294, "switching-between-different-polaris-environments"]], "Troubleshooting": [[294, "troubleshooting"], [310, "troubleshooting"]], "Creating/updating only the polaris environment": [[294, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[294, "building-e3sm-components"]], "Running polaris from the repo": [[294, "running-polaris-from-the-repo"]], "Code style for polaris": [[294, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[294, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[295, "seaice"]], "SeaIce framework": [[296, "seaice-framework"]], "polaris.seaice.SeaIce": [[297, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[298, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[299, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[300, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[301, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[302, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[303, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[304, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[305, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[306, "seaice-component"]], "Supported Model: MPAS-Seaice": [[307, "supported-model-mpas-seaice"]], "standard_physics_test": [[309, "standard-physics-test"]], "exact_restart_test": [[309, "exact-restart-test"]], "Solver errors when configuring conda environment": [[310, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[310, "proxy-on-lanl-macs"]], "gethostbyname failed": [[310, "gethostbyname-failed"]], "Glossary": [[311, "glossary"], [312, null]], "Polaris": [[312, "polaris"]], "User's guide": [[312, null]], "Developer's guide": [[312, null]], "Tutorials": [[312, null]], "Compass": [[312, "compass"]], "Developer Tutorial: Adding a new test group": [[313, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[313, "getting-started"]], "Making a new test group": [[313, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[313, "adding-a-default-task"]], "Varying resolution and other parameters": [[313, "varying-resolution-and-other-parameters"]], "Adding the init step": [[313, "adding-the-init-step"]], "Creating a horizontal mesh": [[313, "creating-a-horizontal-mesh"]], "Adding a config file": [[313, "adding-a-config-file"]], "Adding the step to the task": [[313, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[313, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[313, "creating-an-initial-condition"]], "Adding plots": [[313, "adding-plots"]], "Adding step outputs": [[313, "adding-step-outputs"]], "Adding validation": [[313, "adding-validation"], [313, "id1"]], "Test things out!": [[313, "test-things-out"]], "Adding the forward step": [[313, "adding-the-forward-step"]], "Defining model config options and streams": [[313, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[313, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[313, "adding-more-validation"]], "Test the task again!": [[313, "test-the-task-again"]], "Adding a visualization step": [[313, "adding-a-visualization-step"]], "Adding the viz step to the task": [[313, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[313, "test-the-task-one-more-time"]], "Adding a second task": [[313, "adding-a-second-task"]], "Enhancements": [[313, "enhancements"]], "Adding model config options in code": [[313, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[313, "adding-dynamic-model-config-options"]], "Computing the cell count": [[313, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[313, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[313, "adding-a-parameter-study"]], "Adding the steps to the task": [[313, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[313, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[313, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[314, "config-files"]], "A \u201cuser\u201d config file": [[314, "a-user-config-file"]], "Test-case config files": [[314, "test-case-config-files"]], "config options": [[315, "config-options"], [316, "config-options"], [317, "config-options"], [318, "config-options"], [319, "config-options"], [320, "config-options"], [325, "config-options"], [325, "id7"], [325, "id14"], [325, "id22"], [325, "id30"], [325, "id37"], [326, "config-options"], [327, "config-options"], [328, "config-options"], [329, "config-options"], [331, "config-options"], [332, "config-options"], [333, "config-options"], [334, "config-options"], [335, "config-options"], [335, "id1"], [335, "id6"], [335, "id13"], [336, "config-options"], [340, "config-options"], [340, "id5"], [340, "id10"], [341, "config-options"]], "Intel on Anvil": [[315, "intel-on-anvil"]], "Gnu on Anvil": [[315, "gnu-on-anvil"]], "Chicoma-CPU": [[316, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[316, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[317, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[317, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[318, "intel-on-compymcnodeface"]], "Slurm job queueing": [[319, "slurm-job-queueing"]], "MPICH": [[319, "mpich"]], "OpenMPI": [[319, "openmpi"]], "No MPI from conda-forge": [[319, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[320, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[320, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[320, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[322, "d-grid-type"]], "uniform": [[322, "uniform"]], "tanh_dz": [[322, "tanh-dz"]], "60layerPHC": [[322, "layerphc"]], "100layerE3SMv1": [[322, "layere3smv1"]], "3D vertical coordinates": [[322, "d-vertical-coordinates"]], "z-star": [[322, "z-star"]], "z-level": [[322, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[324, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[325, "baroclinic-channel"]], "description": [[325, "description"], [325, "id1"], [325, "id8"], [325, "id16"], [325, "id24"], [326, "description"], [327, "description"], [328, "description"], [329, "description"], [331, "description"], [332, "description"], [333, "description"], [334, "description"], [335, "description"], [335, "id2"], [335, "id7"], [336, "description"], [340, "description"], [341, "description"]], "vertical grid": [[325, "vertical-grid"], [325, "id3"], [325, "id10"], [325, "id18"], [325, "id26"], [325, "id33"], [326, "vertical-grid"], [327, "vertical-grid"], [328, "vertical-grid"], [329, "vertical-grid"], [331, "vertical-grid"], [332, "vertical-grid"], [333, "vertical-grid"], [334, "vertical-grid"], [335, "vertical-grid"], [335, "id4"], [335, "id9"], [336, "vertical-grid"]], "initial conditions": [[325, "initial-conditions"], [325, "id4"], [325, "id11"], [325, "id19"], [325, "id27"], [325, "id34"], [326, "initial-conditions"], [327, "initial-conditions"], [328, "initial-conditions"], [329, "initial-conditions"], [331, "initial-conditions"], [332, "initial-conditions"], [333, "initial-conditions"], [334, "initial-conditions"], [335, "initial-conditions"], [335, "id5"], [335, "id10"], [336, "initial-conditions"], [340, "initial-conditions"], [340, "id2"], [340, "id7"], [341, "initial-conditions"]], "forcing": [[325, "forcing"], [325, "id5"], [325, "id12"], [325, "id20"], [325, "id28"], [325, "id35"], [326, "forcing"], [327, "forcing"], [328, "forcing"], [329, "forcing"], [331, "forcing"], [332, "forcing"], [333, "forcing"], [334, "forcing"], [335, "forcing"], [335, "id11"], [336, "forcing"], [340, "forcing"], [340, "id3"], [340, "id8"], [341, "forcing"]], "time step and run duration": [[325, "time-step-and-run-duration"], [325, "id6"], [325, "id13"], [325, "id21"], [325, "id29"], [325, "id36"], [326, "time-step-and-run-duration"], [327, "time-step-and-run-duration"], [328, "time-step-and-run-duration"], [329, "time-step-and-run-duration"], [331, "time-step-and-run-duration"], [332, "time-step-and-run-duration"], [333, "time-step-and-run-duration"], [334, "time-step-and-run-duration"], [335, "time-step-and-run-duration"], [335, "id12"], [336, "time-step-and-run-duration"], [341, "time-step-and-run-duration"]], "cores": [[325, "cores"], [325, "id15"], [325, "id23"], [325, "id31"], [325, "id38"], [326, "cores"], [327, "cores"], [328, "cores"], [329, "cores"], [331, "cores"], [332, "cores"], [333, "cores"], [334, "cores"], [335, "cores"], [335, "id14"], [336, "cores"], [340, "cores"], [340, "id4"], [340, "id9"], [341, "cores"]], "thread": [[325, "thread"]], "correlated tracers 2-d": [[326, "correlated-tracers-2-d"]], "cosine bell": [[327, "cosine-bell"]], "divergent 2-d": [[328, "divergent-2-d"]], "inertial gravity wave": [[331, "inertial-gravity-wave"]], "manufactured solution": [[332, "manufactured-solution"]], "convergence": [[332, "convergence"]], "nondivergent 2-d": [[333, "nondivergent-2-d"]], "rotation 2-d": [[334, "rotation-2-d"]], "single column": [[335, "single-column"], [340, "single-column"]], "<Category of task>": [[336, "ocean-category-of-task"], [341, "seaice-category-of-task"]], "task_name": [[336, "task-name"], [341, "task-name"]], "Quick Start for Users": [[337, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[337, null]], "Loading polaris conda and spack environments": [[337, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[337, "e3sm-supported-machines"]], "Other machines": [[337, "other-machines"]], "Building supported E3SM components as standalone models": [[337, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[337, "setting-up-tasks"]], "Running a task": [[337, "running-a-task"]], "Running with a job script": [[337, "running-with-a-job-script"]], "Sea ice component": [[338, "sea-ice-component"]], "standard physics test": [[340, "standard-physics-test"]], "timestep and run duration": [[340, "timestep-and-run-duration"], [340, "id11"]], "visualization": [[340, "visualization"]], "exact restart test": [[340, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "module": [[60, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[60, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[61, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[62, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[63, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[64, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[65, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[66, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[67, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[68, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[69, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[71, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[74, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[80, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[81, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[85, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[86, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[87, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[88, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[89, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[90, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[91, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[92, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[93, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[94, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[95, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[96, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[97, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[108, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[109, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[111, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[112, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[113, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[114, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[115, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[116, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[117, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[118, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[119, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[120, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[121, "polaris.validate.compare_variables"]], "plot_global_field() (in module polaris.viz)": [[122, "polaris.viz.plot_global_field"]], "plot_horiz_field() (in module polaris.viz)": [[123, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[124, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[125, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[125, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[126, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[127, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[128, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[129, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[130, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[131, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[140, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[140, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[142, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[149, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[149, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[150, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[151, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[153, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[154, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[155, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[155, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[156, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[157, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[158, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[159, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[160, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[161, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[162, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[163, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[163, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[164, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[164, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[166, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[167, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[169, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[170, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[173, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[175, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[177, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[178, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[179, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[179, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[181, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[183, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[185, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[186, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[188, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[190, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[191, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[193, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[194, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[196, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[197, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[197, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[198, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[199, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[199, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[200, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[201, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[203, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[204, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[205, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[205, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[206, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[206, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[207, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[208, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[208, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[209, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.geostrophic.viz)": [[210, "polaris.ocean.tasks.geostrophic.viz.VizMap"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.vizmap method)": [[210, "polaris.ocean.tasks.geostrophic.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.vizmap method)": [[211, "polaris.ocean.tasks.geostrophic.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[221, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[221, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[222, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[223, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[223, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[224, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[225, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[225, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[226, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[227, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[227, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[228, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[229, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[229, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[230, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[231, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[232, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[232, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[233, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[234, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[234, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[235, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[236, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[236, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[237, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[238, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[239, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[239, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[240, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[240, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[241, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[241, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[242, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[242, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[243, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[244, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[244, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[245, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[246, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[246, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[247, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[248, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[249, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[249, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[250, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[251, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[251, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[252, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[253, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[253, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[254, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[254, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[255, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[256, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[256, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[257, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[258, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[258, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[259, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.sphere_transport.viz)": [[260, "polaris.ocean.tasks.sphere_transport.viz.VizMap"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.vizmap method)": [[260, "polaris.ocean.tasks.sphere_transport.viz.VizMap.__init__"]], "runtime_setup() (polaris.ocean.tasks.sphere_transport.viz.vizmap method)": [[261, "polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[262, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[263, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[264, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[265, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[266, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[267, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[268, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[269, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[270, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[271, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[297, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[297, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[298, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[299, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[299, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[300, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[300, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[301, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[302, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[302, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[303, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[303, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[304, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[304, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[305, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})