Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_task", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.pickle_step_after_run", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/inertial_gravity_wave", "developers_guide/ocean/test_groups/manufactured_solution", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.SingleColumn", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/models/index", "developers_guide/seaice/models/mpas_seaice", "developers_guide/seaice/test_groups/index", "developers_guide/seaice/test_groups/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/inertial_gravity_wave", "users_guide/ocean/test_groups/manufactured_solution", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/test_groups/index", "users_guide/seaice/test_groups/single_column", "users_guide/seaice/test_groups/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_task.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.pickle_step_after_run.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/inertial_gravity_wave.md", "developers_guide/ocean/test_groups/manufactured_solution.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.SingleColumn.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/models/index.md", "developers_guide/seaice/models/mpas_seaice.md", "developers_guide/seaice/test_groups/index.md", "developers_guide/seaice/test_groups/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/inertial_gravity_wave.md", "users_guide/ocean/test_groups/manufactured_solution.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/test_groups/index.md", "users_guide/seaice/test_groups/single_column.md", "users_guide/seaice/test_groups/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.validate", "polaris.TestGroup", "polaris.TestGroup.add_task", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.load_dependencies", "polaris.run.pickle_step_after_run", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.validate", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.default.Default.validate", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.Restart.validate", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.validate", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.threads.Threads.validate", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.global_convergence.GlobalConvergence", "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init", "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence", "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.validate", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.convergence.Convergence", "polaris.ocean.tasks.manufactured_solution.convergence.Convergence.validate", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.SingleColumn", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.cvmix.CVMix.validate", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "inertial_gravity_wave", "manufactured_solution", "single_column", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Test Groups", "Overview", "Quick Start for Developers", "seaice", "Seaice framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.SingleColumn", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.validate", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.validate", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "Seaice component", "Models", "MPAS-Seaice", "Test groups", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic_channel", "global_convergence", "Test groups", "inertial gravity wave", "manufactured_solution", "single_column", "test_group_name", "Quick Start for Users", "Sea ice component", "Test groups", "single_column", "test_group_name", "Suites", "Tasks"], "terms": {"templat": [0, 4, 5, 6, 23, 24, 25, 105, 115, 119, 125, 145, 152, 265, 266, 267], "date": [1, 4, 49, 229, 246, 258, 267], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 39, 41, 42, 43, 46, 47, 49, 51, 52, 54, 56, 57, 60, 61, 62, 63, 64, 65, 68, 69, 73, 74, 78, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 119, 120, 125, 128, 129, 130, 131, 137, 139, 141, 143, 144, 146, 148, 149, 151, 153, 156, 158, 159, 161, 164, 167, 168, 170, 171, 173, 175, 177, 180, 182, 187, 188, 190, 192, 195, 197, 202, 203, 205, 207, 210, 212, 213, 215, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 251, 253, 254, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 291], "purpos": [1, 46, 244, 245, 264, 266, 291], "thi": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 20, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 56, 60, 61, 62, 65, 66, 68, 69, 70, 71, 74, 75, 84, 85, 87, 88, 94, 102, 110, 111, 121, 122, 123, 124, 125, 126, 128, 130, 133, 136, 137, 139, 141, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 229, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 250, 251, 253, 254, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 272, 273, 275, 278, 279, 281, 282, 283, 284, 285, 289, 290], "section": [1, 2, 4, 5, 6, 8, 11, 13, 15, 20, 26, 69, 112, 116, 125, 128, 130, 133, 219, 221, 227, 228, 229, 237, 238, 241, 242, 244, 245, 246, 258, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 279, 283, 284, 285, 289], "i": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 20, 25, 30, 33, 34, 35, 39, 40, 42, 49, 52, 54, 68, 69, 74, 84, 85, 88, 92, 98, 101, 102, 105, 107, 110, 111, 113, 115, 120, 121, 123, 124, 125, 128, 130, 143, 145, 152, 172, 187, 189, 202, 204, 212, 221, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 288, 289, 290, 291], "summar": 1, "what": [1, 5, 10, 12, 15, 125, 245, 266, 273, 284, 285, 289], "capabl": [1, 5, 15, 125, 241, 245, 266, 272, 285], "ad": [1, 4, 5, 6, 8, 9, 10, 15, 16, 34, 35, 41, 44, 51, 111, 137, 148, 158, 221, 227, 228, 243, 244, 246, 260, 265, 268, 269, 270, 271, 273, 285], "polari": [1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 121, 123, 124, 125, 128, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 248, 258, 259, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 286, 290, 291], "through": [1, 245, 246, 260, 266], "process": [1, 5, 7, 13, 28, 84, 85, 120, 241, 245, 246, 258, 264, 265, 266], "It": [1, 4, 5, 13, 15, 33, 39, 112, 232, 235, 236, 241, 242, 243, 244, 245, 246, 264, 266, 267, 272, 281, 282], "should": [1, 4, 5, 6, 8, 11, 13, 16, 21, 26, 34, 35, 41, 42, 44, 52, 56, 69, 111, 112, 113, 121, 122, 123, 124, 125, 126, 128, 133, 148, 158, 229, 238, 241, 242, 243, 244, 246, 248, 258, 260, 263, 266, 267, 278, 279, 283, 284, 285, 289], "clear": [1, 245, 266], "new": [1, 4, 13, 18, 21, 33, 42, 46, 51, 54, 61, 68, 74, 88, 106, 107, 143, 151, 170, 184, 187, 199, 202, 212, 221, 227, 228, 241, 245, 246, 260, 263, 264, 265, 285], "code": [1, 4, 6, 8, 11, 13, 33, 128, 229, 238, 241, 242, 243, 248, 258, 264, 265, 267, 274, 278, 283, 285], "do": [1, 4, 8, 10, 13, 15, 16, 115, 125, 241, 243, 246, 263, 264, 265, 266, 272, 279, 285], "current": [1, 4, 5, 7, 10, 20, 30, 33, 40, 110, 111, 125, 130, 212, 229, 233, 237, 238, 241, 245, 246, 248, 258, 260, 262, 264, 265, 266, 267, 272, 275, 278, 279, 281, 282, 283, 285, 290, 291], "doe": [1, 5, 8, 11, 13, 241, 265, 266, 272], "primari": [1, 4, 8, 266, 290], "challeng": 1, "respect": [1, 7, 8, 13, 17, 128, 241, 245, 279, 284, 289], "softwar": [1, 78, 273, 285], "also": [1, 4, 5, 6, 8, 12, 13, 16, 17, 28, 39, 51, 110, 111, 112, 125, 128, 175, 221, 227, 228, 229, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 266, 267, 272, 273, 275, 279, 281, 282, 284, 285, 289, 291], "appropri": [1, 4, 5, 13, 21, 73, 125, 229, 232, 235, 236, 237, 238, 241, 244, 246, 258, 265, 266, 267, 268, 269, 270, 271, 272, 273, 284, 285, 289], "final": [1, 5, 6, 125, 232, 233, 235, 236, 237, 239, 241, 243, 262, 266, 279], "statement": [1, 11, 241, 264], "contain": [1, 4, 5, 6, 7, 8, 15, 17, 18, 22, 23, 24, 37, 50, 53, 80, 83, 89, 90, 91, 92, 96, 97, 98, 105, 113, 114, 128, 135, 221, 227, 228, 238, 239, 240, 241, 245, 246, 248, 258, 260, 264, 266, 267, 272, 276, 281, 282, 284, 285, 286, 289], "gener": [1, 2, 3, 6, 7, 11, 13, 16, 17, 21, 22, 23, 24, 28, 41, 68, 111, 128, 148, 158, 219, 229, 231, 232, 233, 235, 236, 237, 238, 241, 246, 248, 258, 266, 267, 272, 279, 281, 282, 285], "regard": 1, "success": [1, 52, 229, 238, 258, 266, 267], "last": [1, 242, 246, 278, 285], "modifi": [1, 7, 8, 12, 13, 20, 32, 44, 105, 107, 130, 154, 232, 235, 236, 241, 243, 244, 246, 265, 266, 267, 278, 285], "add": [1, 4, 5, 6, 8, 12, 13, 19, 21, 22, 23, 24, 25, 34, 35, 36, 43, 44, 47, 67, 72, 77, 105, 106, 107, 115, 116, 119, 120, 125, 145, 152, 232, 238, 241, 243, 244, 245, 246, 264, 266, 267, 273, 279], "your": [1, 3, 4, 5, 10, 125, 229, 245, 246, 258, 263, 266, 267, 268, 269, 272, 273, 279, 285], "list": [1, 5, 6, 8, 13, 16, 20, 33, 42, 43, 49, 50, 84, 85, 102, 109, 110, 111, 135, 156, 164, 167, 180, 192, 195, 197, 207, 241, 242, 243, 244, 245, 246, 264, 265, 266, 267, 269, 272, 273, 279, 285, 290, 291], "appear": [1, 125, 241, 266], "each": [1, 4, 5, 6, 7, 11, 12, 13, 15, 16, 39, 42, 57, 63, 64, 73, 99, 120, 125, 128, 140, 150, 160, 164, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 262, 264, 266, 267, 272, 275, 278, 279, 281, 282, 284, 285, 289, 290], "under": [1, 15, 33, 34, 110, 125, 128, 231, 241, 242, 246, 265, 275, 291], "head": [1, 231, 269], "one": [1, 4, 5, 6, 9, 13, 15, 16, 17, 20, 32, 33, 35, 42, 49, 54, 109, 111, 125, 128, 130, 138, 140, 142, 149, 150, 155, 160, 183, 198, 211, 214, 229, 232, 235, 236, 237, 241, 243, 244, 245, 246, 251, 255, 262, 263, 264, 265, 267, 272, 273, 275, 278, 279, 281, 282, 284, 285, 288, 289, 290, 291], "correspond": [1, 5, 6, 16, 110, 111, 125, 128, 229, 241, 246, 258, 278], "between": [1, 4, 5, 7, 11, 12, 13, 15, 16, 20, 32, 35, 62, 69, 70, 73, 76, 88, 94, 110, 111, 130, 149, 184, 199, 221, 227, 228, 233, 238, 241, 244, 245, 251, 272, 275, 278, 281, 282], "propos": 1, "discuss": [1, 5, 128, 241, 243, 244, 245, 266, 278, 279], "technic": [1, 6], "issu": [1, 5, 241, 242, 246, 279, 281, 282], "rather": [1, 5, 7, 8, 10, 12, 13, 33, 35, 51, 125, 232, 241, 243, 244, 246, 263, 266, 275], "focu": [1, 266], "model": [1, 4, 9, 20, 21, 25, 26, 28, 33, 35, 109, 114, 119, 121, 122, 123, 124, 125, 126, 139, 143, 145, 149, 151, 152, 153, 159, 172, 189, 204, 212, 229, 232, 235, 236, 237, 238, 242, 243, 245, 246, 251, 258, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 278, 281, 282, 284, 289], "To": [1, 4, 5, 11, 15, 16, 111, 125, 128, 229, 241, 245, 246, 258, 260, 266, 268, 269, 270, 271, 272, 273, 275, 279, 285], "extent": [1, 12, 15, 266, 278], "possibl": [1, 7, 10, 64, 128, 231, 241, 242, 245, 266, 275], "rel": [1, 4, 8, 15, 16, 35, 36, 49, 51, 109, 110, 111, 229, 238, 241, 245, 246, 258, 264, 266, 278, 285, 291], "independ": [1, 4, 242, 264], "other": [1, 4, 5, 6, 7, 8, 9, 12, 15, 17, 33, 34, 36, 51, 121, 140, 150, 160, 233, 237, 238, 239, 243, 244, 245, 246, 263, 264, 265, 267, 268, 278, 291], "thu": [1, 6, 13, 266], "allow": [1, 7, 15, 16, 20, 30, 33, 40, 51, 111, 125, 128, 130, 241, 244, 264, 266, 267, 272, 275, 279, 291], "clean": [1, 5, 241, 243, 246], "plan": [1, 12, 229, 235, 236, 241, 258, 264, 281, 282, 291], "For": [1, 2, 4, 5, 6, 11, 13, 15, 17, 121, 125, 231, 232, 235, 236, 237, 241, 245, 246, 264, 266, 267, 268, 276, 279, 281, 282, 285, 286, 291], "you": [1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 121, 122, 123, 124, 125, 126, 229, 238, 241, 243, 245, 246, 258, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 279, 285, 290, 291], "can": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 30, 33, 34, 35, 40, 42, 45, 65, 68, 70, 89, 93, 94, 96, 109, 111, 121, 122, 123, 124, 125, 126, 128, 229, 232, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 281, 282, 285, 290, 291], "provid": [1, 2, 4, 7, 8, 13, 15, 16, 17, 35, 92, 98, 110, 111, 115, 125, 128, 138, 140, 142, 150, 155, 160, 183, 198, 211, 214, 229, 232, 233, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 255, 258, 262, 263, 264, 265, 266, 267, 272, 276, 279, 284, 285], "an": [1, 2, 4, 5, 6, 8, 10, 12, 15, 16, 17, 20, 28, 33, 34, 35, 36, 54, 61, 63, 64, 90, 97, 105, 107, 110, 111, 112, 119, 125, 130, 173, 232, 237, 238, 239, 241, 242, 243, 244, 245, 246, 263, 264, 265, 267, 269, 272, 275, 281, 285, 290, 291], "intend": [1, 5, 7, 8, 242, 267, 282, 291], "meet": 1, "includ": [1, 4, 5, 6, 7, 8, 12, 13, 16, 17, 35, 41, 42, 52, 102, 112, 125, 128, 137, 148, 158, 164, 232, 233, 237, 239, 241, 242, 243, 244, 245, 246, 248, 263, 264, 265, 266, 267, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 286, 288, 289, 290, 291], "detail": [1, 2, 4, 6, 8, 10, 11, 12, 57, 111, 231, 233, 239, 241, 243, 245, 246, 263, 266, 279, 285], "pde": 1, "solver": [1, 243, 246, 265, 285], "similar": [1, 4, 7, 8, 11, 12, 13, 16, 122, 125, 126, 239, 243, 244, 245, 246, 266, 285], "well": [1, 5, 7, 8, 11, 12, 125, 128, 224, 232, 235, 236, 237, 241, 246, 264, 266, 267, 279, 285, 291], "perform": [1, 4, 7, 13, 15, 16, 38, 39, 41, 45, 61, 110, 111, 125, 141, 143, 148, 153, 158, 163, 170, 178, 187, 202, 210, 212, 213, 229, 232, 233, 235, 236, 237, 241, 242, 243, 254, 264, 265, 266, 267, 272, 278, 290], "In": [1, 5, 6, 7, 8, 10, 13, 15, 16, 33, 125, 128, 233, 239, 241, 242, 243, 244, 245, 246, 265, 266, 267, 272, 275, 279, 281, 284, 285, 289, 290, 291], "steer": 1, "awai": 1, "from": [1, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 20, 22, 23, 26, 33, 34, 35, 42, 44, 49, 52, 54, 78, 80, 85, 89, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 105, 106, 107, 110, 111, 113, 115, 116, 119, 120, 125, 130, 133, 138, 143, 167, 172, 175, 180, 189, 192, 195, 204, 207, 225, 229, 231, 232, 233, 235, 236, 237, 238, 243, 244, 245, 248, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 281, 282, 284, 285, 288, 289, 290, 291], "low": [1, 113], "level": [1, 10, 11, 12, 16, 17, 128, 221, 222, 223, 224, 225, 226, 227, 228, 232, 239, 240, 241, 243, 244, 266, 267, 278, 279, 281, 282, 283, 284, 289], "variabl": [1, 4, 12, 17, 18, 20, 33, 42, 45, 46, 61, 68, 74, 78, 88, 89, 93, 96, 110, 111, 113, 114, 115, 120, 125, 128, 130, 137, 143, 146, 156, 164, 166, 167, 170, 175, 177, 180, 184, 187, 190, 192, 195, 197, 199, 202, 205, 207, 212, 213, 221, 227, 228, 231, 237, 243, 245, 246, 252, 255, 258, 263, 266, 268, 269, 270, 271, 272, 273, 276, 278, 284, 285, 286, 289], "declar": [1, 6], "interfac": [1, 9, 219, 220, 221, 227, 228, 241, 245, 246, 265, 266, 275], "sequenc": [1, 4, 13, 240, 241, 245, 264, 266, 285, 290, 291], "If": [1, 4, 5, 6, 7, 8, 11, 13, 16, 17, 20, 30, 33, 35, 40, 43, 44, 54, 84, 85, 86, 110, 111, 113, 121, 122, 123, 124, 125, 126, 130, 143, 187, 202, 212, 232, 241, 243, 244, 245, 246, 260, 263, 264, 266, 267, 272, 273, 275, 279, 284, 285, 289], "want": [1, 4, 5, 10, 13, 15, 16, 44, 125, 128, 241, 244, 246, 263, 266, 267, 272, 273, 283, 285, 291], "math": 1, "syntax": [1, 266], "almost": [1, 8], "ident": [1, 4, 16, 139, 149, 159, 232, 242, 245, 251, 266, 278], "latex": 1, "b": [1, 4, 5, 246, 264, 266, 285], "2": [1, 5, 12, 13, 16, 34, 125, 159, 231, 232, 239, 242, 246, 260, 266, 267, 269, 272, 275, 278, 279, 281, 282, 285], "2ab": 1, "imag": [1, 6, 17, 112, 113, 244, 266, 284, 289], "keep": [1, 4, 5, 8, 13, 20, 51, 241, 243, 246, 266, 284, 289], "mind": [1, 4, 266], "quit": [1, 239, 241, 243, 266], "small": [1, 8, 39, 125, 241, 244, 266, 268, 269, 274, 275, 283, 285], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 29, 30, 33, 35, 39, 40, 42, 46, 51, 73, 84, 85, 102, 111, 116, 125, 128, 130, 143, 187, 202, 212, 221, 224, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 281, 282, 283, 284, 285, 288, 289, 290, 291], "prefer": [1, 125, 241, 242, 266, 267], "png": [1, 12, 17, 233, 266], "okai": [1, 5, 241, 266], "size": [1, 12, 63, 64, 73, 128, 132, 134, 135, 232, 244, 266, 267, 278, 279, 281, 282, 283, 284, 289], "repo": [1, 4, 5, 125, 229, 258, 265, 266, 286], "exampl": [1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 125, 238, 239, 241, 242, 243, 244, 245, 246, 263, 264, 266, 267, 269, 275, 284, 285, 290, 291], "centric": 1, "pseudo": 1, "link": [1, 6, 10, 13, 35, 54, 125, 241, 244, 246, 266, 272, 276, 285, 286], "actual": [1, 4, 5, 11, 241, 243, 246, 266], "sourc": [1, 5, 6, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 241, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 266, 267, 268, 269, 270, 271, 272, 273, 285], "project": [1, 4, 5, 6, 60, 92, 98, 229, 245, 246, 258, 260, 266, 267, 268, 269, 272, 285, 286], "manag": [1, 263, 272], "item": [1, 266], "git": [1, 5, 14, 87, 229, 246, 258, 266, 267, 285], "branch": [1, 4, 125, 229, 238, 241, 246, 258, 265, 266, 285], "timelin": 1, "staf": 1, "via": [1, 4, 5, 13, 241, 246, 272], "block": [1, 243], "like": [1, 4, 5, 6, 7, 8, 9, 10, 13, 16, 89, 93, 96, 125, 128, 239, 241, 244, 245, 246, 263, 265, 266, 267, 272, 278, 279, 285, 291], "def": [1, 6, 8, 10, 11, 15, 17, 238, 241, 243, 244, 245, 266], "example_funct": 1, "foo": [1, 245], "return": [1, 6, 26, 50, 52, 55, 62, 63, 64, 69, 73, 80, 83, 84, 94, 103, 104, 105, 107, 115, 119, 120, 128, 131, 133, 135, 144, 168, 171, 185, 186, 188, 200, 201, 203, 219, 222, 223, 224, 225, 226, 245, 266, 279], "0": [1, 4, 5, 6, 12, 13, 15, 16, 17, 63, 89, 93, 96, 111, 113, 121, 122, 123, 124, 125, 126, 128, 221, 226, 227, 228, 231, 233, 241, 244, 245, 260, 263, 266, 267, 269, 272, 275, 276, 278, 279, 281, 282, 283, 284, 285, 286, 289], "how": [1, 4, 5, 11, 13, 68, 128, 240, 241, 243, 245, 246, 267, 272, 273], "show": [1, 6, 12, 241, 266, 272, 273, 278, 279, 284, 289], "we": [1, 4, 6, 8, 10, 12, 13, 15, 16, 17, 124, 125, 128, 134, 232, 233, 235, 236, 237, 240, 241, 243, 244, 245, 246, 262, 265, 266, 267, 269, 271, 272, 273, 275, 279, 283, 285, 290], "have": [1, 3, 4, 5, 6, 8, 10, 11, 13, 15, 16, 26, 33, 34, 99, 109, 124, 125, 128, 133, 167, 180, 192, 195, 207, 229, 232, 235, 236, 239, 241, 242, 243, 244, 245, 246, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 285, 290, 291], "met": 1, "which": [1, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 23, 24, 26, 35, 46, 50, 90, 97, 105, 109, 111, 113, 115, 125, 128, 133, 139, 149, 159, 185, 186, 200, 201, 229, 231, 238, 240, 241, 243, 244, 245, 246, 251, 266, 267, 269, 272, 275, 278, 279, 281, 282, 283, 284, 285, 290, 291], "regress": [1, 163, 232, 233, 242, 264, 265, 266, 278, 279, 285, 290], "suit": [1, 5, 6, 11, 16, 33, 42, 56, 57, 101, 102, 104, 125, 232, 240, 241, 243, 246, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 278], "would": [1, 4, 8, 13, 16, 20, 30, 33, 40, 43, 84, 85, 88, 111, 125, 128, 130, 143, 187, 202, 212, 232, 239, 241, 243, 244, 245, 246, 263, 266, 272, 275, 285], "thei": [1, 4, 5, 6, 7, 11, 12, 13, 16, 17, 33, 34, 35, 44, 51, 68, 102, 116, 125, 128, 229, 232, 233, 238, 240, 241, 243, 244, 245, 246, 260, 264, 265, 266, 267, 272, 275, 278, 279, 285, 290], "need": [1, 3, 4, 5, 6, 10, 11, 12, 13, 15, 25, 43, 51, 69, 125, 128, 145, 152, 229, 238, 241, 243, 245, 246, 258, 260, 263, 265, 266, 267, 268, 272, 273, 275, 278, 279, 285, 290], "configur": [1, 4, 5, 6, 8, 10, 13, 15, 30, 33, 40, 42, 52, 56, 83, 84, 85, 86, 87, 109, 125, 128, 219, 221, 222, 223, 227, 228, 232, 241, 244, 245, 265, 266, 267, 269, 272, 273, 275, 281, 282, 284, 285, 289, 291], "work": [1, 4, 5, 7, 10, 11, 13, 14, 15, 33, 35, 36, 38, 41, 42, 49, 56, 87, 101, 109, 124, 125, 148, 158, 175, 177, 178, 238, 239, 240, 241, 242, 243, 245, 246, 263, 264, 266, 267, 272, 279, 283, 285, 291], "properli": [1, 121, 123, 124, 266, 267, 285], "addit": [1, 6, 8, 33, 237, 238, 239, 241, 243, 244, 245, 246, 266], "modif": [1, 6, 241, 260], "nightli": [1, 246, 285, 290], "anoth": [1, 5, 6, 8, 9, 12, 15, 16, 33, 34, 35, 110, 111, 229, 241, 243, 244, 245, 246, 264, 266, 267, 278, 285, 290, 291], "might": [1, 5, 10, 13, 15, 17, 125, 241, 244, 246, 266, 267, 272, 285], "made": [1, 4, 15, 33, 36, 42, 111, 241, 243, 245, 260, 264, 266, 291], "ensur": [1, 8, 13, 51, 125, 232, 245, 246, 279, 283], "continu": [1, 5, 241, 266], "expect": [1, 11, 15, 125, 238, 241, 246, 266, 279, 283], "page": [2, 6, 125, 268], "auto": 2, "summari": [2, 269], "more": [2, 4, 5, 8, 10, 11, 12, 13, 15, 16, 33, 42, 49, 69, 125, 128, 231, 232, 233, 239, 241, 242, 243, 245, 246, 248, 264, 272, 276, 278, 279, 284, 285, 286, 289, 291], "relev": [2, 6, 8, 128, 235, 236, 266, 268, 269, 270, 271, 272, 273, 284, 285, 289], "main": [2, 5, 6, 8, 13, 38, 125, 178, 238, 244, 245, 246, 266, 291], "part": [2, 4, 5, 6, 11, 13, 16, 17, 33, 42, 143, 170, 187, 202, 212, 232, 235, 236, 241, 242, 245, 246, 265, 266, 275], "document": [2, 8, 13, 241, 245, 265, 267, 285], "ocean": [2, 4, 6, 8, 9, 10, 12, 13, 16, 17, 18, 26, 35, 46, 109, 125, 230, 232, 233, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 264, 265, 266, 267, 272, 274, 275, 277, 278, 279, 281, 282, 283, 284, 285, 290, 291], "seaic": [2, 18, 35, 241, 259, 262, 265, 285, 286, 289], "As": [3, 4, 5, 12, 16, 63, 128, 241, 242, 243, 244, 245, 246, 266, 267, 275, 279, 283, 290], "long": [3, 20, 30, 33, 40, 84, 85, 130, 143, 187, 202, 212, 241, 266, 278, 285], "follow": [3, 4, 6, 12, 13, 17, 60, 125, 221, 227, 228, 229, 231, 232, 241, 242, 243, 246, 258, 260, 263, 266, 267, 272, 273, 275, 277, 279, 281, 282, 283, 285, 288], "procedur": [3, 125, 246, 266, 273], "conda": [3, 4, 14, 87, 121, 123, 124, 125, 229, 238, 245, 258, 265, 266, 267, 268, 269, 270, 271, 273], "environ": [3, 4, 121, 123, 124, 229, 238, 245, 258, 265, 266, 267, 268, 269, 270, 271, 272, 273], "spack": [3, 4, 121, 123, 124, 263, 265, 266, 268, 269, 270, 271, 272, 273], "compil": [3, 4, 5, 13, 121, 122, 123, 124, 125, 126, 263, 265, 266, 268, 269, 270, 271, 272, 273, 285], "system": [3, 4, 5, 20, 30, 33, 40, 84, 85, 86, 121, 123, 124, 125, 130, 143, 187, 202, 212, 241, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 285], "modul": [3, 4, 8, 9, 11, 13, 14, 22, 23, 24, 60, 80, 105, 121, 123, 124, 125, 128, 238, 239, 241, 243, 244, 248, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 285], "set": [3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 21, 22, 23, 24, 25, 33, 35, 41, 69, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 103, 105, 107, 109, 110, 111, 112, 113, 121, 122, 123, 124, 125, 126, 143, 145, 148, 152, 158, 163, 165, 172, 189, 204, 212, 221, 227, 228, 229, 231, 232, 233, 235, 236, 237, 240, 241, 243, 244, 245, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 281, 282, 283, 284, 289, 290], "up": [3, 4, 5, 6, 7, 9, 10, 13, 15, 16, 21, 22, 23, 24, 33, 41, 42, 75, 87, 99, 100, 103, 109, 110, 111, 121, 122, 123, 124, 125, 126, 128, 148, 158, 163, 229, 232, 233, 235, 236, 237, 240, 241, 243, 245, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 284, 289, 291], "alreadi": [3, 5, 10, 13, 44, 54, 125, 128, 143, 212, 243, 245, 246, 266, 267, 272, 275, 279, 285], "packag": [3, 4, 5, 6, 8, 9, 12, 13, 14, 22, 23, 24, 35, 44, 53, 80, 87, 105, 109, 115, 125, 238, 239, 240, 241, 243, 244, 246, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 285], "avail": [3, 4, 6, 10, 13, 16, 17, 20, 30, 33, 36, 37, 40, 50, 57, 83, 84, 85, 125, 130, 143, 187, 202, 212, 233, 241, 243, 245, 246, 266, 268, 269, 270, 271, 273, 278, 285, 290], "Then": [3, 5, 6, 10, 121, 122, 123, 124, 125, 126, 229, 232, 235, 236, 237, 238, 241, 243, 244, 246, 258, 266, 272, 278, 285], "run": [3, 4, 5, 6, 9, 11, 15, 16, 17, 20, 25, 30, 33, 34, 36, 39, 40, 42, 43, 49, 60, 83, 84, 85, 94, 109, 111, 124, 125, 130, 141, 143, 145, 149, 152, 156, 161, 167, 170, 172, 180, 187, 189, 192, 195, 202, 204, 207, 210, 212, 213, 217, 229, 232, 233, 235, 236, 237, 239, 240, 242, 243, 244, 245, 251, 252, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 290, 291], "script": [3, 4, 5, 11, 17, 48, 56, 122, 125, 126, 245, 264, 265, 266, 269, 272], "doc": [3, 6, 243, 266, 273], "cd": [3, 5, 229, 246, 258, 266, 269, 285], "rm": 3, "rf": 3, "developers_guid": [3, 266], "_build": 3, "make": [3, 4, 5, 10, 11, 15, 16, 20, 29, 35, 51, 62, 63, 65, 78, 111, 121, 122, 123, 124, 125, 126, 130, 134, 139, 149, 159, 177, 221, 227, 228, 229, 232, 241, 243, 244, 245, 246, 251, 258, 264, 267, 268, 269, 270, 271, 272, 273, 278, 279, 285, 290], "html": [3, 276], "view": [3, 235, 236, 246, 281, 282], "open": [3, 5, 246, 266], "index": [3, 16, 113, 221, 222, 223, 224, 225, 226, 227, 228, 243, 244, 266], "act": [4, 245, 275], "essenti": [4, 13], "4": [4, 6, 12, 13, 16, 125, 139, 141, 210, 213, 232, 235, 236, 237, 241, 243, 266, 267, 272, 278, 281, 282, 283, 285], "These": [4, 5, 7, 13, 16, 18, 33, 125, 128, 229, 231, 238, 241, 243, 245, 246, 258, 260, 265, 266, 267, 272, 278, 285, 290, 291], "user": [4, 5, 6, 7, 8, 10, 13, 15, 16, 33, 42, 43, 51, 56, 87, 111, 125, 128, 232, 235, 236, 237, 241, 242, 243, 244, 262, 263, 264, 266, 269, 272, 273, 276, 278, 279, 286], "describ": [4, 6, 13, 15, 87, 105, 107, 110, 111, 120, 128, 232, 233, 235, 236, 237, 240, 241, 242, 243, 245, 246, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 279, 285], "below": [4, 5, 13, 20, 30, 33, 40, 84, 85, 125, 130, 143, 187, 202, 212, 229, 239, 241, 243, 244, 246, 266, 267, 272, 275, 279, 281, 282, 283, 285], "when": [4, 5, 11, 13, 15, 16, 21, 22, 23, 24, 26, 33, 34, 39, 42, 43, 51, 52, 54, 57, 101, 110, 111, 125, 128, 133, 226, 232, 233, 235, 236, 237, 241, 243, 244, 245, 246, 265, 266, 268, 269, 270, 271, 273, 275, 278, 279, 283, 285, 291], "instal": [4, 5, 125, 246, 266, 272, 273, 285], "abov": [4, 6, 13, 16, 125, 239, 241, 242, 243, 244, 245, 246, 266, 267, 279, 281, 282, 283, 285, 290], "develop": [4, 5, 6, 7, 11, 12, 17, 125, 128, 229, 231, 238, 241, 242, 245, 260, 263, 267, 272, 276, 285], "local": [4, 5, 7, 10, 33, 35, 42, 229, 239, 241, 243, 246, 258, 263, 266, 267, 272, 273, 275], "off": [4, 5, 246, 263], "http": [4, 6, 10, 54, 241, 245, 263, 265, 266, 267, 273, 276, 285, 286], "github": [4, 5, 6, 245, 246, 265, 266, 267, 276, 285, 286], "com": [4, 5, 6, 54, 245, 246, 265, 266, 267, 285, 286], "e3sm": [4, 6, 9, 10, 33, 114, 125, 229, 238, 241, 242, 243, 245, 258, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 286], "creat": [4, 7, 10, 11, 12, 13, 14, 15, 18, 20, 33, 35, 39, 42, 46, 54, 61, 62, 68, 69, 74, 88, 95, 109, 114, 125, 128, 137, 139, 141, 143, 146, 149, 151, 153, 156, 159, 161, 164, 167, 170, 173, 175, 177, 180, 182, 184, 187, 190, 192, 195, 197, 199, 202, 205, 207, 210, 212, 213, 215, 217, 221, 227, 228, 233, 237, 238, 241, 242, 243, 244, 245, 251, 253, 254, 256, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 279, 285], "see": [4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 121, 123, 124, 125, 232, 233, 236, 241, 243, 246, 248, 263, 266, 267, 272, 276, 277, 278, 283, 284, 285, 286, 288, 289, 290, 291], "mode": [4, 13, 238, 246, 264, 265, 266, 285], "mean": [4, 16, 168, 233, 235, 236, 246, 266, 275, 278, 281, 282, 290], "chang": [4, 5, 7, 13, 15, 16, 68, 99, 100, 229, 238, 241, 242, 243, 245, 246, 248, 258, 264, 266, 267, 269, 273, 275, 278, 285, 290], "reflect": [4, 246], "call": [4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 28, 33, 39, 42, 43, 44, 60, 94, 101, 125, 128, 232, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 263, 264, 265, 266, 267, 272, 273, 285], "tool": [4, 5, 8, 11, 13, 15, 229, 238, 241, 246, 258, 265, 266, 267], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 25, 26, 30, 33, 34, 35, 39, 40, 42, 49, 52, 56, 69, 78, 81, 84, 85, 88, 94, 101, 111, 112, 113, 114, 115, 120, 121, 125, 128, 130, 131, 132, 133, 134, 143, 144, 145, 152, 164, 167, 171, 175, 187, 188, 202, 203, 212, 219, 221, 222, 223, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 281, 282, 283, 284, 285, 288, 290, 291], "task": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 32, 33, 36, 37, 39, 40, 41, 46, 47, 50, 57, 60, 61, 66, 68, 71, 74, 83, 84, 85, 87, 88, 99, 100, 101, 102, 109, 110, 111, 125, 128, 130, 132, 134, 229, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 244, 246, 248, 258, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 286, 289, 290], "support": [4, 5, 7, 12, 15, 33, 128, 221, 227, 228, 231, 233, 241, 243, 244, 245, 265, 266, 267, 269, 273, 275, 278, 283, 291], "machin": [4, 7, 33, 35, 42, 55, 56, 87, 109, 229, 241, 243, 245, 258, 265, 266, 267, 268, 269, 270, 271, 273], "option": [4, 6, 8, 12, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 40, 42, 43, 44, 49, 51, 52, 54, 55, 56, 57, 61, 67, 68, 69, 72, 74, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 102, 105, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 125, 130, 133, 143, 145, 152, 154, 165, 172, 184, 187, 189, 199, 202, 204, 212, 219, 221, 222, 223, 227, 228, 229, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 253, 258, 260, 263, 265, 267, 275, 277, 285, 291], "h": [4, 13, 266], "t": [4, 5, 6, 8, 10, 11, 13, 33, 34, 120, 125, 128, 143, 185, 186, 200, 201, 212, 235, 236, 241, 243, 245, 246, 263, 266, 267, 269, 271, 272, 277, 278, 281, 282, 285, 290, 291], "test": [4, 6, 7, 8, 13, 17, 18, 19, 33, 42, 46, 47, 49, 50, 56, 83, 84, 85, 88, 99, 100, 104, 125, 129, 136, 137, 139, 141, 143, 149, 151, 153, 154, 156, 157, 159, 161, 163, 164, 165, 167, 169, 170, 173, 175, 176, 177, 179, 180, 181, 182, 184, 187, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 253, 254, 256, 257, 258, 262, 264, 265, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 285, 286, 289, 290, 291], "n": [4, 5, 62, 69, 70, 76, 241, 266, 269, 272, 273, 278, 279, 281, 282, 284, 285, 289], "number": [4, 5, 7, 12, 13, 20, 27, 30, 32, 33, 37, 39, 40, 55, 56, 57, 61, 62, 63, 64, 65, 73, 83, 84, 85, 88, 125, 128, 130, 131, 132, 134, 143, 144, 168, 171, 184, 187, 188, 199, 202, 203, 212, 229, 232, 235, 236, 241, 242, 243, 244, 245, 264, 266, 267, 272, 275, 277, 278, 279, 281, 282, 283, 284, 285, 289], "v": [4, 246, 266, 281, 282, 290], "By": [4, 13, 16, 34, 35, 128, 229, 238, 243, 258, 266, 267, 278, 283], "default": [4, 6, 8, 13, 16, 17, 20, 33, 34, 35, 42, 49, 56, 69, 74, 79, 87, 88, 89, 93, 96, 102, 106, 109, 113, 121, 123, 124, 125, 128, 130, 143, 210, 212, 213, 229, 233, 235, 236, 237, 238, 241, 243, 244, 246, 258, 260, 265, 267, 268, 269, 270, 271, 272, 273, 275, 279, 283, 284, 285, 289, 291], "all": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 20, 33, 40, 42, 50, 84, 85, 87, 125, 128, 129, 130, 137, 143, 187, 202, 212, 221, 227, 228, 229, 232, 238, 239, 241, 242, 243, 244, 245, 246, 249, 258, 264, 265, 266, 267, 272, 275, 276, 278, 279, 284, 285, 286, 289, 291], "testcas": [4, 266, 267, 278, 283, 285], "example_compact": [4, 229, 238, 258, 267], "1km": [4, 243, 244, 266, 278, 285], "test1": 4, "1": [4, 6, 12, 13, 15, 16, 17, 33, 63, 121, 122, 123, 124, 125, 126, 128, 139, 143, 159, 187, 202, 212, 221, 227, 228, 232, 233, 235, 236, 237, 239, 241, 243, 246, 260, 263, 266, 267, 269, 272, 273, 275, 278, 279, 281, 282, 283, 284, 285], "test2": 4, "displai": [4, 7, 273], "path": [4, 5, 8, 10, 13, 16, 33, 35, 36, 42, 49, 51, 52, 54, 57, 60, 87, 109, 110, 111, 113, 125, 229, 238, 241, 243, 245, 246, 258, 264, 266, 267, 268, 269, 270, 271, 272, 273, 285, 291], "directori": [4, 5, 7, 10, 11, 13, 14, 16, 17, 33, 35, 36, 41, 42, 49, 54, 56, 87, 101, 109, 110, 111, 125, 148, 158, 175, 177, 229, 232, 238, 240, 241, 242, 243, 245, 246, 258, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 285, 291], "help": [4, 5, 12, 125, 239, 241, 246, 265, 266, 272, 276, 286], "messag": [4, 7, 16, 125, 241, 243, 263, 273], "task_expr": [4, 57], "flag": [4, 5, 125, 241, 245, 263, 264, 266, 267, 276, 278, 285, 286], "suppli": [4, 5, 6, 16, 120, 125, 241, 246, 266], "substr": [4, 125], "regular": [4, 17, 57, 62, 69, 164, 167, 266, 268, 271, 272, 273, 285], "express": [4, 57], "subset": 4, "think": [4, 266], "search": [4, 57, 269], "within": [4, 6, 7, 8, 9, 10, 11, 13, 16, 30, 33, 35, 36, 40, 42, 53, 109, 110, 111, 125, 232, 235, 236, 238, 239, 241, 242, 243, 244, 246, 248, 260, 264, 266, 267, 269, 272, 279, 283, 284, 289], "name": [4, 6, 7, 8, 12, 13, 15, 17, 18, 20, 22, 23, 24, 26, 27, 33, 34, 35, 42, 44, 46, 52, 54, 55, 56, 57, 61, 68, 74, 78, 80, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 104, 105, 109, 110, 111, 112, 113, 114, 115, 119, 125, 128, 130, 133, 135, 137, 143, 151, 168, 170, 173, 175, 177, 212, 220, 238, 241, 243, 244, 245, 246, 253, 264, 266, 267, 273, 278, 285, 290], "singl": [4, 7, 17, 113, 125, 209, 210, 213, 215, 237, 241, 243, 245, 248, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 272, 279, 281, 282, 283, 288], "given": [4, 6, 7, 12, 13, 15, 16, 18, 20, 52, 63, 73, 80, 84, 85, 102, 105, 107, 110, 111, 115, 128, 130, 153, 168, 224, 232, 233, 237, 241, 243, 263, 265, 266, 267, 278, 279, 283, 284, 285, 289, 290], "instead": [4, 5, 11, 13, 20, 102, 121, 125, 241, 243, 245, 246, 266, 268, 285, 290], "pass": [4, 7, 11, 12, 13, 16, 42, 73, 111, 112, 238, 241, 243, 244, 245, 246, 264, 285], "similarli": [4, 7, 229, 241, 246, 272, 285], "compon": [4, 5, 6, 7, 8, 9, 12, 20, 33, 35, 42, 46, 56, 59, 87, 109, 114, 125, 130, 136, 143, 163, 170, 179, 187, 194, 202, 209, 212, 239, 240, 241, 242, 243, 244, 249, 250, 260, 264, 265, 266, 267, 272, 274, 277, 291], "result": [4, 12, 16, 52, 64, 73, 110, 111, 125, 128, 139, 149, 156, 159, 161, 217, 232, 233, 241, 242, 245, 246, 251, 256, 264, 266, 267, 278, 279, 284, 289, 290], "verbos": [4, 5, 57, 59, 125, 241, 266, 290], "about": [4, 5, 6, 7, 11, 13, 16, 33, 88, 114, 128, 241, 243, 244, 245, 246, 266, 267, 269], "its": [4, 5, 6, 7, 11, 15, 17, 33, 44, 94, 99, 100, 106, 125, 238, 239, 241, 242, 243, 244, 245, 246, 264, 266, 267, 268, 279, 285, 291], "descript": [4, 6, 266, 267, 276, 286], "short": [4, 141, 210, 213, 241, 242, 243, 245, 254, 266, 278], "core": [4, 6, 7, 13, 20, 30, 32, 33, 35, 37, 39, 40, 42, 56, 83, 84, 85, 109, 125, 128, 129, 130, 139, 141, 210, 213, 232, 237, 238, 241, 242, 243, 244, 245, 260, 264, 266, 267, 268, 269, 270, 271, 272, 273, 285, 290], "subdirectori": [4, 7, 12, 20, 33, 35, 42, 57, 61, 68, 74, 88, 130, 143, 175, 177, 212, 232, 239, 241, 243, 245, 266, 285, 291], "step": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30, 42, 43, 49, 61, 66, 68, 71, 74, 75, 83, 85, 87, 88, 94, 99, 100, 101, 102, 111, 125, 128, 130, 135, 137, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 164, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 187, 189, 190, 191, 192, 193, 195, 196, 198, 202, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 245, 248, 253, 255, 256, 257, 262, 264, 265, 267, 273, 275, 290, 291], "tempat": 4, "subdir": [4, 15, 20, 33, 42, 61, 68, 74, 88, 130, 143, 175, 177, 212, 241, 243, 266], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 6, 8, 11, 12, 13, 16, 42, 101, 111, 229, 238, 241, 243, 244, 258, 264, 265, 266, 276, 286], "must": [4, 6, 10, 13, 16, 17, 20, 23, 24, 33, 36, 38, 109, 112, 113, 125, 128, 130, 178, 231, 241, 243, 244, 246, 266, 275, 291], "built": [4, 13, 109, 125, 229, 238, 246, 258, 265, 267, 272, 285], "execut": [4, 7, 13, 16, 20, 109, 125, 130, 229, 238, 241, 246, 258, 266, 267, 268, 269, 270, 271, 272, 273, 285], "standalon": [4, 13, 124, 125, 238, 246, 264, 265, 272, 286], "mpa": [4, 8, 10, 11, 12, 13, 15, 16, 17, 20, 26, 33, 35, 60, 78, 90, 97, 105, 107, 109, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 133, 163, 164, 175, 184, 199, 220, 229, 230, 232, 233, 235, 236, 237, 238, 241, 245, 246, 248, 249, 258, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 281, 283, 284, 285, 286, 289, 290, 291], "befor": [4, 5, 7, 13, 15, 39, 125, 241, 244, 245, 246, 263, 266, 269, 273, 275, 279, 285], "w": [4, 5, 246, 264, 266, 285], "num": 4, "f": [4, 8, 10, 13, 243, 245, 246, 266, 267, 273, 278, 281, 285], "file": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 33, 34, 35, 36, 39, 41, 42, 44, 49, 52, 54, 60, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 103, 105, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 130, 134, 135, 145, 148, 152, 158, 175, 177, 220, 229, 232, 233, 235, 236, 237, 238, 242, 243, 244, 245, 246, 248, 252, 258, 260, 262, 263, 264, 265, 269, 272, 273, 275, 278, 279, 284, 285, 288, 289, 291], "m": [4, 5, 13, 62, 69, 70, 76, 232, 237, 244, 246, 266, 268, 269, 270, 271, 273, 275, 278, 279, 283, 285], "mach": [4, 33, 125, 265, 268, 269, 270, 271, 272, 273, 285], "p": [4, 5, 246, 266, 267, 285], "suite_nam": [4, 7, 102, 104, 109, 285], "specifi": [4, 5, 13, 15, 16, 17, 35, 125, 231, 241, 246, 262, 266, 267, 273, 278, 279, 284, 285, 289], "either": [4, 5, 6, 7, 11, 12, 13, 15, 63, 125, 128, 229, 241, 246, 264, 266, 267, 275, 283, 285], "case": [4, 5, 6, 7, 8, 13, 16, 17, 18, 23, 24, 49, 56, 83, 84, 85, 88, 99, 100, 105, 125, 128, 129, 136, 137, 141, 149, 151, 153, 154, 156, 157, 159, 164, 165, 167, 169, 170, 173, 175, 176, 177, 179, 180, 181, 182, 184, 187, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 232, 233, 235, 236, 237, 239, 241, 243, 244, 245, 246, 248, 249, 250, 251, 253, 254, 256, 257, 264, 265, 266, 272, 273, 275, 278, 279, 281, 282, 283, 284, 285, 289, 290], "onli": [4, 5, 6, 7, 13, 15, 16, 42, 125, 229, 231, 233, 237, 238, 241, 243, 245, 248, 258, 262, 265, 266, 267, 269, 272, 273, 275, 277, 278, 279, 283, 285, 288], "time": [4, 5, 6, 7, 13, 16, 17, 33, 42, 55, 113, 125, 128, 135, 143, 153, 172, 185, 186, 189, 200, 201, 204, 212, 231, 232, 233, 235, 236, 241, 242, 243, 244, 245, 246, 262, 263, 264, 267, 269, 273, 285, 290], "wai": [4, 6, 12, 13, 33, 65, 70, 125, 241, 243, 244, 245, 246, 263, 265, 266, 272, 275, 283], "altern": [4, 12, 260, 285], "ani": [4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 29, 41, 148, 158, 238, 239, 241, 242, 243, 244, 245, 246, 266, 267, 272, 278, 279, 283, 284, 285, 288, 289], "case_numb": 4, "multipl": [4, 6, 13, 16, 125, 230, 242, 245, 246, 266, 272, 278, 285], "separ": [4, 6, 8, 13, 15, 16, 241, 242, 264, 266, 279, 285], "space": [4, 5, 6, 8, 12, 125, 235, 236, 241, 246, 266, 269, 272, 285], "requir": [4, 5, 7, 13, 20, 30, 33, 34, 40, 88, 130, 143, 187, 202, 212, 229, 238, 241, 242, 243, 244, 245, 246, 258, 260, 263, 265, 266, 267, 272, 275, 276, 284, 285, 286, 289, 291], "few": [4, 12, 13, 20, 30, 33, 40, 84, 85, 125, 130, 232, 235, 236, 237, 241, 245, 266, 267, 272], "basic": [4, 6, 267, 269, 272, 285], "piec": [4, 238, 266], "inform": [4, 6, 7, 33, 88, 111, 120, 184, 199, 241, 243, 246, 267, 269, 276, 285, 286], "abl": [4, 121, 122, 123, 124, 126, 128, 241, 242, 244, 246, 266, 272, 285], "place": [4, 5, 13, 16, 112, 125, 241, 243, 260, 266, 272], "download": [4, 5, 7, 9, 33, 35, 41, 125, 148, 158, 243, 245, 246, 267, 285, 290], "some": [4, 5, 7, 8, 9, 10, 12, 13, 16, 42, 125, 231, 232, 239, 241, 243, 244, 245, 246, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 285, 286, 290, 291], "data": [4, 9, 12, 15, 16, 17, 21, 33, 34, 35, 94, 105, 107, 108, 112, 113, 114, 120, 125, 175, 221, 227, 228, 241, 246, 265, 267, 268, 269, 270, 271, 272, 285, 290, 291], "locat": [4, 5, 13, 16, 17, 42, 109, 229, 241, 246, 248, 258, 264, 266, 267, 269, 272, 275, 278, 279, 285], "where": [4, 6, 13, 16, 33, 35, 42, 52, 56, 87, 109, 112, 125, 128, 221, 224, 227, 228, 229, 238, 240, 241, 243, 246, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 283, 284, 285, 289, 290], "There": [4, 5, 12, 221, 227, 228, 237, 239, 241, 245, 246, 248, 262, 263, 266, 267, 285], "r": [4, 273, 279], "tell": [4, 5, 125, 246], "re": [4, 5, 241, 245, 246, 264, 266, 267, 272, 273, 279], "leav": [4, 17, 233, 243, 267, 279], "unknown": [4, 125, 245, 272], "component_path": [4, 109, 229, 238, 258, 267, 285], "absolut": [4, 8, 33, 35, 51, 109, 229, 238, 241, 246, 258, 285], "landic": [4, 5, 9, 11, 18, 35, 60, 109, 238, 240, 241, 243, 244, 246, 264, 265, 266, 267, 285, 290, 291], "e3sm_submodul": [4, 229, 238, 246, 258, 260, 266], "mali": [4, 125, 238, 241, 246, 264, 266, 267, 285, 291], "dev": [4, 5, 6, 238, 240, 241, 244, 245, 246, 265, 276, 285, 286], "albani": [4, 121, 123, 124, 125, 238, 267, 268, 269, 270, 273, 285], "depend": [4, 7, 13, 15, 17, 33, 34, 41, 99, 100, 125, 148, 158, 233, 243, 246, 264, 265, 266, 267, 272, 273, 275, 279, 285, 291], "whether": [4, 7, 12, 16, 17, 20, 25, 33, 35, 42, 43, 49, 52, 54, 57, 101, 102, 109, 111, 112, 113, 116, 125, 128, 130, 143, 145, 152, 164, 167, 172, 189, 204, 212, 235, 236, 241, 244, 246, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 281, 282, 283, 284, 285, 289], "omega": [4, 26, 114, 130, 133, 184, 199, 229, 238, 245, 246, 264, 266, 276, 281, 282, 285], "config": [4, 6, 7, 9, 10, 11, 12, 15, 16, 17, 20, 21, 24, 25, 26, 33, 34, 35, 42, 44, 52, 55, 56, 67, 69, 72, 83, 84, 85, 86, 87, 103, 109, 111, 112, 114, 115, 116, 117, 119, 120, 130, 133, 145, 152, 165, 172, 184, 189, 199, 204, 219, 221, 222, 223, 227, 228, 229, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 258, 260, 263, 265, 275, 285, 291], "point": [4, 5, 48, 54, 91, 125, 229, 231, 238, 243, 244, 245, 246, 258, 266, 267, 272, 285], "much": [4, 5, 13, 241, 266], "config_fil": [4, 109], "work_dir": [4, 10, 16, 33, 42, 56, 87, 109, 110, 111, 241, 243, 266], "base": [4, 7, 12, 13, 14, 16, 18, 33, 35, 37, 42, 46, 49, 67, 72, 74, 109, 125, 132, 134, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 258, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 291], "": [4, 5, 6, 7, 10, 11, 13, 15, 16, 33, 35, 36, 42, 44, 49, 75, 101, 106, 109, 111, 125, 128, 175, 177, 229, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 258, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 281, 282, 284, 285, 286, 289], "recommend": [4, 6, 10, 17, 125, 241, 242, 245, 246, 266, 272], "itself": [4, 5, 6, 8, 33, 238, 240, 241, 243, 244, 246, 266, 285], "temp": 4, "scratch": [4, 5, 246, 266, 269, 273, 285], "avoid": [4, 241, 266], "confus": [4, 13, 245, 246, 266], "output": [4, 6, 7, 9, 11, 12, 13, 16, 18, 20, 33, 34, 36, 41, 42, 49, 77, 78, 85, 88, 102, 111, 128, 130, 135, 148, 158, 167, 175, 180, 192, 195, 207, 220, 232, 235, 236, 237, 243, 255, 262, 264, 267, 273, 285, 290], "compar": [4, 9, 16, 42, 109, 110, 111, 138, 140, 142, 150, 155, 160, 183, 198, 211, 214, 233, 237, 242, 245, 246, 252, 255, 262, 264, 266, 277, 278, 285, 288, 290], "previou": [4, 16, 241, 246, 266, 277, 285, 290], "same": [4, 6, 8, 13, 16, 34, 35, 42, 110, 111, 125, 128, 237, 239, 241, 242, 243, 244, 245, 246, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 283, 285, 290, 291], "baseline_dir": [4, 42, 109], "mani": [4, 5, 7, 8, 128, 239, 241, 243, 245, 246, 264, 265, 266, 278, 284, 289], "valid": [4, 6, 7, 9, 42, 221, 222, 223, 224, 225, 226, 227, 228, 232, 235, 236, 237, 245, 246, 265, 275, 278], "sure": [4, 5, 11, 15, 16, 111, 125, 139, 149, 159, 229, 232, 241, 245, 246, 251, 258, 264, 266, 267, 272, 273, 278, 279], "timer": [4, 42, 45, 110, 242, 243, 245], "ha": [4, 5, 8, 13, 16, 20, 30, 33, 34, 36, 40, 42, 44, 86, 94, 100, 111, 121, 123, 124, 125, 130, 143, 187, 202, 212, 229, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 258, 260, 263, 264, 266, 267, 275, 278, 283, 285], "both": [4, 5, 6, 7, 12, 13, 16, 25, 111, 125, 128, 145, 152, 232, 240, 241, 244, 246, 265, 266, 267, 277, 281, 282, 283], "custom": [4, 5, 7, 12, 15, 51, 52, 109, 229, 238, 246, 258, 267, 273, 285], "order": [4, 7, 12, 13, 128, 233, 238, 241, 242, 246, 266, 279, 282, 283, 285], "give": [4, 13, 16, 125, 241, 245, 246, 266, 267, 285], "predefin": 4, "so": [4, 5, 6, 8, 11, 12, 13, 16, 17, 20, 32, 100, 125, 128, 130, 221, 227, 228, 229, 232, 235, 236, 238, 241, 243, 245, 246, 258, 264, 266, 267, 272, 273, 275, 278, 279, 283, 285, 290], "after": [4, 5, 6, 13, 15, 17, 33, 35, 36, 75, 94, 100, 125, 222, 223, 229, 238, 241, 243, 246, 258, 266, 267, 269, 273, 285, 288], "c": [4, 5, 125, 241, 246, 268, 269, 270, 271, 272, 273, 277, 285, 290], "argument": [4, 6, 8, 11, 13, 16, 17, 31, 33, 84, 85, 95, 112, 232, 241, 243, 245, 246, 266, 284, 289, 290], "resid": [4, 35], "test_suit": [4, 104, 241], "build": [4, 5, 9, 12, 13, 65, 70, 121, 122, 123, 124, 126, 229, 233, 238, 243, 245, 258, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273], "mpas_model": [4, 267], "overrid": [4, 12, 13, 38, 39, 41, 44, 45, 51, 65, 68, 69, 70, 128, 148, 158, 178, 241, 243, 245, 266, 267, 273, 285], "mai": [4, 5, 6, 7, 11, 12, 13, 16, 34, 36, 39, 99, 112, 125, 229, 231, 241, 242, 243, 244, 246, 248, 258, 260, 263, 264, 266, 267, 273, 279, 283, 284, 285, 289, 291], "baselin": [4, 5, 7, 9, 16, 42, 109, 110, 111, 138, 140, 142, 150, 155, 160, 166, 183, 198, 211, 214, 232, 235, 236, 237, 242, 245, 255, 262, 264, 266, 277, 285], "comparison": [4, 16, 42, 110, 111, 243, 266, 267], "against": [4, 7, 9, 16, 111, 166, 232, 235, 236, 237, 241, 262, 266, 277], "oppos": [4, 25, 145, 152, 164, 167, 172, 189, 204, 266], "parallel": [4, 15, 20, 30, 33, 39, 40, 125, 130, 241, 245, 246, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 285, 291], "been": [4, 5, 13, 16, 33, 42, 44, 94, 109, 121, 123, 124, 125, 128, 167, 180, 192, 195, 207, 229, 238, 241, 243, 245, 246, 258, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 285], "skip_step": 4, "wherea": [4, 11, 241, 266, 277, 291], "typic": [4, 6, 8, 12, 13, 15, 16, 17, 33, 102, 125, 238, 239, 241, 244, 246, 264, 266, 267, 272, 275, 283, 285, 291], "clone": [4, 5, 125, 229, 239, 246, 258, 266, 285], "than": [4, 5, 7, 8, 10, 12, 13, 33, 35, 40, 51, 125, 143, 187, 202, 212, 232, 241, 242, 245, 246, 263, 266, 275, 278, 283, 290], "just": [4, 13, 20, 30, 33, 40, 57, 125, 130, 241, 245, 246, 264, 266, 269, 273], "pickl": [4, 7, 99, 100, 241, 266, 285], "latter": [4, 42, 125], "conveni": [4, 15, 221, 227, 228, 241, 264, 266, 267, 285], "tab": [4, 285], "complet": [4, 7, 22, 23, 24, 266, 285], "explicitli": [4, 6, 16, 128, 232, 235, 236, 241, 246, 266, 267, 285], "select": [4, 7, 113, 241, 246, 266], "two": [4, 9, 149, 232, 233, 235, 236, 237, 238, 241, 242, 244, 245, 246, 251, 262, 266, 278, 279, 281, 282, 288, 291], "edit": [4, 6, 111, 246, 266, 285], "steps_to_run": [4, 16, 42, 102, 111, 241, 243, 266, 267], "init": [4, 5, 6, 13, 17, 30, 40, 137, 229, 231, 238, 241, 243, 245, 246, 258, 260, 267, 278, 279, 281, 282, 285, 290], "full_run": [4, 150, 262, 278, 288], "restart_run": [4, 150, 262, 278, 288], "Or": [4, 241, 267], "accomplish": [4, 241, 245], "thing": [4, 121, 122, 123, 124, 125, 126, 128, 241, 245, 265], "skip": [4, 7, 16, 111, 243, 290], "take": [4, 5, 6, 10, 12, 13, 16, 51, 125, 241, 242, 244, 246, 266, 279, 290], "preced": [4, 51], "over": [4, 8, 13, 51, 112, 241, 245, 265, 266, 275, 278, 283, 285], "special": [4, 264, 284], "databas": [4, 5, 7, 10, 15, 18, 20, 33, 35, 130, 241, 272], "polaris_cach": [4, 7, 18, 241], "symlink": [4, 7, 13, 33, 35, 243, 245, 246], "input": [4, 7, 9, 10, 15, 28, 33, 34, 35, 36, 41, 78, 148, 158, 232, 235, 236, 237, 266, 283], "structur": [4, 12, 26, 133, 240, 243, 265, 266], "without": [4, 16, 35, 241, 245, 246, 266, 267, 271, 272, 281, 282, 284, 285], "redund": [4, 221, 227, 228, 232, 266], "stamp": 4, "revis": [4, 267], "remov": [4, 13, 16, 102, 232, 235, 236, 246, 266], "older": 4, "ones": [4, 221, 227, 228, 245, 266], "version": [4, 5, 14, 28, 51, 87, 110, 111, 125, 229, 232, 238, 239, 241, 244, 245, 246, 258, 259, 265, 266, 267, 272, 273, 276, 278, 279, 285, 286], "A": [4, 5, 6, 7, 10, 12, 13, 15, 17, 18, 21, 23, 24, 26, 33, 34, 35, 37, 42, 46, 50, 51, 57, 61, 62, 65, 68, 69, 70, 74, 80, 83, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 125, 133, 136, 139, 143, 146, 149, 151, 156, 159, 161, 163, 164, 167, 170, 173, 175, 177, 179, 180, 187, 190, 192, 194, 195, 202, 205, 207, 209, 212, 215, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 232, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 250, 251, 253, 256, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 279, 281, 282, 284, 285, 288, 289], "aid": 4, "updat": [4, 6, 7, 20, 22, 24, 29, 30, 39, 40, 106, 124, 125, 132, 143, 212, 229, 232, 235, 236, 241, 258, 263, 265, 266, 285], "cached_fil": [4, 18, 241], "json": [4, 7, 18, 49, 241, 273], "anvil": [4, 5, 125, 241, 267, 272, 285], "chrysali": [4, 5, 125, 241, 266, 267, 272, 285], "sinc": [4, 13, 16, 99, 120, 232, 241, 243, 245, 246, 266, 278, 279, 281, 282, 284, 289], "copi": [4, 5, 7, 35, 49, 109, 266, 269, 285], "onto": [4, 246], "lcrc": [4, 5, 7, 10, 49, 241, 245, 267, 268, 270, 272, 285], "server": [4, 7, 35, 49, 241, 245, 267, 273], "whose": [4, 241], "global_ocean": [4, 8, 10, 13, 238, 241, 243, 245, 246, 267, 285, 290], "qu240": [4, 13, 241, 245, 246, 267, 285], "mesh": [4, 6, 9, 15, 20, 33, 78, 90, 97, 113, 128, 130, 131, 132, 134, 141, 144, 146, 164, 167, 168, 170, 171, 173, 175, 177, 180, 184, 188, 190, 192, 195, 199, 203, 205, 207, 210, 213, 215, 221, 227, 228, 231, 232, 235, 236, 237, 239, 241, 243, 244, 245, 246, 253, 254, 264, 265, 267, 275, 277, 285, 290], "phc": [4, 241, 275, 290], "ocean_cached_fil": 4, "pr": [4, 5, 285, 290], "look": [4, 5, 6, 10, 16, 244, 245, 266, 267], "someth": [4, 6, 89, 93, 96, 125, 246, 266], "culled_mesh": [4, 241, 266], "nc": [4, 10, 11, 12, 13, 15, 16, 17, 88, 241, 243, 245, 266], "210803": 4, "culled_graph": [4, 241, 266], "info": [4, 11, 13, 20, 27, 78, 125, 130, 241, 266], "critical_passages_mask_fin": 4, "initial_st": [4, 17, 241, 243, 266], "init_mode_forcing_data": [4, 241], "date_str": [4, 49], "let": [4, 241, 246, 264, 266, 267, 273], "string": [4, 8, 13, 35, 92, 98, 125, 246], "choos": [4, 241, 245, 246, 266, 268, 269, 270, 271, 273, 291], "todai": [4, 49], "dry_run": [4, 49], "saniti": [4, 266], "check": [4, 5, 16, 111, 246, 264, 266, 267, 269, 273, 285, 290], "print": [4, 11, 16, 57, 111, 116, 241, 245, 290], "stdout": [4, 11, 33, 42, 241], "translat": [4, 26, 128, 133], "compass": [4, 88, 229, 241, 245, 264, 266], "convert": [4, 8, 12, 13, 128, 241, 266], "namelist": [4, 6, 7, 9, 20, 21, 22, 25, 26, 28, 29, 32, 41, 109, 119, 120, 130, 133, 134, 145, 148, 152, 158, 229, 232, 233, 235, 236, 238, 241, 243, 244, 245, 248, 258, 260, 262, 265, 266, 267, 283], "stream": [4, 6, 7, 9, 20, 23, 25, 28, 41, 114, 119, 120, 134, 145, 148, 152, 158, 229, 231, 232, 235, 236, 237, 238, 241, 243, 244, 245, 258, 262, 267, 284, 289], "yaml": [4, 9, 20, 21, 24, 25, 26, 125, 130, 133, 134, 145, 152, 232, 235, 236, 237, 241, 265, 266, 269, 273], "e": [4, 5, 6, 10, 13, 26, 33, 34, 44, 46, 60, 114, 125, 133, 229, 239, 241, 242, 244, 245, 246, 258, 263, 264, 265, 266, 267, 273, 275, 278, 279, 281, 282, 283, 284, 285, 289, 290, 291], "g": [4, 5, 6, 10, 13, 26, 33, 34, 44, 46, 60, 114, 125, 128, 133, 229, 239, 241, 242, 244, 245, 246, 258, 263, 264, 265, 266, 267, 275, 278, 279, 281, 282, 283, 284, 285, 289, 290], "forward": [4, 6, 13, 16, 33, 135, 141, 142, 151, 153, 155, 183, 198, 210, 211, 213, 214, 229, 238, 241, 243, 245, 254, 255, 258, 267, 278, 279, 281, 282, 284, 289], "becaus": [4, 5, 6, 10, 11, 12, 13, 16, 33, 34, 231, 241, 243, 245, 246, 266, 269, 271, 273, 285], "don": [4, 5, 6, 13, 125, 128, 241, 243, 245, 246, 266, 271, 285, 291], "format": [4, 6, 10, 12, 13, 114, 120, 241, 242, 243, 244, 246, 266, 267, 269], "note": [4, 6, 15, 16, 212, 266, 273], "keyword": [4, 6, 13, 16, 17, 233, 241, 243, 279], "top": [4, 17, 221, 222, 223, 224, 225, 226, 227, 228, 231, 239, 266, 275], "ignor": [4, 92, 98], "get": [4, 5, 6, 8, 10, 11, 13, 15, 20, 21, 22, 23, 24, 33, 42, 43, 50, 55, 63, 83, 94, 101, 125, 128, 130, 240, 241, 243, 244, 245, 246, 264, 267, 275, 285], "pars": [4, 8, 13, 21, 22, 23, 24, 80, 105, 107], "valu": [4, 6, 8, 13, 16, 17, 21, 26, 111, 112, 113, 116, 133, 153, 232, 238, 241, 243, 244, 245, 265, 266, 267, 275, 278, 279, 283], "doesn": [4, 5, 8, 120, 125, 241, 243, 266, 267, 272, 285], "matter": [4, 266], "usabl": 4, "try": [5, 13, 54, 125, 245, 246, 263, 266, 267, 269, 273, 285], "stai": [5, 246], "sync": 5, "mpi": [5, 13, 15, 88, 121, 124, 125, 130, 132, 134, 232, 235, 236, 241, 246, 263, 265, 266, 268, 269, 270, 271, 273, 285], "librari": [5, 13, 121, 125, 246, 266, 268, 269, 270, 271, 272, 273, 285], "netcdf": [5, 125, 135, 237, 267, 268, 269, 270, 271, 272, 273], "fortran": [5, 125, 268, 269, 270, 271, 272, 273], "pnetcdf": [5, 125, 268, 269, 270, 271, 272, 273], "mkl": [5, 125], "linear": [5, 17, 112, 113, 233, 235, 266, 278, 279, 281], "algebra": 5, "lib": [5, 125], "esmf": [5, 246, 285], "scorpio": [5, 246, 272, 285], "forg": [5, 125, 265, 285], "python": [5, 6, 7, 8, 21, 39, 44, 239, 241, 243, 244, 245, 246, 264, 265, 266, 267, 272, 273, 285], "relat": [5, 10, 12, 13, 125, 128, 229, 232, 235, 236, 237, 241, 244, 245, 246, 263, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 283, 284, 285, 286], "aren": [5, 10, 33, 34, 125, 241, 245, 246, 266, 290], "brief": [5, 6, 266], "tour": 5, "login": [5, 125, 246, 269, 273], "node": [5, 13, 20, 32, 33, 37, 40, 55, 83, 84, 85, 125, 130, 241, 242, 245, 246, 266, 267, 268, 269, 270, 271, 272, 273, 285], "bootstrap": 5, "rest": [5, 135, 226, 275, 279], "setup": [5, 6, 8, 10, 13, 16, 25, 30, 33, 34, 40, 42, 125, 145, 152, 172, 189, 204, 232, 235, 236, 237, 243, 245, 246, 248, 264, 265, 266, 267, 279, 285, 291], "u": [5, 241, 266, 272, 273, 281, 282], "unifi": [5, 125, 246, 273], "find": [5, 6, 52, 64, 86, 125, 229, 245, 246, 263, 266, 267, 285], "diagnost": [5, 267, 268, 269, 271, 272, 273, 285], "across": [5, 6, 13, 17, 232, 241, 242, 243, 244, 245, 246, 264, 266, 274, 278, 279], "analysi": [5, 17, 128, 232, 243, 245, 264, 265, 267, 279, 281, 282, 291], "e3sm_diag": 5, "zppy": 5, "know": [5, 8, 10, 12, 128, 241, 245, 246, 266], "job": [5, 125, 246, 265, 266, 268, 269, 270, 271, 273], "cach": [5, 18, 20, 33, 35, 130, 265, 267, 272, 277, 285, 290], "own": [5, 6, 7, 10, 11, 17, 33, 125, 241, 243, 245, 246, 264, 266, 267, 279, 285, 291], "config_machin": 5, "xml": [5, 13, 105, 107, 108, 120, 258, 264], "here": [5, 8, 11, 13, 15, 16, 125, 232, 235, 236, 237, 240, 241, 243, 244, 245, 246, 262, 266, 267, 268, 269, 270, 271, 272, 273, 283, 284, 285, 289, 290], "close": [5, 64, 125, 265, 279], "ey": 5, "master": [5, 229, 258, 286], "happen": [5, 8, 11, 13, 15, 99, 111, 241, 243, 266, 279], "me": [5, 266], "dev_quick_start": 5, "function": [5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 41, 62, 69, 125, 128, 137, 148, 158, 241, 243, 244, 245, 265, 266, 279, 291], "fork": [5, 266], "haven": [5, 266], "xylar": [5, 16, 125, 266, 267, 272], "mkdir": [5, 246], "now": [5, 125, 241, 246, 266, 267, 272], "involv": [5, 7, 13, 16, 111, 241, 243, 264, 266], "coupl": [5, 263, 265], "alpha": [5, 121, 122, 123, 124, 125, 126, 266], "beta": 5, "rc": 5, "simplify_local_mach": 5, "often": [5, 17, 33, 241, 242, 243, 244, 245, 246, 264, 266, 267, 290, 291], "stand": 5, "omit": [5, 241, 285], "suffix": [5, 35, 241], "onc": [5, 13, 232, 246, 266, 267, 279, 285], "releas": [5, 125, 245, 265, 272, 276, 285], "spack_for_mache_1": 5, "12": [5, 12, 63, 262, 266, 269, 288], "worktre": [5, 265, 266], "my": [5, 125, 269], "fetch": [5, 246, 266], "out": [5, 7, 12, 82, 86, 113, 125, 239, 241, 245, 246, 267, 275, 285], "checkout": [5, 246, 266], "mambaforg": [5, 246, 266, 272, 285], "manual": [5, 13, 16, 42, 43, 241, 243, 291], "linux": [5, 125, 246, 272], "x86_64": [5, 125], "our": [5, 125, 245, 266, 285], "found": [5, 8, 13, 115, 125, 245, 246, 265, 266, 268, 269, 270, 271, 272, 273], "exist": [5, 6, 8, 26, 33, 36, 54, 105, 107, 109, 125, 133, 232, 241, 245, 246, 263, 266, 272, 290], "miniconda3": [5, 246], "alwai": [5, 6, 8, 11, 16, 51, 125, 128, 229, 238, 241, 245, 246, 258, 266, 267], "pleas": [5, 125, 245, 246, 266, 285], "start": [5, 6, 7, 13, 106, 125, 231, 232, 242, 244, 245, 265, 269, 272, 273, 276, 286, 288], "definit": [5, 13, 266], "defin": [5, 6, 7, 8, 12, 13, 14, 17, 33, 42, 68, 92, 98, 109, 125, 229, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 258, 260, 262, 264, 265, 267, 272, 275, 278, 279, 283, 290, 291], "export": [5, 263], "conda_bas": 5, "home": [5, 16, 125, 246, 266, 267, 269, 272, 273], "readi": [5, 241, 266, 273], "configure_polaris_env": [5, 125, 246, 263, 266], "py": [5, 11, 13, 60, 125, 238, 244, 245, 246, 264, 266, 267], "mache_fork": 5, "mache_branch": 5, "update_spack": [5, 125, 246], "tmpdir": [5, 125], "group": [5, 6, 8, 13, 18, 19, 33, 42, 46, 47, 50, 136, 137, 139, 141, 143, 149, 153, 156, 159, 161, 163, 164, 179, 182, 194, 197, 209, 210, 213, 217, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 248, 250, 251, 254, 258, 262, 264, 265, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291], "spack_temp": 5, "spack_test": 5, "intel": [5, 125, 272], "gnu": [5, 125, 246, 271, 272, 285], "openmpi": [5, 121, 125, 246, 265, 268, 270, 271, 285], "impi": [5, 121, 125, 268, 271], "recreat": [5, 246, 263], "request": [5, 6, 13, 20, 27, 29, 125, 130, 222, 223, 241, 245, 246, 263, 266, 267, 279], "twice": [5, 266], "deploy": [5, 246], "even": [5, 11, 12, 13, 16, 35, 51, 125, 241, 245, 246, 266, 267, 272, 285], "prebootstrap": 5, "load": [5, 99, 122, 125, 126, 246, 265, 266, 267, 268, 269, 270, 271, 272, 273], "activ": [5, 125, 272, 273, 285], "differ": [5, 13, 15, 16, 51, 65, 70, 111, 125, 128, 143, 153, 229, 232, 238, 239, 241, 242, 243, 244, 245, 258, 264, 266, 267, 269, 273, 278, 279, 281, 282, 284, 289], "On": [5, 6, 12, 125, 246, 272], "tmp": [5, 125], "safe": [5, 13, 16, 241, 246, 278], "strictli": [5, 12, 245, 266], "necessari": [5, 6, 12, 125, 238, 266], "good": [5, 11, 33, 241, 246, 266], "idea": [5, 11, 266], "fresh": [5, 266], "Be": [5, 273], "awar": [5, 6, 125, 238, 266, 272], "with_petsc": [5, 246], "wa": [5, 7, 16, 52, 110, 111, 125, 138, 140, 142, 150, 155, 160, 183, 198, 211, 214, 241, 243, 245, 246, 255, 263, 266, 267, 275, 285], "limit": [5, 242, 246, 278], "amount": [5, 20, 30, 33, 40, 130, 241, 274, 283], "team": [5, 125, 265], "petsc_support": 5, "txt": [5, 7, 109, 242, 263], "with_albani": [5, 246], "albany_support": 5, "encount": [5, 242, 263], "error": [5, 16, 33, 42, 125, 128, 168, 233, 235, 236, 241, 246, 265, 266, 281, 282], "dev_polaris_0_2_0_gnu_mpich": 5, "armpl": 5, "dure": [5, 7, 10, 13, 25, 33, 42, 145, 152, 172, 189, 204, 241, 243, 245, 246, 266, 267, 285, 290, 291], "attempt": [5, 125, 265, 272], "first": [5, 8, 13, 125, 232, 235, 236, 237, 241, 243, 244, 245, 246, 263, 266, 268, 269, 270, 271, 272, 273, 278, 279, 283, 285], "sh": [5, 121, 122, 123, 124, 125, 126, 246, 263, 266, 268, 269, 270, 271, 273, 285], "build_": 5, "command": [5, 9, 14, 31, 33, 39, 84, 85, 87, 95, 125, 241, 245, 246, 264, 265, 266, 269, 272, 273, 285], "pscratch": 5, "suggest": [5, 125, 263], "correctli": 5, "seem": [5, 13, 266, 269, 273], "switch": [5, 266, 267], "v0": 5, "18": [5, 267, 269], "19": 5, "submodul": [5, 229, 238, 246, 258, 266, 285], "serv": [5, 109, 244, 266], "kind": [5, 266], "whichev": [5, 229, 258, 275], "load_dev_polaris_0": [5, 121, 122, 123, 124, 125, 126, 266], "0_chrysalis_intel_openmpi": 5, "recurs": [5, 229, 245, 246, 258, 266, 285], "pio": [5, 20, 29, 32, 130, 232, 235, 236], "openmp": [5, 13, 20, 30, 33, 40, 85, 121, 123, 124, 130, 143, 187, 202, 212, 241, 266, 268, 269, 270, 271, 273], "ifort": [5, 121, 123, 125, 266, 268, 270], "ac": [5, 266], "test_20230202": 5, "ocean_pr_chrys_intel_openmpi": 5, "sbatch": [5, 266, 272, 285], "job_script": [5, 266, 285], "bash": [5, 246, 263, 266, 285], "termin": [5, 7, 16, 125, 241, 246, 266], "isn": [5, 241, 245, 266], "ll": [5, 17, 125, 233, 245, 266, 273, 279], "warn": [5, 279, 281, 282], "0_chrysalis_gnu_openmpi": 5, "e3sm_chrys_gnu_openmpi": 5, "gfortran": [5, 121, 123, 124, 125, 246, 268, 270], "ocean_pr_chrys_gnu_openmpi": 5, "explor": [5, 241, 244, 266, 275], "util": [5, 245, 282], "matrix": 5, "sever": [5, 11, 125, 241, 243, 244, 245, 246, 264, 265, 266, 284, 285, 290], "automat": [5, 6, 8, 11, 13, 17, 125, 128, 241, 243, 245, 246, 266, 267, 268, 270, 271, 272, 273, 285], "0_chrysalis_gnu_openmpi_albani": 5, "true": [5, 6, 8, 12, 13, 16, 17, 20, 43, 52, 54, 111, 112, 113, 116, 121, 122, 123, 124, 125, 126, 130, 213, 231, 241, 243, 244, 246, 266, 267, 268, 269, 270, 271, 272, 273, 278, 285, 291], "full_integr": [5, 285, 290], "landice_full_chrys_gnu_openmpi": 5, "nonhydrostat": 5, "yet": [5, 124, 125, 128, 241, 245, 266], "integr": [5, 16, 153, 232, 243, 245, 266, 278, 279, 284, 289], "sara": 5, "calandrini": 5, "nonhydro": 5, "0_chrysalis_intel_openmpi_petsc": 5, "scalandr": 5, "nonhydro_chrys_intel_openmpi": 5, "grep": [5, 269, 285], "245": 5, "246": 5, "non": [5, 13, 16, 231, 241, 266, 285], "care": [5, 10, 12, 241, 244, 246, 266], "affect": [5, 13, 16, 241, 246, 266], "temporari": [5, 125], "begin": [5, 6, 16, 232, 241, 246, 260, 265, 266, 272, 278, 279, 283], "anymor": 5, "best": [5, 15, 125, 241, 246], "hard": [5, 266, 278, 283], "reset": 5, "sphinx": 6, "written": [6, 7, 33, 42, 56, 112, 113, 241, 243, 266, 288], "myst": [6, 266], "tip": [6, 246], "easi": [6, 35, 245, 266], "tree": [6, 105, 107, 120, 286], "pull": [6, 125, 245, 246, 266, 267], "guid": [6, 128, 232, 235, 236, 237, 242, 245, 262, 266, 269, 272, 276, 286], "baroclinic_channel": [6, 13, 16, 229, 234, 238, 241, 243, 244, 245, 264, 266, 276, 280, 285, 290, 291], "label": [6, 112, 272, 285], "prepend": 6, "them": [6, 7, 13, 15, 16, 20, 32, 125, 130, 233, 238, 241, 243, 244, 245, 246, 264, 266, 271, 272, 277, 285, 291], "baroclin": [6, 46, 136, 137, 139, 141, 143, 146, 149, 153, 156, 159, 161, 212, 217, 232, 241, 243, 244, 266, 278], "channel": [6, 46, 136, 137, 139, 141, 143, 146, 149, 153, 156, 159, 161, 212, 217, 232, 241, 243, 263, 266, 278], "And": [6, 13, 246, 266], "becom": [6, 241, 243, 266], "who": [6, 246, 266, 267, 273], "citat": 6, "overview": [6, 265, 269, 273], "comment": [6, 242, 267], "appli": [6, 12, 13, 57, 231, 244, 266, 278, 283, 284, 289], "vertic": [6, 17, 231, 232, 235, 236, 237, 241, 267, 274, 276], "grid": [6, 12, 15, 62, 69, 73, 76, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 128, 175, 219, 220, 221, 222, 223, 224, 227, 228, 232, 233, 235, 236, 237, 241, 260, 266, 267], "initi": [6, 7, 33, 113, 135, 138, 141, 146, 163, 173, 190, 205, 210, 213, 215, 232, 233, 235, 236, 237, 241, 243, 244, 245, 254, 263, 264, 265, 267, 275, 277, 291], "condit": [6, 33, 138, 141, 146, 163, 173, 190, 205, 210, 213, 215, 232, 233, 235, 236, 237, 241, 242, 243, 244, 245, 254, 262, 264, 265, 267, 277, 291], "forc": [6, 16, 237, 262, 266, 291], "common": [6, 8, 11, 39, 42, 46, 125, 232, 233, 235, 236, 237, 241, 242, 243, 244, 245, 263, 264, 266, 267, 272, 273, 285, 290, 291], "refer": [6, 13, 33, 135, 153, 221, 224, 227, 228, 241, 243, 245, 246, 264, 265, 266, 275, 278, 285], "wish": [6, 13, 241, 246, 266, 285, 290], "test_group_nam": 6, "specif": [6, 8, 13, 44, 125, 229, 238, 239, 244, 258, 260, 265, 266, 267, 269, 272, 278, 284, 285, 289, 290], "share": [6, 17, 125, 128, 137, 229, 232, 235, 236, 237, 238, 239, 241, 243, 244, 246, 248, 262, 265, 268, 269, 270, 271, 272, 273, 274, 278, 284, 285, 289], "public": [6, 10, 241, 266, 267], "api": [6, 11, 265, 266], "underscor": [6, 266], "md": [6, 266], "eval": 6, "rst": [6, 13, 266], "currentmodul": 6, "autosummari": 6, "toctre": 6, "baroclinicchannel": [6, 137, 139, 141, 149, 153, 159, 232, 238, 243, 266], "baroclinicchanneltestcas": [6, 232], "compute_cell_count": [6, 128, 232, 235, 236, 266], "dynamic_model_config": [6, 232, 235, 236, 266], "ot": [6, 266], "numpydoc": [6, 266], "text": [6, 7, 278, 279, 283], "restructuredtext": 6, "compute_land_ice_pressure_and_draft": 6, "ssh": [6, 128, 221, 223, 224, 225, 226, 227, 228, 229, 235, 236, 243, 266, 267, 269, 273, 281, 282], "modifysshmask": 6, "ref_dens": 6, "comput": [6, 12, 73, 125, 128, 130, 131, 135, 144, 168, 171, 184, 188, 199, 203, 224, 225, 226, 232, 233, 235, 236, 237, 241, 246, 269, 270, 272, 273, 278, 281, 282, 285], "pressur": [6, 229, 267, 281, 282], "overli": [6, 266], "ic": [6, 128, 229, 245, 246, 260, 262, 265, 266, 267, 269, 275, 288, 289, 291], "shelf": [6, 128, 244, 245, 266, 267, 275], "draft": [6, 275], "paramet": [6, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 40, 42, 43, 46, 47, 49, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 68, 73, 74, 76, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 130, 133, 135, 137, 139, 141, 143, 145, 146, 149, 151, 152, 153, 156, 159, 161, 164, 167, 168, 170, 172, 173, 175, 177, 180, 182, 184, 185, 186, 187, 189, 190, 192, 195, 197, 199, 200, 201, 202, 204, 205, 207, 212, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 235, 236, 241, 243, 244, 251, 254, 256, 278, 279, 281, 282, 283], "xarrai": [6, 15, 17, 113, 221, 222, 223, 224, 225, 226, 227, 228, 241, 266], "dataarrai": [6, 184, 185, 186, 199, 200, 201, 222, 223, 224, 225, 226, 241], "sea": [6, 128, 184, 186, 199, 201, 223, 224, 225, 226, 229, 260, 262, 265, 266, 267, 275, 281, 282, 288], "surfac": [6, 128, 184, 186, 199, 201, 223, 224, 225, 226, 229, 231, 237, 262, 266, 267, 275, 278, 281, 282, 283], "height": [6, 128, 184, 186, 199, 201, 223, 224, 225, 226, 229, 266, 267, 275, 281, 282], "mask": [6, 221, 224, 227, 228, 241, 266, 267, 275], "landicepressur": [6, 243], "deviat": 6, "float": [6, 8, 13, 21, 61, 63, 64, 68, 73, 93, 111, 113, 137, 139, 141, 143, 146, 149, 153, 156, 159, 168, 184, 185, 186, 187, 190, 197, 199, 200, 201, 202, 205, 212, 213, 215, 241, 243, 266], "densiti": [6, 12, 128, 266], "seawat": 6, "displac": 6, "land": [6, 128, 229, 265, 266, 267, 275, 291], "landicedraft": 6, "equal": [6, 237, 241, 245, 283], "entri": [6, 48, 81], "line": [6, 9, 31, 33, 84, 85, 95, 125, 241, 242, 245, 246, 265, 285], "type": [6, 13, 15, 17, 21, 90, 97, 120, 125, 210, 213, 215, 241, 243, 244, 245, 246, 253, 258, 263, 264, 266, 267, 278, 279, 281, 282, 283, 284, 290], "side": 6, "colon": 6, "doubl": [6, 128, 241, 242, 266], "back": [6, 266, 269, 285], "quot": 6, "interfer": 6, "abil": 6, "arg": [6, 11, 33, 84, 85, 241], "indic": [6, 7, 13, 15, 16, 33, 34, 111, 113, 125, 224, 239, 241, 263, 266, 267, 275, 283], "next": [6, 125, 244, 266, 275, 285], "indent": [6, 241], "obviou": [6, 13, 266], "none": [6, 13, 16, 20, 23, 24, 30, 33, 34, 35, 40, 42, 49, 52, 56, 57, 59, 61, 68, 74, 78, 87, 88, 89, 92, 93, 96, 98, 102, 105, 109, 110, 111, 112, 113, 115, 119, 130, 131, 143, 144, 171, 187, 188, 199, 202, 203, 212, 241, 266, 275, 278, 279, 281, 282, 283, 284, 288], "replac": [6, 8, 13, 21, 22, 23, 24, 25, 26, 42, 54, 80, 105, 115, 116, 125, 133, 145, 152, 243, 245, 266, 267, 285, 289], "els": [6, 7, 125, 241, 266], "further": [6, 243, 244, 273, 284, 289], "rais": [6, 8, 16, 33, 36, 52, 54, 111, 128, 241, 243, 244, 245, 266], "list_cas": 7, "list_machin": [7, 245], "list_suit": 7, "anywher": [7, 11, 125, 246], "setup_cas": [7, 8], "object": [7, 11, 15, 22, 23, 24, 80, 99, 100, 103, 105, 110, 111, 114, 115, 119, 120, 184, 199, 238, 243, 244, 245, 266], "later": [7, 16, 20, 30, 33, 40, 51, 111, 125, 130, 241, 266, 267], "contrast": 7, "read": [7, 18, 22, 23, 24, 33, 34, 42, 53, 79, 80, 114, 231, 241, 243, 266], "properti": [7, 13, 231, 241, 272, 279], "clean_cas": 7, "delet": [7, 245, 246, 263, 285], "constant": [7, 61, 68, 69, 128, 231, 266, 278, 279, 281, 283, 284, 289], "setup_suit": 7, "clean_suit": 7, "write": [7, 11, 12, 14, 17, 114, 220, 241, 243, 246, 262, 266], "proven": [7, 9, 51, 265, 267], "save": [7, 17, 52, 76, 125, 232, 241, 243, 244, 266, 272, 277, 278], "dictionari": [7, 8, 13, 17, 18, 21, 23, 24, 26, 33, 34, 37, 42, 46, 51, 80, 83, 87, 105, 111, 114, 115, 116, 133, 233, 241, 243, 244, 245, 266, 279], "target": [7, 10, 15, 20, 35, 54, 56, 88, 125, 128, 130, 232, 235, 236, 241, 243, 266, 279], "minimum": [7, 56, 113, 128, 130, 232, 235, 236, 241, 266, 267, 275, 278, 279, 281, 282, 283, 284, 289], "determin": [7, 12, 13, 17, 35, 39, 42, 120, 125, 128, 134, 232, 233, 235, 236, 241, 244, 266, 275, 278, 279, 281, 282, 284, 285, 289], "maximum": [7, 16, 111, 113, 266, 267, 275], "product": 7, "ntask": [7, 13, 15, 20, 30, 33, 37, 40, 84, 85, 88, 128, 130, 143, 187, 202, 212, 241, 243, 266], "cpus_per_task": [7, 13, 33, 37, 40, 84, 85, 241], "attribut": [7, 11, 12, 13, 16, 39, 92, 98, 235, 236, 244, 266], "quickli": 7, "caveat": 7, "sit": 7, "idl": 7, "fraction": [7, 266, 275, 278, 279, 281, 282, 283, 284], "runtim": [7, 25, 39, 145, 152, 172, 189, 204, 241, 243, 266], "min_task": [7, 13, 15, 20, 30, 33, 40, 84, 85, 88, 128, 130, 143, 187, 202, 212, 241, 243, 266], "min_cpus_per_task": [7, 13, 33, 40, 84, 85, 241], "fewest": 7, "least": [7, 12, 16, 238, 246], "fail": [7, 13, 16, 20, 30, 33, 40, 42, 52, 111, 125, 130, 143, 187, 202, 212, 241, 265, 266, 267, 279, 281, 282], "run_task": [7, 241, 243], "run_single_step": 7, "oper": [7, 41, 125, 148, 158, 241, 243, 290], "log": [7, 9, 16, 17, 33, 42, 85, 111, 112, 113, 241, 243, 246, 265, 285], "figur": [7, 237, 239, 241, 244, 267], "cpu": [7, 13, 125, 241, 266, 285], "per": [7, 13, 20, 30, 32, 33, 40, 84, 85, 125, 128, 130, 241, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 281, 282, 284, 289], "method": [7, 8, 12, 13, 15, 18, 20, 25, 26, 33, 34, 38, 39, 42, 43, 44, 45, 46, 51, 60, 61, 65, 68, 69, 70, 74, 75, 88, 94, 114, 128, 129, 130, 133, 136, 137, 139, 141, 143, 145, 146, 149, 151, 152, 153, 156, 159, 161, 163, 164, 167, 170, 172, 173, 175, 177, 178, 179, 180, 182, 184, 187, 189, 190, 192, 194, 195, 197, 199, 202, 204, 205, 207, 209, 210, 212, 213, 215, 217, 232, 233, 235, 236, 238, 241, 243, 245, 249, 250, 251, 253, 254, 256, 266, 279, 284, 289], "retriev": [7, 263], "store": [7, 16, 44, 125, 128, 235, 236, 241, 243, 266, 285], "case_output": [7, 11], "individu": [7, 8, 17, 111, 243, 245, 266, 272, 273, 278, 285, 291], "implement": [7, 8, 232, 233, 235, 236, 237, 245, 262, 278, 279, 281, 282], "window": 7, "update_cach": 7, "_cached_fil": [7, 241], "map": [7, 15, 18, 26, 68, 69, 88, 112, 113, 133, 175, 177, 233, 246, 267], "origin": [7, 49, 246, 266, 285], "enabl": [7, 17, 241, 263, 267, 273, 281, 282], "consum": [7, 241, 243, 266, 290], "faster": [7, 246], "debug": [7, 121, 122, 123, 124, 125, 126, 266, 268, 269, 270, 271, 273], "parser": [8, 51], "mpas_tool": [8, 11, 12, 73, 232, 235, 236, 237, 241, 266], "mpasconfigpars": 8, "polarisconfigpars": [8, 33, 42, 52, 55, 56, 83, 86, 87, 103, 112, 184, 199, 219, 221, 222, 223, 227, 228, 266], "certain": [8, 16, 51, 125, 241, 246, 267, 284, 289], "add_from_packag": [8, 245, 266], "content": [8, 13, 105, 107, 120, 239, 241, 245, 262, 266, 285, 288], "make_diagnostics_fil": 8, "makediagnosticsfil": 8, "self": [8, 10, 11, 13, 15, 17, 44, 76, 128, 238, 241, 243, 244, 245, 266, 267], "cfg": [8, 44, 238, 243, 244, 245, 266, 267, 285], "except": [8, 16, 33, 36, 52, 111, 241, 245, 266], "second": [8, 12, 13, 143, 212, 237, 241, 245, 278, 283, 288], "behavior": [8, 13, 102, 241, 242, 243, 246, 266], "noth": [8, 125, 263, 279], "being": [8, 25, 33, 42, 101, 111, 125, 145, 152, 172, 189, 204, 241, 243, 244, 245, 246, 266, 275], "test_group": [8, 18, 19, 33, 42, 137, 139, 141, 149, 153, 159, 164, 182, 197, 210, 213, 241, 243, 244, 251, 254, 266], "fals": [8, 12, 13, 16, 17, 20, 33, 35, 43, 49, 57, 59, 101, 102, 109, 111, 113, 125, 130, 215, 217, 231, 241, 243, 244, 260, 266, 267, 269, 271, 273, 278], "class": [8, 10, 12, 13, 15, 17, 18, 20, 28, 33, 38, 42, 46, 51, 60, 61, 68, 74, 88, 114, 128, 129, 130, 136, 137, 139, 141, 143, 146, 149, 151, 153, 156, 159, 161, 163, 164, 167, 170, 173, 175, 177, 178, 179, 180, 182, 184, 187, 190, 192, 194, 195, 197, 199, 202, 205, 207, 209, 210, 212, 213, 215, 217, 229, 232, 233, 235, 236, 237, 238, 241, 243, 244, 248, 249, 250, 251, 253, 254, 256, 258, 262, 266], "larg": [8, 16, 241, 243, 266, 268], "those": [8, 13, 16, 42, 110, 111, 125, 243, 244, 245, 246, 265, 266, 279, 284, 289, 290], "configpars": [8, 84, 85, 244], "getinteg": 8, "getfloat": [8, 11, 13, 15, 241, 266], "getboolean": [8, 241, 266], "getlist": [8, 266], "comma": [8, 279], "integ": [8, 12], "boolean": [8, 113, 224], "etc": [8, 13, 106, 109, 238, 241, 243, 278], "getexpress": 8, "tupl": 8, "rang": [8, 113, 266, 279], "numpi": [8, 12, 62, 69, 70, 76, 112, 128, 135, 219, 220, 241, 266], "linspac": [8, 17, 233, 279], "arang": 8, "arrai": [8, 62, 69, 70, 76, 112, 128, 219, 220, 222, 223, 224, 225, 266], "One": [8, 12, 266, 285, 290], "advantag": [8, 13, 125, 245, 266, 272], "track": [8, 20, 241, 243, 246], "associ": [8, 12, 13, 17, 221, 227, 228, 232, 243, 244, 246, 264], "belong": [9, 11, 13, 20, 30, 33, 40, 42, 46, 61, 68, 74, 88, 130, 136, 137, 139, 141, 143, 146, 149, 151, 153, 156, 159, 161, 163, 164, 167, 170, 173, 175, 177, 179, 180, 182, 187, 190, 192, 194, 195, 197, 202, 205, 207, 209, 210, 212, 213, 215, 217, 238, 241, 243, 244, 245, 250, 251, 253, 254, 256, 266, 290], "while": [9, 15, 17, 231, 232, 241, 244, 263, 264, 266], "meant": [9, 245, 267], "simplifi": 9, "verifi": [9, 242, 267], "io": [9, 241, 243, 245, 265, 266, 267, 276, 286], "remap": [9, 17, 175, 233, 265, 279, 284, 289], "visual": [9, 12, 15, 167, 192, 207, 233, 235, 236, 241, 243, 244, 264, 265, 279, 281, 282, 284, 289], "lot": [10, 128, 241, 245, 266], "o": [10, 11, 105, 107, 120, 125, 245, 246, 266, 267, 285], "handl": [10, 11, 243, 246, 266, 272], "intern": [10, 20, 42, 241, 246, 263], "lower": [10, 243, 266, 278], "directli": [10, 12, 13, 15, 33, 239, 241, 245, 264, 265, 266, 269], "readm": [10, 243], "importlib": [10, 243], "resourc": [10, 13, 30, 37, 40, 53, 83, 84, 85, 131, 143, 144, 171, 188, 203, 212, 232, 235, 236, 241, 243, 266], "import": [10, 11, 12, 13, 15, 17, 238, 241, 243, 244, 245, 246, 264, 266], "files_for_e3sm": [10, 243, 267], "str": [10, 13, 18, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 42, 46, 49, 52, 54, 55, 56, 57, 61, 68, 74, 78, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 130, 135, 137, 143, 151, 168, 170, 173, 175, 177, 212, 220, 241, 243, 244, 253, 266], "did": [10, 16, 111, 266], "add_input_fil": [10, 15, 34, 241, 243, 266], "collect": [10, 46, 91, 129, 238, 240, 249, 264, 266], "though": [10, 33, 243, 245, 266], "whenev": [10, 241, 266], "flexibl": [10, 233, 243, 246, 266], "No": [10, 265, 281, 282], "step_dir": 10, "database_root": [10, 125, 241, 267, 268, 269, 270, 271, 272, 273, 285], "download_path": 10, "join": [10, 266], "bathymetry_databas": [10, 241, 267], "remote_filenam": 10, "bedmachineantarctica_and_gebco_2019_0": 10, "05_degre": 10, "200128": 10, "local_filenam": 10, "topographi": [10, 224, 241, 244, 266, 275, 278, 279, 281, 282, 283, 284, 291], "url": [10, 35, 52, 241, 263, 267], "web": [10, 241, 267], "anl": [10, 241, 267], "gov": [10, 241, 263, 267, 269, 273], "mpas_standalonedata": [10, 125, 267, 272], "dest_path": [10, 52], "remot": [10, 35, 246, 265], "bathymetri": [10, 241, 267], "strategi": 11, "stderr": [11, 33, 42, 241], "loggingcontext": 11, "check_cal": [11, 241], "most": [11, 39, 125, 229, 238, 241, 244, 245, 246, 258, 264, 266, 267, 272, 273, 275, 276, 286, 291], "won": [11, 245, 266, 267], "logger": [11, 33, 42, 60, 85, 241, 243, 266], "full": [11, 33, 84, 102, 222, 223, 232, 233, 241, 243, 246, 262, 265, 266, 272, 275, 277, 278, 279, 281, 282, 283, 284, 285], "although": 11, "captur": 11, "insid": [11, 241, 245], "explicit": [11, 245], "go": [11, 241, 243, 244, 245, 246, 266, 273], "subprocess": [11, 33, 84, 85, 101, 241, 245, 263], "produc": [11, 13, 15, 17, 33, 34, 36, 49, 128, 139, 149, 159, 232, 233, 235, 236, 237, 241, 245, 246, 251, 262, 266, 281, 282, 285, 288], "otherwis": [11, 16, 125, 241, 243, 266, 268, 269, 270, 271, 272, 273, 278], "intent": 11, "desir": [11, 12, 13, 16, 17, 111, 128, 233, 241, 242, 266, 267, 285], "trick": [11, 241], "direct": [11, 12, 13, 73, 184, 199, 232, 235, 236, 243, 266, 273, 278, 281, 282], "snippet": [11, 266], "dome": [11, 60, 241, 243, 244, 264, 285, 291], "setup_mesh": [11, 241], "setupmesh": [11, 241, 243], "create_landice_grid_from_generic_mpas_grid": 11, "mpas_grid": [11, 241], "landice_grid": [11, 241, 266], "l": [11, 111, 266, 273], "global": [12, 15, 46, 92, 93, 98, 163, 164, 233, 241, 242, 244, 245, 264, 265, 266, 267, 273, 279, 284, 285, 289, 291], "quasiuniformsphericalmeshstep": [12, 233], "icosahedralmeshstep": [12, 233], "jigsaw": [12, 61, 65, 67, 68, 70, 72, 74, 164, 167, 241], "complex": [12, 16, 69, 243, 245, 266], "build_cell_width_lat_lon": [12, 68], "opt": [12, 74], "make_jigsaw_mesh": [12, 68], "icosahedr": [12, 61, 63, 164, 167, 279], "significantli": [12, 275], "smooth": 12, "cell": [12, 13, 17, 61, 62, 63, 64, 68, 69, 70, 73, 76, 90, 97, 128, 130, 131, 144, 168, 171, 184, 186, 188, 199, 201, 203, 221, 222, 223, 224, 227, 228, 232, 235, 236, 241, 243, 244, 260, 275, 278, 279, 281, 282, 283, 284, 288], "quasi": [12, 68, 267, 279, 284, 289], "hand": [12, 93, 245], "restrict": [12, 266, 284], "resolut": [12, 13, 15, 61, 64, 68, 69, 73, 89, 93, 96, 137, 139, 141, 143, 146, 149, 151, 153, 156, 159, 164, 167, 168, 170, 180, 187, 190, 192, 195, 197, 202, 205, 207, 210, 212, 213, 215, 232, 233, 235, 236, 237, 239, 241, 243, 244, 267, 278, 279, 281, 282, 283, 284, 289, 291], "subdivis": [12, 61, 62, 63, 64, 65], "icosahedron": [12, 62, 63, 64, 65], "tabl": [12, 246, 272, 285], "approxim": [12, 61, 63, 64, 68, 128, 131, 144, 171, 188, 203, 232, 235, 236, 246, 266], "width": [12, 61, 62, 63, 68, 69, 70, 76, 266, 278], "km": [12, 61, 62, 63, 64, 68, 69, 70, 73, 76, 137, 139, 141, 143, 146, 149, 151, 153, 156, 159, 170, 187, 190, 197, 202, 205, 212, 213, 215, 232, 233, 235, 236, 266, 267, 278, 279, 281, 282, 283, 284, 289, 291], "5": [12, 63, 125, 128, 153, 232, 233, 241, 242, 243, 245, 263, 266, 267, 278, 279, 284, 285, 289], "240": [12, 63, 233, 267, 279], "6": [12, 63, 241, 266, 276, 278, 283, 285, 286], "120": [12, 63, 242, 279], "7": [12, 63, 125, 266, 273, 279, 285], "60": [12, 13, 63, 233, 275, 279], "8": [12, 63, 125, 232, 243, 246, 266, 267, 278, 279, 281, 282, 285], "30": [12, 63, 244, 266, 273, 278, 279, 283, 284, 289], "9": [12, 17, 63, 125, 233, 266, 279, 285], "15": [12, 13, 63, 232, 266, 278, 279, 283, 284, 285, 289], "10": [12, 16, 63, 125, 229, 232, 235, 236, 243, 244, 266, 267, 272, 275, 278, 281, 282, 283, 291], "11": [12, 63, 125, 266, 285], "3": [12, 63, 125, 232, 241, 242, 244, 246, 263, 266, 267, 272, 273, 275, 278, 279, 281, 282, 284, 285], "13": [12, 63, 266, 278], "94": [12, 63], "spherical_mesh": [12, 69], "cell_width": [12, 61, 62, 63, 64, 68, 69, 70, 76], "icosahedral_method": 12, "jigsaw_mesh_filenam": 12, "msh": 12, "jigsaw_geom_filenam": 12, "geom": 12, "jigsaw_jcfg_filenam": 12, "jig": 12, "jigsaw_hfun_filenam": 12, "spac": 12, "triangles_filenam": 12, "mesh_triangl": 12, "mpas_mesh_filenam": 12, "base_mesh": [12, 61, 68, 241, 266], "plot": [12, 76, 112, 113, 128, 156, 161, 175, 217, 232, 233, 235, 236, 256, 279, 281, 282, 288, 291], "plot_cell_width": 12, "cell_width_filenam": [12, 76], "cellwidthvslatlon": 12, "cell_width_image_filenam": 12, "cellwidthglob": 12, "cell_width_colormap": 12, "3wbgy5": 12, "add_mesh_dens": 12, "vtk": 12, "convert_to_vtk": 12, "vtk_dir": 12, "base_mesh_vtk": 12, "extract": 12, "lat": [12, 15, 62, 68, 69, 70, 76, 89, 91, 93, 96, 112, 175, 233, 267, 279], "lon": [12, 15, 62, 68, 69, 70, 76, 89, 91, 93, 96, 112, 175, 233, 267, 279], "sphere": [12, 233, 279], "vtk_lat_lon": 12, "far": [12, 125, 221, 227, 228, 245, 266], "But": [12, 125, 241, 244, 245, 246, 266, 267, 272], "hexagon": [12, 73, 266, 281, 282], "planar_hex": [12, 73, 232, 235, 236, 237, 241, 266], "make_planar_hex_mesh": [12, 73, 232, 235, 236, 237, 241, 266], "x": [12, 17, 62, 69, 70, 73, 76, 92, 98, 113, 135, 184, 199, 241, 243, 266, 278, 281, 282, 283], "y": [12, 13, 17, 73, 92, 98, 113, 184, 199, 232, 235, 236, 241, 243, 266, 273, 278, 281, 282], "nx": [12, 73, 241, 244, 266], "ny": [12, 73, 241, 244, 266], "dc": [12, 241, 244, 266], "distanc": [12, 73, 266, 278], "adjac": [12, 275], "center": [12, 17, 73, 184, 199, 244, 266, 275, 278], "admittedli": 12, "oddli": 12, "period": [12, 231, 232, 235, 236, 241, 266, 278, 281, 282], "nonperiodic_x": [12, 241, 266], "nonperiodic_i": [12, 241, 266], "consider": [12, 221, 227, 228, 231, 260], "compute_planar_hex_nx_ni": [12, 266], "lx": [12, 73, 266, 278, 281, 282, 283], "ly": [12, 73, 266, 278, 283], "explan": 12, "subtleti": 12, "account": [12, 73, 246, 266, 268, 269, 271, 272, 273, 285], "behav": 12, "stagger": [12, 73], "physic": [12, 73, 254, 262, 266], "howev": [12, 241, 242, 243, 246, 266], "np": [12, 17, 233, 266, 279], "sqrt": [12, 281], "domain": [12, 20, 27, 73, 113, 128, 130, 135, 231, 244, 260, 266, 278, 279, 281, 282, 283, 284, 289, 291], "extra": [12, 246], "factor": 12, "500e3": 12, "160e3": 12, "1e3": [12, 244, 266], "max": [12, 128, 241, 266, 278, 279], "int": [12, 13, 20, 21, 30, 33, 40, 55, 56, 57, 61, 62, 63, 64, 65, 73, 84, 85, 88, 113, 130, 131, 143, 144, 164, 167, 168, 170, 171, 180, 187, 188, 192, 195, 202, 203, 207, 212, 241, 266, 283], "ds_mesh": [12, 17, 113, 266], "creation": [12, 241, 267], "build_mesh": 12, "build_planar_mesh": 12, "too": [12, 13, 20, 30, 33, 40, 84, 85, 130, 241, 244, 245, 266], "distant": 12, "futur": [12, 39, 241, 245, 264, 265, 266, 267, 283, 285, 291], "descend": [13, 15, 128, 238, 241, 243, 244, 245, 248, 266], "modelstep": [13, 128, 241, 243, 248, 266], "update_pio": [13, 20, 130], "make_graph": [13, 20, 130], "construct": [13, 129, 219, 221, 222, 223, 227, 228, 231, 237, 238, 243, 244, 249, 266, 278], "At": [13, 33, 42, 239, 240, 266], "set_model_resourc": 13, "thread": [13, 20, 30, 33, 39, 40, 42, 85, 130, 143, 187, 202, 212, 241, 242, 264, 266, 267, 269, 273, 285, 290], "openmp_thread": [13, 20, 30, 33, 40, 85, 130, 143, 187, 202, 212, 241, 243, 266], "prefix": [13, 35, 125, 246, 267], "end": [13, 232, 241, 243, 245, 246, 252, 262, 264, 266, 269, 278, 279, 281, 282, 283, 288], "yml": 13, "reason": [13, 15, 39, 125, 241, 245, 266, 290], "add_namelist_fil": [13, 20, 128, 241, 243], "add_yaml_fil": [13, 20, 241, 243, 266], "add_model_config_opt": [13, 20, 241, 243, 266], "add_streams_fil": [13, 20, 128, 241, 243], "themselv": [13, 245, 265], "question": [13, 241, 267], "constructor": [13, 232, 235, 236, 238, 244, 266], "simpli": [13, 51, 125, 141, 210, 213, 238, 241, 243, 244, 246, 266, 275, 285, 290], "never": [13, 125, 264], "hierarch": 13, "run_mod": 13, "config_ocean_run_mod": 13, "time_manag": [13, 266], "config_run_dur": [13, 243, 266], "0024_00": 13, "00": [13, 16, 243, 260, 266, 273, 285], "ale_vertical_grid": 13, "config_vert_coord_mov": 13, "impermeable_interfac": 13, "decomposit": [13, 42, 139, 264, 266], "config_block_decomp_file_prefix": [13, 266], "time_integr": [13, 266], "config_time_integr": 13, "rk4": [13, 245], "filename_templ": [13, 266], "restart": [13, 42, 235, 236, 237, 242, 245, 251, 252, 262, 264, 266, 285, 290], "output_interv": [13, 266], "0030_00": 13, "clobber_mod": [13, 266], "truncat": [13, 266], "reference_tim": 13, "0001": [13, 266], "01": [13, 260, 266, 283, 288], "01_00": [13, 260, 266], "tracer": [13, 17, 232, 233, 235, 236, 237, 266, 279, 281, 282, 283], "xtime": [13, 266], "normalveloc": [13, 16, 17, 140, 142, 150, 155, 160, 183, 198, 200, 211, 231, 232, 235, 236, 237, 241, 266, 283], "layerthick": [13, 16, 128, 138, 140, 142, 150, 155, 160, 183, 198, 211, 221, 225, 226, 227, 228, 232, 235, 236, 237, 241, 243, 266], "refzmid": [13, 221, 227, 228, 241, 266], "reflayerthick": 13, "kineticenergycel": 13, "relativevorticitycel": 13, "unlik": [13, 16, 266], "clariti": [13, 241], "guarante": [13, 125, 229, 246, 258], "uniqu": [13, 125, 243, 266], "global_converg": [13, 229, 234, 266, 276, 277, 280], "cosine_bel": [13, 266, 284, 289], "substitut": 13, "config_write_output_on_startup": [13, 266], "0000_00": [13, 266], "config_use_mom_del2": [13, 266], "config_implicit_bottom_drag_coeff": [13, 266], "0e": [13, 282, 283], "config_use_cvmix_background": 13, "config_cvmix_background_diffus": [13, 266], "config_cvmix_background_viscos": [13, 266], "worri": 13, "sometim": [13, 221, 227, 228, 241, 243, 264, 266], "easier": [13, 241, 245, 246, 267, 285, 290], "togeth": [13, 125, 264, 266, 290], "overkil": 13, "reli": [13, 241, 266], "along": [13, 17, 125, 232, 241, 243, 265, 266], "could": [13, 15, 17, 125, 233, 241, 242, 243, 245, 246, 266, 279], "nu": [13, 143, 156, 212, 232, 241, 243, 266], "viscos": [13, 143, 153, 156, 232, 241, 243, 245, 266, 278], "hmix": 13, "config_mom_del2": [13, 232, 241, 266], "bool": [13, 20, 21, 25, 33, 35, 42, 43, 49, 52, 54, 57, 101, 102, 109, 111, 112, 116, 130, 143, 145, 152, 164, 167, 172, 189, 204, 212, 266], "cannot": [13, 16, 266], "known": [13, 33, 34, 125, 233, 241, 266], "beforehand": 13, "particularli": [13, 263, 266, 284, 289], "update_namelist_at_runtim": 13, "update_yaml_at_runtim": 13, "config_pio_num_iotask": 13, "pio_num_iotask": 13, "config_pio_strid": 13, "pio_strid": 13, "out_nam": 13, "bit": [13, 125, 245, 264, 266, 278, 285], "complic": [13, 244, 245, 246, 248, 266], "slightli": [13, 16, 246], "sophist": 13, "immutable_stream": [13, 266], "var_struct": [13, 258], "var": [13, 106, 258, 266], "var_arrai": [13, 258], "tag": [13, 265], "taken": [13, 20, 130, 233, 241, 266, 273, 285], "past": 13, "experi": [13, 125, 245, 275], "shown": [13, 125, 239, 243, 283], "featur": [13, 245, 246, 264, 266, 267, 278, 283], "difficult": [13, 125, 272], "synchron": [13, 265], "equival": [13, 246, 266, 268], "template_replac": [13, 23, 24], "treat": [13, 242, 245], "jinja2": [13, 23, 24, 105], "render": [13, 23, 24, 105], "d_": 13, "restart_interv": 13, "stream_replac": 13, "dynamic_adjust": [13, 267], "qu240dynamicadjust": 13, "seri": [13, 128, 156, 161, 217, 233, 235, 262, 266, 277], "dynam": [13, 130, 163, 229, 237, 267, 278, 279, 283, 284], "adjust": [13, 125, 128, 163, 229, 267], "durat": [13, 232, 235, 236, 237, 242, 266], "interv": 13, "spin": 13, "reus": [13, 241, 245, 246, 266, 267, 285], "qualit": [13, 16], "update_streams_at_runtim": 13, "fairli": [13, 243, 245, 246, 266], "hour": [13, 125, 235, 236, 242, 262, 269, 273, 281, 282, 285, 288], "turn": [13, 33, 50, 241, 263, 266, 283], "datetim": 13, "timedelta": 13, "3600": 13, "planar_converg": 13, "delta": [13, 275, 278, 283], "minut": [13, 125, 232, 242, 278, 290], "dai": [13, 153, 232, 233, 237, 243, 262, 266, 278, 279, 283, 288], "03d": 13, "_": [13, 88, 125, 241, 243, 246, 266, 283], "02d": 13, "forgotten": 13, "broken": [13, 241, 245], "immedi": [13, 60, 246, 266], "miss": [13, 16, 241, 266, 267], "detect": [13, 17, 267, 268, 270, 271, 272, 285], "gpmeti": [13, 267], "divid": [13, 275], "partition_graph": [13, 20, 130], "circumst": [13, 16, 33, 34, 241, 266], "wast": 13, "update_namelist_pio": 13, "v1": [13, 275], "better": [13, 15, 125, 285], "v2": [13, 267, 275], "littl": [13, 245, 246, 265, 266], "feel": [13, 125, 241, 266], "runtime_setup": [13, 15, 30, 40, 232, 235, 236, 243], "yourself": [13, 266, 272], "fact": [13, 33, 125], "culler": 13, "cull": [13, 232, 235, 236, 241, 266], "model_step": [13, 241], "make_graph_fil": [13, 241], "field": [13, 16, 76, 78, 113, 175, 221, 227, 228, 231, 232, 235, 236, 237, 266, 278, 279, 281, 282], "weight": [13, 15, 78, 221, 227, 228, 266, 275], "weight_field": [13, 78], "frequent": [15, 229, 258], "observ": [15, 265], "dataset": [15, 113, 184, 199, 221, 227, 228, 241, 266], "region": [15, 17, 265, 267], "pyremap": [15, 94], "interpol": [15, 88, 233, 267], "hood": 15, "esmf_regridweightgen": 15, "mappingfilestep": [15, 17], "woa": 15, "2023": [15, 281, 282], "__init__": [15, 18, 20, 33, 42, 46, 51, 60, 61, 68, 74, 88, 114, 129, 130, 136, 137, 139, 141, 143, 146, 149, 151, 153, 156, 159, 161, 163, 164, 167, 170, 173, 175, 177, 179, 180, 182, 184, 187, 190, 192, 194, 195, 197, 199, 202, 205, 207, 209, 210, 212, 213, 215, 217, 238, 241, 243, 244, 245, 249, 250, 251, 253, 254, 256, 264, 266], "mytestcas": 15, "__int__": 15, "make_map": 15, "64": [15, 275], "bilinear": [15, 88, 233, 279, 284, 289], "filenam": [15, 35, 36, 82, 89, 90, 91, 92, 96, 97, 98, 103, 111, 115, 117, 241, 246, 266], "woa23_decav_0": 15, "25_extrap": 15, "20230414": 15, "initial_condition_databas": [15, 267], "destin": [15, 88, 89, 90, 91, 92, 93, 94], "src_from_lon_lat": 15, "lon_var": [15, 89, 91, 96], "lat_var": [15, 89, 91, 96], "dst_from_mpa": 15, "mesh_nam": [15, 89, 90, 91, 92, 93, 96, 97, 98, 168, 170, 173, 175, 177], "qu60": 15, "subclass": [15, 65, 68, 69, 70, 75, 128, 266], "src_": 15, "dst_": 15, "pick": [15, 99, 100], "vizmap": [15, 164, 175, 233], "super": [15, 238, 241, 243, 244, 245, 266], "128": [15, 242, 269, 270, 273], "cosine_bell_viz": [15, 17, 233, 279, 284, 289], "dlon": [15, 93, 233, 279, 284, 289], "dlat": [15, 93, 233, 279, 284, 289], "remap_method": [15, 233, 279, 284, 289], "src_from_mpa": 15, "dst_global_lon_lat": 15, "lon_min": [15, 93], "With": [15, 246], "approach": [15, 241, 244, 245, 246, 263, 266, 275], "perhap": [15, 17, 36, 244], "cover": [15, 260, 266], "nearli": [15, 241, 264, 265, 266], "situat": [15, 26, 133, 266, 285], "workflow": [15, 241, 246], "critic": [16, 266], "compare_vari": [16, 243, 266], "filename1": [16, 111, 243, 266], "filename2": [16, 111, 266], "simpl": [16, 125, 128, 245, 258, 266, 285], "temperatur": [16, 138, 140, 142, 150, 155, 160, 211, 214, 231, 232, 236, 237, 241, 243, 262, 266, 278, 279, 283, 284, 289], "salin": [16, 138, 140, 142, 150, 155, 160, 211, 214, 231, 232, 237, 241, 243, 266, 278, 279, 283, 284, 289], "prognost": [16, 278], "4proc": [16, 140, 266, 278], "8proc": [16, 140, 266, 278], "alter": [16, 222, 223, 241, 243, 265, 266, 275, 278, 279, 281, 282, 283, 284], "skip_if_step_not_run": [16, 111, 243], "possibli": [16, 241, 246, 266], "failur": 16, "valueerror": [16, 243, 244, 245], "quiet": [16, 102, 111, 116], "report": 16, "threshold": [16, 279, 281, 282], "l1": [16, 111], "00000000000000e": 16, "l2": [16, 111], "l_infin": 16, "linf": [16, 111], "test_nightly_latest": 16, "10km": [16, 232, 243, 244, 266, 278, 285, 290, 291], "threads_test": 16, "1thread": [16, 160, 232, 278], "2thread": [16, 160, 278], "test_20210616": 16, "further_valid": 16, "add_output_fil": [16, 34, 241, 243, 266], "disabl": [16, 17, 231, 279, 291], "check_output": [16, 111], "zero": [16, 222, 223, 224, 225, 226, 231, 232, 237, 266, 279, 283], "l1_norm": [16, 111], "l2_norm": [16, 111], "linf_norm": [16, 111], "nonzero": [16, 111], "easiest": [16, 125, 246], "solut": [16, 124, 184, 185, 186, 194, 195, 197, 199, 200, 201, 202, 205, 207, 233, 235, 236, 242, 263, 266, 281, 282], "clobber": 16, "judgment": 16, "enough": [16, 232, 241, 245, 266], "problem": [16, 241, 246, 263, 266], "compare_tim": 16, "rundir1": [16, 110], "92264": 16, "82317": 16, "percent": 16, "781019682649793": 16, "speedup": 16, "1208377370409515": 16, "aspect": [17, 266], "routin": 17, "viz": [17, 164], "plot_horiz_field": [17, 266], "patch": [17, 113, 266], "style": [17, 128, 265, 266], "edg": [17, 90, 93, 97, 113, 184, 185, 199, 200, 231, 266], "polygon": 17, "character": 17, "accordingli": [17, 86], "d": [17, 113, 184, 199, 221, 227, 228, 231, 241, 266, 283], "final_normalveloc": [17, 266], "t_index": [17, 113, 266], "vmin": [17, 113, 233, 266, 279], "max_veloc": [17, 266], "vmax": [17, 113, 233, 266, 279], "cmap": [17, 113, 266], "cmo": [17, 266], "balanc": [17, 266], "show_patch_edg": [17, 113, 266], "globe": [17, 233, 279], "plot_glob": 17, "plot_land": [17, 112], "contin": [17, 112], "overlain": 17, "usag": [17, 267, 269, 273], "cmocean": [17, 266], "noqa": [17, 60, 167, 170, 173, 192, 207, 266], "f401": [17, 266], "xr": [17, 184, 185, 186, 199, 200, 201, 266], "open_dataset": [17, 241, 266], "tracer1": 17, "isel": 17, "nvertlevel": [17, 113, 221, 227, 228, 241, 266, 275], "out_filenam": [17, 108, 112, 220], "colormap_sect": [17, 112], "titl": [17, 112, 113], "colormap": [17, 112, 113, 233, 266, 279], "cosin": [17, 167, 170, 173, 175, 177, 233, 279, 284, 289], "bell": [17, 167, 170, 173, 175, 177, 233, 279, 284, 289], "converg": [17, 192, 207, 233, 239, 242, 265, 266, 279, 284, 289, 290], "colormap_nam": [17, 112, 233, 279], "viridi": [17, 233, 266, 279], "norm": [17, 111, 112, 233, 279], "norm_typ": [17, 112, 233, 279], "norm_arg": [17, 112, 233, 279], "colorbar": [17, 112, 113, 233, 279], "tick": [17, 112, 233, 279], "mark": [17, 233, 246, 279], "colorbar_tick": [17, 112, 233, 279], "matplotlib": [17, 266], "standard": [17, 245, 246, 254, 266, 269, 285], "symlog": [17, 112], "symmetr": 17, "central": [17, 279], "logarithm": [17, 113], "color": [17, 113], "normal": [17, 184, 185, 199, 200, 231, 241, 242, 246, 266, 272], "symlognorm": 17, "lognorm": 17, "hous": 18, "dict": [18, 21, 23, 24, 26, 33, 37, 42, 46, 80, 81, 83, 87, 88, 104, 105, 112, 114, 115, 116, 133, 243, 266], "kei": [18, 42, 46, 243], "testgroup": [19, 33, 42, 244, 245, 266], "max_memori": [20, 30, 33, 40, 130], "mesh_filenam": [20, 78, 130], "graph_filenam": [20, 78, 130], "graph": [20, 27, 29, 39, 78, 130, 232, 235, 236, 241, 266, 267], "make_yaml": 20, "stride": [20, 32, 130], "consist": [20, 32, 125, 130, 229, 246, 266, 267, 278], "partit": [20, 29, 39, 55, 78, 130, 232, 235, 236, 241, 267, 268, 269, 270, 271, 273, 285], "model_config_data": 20, "streams_data": 20, "ideal": [20, 30, 33, 40, 84, 85, 88, 128, 130, 143, 187, 202, 212, 241, 244, 245, 265, 266, 267, 291], "accommod": [20, 30, 33, 40, 84, 85, 130], "fewer": [20, 30, 33, 40, 84, 85, 130, 143, 187, 202, 212, 241, 266, 285], "memori": [20, 30, 33, 40, 130, 241, 267], "mb": [20, 30, 33, 40, 130, 267], "placehold": [20, 30, 33, 40, 130, 241, 285], "at_setup": [25, 145, 152, 172, 189, 204, 266], "overridden": [26, 133, 241, 243, 266], "diverg": [26, 133], "counterpart": [26, 128, 133], "nest": [26, 114, 116, 133], "graph_fil": 27, "parent": [28, 238, 241, 244], "done": [30, 40, 241, 246, 266, 285], "run_as_subprocess": [33, 241], "smallest": [33, 241, 264, 275, 291], "unit": [33, 89, 93, 96, 241, 264, 278, 291], "term": [33, 264, 266, 281, 282], "necessarili": [33, 35, 264], "input_data": 33, "until": [33, 34, 241, 243, 285], "finish": [33, 34, 75, 266], "suffici": 33, "establish": [33, 34], "is_depend": 33, "combin": [33, 35, 42, 51, 56, 87, 114, 241, 242, 243, 263, 266, 267, 285], "machine_info": 33, "machineinfo": 33, "config_filenam": [33, 42, 103, 241, 243], "base_work_dir": [33, 42, 241, 243], "log_filenam": [33, 42, 241], "redirect": [33, 241], "extern": [33, 125, 229, 238, 241, 258, 276, 286], "access": [34, 243, 245, 246, 266, 268, 272, 273], "database_compon": [35, 241], "work_dir_target": [35, 241], "come": [35, 125, 241, 246, 266, 268, 269, 270, 271, 272, 273, 276], "root": [35, 125, 168, 229, 233, 235, 236, 238, 241, 245, 246, 258, 264, 267, 268, 269, 270, 271, 272, 273, 275, 281, 282, 285], "_database_root": 35, "append": 35, "available_resourc": [37, 83], "constrain": [37, 131, 144, 171, 188, 203, 232, 235, 236, 241, 266], "cores_per_nod": [37, 83, 86, 125, 267, 268, 269, 270, 271, 272, 273, 285], "everi": [38, 178, 232, 241, 243, 245, 262, 263, 264, 266, 278, 283], "child": [38, 178, 238, 241, 243, 245], "serial": [39, 241, 243, 265, 266, 285], "subtask": 40, "stdout_logg": 42, "goe": [42, 241, 266], "regardless": 42, "new_step_log_fil": 42, "whole": [42, 135, 243, 245, 266, 285], "statu": 42, "run_by_default": [43, 241, 243], "assum": [44, 105, 115, 125, 243, 246, 266, 273, 278], "prior": [44, 241, 243], "greenland": [46, 244, 264, 265, 291], "eismint2": 46, "step_path": 49, "variant": [49, 232, 242, 244, 245, 246, 266, 272, 275, 278, 279], "uncach": 49, "datestamp": 49, "yymmdd": [49, 267], "dry": [49, 242], "meta": 51, "empti": [51, 241, 245, 246, 264, 266], "link_nam": 54, "overwrit": 54, "stackoverflow": [54, 266], "55742015": 54, "7728169": [54, 266], "symbol": [54, 241], "fileexistserror": 54, "unless": [54, 102, 246], "isadirectoryerror": 54, "slurm": [55, 86, 125, 241, 265, 267, 268, 269, 270, 271, 273, 285], "qo": [55, 268, 269, 271, 272, 273, 285], "qualiti": [55, 268, 269, 271, 272, 273, 285], "servic": [55, 268, 269, 271, 272, 273, 285], "constraint": [55, 273, 285], "wall_tim": [55, 285], "wall": [55, 285], "target_cor": 56, "min_cor": 56, "decomposition_test": [60, 244, 285], "decompositiontest": [60, 244], "e501": [60, 167, 170, 173, 192, 207, 266], "turquois": [60, 269], "usr": [60, 125, 269, 285], "climat": [60, 268, 269, 270, 272, 285], "mhoffman": 60, "latitud": [62, 69, 89, 91, 93, 96, 112, 233, 279, 284, 289], "longitud": [62, 69, 70, 76, 89, 91, 93, 96, 112, 233, 279, 284, 289], "ndarrai": [62, 69, 70, 76, 112, 135, 219, 220, 266], "degre": [62, 69, 70, 76, 93, 267, 278], "length": [62, 69, 70, 76], "180": [62, 69, 70, 76, 93, 279], "90": [62, 69, 70, 76, 241, 279], "static": [63, 64], "rule": 63, "thumb": 63, "achiev": [64, 242], "uniform": [68, 73, 170, 232, 233, 235, 236, 244, 266, 267, 278, 279, 281, 282, 283, 284, 289], "natur": 73, "jigsawpi": [74, 241], "jigsaw_jig_t": 74, "meti": 78, "defaults_filenam": 79, "total": [83, 241, 242, 245, 266, 267, 269, 285], "substep": [84, 85], "command_line_arg": 84, "cpus_per_nod": 86, "map_filenam": 88, "src_grid_info": 88, "dst_grid_info": 88, "neareststod": [88, 233, 279, 284, 289], "conserv": [88, 233, 279, 284, 289], "map_": 88, "source_typ": 88, "dest_typ": 88, "1d": [89, 93, 96, 112, 128, 219, 220, 221, 222, 223, 224, 225, 227, 228], "2d": [89, 93, 96, 112], "5x0": [89, 93, 96], "5degre": [89, 93, 96], "coordin": [89, 91, 92, 96, 98, 112, 113, 184, 199, 221, 227, 228, 274, 276, 278, 279, 281, 282, 283, 284, 288], "mesh_typ": [90, 97, 241, 243, 244], "vertex": [90, 97], "x_var": [92, 98], "y_var": [92, 98], "proj_attr": [92, 98], "proj_str": [92, 98], "proj": [92, 98], "left": [93, 128, 266, 275, 278, 279], "remapp": [94, 95], "remap_fil": 94, "ran": 99, "step_is_subprocess": 101, "is_task": 102, "steps_to_skip": 102, "progress": 102, "unpickl": [104, 241], "streams_filenam": 105, "lxml": [105, 107, 120], "etre": [105, 107, 120], "new_child": 106, "children": 106, "sub": [106, 266], "new_tre": 107, "copy_execut": [109, 285], "rundir2": 110, "infin": 111, "toler": 111, "exclud": [111, 285], "data_arrai": 112, "colorbar_label": 112, "subtitl": 112, "field_nam": 113, "out_file_nam": 113, "ax": 113, "z_index": 113, "cmap_set_und": 113, "cmap_scal": 113, "cmap_titl": 113, "horizont": [113, 128, 213, 231, 232, 235, 236, 237, 278, 281, 282, 283], "planar": [113, 128, 231, 266, 281, 282, 283, 284, 289], "depth": [113, 128, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 266, 267, 275, 278, 279, 281, 282, 283, 284], "slice": 113, "fieldnam": 113, "present": [113, 246, 266], "visibl": 113, "bar": 113, "classmethod": 115, "jinja": 115, "namelist_templ": 119, "polarisyaml": [119, 120], "processed_registry_filenam": 120, "registri": [120, 231, 258], "steam": 120, "1_anvil_intel_impi": [121, 125], "mvapich": [121, 125, 268], "ve": [121, 122, 123, 124, 126, 241, 246, 266], "1_anvil_gnu_openmpi": 121, "1_chicoma": 122, "cpu_gnu_mpich": [122, 126], "crai": [122, 125, 126, 269, 273], "1_chrysalis_intel_openmpi": 123, "1_chrysalis_gnu_openmpi": 123, "again": [124, 229, 241, 246, 263, 285], "soon": [124, 125, 266, 285], "1_compy_intel_impi": 124, "1_compy_gnu_openmpi": 124, "particular": [125, 244, 246, 265, 269, 272, 285], "load_polaris_env": [125, 246, 266, 285], "were": [125, 143, 212, 241, 245, 264, 266, 267, 271, 275], "right": [125, 128, 243, 246, 266, 267, 275, 278, 279, 285], "therefor": [125, 241, 248, 264, 266], "chicoma": [125, 272, 285], "mpich": [125, 246, 265, 269, 273, 285], "compi": [125, 271, 285], "pm": [125, 273, 285], "compymcnodefac": [125, 272], "perlmutt": [125, 269, 272, 285], "pretti": [125, 241, 245, 266, 267], "conda_path": [125, 246], "osx": [125, 272], "clang": [125, 246], "had": 125, "1_": 125, "morpheu": 125, "cobalt": [125, 268, 269, 270, 271, 272, 273], "single_nod": [125, 267, 268, 269, 270, 271, 272, 273, 285], "mpirun": [125, 263, 267, 268, 269, 270, 271, 272, 273, 285], "srun": [125, 263, 266, 267, 268, 269, 270, 271, 272, 273, 285], "parallel_execut": [125, 263, 267, 268, 269, 270, 271, 272, 273, 285], "modules_befor": [125, 269, 273], "modules_aft": [125, 269, 273], "polaris_env": [125, 268, 269, 270, 271, 272, 273], "deploi": [125, 246, 265, 268, 269, 270, 271, 272, 273], "mpi_gnu": [125, 268, 269, 270, 271, 272, 273], "hdf5": [125, 268, 269, 270, 271, 272, 273], "use_e3sm_hdf5_netcdf": [125, 268, 269, 270, 271, 272, 273], "discoveri": 125, "identifi": [125, 258, 291], "hostnam": 125, "hostname_contain": 125, "queu": 125, "laptop": [125, 246, 266, 267], "workstat": [125, 246], "high": [125, 241, 270, 272], "hpc": [125, 246, 269, 272], "safest": [125, 246], "mpi_": 125, "compiler_gnu": 125, "compiler_intel": 125, "hopefulli": [125, 267], "pre": [125, 246], "parlanc": 125, "concret": 125, "ubuntu": 125, "spec": [125, 263, 273], "gcc": 125, "curl": 125, "81": 125, "buildabl": 125, "install_missing_compil": 125, "cc": 125, "bin": [125, 246, 273, 285], "cxx": 125, "f77": 125, "fc": 125, "operating_system": 125, "ubuntu22": 125, "04": 125, "extra_rpath": 125, "luck": 125, "catch": [125, 242], "22": 125, "design": [125, 230, 241, 243, 245, 259, 265, 272, 278], "guess": [125, 266], "correct": [125, 246], "potenti": [125, 135, 153, 241, 243, 266, 278], "purg": 125, "perl": 125, "32": [125, 242, 285], "bsnc6lt": 125, "ugetvbp": 125, "sxfyy4k": 125, "2020": 125, "304": 125, "n3b5fye": 125, "j3zxncu": 125, "7ohuiwq": 125, "k2zu3y5": 125, "mirrcz7": 125, "shouldn": [125, 143, 212, 266], "variou": [125, 238, 241, 246], "ask": 125, "gb": 125, "zlib": 125, "incompat": 125, "ubuntu20": 125, "readlin": 125, "pkgconf": 125, "spackdir": 125, "env": [125, 273], "arch": 125, "repositori": [125, 239, 265, 266, 285], "x86_64_v4": 125, "free": [125, 231, 266, 267], "touch": [125, 246], "everyth": 125, "1_pm": 126, "ever": [128, 245, 248], "expand": [128, 248, 275], "oceanmodelstep": [128, 266], "decid": [128, 266], "veri": [128, 238, 241, 245, 246, 258, 266, 283], "earli": [128, 276, 285], "stage": [128, 231, 241, 243, 246, 253, 262, 276, 285], "map_yaml_to_namelist": 128, "heurist": 128, "algorithm": [128, 143, 212, 232, 235, 236, 241, 266], "200": [128, 235, 236, 243, 266, 278, 281, 282, 283], "round": [128, 279], "cell_count": [128, 131, 144, 171, 188, 203, 266], "goal_cells_per_cor": [128, 266, 279, 281, 282, 284, 289], "pinch": 128, "2000": [128, 244, 260, 262, 266, 288], "max_cells_per_cor": [128, 266, 279, 281, 282, 284, 289], "seciton": 128, "control": [128, 233, 241, 267, 278, 279, 283, 285], "scale": [128, 278, 285], "tri": [128, 245], "apport": 128, "precis": [128, 241, 266], "caviti": [128, 245, 266, 267, 275], "frazil": 128, "flux": [128, 231, 283], "grid_1d": 128, "generate_1d_grid": 128, "vertical_grid": [128, 219, 221, 227, 228, 244, 266, 267, 275, 278, 279, 281, 282, 283, 284], "z": [128, 222, 223, 224, 225, 226, 227, 228, 266, 278, 279, 281, 282, 283, 284], "star": [128, 226, 228, 266, 278, 279, 281, 282, 283, 284], "init_vertical_coord": [128, 266], "minlevelcel": [128, 221, 223, 224, 225, 226, 227, 228, 266], "maxlevelcel": [128, 221, 222, 223, 224, 225, 226, 227, 228, 241, 266], "cellmask": [128, 221, 224, 227, 228, 266], "zmid": [128, 221, 227, 228, 266], "restingthick": [128, 221, 226, 227, 228, 241, 266], "bottomdepth": [128, 221, 222, 224, 225, 226, 227, 228, 241, 266], "entir": [128, 266, 278, 290], "petersen": [128, 246, 266, 278], "et": [128, 266, 275, 278, 279, 281, 282], "al": [128, 266, 275, 278, 279, 281, 282], "2015": [128, 266, 278], "int_": 128, "rho": 128, "dv": 128, "sort": [128, 239, 245, 246], "increas": [128, 245], "compute_rp": [128, 266], "csv": [128, 266], "dynamic_ntask": 130, "available_cor": 132, "estim": [132, 134, 266], "initial_state_file_nam": [135, 266], "output_fil": [135, 241, 266], "energi": [135, 153, 243, 265, 266, 278], "state": [135, 231, 232, 233, 235, 236, 237, 241, 242, 266, 279], "len": [135, 241, 266], "superclass": [137, 232, 241], "run_time_step": [143, 212, 266], "resources_fix": [143, 212], "dt": [143, 212, 266, 278, 279, 281, 282, 284, 289], "btr_dt": [143, 212, 266, 278], "barotrop": [143, 212, 266, 278, 283], "longer": [149, 232, 242, 251, 266, 278, 279, 290], "shorter": [149, 242, 251], "20": [153, 232, 242, 243, 266, 278, 283], "rpe": [161, 217, 243, 245, 266, 285], "include_viz": 164, "less": [164, 167, 241, 275, 283], "globalocean": [164, 238], "cosinebel": [167, 170, 173, 233], "rmsevalu": 168, "squar": [168, 233, 235, 236, 281, 282], "ncell": [168, 241, 266], "viz_map": 175, "inerti": [179, 180, 182, 184, 187, 190, 192, 235, 276, 280], "graviti": [179, 180, 182, 184, 187, 190, 192, 235, 276, 280], "wave": [179, 180, 182, 184, 187, 190, 192, 199, 235, 241, 266, 276, 278, 280, 282], "analys": [180, 195], "inertialgravitywav": [182, 235], "exact": [184, 185, 186, 199, 200, 201, 233, 235, 236, 245, 281, 282], "angleedg": [184, 199], "angl": [184, 199], "posit": [184, 199, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 266, 275, 283], "xcell": [184, 199, 241, 266], "ycell": [184, 199, 241, 266], "xedg": [184, 199, 241, 266], "yedg": [184, 199], "f0": 184, "corioli": [184, 235, 236, 266, 278, 279, 282, 283], "eta0": [184, 199], "amplitid": [184, 199], "kx": [184, 199], "ky": [184, 199], "angular": [184, 199], "frequenc": [184, 199, 232], "veloc": [185, 200, 231, 232, 235, 236, 243, 246, 266, 279, 283, 285], "evalu": [185, 186, 200, 201], "norm_vel": 185, "eta": [186, 201, 281, 282], "manufactur": [194, 195, 197, 199, 202, 205, 207, 236, 282], "manufacturedsolut": [197, 236], "column": [209, 210, 213, 215, 237, 246, 248, 250, 251, 253, 254, 256, 258, 259, 260, 262, 283, 285, 288], "param": [210, 213, 215, 243, 244, 253], "singlecolumn": [210, 213, 237, 251, 254, 262], "iag": 214, "ideal_ag": [215, 217], "ivar": 215, "layer": [219, 220, 221, 225, 226, 227, 228, 231, 232, 235, 236, 237, 266, 267, 275, 278, 279, 281, 282, 283, 284], "meter": [219, 220], "bottom": [221, 222, 223, 224, 225, 226, 227, 228, 231, 266, 267, 275, 278, 279, 281, 282, 283, 284], "thick": [221, 225, 226, 227, 228, 232, 237, 260, 266, 267, 275, 278, 281, 288], "stretch": [221, 227, 228, 266, 275], "elev": [221, 227, 228, 266, 275], "midpoint": [221, 227, 228, 266], "reftopdepth": [221, 224, 225, 227, 228, 266], "down": [221, 222, 223, 224, 225, 226, 227, 228, 233, 266, 275, 279], "ref": [221, 227, 228, 266], "middl": [221, 227, 228, 266], "refbottomdepth": [221, 222, 223, 224, 225, 227, 228, 241, 266], "refinterfac": [221, 227, 228, 266], "element": [221, 227, 228, 266], "vertcoordmovementweight": [221, 227, 228, 241, 266], "movement": [221, 227, 228, 266], "partial": [222, 223, 266, 275, 278, 279, 281, 282, 283, 284], "seafloor": [222, 224, 225, 226, 275], "unstretch": 226, "shelv": [229, 267, 275], "ssh_adjust": [229, 241, 243, 267], "iter": [229, 267], "compass_branch": 229, "default_input": [229, 238, 258, 266, 267], "ocean_model": [229, 246, 267], "latest": [229, 246, 258, 265, 276, 285], "compat": [229, 246, 258, 263, 265], "verison": 229, "maintain": [229, 285], "inertial_gravity_wav": [229, 234, 281, 290], "manufactured_solut": [229, 234, 276, 280], "single_column": [229, 234, 258, 261, 276, 280, 286, 287], "minim": 231, "fcell": [231, 241, 266, 279], "fedg": [231, 241, 266, 279], "fvertex": [231, 241, 266, 279], "slip": 231, "solid": [231, 260, 278, 279], "tangenti": 231, "enforc": [231, 246], "nonperiod": 231, "drag": 231, "mass": 231, "momentum": [231, 232, 235, 236, 281, 282], "scalar": 231, "rigid": 231, "solv": [231, 263, 275], "mid": [231, 278], "vari": [231, 233, 241, 263, 272, 275, 279], "consult": [231, 266], "tidal_forc": 231, "eddi": [232, 278], "addition": [232, 235, 236, 237, 268, 269, 270, 271, 273], "diffus": [232, 235, 236, 237], "50": [232, 235, 236, 244, 266, 278, 281, 282, 283], "prescrib": [232, 235, 236], "intens": 232, "globalconverg": [233, 245, 266], "studi": [233, 279], "advect": [233, 279, 281, 282, 283], "qu": [233, 266, 267, 277, 279], "ico": [233, 266, 277, 279], "fix": [233, 244, 266], "spheric": [233, 279], "24": [233, 279, 288], "shape": [233, 279], "blob": 233, "around": [233, 266, 267, 278, 279], "rate": [233, 235, 236, 266, 279, 281, 282, 283], "cosine_bell_with_viz": [233, 277], "distribut": 233, "dt_per_km": [233, 266, 278, 279, 281, 282, 284, 289], "rmse": [233, 235, 236, 281, 282], "slow": [233, 279], "shallow": [235, 246, 279, 281, 282, 284], "water": [235, 266, 278, 279, 281, 282, 283, 284], "100": [235, 236, 237, 275, 281, 282, 283], "25": [235, 236, 281, 282, 283], "exactsolut": [235, 236], "obtain": [235, 236, 246, 269], "assign": [235, 236, 279], "simul": [235, 236, 241, 264, 266, 277, 278, 281, 282, 284, 285, 289], "fall": [235, 236, 285], "accept": [235, 236], "bound": [235, 236], "calcul": [235, 241, 243], "accord": [236, 281, 282, 285], "exercis": [237, 262, 279, 283], "kpp_test": 237, "mixedlayerdepthsoutput": 237, "enabel": 237, "idealagetrac": [237, 283], "dimens": [237, 278, 283], "single_column_forc": [237, 283], "profil": [237, 263, 283], "throughout": [237, 278, 283], "idealag": 237, "encompass": 238, "perspect": 238, "four": 238, "major": [238, 241], "add_test_group": [238, 245, 266], "univers": 238, "mix": [238, 244, 281, 282, 283], "ice_shelf_2d": 238, "iceshelf2d": 238, "ziso": [238, 275, 291], "landice_model": [238, 246], "organ": [239, 242, 244, 265], "green": 239, "blue": [239, 268, 285], "orang": 239, "red": 239, "laid": 239, "fig": 239, "among": [239, 244, 246, 266], "organiz": 239, "concept": [239, 245, 264, 266, 291], "multiprocess": [241, 245, 267], "outsid": [241, 246], "emploi": 241, "prevent": 241, "unwant": 241, "outer": 241, "inner": 241, "variable_resolut": [241, 244, 285], "dome_varres_grid": 241, "signific": [241, 242, 243], "neglig": 241, "convent": [241, 246, 266], "fit": [241, 267], "applic": [241, 245, 246, 284, 289], "meshstep": 241, "getint": 241, "mesh_cpus_per_task": 241, "mesh_min_cpus_per_task": 241, "previous": [241, 266], "processor": [241, 278], "write_netcdf": [241, 266], "convers": [241, 266], "generate_grid": 241, "dsmesh": 241, "graphinfofilenam": [241, 266], "use_dist": [241, 266, 278], "gradient_width_dist": [241, 266, 278], "gradient_width_frac": [241, 266, 278], "bottom_temperatur": [241, 266, 278], "surface_temperatur": [241, 266, 278, 283], "temperature_differ": [241, 266, 278], "coriolis_paramet": [241, 266, 278, 281, 282, 283], "bottom_depth": [241, 266, 267, 275, 278, 279, 281, 282, 283, 284], "vert_level": [241, 266, 267, 275, 278, 279, 281, 282, 283, 284], "ones_lik": [241, 266], "xmin": 241, "min": [241, 266, 278, 283], "xmax": 241, "ymin": 241, "ymax": 241, "ymid": 241, "xperturbmin": 241, "xperturbmax": 241, "perturbationwidth": 241, "yoffset": 241, "sin": [241, 266, 278, 281, 282], "pi": [241, 266, 275, 278, 279], "temp_vert": [241, 266], "frac": [241, 266, 275, 278, 281], "logical_and": [241, 266], "transpos": [241, 266], "3rd": [241, 266], "crest": [241, 266, 278], "expand_dim": [241, 266], "dim": [241, 266], "axi": [241, 266], "broadcast": [241, 266], "zeros_lik": [241, 266], "nedg": [241, 266], "dtype": [241, 266], "xvertex": [241, 266], "commandlin": 241, "harm": 241, "likewis": [241, 266], "subsequ": [241, 264, 290], "arisen": 241, "problemat": 241, "usual": [241, 243, 246, 266, 285], "forwardstep": 241, "mesh_path": 241, "mesh_step": 241, "with_ice_shelf_cav": [241, 243], "initial_state_target": 241, "adjusted_init": [241, 243], "forcing_data": 241, "entha_analy_result": 241, "mat": 241, "enthalpy_benchmark": 241, "ourselv": 241, "reduc": 241, "firewal": 241, "bedmachineantarctica_v2_and_gebco_2022_0": 241, "05_degree_20220729": 241, "slate": 241, "icepresent_qu60km_polar": 241, "practic": [241, 245, 246], "straightforward": 241, "commonli": [241, 264], "expens": [241, 242], "mechan": 241, "notat": [241, 284, 289], "That": [241, 245, 264, 266, 285], "word": 241, "ff": 241, "quwisc240": [241, 245, 285, 290], "90c": 241, "91c": 241, "92": [241, 275], "91": 241, "sowisc12to60": [241, 285, 290], "performance_test": 241, "effici": [241, 266], "transfer": 241, "feasibl": 241, "nor": [241, 266], "add_depend": 241, "overhead": 241, "philosophi": [242, 245, 266], "context": [242, 266], "namesak": 242, "256": [242, 269, 273], "count": 242, "quicker": 242, "exce": 242, "offer": 242, "benefit": [242, 265], "bug": 242, "covereag": 242, "timestep": 242, "exhaust": 242, "recent": [242, 276, 286], "merg": 242, "reach": 242, "steadi": 242, "wet": 242, "fundament": 243, "incorpor": 243, "deprec": 243, "constrain_resourc": [243, 266], "smoke_test": [243, 244], "smoketest": [243, 244], "velo_solv": 243, "sia": [243, 246], "fo": 243, "add_step": [243, 266], "runmodel": 243, "run_step": 243, "0200": 243, "00_00": [243, 260, 266], "fine": [243, 266, 283], "recip": 243, "res_param": [243, 244], "144": 243, "36": [243, 268, 272, 283, 285], "4km": [243, 244, 266, 278, 285], "unsupport": [243, 244, 246], "enumer": [243, 266], "rpe_": [243, 266], "_nu_": [243, 266], "deliber": 243, "chosen": [243, 283], "demonstr": [243, 266], "clumsi": [243, 245], "rpe_1_nu_1": [243, 266, 278], "rpe_2_nu_5": [243, 266, 278], "filesfore3sm": 243, "configure_global_ocean": 243, "with_bgc": 243, "po4": 243, "no3": 243, "sio3": 243, "nh4": 243, "fe": [243, 269], "o2": 243, "dic": 243, "dic_alt_co2": 243, "alk": 243, "dofe": 243, "dop": 243, "dopr": 243, "donr": 243, "zooc": 243, "spchl": 243, "spc": 243, "spfe": 243, "spcaco3": 243, "diatchl": 243, "diatc": 243, "diatf": 243, "diatsi": 243, "diazchl": 243, "diazc": 243, "diazf": 243, "phaeochl": 243, "phaeoc": 243, "phaeof": 243, "dm": 243, "dmsp": 243, "prot": 243, "poli": 243, "lip": 243, "conceptu": [244, 245], "realist": [244, 265, 291], "2000m": [244, 285], "34": [244, 285], "halfar": 244, "cism": 244, "dome_typ": 244, "closest": 244, "put_origin_on_a_cel": 244, "hydrologi": 244, "hydro": [244, 291], "dome_viz": 244, "time_slic": 244, "save_imag": 244, "hide": [244, 266], "hide_fig": 244, "add_test_cas": [244, 266], "restart_test": 244, "restarttest": 244, "talk": 244, "16": [244, 267, 283, 285], "10e3": 244, "40": [244, 271], "126": 244, "4e3": 244, "160": [244, 266, 278], "500": [244, 266, 267, 275, 278], "held": 244, "initial_condit": 245, "dig": [245, 267], "infrastructur": [245, 266], "background": 245, "behind": 245, "adher": [245, 266], "pep8": [245, 246], "bot": [245, 275], "violat": 245, "consid": 245, "editor": 245, "pycharm": [245, 246, 266], "spyder": 245, "linter": 245, "flake8": [245, 246], "discourag": 245, "reformat": 245, "autopep8": 245, "undesir": 245, "lint": 245, "wildcard": 245, "vim": [245, 266], "plugin": 245, "id": [245, 246], "commit": [245, 246], "why": 245, "sound": 245, "subpackag": 245, "understand": [245, 267], "downstream": 245, "tutori": [245, 246], "clu": 245, "intro": 245, "docstr": [245, 265, 266], "strip": 245, "mpas_ocean": 245, "hidden": 245, "shortcut": [245, 285], "referenc": [245, 266], "mention": 245, "dot": 245, "charact": 245, "unix": [245, 265], "distinct": 245, "mayb": [245, 266], "machine_config": 245, "endswith": 245, "splitext": 245, "exactli": [245, 246, 266, 275], "move": [245, 246, 266, 284, 289], "renam": 245, "visa": 245, "versa": 245, "comfort": [245, 266], "inherit": [245, 266], "orient": 245, "program": [245, 267], "led": 245, "felt": 245, "contribut": 245, "hesit": 245, "predecessor": [245, 264, 265], "harder": 245, "outcom": 245, "augment": 245, "explain": 245, "hope": 245, "dens": 245, "learn": [245, 266], "curv": 245, "worth": [245, 266], "skill": 245, "broadli": 245, "endeavor": 245, "readabl": 245, "manipul": 245, "get_available_cores_and_nod": 245, "theoret": 245, "dozen": 245, "split": 245, "theori": 245, "biogeochemistri": 245, "ksh": 246, "mac": [246, 265], "csh": 246, "tcsh": 246, "temporarili": 246, "recogn": [246, 267, 285], "permiss": 246, "anyon": 246, "caus": [246, 269, 273, 275], "person": [246, 263], "base_path_to_install_or_update_conda": 246, "with_netlib_lapack": 246, "flavor": [246, 266], "troubl": [246, 266], "recognit": 246, "trilino": 246, "downsid": 246, "unneed": 246, "reinstal": 246, "caution": 246, "load_": 246, "encod": 246, "load_dev_polaris_": [246, 266], "env_nam": 246, "dev_polaris_": [246, 263], "workdir": [246, 285], "unexpect": [246, 264, 266], "occur": [246, 263], "rerun": 246, "echo": 246, "proceed": 246, "notic": 246, "conda_env": [246, 271, 285], "rememb": 246, "incorrect": 246, "unus": 246, "session": [246, 266], "pip": 246, "substanti": 246, "risk": [246, 266], "rare": 246, "env_onli": 246, "mpas_make_target": [246, 285], "scientif": [246, 285], "_albani": 246, "instruct": [246, 266], "proce": 246, "es3m": 246, "compli": 246, "memor": 246, "guidelin": 246, "complianc": 246, "checker": 246, "isort": 246, "flynt": 246, "mypi": 246, "77": 246, "e302": 246, "blank": 246, "resolv": 246, "simpler": [246, 266], "new_branch_nam": 246, "put": [246, 266], "elsewher": 246, "disk": [246, 267, 269, 273], "respons": 246, "simplest": 246, "your_new_branch": 246, "seaicemodelstep": 248, "concern": 248, "six": 255, "polaris_branch": 258, "post": 258, "src": 258, "registry_process": 258, "seaice_model": 258, "1m": [260, 288], "disc": [260, 288], "condidion": 260, "config_initial_ice_area": 260, "config_initial_ice_volum": 260, "config_atmospheric_forcing_typ": 260, "config_forcing_start_tim": 260, "config_forcing_cycle_start": 260, "config_forcing_cycle_dur": 260, "config_forcing_precipitation_unit": 260, "mm_per_sec": 260, "config_forcing_sst_typ": 260, "ncar": 260, "config_update_ocean_flux": 260, "config_include_pond_freshwater_feedback": 260, "standard_phys": 262, "standardphys": 262, "year": [262, 276, 288], "volum": 262, "snow": 262, "exact_restart": 262, "exactrestart": 262, "geo": 263, "cartopi": 263, "14": 263, "np110py27_4": 263, "calledprocesserror": 263, "deploy_tmp": 263, "vpn": 263, "site": 263, "shell": [263, 265], "honor": 263, "wide": 263, "spawn": 263, "usernam": [263, 266, 269, 273], "proxy_en": 263, "all_proxi": 263, "proxyout": 263, "8080": 263, "no_proxi": 263, "localhost": [263, 267, 272, 273, 285], "127": 263, "proxy_dis": 263, "unset": 263, "anytim": 263, "fatal": 263, "mpi_init": 263, "stack": 263, "mpir_init_thread": 263, "159": 263, "mpid_init": 263, "164": 263, "mpidi_ch3_init": 263, "95": 263, "mpid_nem_init": 263, "314": 263, "mpid_nem_tcp_init": 263, "173": 263, "mpid_nem_tcp_get_business_card": 263, "395": 263, "getsockinterfaceaddr": 263, "369": 263, "pn2034311": 263, "errno": 263, "host": [263, 267, 272, 285], "plu": 264, "autom": 265, "exascal": 265, "earth": 265, "kept": 265, "sens": [265, 266], "boundari": [265, 278, 291], "expert": 265, "launch": 265, "uncoupl": 265, "evolv": [265, 275, 279, 283], "quick": [265, 266, 276, 286, 290], "queue": 265, "beginn": [265, 266], "advanc": [265, 266], "mpas_to_yaml": 265, "troubleshoot": 265, "proxi": 265, "lanl": [265, 267, 269], "gethostbynam": 265, "glossari": 266, "port": [266, 273], "stick": 266, "miniconda": 266, "3_chrysalis_intel_openmpi": 266, "strict": 266, "push": 266, "lowercas": 266, "hyphen": 266, "settl": 266, "desktop": 266, "realli": [266, 273], "nice": [266, 273], "supercomput": 266, "yet_another_channel": 266, "vi": 266, "polaris_head": 266, "yetanotherchannel": 266, "instanc": 266, "repres": [266, 275, 279], "highli": 266, "camelcas": 266, "capit": 266, "letter": 266, "cap": 266, "awkward": 266, "encourag": 266, "enclos": 266, "briefli": 266, "alphabet": 266, "interest": 266, "anyth": 266, "probabl": [266, 272], "suppos": 266, "easili": 266, "tide": 266, "analyz": 266, "sai": [266, 272], "res_str": 266, "1000": [266, 267, 275, 278, 281, 282], "still": [266, 276, 284, 285, 289], "ti": 266, "loop": 266, "coarsest": [266, 267], "especi": 266, "anticip": 266, "promot": 266, "pattern": 266, "familiar": 266, "seen": 266, "brows": 266, "row": 266, "greater": 266, "disadvantag": 266, "foremost": 266, "magic": 266, "effect": [266, 284], "pain": 266, "path_to_mpas_ocean": 266, "path_to_working_dir": 266, "cat": 266, "slurm_jobid": 266, "_run_test": 266, "gpf": 266, "fs1": 266, "cbegeman": 266, "successfulli": 266, "x_cell": 266, "y_cell": 266, "grid_typ": [266, 267, 275, 278, 279, 281, 282, 283, 284], "coord_typ": [266, 275, 278, 279, 281, 282, 283, 284], "partial_cell_typ": [266, 275, 278, 279, 281, 282, 283, 284], "min_pc_fract": [266, 275, 278, 279, 281, 282, 283, 284], "everywher": 266, "depress": [266, 275], "x_min": 266, "x_max": 266, "y_min": 266, "y_max": 266, "y_mid": 266, "x_perturb_min": 266, "x_perturb_max": 266, "perturb_width": [266, 278], "y_offset": 266, "normal_veloc": 266, "attr": 266, "mostli": 266, "logic": [266, 278], "northern": [266, 278], "half": [266, 278], "southern": [266, 278], "halv": [266, 278], "gradient": [266, 278, 281, 282, 283], "08": [266, 278], "500km": [266, 278], "40e3": [266, 278], "35": [266, 278, 279, 283, 284, 285, 289], "2e": [266, 278], "initial_temperatur": 266, "initial_normal_veloc": 266, "connect": [266, 273], "match": 266, "decomp": [266, 285, 290], "light": 266, "fast": 266, "e3sm_compon": 266, "interact": [266, 269, 272, 273, 285], "interrupt": 266, "pty": 266, "navig": 266, "newli": 266, "bunch": 266, "didn": 266, "mistak": 266, "finger": 266, "cross": 266, "initial_normalveloc": 266, "initial_salin": 266, "btr_dt_per_km": [266, 278], "obvious": 266, "stress": [266, 283], "bring": 266, "landicemodelstep": 266, "huge": 266, "cp": 266, "config_dt": 266, "05": 266, "split_explicit_t": 266, "config_btr_dt": 266, "hmix_del2": 266, "bottom_drag": 266, "cvmix": 266, "0002": 266, "filename_interv": 266, "0100": 266, "input_interv": 266, "initial_onli": 266, "basicmesh": 266, "dayssincestart": 266, "surfacespe": 266, "lowersurfac": 266, "uppersurfac": 266, "ureconstructx": 266, "ureconstructi": 266, "great": 266, "remain": [266, 279, 283], "load_dataset": 266, "final_temperatur": 266, "ab": 266, "proc": 266, "area": 266, "markdown": 266, "users_guid": 266, "daunt": 266, "flesh": 266, "bonu": 266, "improv": 266, "introduc": 266, "techniqu": 266, "proport": [266, 275, 278, 279, 281, 282, 284, 289], "1384565": 266, "strftime": 266, "gmtime": 266, "run_second": 266, "basi": 266, "aim": 266, "becam": 266, "mainten": 266, "counter": 266, "thought": 266, "yet_another_channel_test_cas": 266, "yetanotherchanneltestcas": 266, "choic": [266, 279], "spuriou": [266, 278], "dissip": [266, 278], "pop": [266, 278], "mom": [266, 278], "mitgcm": [266, 278], "higher": 266, "heavi": 266, "analogi": 266, "tet": 266, "bear": 266, "late": 266, "_add_step": 266, "startswith": 266, "privat": 266, "break": [266, 278], "unusu": 266, "rpe_3_nu_10": 266, "rpe_4_nu_20": 266, "rpe_5_nu_200": 266, "_setup_step": 266, "20_00": 266, "0000": 266, "dayssincestartofsim": 266, "relativevort": 266, "pyplot": 266, "plt": 266, "output_": 266, "sections_yet_another_channel_": 266, "rpe_t": 266, "init_filenam": 266, "ds_init": 266, "_plot": 266, "compact": 266, "dirti": 266, "adopt": 266, "lesson": 266, "tricki": 266, "commun": 266, "nuanc": 266, "fake": 266, "wasn": 266, "fold": 266, "proper": 266, "third": 266, "extens": 267, "multinod": [267, 285], "explanatori": 267, "my_machin": 267, "extend": 267, "gitconfig": 267, "enter": 267, "author": 267, "asai": 267, "davi": 267, "email": 267, "pull_request": 267, "28": 267, "address": 267, "metadata": 267, "customize_config_pars": 267, "server_base_url": 267, "inej": 267, "check_siz": 267, "ssl": 267, "certif": 267, "core_path": 267, "partition_execut": 267, "dask": 267, "netcdf4": 267, "netcdf4_class": 267, "netcdf3_64bit": 267, "netcdf3_class": 267, "engin": 267, "scipi": 267, "mesh_databas": 267, "ocean_database_root": 267, "landice_database_root": 267, "mesh_cor": 267, "mesh_min_cor": 267, "mesh_max_memori": 267, "mesh_max_disk": 267, "init_cor": 267, "init_min_cor": 267, "init_max_memori": 267, "init_max_disk": 267, "init_thread": 267, "forward_cor": 267, "forward_min_cor": 267, "forward_thread": 267, "forward_max_memori": 267, "forward_max_disk": 267, "add_metadata": 267, "ec": 267, "wc": 267, "mesh_descript": 267, "autodetect": 267, "bathy_descript": 267, "gebco": 267, "2022": 267, "bedmachin": 267, "antarctica": 267, "init_descript": 267, "e3sm_vers": 267, "increment": 267, "mesh_revis": 267, "finest": 267, "min_r": 267, "max_r": 267, "max_depth": 267, "creation_d": 267, "peopl": 267, "contact": 267, "temperaturemax": 267, "statist": 267, "temperature_max": 267, "33": [267, 285], "enable_ocean_initial_condit": 267, "enable_ocean_graph_partit": 267, "enable_seaice_initial_condit": 267, "scrip": 267, "enable_scrip": 267, "transect": 267, "onlin": 267, "member": 267, "offlin": 267, "enable_diagnostics_fil": 267, "coarser": [267, 279], "finer": 267, "comparisonlatresolut": 267, "comparisonlonresolut": 267, "antarct": 267, "polar": [267, 268, 270, 275], "stereograph": 267, "comparisonantarcticstereowidth": 267, "6000": [267, 275], "comparisonantarcticstereoresolut": 267, "arctic": [267, 288], "comparisonarcticstereowidth": 267, "comparisonarcticstereoresolut": 267, "tanh_dz": 267, "3000": 267, "min_layer_thick": [267, 275], "max_layer_thick": [267, 275], "retain": 267, "ecosystem": 268, "gain": 268, "confluenc": 268, "public_html": [268, 270, 272], "soft": [268, 270, 272, 285], "mpi_intel": [268, 270, 271, 272], "condo": [268, 285], "acm": [268, 285], "medium": 268, "acme_high": 268, "load_latest_polaris_intel_impi": [268, 271], "load_latest_polaris_gnu_openmpi": [268, 270, 285], "dst": 269, "calendar": 269, "network": 269, "introduct": 269, "platform": 269, "batch": 269, "wtrw": 269, "ch": 269, "lustr": 269, "scratch4": 269, "scratch5": 269, "sacctmgr": 269, "assoc": 269, "cluster": 269, "45": 269, "sshare": 269, "sreport": 269, "accountutilizationbyus": 269, "2019": 269, "02": 269, "prioriti": 269, "yellow": 269, "chkhome": 269, "petabyt": 269, "df": 269, "bp": 269, "archiv": [269, 273], "hpss": [269, 273], "front": 269, "tn": 269, "storag": 269, "project_nam": 269, "salloc": [269, 272, 273], "account_nam": 269, "gpu": [269, 273], "hyperthread": [269, 273], "hang": [269, 273], "threads_per_cor": [269, 273], "shared_clim": [269, 285], "load_latest_polaris_gnu_mpich": [269, 273], "load_latest_polaris_intel_openmpi": 270, "compyf": 271, "app": [271, 285], "pmi2": 271, "submit": 272, "workload": 272, "squeue": 272, "my_usernam": [272, 273], "scancel": 272, "jobid": 272, "cancel": 272, "emtpi": 272, "three": 272, "mpi_mpich": [272, 285], "mpi_openmpi": [272, 285], "nompi": [272, 285], "p1": 273, "nersc": 273, "iri": 273, "filesystem": 273, "myquota": 273, "prjquota": 273, "projectid": 273, "m1795": 273, "hsi": 273, "htar": 273, "zstash": 273, "cf": [273, 285], "cdir": [273, 285], "premium": 273, "cray_compil": 273, "8844": 273, "monik": 273, "browser": 273, "grab": 273, "logon": 273, "kernel": 273, "myenv": 273, "ipykernel": 273, "kernelspec": 273, "u1": 273, "interpret": 273, "argv": 273, "ipykernel_launch": 273, "connection_fil": 273, "display_nam": 273, "languag": 273, "2500": 275, "deepest": 275, "stewart": 275, "2017": 275, "z_2": 275, "z_1": 275, "mathrm": 275, "tanh": 275, "rightarrow": 275, "infti": 275, "z_k": 275, "z_0": 275, "z_": [275, 283], "k": 275, "finder": 275, "n_z": 275, "h_": 275, "210": [275, 279], "scienc": 275, "hydrograph": 275, "climatologi": 275, "250": 275, "5500": 275, "renorm": 275, "51": 275, "221": 275, "63": 275, "floor": 275, "flat": [275, 278], "collaps": 275, "adcroft": 275, "campin": 275, "2004": 275, "absenc": 275, "squash": 275, "watercolumn": 275, "press": 275, "batymetri": 275, "stair": 275, "month": 276, "websit": [276, 286], "release_6": 276, "ilicak": 278, "2012": 278, "distinguish": 278, "zonal": [278, 283], "meridion": [278, 283], "psu": [278, 283], "cooler": 278, "north": 278, "sinusoid": 278, "perturb": [278, 279, 282], "t_0": 278, "t_b": 278, "t_": 278, "z_b": 278, "y_": 278, "l_x": 278, "warmer": 278, "ge": [278, 279], "gradient_width_fract": 278, "l_y": 278, "le": [278, 283], "flow": [278, 279], "stationari": [278, 283], "literatur": 278, "mk": 278, "celsiu": 278, "williamson": 279, "1992": 279, "sec": 279, "3a": 279, "skamarock": 279, "gassmann": 279, "bodi": 279, "rotat": [279, 281, 282], "transport": 279, "psi": 279, "proportion": 279, "icosohydr": 279, "480": 279, "150": 279, "nearest": 279, "insensit": [279, 283], "300": [279, 284], "passiv": 279, "psi_0": 279, "co": [279, 281, 282], "radiu": 279, "debug_tracers_1": 279, "equatori": 279, "u_0": 279, "tau": 279, "transit": 279, "equat": [279, 281, 282, 283], "vel_pd": 279, "tendenc": [279, 282], "multipli": 279, "rad": 279, "lat_cent": 279, "lon_cent": 279, "14159265": 279, "2123666": 279, "6667": 279, "hill": 279, "psi0": 279, "qu_conv_thresh": 279, "qu_conv_max": 279, "icos_conv_thresh": 279, "icos_conv_max": 279, "roughli": 279, "propag": [281, 282], "doubli": [281, 282], "assess": [281, 282], "numer": [281, 282], "accuraci": [281, 282], "discret": [281, 282], "implemen": 281, "bishnu": [281, 282], "friction": [281, 282], "neglect": [281, 282], "nonlinear": [281, 282], "analyt": [281, 291], "k_x": [281, 282], "k_y": [281, 282], "availi": [281, 282], "10000": [281, 282], "coriloi": 281, "1e": 281, "amplitud": [281, 282], "ssh_amplitud": [281, 282], "wavelength": [281, 282], "n_wavelengths_x": [281, 282], "n_wavelengths_i": [281, 282], "conv_thresh": [281, 282], "conv_max": [281, 282], "embed": 282, "eta_0": 282, "span": 283, "arbitrarili": 283, "virtu": 283, "examin": 283, "400": 283, "phi": 283, "phi_0": 283, "dz": 283, "ml": 283, "mld": 283, "surface_x": 283, "x_gradient_mixed_lay": 283, "mixed_layer_depth_x": 283, "x_difference_across_mixed_lay": 283, "x_gradient_interior": 283, "spatial": 283, "degc": 283, "temperature_gradient_mixed_lay": 283, "temperature_difference_across_mixed_lay": 283, "temperature_gradient_interior": 283, "mixed_layer_depth_temperatur": 283, "surface_salin": 283, "salinity_gradient_mixed_lay": 283, "salinity_difference_across_mixed_lay": 283, "salinity_gradient_interior": 283, "mixed_layer_depth_salin": 283, "scheme": 283, "dictat": 283, "kpp": 283, "restor": 283, "piston": 283, "toward": 283, "temperature_surface_restoring_valu": 283, "temperature_piston_veloc": 283, "salinity_surface_restoring_valu": 283, "salinity_piston_veloc": 283, "temperature_interior_restoring_r": 283, "salinity_interior_restoring_r": 283, "net": 283, "latent": 283, "heat": 283, "bulk": 283, "latent_heat_flux": 283, "sensibl": 283, "sensible_heat_flux": 283, "solar": 283, "shortwav": 283, "shortwave_heat_flux": 283, "evapor": 283, "evaporation_flux": 283, "5e": 283, "rain": 283, "rain_flux": 283, "wind": 283, "wind_stress_zon": 283, "wind_stress_meridion": 283, "characterist": [284, 289], "welcom": [284, 289], "icosohedr": [284, 289], "pertain": [284, 289], "inher": 284, "warrant": 284, "investig": 284, "load_latest_polari": 285, "minu": 285, "create_polaris_load_script": 285, "load_polaris_1": 285, "0_mpich": 285, "wiki": 285, "circular_shelf": 285, "sia_smoke_test": 285, "sia_decomposition_test": 285, "sia_restart_test": 285, "fo_smoke_test": 285, "fo_decomposition_test": 285, "fo_restart_test": 285, "37": 285, "38": 285, "17": 285, "210131_test_new_branch": 285, "my_config": 285, "smaller": 285, "previous_workdir": 285, "paper": 285, "recompil": 285, "live": 285, "safer": 285, "preserv": 285, "test_subdir": 285, "whatev": 285, "clock": 285, "j": 285, "exclus": 285, "job_nam": 285, "fo_integr": [285, 290], "sia_integr": [285, 290], "cosine_bell_cached_init": [285, 290], "ec30to60": [285, 290], "ecwisc30to60": [285, 290], "qu240_for_e3sm": [285, 290], "quwisc240_for_e3sm": [285, 290], "wc14": [285, 290], "suitenam": 285, "seaice_standalone_framework": 286, "71": 288, "35n": 288, "156": 288, "5w": 288, "atmospher": 288, "timeseri": 288, "pair": 288, "prohibit": 290, "radial": 291, "form": 291}, "objects": {"polaris": [[18, 0, 1, "", "Component"], [20, 0, 1, "", "ModelStep"], [33, 0, 1, "", "Step"], [42, 0, 1, "", "Task"], [46, 0, 1, "", "TestGroup"]], "polaris.Component": [[18, 1, 1, "", "__init__"], [19, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_model_config_options"], [22, 1, 1, "", "add_namelist_file"], [23, 1, 1, "", "add_streams_file"], [24, 1, 1, "", "add_yaml_file"], [25, 1, 1, "", "dynamic_model_config"], [26, 1, 1, "", "map_yaml_to_namelist"], [27, 1, 1, "", "partition"], [28, 1, 1, "", "process_inputs_and_outputs"], [29, 1, 1, "", "runtime_setup"], [30, 1, 1, "", "set_model_resources"], [31, 1, 1, "", "setup"], [32, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[33, 1, 1, "", "__init__"], [34, 1, 1, "", "add_dependency"], [35, 1, 1, "", "add_input_file"], [36, 1, 1, "", "add_output_file"], [37, 1, 1, "", "constrain_resources"], [38, 1, 1, "", "run"], [39, 1, 1, "", "runtime_setup"], [40, 1, 1, "", "set_resources"], [41, 1, 1, "", "setup"]], "polaris.Task": [[42, 1, 1, "", "__init__"], [43, 1, 1, "", "add_step"], [44, 1, 1, "", "configure"], [45, 1, 1, "", "validate"]], "polaris.TestGroup": [[46, 1, 1, "", "__init__"], [47, 1, 1, "", "add_task"]], "polaris.__main__": [[48, 2, 1, "", "main"]], "polaris.cache": [[49, 2, 1, "", "update_cache"]], "polaris.components": [[50, 2, 1, "", "get_components"]], "polaris.config": [[51, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[51, 1, 1, "", "__init__"]], "polaris.io": [[52, 2, 1, "", "download"], [53, 3, 0, "-", "imp_res"], [54, 2, 1, "", "symlink"]], "polaris.job": [[55, 2, 1, "", "get_slurm_options"], [56, 2, 1, "", "write_job_script"]], "polaris.list": [[57, 2, 1, "", "list_cases"], [58, 2, 1, "", "list_machines"], [59, 2, 1, "", "list_suites"]], "polaris.logging": [[60, 2, 1, "", "log_method_call"]], "polaris.mesh": [[61, 0, 1, "", "IcosahedralMeshStep"], [68, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[61, 1, 1, "", "__init__"], [62, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [63, 1, 1, "", "get_cell_width"], [64, 1, 1, "", "get_subdivisions"], [65, 1, 1, "", "make_jigsaw_mesh"], [66, 1, 1, "", "run"], [67, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "build_cell_width_lat_lon"], [70, 1, 1, "", "make_jigsaw_mesh"], [71, 1, 1, "", "run"], [72, 1, 1, "", "setup"]], "polaris.mesh.planar": [[73, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[74, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "run"], [76, 1, 1, "", "save_and_plot_cell_width"], [77, 1, 1, "", "setup"]], "polaris.model_step": [[78, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[79, 2, 1, "", "ingest"], [80, 2, 1, "", "parse_replacements"], [81, 2, 1, "", "replace"], [82, 2, 1, "", "write"]], "polaris.ocean": [[129, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[129, 1, 1, "", "__init__"]], "polaris.ocean.model": [[130, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[130, 1, 1, "", "__init__"], [131, 1, 1, "", "compute_cell_count"], [132, 1, 1, "", "constrain_resources"], [133, 1, 1, "", "map_yaml_to_namelist"], [134, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[135, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[136, 0, 1, "", "BaroclinicChannel"], [137, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannel": [[136, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "validate"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[139, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "validate"]], "polaris.ocean.tasks.baroclinic_channel.default": [[141, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "validate"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[143, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "compute_cell_count"], [145, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[146, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "run"], [148, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[149, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "validate"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[151, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[153, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "configure"], [155, 1, 1, "", "validate"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[156, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "run"], [158, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[159, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "validate"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[161, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence": [[163, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tasks.global_convergence.GlobalConvergence": [[163, 1, 1, "", "__init__"]], "polaris.ocean.tasks.global_convergence.cosine_bell": [[164, 0, 1, "", "CosineBell"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "configure"], [166, 1, 1, "", "validate"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis": [[167, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "rmse"], [169, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward": [[170, 0, 1, "", "Forward"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "compute_cell_count"], [172, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init": [[173, 0, 1, "", "Init"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz": [[175, 0, 1, "", "Viz"], [177, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[179, 0, 1, "", "InertialGravityWave"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[179, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[180, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence": [[182, 0, 1, "", "Convergence"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "validate"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[184, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "normal_velocity"], [186, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[187, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "compute_cell_count"], [189, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[190, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[192, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[194, 0, 1, "", "ManufacturedSolution"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[194, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[195, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.convergence": [[197, 0, 1, "", "Convergence"]], "polaris.ocean.tasks.manufactured_solution.convergence.Convergence": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "validate"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[199, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "normal_velocity"], [201, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[202, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "compute_cell_count"], [204, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[205, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[207, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[209, 0, 1, "", "SingleColumn"]], "polaris.ocean.tasks.single_column.SingleColumn": [[209, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.cvmix": [[210, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "validate"]], "polaris.ocean.tasks.single_column.forward": [[212, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[212, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[213, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "validate"]], "polaris.ocean.tasks.single_column.init": [[215, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[217, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[217, 1, 1, "", "__init__"], [218, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[219, 2, 1, "", "generate_1d_grid"], [220, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[221, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[222, 2, 1, "", "alter_bottom_depth"], [223, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[224, 2, 1, "", "compute_min_max_level_cell"], [225, 2, 1, "", "compute_z_level_layer_thickness"], [226, 2, 1, "", "compute_z_level_resting_thickness"], [227, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[228, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[83, 2, 1, "", "get_available_parallel_resources"], [84, 2, 1, "", "get_parallel_command"], [85, 2, 1, "", "run_command"], [86, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[87, 2, 1, "", "write"]], "polaris.remap": [[88, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[88, 1, 1, "", "__init__"], [89, 1, 1, "", "dst_from_lon_lat"], [90, 1, 1, "", "dst_from_mpas"], [91, 1, 1, "", "dst_from_points"], [92, 1, 1, "", "dst_from_proj"], [93, 1, 1, "", "dst_global_lon_lat"], [94, 1, 1, "", "get_remapper"], [95, 1, 1, "", "runtime_setup"], [96, 1, 1, "", "src_from_lon_lat"], [97, 1, 1, "", "src_from_mpas"], [98, 1, 1, "", "src_from_proj"]], "polaris.run": [[99, 2, 1, "", "load_dependencies"], [100, 2, 1, "", "pickle_step_after_run"], [103, 2, 1, "", "setup_config"], [104, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[101, 2, 1, "", "run_single_step"], [102, 2, 1, "", "run_tasks"]], "polaris.seaice": [[249, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[249, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[250, 0, 1, "", "SingleColumn"]], "polaris.seaice.tasks.single_column.SingleColumn": [[250, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart": [[251, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "validate"]], "polaris.seaice.tasks.single_column.forward": [[253, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[253, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[254, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "validate"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[256, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "run"]], "polaris.streams": [[105, 2, 1, "", "read"], [106, 2, 1, "", "update_defaults"], [107, 2, 1, "", "update_tree"], [108, 2, 1, "", "write"]], "polaris.suite": [[109, 2, 1, "", "setup_suite"]], "polaris.validate": [[110, 2, 1, "", "compare_timers"], [111, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[112, 2, 1, "", "plot_global"]], "polaris.viz": [[113, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[114, 0, 1, "", "PolarisYaml"], [118, 2, 1, "", "main_mpas_to_yaml"], [119, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [120, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[114, 1, 1, "", "__init__"], [115, 1, 1, "", "read"], [116, 1, 1, "", "update"], [117, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 6, 266], "templat": [1, 13], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 5, 13, 128, 246, 248, 266, 268, 269, 270, 271, 272, 273, 278, 279, 281, 282, 283, 284, 288, 289], "same": 1, "implement": 1, "test": [1, 5, 127, 234, 244, 245, 247, 261, 266, 267, 280, 287, 288], "valid": [1, 2, 16, 45, 110, 111, 138, 140, 142, 150, 155, 160, 166, 183, 198, 211, 214, 243, 252, 255, 266, 285], "api": 2, "refer": [2, 127, 128], "compon": [2, 13, 18, 19, 50, 128, 229, 238, 245, 246, 248, 258, 276, 285, 286], "polari": [2, 4, 5, 7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 241, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 285], "framework": [2, 9, 127, 128, 232, 235, 236, 237, 245, 248, 262, 274], "command": [2, 4, 7], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 7, 57, 58, 59], "setup": [2, 4, 7, 31, 41, 67, 72, 77, 134, 148, 158, 241], "suit": [2, 4, 7, 109, 242, 277, 285, 290], "run": [2, 7, 13, 38, 66, 71, 75, 99, 100, 101, 102, 103, 104, 128, 147, 157, 162, 169, 174, 176, 178, 181, 191, 193, 196, 206, 208, 216, 218, 241, 246, 248, 257, 278, 279, 281, 282, 283, 284, 285, 288, 289], "cach": [2, 4, 7, 49, 241], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 245], "testgroup": [2, 46, 47], "task": [2, 42, 43, 44, 45, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 240, 243, 245, 250, 251, 252, 253, 254, 255, 256, 257, 266, 285, 291], "step": [2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 241, 266, 278, 279, 281, 282, 283, 284, 289], "modelstep": [2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "config": [2, 5, 8, 13, 51, 125, 128, 248, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 281, 282, 283, 284, 288, 289], "io": [2, 10, 52, 53, 54], "job": [2, 55, 56, 272, 285], "log": [2, 11, 60], "mesh": [2, 12, 13, 17, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 233, 266, 278, 279, 281, 282, 283, 284, 288, 289], "model_step": [2, 78], "namelist": [2, 13, 79, 80, 81, 82, 128], "parallel": [2, 83, 84, 85, 86], "proven": [2, 14, 87], "remap": [2, 15, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "stream": [2, 13, 105, 106, 107, 108, 128, 248, 266], "viz": [2, 112, 113, 161, 162, 175, 176, 177, 178, 192, 193, 207, 208, 217, 218, 233, 235, 236, 237, 256, 257, 262, 266], "yaml": [2, 13, 114, 115, 116, 117, 118, 119, 120, 128], "build": [3, 125, 246, 285], "serial": [4, 7, 101, 102], "deploi": 5, "new": [5, 125, 266], "spack": [5, 125, 246, 285], "environ": [5, 125, 246, 263, 285], "where": 5, "do": 5, "we": 5, "updat": [5, 13, 116, 246], "depend": [5, 241], "mach": 5, "conda": [5, 246, 263, 272, 285], "identifi": 5, "e3sm": [5, 13, 128, 246, 248, 285], "machin": [5, 125, 246, 272, 285], "describ": [5, 125], "modul": [5, 7, 245, 246], "env": 5, "variabl": [5, 16], "etc": 5, "creat": [5, 246, 266], "from": [5, 17, 128, 241, 246, 272], "remot": [5, 273], "branch": 5, "petsc": [5, 246], "netlib": [5, 246], "lapack": [5, 246], "albani": [5, 246], "troubleshoot": [5, 246, 263], "mpa": [5, 128, 231, 260], "ocean": [5, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 276], "without": 5, "mali": 5, "share": [5, 245, 266], "docstr": 6, "clean": 7, "file": [8, 13, 125, 128, 241, 266, 267], "comment": 8, "symlink": [10, 54, 241], "download": [10, 52, 241], "spheric": [12, 17, 74, 75, 76, 77], "planar": [12, 17, 73], "uniform": [12, 275], "gener": 12, "model": [13, 128, 130, 131, 132, 133, 134, 230, 248, 259, 266, 285], "an": [13, 128, 248, 266], "ad": [13, 125, 241, 266], "runtim": 13, "input": [13, 241], "partit": [13, 27], "pio": 13, "make": [13, 266], "graph": 13, "norm": 16, "timer": 16, "visual": [17, 266, 288], "horizont": [17, 266], "field": 17, "global": 17, "lat": 17, "lon": 17, "plot": [17, 266], "add_test_group": 19, "add_model_config_opt": 21, "add_namelist_fil": 22, "add_streams_fil": 23, "add_yaml_fil": 24, "dynamic_model_config": [25, 145, 152, 172, 189, 204], "map_yaml_to_namelist": [26, 133], "process_inputs_and_output": 28, "runtime_setup": [29, 39, 95, 241], "set_model_resourc": 30, "update_namelist_pio": 32, "add_depend": 34, "add_input_fil": 35, "add_output_fil": 36, "constrain_resourc": [37, 132, 241], "set_resourc": 40, "add_step": 43, "configur": [44, 154, 165, 243, 263], "add_task": 47, "__main__": 48, "main": 48, "update_cach": 49, "get_compon": 50, "polarisconfigpars": 51, "imp_r": 53, "get_slurm_opt": 55, "write_job_script": 56, "list_cas": 57, "list_machin": 58, "list_suit": 59, "log_method_cal": 60, "icosahedralmeshstep": [61, 62, 63, 64, 65, 66, 67], "build_subdivisions_cell_width_lat_lon": 62, "get_cell_width": 63, "get_subdivis": 64, "make_jigsaw_mesh": [65, 70], "quasiuniformsphericalmeshstep": [68, 69, 70, 71, 72], "build_cell_width_lat_lon": 69, "compute_planar_hex_nx_ni": 73, "sphericalbasestep": [74, 75, 76, 77], "save_and_plot_cell_width": 76, "make_graph_fil": 78, "ingest": 79, "parse_replac": 80, "replac": 81, "write": [82, 87, 108, 117], "get_available_parallel_resourc": 83, "get_parallel_command": 84, "run_command": 85, "set_cores_per_nod": 86, "mappingfilestep": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "dst_from_lon_lat": 89, "dst_from_mpa": 90, "dst_from_point": 91, "dst_from_proj": 92, "dst_global_lon_lat": 93, "get_remapp": 94, "src_from_lon_lat": 96, "src_from_mpa": 97, "src_from_proj": 98, "load_depend": 99, "pickle_step_after_run": 100, "run_single_step": 101, "run_task": 102, "setup_config": 103, "unpickle_suit": 104, "read": [105, 115], "update_default": 106, "update_tre": 107, "setup_suit": 109, "compare_tim": 110, "compare_vari": 111, "globe": 112, "plot_glob": 112, "plot_horiz_field": 113, "polarisyaml": [114, 115, 116, 117], "main_mpas_to_yaml": 118, "mpas_namelist_and_streams_to_yaml": 119, "yaml_to_mpas_stream": 120, "anvil": [121, 268], "intel": [121, 123, 124, 268, 270, 271], "gnu": [121, 122, 123, 124, 126, 268, 269, 270, 273], "chicoma": [122, 269], "cpu": [122, 126, 269, 273], "chrysali": [123, 270], "compymcnodefac": [124, 271], "support": [125, 230, 246, 259, 272, 285], "other": [125, 241, 266, 272, 285], "perlmutt": [126, 273], "pm": 126, "group": [127, 234, 244, 245, 247, 261, 266, 280, 287], "baroclinic_channel": [127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 232, 278], "inertial_gravity_wav": [127, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 235], "global_converg": [127, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 233, 279], "cosine_bel": [127, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 233, 277, 279], "manufactured_solut": [127, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 236, 282], "single_column": [127, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 237, 247, 250, 251, 252, 253, 254, 255, 256, 257, 262, 283, 288], "oceanmodelstep": [127, 130, 131, 132, 133, 134], "potenti": [127, 128], "energi": [127, 128], "rpe": [127, 128, 135, 153, 154, 155, 156, 157, 158, 232, 278], "vertic": [127, 128, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 266, 275, 278, 279, 281, 282, 283, 284], "coordin": [127, 128, 266, 275], "v": 128, "map": 128, "omega": 128, "set": [128, 246, 248, 285], "mpi": [128, 248, 272], "resourc": [128, 248], "rest": 128, "compute_cell_count": [131, 144, 171, 188, 203], "compute_rp": 135, "baroclinicchannel": 136, "baroclinicchanneltestcas": [137, 138], "decomp": [139, 140, 232, 278], "default": [141, 142, 232, 266, 278], "forward": [143, 144, 145, 170, 171, 172, 187, 188, 189, 202, 203, 204, 212, 232, 233, 235, 236, 237, 253, 262, 266], "init": [146, 147, 148, 173, 174, 190, 191, 205, 206, 215, 216, 232, 233, 235, 236, 237, 266], "restart": [149, 150, 151, 152, 232, 278, 288], "restart_step": [151, 152], "restartstep": [151, 152], "analysi": [156, 157, 158, 167, 168, 169, 180, 181, 195, 196, 233, 235, 236, 266], "thread": [159, 160, 232, 278], "globalconverg": 163, "cosinebel": [164, 165, 166], "rmse": 168, "vizmap": [177, 178], "inertialgravitywav": 179, "converg": [182, 183, 197, 198, 235, 236, 281, 282], "exact_solut": [184, 185, 186, 199, 200, 201, 235, 236], "exactsolut": [184, 185, 186, 199, 200, 201], "normal_veloc": [185, 200], "ssh": [186, 201], "manufacturedsolut": 194, "singlecolumn": [209, 250], "cvmix": [210, 211, 237, 283], "ideal_ag": [213, 214], "idealag": [213, 214], "grid_1d": [219, 220], "generate_1d_grid": 219, "write_1d_grid": 220, "init_vertical_coord": 221, "partial_cel": [222, 223], "alter_bottom_depth": 222, "alter_ssh": 223, "zlevel": [224, 225, 226, 227], "compute_min_max_level_cel": 224, "compute_z_level_layer_thick": 225, "compute_z_level_resting_thick": 226, "init_z_level_vertical_coord": 227, "zstar": 228, "init_z_star_vertical_coord": 228, "initi": [231, 260, 266, 278, 279, 281, 282, 283, 284, 288, 289], "condit": [231, 260, 266, 278, 279, 281, 282, 283, 284, 288, 289], "boundari": 231, "forc": [231, 260, 278, 279, 281, 282, 283, 284, 288, 289], "baroclinic_channel_test_cas": 232, "type": [233, 275], "ideal": [237, 283], "ag": [237, 283], "directori": 239, "structur": 239, "organ": 240, "attribut": [241, 243], "constructor": [241, 243], "output": [241, 266], "copi": 241, "pull": 242, "request": 242, "pr": 242, "nightli": 242, "overview": 245, "code": [245, 246, 266], "style": [245, 246], "packag": 245, "within": 245, "quick": [246, 285], "start": [246, 266, 285], "develop": [246, 265, 266], "unix": 246, "shell": 246, "up": [246, 285], "repositori": 246, "beginn": 246, "compil": 246, "system": 246, "unknown": 246, "what": 246, "script": [246, 285], "doe": 246, "flag": 246, "activ": 246, "switch": 246, "between": [246, 266], "differ": 246, "onli": 246, "repo": 246, "worktre": 246, "advanc": 246, "user": [246, 265, 267, 285], "seaic": [247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260], "exact_restart": [251, 252], "exactrestart": [251, 252], "standard_phys": [254, 255, 256, 257], "standardphys": [254, 255], "standard_physics_test": 262, "exact_restart_test": 262, "solver": 263, "error": 263, "when": 263, "proxi": 263, "lanl": 263, "mac": 263, "gethostbynam": 263, "fail": 263, "glossari": [264, 265], "": 265, "guid": 265, "tutori": [265, 266], "compass": 265, "get": 266, "vari": 266, "resolut": 266, "paramet": 266, "thing": 266, "out": 266, "defin": 266, "more": 266, "again": 266, "one": 266, "time": [266, 278, 279, 281, 282, 283, 284, 289], "second": 266, "enhanc": 266, "dynam": 266, "comput": 266, "cell": 266, "count": 266, "superclass": 266, "studi": 266, "how": 266, "pass": 266, "data": [266, 273], "A": 267, "case": 267, "slurm": 272, "queue": 272, "mpich": 272, "openmpi": 272, "No": 272, "forg": 272, "jupyt": 273, "notebook": 273, "1d": 275, "grid": [275, 278, 279, 281, 282, 283, 284], "tanh_dz": 275, "60layerphc": 275, "100layere3smv1": 275, "3d": 275, "z": 275, "star": 275, "level": 275, "cosine_bell_cached_init": 277, "descript": [278, 279, 281, 282, 283, 284, 288, 289], "durat": [278, 279, 281, 282, 283, 284, 288, 289], "core": [278, 279, 281, 282, 283, 284, 288, 289], "cosine_bell_with_viz": 279, "inerti": 281, "graviti": 281, "wave": 281, "test_group_nam": [284, 289], "test_case_nam": [284, 289], "i": 285, "yet": 285, "load": 285, "standalon": 285, "sea": 286, "ic": 286, "standard": 288, "physic": 288, "timestep": 288, "exact": 288}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [238, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "Task": [[2, "task"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [233, "mesh"], [278, "mesh"], [278, "id2"], [278, "id9"], [278, "id17"], [278, "id25"], [278, "id32"], [279, "mesh"], [281, "mesh"], [282, "mesh"], [283, "mesh"], [283, "id3"], [283, "id8"], [284, "mesh"], [288, "mesh"], [288, "id1"], [288, "id6"], [289, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [233, "viz"], [235, "viz"], [236, "viz"], [237, "viz"], [262, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Deploying a new spack environment": [[5, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[5, "where-do-we-update-polaris-dependencies"]], "Mache": [[5, "mache"], [5, "id1"]], "Spack": [[5, "spack"]], "Conda": [[5, "conda"]], "Identifying E3SM machines": [[5, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[5, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[5, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[5, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[5, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[5, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[5, "testing-spack-with-albany"]], "Troubleshooting spack": [[5, "troubleshooting-spack"]], "Testing polaris": [[5, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[5, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[5, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[5, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[5, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[5, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[5, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[5, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[6, "documentation"], [266, "documentation"]], "Docstrings": [[6, "docstrings"]], "Modules for polaris commands": [[7, "modules-for-polaris-commands"]], "list module": [[7, "list-module"]], "setup module": [[7, "setup-module"]], "clean module": [[7, "clean-module"]], "suite module": [[7, "suite-module"]], "run.serial module": [[7, "run-serial-module"]], "cache module": [[7, "cache-module"]], "Config files": [[8, "config-files"]], "Comments in config files": [[8, "comments-in-config-files"]], "Framework": [[9, "framework"], [274, "framework"]], "IO": [[10, "io"]], "Symlinks": [[10, "symlinks"]], "Download": [[10, "download"]], "Logging": [[11, "logging"]], "Mesh": [[12, "mesh"]], "Spherical Meshes": [[12, "spherical-meshes"]], "Planar Meshes": [[12, "planar-meshes"]], "Uniform planar meshes": [[12, "uniform-planar-meshes"]], "General planar meshes": [[12, "general-planar-meshes"]], "Model": [[13, "model"], [128, "model"], [248, "model"]], "Running an E3SM component": [[13, "running-an-e3sm-component"], [128, "running-an-e3sm-component"], [248, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[13, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[13, "adding-a-yaml-file"]], "Adding a namelist file": [[13, "adding-a-namelist-file"]], "Adding model config options": [[13, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[13, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[13, "adding-a-streams-file"]], "Adding a template streams file": [[13, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[13, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[13, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[13, "partitioning-the-mesh"]], "Updating PIO namelist options": [[13, "updating-pio-namelist-options"]], "Making a graph file": [[13, "making-a-graph-file"]], "Provenance": [[14, "provenance"]], "Remapping": [[15, "remapping"]], "Validation": [[16, "validation"]], "Validating variables": [[16, "validating-variables"]], "Norms": [[16, "norms"]], "Validating timers": [[16, "validating-timers"]], "Visualization": [[17, "visualization"]], "horizontal fields from planar meshes": [[17, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[17, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[18, "polaris-component"]], "polaris.Component.add_test_group": [[19, "polaris-component-add-test-group"]], "polaris.ModelStep": [[20, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[21, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[22, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[23, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[24, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[25, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[26, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[27, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[28, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[29, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[30, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[31, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[32, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[33, "polaris-step"]], "polaris.Step.add_dependency": [[34, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[35, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[36, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[37, "polaris-step-constrain-resources"]], "polaris.Step.run": [[38, "polaris-step-run"]], "polaris.Step.runtime_setup": [[39, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[40, "polaris-step-set-resources"]], "polaris.Step.setup": [[41, "polaris-step-setup"]], "polaris.Task": [[42, "polaris-task"]], "polaris.Task.add_step": [[43, "polaris-task-add-step"]], "polaris.Task.configure": [[44, "polaris-task-configure"]], "polaris.Task.validate": [[45, "polaris-task-validate"]], "polaris.TestGroup": [[46, "polaris-testgroup"]], "polaris.TestGroup.add_task": [[47, "polaris-testgroup-add-task"]], "polaris.__main__.main": [[48, "polaris-main-main"]], "polaris.cache.update_cache": [[49, "polaris-cache-update-cache"]], "polaris.components.get_components": [[50, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[51, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[52, "polaris-io-download"]], "polaris.io.imp_res": [[53, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[54, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[55, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[56, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[57, "polaris-list-list-cases"]], "polaris.list.list_machines": [[58, "polaris-list-list-machines"]], "polaris.list.list_suites": [[59, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[60, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[61, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[62, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[63, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[64, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[65, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[66, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[67, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[68, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[71, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[72, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[73, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[74, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[75, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[76, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[77, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[78, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[79, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[80, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[81, "polaris-namelist-replace"]], "polaris.namelist.write": [[82, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[83, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[84, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[85, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[86, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[87, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[88, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[89, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[90, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[91, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[92, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[93, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[94, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[95, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[96, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[97, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[98, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.load_dependencies": [[99, "polaris-run-load-dependencies"]], "polaris.run.pickle_step_after_run": [[100, "polaris-run-pickle-step-after-run"]], "polaris.run.serial.run_single_step": [[101, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[102, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[103, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[104, "polaris-run-unpickle-suite"]], "polaris.streams.read": [[105, "polaris-streams-read"]], "polaris.streams.update_defaults": [[106, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[107, "polaris-streams-update-tree"]], "polaris.streams.write": [[108, "polaris-streams-write"]], "polaris.suite.setup_suite": [[109, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[110, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[111, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[112, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[113, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[114, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[115, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[116, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[117, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[118, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[119, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[120, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[121, "anvil"], [268, "anvil"]], "intel": [[121, "intel"], [123, "intel"], [124, "intel"]], "gnu": [[121, "gnu"], [123, "gnu"], [124, "gnu"]], "Chicoma": [[122, "chicoma"], [269, "chicoma"]], "chicoma-cpu, gnu": [[122, "chicoma-cpu-gnu"]], "Chrysalis": [[123, "chrysalis"], [270, "chrysalis"]], "CompyMcNodeFace": [[124, "compymcnodeface"], [271, "compymcnodeface"]], "Machines": [[125, "machines"], [272, "machines"]], "Supported Machines": [[125, "supported-machines"], [272, "supported-machines"]], "Other Machines": [[125, "other-machines"], [272, "other-machines"]], "Adding a New Supported Machine": [[125, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[125, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[125, "describing-a-spack-environment"]], "Building the Spack Environment": [[125, "building-the-spack-environment"]], "Perlmutter": [[126, "perlmutter"], [273, "perlmutter"]], "pm-cpu, gnu": [[126, "pm-cpu-gnu"]], "ocean": [[127, "ocean"]], "Test Groups": [[127, "test-groups"], [244, "test-groups"], [247, "test-groups"]], "baroclinic_channel": [[127, "baroclinic-channel"], [232, "baroclinic-channel"], [278, "baroclinic-channel"]], "inertial_gravity_wave": [[127, "inertial-gravity-wave"], [235, "inertial-gravity-wave"]], "global_convergence": [[127, "global-convergence"], [233, "global-convergence"], [279, "global-convergence"]], "cosine_bell": [[127, "cosine-bell"], [233, "cosine-bell"]], "manufactured_solution": [[127, "manufactured-solution"], [236, "manufactured-solution"], [282, "manufactured-solution"]], "single_column": [[127, "single-column"], [237, "single-column"], [247, "single-column"], [262, "single-column"], [283, "single-column"], [288, "single-column"]], "Ocean Framework": [[127, "ocean-framework"]], "OceanModelStep": [[127, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[127, "reference-potential-energy-rpe"]], "Vertical coordinates": [[127, "vertical-coordinates"]], "Ocean framework": [[128, "ocean-framework"]], "YAML files vs. namelists and streams": [[128, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[128, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[128, "setting-mpi-resources"], [248, "setting-mpi-resources"]], "Model config options and streams": [[128, "model-config-options-and-streams"], [248, "model-config-options-and-streams"]], "Vertical coordinate": [[128, "vertical-coordinate"], [275, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[128, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[129, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[130, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[131, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[132, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[133, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[134, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[135, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannel": [[136, "polaris-ocean-tasks-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase": [[137, "polaris-ocean-tasks-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.validate": [[138, "polaris-ocean-tasks-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[139, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.validate": [[140, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp-validate"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[141, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default.validate": [[142, "polaris-ocean-tasks-baroclinic-channel-default-default-validate"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[143, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[144, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[145, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[146, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[147, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[148, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[149, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart.validate": [[150, "polaris-ocean-tasks-baroclinic-channel-restart-restart-validate"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[151, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[152, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[153, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[154, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.validate": [[155, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-validate"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[156, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[157, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[158, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[159, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads.validate": [[160, "polaris-ocean-tasks-baroclinic-channel-threads-threads-validate"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[161, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[162, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.global_convergence.GlobalConvergence": [[163, "polaris-ocean-tasks-global-convergence-globalconvergence"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell": [[164, "polaris-ocean-tasks-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure": [[165, "polaris-ocean-tasks-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.validate": [[166, "polaris-ocean-tasks-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis": [[167, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse": [[168, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run": [[169, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward": [[170, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[171, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[172, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init": [[173, "polaris-ocean-tasks-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run": [[174, "polaris-ocean-tasks-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz": [[175, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run": [[176, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap": [[177, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run": [[178, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[179, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[180, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[181, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence": [[182, "polaris-ocean-tasks-inertial-gravity-wave-convergence-convergence"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.validate": [[183, "polaris-ocean-tasks-inertial-gravity-wave-convergence-convergence-validate"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[184, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[185, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[186, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[187, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[188, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[189, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[190, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[191, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[192, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[193, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[194, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[195, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[196, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.convergence.Convergence": [[197, "polaris-ocean-tasks-manufactured-solution-convergence-convergence"]], "polaris.ocean.tasks.manufactured_solution.convergence.Convergence.validate": [[198, "polaris-ocean-tasks-manufactured-solution-convergence-convergence-validate"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[199, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[200, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[201, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[202, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[203, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[204, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[205, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[206, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[207, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[208, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.SingleColumn": [[209, "polaris-ocean-tasks-single-column-singlecolumn"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[210, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix.validate": [[211, "polaris-ocean-tasks-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tasks.single_column.forward.Forward": [[212, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[213, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge.validate": [[214, "polaris-ocean-tasks-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tasks.single_column.init.Init": [[215, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[216, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[217, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[218, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[219, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[220, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[221, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[222, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[223, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[224, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[225, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[226, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[227, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[228, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[229, "ocean-component"], [276, "ocean-component"]], "Models": [[230, "models"], [259, "models"]], "Supported Models": [[230, "supported-models"], [259, "supported-models"]], "MPAS-Ocean": [[231, "mpas-ocean"]], "Initial conditions": [[231, "initial-conditions"], [260, "initial-conditions"]], "Boundary conditions": [[231, "boundary-conditions"]], "Forcing": [[231, "forcing"], [260, "forcing"]], "framework": [[232, "framework"], [235, "framework"], [236, "framework"], [237, "framework"], [262, "framework"]], "baroclinic_channel_test_case": [[232, "baroclinic-channel-test-case"]], "init": [[232, "init"], [233, "init"], [235, "init"], [236, "init"], [237, "init"]], "forward": [[232, "forward"], [233, "forward"], [235, "forward"], [236, "forward"], [237, "forward"], [262, "forward"]], "default": [[232, "default"], [278, "default"]], "decomp": [[232, "decomp"], [278, "decomp"]], "restart": [[232, "restart"], [278, "restart"]], "threads": [[232, "threads"]], "rpe": [[232, "rpe"], [278, "rpe"]], "mesh types": [[233, "mesh-types"]], "analysis": [[233, "analysis"], [235, "analysis"], [236, "analysis"]], "Test groups": [[234, "test-groups"], [261, "test-groups"], [280, "test-groups"], [287, "test-groups"]], "exact_solution": [[235, "exact-solution"], [236, "exact-solution"]], "convergence": [[235, "convergence"], [236, "convergence"], [281, "convergence"], [282, "convergence"]], "cvmix": [[237, "cvmix"], [283, "cvmix"]], "ideal age": [[237, "ideal-age"], [283, "ocean-single-column-ideal-age"]], "Directory structure": [[239, "directory-structure"]], "Organization of Tasks": [[240, "organization-of-tasks"]], "Steps": [[241, "steps"]], "Step attributes": [[241, "step-attributes"]], "constructor": [[241, "constructor"], [243, "constructor"]], "constrain_resources()": [[241, "constrain-resources"]], "setup()": [[241, "setup"]], "runtime_setup()": [[241, "runtime-setup"]], "run()": [[241, "run"]], "inputs and outputs": [[241, "inputs-and-outputs"]], "Input files": [[241, "input-files"]], "Symlinks to input files": [[241, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[241, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[241, "downloading-and-symlinking-input-files"]], "Copying input files": [[241, "copying-input-files"]], "Output files": [[241, "output-files"]], "Cached output files": [[241, "cached-output-files"]], "Adding other steps as dependencies": [[241, "adding-other-steps-as-dependencies"]], "Suites": [[242, "suites"], [277, "suites"], [285, "suites"], [290, "suites"]], "Pull-Request (PR) suite": [[242, "pull-request-pr-suite"]], "Nightly suite": [[242, "nightly-suite"]], "Tasks": [[243, "tasks"], [291, "tasks"]], "Task attributes": [[243, "task-attributes"]], "configure()": [[243, "configure"]], "validate()": [[243, "validate"]], "Overview": [[245, "overview"]], "Code Style": [[245, "code-style"]], "Packages and Modules": [[245, "packages-and-modules"]], "Packages": [[245, "packages"]], "Modules": [[245, "modules"]], "Classes": [[245, "classes"]], "Code sharing": [[245, "code-sharing"]], "\u2026in the polaris framework": [[245, "in-the-polaris-framework"]], "\u2026within a component": [[245, "within-a-component"]], "\u2026within a test group": [[245, "within-a-test-group"]], "\u2026within a task": [[245, "within-a-task"]], "Quick Start for Developers": [[246, "quick-start-for-developers"]], "Unix Shell": [[246, "unix-shell"]], "Set up a polaris repository: for beginners": [[246, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[246, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[246, "supported-machines"]], "Environments with Albany": [[246, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[246, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[246, "unknown-machines"]], "What the script does": [[246, "what-the-script-does"]], "Optional flags": [[246, "optional-flags"]], "Activating the environment": [[246, "activating-the-environment"]], "Switching between different polaris environments": [[246, "switching-between-different-polaris-environments"]], "Troubleshooting": [[246, "troubleshooting"], [263, "troubleshooting"]], "Creating/updating only the polaris environment": [[246, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[246, "building-e3sm-components"]], "Running polaris from the repo": [[246, "running-polaris-from-the-repo"]], "Code style for polaris": [[246, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[246, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[247, "seaice"]], "Seaice framework": [[248, "seaice-framework"]], "polaris.seaice.SeaIce": [[249, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.SingleColumn": [[250, "polaris-seaice-tasks-single-column-singlecolumn"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[251, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.validate": [[252, "polaris-seaice-tasks-single-column-exact-restart-exactrestart-validate"]], "polaris.seaice.tasks.single_column.forward.Forward": [[253, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[254, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.validate": [[255, "polaris-seaice-tasks-single-column-standard-physics-standardphysics-validate"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[256, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[257, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "Seaice component": [[258, "seaice-component"]], "MPAS-Seaice": [[260, "mpas-seaice"]], "standard_physics_test": [[262, "standard-physics-test"]], "exact_restart_test": [[262, "exact-restart-test"]], "Solver errors when configuring conda environment": [[263, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[263, "proxy-on-lanl-macs"]], "gethostbyname failed": [[263, "gethostbyname-failed"]], "Glossary": [[264, "glossary"], [265, null]], "Polaris": [[265, "polaris"]], "User's guide": [[265, null]], "Developer's guide": [[265, null]], "Tutorials": [[265, null]], "Compass": [[265, "compass"]], "Developer Tutorial: Adding a new test group": [[266, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[266, "getting-started"]], "Making a new test group": [[266, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[266, "adding-a-default-task"]], "Varying resolution and other parameters": [[266, "varying-resolution-and-other-parameters"]], "Adding the init step": [[266, "adding-the-init-step"]], "Creating a horizontal mesh": [[266, "creating-a-horizontal-mesh"]], "Adding a config file": [[266, "adding-a-config-file"]], "Adding the step to the task": [[266, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[266, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[266, "creating-an-initial-condition"]], "Adding plots": [[266, "adding-plots"]], "Adding step outputs": [[266, "adding-step-outputs"]], "Adding validation": [[266, "adding-validation"], [266, "id1"]], "Test things out!": [[266, "test-things-out"]], "Adding the forward step": [[266, "adding-the-forward-step"]], "Defining model config options and streams": [[266, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[266, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[266, "adding-more-validation"]], "Test the task again!": [[266, "test-the-task-again"]], "Adding a visualization step": [[266, "adding-a-visualization-step"]], "Adding the viz step to the task": [[266, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[266, "test-the-task-one-more-time"]], "Adding a second task": [[266, "adding-a-second-task"]], "Enhancements": [[266, "enhancements"]], "Adding model config options in code": [[266, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[266, "adding-dynamic-model-config-options"]], "Computing the cell count": [[266, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[266, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[266, "adding-a-parameter-study"]], "Adding the steps to the task": [[266, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[266, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[266, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[267, "config-files"]], "A \u201cuser\u201d config file": [[267, "a-user-config-file"]], "Test-case config files": [[267, "test-case-config-files"]], "config options": [[268, "config-options"], [269, "config-options"], [270, "config-options"], [271, "config-options"], [272, "config-options"], [273, "config-options"], [278, "config-options"], [278, "id7"], [278, "id14"], [278, "id22"], [278, "id30"], [278, "id37"], [279, "config-options"], [281, "config-options"], [282, "config-options"], [283, "config-options"], [283, "id1"], [283, "id6"], [283, "id13"], [284, "config-options"], [288, "config-options"], [288, "id5"], [288, "id10"], [289, "config-options"]], "Intel on Anvil": [[268, "intel-on-anvil"]], "Gnu on Anvil": [[268, "gnu-on-anvil"]], "Chicoma-CPU": [[269, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[269, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[270, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[270, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[271, "intel-on-compymcnodeface"]], "Slurm job queueing": [[272, "slurm-job-queueing"]], "MPICH": [[272, "mpich"]], "OpenMPI": [[272, "openmpi"]], "No MPI from conda-forge": [[272, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[273, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[273, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[273, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[275, "d-grid-type"]], "uniform": [[275, "uniform"]], "tanh_dz": [[275, "tanh-dz"]], "60layerPHC": [[275, "layerphc"]], "100layerE3SMv1": [[275, "layere3smv1"]], "3D vertical coordinates": [[275, "d-vertical-coordinates"]], "z-star": [[275, "z-star"]], "z-level": [[275, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[277, "cosine-bell-and-cosine-bell-cached-init-suite"]], "description": [[278, "description"], [278, "id1"], [278, "id8"], [278, "id16"], [278, "id24"], [281, "description"], [282, "description"], [283, "description"], [283, "id2"], [283, "id7"], [284, "description"], [288, "description"], [289, "description"]], "vertical grid": [[278, "vertical-grid"], [278, "id3"], [278, "id10"], [278, "id18"], [278, "id26"], [278, "id33"], [279, "vertical-grid"], [281, "vertical-grid"], [282, "vertical-grid"], [283, "vertical-grid"], [283, "id4"], [283, "id9"], [284, "vertical-grid"]], "initial conditions": [[278, "initial-conditions"], [278, "id4"], [278, "id11"], [278, "id19"], [278, "id27"], [278, "id34"], [279, "initial-conditions"], [281, "initial-conditions"], [282, "initial-conditions"], [283, "initial-conditions"], [283, "id5"], [283, "id10"], [284, "initial-conditions"], [288, "initial-conditions"], [288, "id2"], [288, "id7"], [289, "initial-conditions"]], "forcing": [[278, "forcing"], [278, "id5"], [278, "id12"], [278, "id20"], [278, "id28"], [278, "id35"], [279, "forcing"], [281, "forcing"], [282, "forcing"], [283, "forcing"], [283, "id11"], [284, "forcing"], [288, "forcing"], [288, "id3"], [288, "id8"], [289, "forcing"]], "time step and run duration": [[278, "time-step-and-run-duration"], [278, "id6"], [278, "id13"], [278, "id21"], [278, "id29"], [278, "id36"], [279, "time-step-and-run-duration"], [281, "time-step-and-run-duration"], [282, "time-step-and-run-duration"], [283, "time-step-and-run-duration"], [283, "id12"], [284, "time-step-and-run-duration"], [289, "time-step-and-run-duration"]], "cores": [[278, "cores"], [278, "id15"], [278, "id23"], [278, "id31"], [278, "id38"], [279, "cores"], [281, "cores"], [282, "cores"], [283, "cores"], [283, "id14"], [284, "cores"], [288, "cores"], [288, "id4"], [288, "id9"], [289, "cores"]], "thread": [[278, "thread"]], "cosine_bell and cosine_bell_with_viz": [[279, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[279, "description"]], "inertial gravity wave": [[281, "inertial-gravity-wave"]], "test_group_name": [[284, "test-group-name"], [289, "test-group-name"]], "test_case_name": [[284, "test-case-name"], [289, "test-case-name"]], "Quick Start for Users": [[285, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[285, null]], "Loading polaris conda and spack environments": [[285, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[285, "e3sm-supported-machines"]], "Other machines": [[285, "other-machines"]], "Building supported E3SM components as standalone models": [[285, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[285, "setting-up-tasks"]], "Running a task": [[285, "running-a-task"]], "Running with a job script": [[285, "running-with-a-job-script"]], "Sea ice component": [[286, "sea-ice-component"]], "standard physics test": [[288, "standard-physics-test"]], "timestep and run duration": [[288, "timestep-and-run-duration"], [288, "id11"]], "visualization": [[288, "visualization"]], "exact restart test": [[288, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[18, "polaris.Component"]], "__init__() (polaris.component method)": [[18, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[19, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[20, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[20, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[24, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[25, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[26, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[27, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[28, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[29, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[30, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[31, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[32, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[33, "polaris.Step"]], "__init__() (polaris.step method)": [[33, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[34, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[35, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[36, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[37, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[38, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[39, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[40, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[41, "polaris.Step.setup"]], "task (class in polaris)": [[42, "polaris.Task"]], "__init__() (polaris.task method)": [[42, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[43, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[44, "polaris.Task.configure"]], "validate() (polaris.task method)": [[45, "polaris.Task.validate"]], "testgroup (class in polaris)": [[46, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[46, "polaris.TestGroup.__init__"]], "add_task() (polaris.testgroup method)": [[47, "polaris.TestGroup.add_task"]], "main() (in module polaris.__main__)": [[48, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[49, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[50, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[51, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[51, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[52, "polaris.io.download"]], "module": [[53, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[53, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[54, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[55, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[56, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[57, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[58, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[59, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[60, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[61, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[63, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[64, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[66, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[71, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[72, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[73, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[74, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[76, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[77, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[78, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[79, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[80, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[81, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[82, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[83, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[84, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[85, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[86, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[87, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[88, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.src_from_proj"]], "load_dependencies() (in module polaris.run)": [[99, "polaris.run.load_dependencies"]], "pickle_step_after_run() (in module polaris.run)": [[100, "polaris.run.pickle_step_after_run"]], "run_single_step() (in module polaris.run.serial)": [[101, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[102, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[103, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[104, "polaris.run.unpickle_suite"]], "read() (in module polaris.streams)": [[105, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[106, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[107, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[108, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[109, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[110, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[111, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[112, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[113, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[114, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[114, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[115, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[116, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[117, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[118, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[119, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[120, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[129, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[129, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[130, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[132, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[133, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[134, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[135, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tasks.baroclinic_channel)": [[136, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.baroclinicchannel method)": [[136, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tasks.baroclinic_channel)": [[137, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.baroclinicchanneltestcase method)": [[137, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tasks.baroclinic_channel.baroclinicchanneltestcase method)": [[138, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[139, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[139, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "validate() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[140, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.validate"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[141, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[141, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[142, "polaris.ocean.tasks.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[143, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[143, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[144, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[145, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[146, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[146, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[147, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[148, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[149, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[149, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "validate() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[150, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.validate"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[151, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[151, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[152, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[153, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[153, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[154, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "validate() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[155, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.validate"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[156, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[156, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[157, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[158, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[159, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[159, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[160, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.validate"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[161, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[161, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[162, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tasks.global_convergence)": [[163, "polaris.ocean.tasks.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tasks.global_convergence.globalconvergence method)": [[163, "polaris.ocean.tasks.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tasks.global_convergence.cosine_bell)": [[164, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.cosinebell method)": [[164, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.global_convergence.cosine_bell.cosinebell method)": [[165, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tasks.global_convergence.cosine_bell.cosinebell method)": [[166, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tasks.global_convergence.cosine_bell.analysis)": [[167, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[167, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[168, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[169, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tasks.global_convergence.cosine_bell.forward)": [[170, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[170, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[171, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[172, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.global_convergence.cosine_bell.init)": [[173, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.init.init method)": [[173, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.init.init method)": [[174, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tasks.global_convergence.cosine_bell.viz)": [[175, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.viz method)": [[175, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.viz method)": [[176, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.global_convergence.cosine_bell.viz)": [[177, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.vizmap method)": [[177, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.vizmap method)": [[178, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[179, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[179, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[180, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[180, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[181, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tasks.inertial_gravity_wave.convergence)": [[182, "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.convergence.convergence method)": [[182, "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tasks.inertial_gravity_wave.convergence.convergence method)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[184, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[184, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[185, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[186, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[187, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[187, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[188, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[189, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[191, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[192, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[192, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[193, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[194, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[194, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[195, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[195, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[196, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tasks.manufactured_solution.convergence)": [[197, "polaris.ocean.tasks.manufactured_solution.convergence.Convergence"]], "__init__() (polaris.ocean.tasks.manufactured_solution.convergence.convergence method)": [[197, "polaris.ocean.tasks.manufactured_solution.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tasks.manufactured_solution.convergence.convergence method)": [[198, "polaris.ocean.tasks.manufactured_solution.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[199, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[199, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[200, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[201, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[202, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[202, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[203, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[204, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[205, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[205, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[206, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[207, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[207, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[208, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "singlecolumn (class in polaris.ocean.tasks.single_column)": [[209, "polaris.ocean.tasks.single_column.SingleColumn"]], "__init__() (polaris.ocean.tasks.single_column.singlecolumn method)": [[209, "polaris.ocean.tasks.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[210, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[210, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[211, "polaris.ocean.tasks.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[212, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[212, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[213, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[213, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[214, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.validate"]], "init (class in polaris.ocean.tasks.single_column.init)": [[215, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[215, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[216, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[217, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[217, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[218, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[219, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[220, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[221, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[222, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[223, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[224, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[225, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[226, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[227, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[228, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[249, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[249, "polaris.seaice.SeaIce.__init__"]], "singlecolumn (class in polaris.seaice.tasks.single_column)": [[250, "polaris.seaice.tasks.single_column.SingleColumn"]], "__init__() (polaris.seaice.tasks.single_column.singlecolumn method)": [[250, "polaris.seaice.tasks.single_column.SingleColumn.__init__"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[251, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[251, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[252, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.validate"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[253, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[253, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[254, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[254, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "validate() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[255, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.validate"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[256, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[256, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[257, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})