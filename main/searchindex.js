Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.run", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/organization/components", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.run.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/organization/components.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.get_available_cores_and_nodes", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.run", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "Components", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 22, 23, 24, 99, 108, 112, 139, 146, 197, 198], "date": [1, 4, 48, 181, 194, 198], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 36, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 70, 74, 76, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 112, 113, 118, 121, 122, 123, 124, 130, 133, 135, 137, 138, 140, 142, 143, 145, 147, 150, 152, 153, 155, 158, 161, 162, 164, 165, 167, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213], "purpos": [1, 45, 192, 193, 196, 213], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 57, 58, 59, 62, 63, 65, 66, 67, 68, 70, 71, 79, 81, 83, 84, 90, 91, 96, 104, 105, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 206, 209, 210, 212, 214], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 66, 109, 121, 123, 126, 171, 173, 179, 180, 181, 187, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 210, 212], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 65, 66, 70, 81, 84, 88, 94, 95, 96, 97, 99, 101, 104, 105, 106, 108, 113, 114, 116, 117, 118, 121, 123, 124, 137, 138, 139, 146, 165, 166, 173, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214], "summar": 1, "what": [1, 9, 14, 118, 193, 204, 212], "capabl": [1, 14, 118, 189, 193, 203, 212], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 105, 130, 142, 152, 173, 179, 180, 191, 192, 194, 197, 199, 200, 201, 202, 204, 212], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 114, 116, 117, 118, 121, 181, 182, 184, 185, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204, 207, 208, 213, 214], "through": [1, 98, 193], "process": [1, 6, 12, 27, 81, 113, 189, 193, 194, 196, 197], "It": [1, 4, 12, 14, 32, 38, 184, 189, 190, 191, 192, 193, 194, 196, 198, 203], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 66, 97, 98, 105, 106, 114, 115, 116, 117, 118, 119, 121, 126, 142, 152, 181, 187, 189, 190, 191, 192, 194, 195, 198, 209, 212], "clear": [1, 193], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 58, 65, 70, 84, 100, 101, 137, 145, 164, 173, 179, 180, 189, 193, 194, 195, 196, 197, 212], "code": [1, 4, 5, 7, 10, 12, 32, 121, 181, 187, 189, 190, 191, 196, 197, 198, 205, 209, 212], "do": [1, 4, 7, 9, 12, 14, 15, 108, 189, 191, 194, 195, 196, 203, 212], "current": [1, 4, 6, 9, 19, 29, 32, 39, 104, 105, 118, 123, 181, 185, 187, 189, 193, 194, 196, 197, 198, 203, 206, 209, 210, 212, 213, 214], "doe": [1, 7, 10, 12, 189, 197, 203], "primari": [1, 4, 7, 214], "challeng": 1, "respect": [1, 6, 7, 12, 121, 189, 193], "softwar": [1, 74, 204, 212], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 104, 105, 121, 173, 179, 180, 181, 187, 188, 189, 191, 192, 193, 194, 198, 203, 204, 206, 209, 210, 212, 213], "appropri": [1, 4, 12, 20, 79, 118, 181, 184, 187, 189, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 212], "final": [1, 5, 184, 188, 189, 191, 210], "statement": [1, 10, 189, 196], "contain": [1, 4, 5, 6, 7, 14, 17, 21, 22, 23, 49, 52, 76, 85, 86, 87, 88, 92, 93, 94, 99, 106, 107, 121, 128, 173, 179, 180, 187, 188, 189, 193, 194, 196, 198, 203, 207, 212], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 65, 105, 121, 142, 152, 171, 181, 183, 184, 185, 187, 189, 194, 198, 203, 210, 212], "regard": 1, "success": [1, 51, 181, 187, 198], "last": [1, 190, 194, 212], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 99, 101, 123, 131, 148, 184, 189, 191, 192, 194, 197, 198, 209, 212], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 64, 69, 73, 99, 100, 101, 108, 109, 112, 113, 139, 146, 184, 187, 189, 191, 192, 193, 194, 196, 198, 204, 210], "your": [1, 3, 4, 9, 118, 181, 193, 194, 195, 198, 199, 200, 203, 204, 210, 212], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 81, 96, 97, 98, 103, 104, 105, 128, 150, 155, 158, 161, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 203, 204, 210, 212, 213, 214], "appear": [1, 118, 189], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 54, 60, 61, 98, 113, 118, 121, 134, 144, 154, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 203, 206, 209, 210, 212, 214], "under": [1, 14, 32, 33, 104, 118, 121, 183, 189, 190, 194, 197, 206, 213], "head": [1, 183, 200], "one": [1, 4, 5, 8, 12, 14, 15, 19, 31, 32, 34, 41, 48, 53, 97, 98, 103, 105, 121, 123, 132, 134, 136, 143, 144, 149, 154, 181, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 206, 210, 212, 213, 214], "correspond": [1, 5, 15, 104, 105, 121, 181, 189, 194], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 59, 66, 67, 72, 84, 90, 104, 105, 123, 143, 173, 179, 180, 185, 187, 189, 192, 193, 194, 203, 206, 209], "propos": 1, "discuss": [1, 121, 189, 191, 192, 193, 210], "technic": [1, 5], "issu": [1, 189, 190, 194, 210], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 118, 184, 189, 191, 192, 194, 195, 206], "focu": 1, "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 97, 98, 103, 107, 112, 114, 115, 116, 117, 118, 119, 133, 137, 139, 143, 145, 146, 147, 153, 166, 181, 184, 187, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209], "To": [1, 4, 10, 14, 15, 105, 118, 121, 181, 189, 193, 194, 199, 200, 201, 202, 203, 204, 206, 210, 212], "extent": [1, 11, 14], "possibl": [1, 6, 9, 61, 121, 183, 189, 190, 193, 206], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 97, 98, 103, 104, 105, 181, 187, 189, 193, 194, 196, 209, 212, 213], "independ": [1, 4, 190, 196], "other": [1, 4, 5, 6, 7, 8, 11, 16, 32, 33, 35, 50, 114, 134, 144, 154, 185, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 209, 213], "thu": [1, 5, 12], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 105, 121, 123, 189, 192, 196, 198, 203, 206, 209, 210, 213], "clean": [1, 189, 191, 194], "plan": [1, 11, 181, 189, 196, 213], "For": [1, 2, 4, 5, 10, 12, 14, 79, 98, 114, 183, 184, 189, 193, 194, 196, 198, 199, 207, 210, 212, 213], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 114, 115, 116, 117, 118, 119, 181, 187, 189, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 212, 213, 214], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 62, 65, 67, 85, 89, 90, 92, 97, 98, 103, 105, 114, 115, 116, 117, 118, 119, 121, 181, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 212, 213, 214], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 88, 94, 104, 105, 108, 121, 132, 134, 136, 144, 149, 154, 181, 184, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 207, 212], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 58, 60, 61, 79, 86, 93, 99, 101, 104, 105, 112, 118, 123, 167, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 206, 212, 213, 214], "intend": [1, 6, 7, 190, 198, 213], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 96, 118, 121, 130, 142, 152, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 206, 207, 208, 209, 210, 212, 213, 214], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 54, 105, 183, 185, 188, 189, 191, 193, 194, 195, 210, 212], "pde": 1, "solver": [1, 191, 194, 197, 212], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 115, 118, 119, 188, 191, 192, 193, 194, 212], "well": [1, 6, 7, 10, 11, 121, 176, 184, 189, 194, 196, 198, 210, 212, 213], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 58, 104, 105, 135, 137, 142, 147, 152, 157, 164, 181, 184, 185, 189, 190, 191, 196, 197, 198, 203, 209, 214], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 121, 185, 188, 189, 190, 191, 192, 193, 194, 197, 198, 203, 206, 212, 213, 214], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 74, 76, 81, 85, 86, 87, 88, 89, 92, 93, 94, 96, 98, 99, 100, 101, 104, 105, 106, 108, 109, 112, 113, 118, 123, 126, 132, 137, 161, 166, 177, 181, 183, 184, 185, 187, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 209, 210, 212, 213, 214], "low": [1, 106], "level": [1, 9, 10, 11, 15, 16, 121, 173, 174, 175, 176, 177, 178, 179, 180, 184, 188, 189, 191, 192, 198, 209, 210, 214], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 58, 65, 70, 74, 79, 84, 85, 89, 92, 104, 105, 106, 107, 108, 113, 118, 121, 123, 130, 137, 140, 150, 155, 158, 160, 161, 164, 169, 173, 179, 180, 183, 191, 193, 194, 195, 199, 200, 201, 202, 203, 204, 207, 209, 212], "declar": [1, 5], "interfac": [1, 8, 171, 172, 173, 179, 180, 189, 193, 194, 197, 206], "sequenc": [1, 4, 12, 188, 189, 193, 196, 212, 213, 214], "If": [1, 4, 5, 6, 7, 10, 12, 15, 19, 29, 32, 34, 39, 42, 43, 53, 79, 81, 82, 97, 104, 105, 106, 114, 115, 116, 117, 118, 119, 123, 137, 184, 189, 191, 192, 193, 194, 195, 196, 198, 203, 204, 206, 209, 210, 212], "want": [1, 4, 9, 12, 14, 15, 43, 121, 189, 192, 194, 195, 198, 203, 204, 212, 213], "math": 1, "syntax": 1, "almost": [1, 7], "ident": [1, 4, 15, 133, 143, 153, 184, 190, 193, 209], "latex": 1, "b": [1, 4, 194, 196, 212], "2": [1, 11, 12, 15, 33, 153, 183, 184, 188, 190, 194, 198, 200, 203, 206, 209, 210, 212], "2ab": 1, "imag": [1, 5, 16, 106, 192], "keep": [1, 4, 7, 12, 19, 50, 189, 191, 194], "mind": [1, 4], "quit": [1, 188, 189, 191], "small": [1, 7, 38, 189, 192, 199, 200, 205, 206, 212], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 79, 81, 96, 98, 105, 109, 118, 121, 123, 137, 173, 176, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 212, 213, 214], "prefer": [1, 189, 190, 198], "png": [1, 11, 16, 185], "okai": [1, 189], "size": [1, 11, 60, 61, 121, 125, 127, 128, 184, 192, 198, 210], "repo": [1, 4, 181, 197], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 206, 212, 213, 214], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 118, 189, 192, 194, 203, 207, 212], "actual": [1, 4, 10, 189, 191, 194], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 194, 198, 199, 200, 201, 202, 203, 204, 212], "project": [1, 4, 5, 57, 88, 94, 181, 193, 194, 198, 199, 200, 203, 212], "manag": [1, 195, 203], "item": 1, "git": [1, 13, 83, 181, 194, 198, 212], "branch": [1, 4, 118, 181, 187, 189, 194, 212], "timelin": 1, "staf": 1, "via": [1, 4, 12, 189, 203], "block": [1, 191], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 85, 89, 92, 121, 188, 189, 192, 193, 194, 195, 197, 198, 203, 209, 210, 212, 213], "def": [1, 5, 7, 9, 10, 14, 187, 189, 191, 192, 193], "example_funct": 1, "foo": [1, 193], "return": [1, 5, 25, 49, 51, 59, 60, 61, 66, 76, 80, 90, 98, 99, 101, 108, 112, 113, 121, 124, 126, 128, 138, 162, 165, 171, 174, 175, 176, 177, 178, 193, 210], "0": [1, 4, 5, 11, 12, 15, 60, 85, 89, 92, 105, 114, 115, 116, 117, 118, 119, 121, 173, 178, 179, 180, 183, 185, 189, 192, 193, 195, 198, 200, 203, 206, 207, 209, 210, 212], "how": [1, 4, 10, 12, 65, 121, 188, 189, 191, 193, 198, 203, 204, 209, 210], "show": [1, 5, 11, 189, 203, 204, 209, 210], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 79, 117, 118, 121, 127, 184, 188, 189, 191, 192, 193, 194, 198, 200, 202, 203, 204, 206, 212, 214], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 79, 97, 98, 103, 117, 118, 121, 126, 161, 181, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 212, 213, 214], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 86, 93, 97, 98, 99, 103, 105, 106, 108, 121, 126, 133, 143, 153, 181, 183, 187, 188, 189, 191, 192, 193, 194, 198, 200, 203, 206, 209, 210, 212, 213, 214], "regress": [1, 157, 184, 190, 196, 197, 209, 212, 214], "suit": [1, 5, 10, 15, 32, 41, 54, 95, 96, 98, 118, 184, 188, 189, 191, 194, 196, 197, 198, 199, 200, 201, 202, 204, 207], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 81, 84, 105, 121, 123, 137, 184, 188, 189, 191, 192, 193, 194, 195, 203, 206, 212], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 32, 33, 34, 43, 50, 65, 96, 109, 121, 181, 184, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 203, 206, 209, 210, 212, 214], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 66, 79, 121, 139, 146, 181, 187, 189, 191, 193, 194, 195, 197, 198, 199, 203, 204, 206, 210, 212, 214], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 79, 80, 81, 82, 83, 97, 98, 103, 118, 121, 171, 173, 174, 175, 179, 180, 184, 189, 192, 193, 197, 198, 200, 203, 204, 206, 212, 213], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 83, 95, 97, 98, 103, 117, 118, 142, 152, 169, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 203, 210, 212, 213], "properli": [1, 114, 116, 117, 198, 212], "addit": [1, 5, 7, 32, 187, 188, 189, 191, 192, 193, 194], "modif": [1, 5, 189], "nightli": [1, 194, 212, 214], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 104, 105, 181, 189, 191, 192, 193, 194, 196, 198, 209, 212, 213, 214], "might": [1, 9, 12, 14, 189, 192, 194, 198, 203, 212], "made": [1, 4, 14, 32, 35, 41, 105, 189, 191, 193, 196, 213], "ensur": [1, 7, 12, 50, 184, 193, 194], "continu": [1, 189], "expect": [1, 10, 14, 187, 189, 194, 210], "page": [2, 5, 199], "auto": 2, "summari": [2, 200], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 66, 97, 98, 121, 183, 184, 185, 188, 189, 190, 191, 193, 194, 196, 203, 207, 209, 210, 212, 213], "relev": [2, 5, 7, 121, 199, 200, 201, 202, 203, 204, 212], "main": [2, 5, 7, 12, 37, 118, 187, 192, 193, 194, 213], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 137, 164, 184, 189, 190, 193, 194, 197, 206], "document": [2, 7, 12, 189, 193, 197, 198, 212], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 17, 25, 34, 45, 103, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 203, 205, 206, 208, 209, 210, 212, 213, 214], "As": [3, 4, 11, 15, 60, 121, 189, 190, 191, 192, 193, 194, 198, 206, 214], "long": [3, 19, 29, 32, 39, 81, 123, 137, 189, 212], "follow": [3, 4, 5, 11, 12, 16, 57, 118, 173, 179, 180, 181, 183, 184, 189, 190, 191, 194, 195, 198, 203, 204, 206, 208, 210, 212], "procedur": [3, 118, 194, 204], "conda": [3, 4, 13, 83, 114, 116, 117, 118, 181, 187, 193, 197, 198, 199, 200, 201, 202, 204], "environ": [3, 4, 79, 114, 116, 117, 118, 181, 187, 193, 197, 198, 199, 200, 201, 202, 203, 204], "spack": [3, 4, 114, 116, 117, 118, 195, 197, 199, 200, 201, 202, 203, 204], "compil": [3, 4, 12, 114, 115, 116, 117, 118, 119, 195, 197, 199, 200, 201, 202, 203, 204, 212], "system": [3, 4, 19, 29, 32, 39, 79, 81, 82, 114, 116, 117, 118, 123, 137, 189, 195, 197, 198, 199, 200, 201, 202, 203, 204, 212], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 57, 76, 99, 114, 116, 117, 118, 121, 187, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 212], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 66, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 101, 103, 104, 105, 106, 114, 115, 116, 117, 118, 119, 137, 139, 142, 146, 152, 157, 159, 166, 170, 173, 179, 180, 181, 183, 184, 185, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 214], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 71, 83, 97, 98, 103, 104, 105, 114, 115, 116, 117, 118, 119, 121, 142, 152, 157, 170, 181, 184, 185, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 210, 213], "alreadi": [3, 9, 12, 43, 53, 121, 137, 191, 193, 194, 198, 203, 206, 210, 212], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 76, 83, 99, 103, 108, 118, 187, 188, 189, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 212], "avail": [3, 4, 9, 12, 15, 19, 29, 32, 35, 36, 39, 49, 54, 80, 81, 123, 137, 189, 191, 193, 194, 199, 200, 201, 202, 204, 209, 210, 212, 214], "Then": [3, 5, 9, 114, 115, 116, 117, 118, 119, 121, 181, 184, 187, 189, 191, 192, 194, 203, 209, 212], "run": [3, 4, 5, 8, 10, 14, 15, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 57, 80, 81, 90, 97, 98, 103, 105, 117, 118, 123, 124, 135, 137, 138, 139, 143, 146, 150, 155, 161, 164, 165, 166, 181, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 213, 214], "script": [3, 4, 10, 16, 47, 115, 118, 119, 193, 196, 197, 200, 203], "doc": [3, 5, 191, 204], "cd": [3, 181, 194, 200, 212], "rm": 3, "rf": 3, "developers_guid": 3, "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 59, 60, 62, 74, 105, 114, 115, 116, 117, 118, 119, 123, 127, 133, 143, 153, 169, 173, 179, 180, 181, 184, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 212, 214], "html": [3, 207], "view": [3, 194], "open": [3, 194], "index": [3, 15, 173, 174, 175, 176, 177, 178, 179, 180, 191, 192], "act": [4, 193, 206], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 133, 135, 184, 189, 191, 198, 203, 209, 212], "These": [4, 6, 12, 15, 17, 32, 121, 181, 183, 187, 189, 191, 193, 194, 197, 198, 203, 212, 213, 214], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 83, 105, 118, 121, 184, 189, 190, 191, 192, 195, 196, 200, 203, 204, 207, 209, 210], "describ": [4, 5, 12, 14, 83, 99, 101, 104, 105, 113, 118, 121, 184, 185, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 210, 212], "below": [4, 12, 19, 29, 32, 39, 81, 118, 123, 137, 181, 188, 189, 191, 192, 194, 198, 203, 206, 210, 212], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 54, 95, 104, 105, 118, 121, 126, 178, 184, 189, 191, 192, 193, 194, 197, 199, 200, 201, 202, 204, 206, 210, 212, 213], "instal": [4, 194, 203, 204, 212], "abov": [4, 5, 12, 15, 188, 189, 190, 191, 192, 193, 194, 198, 210, 212, 214], "develop": [4, 5, 6, 10, 11, 16, 118, 121, 181, 183, 187, 189, 190, 193, 195, 198, 203, 207, 212], "local": [4, 6, 9, 32, 34, 41, 181, 188, 189, 191, 194, 195, 198, 203, 204, 206], "off": [4, 194, 195], "http": [4, 5, 9, 53, 189, 193, 195, 197, 198, 204, 207, 212], "github": [4, 5, 193, 194, 197, 198, 207, 212], "com": [4, 5, 53, 193, 194, 197, 198, 212], "e3sm": [4, 5, 8, 9, 32, 107, 181, 187, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 58, 59, 65, 66, 70, 84, 97, 98, 103, 107, 118, 121, 130, 133, 135, 137, 140, 143, 145, 147, 150, 153, 155, 158, 161, 164, 167, 169, 173, 179, 180, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 212], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 114, 116, 117, 184, 185, 189, 191, 194, 195, 198, 203, 207, 208, 210, 212, 213, 214], "mode": [4, 12, 187, 194, 196, 197, 212], "mean": [4, 15, 79, 162, 185, 194, 206, 209, 214], "chang": [4, 6, 12, 14, 15, 65, 181, 187, 189, 190, 191, 193, 194, 196, 198, 200, 204, 206, 209, 212, 214], "reflect": [4, 194], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 57, 90, 95, 118, 121, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 212], "tool": [4, 7, 10, 12, 14, 181, 187, 189, 194, 197, 198], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 66, 74, 77, 79, 81, 84, 90, 95, 105, 106, 107, 108, 113, 114, 118, 121, 123, 124, 125, 126, 127, 137, 138, 139, 146, 158, 161, 165, 171, 173, 174, 175, 179, 180, 181, 183, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 212, 213, 214], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 57, 58, 63, 65, 68, 70, 80, 81, 83, 84, 91, 95, 96, 97, 98, 103, 104, 105, 118, 121, 122, 123, 171, 181, 183, 184, 185, 187, 189, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 54, 58, 63, 65, 68, 70, 80, 81, 83, 84, 91, 95, 96, 97, 98, 99, 103, 104, 105, 118, 121, 122, 123, 129, 130, 131, 133, 135, 137, 140, 141, 142, 143, 145, 147, 148, 150, 151, 152, 153, 155, 156, 158, 159, 161, 163, 164, 167, 169, 171, 181, 183, 184, 185, 187, 188, 189, 190, 192, 194, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 214], "support": [4, 6, 11, 14, 32, 121, 173, 179, 180, 183, 185, 189, 191, 192, 193, 197, 198, 200, 204, 206, 209, 213], "machin": [4, 6, 32, 34, 41, 83, 97, 98, 103, 181, 189, 191, 193, 197, 198, 199, 200, 201, 202, 204], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 58, 64, 65, 66, 69, 70, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 118, 123, 126, 131, 137, 139, 146, 148, 159, 166, 171, 173, 174, 175, 179, 180, 181, 184, 185, 187, 189, 190, 191, 192, 193, 195, 197, 198, 206, 208, 212, 213], "h": [4, 12], "t": [4, 5, 7, 9, 10, 12, 32, 33, 113, 121, 137, 189, 191, 193, 194, 195, 198, 200, 202, 203, 208, 209, 210, 212, 213, 214], "n": [4, 59, 66, 67, 72, 189, 200, 203, 204, 212], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 58, 59, 60, 61, 62, 80, 81, 84, 98, 121, 123, 124, 125, 127, 137, 138, 162, 165, 181, 184, 189, 190, 191, 192, 193, 196, 198, 203, 206, 208, 209, 210, 212], "v": [4, 194, 214], "By": [4, 12, 15, 33, 34, 121, 181, 187, 191, 198, 209, 210], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 66, 70, 75, 83, 84, 85, 89, 92, 96, 97, 98, 100, 103, 114, 116, 117, 121, 123, 137, 181, 185, 187, 189, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 212, 213, 214], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 81, 83, 97, 98, 121, 122, 123, 130, 137, 173, 179, 180, 181, 184, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 203, 206, 207, 209, 212, 213], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 58, 65, 70, 84, 97, 98, 104, 105, 123, 137, 140, 145, 150, 155, 168, 169, 189, 193, 198, 209, 212], "example_compact": [4, 181, 187, 198], "1km": [4, 191, 192, 209, 212], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 32, 60, 114, 115, 116, 117, 118, 119, 121, 133, 137, 153, 173, 179, 180, 184, 188, 189, 191, 194, 195, 198, 200, 203, 204, 206, 209, 210, 212], "test2": 4, "displai": [4, 6, 204], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 54, 57, 83, 97, 98, 103, 104, 105, 106, 181, 187, 189, 191, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 212, 213], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 83, 95, 97, 98, 103, 104, 105, 118, 142, 152, 169, 181, 184, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 212, 213], "help": [4, 11, 188, 189, 194, 197, 203, 207], "messag": [4, 6, 15, 191, 195, 204], "test_expr": [4, 54], "flag": [4, 189, 193, 195, 196, 198, 207, 209, 212], "suppli": [4, 5, 15, 113, 189, 194], "substr": 4, "regular": [4, 54, 59, 66, 158, 161, 199, 202, 203, 204, 212], "express": [4, 54], "subset": 4, "think": 4, "search": [4, 54, 200], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 103, 104, 105, 184, 187, 188, 189, 190, 191, 192, 194, 196, 198, 200, 203, 210], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 58, 65, 70, 74, 76, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 112, 121, 123, 126, 128, 130, 137, 145, 162, 164, 167, 169, 172, 187, 189, 191, 192, 193, 194, 196, 198, 204, 209, 212, 214], "singl": [4, 6, 16, 106, 189, 191, 193, 196, 203, 210], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 60, 76, 79, 81, 96, 99, 101, 104, 105, 108, 121, 123, 147, 162, 176, 184, 185, 189, 191, 195, 197, 198, 209, 212, 214], "instead": [4, 10, 12, 19, 96, 114, 118, 189, 191, 193, 194, 199, 212, 214], "pass": [4, 6, 10, 11, 12, 15, 41, 105, 187, 189, 191, 192, 193, 194, 196, 212], "similarli": [4, 6, 181, 189, 194, 203, 212], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 56, 83, 103, 107, 123, 129, 137, 157, 164, 188, 189, 190, 191, 192, 196, 197, 198, 203, 205, 208, 210, 213], "result": [4, 11, 15, 51, 61, 104, 105, 118, 121, 133, 143, 150, 153, 155, 184, 185, 189, 190, 193, 194, 196, 198, 209, 210, 214], "verbos": [4, 54, 56, 189, 214], "about": [4, 5, 6, 10, 12, 15, 32, 84, 107, 121, 189, 191, 192, 193, 194, 198, 200, 209], "its": [4, 5, 6, 10, 14, 16, 32, 43, 90, 100, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 210, 212, 213], "descript": [4, 5, 198, 207], "short": [4, 135, 189, 190, 191, 193, 209], "core": [4, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 80, 81, 103, 121, 122, 123, 133, 135, 184, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 209, 212, 214], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 54, 58, 65, 70, 84, 123, 137, 169, 184, 188, 189, 191, 193, 212, 213], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 58, 63, 65, 68, 70, 71, 80, 81, 83, 84, 90, 91, 95, 96, 97, 98, 105, 121, 123, 124, 128, 130, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 161, 163, 164, 165, 166, 167, 168, 169, 170, 183, 184, 185, 187, 188, 191, 192, 193, 196, 198, 204, 206, 209, 213, 214], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 58, 65, 70, 84, 123, 137, 169, 189, 191], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 95, 105, 181, 187, 189, 191, 192, 196, 197, 207], "must": [4, 5, 9, 12, 15, 19, 22, 23, 32, 35, 37, 103, 106, 121, 123, 183, 189, 191, 192, 194, 206, 213], "built": [4, 12, 97, 98, 103, 181, 187, 194, 197, 198, 203, 212], "execut": [4, 6, 12, 15, 19, 97, 98, 103, 123, 181, 187, 189, 194, 198, 199, 200, 201, 202, 203, 204, 212], "standalon": [4, 12, 117, 187, 194, 196, 197, 203], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 19, 25, 32, 34, 57, 74, 86, 93, 99, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 126, 157, 158, 172, 181, 182, 184, 185, 187, 188, 189, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 212, 213, 214], "befor": [4, 6, 12, 14, 38, 189, 192, 193, 194, 195, 200, 204, 206, 210, 212], "w": [4, 194, 196, 212], "num": 4, "f": [4, 7, 9, 12, 191, 193, 194, 198, 204, 212], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 57, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 118, 123, 127, 128, 139, 142, 146, 152, 169, 172, 181, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 200, 203, 204, 206, 209, 210, 212, 213], "m": [4, 12, 59, 66, 67, 72, 184, 192, 194, 199, 200, 201, 202, 204, 206, 209, 210, 212], "mach": [4, 32, 199, 200, 201, 202, 203, 204, 212], "p": [4, 194, 198, 212], "suite_nam": [4, 6, 96, 98, 103, 212], "specifi": [4, 12, 14, 15, 16, 34, 183, 189, 194, 198, 204, 210, 212], "either": [4, 5, 6, 10, 11, 12, 14, 60, 121, 181, 189, 194, 196, 198, 206, 212], "onli": [4, 5, 6, 12, 14, 15, 41, 118, 181, 183, 185, 187, 189, 191, 193, 197, 198, 200, 203, 204, 206, 208, 209, 210, 212], "time": [4, 5, 6, 12, 15, 16, 32, 41, 106, 121, 128, 137, 147, 166, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 204, 209, 212, 214], "wai": [4, 5, 11, 12, 32, 62, 67, 118, 121, 189, 191, 192, 193, 194, 195, 197, 203, 206], "altern": [4, 11, 212], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 28, 40, 97, 98, 142, 152, 187, 188, 189, 190, 191, 192, 193, 194, 198, 203, 209, 212], "case_numb": 4, "multipl": [4, 5, 12, 15, 182, 190, 193, 203, 209, 212], "separ": [4, 5, 7, 12, 14, 15, 189, 190, 196, 210, 212], "space": [4, 5, 7, 11, 189, 194, 200, 203, 212], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 84, 123, 137, 181, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 203, 206, 207, 212, 213], "few": [4, 11, 12, 19, 29, 32, 39, 81, 118, 123, 184, 189, 193, 198, 203, 209, 210], "basic": [4, 5, 198, 200, 203, 212], "piec": [4, 187], "inform": [4, 5, 6, 32, 84, 105, 113, 189, 191, 194, 198, 200, 207, 212], "abl": [4, 114, 115, 116, 117, 119, 121, 189, 190, 192, 194, 203, 212], "place": [4, 12, 15, 189, 191, 203, 210], "download": [4, 6, 8, 32, 34, 40, 142, 152, 191, 193, 194, 198, 212, 214], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 183, 184, 188, 189, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 212, 213, 214], "data": [4, 8, 11, 14, 15, 20, 32, 33, 34, 90, 99, 101, 102, 106, 107, 113, 118, 173, 179, 180, 189, 194, 197, 198, 199, 200, 201, 202, 203, 212, 213, 214], "locat": [4, 12, 15, 41, 97, 98, 103, 181, 189, 194, 196, 198, 200, 203, 206, 209, 210, 212], "where": [4, 5, 12, 15, 32, 34, 41, 51, 83, 97, 98, 103, 121, 173, 176, 179, 180, 181, 187, 188, 189, 191, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 212, 214], "There": [4, 11, 173, 179, 180, 188, 189, 193, 194, 195, 198, 212], "r": [4, 204, 210], "tell": [4, 194], "re": [4, 189, 193, 194, 196, 198, 203, 204, 210], "leav": [4, 191, 198], "unknown": [4, 118, 193, 203], "component_path": [4, 97, 98, 103, 181, 187, 198, 212], "absolut": [4, 7, 32, 34, 50, 97, 98, 103, 181, 187, 189, 194, 212], "landic": [4, 8, 10, 17, 34, 57, 103, 187, 188, 189, 191, 192, 194, 196, 197, 198, 212, 213, 214], "e3sm_submodul": [4, 181, 187, 194], "mali": [4, 118, 187, 189, 194, 196, 198, 212, 213], "dev": [4, 5, 14, 187, 188, 189, 192, 193, 194, 197, 207, 212], "albani": [4, 114, 116, 117, 118, 187, 198, 199, 200, 201, 204, 212], "depend": [4, 6, 12, 14, 32, 33, 40, 142, 152, 185, 191, 194, 196, 198, 203, 204, 206, 210, 212, 213], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 54, 79, 95, 96, 97, 98, 103, 105, 106, 109, 121, 123, 124, 137, 138, 139, 146, 158, 161, 165, 166, 189, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 212], "omega": [4, 25, 107, 123, 126, 181, 187, 193, 194, 196, 207, 212], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 64, 66, 69, 79, 80, 81, 82, 83, 97, 98, 103, 105, 107, 108, 109, 110, 112, 113, 118, 123, 126, 139, 146, 159, 166, 171, 173, 174, 175, 179, 180, 181, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 197, 206, 212, 213], "point": [4, 47, 53, 87, 181, 183, 187, 191, 192, 193, 194, 198, 203, 212], "much": [4, 12, 189], "config_fil": [4, 97, 98, 103], "work_dir": [4, 9, 15, 32, 41, 83, 97, 98, 103, 104, 105, 189, 191], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 64, 69, 70, 97, 98, 103, 118, 125, 127, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 213], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 71, 95, 100, 103, 105, 121, 169, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 212], "recommend": [4, 5, 9, 189, 190, 193, 194, 203, 209], "itself": [4, 5, 7, 32, 187, 188, 189, 191, 192, 194, 212], "temp": 4, "scratch": [4, 194, 200, 204, 212], "avoid": [4, 189], "confus": [4, 12, 193, 194], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 73, 74, 81, 84, 96, 105, 121, 123, 128, 142, 152, 161, 172, 184, 191, 196, 198, 204, 212, 214], "compar": [4, 8, 15, 41, 97, 98, 103, 104, 105, 132, 134, 136, 144, 149, 154, 185, 190, 193, 196, 208, 209, 212, 214], "previou": [4, 15, 189, 208, 212, 214], "same": [4, 5, 7, 12, 15, 33, 34, 41, 104, 105, 121, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 212, 213, 214], "baseline_dir": [4, 41, 97, 98, 103], "mani": [4, 6, 7, 121, 188, 189, 191, 193, 194, 196, 197, 209, 210], "valid": [4, 5, 6, 8, 41, 173, 174, 175, 176, 177, 178, 179, 180, 184, 193, 194, 197, 206, 209], "sure": [4, 10, 14, 15, 105, 118, 133, 143, 153, 181, 184, 189, 193, 194, 196, 198, 203, 204, 209, 210], "timer": [4, 41, 44, 104, 190, 191, 193], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 82, 90, 105, 114, 116, 117, 123, 137, 181, 184, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 206, 209, 210, 212], "both": [4, 5, 6, 11, 12, 15, 24, 105, 121, 139, 146, 184, 188, 189, 192, 194, 197, 198, 208], "custom": [4, 6, 11, 14, 50, 51, 97, 98, 103, 181, 187, 198, 204, 212], "order": [4, 6, 11, 12, 121, 187, 189, 190, 194, 212], "give": [4, 12, 15, 189, 193, 194, 198, 212], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 19, 31, 118, 121, 123, 173, 179, 180, 181, 184, 187, 189, 191, 193, 194, 196, 198, 203, 204, 206, 209, 210, 212, 214], "after": [4, 5, 12, 14, 32, 34, 35, 71, 90, 118, 174, 175, 181, 187, 189, 191, 194, 198, 200, 204, 212], "c": [4, 98, 118, 189, 194, 199, 200, 201, 202, 203, 204, 208, 212, 214], "argument": [4, 5, 7, 10, 12, 15, 30, 32, 81, 184, 189, 191, 193, 194, 214], "resid": [4, 34], "test_suit": [4, 189], "build": [4, 8, 11, 12, 62, 67, 114, 115, 116, 117, 118, 119, 181, 185, 187, 191, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204], "mpas_model": [4, 198], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 62, 65, 66, 67, 121, 142, 152, 189, 191, 193, 198, 204, 209, 212], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 118, 121, 181, 183, 189, 190, 191, 192, 194, 195, 196, 198, 204, 212, 213], "baselin": [4, 6, 8, 15, 41, 97, 98, 103, 104, 105, 132, 134, 136, 144, 149, 154, 160, 184, 190, 193, 196, 208, 212], "comparison": [4, 15, 41, 104, 105, 191, 198], "against": [4, 6, 8, 15, 105, 160, 184, 189, 208], "oppos": [4, 24, 124, 138, 139, 146, 158, 161, 165, 166], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 38, 39, 81, 84, 121, 123, 125, 127, 137, 184, 189, 193, 196, 197, 199, 200, 201, 202, 203, 204, 209], "parallel": [4, 14, 19, 29, 32, 38, 39, 123, 189, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 212, 213], "been": [4, 12, 15, 32, 41, 43, 90, 97, 98, 103, 114, 116, 117, 121, 161, 181, 187, 189, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 212], "no_step": 4, "wherea": [4, 10, 189, 208, 213], "typic": [4, 5, 7, 11, 12, 14, 15, 32, 96, 121, 187, 188, 189, 192, 194, 196, 198, 203, 206, 212, 213], "clone": [4, 181, 188, 194, 212], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 118, 137, 184, 189, 190, 193, 194, 195, 206, 209, 214], "just": [4, 12, 19, 29, 32, 39, 54, 118, 123, 189, 193, 194, 196, 200, 204], "pickl": [4, 6, 189, 212], "latter": [4, 41, 118], "conveni": [4, 14, 173, 179, 180, 189, 196, 198, 212], "tab": [4, 212], "complet": [4, 6, 21, 22, 23, 212], "explicitli": [4, 5, 15, 121, 184, 189, 198, 212], "select": [4, 6, 106, 189, 194], "two": [4, 8, 143, 184, 185, 187, 189, 190, 192, 193, 194, 209, 213], "edit": [4, 5, 105, 194, 212], "steps_to_run": [4, 15, 41, 96, 105, 189, 191, 198], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 58, 65, 70, 83, 84, 97, 98, 104, 105, 123, 137, 140, 145, 150, 155, 161, 164, 167, 169, 189, 191, 198, 212], "initial_st": [4, 5, 16, 130, 183, 185, 189, 191, 193, 198, 209], "full_run": [4, 144, 209], "restart_run": [4, 144, 209], "Or": [4, 189, 198], "accomplish": [4, 189, 193], "thing": [4, 114, 115, 116, 117, 118, 119, 121, 189, 193, 197], "skip": [4, 6, 15, 105, 191, 214], "take": [4, 5, 9, 12, 15, 50, 189, 190, 192, 194, 214], "preced": [4, 50], "over": [4, 7, 12, 50, 189, 193, 197, 206, 209, 212], "special": [4, 196], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 123, 189, 203], "polaris_cach": [4, 6, 17, 189], "symlink": [4, 6, 12, 32, 34, 191, 193, 194], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 74, 142, 152, 184], "structur": [4, 11, 25, 126, 191, 197], "without": [4, 15, 34, 189, 193, 194, 198, 202, 203, 212], "redund": [4, 173, 179, 180, 184], "stamp": 4, "revis": [4, 198], "remov": [4, 12, 15, 96, 184], "older": 4, "ones": [4, 173, 179, 180, 193], "version": [4, 13, 27, 50, 83, 104, 105, 181, 184, 187, 188, 189, 192, 193, 194, 197, 198, 203, 204, 207, 209, 212], "A": [4, 5, 6, 9, 11, 12, 14, 17, 20, 22, 23, 25, 32, 33, 34, 41, 45, 49, 50, 54, 58, 59, 62, 65, 66, 67, 70, 76, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 126, 129, 133, 137, 140, 143, 145, 150, 153, 155, 157, 158, 161, 164, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 187, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 209, 210, 212], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 100, 117, 125, 137, 181, 184, 189, 195, 197, 212], "cached_fil": [4, 17, 189], "json": [4, 6, 17, 48, 189, 204], "anvil": [4, 118, 189, 198, 203, 212], "chrysali": [4, 118, 189, 198, 203, 212], "sinc": [4, 12, 15, 113, 121, 184, 189, 191, 193, 194, 209, 210], "copi": [4, 6, 34, 48, 97, 98, 103, 200, 212], "onto": [4, 194], "lcrc": [4, 6, 9, 48, 189, 193, 198, 199, 201, 203, 212], "server": [4, 6, 34, 48, 189, 193, 198, 204], "whose": [4, 189], "global_ocean": [4, 7, 9, 12, 187, 189, 191, 193, 194, 198, 212, 214], "qu240": [4, 12, 189, 193, 194, 198, 212, 214], "mesh": [4, 8, 14, 19, 32, 74, 86, 93, 106, 121, 123, 124, 125, 127, 135, 138, 140, 158, 161, 162, 164, 165, 167, 169, 173, 179, 180, 183, 184, 188, 189, 191, 192, 193, 194, 196, 197, 198, 206, 208, 209, 210, 212, 214], "phc": [4, 189, 206, 214], "init": [4, 12, 29, 39, 181, 187, 189, 191, 193, 194, 198, 212, 214], "ocean_cached_fil": 4, "pr": [4, 212, 214], "look": [4, 5, 9, 15, 192, 193, 198], "someth": [4, 5, 85, 89, 92, 194], "culled_mesh": [4, 189], "nc": [4, 9, 10, 11, 12, 14, 15, 84, 189, 191, 193], "210803": 4, "culled_graph": [4, 189], "info": [4, 10, 12, 19, 26, 74, 123, 189], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 189], "date_str": [4, 48], "let": [4, 189, 194, 196, 198, 204], "string": [4, 7, 12, 34, 88, 94], "choos": [4, 189, 193, 199, 200, 201, 202, 204, 213], "todai": [4, 48], "dry_run": [4, 48], "saniti": 4, "check": [4, 15, 79, 105, 194, 196, 198, 200, 204, 212, 214], "print": [4, 10, 15, 54, 105, 109, 189, 193, 214], "stdout": [4, 10, 32, 41, 189], "translat": [4, 25, 121, 126], "compass": [4, 57, 84, 181, 189, 193, 196], "convert": [4, 7, 11, 12, 121, 189], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 97, 98, 103, 112, 113, 123, 126, 127, 139, 142, 146, 152, 181, 184, 185, 187, 189, 191, 192, 193, 197, 198], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 107, 112, 113, 127, 139, 142, 146, 152, 181, 183, 184, 187, 189, 191, 192, 193, 198], "yaml": [4, 8, 19, 20, 23, 24, 25, 123, 126, 127, 139, 146, 184, 189, 197, 200, 204], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 107, 118, 121, 126, 181, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 204, 206, 209, 210, 212, 213, 214], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 107, 118, 121, 126, 181, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 206, 209, 210, 212, 214], "forward": [4, 5, 12, 15, 32, 128, 135, 136, 145, 147, 149, 181, 187, 189, 191, 193, 198, 209, 210], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 183, 189, 191, 193, 194, 200, 202, 204, 212], "don": [4, 5, 12, 121, 189, 191, 193, 194, 202, 212, 213], "format": [4, 5, 9, 11, 12, 107, 113, 189, 190, 191, 192, 194, 198, 200], "note": [4, 5, 14, 15, 204], "keyword": [4, 5, 12, 15, 189, 191], "top": [4, 16, 173, 174, 175, 176, 177, 178, 179, 180, 183, 188, 206], "ignor": [4, 88, 94], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 60, 80, 90, 95, 118, 121, 123, 188, 189, 191, 192, 193, 194, 196, 198, 206, 212], "pars": [4, 7, 12, 20, 21, 22, 23, 76, 99, 101], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 105, 106, 109, 126, 147, 184, 187, 189, 191, 192, 193, 197, 198, 206, 209], "doesn": [4, 7, 113, 189, 191, 198, 203, 212], "matter": 4, "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 106, 189, 191], "myst": 5, "tip": [5, 194], "easi": [5, 34, 193], "start": [5, 6, 12, 100, 183, 184, 190, 192, 193, 197, 200, 203, 204, 207], "exist": [5, 7, 25, 32, 35, 53, 99, 101, 103, 126, 184, 189, 193, 194, 195, 203, 214], "tree": [5, 99, 101, 113], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 129, 130, 133, 135, 137, 143, 147, 150, 153, 155, 157, 158, 181, 184, 185, 187, 188, 189, 191, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214], "pull": [5, 193, 194, 198], "request": [5, 12, 19, 26, 28, 123, 174, 175, 189, 193, 194, 195, 198, 210], "guid": [5, 121, 184, 190, 193, 200, 203, 207], "baroclinic_channel": [5, 12, 15, 181, 186, 187, 189, 191, 192, 193, 196, 207, 211, 212, 213, 214], "label": [5, 203, 212], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 118, 123, 185, 187, 189, 191, 192, 193, 194, 196, 202, 203, 208, 212, 213], "baroclin": [5, 45, 129, 130, 133, 135, 137, 140, 143, 147, 150, 153, 155, 184, 189, 191, 192, 209], "channel": [5, 45, 129, 130, 133, 135, 137, 140, 143, 147, 150, 153, 155, 184, 189, 191, 195, 209], "And": [5, 12, 194], "becom": [5, 189, 191], "who": [5, 194, 198, 204], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 32, 41, 65, 88, 94, 97, 98, 103, 118, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 203, 206, 209, 210, 213, 214], "brief": 5, "overview": [5, 197, 200, 204], "comment": [5, 190, 198], "appli": [5, 11, 12, 54, 183, 192], "common": [5, 7, 10, 38, 41, 45, 184, 189, 190, 191, 192, 193, 195, 196, 198, 203, 204, 212, 213, 214], "refer": [5, 12, 32, 128, 147, 173, 176, 179, 180, 189, 191, 193, 194, 196, 197, 206, 209, 212], "awar": [5, 118, 187, 203], "wish": [5, 12, 189, 194, 212, 214], "specif": [5, 7, 12, 43, 118, 181, 187, 188, 192, 197, 198, 200, 203, 212, 214], "share": [5, 16, 121, 130, 181, 184, 187, 188, 189, 191, 192, 194, 197, 199, 200, 201, 202, 203, 204, 205, 209, 212], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 59, 66, 118, 121, 130, 142, 152, 189, 191, 192, 193, 197, 210, 213], "public": [5, 9, 189, 198], "api": [5, 10, 197], "underscor": 5, "md": 5, "eval": 5, "rst": [5, 12], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 130, 133, 135, 143, 147, 153, 184, 187, 191], "baroclinicchanneltestcas": [5, 184], "compute_cell_count": [5, 121, 184], "dynamic_model_config": [5, 184], "initialst": [5, 184, 189, 191], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 121, 124, 138, 139, 146, 165, 166, 184, 191, 193, 194, 196, 197, 198, 210, 212, 213], "across": [5, 12, 16, 184, 189, 190, 191, 192, 193, 196, 205, 209], "ot": 5, "automat": [5, 7, 10, 12, 16, 121, 191, 193, 194, 198, 199, 201, 202, 203, 204, 212], "python": [5, 6, 7, 20, 38, 43, 188, 189, 191, 192, 193, 194, 196, 197, 198, 203, 204, 212], "begin": [5, 15, 184, 189, 194, 197, 203, 210], "numpydoc": 5, "text": [5, 6, 210], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 121, 173, 175, 176, 177, 178, 179, 180, 181, 191, 198, 200, 204], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 79, 118, 121, 123, 124, 128, 138, 162, 165, 176, 177, 178, 184, 185, 189, 194, 200, 201, 203, 204, 212], "pressur": [5, 181, 198], "overli": 5, "ic": [5, 121, 181, 193, 194, 197, 198, 200, 206, 213], "shelf": [5, 121, 192, 193, 198, 206], "draft": [5, 206], "paramet": [5, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 57, 58, 60, 61, 62, 65, 70, 72, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 121, 123, 124, 126, 128, 130, 133, 135, 137, 138, 139, 140, 143, 145, 146, 147, 150, 153, 155, 158, 161, 162, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 191, 192, 209], "xarrai": [5, 14, 106, 173, 174, 175, 176, 177, 178, 179, 180, 189], "dataarrai": [5, 174, 175, 176, 177, 178, 189], "sea": [5, 121, 175, 176, 177, 178, 181, 198, 206], "surfac": [5, 121, 175, 176, 177, 178, 181, 183, 198, 206, 209], "height": [5, 121, 175, 176, 177, 178, 181, 198, 206], "mask": [5, 173, 176, 179, 180, 189, 198, 206], "landicepressur": [5, 191], "deviat": 5, "float": [5, 7, 12, 20, 58, 60, 61, 65, 89, 105, 106, 130, 133, 135, 137, 140, 143, 147, 150, 153, 162, 189, 191], "densiti": [5, 11, 121], "seawat": 5, "displac": 5, "land": [5, 121, 181, 197, 198, 206, 213], "landicedraft": 5, "equal": [5, 193], "initi": [5, 6, 32, 128, 132, 135, 140, 157, 167, 184, 185, 189, 191, 192, 193, 195, 196, 197, 198, 206, 208, 209, 210, 213], "entri": [5, 47, 77, 97, 98], "alwai": [5, 7, 10, 15, 50, 121, 181, 187, 193, 194, 198], "own": [5, 6, 9, 10, 16, 32, 189, 191, 193, 194, 196, 198, 210, 212, 213], "line": [5, 8, 30, 32, 81, 189, 190, 193, 194, 197, 212], "type": [5, 12, 14, 20, 86, 93, 113, 189, 191, 192, 193, 194, 195, 196, 198, 209, 210, 214], "side": 5, "colon": 5, "doubl": [5, 121, 189, 190], "back": [5, 200, 212], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 61, 82, 181, 193, 194, 195, 198, 212], "arg": [5, 10, 32, 81, 189], "indic": [5, 6, 12, 14, 15, 32, 33, 98, 105, 106, 176, 188, 189, 195, 198, 206, 209], "On": [5, 11, 194, 203], "next": [5, 192, 206, 212], "indent": [5, 189], "obviou": [5, 12], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 54, 56, 58, 65, 70, 74, 83, 84, 85, 88, 89, 92, 94, 96, 98, 99, 103, 104, 105, 106, 108, 112, 123, 124, 137, 138, 165, 189, 206, 209, 210], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 76, 99, 108, 109, 126, 139, 146, 191, 193, 198, 212], "els": [5, 6, 189], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 105, 106, 109, 114, 115, 116, 117, 119, 121, 123, 183, 189, 191, 192, 194, 198, 199, 200, 201, 202, 203, 204, 212, 213], "further": [5, 191, 192, 204], "necessari": [5, 11, 187], "rais": [5, 7, 15, 32, 35, 51, 53, 79, 105, 121, 189, 191, 192, 193], "list_cas": 6, "list_machin": [6, 193], "list_suit": 6, "anywher": [6, 10, 194], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 76, 99, 104, 105, 107, 108, 112, 113, 187, 191, 192, 193], "later": [6, 15, 19, 29, 32, 39, 50, 105, 123, 189, 198], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 75, 76, 107, 121, 183, 189, 191], "properti": [6, 12, 183, 189, 203, 210], "clean_cas": 6, "delet": [6, 193, 194, 195, 212], "constant": [6, 58, 65, 66, 121, 183, 209, 210], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 107, 172, 189, 191, 194], "out": [6, 11, 78, 82, 106, 188, 189, 193, 194, 198, 206, 212], "proven": [6, 8, 50, 197, 198], "save": [6, 16, 51, 72, 184, 189, 191, 192, 203, 208, 209], "dictionari": [6, 7, 12, 17, 20, 22, 23, 25, 32, 33, 41, 45, 50, 76, 83, 98, 99, 105, 107, 108, 109, 126, 189, 191, 192, 193], "target": [6, 9, 14, 19, 34, 53, 84, 118, 121, 123, 184, 189, 191], "minimum": [6, 106, 121, 123, 184, 189, 198, 206, 209, 210], "determin": [6, 11, 12, 34, 38, 41, 79, 113, 121, 127, 184, 185, 189, 192, 206, 209, 210, 212], "maximum": [6, 15, 105, 106, 198, 206, 209, 210], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 81, 84, 121, 123, 137, 189, 191], "cpus_per_task": [6, 12, 32, 36, 39, 81, 189], "attribut": [6, 10, 11, 12, 15, 38, 88, 94, 192], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 206, 209, 210], "runtim": [6, 24, 38, 121, 124, 138, 139, 146, 165, 166, 189, 191], "min_task": [6, 12, 14, 19, 29, 32, 39, 81, 84, 121, 123, 137, 189, 191], "min_cpus_per_task": [6, 12, 32, 39, 81, 189], "fewest": 6, "least": [6, 11, 15, 187, 194], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 105, 123, 137, 189, 197, 198, 209, 210], "run_test": [6, 189, 191], "run_single_step": 6, "oper": [6, 40, 142, 152, 189, 191, 214], "log": [6, 8, 15, 32, 41, 81, 105, 106, 189, 191, 194, 197, 212], "figur": [6, 188, 189, 192, 198], "cpu": [6, 12, 118, 189, 212], "per": [6, 12, 19, 29, 31, 32, 39, 81, 121, 123, 189, 198, 199, 200, 201, 202, 203, 204, 209, 210], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 57, 58, 62, 65, 66, 67, 70, 71, 84, 90, 107, 121, 122, 123, 124, 126, 129, 130, 133, 135, 137, 138, 139, 140, 143, 145, 146, 147, 150, 153, 155, 157, 158, 161, 164, 165, 166, 167, 169, 184, 185, 187, 189, 191, 193, 210], "wa": [6, 15, 51, 104, 105, 118, 132, 134, 136, 144, 149, 154, 189, 191, 193, 194, 195, 198, 206, 212], "retriev": [6, 195], "store": [6, 15, 43, 121, 189, 191, 212], "dure": [6, 9, 12, 24, 32, 41, 121, 124, 138, 139, 146, 165, 166, 189, 191, 193, 198, 212, 213, 214], "txt": [6, 103, 190, 195], "case_output": [6, 10], "individu": [6, 7, 16, 105, 191, 193, 203, 204, 212, 213], "involv": [6, 12, 15, 105, 189, 191, 196], "implement": [6, 7, 184, 185, 193, 209, 210], "termin": [6, 15, 189, 194], "window": 6, "update_cach": 6, "_cached_fil": [6, 189], "map": [6, 14, 17, 25, 65, 66, 84, 106, 126, 169, 185, 194, 198], "origin": [6, 48, 194, 212], "enabl": [6, 189, 195, 198, 204], "consum": [6, 189, 191, 214], "faster": [6, 194], "debug": [6, 114, 115, 116, 117, 119, 199, 200, 201, 202, 204], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 184, 188, 189, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 212, 214], "mpas_tool": [7, 10, 11, 184, 189], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 79, 80, 82, 83, 171, 173, 174, 175, 179, 180], "certain": [7, 15, 50, 189, 194, 198], "add_from_packag": [7, 193], "content": [7, 12, 99, 101, 113, 188, 189, 193, 212], "found": [7, 12, 108, 193, 194, 197, 199, 200, 201, 202, 203, 204], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 43, 72, 121, 187, 189, 191, 192, 193, 198], "cfg": [7, 43, 187, 191, 192, 193, 198, 212], "except": [7, 15, 32, 35, 51, 105, 189, 193], "first": [7, 12, 97, 98, 184, 189, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 210, 212], "second": [7, 11, 12, 137, 189, 193, 209], "know": [7, 9, 11, 121, 189, 193, 194], "behavior": [7, 12, 96, 189, 190, 191], "noth": [7, 195, 210], "being": [7, 24, 32, 41, 95, 98, 105, 124, 138, 139, 146, 165, 166, 189, 191, 192, 193, 194, 206], "test_group": [7, 17, 18, 32, 41, 130, 133, 135, 143, 147, 153, 158, 189, 191, 192], "fals": [7, 11, 12, 15, 19, 32, 34, 42, 48, 54, 56, 95, 96, 98, 103, 105, 106, 121, 123, 183, 189, 191, 192, 198, 200, 202, 204, 209], "happen": [7, 10, 12, 14, 105, 189, 191, 210], "class": [7, 9, 11, 12, 14, 17, 19, 27, 32, 37, 41, 45, 50, 57, 58, 65, 70, 84, 107, 121, 122, 123, 129, 130, 133, 135, 137, 140, 143, 145, 147, 150, 153, 155, 157, 158, 161, 164, 167, 169, 181, 184, 185, 187, 189, 191, 192], "larg": [7, 15, 189, 191, 199], "those": [7, 12, 15, 41, 104, 105, 118, 191, 192, 193, 194, 197, 210, 214], "configpars": [7, 81, 192], "getinteg": 7, "getfloat": [7, 10, 12, 14, 189], "getboolean": [7, 189], "getlist": 7, "comma": [7, 210], "integ": [7, 11], "boolean": [7, 106, 176], "etc": [7, 12, 100, 103, 187, 189, 191, 209], "getexpress": 7, "tupl": 7, "rang": [7, 106, 210], "numpi": [7, 11, 59, 66, 67, 72, 121, 128, 171, 172, 189], "linspac": 7, "arang": 7, "arrai": [7, 59, 66, 67, 72, 121, 171, 172, 174, 175, 176, 177], "One": [7, 11, 212, 214], "advantag": [7, 12, 118, 193, 203], "track": [7, 19, 189, 191, 194], "associ": [7, 11, 12, 16, 173, 179, 180, 184, 191, 192, 196], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 58, 65, 70, 84, 123, 129, 130, 133, 135, 137, 140, 143, 145, 147, 150, 153, 155, 157, 158, 161, 164, 167, 169, 187, 189, 191, 192, 193, 214], "command": [8, 13, 30, 32, 38, 81, 83, 189, 193, 194, 196, 197, 200, 203, 204, 212], "while": [8, 14, 16, 183, 184, 189, 192, 195, 196, 209], "meant": [8, 193, 198], "simplifi": 8, "verifi": [8, 190, 198], "io": [8, 189, 191, 193, 197, 198, 207], "remap": [8, 185, 197, 210], "visual": [8, 11, 14, 161, 185, 189, 191, 192, 196, 197, 210], "lot": [9, 121, 189, 193], "o": [9, 10, 99, 101, 113, 193, 194, 198, 212], "relat": [9, 11, 12, 121, 181, 184, 189, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 212], "handl": [9, 10, 191, 203, 210], "intern": [9, 19, 41, 189, 194, 195], "lower": [9, 191, 209], "directli": [9, 11, 12, 14, 32, 188, 189, 193, 196, 197, 200], "aren": [9, 32, 33, 189, 193, 194, 209, 210, 214], "readm": [9, 191], "importlib": [9, 191], "resourc": [9, 12, 29, 39, 52, 81, 124, 137, 138, 165, 184, 189, 191, 209], "import": [9, 10, 11, 12, 14, 187, 189, 191, 192, 193, 194, 196], "files_for_e3sm": [9, 191, 198], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 58, 65, 70, 74, 76, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 110, 112, 113, 123, 128, 130, 137, 145, 162, 164, 167, 169, 172, 189, 191, 192], "did": [9, 15, 105], "add_input_fil": [9, 14, 33, 189, 191], "collect": [9, 45, 87, 122, 187, 188, 196], "though": [9, 32, 191, 193], "whenev": [9, 189], "flexibl": [9, 185, 191, 194], "care": [9, 189, 192, 194], "No": [9, 197], "step_dir": 9, "database_root": [9, 189, 198, 199, 200, 201, 202, 203, 204, 212], "download_path": 9, "join": 9, "bathymetry_databas": [9, 189, 198], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 176, 189, 192, 206, 209, 210, 213], "url": [9, 34, 51, 189, 195, 198], "web": [9, 189, 198], "anl": [9, 189, 198], "gov": [9, 189, 195, 198, 200, 204], "mpas_standalonedata": [9, 198, 203], "dest_path": [9, 51], "remot": [9, 34, 194], "bathymetri": [9, 189, 198], "strategi": 10, "stderr": [10, 32, 41, 189], "loggingcontext": 10, "check_cal": [10, 189], "most": [10, 38, 118, 181, 187, 189, 192, 193, 194, 196, 198, 203, 204, 206, 207, 213], "won": [10, 193, 198], "logger": [10, 32, 41, 57, 81, 189, 191], "full": [10, 32, 96, 174, 175, 184, 185, 189, 191, 194, 197, 203, 206, 208, 209, 210, 212], "although": 10, "captur": 10, "insid": [10, 189, 193], "good": [10, 32, 189, 194], "idea": 10, "explicit": [10, 193], "go": [10, 189, 191, 192, 193, 194, 204], "even": [10, 11, 12, 15, 34, 50, 118, 189, 193, 194, 198, 203, 212], "subprocess": [10, 32, 81, 95, 189, 193, 195], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 121, 133, 143, 153, 184, 185, 189, 193, 194, 212], "otherwis": [10, 15, 189, 191, 199, 200, 201, 202, 203, 204], "intent": 10, "desir": [10, 11, 12, 15, 16, 105, 121, 189, 190, 198, 212], "trick": [10, 189], "direct": [10, 11, 12, 184, 191, 204, 209], "snippet": 10, "dome": [10, 57, 189, 191, 192, 196, 212, 213], "setup_mesh": [10, 189], "setupmesh": [10, 189, 191], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 57, 118, 187, 192, 193, 194, 196, 198], "mpas_grid": [10, 189], "landice_grid": [10, 189], "l": [10, 105, 204], "sever": [10, 189, 191, 192, 193, 194, 196, 197, 212, 214], "global": [11, 14, 45, 88, 94, 157, 158, 185, 189, 190, 192, 193, 196, 197, 198, 204, 212, 213], "quasiuniformsphericalmeshstep": [11, 185], "icosahedralmeshstep": [11, 185], "jigsaw": [11, 58, 62, 64, 65, 67, 69, 70, 158, 161, 189], "complex": [11, 15, 66, 191, 193], "build_cell_width_lat_lon": [11, 65], "opt": [11, 70], "make_jigsaw_mesh": [11, 65], "icosahedr": [11, 58, 60, 158, 161, 210], "significantli": [11, 206], "smooth": 11, "cell": [11, 12, 16, 58, 59, 60, 61, 65, 66, 67, 72, 86, 93, 121, 123, 124, 138, 162, 165, 173, 174, 175, 176, 179, 180, 184, 189, 191, 192, 206, 209, 210], "quasi": [11, 65, 198], "hand": [11, 193], "restrict": 11, "resolut": [11, 12, 14, 58, 61, 65, 66, 85, 89, 92, 130, 133, 135, 137, 140, 143, 145, 147, 150, 153, 158, 161, 162, 164, 184, 185, 188, 189, 191, 192, 198, 209, 213], "subdivis": [11, 58, 59, 60, 61, 62], "icosahedron": [11, 59, 60, 61, 62], "tabl": [11, 194, 203, 212], "approxim": [11, 58, 60, 61, 65, 121, 124, 138, 165, 194, 209, 210], "width": [11, 58, 59, 60, 65, 66, 67, 72, 209], "km": [11, 58, 59, 60, 61, 65, 66, 67, 72, 130, 133, 135, 137, 140, 143, 145, 147, 150, 153, 164, 184, 185, 198, 209, 210, 213], "5": [11, 60, 121, 147, 184, 185, 189, 190, 191, 193, 195, 198, 209, 210, 212], "240": [11, 60, 185, 198, 210], "6": [11, 60, 189, 207, 212], "120": [11, 60, 190, 210], "7": [11, 60, 204, 210, 212], "60": [11, 12, 60, 185, 206, 210], "8": [11, 60, 184, 191, 194, 198, 209, 210, 212], "30": [11, 60, 192, 204, 209, 210], "9": [11, 60, 212], "15": [11, 12, 60, 184, 209, 210, 212], "10": [11, 15, 60, 181, 184, 191, 192, 198, 203, 206, 209, 213], "11": [11, 60, 212], "3": [11, 60, 184, 189, 190, 192, 194, 195, 198, 203, 204, 206, 209, 210, 212], "12": [11, 60, 200], "13": [11, 60, 209], "94": [11, 60], "spherical_mesh": [11, 66], "cell_width": [11, 58, 59, 60, 61, 65, 66, 67, 72], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 58, 65, 189], "plot": [11, 72, 106, 121, 150, 155, 184, 185, 210, 213], "plot_cell_width": 11, "cell_width_filenam": [11, 72], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 59, 65, 66, 67, 72, 85, 87, 89, 92, 185, 198, 210], "lon": [11, 14, 59, 65, 66, 67, 72, 85, 87, 89, 92, 185, 198, 210], "sphere": [11, 185, 210], "vtk_lat_lon": 11, "far": [11, 173, 179, 180, 193], "But": [11, 118, 189, 192, 193, 198, 203], "hexagon": 11, "planar_hex": [11, 184, 189], "make_planar_hex_mesh": [11, 184, 189], "x": [11, 16, 59, 66, 67, 72, 88, 94, 106, 128, 189, 191, 209], "y": [11, 12, 16, 88, 94, 106, 184, 189, 191, 204, 209], "nx": [11, 189, 192, 209], "ny": [11, 189, 192, 209], "dc": [11, 189, 192, 209], "distanc": [11, 209], "adjac": [11, 206, 209], "center": [11, 16, 192, 206, 209], "admittedli": 11, "oddli": 11, "period": [11, 183, 184, 189, 209], "nonperiodic_x": [11, 189], "nonperiodic_i": [11, 189], "consider": [11, 173, 179, 180, 183], "grid": [11, 14, 59, 66, 72, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 121, 170, 171, 172, 173, 174, 175, 176, 179, 180, 184, 185, 189, 198, 209, 210], "behav": 11, "stagger": 11, "strictli": [11, 193], "physic": 11, "lx": 11, "howev": [11, 189, 190, 191], "ly": 11, "np": 11, "sqrt": 11, "domain": [11, 19, 26, 106, 121, 123, 128, 183, 192, 209, 210, 213], "extra": [11, 194], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 192], "max": [11, 121, 189, 210], "int": [11, 12, 19, 20, 29, 32, 36, 39, 54, 58, 59, 60, 61, 62, 80, 81, 84, 106, 123, 124, 137, 138, 158, 161, 162, 164, 165, 189], "ds_mesh": [11, 16, 106], "creation": [11, 189, 198], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 81, 123, 189, 192, 193, 209, 210], "distant": 11, "futur": [11, 38, 189, 193, 196, 197, 198, 212, 213], "descend": [12, 14, 121, 187, 189, 191, 192, 193], "modelstep": [12, 121, 189, 191], "update_pio": [12, 19, 123], "librari": [12, 114, 118, 194, 199, 200, 201, 202, 203, 204, 212], "make_graph": [12, 19, 123], "mpi": [12, 14, 84, 114, 117, 118, 123, 125, 127, 184, 189, 194, 195, 197, 199, 200, 201, 202, 204, 209, 212], "construct": [12, 122, 171, 173, 174, 175, 179, 180, 183, 187, 191, 192], "non": [12, 15, 183, 189, 212], "At": [12, 32, 41, 188], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 81, 123, 137, 153, 184, 189, 190, 196, 198, 200, 204, 209], "openmp_thread": [12, 19, 29, 32, 39, 81, 123, 137, 189, 191], "definit": 12, "prefix": [12, 34, 194, 198], "end": [12, 184, 189, 191, 193, 194, 196, 200, 210], "yml": 12, "reason": [12, 14, 38, 189, 193, 214], "add_namelist_fil": [12, 19, 121, 189, 191], "add_yaml_fil": [12, 19, 189, 191], "add_model_config_opt": [12, 19, 189, 191], "add_streams_fil": [12, 19, 121, 189, 191], "themselv": [12, 193, 197], "question": [12, 189, 198], "constructor": [12, 184, 187, 192], "simpli": [12, 50, 135, 187, 189, 191, 192, 194, 206, 212, 214], "safe": [12, 15, 189, 194, 209], "never": [12, 196], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": 12, "config_run_dur": [12, 191], "0024_00": 12, "00": [12, 15, 191, 204, 212], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 133, 196, 209], "config_block_decomp_file_prefix": 12, "time_integr": 12, "config_time_integr": 12, "rk4": [12, 193, 214], "filename_templ": 12, "restart": [12, 41, 143, 145, 184, 190, 193, 196, 209], "output_interv": 12, "0030_00": 12, "clobber_mod": 12, "truncat": 12, "reference_tim": 12, "0001": 12, "01": 12, "01_00": 12, "tracer": [12, 184, 185, 210], "xtime": 12, "normalveloc": [12, 15, 16, 134, 136, 144, 149, 154, 183, 184, 189], "layerthick": [12, 15, 121, 132, 134, 136, 144, 149, 154, 173, 177, 178, 179, 180, 184, 189, 191], "refzmid": [12, 173, 179, 180, 189], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15], "clariti": [12, 189], "guarante": [12, 181, 194], "uniqu": [12, 191], "global_converg": [12, 181, 186, 207, 208, 211], "cosine_bel": 12, "substitut": 12, "config_write_output_on_startup": 12, "0000_00": 12, "config_use_mom_del2": 12, "config_implicit_bottom_drag_coeff": 12, "0e": 12, "config_use_cvmix_background": 12, "config_cvmix_background_diffus": 12, "config_cvmix_background_viscos": 12, "worri": 12, "sometim": [12, 173, 179, 180, 189, 191, 196], "easier": [12, 189, 193, 194, 198, 212, 214], "togeth": [12, 196, 214], "seem": [12, 200, 204], "overkil": 12, "reli": [12, 189], "differ": [12, 14, 15, 50, 62, 67, 105, 118, 121, 137, 147, 181, 184, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 200, 204, 209, 210], "along": [12, 184, 189, 191, 197], "could": [12, 14, 189, 190, 191, 193, 194], "nu": [12, 137, 150, 155, 184, 189, 191], "viscos": [12, 137, 147, 150, 155, 184, 189, 191, 193, 209], "hmix": 12, "config_mom_del2": [12, 184, 189], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 54, 95, 96, 97, 98, 103, 105, 109, 123, 124, 137, 138, 139, 146, 158, 161, 165, 166], "cannot": [12, 15], "known": [12, 32, 33, 185, 189], "beforehand": 12, "particularli": [12, 195], "openmp": [12, 19, 29, 32, 39, 81, 114, 116, 117, 123, 137, 189, 199, 200, 201, 202, 204], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 193, 196, 209, 212], "complic": [12, 192, 193, 194], "xml": [12, 99, 101, 102, 113, 196], "slightli": [12, 15], "sophist": 12, "immutable_stream": 12, "var_struct": 12, "var": [12, 100], "var_arrai": 12, "tag": [12, 197], "taken": [12, 19, 123, 185, 189, 204, 212], "past": 12, "experi": [12, 118, 193, 206], "shown": [12, 188, 191], "featur": [12, 193, 194, 196, 198, 209], "difficult": [12, 118, 203], "synchron": [12, 197], "equival": [12, 194, 199], "try": [12, 53, 193, 194, 195, 198, 200, 204, 212], "template_replac": [12, 22, 23], "treat": [12, 190, 193], "jinja2": [12, 22, 23, 99], "render": [12, 22, 23, 99], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 198], "qu240dynamicadjust": 12, "seri": [12, 121, 150, 155, 185, 208], "dynam": [12, 123, 157, 181, 198], "adjust": [12, 121, 157, 181, 198], "durat": [12, 184, 190], "interv": 12, "spin": 12, "reus": [12, 189, 193, 198, 212], "qualit": [12, 15], "affect": [12, 15, 189, 194], "update_streams_at_runtim": 12, "fairli": [12, 191, 193, 194], "hour": [12, 190, 200, 204, 212], "turn": [12, 32, 49, 189, 195], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 206], "minut": [12, 184, 190, 209, 214], "dai": [12, 147, 184, 185, 191, 209, 210], "03d": 12, "_": [12, 84, 189, 191, 194], "02d": 12, "forgotten": 12, "broken": [12, 189, 193], "immedi": [12, 57, 194], "miss": [12, 15, 189, 198], "detect": [12, 16, 198, 199, 201, 202, 203, 212], "gpmeti": [12, 198], "divid": [12, 206], "partition_graph": [12, 19, 123], "circumst": [12, 15, 32, 33, 189], "wast": 12, "manual": [12, 15, 41, 42, 189, 191, 213], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 39, 79, 80, 81, 118, 123, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 212], "v1": [12, 206], "better": [12, 14, 118, 212], "v2": [12, 198, 206], "littl": [12, 193, 194, 197], "feel": [12, 189], "runtime_setup": [12, 29, 39, 191], "onc": [12, 184, 194, 198, 210, 212], "yourself": [12, 203], "fact": [12, 32], "culler": 12, "cull": [12, 184, 189], "model_step": [12, 189], "make_graph_fil": [12, 189], "field": [12, 15, 16, 72, 74, 106, 173, 179, 180, 183, 184, 209, 210], "weight": [12, 14, 74, 173, 179, 180, 206], "weight_field": [12, 74], "frequent": [14, 181], "observ": [14, 197], "dataset": [14, 106, 173, 179, 180, 189], "region": [14, 197, 198], "pyremap": [14, 90], "interpol": [14, 84, 185, 198], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 189, 194], "mappingfilestep": 14, "woa": 14, "2023": 14, "__init__": [14, 17, 19, 32, 41, 45, 50, 57, 58, 65, 70, 84, 107, 122, 123, 129, 130, 133, 135, 137, 140, 143, 145, 147, 150, 153, 155, 157, 158, 161, 164, 167, 169, 187, 189, 191, 192, 193, 196], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 206], "bilinear": [14, 84, 185, 210], "filenam": [14, 34, 35, 78, 85, 86, 87, 88, 92, 93, 94, 105, 108, 110, 189, 194], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 198], "destin": [14, 84, 85, 86, 87, 88, 89, 90, 170], "src_from_lon_lat": 14, "lon_var": [14, 85, 87, 92], "lat_var": [14, 85, 87, 92], "dst_from_mpa": 14, "mesh_nam": [14, 85, 86, 87, 88, 89, 92, 93, 94, 162, 164, 167, 169], "qu60": 14, "subclass": [14, 62, 65, 66, 67, 71, 121], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 185], "super": [14, 187, 189, 191, 192, 193], "128": [14, 190, 200, 201, 204], "cosine_bell_viz": [14, 185, 210], "dlon": [14, 89, 185, 210], "dlat": [14, 89, 185, 210], "remap_method": [14, 185, 210], "src_from_mpa": 14, "dst_global_lon_lat": 14, "With": [14, 194], "approach": [14, 189, 192, 193, 194, 195, 206], "perhap": [14, 35, 192], "cover": 14, "nearli": [14, 189, 196, 197], "situat": [14, 25, 126, 212], "workflow": [14, 189, 194], "critic": 15, "compare_vari": [15, 191], "filename1": [15, 105, 191], "filename2": [15, 105], "simpl": [15, 193, 212], "temperatur": [15, 132, 134, 136, 144, 149, 154, 183, 184, 189, 191, 209, 210], "salin": [15, 132, 134, 136, 144, 149, 154, 183, 184, 189, 191, 209, 210], "prognost": [15, 209], "4proc": [15, 134, 209], "8proc": [15, 134, 209], "alter": [15, 174, 175, 189, 191, 197, 206, 209, 210], "skip_if_step_not_run": [15, 105, 191], "forc": [15, 213], "possibli": [15, 189, 194], "failur": 15, "valueerror": [15, 79, 191, 192, 193], "quiet": [15, 96, 105, 109], "report": 15, "threshold": [15, 210], "l1": [15, 105], "00000000000000e": 15, "l2": [15, 105], "l_infin": 15, "linf": [15, 105], "home": [15, 194, 198, 200, 203, 204], "xylar": [15, 198, 203], "test_nightly_latest": 15, "10km": [15, 184, 191, 192, 209, 212, 213, 214], "threads_test": [15, 212, 214], "1thread": [15, 154, 184, 209], "2thread": [15, 154, 209], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 189, 191], "disabl": [15, 183, 213], "check_output": [15, 105], "zero": [15, 174, 175, 176, 177, 178, 183, 184], "l1_norm": [15, 105], "l2_norm": [15, 105], "linf_norm": [15, 105], "nonzero": [15, 105], "easiest": [15, 194], "solut": [15, 117, 185, 190, 195], "clobber": 15, "error": [15, 32, 41, 121, 162, 185, 189, 194, 197], "judgment": 15, "enough": [15, 184, 189, 193, 209, 210], "problem": [15, 189, 194, 195], "compare_tim": 15, "integr": [15, 147, 184, 191, 193, 209, 210], "rundir1": [15, 104], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": 16, "often": [16, 32, 189, 190, 191, 192, 193, 196, 198, 213, 214], "analysi": [16, 121, 184, 191, 193, 196, 197, 198, 210, 213], "routin": 16, "viz": 16, "plot_horiz_field": 16, "patch": [16, 106], "style": [16, 121, 197], "vertic": [16, 183, 184, 189, 198, 205, 207, 209, 210], "edg": [16, 86, 93, 106, 183], "polygon": 16, "character": 16, "accordingli": [16, 82], "d": [16, 106, 173, 179, 180, 183, 189], "final_normalveloc": 16, "t_index": [16, 106], "vmin": [16, 106], "max_veloc": 16, "vmax": [16, 106], "cmap": [16, 106], "cmo": 16, "balanc": 16, "show_patch_edg": [16, 106], "hous": 17, "seaic": [17, 34, 189, 212], "dict": [17, 20, 22, 23, 25, 32, 41, 45, 76, 77, 83, 84, 98, 99, 107, 108, 109, 126, 191], "kei": [17, 41, 45, 98, 191], "cach": [17, 19, 32, 34, 97, 98, 123, 197, 198, 203, 208, 212, 214], "testgroup": [18, 32, 41, 192, 193], "max_memori": [19, 29, 32, 39, 123], "mesh_filenam": [19, 74, 123], "graph_filenam": [19, 74, 123], "graph": [19, 26, 28, 38, 74, 123, 184, 189, 198], "make_yaml": 19, "pio": [19, 28, 31, 123, 184], "stride": [19, 31, 123], "consist": [19, 31, 123, 181, 194, 198, 209], "partit": [19, 28, 38, 74, 123, 184, 189, 198, 199, 200, 201, 202, 204, 212], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 81, 84, 121, 123, 137, 189, 192, 193, 197, 198, 213], "accommod": [19, 29, 32, 39, 81, 123], "fewer": [19, 29, 32, 39, 81, 123, 137, 189, 209, 212], "amount": [19, 29, 32, 39, 123, 189, 205], "memori": [19, 29, 32, 39, 123, 189, 198], "mb": [19, 29, 32, 39, 123, 198], "placehold": [19, 29, 32, 39, 123, 189, 212], "at_setup": [24, 121, 124, 138, 139, 146, 165, 166], "overridden": [25, 126, 189, 191], "diverg": [25, 126], "counterpart": [25, 121, 126], "nest": [25, 107, 109, 126], "graph_fil": 26, "parent": [27, 187, 189, 192], "done": [29, 39, 189, 212], "run_as_subprocess": [32, 189], "condit": [32, 132, 135, 140, 157, 167, 184, 185, 189, 190, 191, 192, 193, 196, 197, 198, 208, 209, 213], "smallest": [32, 189, 196, 206, 213], "unit": [32, 85, 89, 92, 189, 196, 209, 213], "term": [32, 196], "necessarili": [32, 34, 196], "input_data": 32, "until": [32, 33, 189, 191, 212], "finish": [32, 33, 71], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 83, 107, 189, 190, 191, 195, 198, 212], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 189, 191], "base_work_dir": [32, 41, 189, 191], "log_filenam": [32, 41, 189], "redirect": [32, 189], "extern": [32, 181, 187, 189, 207], "access": [33, 191, 193, 194, 199, 203, 204], "database_compon": [34, 189], "work_dir_target": [34, 189], "come": [34, 189, 194, 199, 200, 201, 202, 203, 204, 207], "root": [34, 162, 181, 185, 187, 189, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 212], "suffix": [34, 98, 189], "_database_root": 34, "append": 34, "available_cor": [36, 125], "constrain": [36, 124, 138, 165, 184], "total": [36, 80, 189, 190, 193, 198, 200, 212], "everi": [37, 184, 189, 191, 193, 195, 196, 209], "child": [37, 187, 189, 191, 193], "serial": [38, 189, 191, 197, 212], "subtask": 39, "stdout_logg": 41, "goe": [41, 189], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 128, 191, 193, 212], "statu": 41, "run_by_default": [42, 189, 191], "assum": [43, 99, 108, 191, 204, 209], "prior": [43, 189, 191], "greenland": [45, 192, 196, 197, 213], "eismint2": 45, "step_path": 48, "variant": [48, 184, 190, 192, 193, 194, 203, 206, 209, 210], "uncach": 48, "datestamp": 48, "yymmdd": [48, 198], "dry": [48, 190], "meta": 50, "empti": [50, 189, 193, 194, 196], "link_nam": 53, "overwrit": 53, "stackoverflow": 53, "55742015": 53, "7728169": 53, "symbol": [53, 189], "fileexistserror": 53, "unless": [53, 96, 194], "isadirectoryerror": 53, "decomposition_test": [57, 192, 212], "decompositiontest": [57, 192], "noqa": [57, 161, 164, 167], "e501": [57, 161, 164, 167], "turquois": [57, 200], "usr": [57, 200, 212], "climat": [57, 199, 200, 201, 203, 212], "mhoffman": 57, "latitud": [59, 66, 85, 87, 89, 92, 185, 210], "longitud": [59, 66, 67, 72, 85, 87, 89, 92, 185, 210], "ndarrai": [59, 66, 67, 72, 128, 171, 172], "degre": [59, 66, 67, 72, 89, 198, 209], "length": [59, 66, 67, 72], "180": [59, 66, 67, 72, 210], "90": [59, 66, 67, 72, 189, 210], "static": [60, 61], "rule": 60, "thumb": 60, "achiev": [61, 190], "close": [61, 197, 210], "uniform": [65, 164, 184, 185, 192, 198, 209, 210], "jigsawpi": [70, 189], "jigsaw_jig_t": 70, "meti": 74, "defaults_filenam": 75, "state": [79, 128, 183, 184, 185, 189, 190, 210], "queu": 79, "slurm": [79, 82, 197, 198, 199, 200, 201, 202, 204, 212], "interact": [79, 200, 203, 204, 212], "batch": [79, 200], "job": [79, 118, 194, 197, 199, 200, 201, 202, 204], "slurm_job_id": 79, "substep": 81, "cpus_per_nod": 82, "map_filenam": 84, "src_grid_info": 84, "dst_grid_info": 84, "neareststod": [84, 185, 210], "conserv": [84, 185, 210], "map_": 84, "source_typ": 84, "dest_typ": 84, "1d": [85, 89, 92, 121, 171, 172, 173, 174, 175, 176, 177, 179, 180], "2d": [85, 89, 92], "5x0": [85, 89, 92], "5degre": [85, 89, 92], "coordin": [85, 87, 88, 92, 94, 106, 173, 179, 180, 205, 207, 209, 210], "mesh_typ": [86, 93, 189, 191, 192], "vertex": [86, 93], "x_var": [88, 94], "y_var": [88, 94], "proj_attr": [88, 94], "proj_str": [88, 94], "proj": [88, 94], "remapp": 90, "remap_fil": 90, "step_is_subprocess": 95, "is_test_cas": 96, "steps_not_to_run": 96, "progress": 96, "cached_step": 97, "copy_execut": [97, 98, 103, 212], "serv": [97, 98, 103, 192], "_all": [97, 98], "streams_filenam": 99, "lxml": [99, 101, 113], "etre": [99, 101, 113], "new_child": 100, "children": 100, "sub": 100, "new_tre": 101, "out_filenam": [102, 172], "rundir2": 104, "norm": 105, "infin": 105, "toler": 105, "exclud": [105, 212], "field_nam": 106, "out_file_nam": 106, "titl": 106, "z_index": 106, "cmap_set_und": 106, "cmap_scal": 106, "linear": [106, 209], "horizont": [106, 121, 183, 184, 209], "planar": [106, 121, 183], "depth": [106, 121, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 198, 206, 209, 210], "slice": 106, "fieldnam": 106, "present": [106, 194], "colorbar": 106, "visibl": 106, "nvertlevel": [106, 173, 179, 180, 189, 206], "ax": 106, "colormap": 106, "color": 106, "logarithm": 106, "classmethod": 108, "jinja": 108, "namelist_templ": 112, "polarisyaml": [112, 113], "processed_registry_filenam": 113, "registri": [113, 183], "steam": 113, "load_dev_polaris_0": [114, 115, 116, 117, 118, 119], "alpha": [114, 115, 116, 117, 118, 119], "1_anvil_intel_impi": [114, 118], "sh": [114, 115, 116, 117, 118, 119, 194, 195, 199, 200, 201, 202, 204, 212], "openmpi": [114, 118, 194, 197, 199, 201, 202, 212], "mvapich": [114, 118, 199], "impi": [114, 118, 199, 202], "ifort": [114, 116, 118, 199, 201], "ve": [114, 115, 116, 117, 119, 189, 194], "1_anvil_gnu_openmpi": 114, "gfortran": [114, 116, 117, 118, 194, 199, 201], "load": [115, 118, 119, 194, 197, 198, 199, 200, 201, 202, 203, 204], "1_chicoma": 115, "cpu_gnu_mpich": [115, 119], "crai": [115, 118, 119, 200, 204], "1_chrysalis_intel_openmpi": 116, "1_chrysalis_gnu_openmpi": 116, "yet": [117, 121, 189, 193], "again": [117, 181, 189, 194, 195, 212], "soon": [117, 212], "1_compy_intel_impi": 117, "1_compy_gnu_openmpi": 117, "attempt": [118, 197, 203], "particular": [118, 192, 194, 197, 200, 203, 212], "activ": [118, 203, 204, 212], "load_polaris_env": [118, 194, 212], "were": [118, 137, 189, 193, 196, 198, 202, 206], "right": [118, 121, 191, 194, 198, 206, 210, 212], "therefor": [118, 189, 196, 210], "gnu": [118, 194, 202, 203, 212], "lib": 118, "intel": [118, 203], "chicoma": [118, 203, 212], "mpich": [118, 194, 197, 200, 204, 212], "compi": [118, 202, 212], "pm": [118, 204, 212], "compymcnodefac": [118, 203], "perlmutt": [118, 200, 203, 212], "pretti": [118, 189, 193, 198], "forg": [118, 197, 212], "linux": [118, 194, 203], "configure_polaris_env": [118, 194, 195], "conda_path": [118, 194], "osx": [118, 203], "clang": [118, 194], "had": 118, "1_": 118, "1_pm": 119, "ever": [121, 193], "expand": [121, 206], "oceanmodelstep": 121, "decid": 121, "veri": [121, 187, 189, 193, 194], "earli": [121, 207, 212], "stage": [121, 183, 189, 191, 194, 207, 212], "map_yaml_to_namelist": 121, "count": [121, 190], "heurist": 121, "exact": [121, 185, 193], "algorithm": [121, 137, 184, 189], "200": [121, 191, 209, 210], "round": [121, 210], "cell_count": [121, 124, 138, 165], "goal_cells_per_cor": [121, 209, 210], "pinch": 121, "2000": [121, 192, 209, 210], "max_cells_per_cor": [121, 209, 210], "seciton": 121, "control": [121, 189, 198, 209, 210, 212], "scale": [121, 212], "tri": [121, 193], "apport": 121, "precis": [121, 189], "caviti": [121, 193, 198, 206], "frazil": 121, "flux": [121, 183], "grid_1d": 121, "generate_1d_grid": 121, "vertical_grid": [121, 171, 173, 179, 180, 192, 198, 206, 209, 210], "z": [121, 174, 175, 176, 177, 178, 179, 180, 209, 210, 214], "star": [121, 178, 180, 209, 210, 214], "init_vertical_coord": 121, "minlevelcel": [121, 173, 175, 176, 177, 178, 179, 180], "maxlevelcel": [121, 173, 174, 175, 176, 177, 178, 179, 180, 189], "cellmask": [121, 173, 176, 179, 180], "zmid": [121, 173, 179, 180], "restingthick": [121, 173, 178, 179, 180, 189], "bottomdepth": [121, 173, 174, 176, 177, 178, 179, 180, 189], "entir": [121, 209, 214], "petersen": [121, 194, 209], "et": [121, 206, 209, 210], "al": [121, 206, 209, 210], "2015": [121, 209], "int_": 121, "rho": 121, "left": [121, 206, 210], "dv": 121, "sort": [121, 188, 193, 194], "increas": [121, 193], "compute_rp": 121, "csv": 121, "dynamic_ntask": 123, "estim": [125, 127], "initial_state_file_nam": 128, "output_fil": [128, 189], "rest": [128, 178, 206, 210], "potenti": [128, 147, 189, 191, 209], "energi": [128, 147, 191, 197, 209], "netcdf": [128, 198, 199, 200, 201, 202, 203, 204], "len": [128, 189], "superclass": [130, 184, 189], "run_time_step": 137, "resources_fix": 137, "shouldn": 137, "dt": [137, 209, 210], "btr_dt": [137, 209], "barotrop": [137, 209], "longer": [143, 184, 190, 209, 210, 214], "shorter": [143, 190], "rpe": [147, 150, 155, 191, 209], "20": [147, 184, 190, 191, 209], "less": [158, 161, 189, 206], "globalocean": [158, 187], "cosin": [161, 164, 167, 169, 185, 210], "bell": [161, 164, 167, 169, 185, 210], "cosinebel": [161, 164, 167, 185], "rmsevalu": 162, "squar": [162, 185], "ncell": [162, 189], "posit": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 206], "layer": [171, 172, 173, 177, 178, 179, 180, 183, 184, 198, 206, 209, 210], "meter": [171, 172], "bottom": [173, 174, 175, 176, 177, 178, 179, 180, 183, 198, 206, 209, 210], "thick": [173, 177, 178, 179, 180, 184, 198, 206, 209], "stretch": [173, 179, 180, 206], "elev": [173, 179, 180, 206], "midpoint": [173, 179, 180], "reftopdepth": [173, 176, 177, 179, 180], "down": [173, 174, 175, 176, 177, 178, 179, 180, 206], "ref": [173, 179, 180], "middl": [173, 179, 180], "refbottomdepth": [173, 174, 175, 176, 177, 179, 180, 189], "refinterfac": [173, 179, 180], "element": [173, 179, 180], "vertcoordmovementweight": [173, 179, 180, 189], "movement": [173, 179, 180], "partial": [174, 175, 206, 209, 210], "seafloor": [174, 176, 177, 178, 206], "unstretch": 178, "shelv": [181, 198, 206], "ssh_adjust": [181, 189, 191, 198], "iter": [181, 198], "compass_branch": 181, "default_input": [181, 187, 198], "ocean_model": [181, 194, 198], "submodul": [181, 187, 194, 212], "latest": [181, 194, 197, 207, 212], "master": 181, "compat": [181, 194, 195, 197], "verison": 181, "maintain": [181, 212], "recurs": [181, 193, 194, 212], "whichev": [181, 206], "design": [182, 189, 191, 193, 197, 203], "minim": 183, "fcell": [183, 189], "fedg": [183, 189], "fvertex": [183, 189], "free": [183, 198], "slip": 183, "solid": [183, 209, 210], "tangenti": 183, "enforc": [183, 194], "nonperiod": 183, "drag": 183, "mass": 183, "momentum": [183, 184], "scalar": 183, "rigid": 183, "veloc": [183, 184, 191, 194, 210, 212], "normal": [183, 189, 190, 194, 203], "solv": [183, 195, 206], "mid": 183, "vari": [183, 185, 189, 195, 203, 206, 210], "consult": 183, "tidal_forc": 183, "eddi": [184, 209], "addition": [184, 199, 200, 201, 202, 204], "diffus": 184, "50": [184, 192, 209], "prescrib": 184, "runtime_steup": 184, "decomptest": 184, "restarttest": [184, 192], "frequenc": 184, "threadstest": 184, "thread_test": 184, "rpetest": [184, 191], "intens": 184, "globalconverg": [185, 193], "converg": [185, 188, 190, 197, 210], "studi": [185, 210], "globe": [185, 210], "advect": [185, 210], "qu": [185, 198, 208, 210], "ico": [185, 208, 210], "fix": [185, 192], "spheric": [185, 210], "24": [185, 210], "shape": [185, 210], "blob": 185, "around": [185, 198, 209, 210], "rate": [185, 210], "distribut": 185, "dt_per_km": [185, 209, 210], "rmse": 185, "encompass": 187, "perspect": 187, "four": 187, "major": [187, 189], "add_test_group": [187, 193], "variou": [187, 189, 194], "univers": 187, "mix": [187, 192], "ice_shelf_2d": [187, 214], "iceshelf2d": 187, "ziso": [187, 206, 213, 214], "landice_model": [187, 194], "green": 188, "blue": [188, 199, 212], "orang": 188, "red": 188, "repositori": [188, 197, 212], "laid": 188, "fig": 188, "among": [188, 192, 194], "organiz": 188, "concept": [188, 193, 196, 213], "simul": [189, 196, 208, 209, 212], "multiprocess": [189, 193, 198], "outsid": 189, "emploi": 189, "prevent": 189, "unwant": 189, "outer": 189, "inner": 189, "variable_resolut": [189, 192, 212], "dome_varres_grid": 189, "calcul": [189, 191], "signific": [189, 190, 191], "neglig": 189, "meshstep": 189, "getint": 189, "mesh_cpus_per_task": 189, "mesh_min_cpus_per_task": 189, "previous": 189, "processor": [189, 209, 210], "readi": [189, 204], "write_netcdf": 189, "convers": 189, "generate_grid": 189, "dsmesh": 189, "graphinfofilenam": 189, "use_dist": [189, 209], "gradient_width_dist": [189, 209], "gradient_width_frac": [189, 209], "bottom_temperatur": [189, 209], "surface_temperatur": [189, 209], "temperature_differ": [189, 209], "coriolis_paramet": [189, 209], "bottom_depth": [189, 198, 206, 209, 210], "vert_level": [189, 198, 206, 209, 210], "ones_lik": 189, "xcell": 189, "ycell": 189, "xmin": 189, "min": [189, 209], "xmax": 189, "ymin": 189, "ymax": 189, "ymid": 189, "xperturbmin": 189, "xperturbmax": 189, "perturbationwidth": 189, "yoffset": 189, "sin": [189, 209], "pi": [189, 206, 210], "temp_vert": 189, "frac": [189, 206], "logical_and": 189, "transpos": 189, "3rd": 189, "crest": 189, "wave": [189, 209], "expand_dim": 189, "dim": 189, "axi": 189, "broadcast": 189, "zeros_lik": 189, "xedg": 189, "nedg": 189, "dtype": 189, "xvertex": 189, "commandlin": 189, "explor": [189, 192, 206], "harm": 189, "likewis": 189, "subsequ": [189, 196, 214], "arisen": 189, "now": [189, 194, 198, 203], "omit": [189, 212], "problemat": 189, "usual": [189, 191, 194, 212], "open_dataset": 189, "isn": [189, 193, 209], "forwardstep": 189, "mesh_path": 189, "mesh_step": 189, "with_ice_shelf_cav": [189, 191], "initial_state_target": 189, "adjusted_init": [189, 191], "forcing_data": 189, "entha_analy_result": 189, "mat": 189, "enthalpy_benchmark": 189, "ourselv": 189, "reduc": 189, "firewal": 189, "bedmachineantarctica_v2_and_gebco_2022_0": 189, "05_degree_20220729": 189, "slate": 189, "icepresent_qu60km_polar": 189, "practic": [189, 193, 194], "u": [189, 203, 204], "straightforward": 189, "commonli": [189, 196], "expens": [189, 190], "mechan": 189, "notat": 189, "That": [189, 193, 196, 212], "word": 189, "ff": 189, "quwisc240": [189, 193, 212, 214], "90c": 189, "91c": 189, "92": [189, 206], "91": 189, "sowisc12to60": [189, 212, 214], "performance_test": [189, 214], "effici": 189, "transfer": 189, "feasibl": 189, "nor": 189, "add_depend": 189, "unpickl": 189, "overhead": 189, "organ": [190, 192, 197], "philosophi": [190, 193], "context": 190, "namesak": 190, "256": [190, 200, 204], "quicker": 190, "32": [190, 212], "exce": 190, "limit": [190, 194], "offer": 190, "benefit": [190, 197], "catch": 190, "bug": 190, "covereag": 190, "timestep": 190, "exhaust": 190, "recent": [190, 207], "merg": 190, "reach": 190, "steadi": 190, "encount": [190, 195], "wet": 190, "fundament": 191, "incorpor": 191, "deprec": 191, "constrain_resourc": 191, "smoke_test": [191, 192], "smoketest": [191, 192], "velo_solv": 191, "sia": [191, 194], "fo": 191, "add_step": 191, "runmodel": 191, "run_step": 191, "0200": 191, "00_00": 191, "fine": 191, "recip": 191, "rpe_test": [191, 193, 212], "res_param": [191, 192], "144": 191, "36": [191, 199, 203, 212], "4km": [191, 192, 209, 212], "unsupport": [191, 192], "param": [191, 192], "enumer": 191, "rpe_test_": 191, "_nu_": 191, "deliber": 191, "chosen": 191, "demonstr": 191, "clumsi": [191, 193], "rpe_test_1_nu_1": [191, 209], "rpe_test_2_nu_5": [191, 209], "filesfore3sm": 191, "configure_global_ocean": 191, "with_bgc": 191, "po4": 191, "no3": 191, "sio3": 191, "nh4": 191, "fe": [191, 200], "o2": 191, "dic": 191, "dic_alt_co2": 191, "alk": 191, "dofe": 191, "dop": 191, "dopr": 191, "donr": 191, "zooc": 191, "spchl": 191, "spc": 191, "spfe": 191, "spcaco3": 191, "diatchl": 191, "diatc": 191, "diatf": 191, "diatsi": 191, "diazchl": 191, "diazc": 191, "diazf": 191, "phaeochl": 191, "phaeoc": 191, "phaeof": 191, "dm": 191, "dmsp": 191, "prot": 191, "poli": 191, "lip": 191, "conceptu": [192, 193], "realist": [192, 197, 213], "2000m": [192, 212], "34": [192, 212], "halfar": 192, "cism": 192, "dome_typ": 192, "closest": 192, "put_origin_on_a_cel": 192, "hydrologi": 192, "hydro": [192, 213], "dome_viz": 192, "time_slic": 192, "save_imag": 192, "hide": 192, "hide_fig": 192, "add_test_cas": 192, "restart_test": [192, 212, 214], "talk": 192, "16": [192, 198, 212], "10e3": 192, "40": [192, 202], "126": 192, "4e3": 192, "160": 192, "500": [192, 198, 206], "held": 192, "initial_condit": 193, "dig": [193, 198], "infrastructur": 193, "background": 193, "behind": 193, "adher": 193, "pep8": [193, 194], "bot": [193, 206], "violat": 193, "pleas": [193, 194, 212], "consid": 193, "editor": 193, "pycharm": [193, 194], "spyder": 193, "linter": 193, "flake8": [193, 194], "discourag": 193, "reformat": 193, "autopep8": 193, "undesir": 193, "util": 193, "lint": 193, "standard": [193, 194, 200, 212], "wildcard": 193, "vim": 193, "plugin": 193, "id": [193, 194], "commit": [193, 194], "why": 193, "sound": 193, "subpackag": 193, "understand": [193, 198], "releas": [193, 197, 203, 207, 212], "our": [193, 212], "downstream": 193, "tutori": [193, 194], "clu": 193, "intro": 193, "docstr": [193, 197], "strip": 193, "mpas_ocean": 193, "hidden": 193, "shortcut": [193, 212], "referenc": 193, "ll": [193, 204], "mention": 193, "dot": 193, "charact": 193, "unix": [193, 197], "distinct": 193, "mayb": 193, "machine_config": 193, "endswith": 193, "splitext": 193, "exactli": [193, 194, 206], "move": 193, "renam": 193, "visa": 193, "versa": 193, "comfort": 193, "inherit": 193, "orient": 193, "program": [193, 198], "led": 193, "felt": 193, "contribut": 193, "hesit": 193, "predecessor": [193, 196, 197], "harder": 193, "outcom": 193, "augment": 193, "explain": 193, "hope": 193, "dens": 193, "learn": 193, "curv": 193, "worth": 193, "skill": 193, "broadli": 193, "applic": [193, 194], "endeavor": 193, "readabl": 193, "manipul": 193, "get_available_cores_and_nod": 193, "theoret": 193, "dozen": 193, "split": 193, "theori": 193, "biogeochemistri": 193, "bash": [194, 195, 212], "ksh": 194, "mac": [194, 197], "csh": 194, "tcsh": 194, "temporarili": 194, "switch": [194, 198], "bin": [194, 204, 212], "obtain": [194, 200], "recogn": [194, 198, 212], "mambaforg": [194, 203, 212], "permiss": 194, "miniconda3": 194, "unifi": [194, 204], "anyon": 194, "caus": [194, 200, 204, 206], "person": [194, 195], "base_path_to_install_or_update_conda": 194, "with_albani": 194, "with_netlib_lapack": 194, "with_petsc": 194, "flavor": 194, "login": [194, 200, 204], "troubl": 194, "recognit": 194, "trilino": 194, "downsid": 194, "unneed": 194, "laptop": [194, 198], "workstat": 194, "deploy": 194, "shallow": 194, "hpc": [194, 200, 203], "touch": 194, "update_spack": 194, "reinstal": 194, "scorpio": [194, 203, 212], "esmf": [194, 212], "caution": 194, "deploi": [194, 199, 200, 201, 202, 203, 204], "load_": 194, "encod": 194, "load_dev_polaris_": 194, "env_nam": 194, "dev_polaris_": [194, 195], "safest": 194, "rerun": 194, "load_dev_polari": 194, "echo": 194, "rememb": 194, "recreat": [194, 195], "incorrect": 194, "unus": 194, "session": 194, "pip": 194, "substanti": 194, "risk": 194, "rare": 194, "correct": 194, "wih": 194, "env_onli": 194, "mpas_make_target": [194, 212], "scientif": [194, 212], "_albani": 194, "column": [194, 212], "instruct": 194, "proce": 194, "workdir": [194, 212], "es3m": 194, "compli": 194, "convent": 194, "memor": 194, "guidelin": 194, "stai": 194, "complianc": 194, "checker": 194, "pre": 194, "isort": 194, "mypi": 194, "77": 194, "e302": 194, "blank": 194, "resolv": 194, "simpler": 194, "mkdir": 194, "mark": 194, "fetch": 194, "new_branch_nam": 194, "put": 194, "elsewher": 194, "disk": [194, 198, 200, 204], "respons": 194, "simplest": 194, "your_new_branch": 194, "checkout": 194, "suggest": 195, "geo": 195, "cartopi": 195, "14": 195, "np110py27_4": 195, "calledprocesserror": 195, "deploy_tmp": 195, "spec": [195, 204], "vpn": 195, "occur": 195, "site": 195, "shell": [195, 197], "honor": 195, "wide": 195, "coupl": [195, 197], "profil": 195, "spawn": 195, "usernam": [195, 200, 204], "proxy_en": 195, "export": 195, "all_proxi": 195, "proxyout": 195, "8080": 195, "no_proxi": 195, "localhost": [195, 198, 203, 204, 212], "127": 195, "proxy_dis": 195, "unset": 195, "anytim": 195, "fatal": 195, "mpi_init": 195, "stack": 195, "mpir_init_thread": 195, "159": 195, "mpid_init": 195, "164": 195, "mpidi_ch3_init": 195, "95": 195, "mpid_nem_init": 195, "314": 195, "mpid_nem_tcp_init": 195, "173": 195, "mpid_nem_tcp_get_business_card": 195, "395": 195, "getsockinterfaceaddr": 195, "369": 195, "pn2034311": 195, "errno": 195, "host": [195, 198, 203, 212], "mpirun": [195, 198, 199, 200, 201, 202, 203, 204, 212], "srun": [195, 198, 199, 200, 201, 202, 203, 204, 212], "parallel_execut": [195, 198, 199, 200, 201, 202, 203, 204, 212], "unexpect": 196, "plu": 196, "autom": 197, "exascal": 197, "earth": 197, "kept": 197, "sens": 197, "boundari": [197, 209, 213], "expert": 197, "team": 197, "launch": 197, "uncoupl": 197, "evolv": [197, 206], "quick": [197, 207, 214], "queue": 197, "beginn": 197, "worktre": 197, "advanc": 197, "mpas_to_yaml": 197, "troubleshoot": 197, "proxi": 197, "lanl": [197, 198, 200], "gethostbynam": 197, "extens": 198, "single_nod": [198, 199, 200, 201, 202, 203, 204, 212], "multinod": [198, 212], "cores_per_nod": [198, 199, 200, 201, 202, 203, 204, 212], "hopefulli": 198, "explanatori": 198, "my_machin": 198, "fit": 198, "extend": 198, "gitconfig": 198, "enter": 198, "author": 198, "asai": 198, "davi": 198, "email": 198, "pull_request": 198, "28": 198, "address": 198, "metadata": 198, "customize_config_pars": 198, "server_base_url": 198, "inej": 198, "check_siz": 198, "ssl": 198, "certif": 198, "core_path": 198, "partition_execut": 198, "dask": 198, "netcdf4": 198, "netcdf4_class": 198, "netcdf3_64bit": 198, "netcdf3_class": 198, "engin": 198, "scipi": 198, "mesh_databas": 198, "ocean_database_root": 198, "landice_database_root": 198, "mesh_cor": 198, "18": [198, 200], "mesh_min_cor": 198, "usag": [198, 200, 204], "mesh_max_memori": 198, "1000": [198, 206, 209], "mesh_max_disk": 198, "init_cor": 198, "init_min_cor": 198, "init_max_memori": 198, "init_max_disk": 198, "init_thread": 198, "forward_cor": 198, "forward_min_cor": 198, "forward_thread": 198, "forward_max_memori": 198, "forward_max_disk": 198, "add_metadata": 198, "ec": 198, "wc": 198, "mesh_descript": 198, "autodetect": 198, "bathy_descript": 198, "gebco": 198, "2022": 198, "bedmachin": 198, "antarctica": 198, "init_descript": 198, "e3sm_vers": 198, "increment": 198, "mesh_revis": 198, "finest": [198, 210], "min_r": 198, "coarsest": 198, "max_r": 198, "max_depth": 198, "creation_d": 198, "peopl": 198, "contact": 198, "temperaturemax": 198, "statist": 198, "temperature_max": 198, "33": [198, 212], "diagnost": [198, 199, 200, 202, 203, 204, 212], "enable_ocean_initial_condit": 198, "enable_ocean_graph_partit": 198, "enable_seaice_initial_condit": 198, "scrip": 198, "enable_scrip": 198, "transect": 198, "onlin": 198, "member": 198, "offlin": 198, "enable_diagnostics_fil": 198, "coarser": [198, 210], "finer": 198, "comparisonlatresolut": 198, "comparisonlonresolut": 198, "antarct": 198, "polar": [198, 199, 201, 206], "stereograph": 198, "comparisonantarcticstereowidth": 198, "6000": [198, 206], "comparisonantarcticstereoresolut": 198, "arctic": 198, "comparisonarcticstereowidth": 198, "comparisonarcticstereoresolut": 198, "grid_typ": [198, 206, 209, 210], "tanh_dz": 198, "3000": 198, "min_layer_thick": [198, 206], "max_layer_thick": [198, 206], "retain": 198, "ecosystem": 199, "gain": 199, "confluenc": 199, "public_html": [199, 201, 203], "polaris_env": [199, 200, 201, 202, 203, 204], "soft": [199, 201, 203, 212], "mpi_intel": [199, 201, 202, 203], "mpi_gnu": [199, 200, 201, 202, 203, 204], "hdf5": [199, 200, 201, 202, 203, 204], "fortran": [199, 200, 201, 202, 203, 204], "pnetcdf": [199, 200, 201, 202, 203, 204], "use_e3sm_hdf5_netcdf": [199, 200, 201, 202, 203, 204], "cobalt": [199, 200, 201, 202, 203, 204], "account": [199, 200, 202, 203, 204, 212], "condo": [199, 212], "acm": [199, 212], "medium": 199, "qualiti": [199, 200, 202, 203, 204, 212], "servic": [199, 200, 202, 203, 204, 212], "qo": [199, 200, 202, 203, 204, 212], "acme_high": 199, "load_latest_polaris_intel_impi": [199, 202], "load_latest_polaris_gnu_openmpi": [199, 201, 212], "dst": 200, "calendar": 200, "network": 200, "introduct": 200, "platform": 200, "wtrw": 200, "ch": 200, "lustr": 200, "scratch4": 200, "scratch5": 200, "sacctmgr": 200, "assoc": 200, "cluster": 200, "45": 200, "my": 200, "sshare": 200, "grep": [200, 212], "sreport": 200, "accountutilizationbyus": 200, "2019": 200, "02": 200, "prioriti": 200, "yellow": 200, "chkhome": 200, "petabyt": 200, "df": 200, "bp": 200, "archiv": [200, 204], "hpss": [200, 204], "front": 200, "tn": 200, "storag": 200, "project_nam": 200, "salloc": [200, 203, 204], "account_nam": 200, "gpu": [200, 204], "hyperthread": [200, 204], "hang": [200, 204], "threads_per_cor": [200, 204], "modules_befor": [200, 204], "modules_aft": [200, 204], "shared_clim": [200, 212], "load_latest_polaris_gnu_mpich": [200, 204], "high": [201, 203], "load_latest_polaris_intel_openmpi": 201, "compyf": 202, "app": [202, 212], "pmi2": 202, "conda_env": [202, 212], "sai": 203, "submit": 203, "workload": 203, "sbatch": [203, 212], "squeue": 203, "my_usernam": [203, 204], "scancel": 203, "jobid": 203, "cancel": 203, "emtpi": 203, "probabl": 203, "three": 203, "mpi_mpich": [203, 212], "mpi_openmpi": [203, 212], "nompi": [203, 212], "p1": 204, "nersc": 204, "iri": 204, "filesystem": 204, "myquota": 204, "prjquota": 204, "projectid": 204, "m1795": 204, "hsi": 204, "htar": 204, "zstash": 204, "cf": [204, 212], "cdir": [204, 212], "constraint": [204, 212], "premium": 204, "cray_compil": 204, "8844": 204, "monik": 204, "browser": 204, "port": 204, "realli": 204, "nice": 204, "grab": 204, "logon": 204, "kernel": 204, "connect": 204, "myenv": 204, "ipykernel": 204, "kernelspec": 204, "u1": 204, "Be": 204, "interpret": 204, "argv": 204, "env": 204, "ipykernel_launch": 204, "connection_fil": 204, "display_nam": 204, "languag": 204, "100": 206, "2500": 206, "coord_typ": [206, 209, 210], "partial_cell_typ": [206, 209, 210], "min_pc_fract": [206, 209, 210], "deepest": 206, "stewart": 206, "2017": 206, "z_2": 206, "z_1": 206, "mathrm": 206, "tanh": 206, "rightarrow": 206, "infti": 206, "z_k": 206, "z_0": 206, "z_": 206, "k": 206, "finder": 206, "n_z": 206, "h_": 206, "210": [206, 210], "scienc": 206, "hydrograph": 206, "climatologi": 206, "250": 206, "5500": 206, "renorm": 206, "51": 206, "221": 206, "63": 206, "floor": 206, "flat": 206, "collaps": 206, "adcroft": 206, "campin": 206, "2004": 206, "absenc": 206, "squash": 206, "proport": [206, 209, 210], "watercolumn": 206, "press": 206, "depress": 206, "batymetri": 206, "repres": [206, 210], "stair": 206, "still": [207, 212], "month": 207, "year": 207, "websit": 207, "release_6": 207, "ilicak": 209, "2012": 209, "zonal": 209, "northern": 209, "southern": 209, "throughout": 209, "35": [209, 210, 212], "psu": 209, "cooler": 209, "half": 209, "north": 209, "gradient": 209, "halv": 209, "sinusoid": 209, "perturb": [209, 210], "meridion": 209, "warmer": 209, "distinguish": 209, "aim": [209, 210], "btr_dt_per_km": 209, "logic": 209, "08": 209, "500km": 209, "40e3": 209, "water": 209, "corioli": 209, "2e": 209, "hard": 209, "decompos": 209, "goal": 209, "break": 209, "mk": 209, "celsiu": 209, "spuriou": 209, "dissip": 209, "pop": 209, "mom": 209, "mitgcm": 209, "williamson": 210, "1992": 210, "sec": 210, "3a": 210, "skamarock": 210, "gassmann": 210, "flow": 210, "bodi": 210, "rotat": 210, "transport": 210, "psi": 210, "psi_0": 210, "co": 210, "ge": 210, "radiu": 210, "equatori": 210, "u_0": 210, "300": 210, "central": 210, "rad": 210, "lat_cent": 210, "lon_cent": 210, "14159265": 210, "2123666": 210, "6667": 210, "hill": 210, "psi0": 210, "transit": 210, "equat": 210, "vel_pd": 210, "qu_conv_thresh": 210, "warn": 210, "qu_conv_max": 210, "icos_conv_thresh": 210, "icos_conv_max": 210, "480": 210, "150": 210, "nearest": 210, "multipli": 210, "roughli": 210, "alloc": 210, "load_latest_polari": 212, "minu": 212, "create_polaris_load_script": 212, "load_polaris_1": 212, "0_mpich": 212, "wiki": 212, "circular_shelf": 212, "sia_smoke_test": 212, "sia_decomposition_test": 212, "sia_restart_test": 212, "fo_smoke_test": 212, "fo_decomposition_test": 212, "fo_restart_test": 212, "decomp_test": [212, 214], "37": 212, "38": 212, "17": 212, "210131_test_new_branch": 212, "fall": 212, "my_config": 212, "smaller": 212, "previous_workdir": 212, "paper": 212, "recompil": 212, "live": 212, "safer": 212, "preserv": 212, "test_subdir": 212, "whatev": 212, "job_script": 212, "wall": 212, "clock": 212, "accord": 212, "j": 212, "exclus": 212, "job_nam": 212, "wall_tim": 212, "fo_integr": [212, 214], "full_integr": [212, 214], "sia_integr": [212, 214], "cosine_bell_cached_init": [212, 214], "ec30to60": [212, 214], "ecwisc30to60": [212, 214], "qu240_for_e3sm": [212, 214], "quwisc240_for_e3sm": [212, 214], "wc14": [212, 214], "suitenam": 212, "radial": 213, "analyt": 213, "form": 213, "identifi": 213, "analysis_test": 214, "5km": 214, "20km": 214, "with_frazil": 214, "prohibit": 214}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.list": [[54, 2, 1, "", "list_cases"], [55, 2, 1, "", "list_machines"], [56, 2, 1, "", "list_suites"]], "polaris.logging": [[57, 2, 1, "", "log_method_call"]], "polaris.mesh": [[58, 0, 1, "", "IcosahedralMeshStep"], [65, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [60, 1, 1, "", "get_cell_width"], [61, 1, 1, "", "get_subdivisions"], [62, 1, 1, "", "make_jigsaw_mesh"], [63, 1, 1, "", "run"], [64, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, 1, 1, "", "__init__"], [66, 1, 1, "", "build_cell_width_lat_lon"], [67, 1, 1, "", "make_jigsaw_mesh"], [68, 1, 1, "", "run"], [69, 1, 1, "", "setup"]], "polaris.mesh.spherical": [[70, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[70, 1, 1, "", "__init__"], [71, 1, 1, "", "run"], [72, 1, 1, "", "save_and_plot_cell_width"], [73, 1, 1, "", "setup"]], "polaris.model_step": [[74, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[75, 2, 1, "", "ingest"], [76, 2, 1, "", "parse_replacements"], [77, 2, 1, "", "replace"], [78, 2, 1, "", "write"]], "polaris.ocean": [[122, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[122, 1, 1, "", "__init__"]], "polaris.ocean.model": [[123, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[123, 1, 1, "", "__init__"], [124, 1, 1, "", "compute_cell_count"], [125, 1, 1, "", "constrain_resources"], [126, 1, 1, "", "map_yaml_to_namelist"], [127, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[128, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[129, 0, 1, "", "BaroclinicChannel"], [130, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[129, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[130, 1, 1, "", "__init__"], [131, 1, 1, "", "configure"], [132, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[133, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[133, 1, 1, "", "__init__"], [134, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[135, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[137, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "compute_cell_count"], [139, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[140, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "run"], [142, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[143, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[145, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[147, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[147, 1, 1, "", "__init__"], [148, 1, 1, "", "configure"], [149, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[150, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "run"], [152, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[153, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[155, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[157, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[157, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[158, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "configure"], [160, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[161, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "rmse"], [163, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[164, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "compute_cell_count"], [166, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[167, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[169, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[171, 2, 1, "", "generate_1d_grid"], [172, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[173, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[174, 2, 1, "", "alter_bottom_depth"], [175, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[176, 2, 1, "", "compute_min_max_level_cell"], [177, 2, 1, "", "compute_z_level_layer_thickness"], [178, 2, 1, "", "compute_z_level_resting_thickness"], [179, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[180, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[79, 2, 1, "", "check_parallel_system"], [80, 2, 1, "", "get_available_cores_and_nodes"], [81, 2, 1, "", "run_command"], [82, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[83, 2, 1, "", "write"]], "polaris.remap": [[84, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[84, 1, 1, "", "__init__"], [85, 1, 1, "", "dst_from_lon_lat"], [86, 1, 1, "", "dst_from_mpas"], [87, 1, 1, "", "dst_from_points"], [88, 1, 1, "", "dst_from_proj"], [89, 1, 1, "", "dst_global_lon_lat"], [90, 1, 1, "", "get_remapper"], [91, 1, 1, "", "run"], [92, 1, 1, "", "src_from_lon_lat"], [93, 1, 1, "", "src_from_mpas"], [94, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[95, 2, 1, "", "run_single_step"], [96, 2, 1, "", "run_tests"]], "polaris.setup": [[97, 2, 1, "", "setup_case"], [98, 2, 1, "", "setup_cases"]], "polaris.streams": [[99, 2, 1, "", "read"], [100, 2, 1, "", "update_defaults"], [101, 2, 1, "", "update_tree"], [102, 2, 1, "", "write"]], "polaris.suite": [[103, 2, 1, "", "setup_suite"]], "polaris.validate": [[104, 2, 1, "", "compare_timers"], [105, 2, 1, "", "compare_variables"]], "polaris.viz": [[106, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[107, 0, 1, "", "PolarisYaml"], [111, 2, 1, "", "main_mpas_to_yaml"], [112, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [113, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[107, 1, 1, "", "__init__"], [108, 1, 1, "", "read"], [109, 1, 1, "", "update"], [110, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 121, 194, 199, 200, 201, 202, 203, 204, 209, 210], "same": 1, "implement": 1, "test": [1, 120, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 186, 188, 190, 191, 192, 193, 198, 208, 211, 212, 213, 214], "valid": [1, 2, 15, 44, 104, 105, 132, 134, 136, 144, 149, 154, 160, 191, 212], "api": 2, "refer": [2, 120, 121], "compon": [2, 12, 17, 18, 49, 121, 181, 187, 193, 194, 207, 212], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 193, 194, 197, 212], "framework": [2, 8, 120, 121, 184, 193, 205], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 54, 55, 56], "setup": [2, 4, 6, 30, 40, 64, 69, 73, 97, 98, 127, 142, 152, 189], "suit": [2, 4, 6, 103, 190, 208, 212, 214], "run": [2, 6, 12, 37, 63, 68, 71, 91, 95, 96, 121, 141, 151, 156, 163, 168, 170, 189, 194, 212], "cach": [2, 4, 6, 48, 189], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 193], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 191], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 189, 210], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 121, 198, 199, 200, 201, 202, 203, 204, 209, 210], "io": [2, 9, 51, 52, 53], "log": [2, 10, 57], "mesh": [2, 11, 12, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 185], "model_step": [2, 74], "namelist": [2, 12, 75, 76, 77, 78, 121], "parallel": [2, 79, 80, 81, 82], "proven": [2, 13, 83], "remap": [2, 14, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "stream": [2, 12, 99, 100, 101, 102, 121], "viz": [2, 106, 155, 156, 169, 170, 185], "yaml": [2, 12, 107, 108, 109, 110, 111, 112, 113, 121], "build": [3, 194, 212], "serial": [4, 6, 95, 96], "docstr": 5, "modul": [6, 193, 194], "clean": 6, "file": [7, 12, 121, 189, 198], "comment": 7, "symlink": [9, 53, 189], "download": [9, 51, 189], "spheric": [11, 70, 71, 72, 73], "planar": 11, "uniform": [11, 206], "gener": 11, "model": [12, 121, 123, 124, 125, 126, 127, 182, 212], "an": [12, 121], "e3sm": [12, 121, 194, 212], "ad": [12, 189], "updat": [12, 109, 194], "runtim": 12, "input": [12, 189], "partit": [12, 26], "pio": 12, "make": 12, "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": 16, "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 139, 146, 166], "map_yaml_to_namelist": [25, 126], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 189], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 125, 189], "set_resourc": 39, "add_step": 42, "configur": [43, 131, 148, 159, 191, 195], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "list_cas": 54, "list_machin": 55, "list_suit": 56, "log_method_cal": 57, "icosahedralmeshstep": [58, 59, 60, 61, 62, 63, 64], "build_subdivisions_cell_width_lat_lon": 59, "get_cell_width": 60, "get_subdivis": 61, "make_jigsaw_mesh": [62, 67], "quasiuniformsphericalmeshstep": [65, 66, 67, 68, 69], "build_cell_width_lat_lon": 66, "sphericalbasestep": [70, 71, 72, 73], "save_and_plot_cell_width": 72, "make_graph_fil": 74, "ingest": 75, "parse_replac": 76, "replac": 77, "write": [78, 83, 102, 110], "check_parallel_system": 79, "get_available_cores_and_nod": 80, "run_command": 81, "set_cores_per_nod": 82, "mappingfilestep": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "dst_from_lon_lat": 85, "dst_from_mpa": 86, "dst_from_point": 87, "dst_from_proj": 88, "dst_global_lon_lat": 89, "get_remapp": 90, "src_from_lon_lat": 92, "src_from_mpa": 93, "src_from_proj": 94, "run_single_step": 95, "run_test": 96, "setup_cas": [97, 98], "read": [99, 108], "update_default": 100, "update_tre": 101, "setup_suit": 103, "compare_tim": 104, "compare_vari": 105, "plot_horiz_field": 106, "polarisyaml": [107, 108, 109, 110], "main_mpas_to_yaml": 111, "mpas_namelist_and_streams_to_yaml": 112, "yaml_to_mpas_stream": 113, "anvil": [114, 199], "intel": [114, 116, 117, 199, 201, 202], "gnu": [114, 115, 116, 117, 119, 199, 200, 201, 204], "chicoma": [115, 200], "cpu": [115, 119, 200, 204], "chrysali": [116, 201], "compymcnodefac": [117, 202], "machin": [118, 194, 203, 212], "support": [118, 182, 194, 203, 212], "other": [118, 189, 203, 212], "perlmutt": [119, 204], "pm": 119, "ocean": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 207], "group": [120, 186, 192, 193, 211], "baroclinic_channel": [120, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 184, 209], "global_converg": [120, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 185, 210], "cosine_bel": [120, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 185, 208, 210], "oceanmodelstep": [120, 123, 124, 125, 126, 127], "potenti": [120, 121], "energi": [120, 121], "rpe": [120, 121, 128], "vertic": [120, 121, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 206], "coordin": [120, 121, 206], "v": 121, "map": 121, "from": [121, 189, 194, 203], "omega": 121, "mpa": [121, 183], "set": [121, 194, 212], "mpi": [121, 203], "resourc": 121, "rest": 121, "compute_cell_count": [124, 138, 165], "compute_rp": 128, "baroclinicchannel": 129, "baroclinicchanneltestcas": [130, 131, 132], "decomp_test": [133, 134, 184, 209], "decomptest": [133, 134], "default": [135, 136, 184, 209], "forward": [137, 138, 139, 164, 165, 166, 184, 185], "initial_st": [140, 141, 142, 184], "initialst": [140, 141, 142], "restart_test": [143, 144, 145, 146, 184, 209], "restarttest": [143, 144], "restart_step": [145, 146], "restartstep": [145, 146], "rpe_test": [147, 148, 149, 150, 151, 152, 184, 209], "rpetest": [147, 148, 149], "analysi": [150, 151, 152, 161, 162, 163, 185], "threads_test": [153, 154, 184], "threadstest": [153, 154], "globalconverg": 157, "cosinebel": [158, 159, 160], "rmse": 162, "init": [167, 168, 185], "vizmap": [169, 170], "grid_1d": [171, 172], "generate_1d_grid": 171, "write_1d_grid": 172, "init_vertical_coord": 173, "partial_cel": [174, 175], "alter_bottom_depth": 174, "alter_ssh": 175, "zlevel": [176, 177, 178, 179], "compute_min_max_level_cel": 176, "compute_z_level_layer_thick": 177, "compute_z_level_resting_thick": 178, "init_z_level_vertical_coord": 179, "zstar": 180, "init_z_star_vertical_coord": 180, "initi": 183, "condit": 183, "boundari": 183, "forc": 183, "baroclinic_channel_test_cas": 184, "type": [185, 206], "organ": 188, "directori": 188, "structur": 188, "attribut": [189, 191], "constructor": [189, 191], "output": 189, "copi": 189, "depend": 189, "pull": 190, "request": 190, "pr": 190, "nightli": 190, "case": [191, 193, 198, 212, 213], "overview": 193, "code": [193, 194], "style": [193, 194], "packag": 193, "share": 193, "within": 193, "quick": [194, 212], "start": [194, 212], "develop": [194, 197], "unix": 194, "shell": 194, "up": [194, 212], "repositori": 194, "beginn": 194, "conda": [194, 195, 203, 212], "environ": [194, 195, 212], "spack": [194, 212], "compil": 194, "system": 194, "albani": 194, "petsc": 194, "netlib": 194, "lapack": 194, "unknown": 194, "what": 194, "script": [194, 212], "doe": 194, "flag": 194, "activ": 194, "troubleshoot": [194, 195], "creat": 194, "onli": 194, "repo": 194, "worktre": 194, "advanc": 194, "user": [194, 197, 198, 212], "solver": 195, "error": 195, "when": 195, "proxi": 195, "lanl": 195, "mac": 195, "gethostbynam": 195, "fail": 195, "glossari": [196, 197], "": 197, "guid": 197, "compass": 197, "A": 198, "slurm": 203, "job": [203, 212], "queue": 203, "mpich": 203, "openmpi": 203, "No": 203, "forg": 203, "jupyt": 204, "notebook": 204, "remot": 204, "data": 204, "1d": 206, "grid": 206, "tanh_dz": 206, "60layerphc": 206, "100layere3smv1": 206, "3d": 206, "z": 206, "star": 206, "level": 206, "cosine_bell_cached_init": 208, "thread_test": 209, "resolut": 210, "time": 210, "core": 210, "i": 212, "yet": 212, "load": 212, "standalon": 212}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [187, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [185, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [185, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [205, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [121, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [121, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.list.list_cases": [[54, "polaris-list-list-cases"]], "polaris.list.list_machines": [[55, "polaris-list-list-machines"]], "polaris.list.list_suites": [[56, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[57, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[58, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[59, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[60, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[61, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[62, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[63, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[64, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.spherical.SphericalBaseStep": [[70, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[71, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[72, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[73, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[74, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[75, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[76, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[77, "polaris-namelist-replace"]], "polaris.namelist.write": [[78, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[79, "polaris-parallel-check-parallel-system"]], "polaris.parallel.get_available_cores_and_nodes": [[80, "polaris-parallel-get-available-cores-and-nodes"]], "polaris.parallel.run_command": [[81, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[82, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[83, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[84, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[85, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[86, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[87, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[88, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[89, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[90, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.run": [[91, "polaris-remap-mappingfilestep-run"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[92, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[93, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[94, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[95, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[96, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[97, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[98, "polaris-setup-setup-cases"]], "polaris.streams.read": [[99, "polaris-streams-read"]], "polaris.streams.update_defaults": [[100, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[101, "polaris-streams-update-tree"]], "polaris.streams.write": [[102, "polaris-streams-write"]], "polaris.suite.setup_suite": [[103, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[104, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[105, "polaris-validate-compare-variables"]], "polaris.viz.plot_horiz_field": [[106, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[107, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[108, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[109, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[110, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[111, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[112, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[113, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[114, "anvil"], [199, "anvil"]], "intel": [[114, "intel"], [116, "intel"], [117, "intel"]], "gnu": [[114, "gnu"], [116, "gnu"], [117, "gnu"]], "Chicoma": [[115, "chicoma"], [200, "chicoma"]], "chicoma-cpu, gnu": [[115, "chicoma-cpu-gnu"]], "Chrysalis": [[116, "chrysalis"], [201, "chrysalis"]], "CompyMcNodeFace": [[117, "compymcnodeface"], [202, "compymcnodeface"]], "Machines": [[118, "machines"], [203, "machines"]], "Supported Machines": [[118, "supported-machines"], [203, "supported-machines"]], "Other Machines": [[118, "other-machines"], [203, "other-machines"]], "Perlmutter": [[119, "perlmutter"], [204, "perlmutter"]], "pm-cpu, gnu": [[119, "pm-cpu-gnu"]], "ocean": [[120, "ocean"]], "Test Groups": [[120, "test-groups"], [192, "test-groups"]], "baroclinic_channel": [[120, "baroclinic-channel"], [184, "baroclinic-channel"], [209, "baroclinic-channel"]], "global_convergence": [[120, "global-convergence"], [185, "global-convergence"], [210, "global-convergence"]], "cosine_bell": [[120, "cosine-bell"], [185, "cosine-bell"], [210, "cosine-bell"]], "Ocean Framework": [[120, "ocean-framework"]], "OceanModelStep": [[120, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[120, "reference-potential-energy-rpe"]], "Vertical coordinates": [[120, "vertical-coordinates"]], "Ocean framework": [[121, "ocean-framework"]], "YAML files vs. namelists and streams": [[121, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[121, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[121, "setting-mpi-resources"]], "Model config options and streams": [[121, "model-config-options-and-streams"]], "Vertical coordinate": [[121, "vertical-coordinate"], [206, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[121, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[122, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[123, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[124, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[125, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[126, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[127, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[128, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[129, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[130, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure": [[131, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-configure"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[132, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[133, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[134, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[135, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[136, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[137, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[138, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[139, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[140, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[141, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[142, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[143, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[144, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[145, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[146, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[147, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[148, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[149, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[150, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[151, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[153, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[154, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[155, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[156, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[157, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[158, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[159, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[160, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[161, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[162, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[171, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[172, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[173, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[174, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[175, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[176, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[177, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[178, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[179, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[180, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[181, "ocean-component"], [207, "ocean-component"]], "Models": [[182, "models"]], "Supported Models": [[182, "supported-models"]], "MPAS-Ocean": [[183, "mpas-ocean"]], "Initial conditions": [[183, "initial-conditions"]], "Boundary conditions": [[183, "boundary-conditions"]], "Forcing": [[183, "forcing"]], "framework": [[184, "framework"]], "baroclinic_channel_test_case": [[184, "baroclinic-channel-test-case"]], "initial_state": [[184, "initial-state"]], "forward": [[184, "forward"], [185, "forward"]], "default": [[184, "default"], [209, "default"]], "decomp_test": [[184, "decomp-test"], [209, "decomp-test"]], "restart_test": [[184, "restart-test"], [209, "restart-test"]], "threads_test": [[184, "threads-test"]], "rpe_test": [[184, "rpe-test"], [209, "rpe-test"]], "mesh types": [[185, "mesh-types"]], "init": [[185, "init"]], "analysis": [[185, "analysis"]], "Test groups": [[186, "test-groups"], [211, "test-groups"]], "Organization of Tests": [[188, "organization-of-tests"]], "Directory structure": [[188, "directory-structure"]], "Steps": [[189, "steps"]], "Step attributes": [[189, "step-attributes"]], "constructor": [[189, "constructor"], [191, "constructor"]], "constrain_resources()": [[189, "constrain-resources"]], "setup()": [[189, "setup"]], "runtime_setup()": [[189, "runtime-setup"]], "run()": [[189, "run"]], "inputs and outputs": [[189, "inputs-and-outputs"]], "Input files": [[189, "input-files"]], "Symlinks to input files": [[189, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[189, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[189, "downloading-and-symlinking-input-files"]], "Copying input files": [[189, "copying-input-files"]], "Output files": [[189, "output-files"]], "Cached output files": [[189, "cached-output-files"]], "Adding other steps as dependencies": [[189, "adding-other-steps-as-dependencies"]], "Test Suites": [[190, "test-suites"], [212, "test-suites"], [214, "test-suites"]], "Pull-Request (PR) suite": [[190, "pull-request-pr-suite"]], "Nightly suite": [[190, "nightly-suite"]], "Test cases": [[191, "test-cases"]], "TestCase attributes": [[191, "testcase-attributes"]], "configure()": [[191, "configure"]], "validate()": [[191, "validate"]], "Overview": [[193, "overview"]], "Code Style": [[193, "code-style"]], "Packages and Modules": [[193, "packages-and-modules"]], "Packages": [[193, "packages"]], "Modules": [[193, "modules"]], "Classes": [[193, "classes"]], "Code sharing": [[193, "code-sharing"]], "\u2026in the polaris framework": [[193, "in-the-polaris-framework"]], "\u2026within a component": [[193, "within-a-component"]], "\u2026within a test group": [[193, "within-a-test-group"]], "\u2026within a test case": [[193, "within-a-test-case"]], "Quick Start for Developers": [[194, "quick-start-for-developers"]], "Unix Shell": [[194, "unix-shell"]], "Set up a polaris repository: for beginners": [[194, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[194, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[194, "supported-machines"]], "Environments with Albany": [[194, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[194, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[194, "unknown-machines"]], "What the script does": [[194, "what-the-script-does"]], "Optional flags": [[194, "optional-flags"]], "Activating the environment": [[194, "activating-the-environment"]], "Troubleshooting": [[194, "troubleshooting"], [195, "troubleshooting"]], "Creating/updating only the polaris environment": [[194, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[194, "building-e3sm-components"]], "Running polaris from the repo": [[194, "running-polaris-from-the-repo"]], "Code style for polaris": [[194, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[194, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[195, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[195, "proxy-on-lanl-macs"]], "gethostbyname failed": [[195, "gethostbyname-failed"]], "Glossary": [[196, "glossary"], [197, null]], "Polaris": [[197, "polaris"]], "User's guide": [[197, null]], "Developer's guide": [[197, null]], "Compass": [[197, "compass"]], "Config Files": [[198, "config-files"]], "A \u201cuser\u201d config file": [[198, "a-user-config-file"]], "Test-case config files": [[198, "test-case-config-files"]], "config options": [[199, "config-options"], [200, "config-options"], [201, "config-options"], [202, "config-options"], [203, "config-options"], [204, "config-options"], [209, "config-options"], [210, "config-options"]], "Intel on Anvil": [[199, "intel-on-anvil"]], "Gnu on Anvil": [[199, "gnu-on-anvil"]], "Chicoma-CPU": [[200, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[200, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[201, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[201, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[202, "intel-on-compymcnodeface"]], "Slurm job queueing": [[203, "slurm-job-queueing"]], "MPICH": [[203, "mpich"]], "OpenMPI": [[203, "openmpi"]], "No MPI from conda-forge": [[203, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[204, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[204, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[204, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[206, "d-grid-type"]], "uniform": [[206, "uniform"]], "tanh_dz": [[206, "tanh-dz"]], "60layerPHC": [[206, "layerphc"]], "100layerE3SMv1": [[206, "layere3smv1"]], "3D vertical coordinates": [[206, "d-vertical-coordinates"]], "z-star": [[206, "z-star"]], "z-level": [[206, "z-level"]], "Test suites": [[208, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[208, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "thread_test": [[209, "thread-test"]], "resolutions": [[210, "resolutions"]], "time step": [[210, "time-step"]], "cores": [[210, "cores"]], "Quick Start for Users": [[212, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[212, null]], "Loading polaris conda and spack environments": [[212, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[212, "e3sm-supported-machines"]], "Other machines": [[212, "other-machines"]], "Building supported E3SM components as standalone models": [[212, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[212, "setting-up-test-cases"]], "Running a test case": [[212, "running-a-test-case"]], "Running with a job script": [[212, "running-with-a-job-script"]], "Test Cases": [[213, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[54, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[55, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[56, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[57, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[58, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[70, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[70, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[74, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[75, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[76, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[77, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[78, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[79, "polaris.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module polaris.parallel)": [[80, "polaris.parallel.get_available_cores_and_nodes"]], "run_command() (in module polaris.parallel)": [[81, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[82, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[83, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[84, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[84, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[85, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.get_remapper"]], "run() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.run"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[95, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[96, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[97, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[98, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[99, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[100, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[101, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[102, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[103, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[104, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[105, "polaris.validate.compare_variables"]], "plot_horiz_field() (in module polaris.viz)": [[106, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[107, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[107, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[108, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[109, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[110, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[111, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[112, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[113, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[122, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[122, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[123, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[123, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[124, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[125, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[126, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[128, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[129, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[129, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[130, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[130, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[133, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[133, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[134, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[135, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[135, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[136, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[137, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[137, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[138, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[140, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[140, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[141, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[142, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[143, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[143, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[144, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[147, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[147, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[148, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[149, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[153, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[153, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[154, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[155, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[155, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[156, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[157, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[157, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[158, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[158, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[159, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[160, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[171, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[172, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[173, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[174, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[175, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[176, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[177, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[178, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[179, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[180, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})