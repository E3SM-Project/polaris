Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.io.update_permissions", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/frontier", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/ice_shelf_2d", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/internal_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/frontier", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/ice_shelf_2d", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/internal_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.io.update_permissions.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/frontier.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/ice_shelf_2d.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/internal_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/frontier.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/ice_shelf.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/ice_shelf_2d.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/internal_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.io.update_permissions", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.ice_shelf.IceShelfTask", "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "polaris.ocean.ice_shelf.SshAdjustment", "polaris.ocean.ice_shelf.SshAdjustment.run", "polaris.ocean.ice_shelf.SshForward", "polaris.ocean.ice_shelf.SshForward.compute_cell_count", "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "polaris.ocean.tasks.ice_shelf_2d.default.Default", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.ice_shelf_2d.init.Init", "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "polaris.ocean.tasks.internal_wave.default.Default", "polaris.ocean.tasks.internal_wave.forward.Forward", "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.internal_wave.init.Init", "polaris.ocean.tasks.internal_wave.init.Init.run", "polaris.ocean.tasks.internal_wave.rpe.Rpe", "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "polaris.ocean.tasks.internal_wave.viz.Viz", "polaris.ocean.tasks.internal_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "polaris.ocean.vertical.update_layer_thickness", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "ice_shelf_2d", "Tasks", "inertial_gravity_wave", "internal_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "Ice shelf", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "ice shelf 2d", "Tasks", "inertial gravity wave", "internal wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 11, 19, 21, 38, 46, 49, 50, 53, 138, 141, 163, 172, 173, 180, 183, 188, 193, 206, 242, 248, 275, 313, 316, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 333, 335, 337, 339, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 380, 381, 382, 383, 384, 388, 390], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 68, 73, 75, 78, 81, 82, 92, 94, 96, 97, 103, 108, 109, 110, 111, 114, 115, 138, 141, 143, 149, 151, 153, 154, 156, 157, 158, 160, 162, 163, 164, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 200, 201, 202, 204, 205, 206, 209, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 256, 261, 263, 264, 265, 266, 269, 271, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 343, 344, 345, 347, 348, 352, 354, 355, 357, 364, 367, 389, 390], "templat": [0, 5, 6, 7, 28, 29, 30, 116, 127, 131, 138, 141, 151, 154, 157, 160, 162, 176, 182, 221, 245, 317, 318, 319, 326, 327, 355, 356, 357], "date": [1, 2, 5, 55, 313, 331, 337, 349, 357], "2023": [1, 17, 377, 379], "08": [1, 356, 370], "18": [1, 6, 357, 359], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 138, 356, 357, 363], "asai": [1, 357], "davi": [1, 357], "capabl": [1, 2, 6, 17, 138, 218, 321, 333, 336, 355, 356, 363, 384], "design": [1, 138, 314, 333, 335, 336, 355, 363, 370], "here": [1, 6, 9, 12, 14, 17, 18, 138, 141, 316, 321, 324, 328, 329, 332, 333, 335, 336, 337, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 372, 373, 374, 380, 381, 382, 383, 384, 388, 389], "abil": [1, 7, 371, 380], "across": [1, 6, 7, 9, 14, 19, 141, 316, 329, 333, 334, 335, 336, 337, 354, 356, 366, 370, 371, 372, 373, 380, 381], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 138, 141, 306, 307, 310, 329, 331, 333, 334, 335, 336, 337, 355, 356, 357, 363, 367, 372, 374, 375, 378, 383, 384, 388, 389, 390], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 63, 67, 69, 72, 73, 76, 77, 78, 82, 93, 94, 96, 97, 103, 108, 111, 121, 133, 134, 135, 136, 137, 138, 139, 141, 143, 149, 153, 156, 157, 158, 160, 162, 164, 167, 172, 173, 174, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 192, 193, 196, 200, 202, 205, 206, 209, 214, 216, 218, 219, 221, 223, 227, 228, 230, 238, 240, 242, 243, 245, 247, 248, 249, 251, 252, 253, 254, 256, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 281, 284, 285, 286, 288, 304, 306, 307, 310, 313, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 348, 349, 353, 354, 355, 356, 357, 359, 362, 363, 364, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389], "document": [1, 3, 9, 14, 333, 336, 355, 357, 378, 384], "refer": [1, 7, 14, 38, 170, 183, 248, 291, 294, 297, 300, 302, 333, 336, 337, 354, 355, 356, 367, 370, 374, 378, 384], "ani": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 34, 47, 108, 114, 115, 179, 187, 329, 330, 331, 333, 334, 335, 336, 337, 339, 356, 357, 363, 370, 372, 382, 383, 384, 387, 388], "which": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 86, 97, 99, 106, 114, 115, 116, 120, 124, 127, 138, 141, 143, 144, 145, 146, 147, 148, 150, 157, 158, 160, 164, 167, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 197, 210, 211, 218, 219, 222, 224, 226, 231, 233, 234, 235, 242, 243, 246, 248, 250, 257, 259, 260, 261, 269, 275, 279, 305, 306, 307, 309, 310, 313, 315, 317, 319, 326, 327, 329, 330, 332, 333, 335, 337, 342, 343, 345, 347, 355, 356, 357, 359, 363, 367, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 64, 92, 93, 94, 138, 141, 160, 164, 174, 219, 243, 269, 316, 317, 318, 319, 320, 324, 326, 327, 333, 335, 336, 337, 356, 358, 359, 360, 361, 362, 364, 370, 375, 384, 389], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 133, 135, 136, 138, 141, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 349, 352, 353, 354, 356, 357, 363, 368, 369, 370, 375, 385, 389, 390], "main": [1, 3, 6, 7, 9, 14, 43, 138, 329, 330, 335, 336, 337, 356, 390], "motiv": 1, "behind": [1, 336], "comput": [1, 7, 13, 14, 15, 80, 138, 141, 144, 145, 148, 152, 155, 161, 164, 165, 170, 175, 199, 203, 220, 232, 236, 244, 258, 262, 297, 298, 299, 310, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 333, 337, 359, 360, 363, 364, 370, 371, 372, 373, 374, 377, 379, 380, 381, 384], "expens": [1, 333, 334], "could": [1, 14, 17, 19, 138, 333, 334, 335, 336, 337, 356, 372], "time": [1, 6, 7, 8, 14, 18, 19, 38, 49, 62, 87, 124, 138, 146, 147, 153, 160, 169, 170, 174, 183, 197, 200, 210, 211, 231, 233, 234, 243, 248, 257, 259, 260, 269, 304, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 333, 334, 335, 336, 337, 352, 353, 354, 357, 359, 362, 364, 365, 384, 389], "order": [1, 5, 8, 13, 14, 141, 306, 307, 317, 318, 319, 320, 326, 327, 330, 333, 334, 337, 356, 365, 371, 372, 373, 374, 379, 380, 381, 382, 384], "reflect": [1, 5, 337], "fact": [1, 14, 38, 138], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 136, 138, 141, 145, 146, 147, 168, 197, 210, 211, 231, 257, 279, 316, 321, 324, 328, 329, 332, 333, 335, 336, 337, 352, 355, 356, 357, 359, 361, 362, 363, 364, 367, 372, 374, 375, 384, 389], "present": [1, 50, 124, 337, 356, 365], "new": [1, 2, 5, 20, 26, 38, 49, 57, 60, 68, 75, 81, 97, 117, 118, 141, 151, 154, 160, 174, 181, 198, 212, 219, 232, 235, 243, 258, 261, 269, 282, 291, 294, 300, 302, 333, 335, 336, 337, 350, 353, 354, 355, 384], "success": [1, 2, 8, 48, 59, 313, 330, 349, 356, 357], "insofar": 1, "guarante": [1, 14, 138, 309, 313, 337, 349], "per": [1, 8, 14, 25, 35, 37, 38, 45, 93, 94, 123, 138, 141, 164, 305, 333, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 371, 372, 373, 374, 377, 379, 380, 381, 383, 388], "slurm": [1, 62, 95, 138, 333, 355, 357, 358, 359, 360, 361, 362, 364, 384], "job": [1, 6, 138, 337, 355, 356, 358, 359, 360, 361, 362, 364], "role": 1, "clear": [1, 2, 336, 356], "should": [1, 2, 5, 6, 7, 9, 11, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 63, 76, 114, 115, 122, 124, 133, 134, 135, 136, 137, 138, 139, 141, 143, 148, 167, 179, 187, 271, 273, 306, 307, 313, 329, 330, 331, 333, 334, 335, 337, 349, 350, 353, 354, 356, 357, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 388], "invoc": 1, "serial": [1, 44, 333, 335, 355, 356, 384], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 64, 68, 69, 72, 75, 76, 77, 81, 89, 92, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 111, 114, 115, 116, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 138, 141, 143, 151, 154, 156, 158, 160, 167, 169, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 193, 196, 198, 201, 204, 206, 209, 212, 213, 215, 219, 222, 224, 226, 230, 235, 237, 239, 242, 243, 246, 248, 250, 252, 256, 261, 263, 265, 269, 271, 273, 275, 278, 280, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 316, 321, 323, 324, 325, 328, 330, 333, 334, 335, 336, 337, 342, 343, 345, 347, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 387, 388], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 82, 110, 112, 117, 120, 138, 141, 204, 215, 287, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 371, 372, 373, 374, 377, 379, 380, 381, 383, 384, 385, 388], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 67, 68, 75, 81, 97, 126, 141, 142, 143, 151, 154, 156, 157, 158, 160, 164, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 193, 196, 198, 201, 204, 206, 209, 212, 213, 215, 218, 219, 222, 224, 226, 228, 230, 232, 235, 237, 239, 242, 243, 246, 248, 250, 252, 254, 256, 258, 261, 263, 265, 268, 269, 270, 271, 273, 275, 278, 280, 282, 283, 285, 287, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 333, 335, 340, 342, 343, 345, 346, 347, 349, 352, 356, 365], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 101, 107, 108, 143, 307, 323, 325, 356], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 40, 47, 49, 59, 110, 111, 122, 123, 138, 141, 179, 187, 193, 206, 218, 271, 273, 275, 305, 306, 307, 309, 316, 317, 318, 319, 320, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390], "relat": [1, 6, 7, 11, 13, 14, 17, 138, 141, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 333, 337, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385], "inform": [1, 5, 7, 8, 38, 97, 121, 132, 232, 258, 333, 335, 337, 357, 359, 368, 384, 385], "belong": [1, 10, 11, 12, 14, 17, 25, 35, 38, 45, 49, 68, 75, 81, 97, 112, 141, 143, 151, 154, 156, 158, 160, 164, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 193, 196, 198, 201, 204, 206, 209, 212, 213, 215, 218, 219, 222, 224, 226, 228, 230, 235, 237, 239, 242, 243, 246, 248, 250, 252, 254, 256, 261, 263, 265, 268, 269, 270, 271, 273, 275, 278, 280, 282, 283, 285, 287, 306, 307, 329, 330, 333, 335, 336, 342, 343, 345, 346, 347, 356, 389], "locat": [1, 5, 6, 9, 11, 14, 19, 38, 50, 114, 115, 120, 141, 313, 321, 333, 335, 337, 349, 354, 356, 357, 359, 363, 367, 370, 372, 375, 378, 384], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 124, 141, 146, 147, 197, 210, 211, 231, 257, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 310, 316, 321, 329, 331, 332, 333, 335, 356, 357, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 61, 63, 96, 112, 115, 120, 122, 124, 138, 141, 160, 291, 294, 297, 300, 302, 306, 307, 313, 321, 330, 332, 333, 335, 337, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 380, 382, 383, 384, 388, 389], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 93, 94, 96, 115, 121, 138, 141, 142, 145, 146, 157, 160, 164, 174, 197, 210, 219, 231, 243, 257, 269, 279, 291, 294, 300, 302, 313, 316, 324, 329, 330, 331, 333, 334, 335, 336, 337, 340, 349, 354, 355, 356, 357, 363, 365, 367, 368, 370, 371, 372, 373, 374, 375, 380, 381, 383, 384, 385, 388, 390], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 93, 94, 138, 141, 160, 164, 174, 219, 243, 269, 310, 313, 329, 331, 333, 335, 337, 356, 357, 363, 367, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 384], "There": [1, 5, 6, 13, 291, 294, 300, 302, 310, 328, 329, 331, 333, 336, 337, 353, 356, 357, 358, 359, 360, 361, 362, 364, 378, 384], "wai": [1, 5, 7, 13, 14, 38, 72, 77, 138, 141, 333, 335, 336, 337, 353, 355, 356, 363, 367, 374, 382], "list": [1, 2, 6, 7, 9, 11, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 61, 87, 93, 94, 111, 114, 115, 120, 121, 124, 141, 143, 151, 154, 170, 185, 189, 193, 196, 206, 209, 224, 230, 239, 250, 254, 256, 265, 269, 275, 278, 280, 285, 333, 334, 335, 336, 337, 343, 354, 355, 356, 357, 359, 363, 364, 371, 372, 373, 380, 381, 384, 389, 390], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 112, 120, 121, 138, 141, 306, 307, 309, 316, 323, 325, 329, 330, 331, 333, 334, 335, 337, 350, 354, 356, 357, 359, 363, 382, 383, 388], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 64, 70, 71, 80, 109, 115, 132, 138, 141, 143, 148, 189, 190, 193, 206, 218, 225, 275, 291, 292, 293, 294, 297, 298, 299, 300, 302, 305, 306, 307, 309, 310, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 343, 344, 352, 354, 356, 357, 363, 365, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 388, 389], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 121, 122, 138, 141, 291, 294, 300, 302, 305, 306, 307, 310, 313, 321, 323, 325, 328, 329, 330, 331, 333, 335, 336, 337, 356, 357, 363, 364, 365, 367, 372, 374, 377, 378, 379, 383, 384, 388, 390], "find": [1, 6, 7, 15, 59, 71, 95, 138, 306, 307, 308, 313, 335, 336, 337, 353, 356, 357, 384], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 124, 138, 141, 313, 315, 317, 318, 319, 320, 326, 327, 328, 330, 333, 335, 336, 349, 352, 355, 356, 357, 359, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 384, 387], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 103, 108, 109, 117, 138, 141, 321, 329, 330, 331, 333, 334, 335, 336, 337, 354, 356, 357, 358, 372, 384, 390], "would": [1, 2, 5, 9, 11, 14, 18, 19, 25, 35, 38, 45, 50, 93, 94, 97, 138, 141, 160, 164, 174, 219, 243, 269, 316, 331, 333, 335, 336, 337, 353, 355, 356, 363, 367, 384], "ident": [1, 2, 5, 18, 172, 180, 188, 316, 321, 324, 333, 334, 336, 342, 356, 370, 375], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 83, 141, 330, 333, 335, 336, 356, 357], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 89, 92, 98, 99, 100, 101, 105, 106, 107, 116, 123, 124, 126, 141, 143, 151, 154, 156, 157, 160, 170, 291, 294, 295, 296, 300, 301, 302, 303, 304, 306, 307, 310, 330, 331, 332, 333, 336, 337, 339, 349, 350, 354, 356, 357, 363, 368, 383, 384, 385, 388], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 70, 138, 141, 313, 321, 333, 337, 354, 356, 357, 367, 374, 382, 384], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 75, 111, 128, 138, 141, 169, 308, 313, 316, 321, 329, 332, 333, 335, 336, 337, 350, 354, 355, 356, 357, 363, 367, 370, 371, 372, 373, 374, 375, 380, 381, 384], "As": [1, 4, 5, 6, 9, 11, 13, 18, 70, 141, 329, 333, 334, 335, 336, 337, 356, 357, 367, 371, 372, 373, 374, 380, 381, 382, 389], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 138, 141, 153, 157, 162, 176, 182, 200, 221, 245, 316, 323, 324, 325, 328, 335, 336, 337, 354, 355, 356, 357, 371, 372, 373, 374, 380, 381, 384, 390], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 63, 64, 110, 111, 112, 113, 115, 138, 316, 332, 333, 335, 337, 354, 355, 356, 357, 358, 359, 360, 361, 364, 368, 370], "proce": [1, 337], "iter": [1, 157, 158, 313, 321, 357, 365, 375], "through": [1, 2, 115, 141, 226, 252, 336, 337, 350, 356, 378], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 60, 68, 70, 71, 99, 106, 116, 118, 122, 131, 138, 143, 148, 164, 201, 213, 283, 305, 306, 307, 308, 309, 311, 312, 316, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 353, 354, 355, 357, 359, 363, 365, 367, 374, 375, 377, 381, 384, 389, 390], "setup_complet": 1, "ha": [1, 5, 6, 9, 11, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 95, 103, 108, 124, 133, 135, 136, 138, 160, 163, 164, 174, 219, 243, 269, 296, 306, 307, 313, 317, 318, 319, 321, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 349, 350, 353, 354, 356, 357, 367, 370, 372, 375, 377, 378, 382, 384], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 103, 115, 120, 133, 135, 136, 138, 141, 143, 150, 163, 196, 209, 230, 239, 256, 265, 278, 280, 285, 296, 313, 330, 333, 335, 336, 337, 349, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 384], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 141, 163, 169, 171, 179, 187, 195, 208, 217, 218, 229, 241, 255, 267, 277, 291, 294, 300, 302, 329, 330, 335, 337, 341, 350, 355, 358, 359, 360, 361, 362, 364, 384], "initi": [1, 7, 8, 38, 124, 141, 146, 157, 160, 170, 172, 173, 177, 180, 183, 188, 197, 201, 210, 213, 218, 219, 222, 226, 231, 235, 237, 242, 246, 248, 257, 261, 263, 268, 270, 271, 273, 283, 296, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 346, 353, 354, 355, 357, 365, 367, 369, 389, 390], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 64, 66, 110, 111, 115, 120, 121, 124, 138, 141, 164, 218, 219, 271, 273, 304, 305, 315, 329, 333, 335, 350, 356, 357, 359, 361, 362, 364, 370, 378], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 69, 76, 138, 141, 179, 187, 203, 329, 330, 333, 335, 336, 354, 355, 356, 365, 367, 371, 372, 373, 374, 375, 380, 381, 390], "skip": [1, 5, 8, 121, 389], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 60, 61, 121, 122, 123, 124, 128, 133, 134, 135, 136, 137, 138, 139, 141, 164, 219, 270, 305, 307, 315, 329, 333, 337, 356, 357, 358, 359, 360, 362, 363, 364, 370, 384, 390], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 60, 64, 110, 121, 138, 141, 167, 299, 306, 307, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 337, 355, 356, 358, 359, 360, 361, 362, 364, 367, 370, 372, 374, 382, 384, 390], "complet": [1, 5, 8, 27, 28, 29, 108, 356, 384], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 60, 138, 141, 163, 269, 296, 333, 335, 336, 337, 356, 357, 363, 367, 371, 372, 373, 380, 381, 384], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 141, 151, 154, 158, 160, 174, 198, 212, 219, 235, 243, 261, 269, 282, 305, 309, 316, 321, 323, 324, 325, 333, 334, 335, 336, 337, 355, 356, 367], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 138, 164, 333, 336, 337, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384, 390], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 69, 70, 72, 85, 124, 133, 134, 135, 136, 137, 138, 139, 141, 164, 168, 172, 180, 188, 291, 294, 300, 302, 305, 306, 307, 308, 310, 313, 316, 321, 324, 329, 333, 335, 336, 337, 342, 349, 354, 355, 357, 363, 370, 371, 372, 373, 375, 380, 381, 384, 389], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 60, 61, 67, 84, 85, 88, 89, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 143, 146, 147, 148, 150, 151, 154, 157, 160, 162, 164, 168, 170, 176, 179, 182, 187, 197, 210, 211, 221, 231, 245, 257, 290, 305, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 337, 343, 349, 350, 352, 353, 354, 355, 359, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 378, 380, 381, 383, 384, 387, 388, 390], "mode": [1, 5, 14, 330, 337, 354, 355, 356, 384], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 138, 141, 172, 180, 188, 313, 316, 321, 333, 336, 337, 342, 349, 354, 356, 357, 363, 364, 370, 371, 372, 373, 375, 380, 381], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 89, 92, 96, 115, 116, 126, 127, 128, 141, 151, 154, 167, 333, 335, 336, 356, 372], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 37, 61, 138, 141, 164, 317, 318, 319, 320, 326, 327, 330, 331, 333, 335, 336, 337, 354, 356, 361, 363, 369, 384, 390], "constructor": [1, 9, 14, 141, 316, 323, 324, 325, 329, 356], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 93, 94, 104, 122, 316, 324, 330, 333, 335, 336, 337, 356, 383, 388, 389], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 60, 89, 116, 127, 128, 138, 141, 151, 154, 157, 160, 162, 167, 176, 182, 221, 245, 335, 336, 356, 357, 384], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 63, 66, 68, 75, 81, 96, 97, 112, 114, 120, 126, 137, 138, 139, 143, 151, 154, 156, 158, 160, 163, 164, 171, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 193, 195, 196, 198, 201, 204, 206, 208, 209, 212, 213, 215, 217, 218, 219, 222, 224, 226, 228, 229, 230, 235, 237, 239, 241, 242, 243, 246, 248, 250, 252, 254, 255, 256, 261, 263, 265, 267, 268, 269, 270, 271, 273, 275, 277, 278, 280, 282, 283, 285, 287, 329, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 345, 346, 347, 350, 354, 355, 356, 357, 363, 366, 369, 389, 390], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 68, 75, 81, 97, 141, 143, 151, 154, 156, 160, 164, 174, 196, 198, 201, 204, 209, 212, 213, 215, 219, 230, 235, 243, 256, 261, 269, 278, 280, 282, 283, 285, 287, 333, 335, 343, 356], "now": [1, 6, 138, 333, 337, 356, 357, 363], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 114, 115, 120, 121, 157, 158, 160, 313, 330, 333, 335, 336, 337, 343, 349, 354, 356, 370, 374, 375, 378, 384, 390], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 138, 141, 316, 333, 337, 353, 356, 367], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 138, 160, 174, 219, 243, 269, 316, 333, 334, 336, 337, 353, 356, 367, 370], "parent": [1, 33, 141, 317, 318, 319, 320, 323, 325, 326, 327, 329, 330, 333], "resid": [1, 5, 9, 40, 141, 143, 196, 209, 230, 256, 278, 280, 285, 331, 333, 335], "insid": [1, 12, 331, 333, 336, 371, 372, 373, 380, 381], "situat": [1, 17, 31, 167, 337, 356, 384], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 38, 39, 40, 121, 159, 219, 313, 316, 321, 324, 329, 331, 333, 335, 336, 337, 354, 356, 357, 370, 375, 384, 389, 390], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 141, 279, 313, 322, 330, 335, 356, 372, 381, 383, 388, 389], "with_viz": [1, 317, 318, 319, 320, 326, 327, 335, 371, 372, 373, 374, 380, 381], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 74, 79, 81, 112, 114, 115, 120, 124, 138, 141, 150, 157, 158, 160, 163, 166, 168, 198, 201, 204, 212, 213, 215, 282, 283, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 313, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 330, 332, 333, 335, 336, 337, 349, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 370, 371, 373, 374, 380, 381, 390], "mesh": [1, 5, 7, 10, 17, 25, 38, 85, 86, 97, 99, 106, 123, 124, 143, 144, 146, 147, 151, 152, 154, 155, 157, 158, 161, 164, 165, 166, 168, 170, 173, 175, 177, 193, 196, 197, 198, 199, 201, 204, 206, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 226, 230, 231, 232, 235, 236, 237, 239, 244, 246, 256, 257, 258, 261, 262, 263, 265, 268, 270, 271, 275, 278, 280, 282, 283, 285, 287, 291, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 333, 335, 336, 337, 345, 346, 354, 355, 357, 367, 369, 384, 389], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 141, 143, 151, 154, 172, 173, 180, 183, 188, 198, 204, 212, 215, 218, 219, 226, 235, 242, 248, 261, 282, 287, 313, 315, 330, 333, 335, 336, 337, 349, 357, 365, 370, 372, 375, 377, 379, 384], "forward": [1, 5, 7, 9, 14, 38, 141, 143, 151, 154, 157, 158, 160, 170, 173, 181, 183, 204, 215, 218, 248, 268, 270, 287, 313, 330, 333, 335, 336, 346, 349, 357, 365, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 388], "resolut": [1, 9, 13, 14, 17, 68, 71, 75, 76, 80, 98, 102, 105, 141, 143, 144, 148, 150, 151, 154, 156, 160, 163, 172, 173, 174, 177, 180, 181, 183, 185, 188, 193, 196, 198, 206, 209, 212, 218, 219, 222, 230, 235, 237, 239, 248, 254, 256, 261, 263, 265, 275, 278, 280, 282, 285, 306, 307, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 357, 365, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388, 390], "singl": [1, 5, 8, 9, 19, 38, 124, 138, 267, 268, 270, 271, 273, 328, 333, 335, 336, 341, 342, 343, 345, 346, 347, 349, 350, 354, 356, 363, 368, 371, 372, 373, 376, 377, 379, 380, 381, 385, 386], "analysi": [1, 6, 9, 19, 141, 316, 324, 335, 336, 354, 355, 357, 371, 372, 373, 377, 378, 379, 380, 381, 390], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 74, 79, 84, 116, 117, 118, 127, 128, 131, 132, 138, 141, 150, 162, 163, 171, 176, 182, 195, 208, 217, 221, 229, 241, 245, 255, 267, 277, 329, 330, 333, 335, 336, 337, 341, 354, 356, 357, 362, 364, 371, 372, 373, 380, 381], "remap": [1, 10, 19, 324, 355, 372, 374, 378, 383, 388], "visual": [1, 10, 13, 17, 218, 226, 239, 252, 265, 317, 318, 319, 320, 321, 323, 325, 326, 327, 329, 333, 335, 354, 355, 371, 372, 373, 374, 375, 377, 379, 380, 381, 383, 388], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 120, 138, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 335, 336, 337, 354, 355, 356, 357, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 389, 390], "spheric": [1, 5, 151, 304, 317, 318, 319, 320, 326, 327, 335, 371, 372, 373, 380, 381, 389], "qu": [1, 5, 11, 141, 335, 356, 357, 369, 371, 372, 373, 374, 380, 381, 389], "base_mesh": [1, 5, 13, 68, 75, 143, 163, 201, 204, 213, 215, 282, 283, 287, 333, 335, 356, 371, 372, 373, 380, 381], "60km": [1, 5, 335, 371, 372, 373, 380, 381], "90km": [1, 5], "120km": [1, 5, 335], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 11, 163, 335], "map": [1, 8, 17, 20, 31, 75, 76, 97, 122, 123, 124, 167, 335, 337, 357], "viz": [1, 5, 19, 141, 193, 206, 218, 275, 333, 335, 371, 373, 380, 381], "two": [1, 5, 6, 10, 18, 121, 141, 180, 190, 225, 306, 307, 316, 317, 321, 324, 328, 329, 330, 333, 334, 336, 337, 342, 344, 356, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 387], "first": [1, 6, 9, 14, 15, 87, 115, 138, 141, 306, 307, 316, 321, 323, 324, 325, 328, 333, 335, 336, 337, 353, 356, 358, 359, 360, 361, 362, 363, 364, 370, 372, 374, 375, 382, 384], "verbos": [1, 5, 6, 64, 66, 138, 333, 356, 389], "10": [1, 9, 13, 70, 138, 313, 316, 321, 323, 325, 329, 330, 356, 357, 363, 365, 367, 370, 371, 373, 374, 375, 377, 378, 379, 380, 382, 390], "name": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 60, 61, 62, 63, 64, 68, 75, 81, 85, 89, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 113, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 131, 138, 141, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 158, 160, 163, 164, 167, 170, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 197, 198, 201, 204, 210, 211, 212, 213, 215, 218, 219, 222, 231, 235, 242, 243, 246, 248, 250, 257, 261, 269, 275, 278, 279, 280, 282, 283, 285, 287, 290, 305, 329, 330, 333, 335, 336, 337, 343, 345, 347, 354, 356, 357, 364, 370, 384, 389], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 87, 141, 146, 147, 169, 174, 197, 210, 211, 231, 257, 269, 306, 307, 328, 333, 336, 365, 370, 371, 373, 375, 380, 382, 387], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 335, 336, 337, 371, 372, 373, 380, 381], "what": [1, 2, 6, 11, 13, 17, 138, 275, 335, 336, 356, 364, 383, 384, 388], "follow": [1, 4, 5, 7, 9, 11, 13, 14, 19, 67, 138, 143, 291, 294, 300, 302, 313, 315, 333, 334, 335, 337, 349, 350, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 387], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 64, 68, 75, 81, 97, 114, 141, 143, 151, 154, 156, 160, 164, 174, 196, 198, 201, 204, 209, 212, 213, 215, 219, 230, 235, 237, 239, 243, 256, 261, 263, 265, 269, 271, 273, 278, 280, 282, 283, 285, 287, 329, 331, 333, 335, 336, 356, 383, 384, 388, 390], "bold": [1, 335], "elsewher": [1, 337], "tree": [1, 7, 116, 118, 132, 306, 307, 308, 335, 385], "thu": [1, 2, 7, 14, 337, 356, 371, 372, 373, 380, 381], "similar": [1, 2, 5, 9, 12, 13, 14, 134, 137, 138, 139, 141, 329, 331, 336, 337, 356, 357, 367, 371, 373, 380, 381, 384], "had": [1, 138], "maintain": [1, 313, 371, 384], "local": [1, 5, 6, 8, 9, 11, 18, 40, 313, 331, 333, 337, 349, 353, 356, 357, 363, 364, 365, 367], "debug": [1, 8, 133, 134, 135, 136, 137, 138, 139, 356, 359, 360, 364, 371, 380], "easier": [1, 14, 333, 335, 336, 337, 357, 384, 389], "symbol": [1, 60, 333], "link": [1, 2, 7, 9, 11, 14, 17, 40, 46, 53, 60, 138, 329, 333, 335, 337, 356, 362, 363, 368, 384, 385], "were": [1, 48, 61, 138, 269, 311, 312, 333, 336, 354, 356, 357, 361, 367], "even": [1, 6, 12, 13, 14, 40, 57, 138, 333, 336, 337, 356, 357, 363, 384], "compass": [1, 5, 6, 252, 313, 321, 333, 335, 336, 337, 354, 356], "though": [1, 11, 38, 335, 336, 356], "global": [1, 13, 17, 101, 102, 107, 275, 307, 317, 318, 319, 320, 326, 327, 329, 333, 334, 336, 354, 355, 356, 357, 364, 371, 372, 373, 374, 380, 381, 383, 384, 388, 390], "dynamic_adjust": [1, 14, 357], "allow": [1, 2, 6, 8, 17, 18, 25, 35, 38, 45, 57, 121, 138, 141, 164, 306, 307, 333, 354, 356, 357, 363, 367, 371, 372, 373, 380, 381, 382, 390], "one": [1, 2, 5, 6, 7, 10, 11, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 60, 114, 115, 120, 138, 141, 159, 163, 164, 180, 269, 306, 307, 313, 316, 317, 319, 321, 323, 324, 325, 326, 327, 328, 329, 331, 333, 335, 336, 337, 342, 352, 353, 354, 355, 357, 363, 364, 367, 370, 371, 372, 373, 375, 379, 380, 381, 383, 384, 387, 388, 389, 390], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 85, 141, 150, 157, 179, 187, 310, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 356, 382], "port": [1, 356, 364], "instead": [1, 5, 6, 12, 14, 15, 25, 111, 133, 138, 333, 336, 337, 354, 356, 371, 372, 373, 380, 381, 384, 389], "seri": [1, 14, 141, 185, 191, 250, 318, 320, 323, 352, 356, 365, 369, 375], "indic": [1, 7, 8, 14, 17, 18, 19, 38, 39, 108, 115, 124, 138, 141, 297, 306, 307, 309, 331, 333, 353, 356, 357, 367, 375, 382], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 315, 333, 335, 336, 337, 356, 359, 361, 362, 364, 384], "ran": [1, 109], "ico": [1, 5, 141, 335, 356, 369, 371, 372, 373, 380, 381, 389], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 115, 120, 138, 164, 313, 330, 333, 337, 349, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384], "runtim": [1, 8, 14, 30, 44, 141, 153, 162, 176, 182, 200, 221, 245, 333, 356, 375], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 70, 98, 102, 105, 121, 123, 124, 133, 134, 135, 136, 137, 138, 139, 141, 291, 294, 299, 300, 302, 305, 306, 307, 315, 317, 318, 319, 321, 326, 327, 329, 333, 336, 337, 350, 353, 356, 357, 359, 363, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388], "01": [1, 14, 141, 350, 356, 375, 378, 382, 387], "00": [1, 14, 18, 141, 335, 350, 356, 362, 364, 384], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 384], "02": [1, 359], "59": 1, "icos_map_60km": 1, "20": [1, 183, 248, 316, 321, 324, 334, 356, 370, 378, 382], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 6, 9, 14, 57, 138, 316, 321, 324, 336, 337, 371, 372, 373, 380, 381, 382], "mechan": [1, 333], "prevent": [1, 333], "expect": [1, 2, 12, 17, 138, 141, 330, 333, 337, 356], "affect": [1, 6, 317, 319, 326, 327, 333, 337, 356, 374], "howev": [1, 13, 333, 334, 335, 337, 356], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 68, 121, 138, 141, 151, 154, 160, 173, 174, 179, 183, 187, 198, 212, 218, 219, 235, 243, 248, 261, 268, 269, 270, 282, 310, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 333, 334, 335, 346, 354, 355, 356, 357, 363, 370, 375, 389], "successfulli": [1, 48, 356], "after": [1, 5, 6, 7, 9, 11, 17, 18, 19, 38, 40, 41, 82, 103, 108, 138, 292, 293, 296, 313, 317, 319, 320, 326, 327, 330, 333, 335, 337, 349, 356, 357, 359, 362, 364, 372, 374, 384, 387], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 109, 115, 120, 124, 136, 138, 141, 143, 148, 150, 167, 196, 209, 230, 239, 256, 265, 278, 280, 285, 309, 313, 316, 323, 324, 325, 329, 331, 333, 334, 335, 336, 337, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 371, 372, 373, 374, 375, 380, 381, 384, 389, 390], "remov": [1, 5, 14, 24, 52, 111, 316, 321, 323, 324, 325, 335, 337, 356], "longer": [1, 180, 316, 321, 324, 334, 342, 356, 370, 371, 372, 373, 374, 375, 380, 381], "about": [1, 5, 6, 7, 8, 12, 14, 38, 97, 126, 141, 329, 333, 335, 336, 337, 356, 357, 359, 374, 381], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 50, 57, 76, 138, 141, 162, 176, 182, 221, 245, 313, 317, 318, 319, 320, 326, 327, 330, 333, 335, 336, 337, 349, 350, 353, 355, 356, 357, 358, 363, 364, 367, 370, 371, 372, 373, 380, 381, 384, 389], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 138, 141, 313, 315, 330, 333, 334, 335, 336, 350, 353, 357, 358, 359, 360, 361, 362, 363, 364, 368, 384], "enforc": [1, 315, 337], "framework": [1, 5, 7, 9, 12, 13, 14, 110, 313, 329, 330, 333, 335, 349, 354, 355, 356, 365, 368, 382, 383, 385, 388, 390], "propos": [1, 2], "close": [1, 6, 71, 138, 321, 355, 371, 372, 373, 380, 381], "root": [1, 40, 138, 313, 330, 333, 336, 337, 349, 354, 357, 358, 359, 360, 361, 362, 363, 364, 367, 384], "live": [1, 50, 335, 375, 384], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 69, 76, 77, 80, 83, 97, 103, 121, 141, 164, 180, 189, 224, 232, 258, 291, 294, 300, 302, 305, 306, 307, 310, 312, 317, 318, 319, 320, 326, 327, 330, 331, 333, 335, 336, 342, 343, 363, 365, 367, 370, 371, 374, 375, 377, 378, 379], "think": [1, 5, 356], "condit": [1, 7, 38, 141, 146, 157, 160, 173, 177, 197, 201, 210, 213, 218, 219, 222, 226, 231, 235, 237, 246, 257, 261, 263, 268, 270, 271, 273, 283, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 346, 352, 354, 355, 357, 365, 369, 389, 390], "shown": [1, 14, 19, 138, 331, 365, 382], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 61, 72, 75, 77, 98, 102, 103, 105, 114, 115, 120, 124, 133, 134, 135, 136, 137, 138, 139, 141, 218, 304, 306, 307, 310, 313, 316, 323, 324, 325, 329, 330, 331, 333, 334, 335, 336, 337, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 384, 389, 390], "simpli": [1, 14, 18, 57, 138, 173, 218, 330, 333, 335, 337, 356, 367, 384, 389], "prefer": [1, 2, 138, 333, 334, 356, 357], "convent": [1, 333, 337, 356], "futur": [1, 13, 44, 124, 333, 336, 354, 355, 356, 357, 374, 382, 384, 390], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 121, 138, 141, 164, 313, 328, 330, 333, 336, 337, 339, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 370, 375, 379, 382, 384, 389, 390], "independ": [1, 2, 5, 6, 334, 354], "yyyi": 2, "mm": [2, 141, 169], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 80, 81, 85, 86, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 131, 132, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 169, 172, 173, 174, 175, 177, 179, 180, 181, 183, 185, 187, 188, 189, 191, 193, 196, 197, 198, 199, 201, 204, 206, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 224, 226, 228, 230, 231, 235, 236, 237, 239, 242, 243, 244, 246, 248, 250, 252, 254, 256, 257, 261, 262, 263, 265, 268, 269, 270, 271, 273, 275, 278, 279, 280, 282, 283, 285, 287, 291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 305, 306, 307, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 343, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390], "purpos": [2, 329, 336, 356, 390], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 76, 122, 123, 128, 138, 141, 164, 167, 226, 252, 289, 291, 294, 300, 302, 313, 317, 318, 319, 320, 326, 327, 328, 329, 330, 333, 334, 336, 337, 349, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 388], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 60, 75, 76, 81, 87, 93, 94, 97, 101, 107, 108, 110, 111, 116, 118, 121, 124, 127, 132, 133, 135, 136, 138, 141, 146, 147, 151, 153, 154, 158, 160, 162, 163, 164, 172, 173, 174, 176, 177, 180, 181, 182, 183, 185, 188, 189, 191, 197, 200, 210, 211, 218, 219, 221, 222, 224, 226, 231, 242, 243, 245, 246, 248, 250, 257, 269, 291, 294, 300, 302, 305, 306, 307, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 343, 345, 347, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 390], "summar": 2, "process": [2, 6, 8, 14, 33, 93, 94, 132, 333, 336, 337, 349, 354, 355, 356, 375], "It": [2, 5, 6, 9, 14, 17, 38, 44, 122, 141, 317, 318, 319, 320, 321, 323, 325, 326, 327, 329, 333, 334, 335, 336, 337, 354, 356, 357, 363, 372, 377, 379, 380, 381], "code": [2, 5, 7, 9, 12, 14, 38, 141, 313, 329, 330, 333, 334, 335, 339, 349, 354, 355, 357, 366, 370, 375, 382, 384], "do": [2, 5, 9, 11, 14, 17, 18, 127, 138, 141, 329, 333, 335, 337, 353, 354, 355, 356, 363, 371, 372, 373, 374, 380, 381, 384], "doe": [2, 6, 9, 12, 14, 333, 339, 355, 356, 363, 375], "primari": [2, 5, 9, 356, 389], "challeng": 2, "respect": [2, 8, 9, 14, 19, 141, 144, 306, 307, 321, 333, 336, 371, 372, 373, 375, 380, 381, 383, 388], "softwar": [2, 85, 362, 364, 384], "appropri": [2, 5, 6, 14, 15, 26, 80, 86, 138, 141, 313, 316, 321, 323, 324, 325, 328, 330, 331, 333, 337, 349, 355, 356, 357, 363, 383, 384, 388], "final": [2, 5, 6, 7, 8, 138, 157, 306, 307, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 333, 335, 352, 356, 365, 372, 380], "statement": [2, 12, 333, 354], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 75, 121, 141, 179, 187, 235, 261, 289, 313, 315, 316, 321, 323, 324, 325, 328, 330, 333, 337, 349, 355, 356, 357, 363, 371, 372, 373, 374, 377, 379, 380, 381, 384], "regard": 2, "last": [2, 141, 334, 337, 370, 384], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 116, 118, 141, 164, 184, 249, 316, 321, 323, 324, 325, 333, 335, 337, 355, 356, 357, 370, 375, 384], "your": [2, 4, 5, 6, 11, 138, 313, 336, 337, 349, 353, 356, 357, 358, 359, 363, 364, 371, 372, 373, 380, 381, 384], "appear": [2, 138, 333, 356], "under": [2, 17, 38, 39, 138, 141, 315, 333, 334, 337, 355, 367, 375, 390], "head": [2, 315, 359], "correspond": [2, 6, 7, 17, 121, 138, 141, 143, 309, 313, 321, 333, 337, 349, 370], "discuss": [2, 6, 141, 317, 318, 319, 320, 326, 327, 333, 336, 356, 370, 375], "technic": [2, 7], "issu": [2, 6, 333, 334, 337], "focu": [2, 356], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 115, 120, 126, 131, 133, 134, 135, 136, 137, 138, 139, 147, 151, 153, 154, 162, 172, 174, 176, 180, 181, 182, 183, 188, 200, 211, 221, 245, 248, 269, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 333, 334, 336, 337, 342, 349, 353, 354, 355, 357, 363, 370, 375, 377, 379, 383], "To": [2, 5, 6, 12, 17, 18, 121, 137, 138, 139, 141, 313, 333, 336, 337, 349, 350, 356, 358, 359, 363, 367, 371, 372, 373, 380, 381, 384], "extent": [2, 13, 17, 356, 370], "possibl": [2, 8, 11, 71, 141, 315, 317, 318, 319, 320, 321, 326, 327, 333, 334, 335, 336, 355, 356, 367, 374], "other": [2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 38, 39, 41, 49, 57, 108, 124, 133, 190, 225, 311, 312, 317, 318, 319, 320, 326, 327, 328, 329, 330, 331, 335, 336, 337, 344, 353, 354, 355, 357, 370, 371, 372, 373, 380, 381, 390], "clean": [2, 4, 5, 6, 115, 120, 333, 335, 337], "plan": [2, 13, 141, 313, 323, 325, 333, 349, 354, 358, 359, 360, 361, 362, 364, 377, 379, 390], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 115, 133, 138, 141, 145, 146, 197, 210, 231, 257, 279, 315, 316, 321, 323, 324, 325, 328, 333, 336, 337, 356, 357, 365, 368, 371, 372, 373, 374, 377, 379, 380, 381, 384, 385, 390], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 133, 134, 135, 136, 137, 138, 139, 141, 313, 330, 333, 335, 336, 337, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 371, 372, 373, 374, 375, 380, 381, 384, 389, 390], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 97, 101, 107, 121, 127, 138, 141, 160, 164, 169, 174, 219, 243, 269, 306, 307, 313, 316, 321, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 349, 352, 353, 354, 355, 356, 357, 363, 365, 368, 372, 375, 380, 383, 384], "intend": [2, 6, 8, 9, 334, 357, 379, 390], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 64, 121, 304, 315, 317, 318, 319, 320, 326, 327, 331, 333, 336, 337, 353, 356, 374, 384], "pde": 2, "solver": [2, 335, 337, 355, 384], "well": [2, 6, 9, 12, 13, 138, 141, 297, 309, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 333, 337, 354, 356, 357, 372, 384, 390], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 60, 85, 89, 94, 98, 99, 100, 101, 102, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 121, 124, 127, 128, 131, 132, 138, 143, 146, 147, 153, 157, 158, 164, 167, 174, 196, 200, 203, 204, 209, 211, 215, 219, 230, 231, 239, 243, 256, 257, 265, 278, 280, 285, 287, 298, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 335, 336, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 387, 388, 389, 390], "low": [2, 124, 374], "variabl": [2, 5, 11, 13, 19, 20, 25, 38, 41, 48, 49, 57, 68, 75, 81, 85, 97, 98, 102, 105, 121, 124, 126, 127, 132, 138, 141, 143, 144, 145, 146, 147, 148, 151, 154, 156, 160, 164, 170, 174, 177, 183, 185, 189, 193, 197, 204, 206, 210, 211, 215, 219, 222, 224, 230, 231, 232, 235, 237, 239, 243, 248, 250, 254, 256, 257, 258, 261, 263, 265, 269, 275, 278, 279, 280, 285, 287, 291, 294, 295, 296, 300, 301, 302, 303, 309, 310, 315, 321, 328, 333, 336, 337, 343, 344, 349, 353, 356, 363, 365, 368, 370, 375, 383, 384, 385, 388], "declar": [2, 7], "interfac": [2, 10, 289, 290, 291, 294, 300, 302, 305, 310, 321, 336, 337, 355, 356, 367], "sequenc": [2, 5, 14, 141, 304, 317, 318, 319, 320, 326, 327, 332, 333, 336, 354, 356, 384, 389, 390], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 60, 93, 94, 95, 97, 108, 121, 124, 133, 134, 135, 136, 137, 138, 139, 141, 156, 160, 164, 169, 174, 219, 243, 269, 316, 321, 324, 333, 335, 336, 337, 350, 353, 354, 356, 357, 363, 364, 367, 371, 372, 373, 374, 375, 380, 381, 383, 384, 388], "want": [2, 5, 6, 11, 14, 17, 18, 51, 138, 141, 333, 335, 337, 353, 356, 357, 363, 364, 382, 384, 390], "math": 2, "syntax": [2, 141, 356], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 337, 354, 356, 384], "2": [2, 6, 13, 14, 15, 18, 39, 124, 138, 141, 188, 217, 222, 315, 316, 317, 319, 321, 326, 327, 331, 334, 337, 343, 350, 356, 357, 359, 363, 367, 368, 370, 372, 374, 375, 376, 377, 378, 379, 384], "2ab": 2, "imag": [2, 7, 19, 122, 123, 124, 305, 329, 356, 383, 388], "keep": [2, 5, 6, 9, 14, 25, 57, 317, 318, 319, 320, 326, 327, 329, 330, 333, 335, 337, 356, 383, 388], "mind": [2, 5, 356], "quit": [2, 331, 333, 335, 356, 375], "small": [2, 9, 44, 138, 306, 307, 329, 333, 356, 358, 359, 366, 367, 375, 380, 382, 384], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 61, 80, 93, 94, 97, 110, 111, 112, 115, 124, 128, 138, 141, 143, 160, 164, 169, 174, 219, 243, 269, 291, 294, 297, 300, 302, 304, 306, 307, 308, 310, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390], "png": [2, 13, 19, 305, 317, 318, 319, 320, 326, 327, 333, 356], "okai": [2, 6, 333, 356], "size": [2, 13, 19, 70, 71, 80, 123, 124, 141, 166, 168, 170, 305, 329, 356, 357, 370, 372, 374, 377, 378, 379, 382, 383, 388], "repo": [2, 5, 6, 138, 313, 349, 355, 356, 385], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 138, 141, 329, 330, 331, 333, 334, 335, 336, 337, 353, 354, 356, 357, 359, 367, 383, 384, 389, 390], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 333, 335, 337, 356], "sourc": [2, 6, 7, 11, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 356, 357, 363, 364, 384], "project": [2, 5, 6, 7, 67, 101, 107, 313, 336, 337, 349, 350, 356, 357, 358, 359, 363, 384, 385], "manag": [2, 353, 363], "item": [2, 356], "git": [2, 6, 16, 96, 313, 337, 349, 356, 357, 384], "branch": [2, 5, 138, 313, 330, 333, 337, 349, 355, 356, 384], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 333, 337, 363], "block": [2, 335], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 98, 102, 105, 137, 138, 139, 141, 329, 331, 333, 335, 336, 337, 353, 355, 356, 357, 363, 370, 371, 372, 373, 374, 380, 381, 384, 390], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 141, 329, 330, 333, 335, 336, 356], "example_funct": 2, "foo": [2, 336], "return": [2, 7, 15, 31, 48, 56, 59, 62, 69, 70, 71, 76, 80, 86, 87, 89, 92, 93, 103, 112, 113, 115, 116, 118, 121, 124, 127, 131, 132, 141, 144, 145, 146, 147, 152, 155, 157, 161, 163, 165, 167, 169, 170, 175, 197, 199, 203, 210, 211, 220, 231, 233, 234, 236, 244, 257, 259, 260, 262, 279, 289, 292, 293, 297, 298, 299, 304, 306, 307, 308, 309, 310, 311, 312, 335, 336, 356, 372], "how": [2, 5, 6, 12, 14, 75, 141, 332, 333, 335, 336, 337, 357, 363, 364, 375], "show": [2, 7, 13, 61, 304, 305, 333, 356, 363, 364, 370, 371, 372, 373, 374, 380, 381, 383, 388], "met": 2, "regress": [2, 316, 317, 318, 319, 320, 324, 326, 327, 334, 354, 355, 356, 370, 372, 375, 384, 389], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 63, 92, 93, 94, 95, 96, 115, 120, 138, 141, 157, 160, 206, 218, 275, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 333, 336, 337, 355, 356, 357, 359, 362, 363, 364, 367, 375, 377, 379, 383, 384, 388, 390], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 63, 96, 110, 112, 115, 120, 136, 138, 157, 158, 160, 179, 187, 204, 215, 287, 331, 332, 333, 334, 335, 336, 337, 353, 354, 356, 357, 363, 371, 372, 373, 374, 380, 381, 382, 384, 390], "properli": [2, 133, 135, 136, 356, 357, 384], "addit": [2, 7, 9, 18, 38, 141, 310, 311, 312, 321, 328, 329, 330, 331, 333, 335, 336, 337, 356, 374, 375, 378], "modif": [2, 6, 7, 333, 350], "nightli": [2, 337, 384, 389], "might": [2, 6, 11, 14, 17, 19, 138, 141, 308, 329, 333, 337, 356, 357, 363, 384], "made": [2, 5, 17, 38, 41, 49, 121, 333, 335, 336, 337, 350, 352, 354, 356, 390], "continu": [2, 6, 333, 356], "page": [3, 7, 138, 358], "auto": 3, "summari": [3, 359], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 76, 114, 115, 138, 141, 315, 316, 317, 318, 319, 320, 326, 327, 329, 331, 333, 334, 335, 336, 337, 354, 363, 368, 370, 374, 375, 383, 384, 385, 388, 390], "relev": [3, 7, 9, 141, 317, 318, 319, 320, 323, 325, 326, 327, 356, 358, 359, 360, 361, 362, 363, 364, 383, 384, 388], "seaic": [3, 10, 20, 40, 330, 333, 352, 354, 355, 384, 385, 388, 390], "long": [4, 25, 35, 38, 45, 93, 94, 160, 164, 174, 219, 243, 269, 333, 356, 370, 375, 384], "procedur": [4, 138, 337, 356, 364], "conda": [4, 5, 16, 96, 133, 135, 136, 138, 313, 330, 336, 349, 355, 356, 357, 358, 359, 360, 361, 362, 364], "environ": [4, 5, 11, 133, 135, 136, 313, 330, 336, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "spack": [4, 5, 133, 135, 136, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364], "compil": [4, 5, 6, 14, 133, 134, 135, 136, 137, 138, 139, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 384], "system": [4, 5, 6, 25, 35, 38, 45, 93, 94, 95, 133, 135, 136, 138, 160, 164, 174, 219, 243, 269, 333, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 67, 89, 116, 133, 135, 136, 138, 141, 151, 154, 157, 160, 329, 330, 331, 333, 335, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 369, 384], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 61, 76, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 112, 114, 115, 116, 118, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 153, 162, 176, 179, 182, 187, 194, 200, 207, 221, 245, 269, 276, 291, 294, 295, 296, 300, 301, 302, 303, 306, 307, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 332, 333, 335, 336, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 375, 377, 379, 380, 381, 382, 383, 388, 389], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 82, 96, 108, 109, 112, 114, 115, 120, 121, 133, 134, 135, 136, 137, 138, 139, 141, 179, 187, 306, 307, 308, 310, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 332, 333, 335, 336, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 371, 372, 373, 375, 380, 381, 383, 388, 389, 390], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 89, 96, 116, 120, 127, 138, 141, 151, 154, 157, 160, 329, 330, 331, 332, 333, 335, 337, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 384], "Then": [4, 6, 7, 11, 14, 133, 134, 135, 136, 137, 138, 139, 313, 316, 321, 323, 324, 325, 328, 330, 333, 335, 337, 349, 356, 363, 370, 374, 375, 384], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 67, 92, 93, 94, 103, 115, 120, 136, 138, 143, 151, 153, 154, 160, 162, 164, 173, 174, 176, 180, 182, 185, 189, 191, 196, 198, 200, 209, 212, 218, 219, 221, 224, 230, 235, 239, 243, 245, 250, 256, 261, 265, 268, 269, 270, 278, 280, 282, 285, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 332, 334, 335, 336, 342, 343, 346, 349, 352, 353, 354, 355, 356, 357, 363, 365, 369, 389, 390], "script": [4, 5, 6, 11, 12, 19, 54, 63, 134, 137, 138, 139, 336, 354, 355, 356, 359, 363], "doc": [4, 7, 356, 364], "cd": [4, 6, 313, 337, 349, 356, 359, 384], "html": [4, 368], "view": [4, 323, 325, 337, 377, 379], "open": [4, 6, 337, 356, 375], "_build": 4, "index": [4, 15, 18, 87, 141, 143, 144, 146, 147, 148, 197, 210, 211, 231, 257, 291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 306, 307, 309, 310, 329, 356, 367], "act": [5, 336, 367], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 123, 138, 172, 173, 316, 323, 324, 325, 328, 330, 333, 335, 356, 357, 363, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 384], "These": [5, 6, 8, 9, 14, 20, 38, 138, 141, 313, 315, 330, 333, 335, 336, 337, 349, 350, 355, 356, 357, 363, 365, 370, 374, 375, 379, 380, 384, 389, 390], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 63, 96, 138, 141, 150, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 333, 334, 335, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 368, 370, 371, 372, 373, 374, 375, 380, 381, 385], "describ": [5, 7, 14, 17, 19, 96, 116, 118, 132, 141, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 371, 372, 373, 374, 375, 380, 384], "instal": [5, 6, 138, 337, 356, 363, 364, 384], "abov": [5, 7, 14, 18, 19, 138, 310, 329, 331, 333, 334, 335, 336, 337, 356, 357, 371, 372, 373, 374, 380, 382, 384, 389], "off": [5, 6, 337, 353], "http": [5, 7, 11, 14, 60, 333, 336, 353, 355, 356, 357, 364, 368, 378, 384, 385], "github": [5, 6, 7, 336, 337, 355, 356, 357, 368, 384, 385], "com": [5, 6, 7, 14, 60, 336, 337, 355, 356, 357, 384, 385], "e3sm": [5, 7, 10, 11, 38, 126, 138, 313, 330, 333, 334, 336, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 385], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 60, 68, 69, 75, 76, 81, 97, 104, 114, 115, 120, 126, 138, 141, 143, 151, 154, 157, 158, 160, 163, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 193, 196, 198, 201, 204, 206, 209, 212, 213, 215, 218, 219, 222, 224, 226, 228, 230, 232, 235, 237, 239, 242, 243, 246, 248, 250, 252, 254, 256, 258, 261, 263, 265, 268, 269, 270, 271, 273, 275, 278, 280, 282, 283, 285, 287, 291, 294, 300, 302, 317, 318, 319, 320, 321, 326, 327, 328, 329, 333, 334, 335, 336, 342, 343, 345, 346, 347, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 371, 372, 373, 380, 381, 384, 389], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 133, 135, 136, 138, 304, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 333, 337, 353, 356, 357, 363, 368, 369, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 387, 389, 390], "mean": [5, 305, 337, 356, 367, 370, 371, 372, 373, 374, 378, 380, 381, 389], "chang": [5, 6, 8, 11, 17, 61, 75, 108, 109, 141, 150, 313, 330, 333, 334, 335, 336, 337, 349, 354, 356, 357, 359, 364, 365, 367, 370, 371, 372, 373, 375, 378, 380, 381, 384, 389], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 67, 103, 110, 124, 138, 141, 306, 307, 308, 311, 312, 316, 323, 324, 325, 328, 330, 333, 334, 335, 336, 337, 353, 354, 355, 356, 357, 363, 364, 384], "tool": [5, 6, 9, 12, 14, 17, 313, 330, 333, 337, 349, 355, 356, 357], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 63, 76, 85, 90, 93, 94, 97, 103, 110, 121, 122, 123, 124, 125, 126, 127, 132, 133, 137, 138, 139, 141, 143, 144, 145, 146, 148, 152, 155, 157, 160, 161, 162, 164, 165, 166, 167, 168, 169, 174, 175, 176, 182, 189, 193, 197, 199, 206, 210, 219, 220, 221, 226, 231, 236, 243, 244, 245, 254, 255, 257, 262, 269, 275, 279, 280, 285, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 336, 337, 343, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 387, 389, 390], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 64, 67, 73, 78, 92, 93, 94, 96, 97, 110, 111, 112, 114, 115, 120, 138, 156, 157, 158, 160, 164, 166, 168, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 337, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 385, 389], "support": [5, 6, 8, 13, 17, 38, 141, 291, 300, 302, 315, 333, 336, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 367, 370, 375, 382, 390], "machin": [5, 8, 9, 11, 38, 40, 62, 63, 96, 114, 115, 120, 313, 333, 336, 349, 355, 356, 357, 358, 359, 360, 361, 362, 364], "option": [5, 7, 9, 11, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 74, 75, 76, 79, 81, 85, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 138, 144, 146, 147, 150, 151, 153, 154, 156, 157, 158, 160, 162, 164, 167, 169, 174, 176, 182, 184, 194, 197, 200, 207, 210, 211, 218, 219, 221, 226, 231, 232, 242, 243, 245, 248, 249, 257, 258, 269, 271, 273, 276, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 345, 349, 350, 353, 355, 357, 367, 369, 384, 390], "help": [5, 6, 13, 138, 329, 330, 331, 333, 337, 355, 356, 363, 368, 385], "usag": [5, 15, 19, 335, 357, 359, 364], "h": [5, 14, 356, 374], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 132, 138, 141, 143, 148, 233, 234, 259, 260, 269, 317, 318, 319, 320, 326, 327, 333, 335, 336, 337, 353, 356, 357, 359, 361, 362, 363, 369, 370, 371, 373, 377, 379, 380, 384, 389, 390], "n": [5, 6, 69, 76, 77, 83, 333, 356, 359, 363, 364, 370, 372, 374, 375, 377, 378, 379, 383, 384, 388], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 92, 93, 94, 97, 115, 138, 141, 152, 155, 160, 161, 164, 165, 166, 168, 174, 175, 189, 199, 219, 220, 232, 236, 243, 244, 258, 262, 269, 313, 316, 321, 323, 324, 325, 329, 333, 334, 335, 336, 343, 354, 356, 357, 363, 365, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 388], "v": [5, 337, 356, 371, 373, 374, 377, 379, 380, 389], "By": [5, 14, 18, 39, 40, 141, 313, 330, 333, 335, 349, 356, 357, 370, 372, 375, 382], "default": [5, 7, 9, 11, 14, 15, 18, 19, 25, 39, 40, 49, 55, 63, 76, 81, 87, 88, 96, 97, 98, 102, 105, 111, 115, 117, 120, 124, 133, 135, 136, 138, 141, 145, 146, 156, 174, 197, 210, 231, 243, 257, 313, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 333, 335, 337, 349, 350, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 371, 372, 373, 380, 381, 382, 383, 384, 388, 390], "planar": [5, 9, 124, 141, 306, 315, 321, 330, 333, 356, 375, 377, 378, 379, 382, 383, 388, 389, 390], "baroclinic_channel": [5, 7, 9, 14, 18, 242, 248, 313, 322, 329, 330, 333, 336, 356, 370, 384, 389, 390], "10km": [5, 18, 316, 356, 370, 384, 389, 390], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 70, 133, 134, 135, 136, 138, 139, 141, 160, 172, 174, 188, 219, 243, 268, 269, 270, 291, 294, 300, 302, 305, 306, 307, 316, 317, 318, 319, 321, 323, 325, 326, 327, 328, 330, 331, 333, 335, 337, 350, 353, 356, 357, 359, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384], "decomp": [5, 330, 356, 384, 389], "displai": [5, 8, 305, 364], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 60, 64, 67, 96, 112, 114, 115, 120, 121, 124, 138, 143, 313, 330, 333, 335, 336, 337, 343, 349, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384, 390], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 60, 61, 63, 96, 97, 110, 112, 114, 115, 120, 121, 138, 156, 157, 158, 160, 164, 172, 173, 174, 177, 179, 180, 181, 183, 185, 187, 188, 189, 191, 204, 215, 218, 219, 222, 224, 226, 242, 243, 246, 248, 250, 269, 287, 313, 316, 321, 324, 330, 332, 333, 334, 335, 336, 337, 343, 345, 347, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 371, 372, 373, 374, 380, 381, 384, 390], "messag": [5, 8, 138, 333, 353, 364], "task_expr": [5, 64], "flag": [5, 6, 138, 333, 336, 353, 354, 356, 357, 362, 368, 370, 378, 384, 385], "suppli": [5, 6, 7, 15, 18, 124, 132, 138, 333, 337, 356], "substr": [5, 138], "regular": [5, 19, 64, 69, 76, 193, 206, 275, 280, 285, 356, 358, 361, 363, 364, 374, 384], "express": [5, 64], "subset": 5, "search": [5, 64, 359], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 70, 80, 86, 89, 93, 94, 111, 116, 118, 121, 127, 141, 143, 144, 147, 148, 163, 164, 183, 211, 248, 297, 306, 307, 310, 316, 321, 324, 328, 333, 335, 353, 355, 356, 357, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 388, 389], "pass": [5, 8, 9, 12, 13, 14, 18, 80, 121, 122, 141, 329, 330, 333, 335, 336, 337, 354, 384], "similarli": [5, 8, 124, 137, 139, 310, 313, 333, 335, 337, 363, 384], "result": [5, 13, 18, 59, 71, 80, 138, 141, 172, 180, 185, 188, 191, 250, 273, 306, 307, 308, 311, 312, 316, 317, 318, 319, 320, 324, 326, 327, 333, 334, 336, 337, 342, 347, 354, 356, 357, 370, 371, 372, 373, 374, 380, 381, 383, 388, 389], "descript": [5, 7, 356, 357, 368, 385], "short": [5, 173, 218, 268, 270, 333, 334, 335, 336, 346, 356, 370, 375], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 63, 92, 93, 94, 120, 138, 141, 142, 164, 172, 173, 268, 270, 316, 324, 328, 329, 330, 333, 334, 335, 336, 350, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384, 389], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 120, 122, 123, 124, 138, 141, 143, 164, 315, 333, 335, 337, 356, 367, 374, 390], "built": [5, 6, 14, 115, 120, 138, 313, 330, 337, 349, 355, 357, 363, 384], "standalon": [5, 14, 136, 138, 330, 337, 354, 355, 363, 385], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 38, 40, 67, 85, 99, 106, 116, 118, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 164, 167, 170, 232, 243, 258, 275, 290, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 333, 336, 337, 340, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 370, 374, 377, 382, 383, 384, 385, 388, 389, 390], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 115, 120, 138, 333, 335, 336, 337, 353, 356, 359, 362, 364, 367, 371, 372, 373, 374, 380, 381, 384], "num": 5, "f": [5, 9, 11, 18, 141, 203, 330, 333, 335, 336, 337, 356, 357, 364, 370, 374, 375, 377, 384], "m": [5, 6, 14, 69, 76, 77, 83, 306, 307, 316, 321, 324, 328, 329, 337, 356, 358, 359, 360, 361, 362, 364, 367, 370, 372, 373, 374, 375, 380, 382, 384], "mach": [5, 9, 11, 38, 138, 355, 358, 359, 360, 361, 362, 363, 364, 384], "w": [5, 6, 337, 354, 356, 384], "p": [5, 6, 337, 356, 357, 384], "suite_nam": [5, 8, 111, 113, 115, 120, 384], "copy_execut": [5, 115, 120, 384], "specifi": [5, 6, 14, 17, 18, 19, 40, 138, 141, 315, 333, 337, 352, 356, 357, 362, 364, 370, 371, 372, 373, 375, 380, 381, 383, 384, 388], "sever": [5, 6, 12, 138, 141, 329, 333, 335, 336, 337, 355, 356, 378, 383, 384, 389], "onc": [5, 6, 14, 41, 306, 307, 316, 337, 356, 357, 371, 372, 373, 380, 381, 384], "separ": [5, 7, 9, 14, 17, 18, 19, 143, 333, 334, 354, 356, 371, 372, 373, 380, 381, 384], "space": [5, 6, 7, 9, 13, 138, 323, 325, 333, 337, 356, 359, 363, 367, 374, 384], "altern": [5, 13, 333, 350, 384], "task_numb": 5, "multipl": [5, 9, 14, 138, 314, 334, 335, 336, 337, 356, 363, 370, 384], "test": [5, 7, 8, 9, 19, 49, 50, 55, 63, 92, 93, 94, 113, 121, 138, 142, 143, 149, 151, 154, 156, 158, 171, 173, 174, 180, 181, 183, 184, 185, 186, 188, 193, 194, 195, 196, 198, 201, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 227, 228, 229, 230, 232, 235, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340, 341, 342, 345, 346, 347, 348, 349, 352, 354, 355, 361, 363, 364, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389], "requir": [5, 6, 8, 14, 17, 25, 35, 38, 39, 45, 97, 141, 160, 164, 174, 219, 243, 269, 313, 329, 330, 333, 334, 335, 336, 337, 349, 350, 353, 355, 356, 357, 362, 363, 367, 368, 383, 384, 385, 388, 390], "few": [5, 13, 14, 25, 35, 38, 45, 93, 94, 138, 164, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 333, 336, 356, 357, 363], "basic": [5, 7, 357, 359, 363, 374, 384], "piec": [5, 329, 330, 356], "abl": [5, 6, 133, 134, 135, 136, 137, 139, 141, 333, 334, 337, 356, 363, 384], "place": [5, 6, 14, 122, 138, 329, 333, 335, 350, 356, 363], "download": [5, 6, 8, 10, 38, 40, 47, 61, 138, 179, 187, 335, 336, 337, 357, 384, 389], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 138, 141, 306, 307, 315, 317, 318, 319, 320, 326, 327, 329, 331, 333, 335, 336, 337, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 375, 384, 385, 389, 390], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 103, 116, 118, 119, 122, 123, 124, 126, 132, 138, 141, 291, 294, 295, 296, 300, 301, 302, 303, 304, 306, 307, 309, 311, 312, 333, 337, 355, 357, 358, 359, 360, 361, 362, 363, 384, 389, 390], "r": [5, 203, 364, 371, 372, 373, 380], "tell": [5, 6, 138, 337], "re": [5, 6, 9, 321, 335, 336, 337, 354, 356, 357, 363, 364, 371, 372, 373, 375, 380, 381], "leav": [5, 19, 357, 372, 375], "unknown": [5, 138, 336, 363], "component_path": [5, 9, 115, 120, 313, 330, 349, 357, 384], "absolut": [5, 9, 38, 40, 57, 115, 120, 313, 330, 333, 337, 349, 384], "landic": [5, 6, 12, 20, 40, 67, 120, 329, 330, 332, 333, 335, 337, 354, 355, 356, 357, 384, 390], "e3sm_submodul": [5, 313, 330, 337, 349, 350, 356], "mali": [5, 138, 330, 333, 337, 354, 356, 357, 384, 390], "dev": [5, 6, 7, 321, 329, 330, 332, 333, 336, 337, 355, 356, 368, 384, 385], "albani": [5, 133, 135, 136, 138, 330, 357, 384], "depend": [5, 14, 17, 19, 38, 39, 47, 108, 109, 138, 141, 143, 179, 187, 196, 209, 230, 256, 278, 280, 285, 335, 337, 354, 355, 356, 357, 363, 364, 367, 371, 372, 373, 375, 380, 381, 384, 390], "whether": [5, 8, 13, 14, 17, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 60, 61, 64, 110, 111, 115, 120, 121, 122, 123, 124, 128, 138, 141, 153, 162, 163, 164, 176, 182, 193, 200, 206, 221, 245, 269, 271, 273, 275, 280, 285, 304, 305, 307, 323, 325, 329, 333, 335, 337, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 388], "omega": [5, 31, 126, 164, 167, 232, 258, 313, 330, 336, 337, 354, 356, 368, 374, 377, 379, 384], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 62, 63, 74, 76, 79, 92, 93, 94, 95, 96, 112, 114, 115, 120, 122, 123, 126, 127, 128, 129, 131, 132, 150, 151, 153, 154, 157, 162, 164, 167, 169, 176, 182, 183, 193, 194, 200, 206, 207, 218, 221, 232, 245, 248, 258, 275, 276, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 349, 350, 353, 355, 367, 384, 390], "point": [5, 6, 9, 54, 60, 100, 138, 306, 307, 310, 313, 315, 329, 330, 335, 336, 337, 349, 356, 357, 363, 375, 380, 384], "much": [5, 6, 14, 333, 356, 375], "config_fil": [5, 9, 115, 120], "work_dir": [5, 11, 38, 49, 63, 96, 114, 115, 120, 121, 333, 335, 356], "recommend": [5, 7, 11, 19, 138, 333, 334, 336, 337, 356, 363], "itself": [5, 6, 7, 9, 38, 46, 53, 329, 330, 332, 333, 335, 337, 356, 384], "temp": 5, "scratch": [5, 6, 337, 356, 359, 364, 384], "avoid": [5, 333, 356], "confus": [5, 14, 336, 337, 356], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 84, 85, 94, 97, 110, 111, 121, 123, 141, 143, 147, 148, 151, 154, 164, 170, 179, 187, 189, 190, 196, 204, 209, 211, 215, 224, 225, 230, 239, 256, 265, 278, 280, 285, 287, 290, 310, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 335, 343, 344, 352, 354, 357, 364, 365, 371, 372, 373, 374, 375, 380, 381, 384, 389], "compar": [5, 10, 18, 38, 41, 48, 114, 115, 120, 121, 141, 189, 190, 224, 225, 269, 317, 318, 319, 320, 326, 327, 328, 333, 334, 335, 336, 337, 343, 344, 352, 354, 356, 369, 370, 375, 378, 384, 387, 389], "previou": [5, 124, 190, 225, 333, 337, 344, 356, 369, 384, 389], "same": [5, 6, 7, 9, 14, 18, 38, 39, 40, 48, 121, 123, 138, 141, 145, 146, 197, 210, 231, 257, 279, 316, 324, 328, 329, 331, 333, 334, 335, 336, 337, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 370, 371, 372, 373, 374, 375, 380, 381, 382, 384, 389, 390], "baseline_dir": [5, 38, 114, 115, 120, 333], "mani": [5, 6, 8, 9, 141, 329, 331, 333, 335, 336, 337, 355, 356, 370, 383, 388], "valid": [5, 10, 19, 38, 41, 48, 124, 141, 151, 154, 218, 291, 292, 293, 294, 297, 298, 299, 300, 302, 310, 323, 325, 328, 333, 336, 337, 355, 367, 370, 375], "timer": [5, 18, 38, 333, 334, 336], "both": [5, 6, 7, 8, 13, 14, 30, 124, 138, 141, 162, 169, 176, 182, 221, 245, 305, 316, 321, 329, 330, 332, 333, 337, 355, 356, 357, 369, 372, 375, 377, 379, 382], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 115, 120, 313, 330, 337, 349, 357, 364, 384], "give": [5, 6, 14, 18, 138, 333, 336, 337, 356, 357, 384], "predefin": 5, "so": [5, 6, 7, 9, 11, 12, 13, 14, 18, 19, 25, 37, 61, 108, 138, 141, 164, 291, 300, 302, 313, 316, 321, 323, 324, 325, 329, 330, 333, 335, 336, 337, 349, 354, 356, 357, 362, 363, 364, 367, 370, 371, 372, 373, 374, 375, 380, 381, 382, 384, 389], "case": [5, 6, 7, 8, 9, 11, 14, 19, 28, 29, 49, 50, 55, 63, 92, 93, 94, 116, 121, 138, 141, 142, 149, 156, 158, 173, 180, 181, 183, 184, 185, 186, 188, 194, 195, 196, 198, 201, 204, 205, 207, 209, 212, 213, 215, 216, 218, 227, 228, 230, 232, 235, 237, 238, 239, 240, 242, 243, 246, 247, 248, 249, 251, 252, 253, 254, 256, 258, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 306, 307, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 335, 337, 340, 342, 345, 346, 348, 354, 355, 356, 363, 364, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389], "pre": [5, 138, 337], "copi": [5, 6, 8, 40, 55, 115, 120, 356, 359, 384], "just": [5, 14, 25, 35, 38, 45, 64, 138, 164, 321, 333, 336, 337, 354, 356, 359, 362, 364], "wish": [5, 7, 14, 50, 306, 307, 333, 337, 356, 384], "again": [5, 6, 14, 136, 141, 313, 333, 335, 337, 353, 384], "later": [5, 8, 18, 25, 35, 38, 45, 57, 138, 164, 333, 356, 357], "anticip": [5, 356], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 109, 122, 138, 150, 306, 307, 313, 315, 329, 333, 334, 335, 337, 349, 350, 353, 354, 356, 357, 364, 365, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 388, 390], "delet": [5, 115, 120, 336, 337, 353, 384], "fresh": [5, 6, 335, 356], "sinc": [5, 6, 14, 87, 109, 132, 141, 316, 333, 335, 336, 337, 356, 370, 371, 372, 373, 374, 377, 379, 380, 381, 383, 388], "rerun": [5, 337], "c": [5, 6, 115, 138, 333, 337, 358, 359, 360, 361, 362, 363, 364, 369, 371, 373, 378, 380, 381, 384, 389], "test_suit": [5, 113, 333], "build": [5, 6, 10, 13, 14, 72, 77, 133, 134, 135, 136, 137, 139, 304, 313, 330, 335, 336, 349, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364], "mpas_model": [5, 357], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 72, 75, 76, 77, 141, 179, 187, 333, 335, 336, 356, 357, 362, 364, 384], "baselin": [5, 6, 8, 10, 38, 41, 48, 114, 115, 120, 121, 141, 151, 154, 269, 316, 321, 323, 324, 325, 328, 333, 334, 336, 352, 354, 356, 369, 375, 384], "comparison": [5, 8, 18, 38, 48, 121, 333, 356, 357, 375, 380], "against": [5, 10, 41, 48, 121, 141, 151, 154, 316, 321, 323, 324, 325, 328, 333, 352, 356, 369], "oppos": [5, 14, 30, 153, 162, 163, 176, 182, 193, 200, 206, 221, 245, 275, 280, 285, 307, 356], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 110], "wherea": [5, 12, 333, 354, 356, 369, 375, 390], "typic": [5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 38, 50, 111, 138, 141, 305, 306, 307, 329, 330, 331, 333, 335, 337, 354, 356, 357, 363, 365, 367, 382, 384, 390], "clone": [5, 6, 138, 313, 331, 337, 349, 356, 384], "pickl": [5, 8, 108, 109, 333, 356, 384], "latter": [5, 49, 138], "conveni": [5, 9, 17, 291, 294, 300, 302, 329, 333, 356, 357, 371, 372, 373, 380, 381, 384, 390], "tab": [5, 384], "explicitli": [5, 7, 141, 316, 323, 324, 325, 333, 337, 356, 357, 384], "select": [5, 8, 124, 304, 333, 337, 356], "edit": [5, 7, 337, 356, 384], "steps_to_run": [5, 49, 111, 333, 335, 356, 357], "full_run": [5, 18, 352, 370, 387], "restart_run": [5, 18, 352, 370, 387], "Or": [5, 333, 357], "accomplish": [5, 11, 17, 333, 336], "thing": [5, 133, 134, 135, 136, 137, 138, 139, 141, 329, 333, 336, 355, 389], "take": [5, 6, 7, 11, 13, 14, 57, 138, 141, 147, 211, 329, 333, 334, 335, 337, 356, 371, 372, 373, 380, 389], "preced": [5, 57, 141], "over": [5, 9, 14, 57, 97, 122, 123, 305, 333, 336, 355, 356, 367, 370, 375, 378, 382, 384], "intern": [5, 11, 25, 241, 242, 243, 246, 248, 250, 252, 306, 307, 324, 333, 337, 353, 368, 376], "shouldn": [5, 138, 269, 356], "special": [5, 354, 383], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 61, 164, 333, 363], "polaris_cach": [5, 8, 20, 333], "structur": [5, 13, 31, 167, 332, 335, 355, 356, 378], "without": [5, 40, 305, 333, 336, 337, 355, 356, 357, 361, 363, 377, 379, 383, 384], "redund": [5, 291, 294, 300, 302, 316, 329, 356], "stamp": 5, "revis": [5, 357], "older": 5, "ones": [5, 291, 294, 300, 302, 336, 356], "version": [5, 6, 16, 33, 57, 96, 121, 138, 313, 316, 324, 329, 330, 331, 333, 335, 336, 337, 349, 355, 356, 357, 363, 364, 368, 370, 372, 375, 384, 385], "updat": [5, 7, 8, 11, 25, 27, 29, 34, 35, 44, 45, 61, 117, 136, 138, 141, 166, 269, 295, 296, 301, 303, 313, 316, 317, 318, 319, 323, 324, 325, 326, 327, 333, 349, 353, 355, 356, 384], "cached_fil": [5, 20, 333], "json": [5, 8, 20, 55, 333, 364], "anvil": [5, 6, 138, 333, 357, 363, 384], "chrysali": [5, 6, 138, 333, 356, 357, 363, 384], "onto": [5, 337], "lcrc": [5, 6, 8, 11, 55, 333, 336, 357, 358, 360, 363, 384], "server": [5, 8, 40, 55, 333, 336, 357, 364], "d": [5, 19, 124, 217, 222, 232, 258, 291, 294, 295, 296, 300, 301, 302, 303, 315, 317, 319, 326, 327, 333, 356, 368, 375, 376, 382], "whose": [5, 46, 53, 86, 333], "ocean_cached_fil": 5, "pr": [5, 6, 384, 389], "look": [5, 6, 7, 11, 18, 137, 139, 306, 307, 335, 336, 356, 357], "someth": [5, 7, 98, 102, 105, 137, 138, 139, 337, 356], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 97, 141, 143, 151, 154, 316, 321, 324, 333, 336, 356, 365], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 85, 151, 154, 157, 160, 164, 316, 321, 323, 324, 325, 333, 356, 357], "info": [5, 12, 14, 25, 32, 85, 138, 151, 154, 164, 333, 356], "initial_st": [5, 18, 19, 143, 316, 324, 333, 356], "date_str": [5, 55], "let": [5, 333, 337, 354, 356, 357, 364], "string": [5, 9, 15, 40, 101, 107, 138, 141, 156, 157, 160, 169, 275, 305, 337], "choos": [5, 333, 336, 337, 356, 358, 359, 360, 361, 364, 390], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 356], "check": [5, 6, 18, 121, 321, 333, 337, 356, 357, 359, 364, 384, 389], "print": [5, 12, 18, 64, 121, 128, 333, 336, 389], "stdout": [5, 12, 38, 49, 333, 335], "translat": [5, 31, 141, 167], "convert": [5, 9, 13, 14, 141, 169, 333, 356], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 115, 120, 131, 132, 157, 160, 162, 164, 167, 168, 176, 179, 182, 187, 221, 245, 313, 316, 321, 323, 324, 325, 329, 330, 333, 335, 336, 349, 350, 352, 355, 356, 357, 365, 375, 382], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 126, 131, 132, 162, 168, 176, 179, 182, 187, 221, 245, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 335, 336, 349, 352, 357, 383, 388], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 138, 151, 154, 157, 160, 162, 164, 167, 168, 176, 182, 221, 245, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 335, 355, 356, 359, 362, 364], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 126, 138, 141, 163, 167, 306, 307, 313, 329, 331, 333, 334, 336, 337, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384, 388, 390], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 126, 138, 141, 163, 167, 306, 307, 313, 329, 331, 333, 334, 336, 337, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 388], "don": [5, 6, 7, 14, 138, 141, 143, 148, 333, 335, 336, 337, 356, 361, 384, 390], "format": [5, 7, 11, 13, 14, 126, 132, 169, 334, 335, 337, 356, 357, 359, 375], "note": [5, 7, 17, 18, 356, 364], "keyword": [5, 7, 14, 18, 19, 333, 372], "top": [5, 19, 124, 291, 292, 293, 294, 297, 298, 299, 300, 302, 305, 315, 321, 331, 356, 367, 378], "ignor": [5, 101, 107], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 62, 70, 86, 92, 103, 110, 138, 141, 145, 146, 147, 164, 197, 210, 211, 231, 257, 279, 329, 332, 333, 335, 336, 337, 354, 357, 358, 359, 360, 361, 362, 364, 367, 384], "pars": [5, 9, 14, 26, 27, 28, 29, 89, 116, 118], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 87, 121, 122, 123, 124, 128, 141, 143, 151, 154, 167, 183, 203, 248, 305, 306, 307, 310, 316, 324, 326, 330, 333, 335, 336, 355, 356, 357, 367, 370, 371, 372, 373, 374, 378, 380, 381, 382], "doesn": [5, 6, 132, 138, 333, 335, 356, 357, 362, 363, 384], "matter": [5, 356], "usabl": 5, "try": [6, 14, 60, 138, 336, 337, 353, 356, 357, 359, 364, 384], "stai": [6, 337], "sync": 6, "mpi": [6, 14, 17, 97, 133, 136, 138, 164, 166, 168, 316, 323, 324, 325, 333, 337, 353, 355, 356, 358, 359, 360, 361, 362, 364, 384], "librari": [6, 14, 133, 138, 337, 356, 358, 359, 360, 361, 362, 363, 364, 384], "netcdf": [6, 138, 143, 148, 170, 328, 357, 358, 359, 360, 361, 362, 363, 364], "fortran": [6, 138, 358, 359, 360, 361, 362, 363, 364], "pnetcdf": [6, 138, 358, 359, 360, 361, 362, 363, 364], "mkl": [6, 138], "linear": [6, 19, 122, 123, 124, 306, 307, 317, 318, 319, 323, 326, 327, 356, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381], "algebra": 6, "lib": [6, 138], "bump": 6, "major": [6, 330, 333], "minor": 6, "esmf": [6, 17, 337, 362, 384], "moab": [6, 17, 337, 362, 384], "scorpio": [6, 337, 363, 384], "meti": [6, 85], "parmeti": 6, "trilino": [6, 337], "u": [6, 11, 333, 356, 363, 364, 371, 373, 374, 377, 379, 380], "adn": 6, "sometim": [6, 14, 291, 294, 300, 302, 329, 331, 333, 335, 354, 356, 389], "necessari": [6, 7, 13, 138, 356], "alwai": [6, 7, 9, 12, 57, 138, 141, 146, 197, 210, 231, 257, 309, 313, 330, 333, 335, 336, 337, 349, 354, 356, 357, 375], "correctli": 6, "combin": [6, 38, 40, 49, 57, 63, 96, 126, 157, 160, 333, 334, 335, 353, 356, 357, 384], "experienc": 6, "problem": [6, 333, 337, 353, 356], "intel": [6, 138, 358, 360, 361, 363], "perlmutt": [6, 138, 359, 363, 384], "eigen": 6, "nvidiagpu": 6, "forg": [6, 138, 355, 384], "python": [6, 7, 8, 9, 26, 44, 51, 141, 329, 331, 333, 335, 336, 337, 354, 355, 356, 357, 363, 364, 384], "aren": [6, 11, 38, 39, 138, 333, 336, 337, 356, 389], "constraint": [6, 62, 364, 384], "alpha": [6, 133, 134, 135, 136, 137, 138, 139, 337, 356, 374], "beta": 6, "rc": 6, "remain": [6, 356, 372, 374, 375, 382], "unaffect": 6, "brief": [6, 7, 356], "tour": 6, "login": [6, 138, 337, 359, 362, 364], "node": [6, 14, 25, 37, 38, 42, 45, 62, 92, 93, 94, 138, 164, 306, 307, 309, 310, 312, 333, 334, 336, 337, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384], "bootstrap": 6, "rest": [6, 170, 299, 367, 372], "unifi": [6, 138, 337, 364], "diagnost": [6, 326, 357, 358, 359, 361, 362, 363, 364, 371, 384], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 141, 333, 335, 336, 337, 356], "cach": [6, 20, 25, 38, 40, 114, 115, 164, 355, 357, 363, 369, 384, 389], "own": [6, 7, 8, 9, 11, 12, 19, 38, 138, 141, 333, 335, 336, 337, 354, 356, 357, 371, 372, 373, 380, 381, 384, 390], "config_machin": 6, "xml": [6, 14, 116, 118, 119, 132, 349], "ey": 6, "master": [6, 313, 349, 385], "happen": [6, 9, 12, 17, 109, 333, 356, 371, 372, 373, 380, 381], "me": [6, 356], "dev_quick_start": 6, "fork": [6, 356], "haven": [6, 356], "mkdir": [6, 337], "involv": [6, 14, 310, 333, 354, 356], "coupl": [6, 353, 355], "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 141, 329, 331, 333, 334, 335, 336, 337, 356, 357, 389, 390], "stand": 6, "uupdat": 6, "releas": [6, 138, 336, 355, 363, 368, 384], "omit": [6, 333, 384], "suffix": [6, 40, 115, 333], "spack_for_mache_1": 6, "12": [6, 13, 70, 124, 305, 310, 317, 319, 326, 327, 352, 356, 359, 371, 373, 374, 380, 381, 387], "plu": [6, 354], "discov": 6, "cannot": [6, 356], "uniqu": [6, 7, 14, 138, 335, 356], "worktre": [6, 355, 356], "my": [6, 138, 359], "fetch": [6, 337, 356], "out": [6, 8, 9, 13, 57, 91, 95, 124, 138, 151, 154, 305, 331, 333, 336, 337, 357, 367, 384], "checkout": [6, 337, 356], "miniforge3": [6, 337, 356, 363, 384], "manual": [6, 14, 49, 50, 333, 335, 390], "linux": [6, 138, 337, 363], "x86_64": [6, 138], "our": [6, 138, 336, 356, 384], "found": [6, 9, 14, 127, 138, 306, 307, 336, 337, 355, 356, 358, 359, 360, 361, 362, 363, 364], "exist": [6, 7, 9, 31, 38, 41, 60, 116, 118, 120, 138, 167, 316, 324, 333, 335, 336, 337, 353, 356, 363, 389], "miniconda3": [6, 337], "pleas": [6, 138, 330, 336, 337, 356, 384], "start": [6, 7, 8, 14, 15, 87, 117, 124, 138, 305, 315, 316, 320, 329, 334, 335, 336, 355, 359, 363, 364, 368, 385, 387], "definit": [6, 14, 356], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 75, 101, 107, 114, 115, 120, 138, 141, 195, 208, 229, 255, 277, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 341, 349, 350, 352, 354, 355, 357, 363, 365, 367, 370, 372, 378, 381, 382, 389, 390], "export": [6, 353], "conda_bas": 6, "home": [6, 18, 138, 337, 356, 357, 359, 363, 364], "readi": [6, 356, 364], "configure_polaris_env": [6, 138, 337, 353, 356, 362], "py": [6, 12, 14, 18, 67, 138, 321, 329, 330, 336, 337, 354, 356, 357, 362], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 138, 337], "tmpdir": [6, 138], "group": [6, 7, 11, 61, 243, 321, 329, 355, 358, 360, 363, 364, 378, 383, 384, 390], "spack_temp": 6, "spack_test": 6, "gnu": [6, 138, 337, 358, 359, 360, 361, 362, 363, 364, 384], "openmpi": [6, 133, 138, 337, 355, 358, 360, 361, 384], "impi": [6, 133, 138, 358, 361], "recreat": [6, 335, 337, 353], "request": [6, 7, 14, 15, 25, 32, 34, 138, 141, 151, 154, 164, 292, 293, 333, 335, 336, 337, 353, 356, 357, 371, 372, 373, 380, 381], "twice": [6, 306, 307, 356], "deploy": [6, 337, 358, 359, 360, 361, 362, 364], "prebootstrap": 6, "load": [6, 11, 19, 109, 134, 137, 138, 139, 333, 337, 355, 356, 357, 363], "activ": [6, 19, 138, 363, 364, 384], "differ": [6, 14, 15, 17, 18, 57, 72, 77, 121, 138, 141, 171, 174, 183, 217, 241, 243, 248, 310, 313, 316, 324, 329, 330, 331, 333, 334, 335, 336, 349, 354, 356, 357, 358, 359, 360, 361, 362, 364, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 383, 388], "On": [6, 7, 13, 138, 337, 363], "tmp": [6, 138], "safe": [6, 14, 333, 337, 370], "strictli": [6, 13, 336, 356], "good": [6, 11, 12, 38, 333, 337, 356], "idea": [6, 11, 12, 356], "Be": [6, 364], "awar": [6, 7, 138, 356, 363], "with_petsc": [6, 337], "wa": [6, 8, 48, 59, 121, 138, 333, 335, 336, 337, 353, 354, 356, 357, 367, 375, 384], "limit": [6, 19, 317, 318, 319, 326, 327, 334, 337, 370, 371, 373, 374, 380, 381], "amount": [6, 25, 35, 38, 45, 164, 333, 366, 382], "team": [6, 138, 355], "petsc_support": 6, "txt": [6, 8, 120, 334, 353], "with_albani": [6, 337], "albany_support": 6, "encount": [6, 334, 353], "error": [6, 8, 15, 38, 49, 138, 141, 144, 145, 148, 317, 318, 319, 320, 323, 325, 326, 327, 333, 335, 337, 355, 356, 371, 372, 373, 374, 380, 381], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 153, 162, 176, 182, 200, 221, 245, 333, 335, 336, 337, 356, 357, 384, 389, 390], "attempt": [6, 138, 355, 363], "sh": [6, 133, 134, 135, 136, 137, 138, 139, 337, 353, 356, 384], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 93, 94, 96, 104, 138, 333, 336, 337, 354, 355, 356, 359, 363, 364, 384], "pscratch": 6, "suggest": [6, 138, 353], "seem": [6, 14, 356, 359, 364], "switch": [6, 356, 357], "v0": 6, "19": 6, "submodul": [6, 313, 330, 337, 349, 356, 384], "serv": [6, 114, 115, 120, 141, 329, 356], "kind": [6, 356], "whichev": [6, 313, 349, 367], "load_dev_polaris_0": [6, 133, 134, 135, 136, 137, 138, 139, 356], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 313, 336, 337, 349, 356, 384], "pio": [6, 25, 34, 37, 164, 316, 321, 323, 324, 325], "openmp": [6, 25, 35, 38, 45, 94, 133, 135, 136, 160, 164, 174, 219, 243, 269, 333, 356], "ifort": [6, 133, 135, 138, 356], "ac": [6, 356], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 356, 362, 363, 384], "job_script": [6, 356, 384], "bash": [6, 337, 353, 356, 384], "termin": [6, 8, 138, 333, 337, 356], "isn": [6, 9, 15, 317, 318, 319, 320, 326, 327, 333, 336, 356], "ll": [6, 19, 138, 336, 356, 364, 372], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 133, 135, 136, 138, 337], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 329, 333, 356, 367, 380], "util": [6, 336, 379], "matrix": 6, "automat": [6, 7, 9, 12, 14, 19, 138, 141, 333, 336, 337, 356, 357, 358, 360, 361, 363, 364, 384], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 384], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 136, 138, 141, 333, 336, 356, 362], "integr": [6, 15, 141, 183, 248, 316, 321, 324, 336, 356, 365, 370, 371, 372, 373, 374, 375, 378, 380, 381, 383, 388], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 359, 384], "245": 6, "246": 6, "non": [6, 14, 18, 315, 333, 356, 371, 380, 384], "care": [6, 11, 13, 141, 329, 333, 337, 356], "temporari": [6, 138], "begin": [6, 7, 18, 316, 333, 337, 350, 355, 356, 363, 370, 372, 375, 382], "anymor": 6, "best": [6, 17, 138, 333, 337], "hard": [6, 333, 356, 370, 375, 382], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 63, 122, 123, 124, 151, 154, 333, 335, 356, 387], "myst": [7, 356], "tip": [7, 337], "easi": [7, 9, 40, 336, 356], "pull": [7, 138, 336, 337, 356, 357], "guid": [7, 141, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 334, 336, 356, 358, 359, 360, 361, 362, 363, 364, 368, 385], "baroclin": [7, 9, 14, 171, 172, 173, 174, 177, 180, 183, 185, 188, 189, 191, 219, 269, 316, 330, 333, 356, 368, 376, 390], "channel": [7, 9, 14, 171, 172, 173, 174, 177, 180, 183, 185, 188, 189, 191, 219, 269, 316, 330, 333, 353, 356, 368, 376, 390], "label": [7, 122, 123, 305, 363, 374, 384], "prepend": 7, "categori": [7, 330, 331, 332, 355, 390], "And": [7, 14, 337, 356], "becom": [7, 333, 335, 356], "who": [7, 337, 356, 357, 364], "citat": 7, "basi": [7, 356], "overview": [7, 355, 359, 364], "common": [7, 12, 14, 44, 49, 138, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 353, 354, 356, 357, 363, 364, 365, 383, 384, 388, 389, 390], "characterist": [7, 367, 383, 388], "comment": [7, 334, 357], "appli": [7, 13, 14, 64, 219, 315, 329, 356, 370, 375, 382, 383, 388], "vertic": [7, 15, 19, 86, 124, 146, 147, 197, 210, 211, 231, 242, 243, 248, 257, 268, 304, 305, 306, 307, 309, 310, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 333, 357, 366, 368], "grid": [7, 13, 17, 69, 76, 80, 83, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 141, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 316, 321, 323, 324, 325, 328, 333, 350, 356, 357], "forc": [7, 218, 219, 321, 328, 352, 356, 390], "specif": [7, 9, 14, 19, 51, 138, 141, 313, 329, 330, 331, 333, 349, 350, 355, 356, 357, 359, 363, 370, 375, 378, 383, 384, 388, 389], "public": [7, 11, 333, 356, 357], "api": [7, 12, 355, 356], "underscor": [7, 356], "md": [7, 356], "eval": 7, "rst": [7, 14, 356], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 330, 336], "compute_cell_count": [7, 141, 316, 323, 324, 325, 356], "dynamic_model_config": [7, 14, 316, 324, 356], "ot": [7, 356], "numpydoc": [7, 356], "text": [7, 8, 370, 372, 374, 382], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 19, 141, 160, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 310, 313, 321, 323, 325, 333, 356, 357, 359, 362, 364, 367, 374, 375, 377, 379], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 158, 159, 313, 321, 357, 365, 375, 377, 379], "overli": [7, 356, 375], "ic": [7, 156, 158, 159, 217, 218, 222, 224, 226, 313, 321, 335, 336, 337, 350, 352, 355, 356, 357, 359, 366, 367, 368, 376, 387, 390], "shelf": [7, 156, 158, 217, 218, 222, 224, 226, 321, 329, 336, 356, 357, 366, 367, 368, 376], "draft": [7, 321, 367], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 75, 80, 81, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 141, 143, 144, 145, 146, 147, 148, 151, 153, 154, 156, 157, 158, 160, 162, 163, 164, 167, 169, 170, 172, 173, 174, 176, 177, 180, 181, 182, 183, 185, 188, 189, 191, 193, 196, 197, 198, 200, 201, 203, 204, 206, 209, 210, 211, 212, 213, 215, 218, 219, 221, 222, 224, 226, 228, 230, 231, 232, 233, 234, 235, 237, 239, 242, 243, 245, 246, 248, 250, 252, 254, 256, 257, 258, 259, 260, 261, 263, 265, 269, 271, 273, 275, 278, 279, 280, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 323, 325, 329, 333, 335, 341, 342, 343, 345, 346, 347, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382], "xarrai": [7, 15, 17, 19, 86, 123, 124, 141, 146, 147, 197, 210, 211, 231, 257, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 356], "dataarrai": [7, 86, 123, 124, 146, 147, 197, 210, 211, 231, 232, 233, 234, 257, 258, 259, 260, 292, 293, 297, 298, 299, 304, 305, 306, 307, 310, 311, 312], "sea": [7, 141, 158, 159, 232, 234, 258, 260, 293, 297, 298, 299, 304, 305, 310, 313, 321, 350, 352, 355, 356, 357, 367, 375, 377, 379, 387, 390], "surfac": [7, 141, 158, 159, 232, 234, 258, 260, 293, 297, 298, 299, 304, 305, 310, 313, 315, 321, 328, 352, 356, 357, 367, 370, 375, 377, 378, 379, 382], "height": [7, 124, 141, 158, 159, 232, 234, 258, 260, 293, 297, 298, 299, 305, 310, 313, 321, 356, 357, 367, 375, 377, 379], "mask": [7, 124, 291, 294, 297, 300, 302, 333, 356, 357, 367], "landicepressur": [7, 365, 375], "deviat": 7, "float": [7, 9, 14, 26, 68, 70, 71, 75, 80, 87, 97, 102, 121, 123, 124, 141, 143, 144, 145, 146, 147, 151, 154, 156, 160, 163, 169, 172, 173, 174, 177, 180, 183, 185, 188, 193, 196, 197, 198, 203, 206, 209, 210, 211, 212, 218, 219, 222, 230, 231, 232, 233, 234, 235, 237, 239, 243, 248, 250, 254, 256, 257, 258, 259, 260, 261, 263, 265, 269, 275, 278, 279, 280, 282, 285, 305, 306, 307, 333, 335, 356], "densiti": [7, 13, 141, 356], "seawat": 7, "displac": 7, "land": [7, 141, 159, 313, 321, 335, 355, 356, 357, 365, 367, 375], "landicedraft": 7, "equal": [7, 328, 333, 336, 375, 382], "entri": [7, 54, 87, 90, 115, 124], "line": [7, 10, 36, 38, 93, 94, 104, 124, 138, 333, 334, 336, 337, 355, 384], "type": [7, 14, 17, 18, 19, 26, 99, 106, 132, 138, 141, 144, 203, 268, 270, 305, 317, 318, 319, 326, 327, 329, 333, 335, 336, 337, 349, 353, 354, 356, 357, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 389], "side": 7, "colon": 7, "doubl": [7, 14, 141, 333, 334, 356], "back": [7, 356, 359, 384], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 93, 94, 333], "next": [7, 138, 157, 316, 321, 324, 356, 367, 375, 384], "indent": [7, 333], "obviou": [7, 14, 356], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 63, 64, 66, 68, 75, 81, 85, 87, 96, 97, 98, 101, 102, 105, 107, 111, 115, 116, 120, 121, 122, 123, 124, 127, 131, 141, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 157, 158, 160, 161, 164, 165, 169, 174, 175, 197, 199, 210, 211, 219, 220, 231, 236, 243, 244, 257, 258, 262, 269, 279, 297, 305, 307, 333, 335, 345, 356, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 387], "els": [7, 8, 138, 333, 335, 356], "further": [7, 329, 335, 364, 383, 388], "rais": [7, 9, 18, 38, 41, 59, 60, 141, 333, 336, 356, 374], "list_cas": 8, "list_machin": [8, 336], "list_suit": 8, "anywher": [8, 12, 138, 337], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 89, 108, 109, 112, 116, 126, 127, 131, 132, 151, 154, 157, 160, 232, 258, 330, 335, 336, 356], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 61, 88, 89, 126, 141, 315, 333, 335, 356], "properti": [8, 275, 315, 333, 363, 371, 372, 373, 380, 381], "setup_suit": 8, "write": [8, 11, 12, 13, 16, 19, 61, 108, 126, 290, 305, 333, 335, 337, 352, 356], "proven": [8, 10, 57, 355, 357], "save": [8, 19, 59, 83, 138, 305, 316, 317, 318, 319, 320, 326, 327, 329, 333, 335, 356, 363, 369, 370, 375], "target": [8, 11, 17, 18, 25, 40, 60, 63, 87, 97, 138, 141, 164, 316, 323, 324, 325, 333, 335, 356, 371, 372, 373, 380, 381], "minimum": [8, 63, 123, 124, 141, 145, 160, 164, 279, 305, 316, 323, 324, 325, 333, 356, 357, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 86, 87, 124, 132, 138, 141, 160, 168, 275, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 333, 356, 365, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 388], "maximum": [8, 18, 121, 123, 124, 203, 279, 305, 356, 357, 367], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 93, 94, 97, 141, 160, 164, 174, 219, 243, 269, 333, 335, 356], "cpus_per_task": [8, 14, 38, 42, 45, 93, 94, 333], "quickli": [8, 375], "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 356, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 93, 94, 97, 141, 160, 164, 174, 219, 243, 269, 333, 356], "min_cpus_per_task": [8, 14, 38, 45, 93, 94, 333], "fewest": 8, "least": [8, 13, 330, 337, 370, 374], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 138, 141, 160, 164, 174, 219, 243, 269, 333, 355, 356, 357, 371, 372, 373, 374, 377, 379, 380, 381], "run_task": [8, 333, 335], "run_single_step": 8, "oper": [8, 47, 138, 179, 187, 333, 335, 389], "log": [8, 10, 19, 38, 49, 94, 121, 122, 123, 124, 333, 335, 337, 355, 384], "figur": [8, 19, 123, 124, 305, 323, 325, 328, 329, 331, 333, 357, 371, 373, 380, 381], "cpu": [8, 138, 333, 356, 362, 384], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 67, 68, 72, 75, 76, 77, 81, 82, 97, 103, 126, 141, 142, 143, 145, 146, 151, 153, 154, 156, 158, 160, 162, 164, 167, 172, 173, 174, 176, 177, 180, 181, 182, 183, 185, 188, 189, 191, 193, 196, 197, 198, 200, 201, 204, 206, 209, 210, 212, 213, 215, 218, 219, 221, 222, 224, 226, 228, 230, 231, 232, 235, 237, 239, 242, 243, 245, 246, 248, 250, 252, 254, 255, 256, 257, 258, 261, 263, 265, 268, 269, 270, 271, 273, 275, 278, 280, 282, 283, 285, 287, 305, 323, 325, 330, 333, 335, 336, 340, 342, 343, 345, 346, 347, 356, 365, 372, 383, 388], "retriev": [8, 353], "store": [8, 11, 19, 51, 138, 141, 321, 323, 325, 333, 356, 371, 373, 380, 381, 384], "case_output": [8, 12], "individu": [8, 9, 19, 330, 335, 336, 356, 363, 364, 370, 375, 384, 390], "overal": 8, "whole": [8, 49, 170, 329, 335, 336, 356, 375, 384], "window": 8, "update_cach": 8, "_cached_fil": [8, 333], "origin": [8, 55, 304, 306, 307, 310, 337, 356, 367, 384], "enabl": [8, 19, 328, 333, 353, 357, 364, 377, 379], "consum": [8, 333, 335, 356, 389], "faster": [8, 337], "parser": [9, 46, 53, 57, 183, 193, 206, 248, 275], "mpas_tool": [9, 12, 13, 80, 316, 321, 323, 324, 325, 328, 333, 335, 356], "mpasconfigpars": [9, 333, 335], "polarisconfigpars": [9, 11, 17, 21, 38, 46, 49, 53, 59, 62, 63, 92, 95, 96, 112, 122, 123, 141, 157, 183, 193, 206, 218, 232, 248, 258, 275, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 356], "certain": [9, 18, 57, 138, 333, 337, 357, 383, 388], "filepath": [9, 17, 46, 53, 57, 141], "overridden": [9, 31, 58, 141, 167, 356], "algorithm": [9, 14, 141, 269, 316, 323, 324, 325, 333, 356], "featur": [9, 14, 336, 337, 354, 356, 357, 365, 370, 378, 382], "accommod": [9, 25, 35, 38, 45, 93, 94, 164], "add_from_packag": [9, 11, 17, 141, 333, 335, 336, 356], "content": [9, 14, 115, 116, 118, 120, 132, 141, 329, 331, 333, 336, 352, 356, 384, 387], "inertial_gravity_wav": [9, 313, 322, 325, 330, 335, 377, 389], "inertialgravitywav": [9, 323, 335], "import": [9, 11, 12, 13, 15, 17, 18, 19, 141, 329, 330, 333, 335, 336, 337, 354, 356], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 67, 68, 75, 81, 97, 126, 141, 142, 143, 151, 154, 156, 158, 160, 164, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 193, 196, 198, 201, 204, 206, 209, 212, 213, 215, 218, 219, 222, 224, 226, 228, 230, 232, 235, 237, 239, 242, 243, 246, 248, 250, 252, 254, 256, 258, 261, 263, 265, 268, 269, 270, 271, 273, 275, 278, 280, 282, 283, 285, 287, 329, 330, 333, 335, 336, 340, 342, 343, 345, 346, 347, 354, 356], "super": [9, 14, 17, 18, 141, 330, 333, 335, 336, 356], "cfg": [9, 11, 17, 51, 141, 330, 335, 336, 356, 357, 371, 373, 380, 381, 384], "except": [9, 38, 41, 59, 305, 333, 336, 356, 378, 381], "behavior": [9, 14, 111, 141, 333, 334, 337, 356], "noth": [9, 138, 353, 371, 372, 373, 380, 381], "particular": [9, 138, 304, 329, 337, 355, 359, 363, 384], "fine": [9, 335, 356, 382], "_get_basic_config": 9, "larg": [9, 321, 333, 335, 356, 358, 375, 380], "those": [9, 14, 49, 121, 138, 141, 316, 324, 335, 336, 337, 355, 356, 371, 372, 373, 374, 375, 380, 381, 383, 388, 389], "configpars": [9, 93, 94], "getinteg": 9, "getfloat": [9, 12, 14, 17, 141, 333, 356], "getboolean": [9, 333, 356], "implement": [9, 321, 330, 333, 336, 370, 371, 372, 373, 374, 377, 379, 380, 381], "getlist": [9, 335, 356], "comma": [9, 371, 372, 373, 380, 381], "integ": [9, 13], "boolean": [9, 124, 297], "etc": [9, 14, 117, 120, 330, 333, 370], "getexpress": 9, "tupl": [9, 123, 124, 305], "rang": [9, 19, 124, 356, 378], "numpi": [9, 13, 15, 69, 76, 77, 83, 87, 122, 124, 141, 170, 289, 290, 306, 307, 333, 356], "linspac": [9, 19, 372], "arang": 9, "arrai": [9, 15, 69, 76, 77, 83, 122, 141, 289, 290, 292, 293, 297, 298, 304, 311, 312, 356], "sens": [9, 355, 356], "set_shared_config": [9, 17, 335], "intuit": 9, "resolution_to_subdir": [9, 330], "rpe": [9, 191, 330, 336, 356, 384], "resdir": [9, 330], "config_filenam": [9, 38, 49, 157, 333, 335], "indir": [9, 25, 38, 49, 97, 158, 160, 164, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 218, 219, 222, 224, 226, 242, 243, 246, 248, 250, 252, 269, 271, 273, 330, 333, 343, 345, 347], "add_task": [9, 329, 330], "most": [9, 12, 44, 138, 313, 329, 330, 333, 336, 337, 349, 356, 357, 362, 363, 364, 367, 368, 385, 390], "construct": [9, 14, 142, 156, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 309, 310, 315, 328, 330, 335, 340, 356, 370, 374], "bring": [9, 141, 356, 365], "add_step": [9, 335, 356], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 174, 185, 243, 250, 316, 324, 333, 356], "baroclinic_channel_rp": 9, "viscos": [9, 14, 174, 183, 185, 243, 248, 250, 316, 324, 333, 336, 356, 370, 378], "dtype": [9, 335, 356], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 94, 160, 164, 174, 219, 243, 269, 333, 335, 356], "add_yaml_fil": [9, 14, 25, 141, 333, 335, 356], "One": [9, 13, 356, 384, 389], "advantag": [9, 14, 138, 335, 336, 356, 363], "track": [9, 25, 333, 335, 337], "associ": [9, 13, 14, 15, 19, 141, 291, 294, 300, 302, 306, 307, 316, 317, 319, 324, 326, 327, 333, 335, 337, 354, 375], "while": [10, 17, 19, 315, 316, 333, 353, 356, 375], "meant": [10, 336, 357], "simplifi": [10, 321, 375], "verifi": [10, 334, 357], "io": [10, 333, 335, 336, 355, 356, 357, 368, 385], "lot": [11, 141, 333, 336, 356], "o": [11, 12, 116, 118, 132, 138, 336, 337, 356, 357, 384], "handl": [11, 12, 337, 356, 363, 374], "lower": [11, 19, 335, 356, 370], "directli": [11, 13, 14, 17, 38, 141, 331, 333, 336, 354, 355, 356, 359], "readm": [11, 335], "importlib": 11, "resourc": [11, 14, 35, 38, 42, 45, 92, 93, 94, 152, 155, 161, 165, 175, 199, 220, 236, 244, 262, 269, 316, 323, 324, 325, 333, 335, 356], "global_ocean": [11, 14, 333, 335, 336, 337, 357, 384], "files_for_e3sm": [11, 333, 335, 357], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 60, 61, 62, 63, 64, 68, 75, 81, 85, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 141, 143, 144, 145, 146, 147, 148, 151, 154, 157, 158, 160, 163, 164, 169, 170, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 196, 197, 198, 201, 204, 209, 210, 211, 212, 213, 215, 218, 219, 222, 224, 226, 230, 231, 235, 237, 239, 242, 243, 246, 248, 250, 256, 257, 261, 263, 265, 269, 271, 273, 278, 279, 280, 282, 283, 285, 287, 290, 305, 333, 335, 343, 345, 347, 356], "did": [11, 354, 356], "add_input_fil": [11, 17, 18, 39, 333, 335, 356], "collect": [11, 100, 142, 330, 332, 340, 354, 356], "whenev": [11, 333, 356], "flexibl": [11, 141, 333, 335, 337, 356], "No": [11, 355, 377, 379], "step_dir": 11, "database_root": [11, 138, 333, 357, 358, 359, 360, 361, 362, 363, 364, 384], "download_path": 11, "join": [11, 356], "bathymetry_databas": [11, 333, 357], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 297, 329, 333, 356, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 390], "url": [11, 40, 59, 333, 353, 357], "web": [11, 333, 357], "anl": [11, 333, 357], "gov": [11, 333, 353, 357, 359, 362, 364], "mpas_standalonedata": [11, 138, 357, 363], "dest_path": [11, 59], "remot": [11, 40, 337, 355], "bathymetri": [11, 304, 310, 333, 357], "access": [11, 39, 335, 336, 337, 356, 358, 363, 364], "update_permiss": 11, "along": [11, 14, 19, 138, 305, 306, 307, 316, 321, 324, 333, 355, 356], "151209": 11, "omega_ctest": 11, "readabl": [11, 336], "writabl": 11, "identifi": [11, 114, 138, 330, 349, 390], "e3sm_unifi": 11, "polaris_machin": 11, "base_url": 11, "filenam": [11, 17, 18, 38, 40, 41, 49, 91, 98, 99, 100, 101, 105, 106, 107, 121, 123, 127, 129, 157, 158, 160, 333, 335, 337, 356], "database_path": 11, "download_target": 11, "has_opt": 11, "full_path": 11, "count": [11, 334, 354], "strategi": [12, 358, 359, 360, 361, 362, 364], "stderr": [12, 38, 49, 333, 335], "loggingcontext": 12, "check_cal": [12, 333], "won": [12, 336, 356, 357], "logger": [12, 18, 38, 49, 67, 94, 121, 333, 335, 356], "full": [12, 38, 93, 111, 224, 292, 293, 306, 307, 316, 333, 335, 352, 355, 356, 363, 367, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 384], "although": [12, 141], "captur": [12, 378], "explicit": [12, 336], "go": [12, 46, 53, 271, 273, 329, 333, 335, 336, 337, 356, 364], "subprocess": [12, 38, 93, 94, 110, 333, 336, 353], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 141, 148, 157, 158, 172, 180, 188, 219, 226, 310, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 333, 336, 337, 342, 352, 356, 371, 373, 377, 379, 380, 381, 384, 387], "otherwis": [12, 19, 138, 333, 335, 356, 358, 359, 360, 361, 362, 363, 364, 370], "intent": 12, "desir": [12, 13, 14, 18, 19, 121, 141, 333, 334, 335, 356, 357, 384], "trick": [12, 333], "direct": [12, 13, 14, 80, 232, 258, 316, 321, 323, 324, 325, 356, 364, 370, 375, 377, 378, 379], "snippet": [12, 356], "dome": [12, 67, 329, 333, 335, 384, 390], "setup_mesh": [12, 333], "setupmesh": [12, 333, 335], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 333], "landice_grid": [12, 333, 356], "l": [12, 121, 141, 356, 364], "quasiuniformsphericalmeshstep": [13, 141, 335], "icosahedralmeshstep": [13, 141, 335], "jigsaw": [13, 68, 72, 74, 75, 77, 79, 81, 193, 206, 275, 280, 285, 333, 337, 355], "complex": [13, 76, 335, 336, 356], "build_cell_width_lat_lon": [13, 75], "opt": [13, 81], "make_jigsaw_mesh": [13, 75], "icosahedr": [13, 68, 70, 163, 193, 206, 275, 280, 285, 317, 318, 319, 320, 326, 327, 335, 371, 372, 373, 374, 380, 381], "significantli": [13, 367, 374], "smooth": [13, 97, 305], "cell": [13, 14, 15, 19, 68, 69, 70, 71, 75, 76, 77, 80, 83, 86, 97, 99, 106, 124, 141, 152, 155, 161, 164, 165, 175, 199, 220, 232, 234, 236, 244, 258, 260, 262, 291, 292, 293, 294, 297, 300, 302, 304, 305, 306, 307, 309, 310, 311, 312, 316, 323, 324, 325, 329, 350, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 387], "quasi": [13, 75, 317, 318, 319, 320, 326, 327, 335, 357, 371, 372, 373, 374, 375, 380, 381, 383, 388], "hand": [13, 102, 336], "restrict": [13, 356, 378, 383], "subdivis": [13, 68, 69, 70, 71, 72], "icosahedron": [13, 69, 70, 71, 72], "tabl": [13, 337, 363, 384], "approxim": [13, 68, 70, 71, 75, 141, 152, 155, 161, 165, 175, 199, 220, 236, 244, 262, 316, 323, 324, 325, 337, 356], "width": [13, 68, 69, 70, 75, 76, 77, 83, 124, 305, 356, 370, 375, 378], "km": [13, 14, 68, 69, 70, 71, 75, 76, 77, 80, 83, 141, 151, 154, 156, 160, 163, 172, 173, 174, 177, 180, 181, 183, 185, 188, 198, 212, 218, 219, 222, 235, 237, 248, 254, 261, 263, 282, 316, 317, 318, 319, 320, 323, 325, 326, 327, 333, 356, 357, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388, 390], "5": [13, 14, 70, 123, 138, 141, 183, 248, 316, 320, 333, 334, 336, 353, 356, 357, 370, 371, 372, 373, 374, 375, 378, 380, 381, 383, 384, 388], "240": [13, 70, 141, 317, 318, 319, 320, 326, 327, 357, 371, 372, 373, 380, 381], "6": [13, 70, 305, 306, 307, 333, 356, 365, 368, 370, 371, 380, 382, 384, 385], "120": [13, 70, 141, 334, 371, 372, 373, 374, 380, 381], "7": [13, 70, 138, 356, 364, 371, 372, 375, 381, 384], "60": [13, 70, 141, 317, 318, 319, 320, 326, 327, 367, 371, 372, 373, 375, 380, 381], "8": [13, 70, 123, 138, 316, 337, 356, 357, 370, 372, 377, 379, 381, 384], "30": [13, 14, 70, 141, 329, 356, 362, 364, 370, 375, 382, 383, 388], "9": [13, 19, 70, 138, 356, 371, 372, 373, 380, 381, 384], "15": [13, 14, 70, 316, 321, 356, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 388], "11": [13, 70, 138, 356, 384], "3": [13, 70, 137, 138, 141, 306, 307, 316, 324, 333, 334, 337, 353, 356, 357, 363, 364, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384], "13": [13, 70, 356, 370], "94": [13, 70, 374], "spherical_mesh": [13, 76], "cell_width": [13, 68, 69, 70, 71, 75, 76, 77, 83], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 83, 122, 123, 124, 141, 143, 148, 185, 191, 204, 215, 250, 273, 287, 304, 305, 306, 307, 310, 316, 317, 318, 319, 320, 324, 326, 327, 347, 371, 372, 373, 374, 377, 378, 379, 380, 381, 387, 390], "plot_cell_width": 13, "cell_width_filenam": [13, 83], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 307, 317, 318, 319, 320, 326, 327, 357, 372], "lon": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 307, 317, 318, 319, 320, 326, 327, 357, 372], "sphere": [13, 277, 278, 280, 282, 285, 317, 318, 319, 320, 326, 327, 371, 372, 373, 380, 381], "vtk_lat_lon": 13, "far": [13, 138, 291, 300, 302, 336, 356], "But": [13, 138, 329, 333, 336, 337, 356, 357, 363], "hexagon": [13, 80, 356, 377, 379], "planar_hex": [13, 80, 316, 321, 323, 324, 325, 328, 333, 356], "make_planar_hex_mesh": [13, 80, 316, 321, 323, 324, 325, 328, 333, 356], "x": [13, 19, 69, 76, 77, 80, 83, 101, 107, 124, 141, 170, 232, 258, 304, 306, 321, 333, 356, 370, 375, 377, 379, 382], "y": [13, 14, 19, 80, 101, 107, 124, 141, 232, 258, 304, 306, 316, 321, 323, 324, 325, 333, 356, 364, 370, 375, 377, 378, 379], "nx": [13, 80, 329, 333, 356, 382], "ny": [13, 80, 329, 333, 356, 382], "dc": [13, 329, 333, 356], "distanc": [13, 80, 97, 203, 306, 307, 356, 370, 378], "adjac": [13, 309, 367], "center": [13, 19, 80, 123, 203, 232, 258, 305, 306, 307, 308, 309, 329, 356, 367, 370, 378], "admittedli": 13, "oddli": 13, "period": [13, 315, 316, 317, 319, 321, 323, 324, 325, 326, 327, 333, 356, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381], "nonperiodic_x": [13, 333, 356], "nonperiodic_i": [13, 333, 356], "consider": [13, 291, 294, 300, 302, 315, 350], "compute_planar_hex_nx_ni": [13, 333, 356], "lx": [13, 80, 333, 356, 370, 375, 377, 378, 379, 382], "ly": [13, 80, 333, 356, 370, 375, 378, 382], "explan": 13, "subtleti": 13, "account": [13, 80, 337, 356, 358, 359, 361, 362, 363, 364, 384], "behav": 13, "stagger": [13, 80], "physic": [13, 80, 346, 352, 356, 367], "np": [13, 15, 19, 203, 333, 356, 372], "sqrt": [13, 15, 377], "domain": [13, 25, 32, 80, 124, 141, 156, 164, 170, 315, 329, 350, 356, 370, 372, 374, 375, 377, 378, 379, 382, 383, 388, 390], "extra": [13, 337, 362], "factor": [13, 97], "500e3": 13, "160e3": 13, "1e3": [13, 333, 356], "max": [13, 141, 333, 356, 367, 370, 372, 378], "int": [13, 14, 25, 26, 35, 38, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 87, 93, 94, 97, 123, 124, 143, 144, 146, 147, 148, 152, 155, 160, 161, 164, 165, 174, 175, 197, 199, 210, 211, 219, 220, 231, 236, 243, 244, 257, 262, 269, 305, 333, 356, 382], "ds_mesh": [13, 15, 19, 86, 124, 306, 307, 309, 333, 356], "creation": [13, 333, 357], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 93, 94, 164, 329, 333, 336, 356], "distant": 13, "descend": [14, 17, 141, 317, 318, 319, 320, 323, 325, 326, 327, 329, 330, 333, 335, 336, 356], "modelstep": [14, 141, 333, 335, 356], "update_pio": [14, 25, 164], "make_graph": [14, 25, 164], "At": [14, 38, 49, 331, 332, 335, 356, 365, 374], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 94, 160, 164, 174, 219, 243, 269, 330, 333, 334, 354, 356, 357, 359, 362, 364, 384, 389], "prefix": [14, 40, 138, 141, 146, 147, 197, 210, 211, 231, 257, 335, 337, 357], "end": [14, 124, 151, 154, 305, 306, 307, 333, 335, 336, 337, 352, 354, 356, 359, 370, 371, 372, 377, 379, 382, 387], "yml": 14, "reason": [14, 17, 44, 138, 333, 336, 356, 389], "add_namelist_fil": [14, 25, 141, 333, 335], "add_model_config_opt": [14, 25, 141, 333, 335, 356], "add_streams_fil": [14, 25, 141, 333, 335], "themselv": [14, 336, 355], "question": [14, 333, 357], "never": [14, 138, 354], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 141, 356], "config_run_dur": [14, 141, 335, 356], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 172, 354, 356], "config_block_decomp_file_prefix": [14, 356], "time_integr": [14, 141, 356, 365, 371, 372, 373, 374, 375, 380, 381], "config_time_integr": [14, 141], "rk4": [14, 141, 321, 336, 371, 372, 373, 374, 375, 380, 381], "filename_templ": [14, 141, 356], "restart": [14, 18, 49, 141, 218, 219, 224, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 334, 336, 342, 343, 352, 354, 356, 375, 384, 389], "output_interv": [14, 141, 356, 365, 371, 372, 373, 374, 375, 380, 381], "0030_00": 14, "clobber_mod": [14, 141, 356], "truncat": [14, 141, 356], "reference_tim": [14, 141], "0001": [14, 141, 356], "01_00": [14, 141, 350, 356], "tracer": [14, 19, 193, 203, 270, 271, 273, 275, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 356, 368, 372, 373, 376, 377, 379, 380, 381, 382], "xtime": [14, 15, 87, 141, 356], "normalveloc": [14, 18, 19, 141, 190, 225, 259, 315, 316, 321, 323, 324, 325, 328, 333, 356, 382], "layerthick": [14, 18, 141, 190, 225, 291, 294, 298, 299, 300, 302, 304, 316, 321, 323, 324, 325, 328, 333, 356], "refzmid": [14, 291, 294, 300, 302, 333, 356], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 356], "clariti": [14, 333], "global_converg": [14, 335, 356, 369], "substitut": 14, "config_write_output_on_startup": [14, 356], "0000_00": [14, 356], "config_use_mom_del2": [14, 356], "config_implicit_bottom_drag_coeff": [14, 356], "0e": [14, 379, 382], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 356], "config_cvmix_background_viscos": [14, 356], "worri": 14, "togeth": [14, 18, 138, 329, 354, 356, 389], "overkil": 14, "reli": [14, 333, 335, 356], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 89, 90, 92, 96, 97, 113, 115, 116, 122, 126, 127, 128, 141, 143, 151, 154, 157, 160, 167, 196, 209, 230, 256, 278, 280, 285, 333, 335, 356], "config_mom_del2": [14, 316, 324, 333, 356], "precis": [14, 141, 333, 356], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 60, 61, 64, 110, 111, 115, 120, 121, 122, 123, 124, 128, 153, 162, 163, 164, 176, 182, 193, 200, 206, 218, 219, 221, 245, 269, 271, 273, 275, 280, 285, 304, 305, 307, 356], "possibli": [14, 38, 49, 311, 312, 330, 333, 335, 337, 356], "at_setup": [14, 30, 153, 162, 176, 182, 200, 221, 245, 356], "being": [14, 30, 38, 49, 110, 112, 115, 121, 138, 141, 153, 162, 176, 182, 200, 221, 245, 305, 321, 333, 335, 336, 356, 367], "dt": [14, 141, 174, 269, 333, 356, 370, 371, 372, 373, 374, 377, 379, 380, 381, 383, 388], "proport": [14, 141, 356, 367, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 383, 388], "dt_per_km": [14, 141, 317, 318, 319, 320, 326, 327, 356, 370, 375, 377, 379, 383, 388], "stackoverflow": [14, 60, 356], "1384565": [14, 356], "7728169": [14, 60, 356], "config_dt": [14, 141, 356], "strftime": [14, 356], "gmtime": [14, 356], "run_time_step": [14, 174, 243, 333, 356], "durat": [14, 141, 316, 323, 324, 325, 328, 334, 356, 365], "run_second": [14, 356], "btr_dt": [14, 141, 174, 269, 333, 356, 370], "btr_dt_per_km": [14, 141, 356, 365, 370, 375], "config_btr_dt": [14, 141, 356], "bit": [14, 138, 336, 354, 356, 370, 375, 384], "complic": [14, 336, 337, 356], "slightli": [14, 337], "sophist": 14, "immutable_stream": [14, 356], "var_struct": [14, 349], "var": [14, 117, 349, 356], "var_arrai": [14, 349], "tag": [14, 355], "taken": [14, 25, 164, 307, 317, 318, 319, 320, 326, 327, 333, 356, 364, 384], "past": 14, "experi": [14, 138, 336, 367], "difficult": [14, 138, 363], "synchron": [14, 355], "out_nam": 14, "equival": [14, 337, 356, 358], "template_replac": [14, 28, 29, 141], "treat": [14, 334, 336], "jinja2": [14, 28, 29, 116, 151, 154], "render": [14, 28, 29, 116], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 333, 336, 337, 357, 384], "qu240dynamicadjust": 14, "adjust": [14, 138, 141, 158, 159, 160, 313, 321, 357, 375], "interv": [14, 15, 169, 365, 371, 372, 373, 374, 375, 380, 381], "spin": 14, "reus": [14, 19, 124, 333, 336, 337, 356, 357, 384], "qualit": 14, "forgotten": 14, "broken": [14, 333, 336], "immedi": [14, 67, 337, 356], "miss": [14, 333, 356, 357], "detect": [14, 19, 357, 358, 360, 361, 363, 374, 384], "gpmeti": [14, 357], "divid": [14, 19, 309, 367], "partition_graph": [14, 25, 164], "circumst": [14, 18, 38, 39, 333, 356], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 353, 356, 375, 383, 388], "v1": [14, 367], "better": [14, 17, 138, 384], "v2": [14, 357, 367], "littl": [14, 336, 337, 355, 356], "feel": [14, 138, 333, 356], "runtime_setup": [14, 17, 35, 45, 316, 321, 323, 324, 325, 335], "yourself": [14, 356, 363], "culler": 14, "cull": [14, 316, 321, 323, 324, 325, 333, 356], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 83, 85, 86, 123, 124, 141, 144, 145, 146, 147, 197, 204, 210, 211, 215, 231, 257, 279, 287, 291, 294, 300, 302, 304, 305, 306, 307, 310, 311, 312, 315, 316, 320, 323, 324, 325, 328, 356, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381], "weight": [14, 15, 17, 85, 158, 291, 294, 300, 302, 306, 307, 309, 310, 356, 367], "weight_field": [14, 85], "helper": [15, 329, 330], "handi": 15, "area_for_field": 15, "right": [15, 137, 138, 139, 141, 305, 335, 337, 356, 357, 367, 370, 372, 384], "edg": [15, 19, 86, 99, 102, 106, 123, 124, 232, 233, 258, 259, 306, 307, 308, 315, 356], "dimens": [15, 19, 86, 124, 141, 143, 148, 197, 210, 304, 311, 312, 328, 370, 375], "statist": [15, 357], "calcul": [15, 323, 333, 335], "xr": [15, 19, 232, 233, 234, 258, 259, 260, 333, 356], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 147, 211], "mesh_filenam": [15, 19, 25, 85, 123, 157, 158, 164, 170], "open_dataset": [15, 19, 333, 356], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 87, 141, 312, 329], "get_output_field": [15, 141], "field_nam": [15, 19, 124, 145, 146, 147, 197, 210, 211, 231, 257, 279], "output_filenam": [15, 141, 151, 154, 170], "ds_out": [15, 306, 307], "time_index": [15, 87], "isel": [15, 19, 304], "frequent": [17, 313, 349], "observ": [17, 306, 307, 310, 355], "dataset": [17, 86, 87, 124, 232, 258, 291, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 356], "region": [17, 19, 355, 357, 375], "pyremap": [17, 103], "interpol": [17, 97, 305, 306, 307, 309, 310, 311, 312, 357], "hood": 17, "esmf_regridweightgen": 17, "mbtempest": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 362, 367], "bilinear": [17, 97, 305, 372, 383, 388], "my_test_cas": 17, "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 357], "destin": [17, 97, 98, 99, 100, 101, 102, 103], "src_from_lon_lat": 17, "lon_var": [17, 98, 100, 105], "lat_var": [17, 98, 100, 105], "dst_from_mpa": 17, "mesh_nam": [17, 98, 99, 100, 101, 102, 105, 106, 107, 144, 146, 147, 163, 197, 204, 210, 211, 215, 231, 257, 287, 335], "qu60": 17, "subclass": [17, 72, 75, 76, 77, 82, 141, 356], "src_": 17, "dst_": 17, "pick": [17, 108, 109], "vizmap": [17, 193, 206, 218, 275, 335], "128": [17, 334, 359, 360, 364], "cosine_bell_viz": [17, 19, 318, 372, 383, 388], "dlon": [17, 102, 372, 383, 388], "dlat": [17, 102, 372, 383, 388], "remap_method": [17, 372, 383, 388], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 102], "map_tool": 17, "perhap": [17, 19, 41, 305, 329, 331], "cover": [17, 350, 356], "nearli": [17, 333, 335, 354, 355, 356], "workflow": [17, 333, 337], "critic": [18, 356], "easiest": [18, 138, 337], "validate_var": [18, 38, 41, 141, 151, 154, 269, 333], "meth": 18, "add_output_fil": [18, 39, 333, 335, 356], "temperatur": [18, 190, 225, 315, 316, 321, 324, 325, 328, 333, 352, 356, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 388], "salin": [18, 190, 225, 315, 316, 321, 324, 328, 333, 356, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 383, 388], "done": [18, 35, 45, 333, 335, 337, 356, 384], "compare_vari": [18, 356], "filename1": [18, 121, 356], "filename2": [18, 121, 356], "compact": [18, 356], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 121], "valueerror": [18, 336], "quiet": [18, 110, 111, 121, 128], "report": 18, "threshold": [18, 141, 326, 371, 372, 373, 374, 377, 379, 380, 381], "l1": [18, 121], "00000000000000e": 18, "l2": [18, 121, 141, 144, 145, 317, 318, 319, 320, 326, 327, 371, 372, 373, 374, 377, 379, 380, 381], "l_infin": 18, "linf": [18, 121], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 316, 370], "2thread": [18, 370], "test_20210616": 18, "further_valid": 18, "zero": [18, 292, 293, 297, 298, 299, 304, 306, 307, 310, 315, 316, 321, 324, 328, 356, 371, 372, 373, 375, 380, 381, 382], "l1_norm": [18, 121], "l2_norm": [18, 121], "linf_norm": [18, 121], "nonzero": [18, 121], "solut": [18, 136, 144, 146, 147, 197, 210, 211, 231, 232, 233, 234, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 318, 320, 323, 325, 334, 353, 356, 368, 374, 376, 377], "aspect": [19, 124, 356], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 138, 159, 164, 313, 337, 356, 357, 370, 378], "plot_horiz_field": [19, 333, 356], "patch": [19, 123, 124, 356], "polygon": 19, "character": [19, 371, 373, 378, 380, 381], "accordingli": [19, 95], "cell_mask": [19, 124], "ds_init": [19, 356], "maxlevelcel": [19, 141, 291, 292, 293, 294, 297, 298, 299, 300, 302, 356], "final_normalveloc": [19, 356], "t_index": [19, 124, 356], "vmin": [19, 124, 305, 356, 372], "max_veloc": [19, 356], "vmax": [19, 124, 305, 356, 372], "cmap": [19, 124, 305, 333, 356], "cmo": [19, 333, 356, 371, 373, 374, 380, 381], "balanc": [19, 206, 320, 321, 333, 356, 371, 373, 374, 380, 381], "show_patch_edg": [19, 124, 333, 356], "water": [19, 320, 323, 356, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383], "column": [19, 267, 268, 270, 271, 273, 320, 328, 337, 341, 342, 343, 345, 346, 347, 349, 350, 352, 367, 368, 374, 375, 376, 384, 385, 386], "increas": [19, 141, 336], "effici": [19, 333, 356], "patch_mask": [19, 124], "subsequ": [19, 141, 333, 389], "ncell": [19, 141, 197, 210, 304, 311, 312, 333, 356], "nedg": [19, 333, 356], "cell_patch": 19, "cell_patch_mask": 19, "out_file_nam": [19, 124], "720": 19, "figsiz": [19, 123, 124, 305], "bottomdepth": [19, 141, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 333, 356, 367, 374], "edge_patch": 19, "edge_patch_mask": 19, "plot_global_mpas_field": 19, "cmocean": [19, 333, 356], "noqa": [19, 67, 333, 356], "f401": [19, 333, 356], "da": [19, 123, 311, 312], "tracer1": [19, 141, 371, 373, 380, 381], "nvertlevel": [19, 124, 141, 143, 148, 291, 294, 300, 302, 304, 311, 312, 333, 356, 367], "out_filenam": [19, 119, 122, 123, 290, 305], "colormap_sect": [19, 122, 123], "titl": [19, 122, 123, 124, 141, 143, 148, 305], "plot_land": [19, 122, 123], "central_longitud": [19, 123], "180": [19, 69, 76, 77, 83, 102, 141, 309, 371, 372, 373, 380, 381], "disabl": [19, 315, 372, 390], "contin": [19, 122, 123], "overlain": 19, "degre": [19, 69, 76, 77, 83, 102, 304, 307, 309, 357, 370, 375, 378], "quantiti": 19, "antimeridian": 19, "colormap": [19, 122, 123, 124, 305, 317, 318, 319, 320, 326, 327, 356, 371, 372, 373, 374, 380, 381], "cosin": [19, 141, 193, 195, 196, 198, 201, 203, 204, 212, 215, 283, 287, 318, 335, 356, 368, 369, 371, 373, 374, 376, 380, 381, 383, 388], "bell": [19, 141, 193, 195, 196, 198, 201, 203, 204, 212, 215, 283, 287, 318, 335, 356, 368, 369, 371, 373, 374, 376, 380, 381, 383, 388], "converg": [19, 193, 197, 206, 210, 211, 228, 229, 231, 254, 255, 257, 279, 317, 318, 319, 320, 323, 325, 326, 327, 331, 334, 355, 356, 371, 372, 373, 374, 377, 380, 381, 383, 388], "colormap_nam": [19, 122, 123, 317, 318, 319, 326, 327, 371, 372, 373, 374, 380, 381], "viridi": [19, 317, 318, 319, 326, 327, 356, 371, 372, 373, 380, 381], "norm": [19, 121, 122, 123, 141, 145, 148, 317, 318, 319, 320, 326, 327, 371, 372, 373, 374, 377, 379, 380, 381], "norm_typ": [19, 122, 123, 317, 318, 319, 326, 327, 371, 372, 373, 374, 380, 381], "colorbar": [19, 122, 123, 124, 305, 317, 318, 319, 326, 327, 371, 372, 373, 374, 380, 381], "colorbar_limit": [19, 123, 317, 318, 319, 326, 327, 371, 373, 374, 380, 381], "standard": [19, 242, 243, 248, 324, 336, 337, 346, 356, 359, 378, 384], "logarithm": [19, 124], "upper": [19, 124], "bound": [19, 310, 323, 325], "plot_global_lat_lon_field": 19, "norm_arg": [19, 122, 372], "tick": [19, 122, 372], "mark": [19, 124, 305, 337, 372], "colorbar_tick": [19, 122, 372], "symlog": [19, 122], "symmetr": 19, "central": [19, 372], "color": [19, 123, 124, 305], "normal": [19, 232, 233, 258, 259, 315, 320, 333, 334, 337, 356, 363, 374], "symlognorm": 19, "lognorm": 19, "hous": [20, 371, 372, 373, 380, 381], "kei": [20, 49, 115, 141, 143, 157, 160, 335], "max_memori": [25, 35, 38, 45, 164, 333], "graph_filenam": [25, 85, 151, 154, 157, 160, 164], "make_yaml": 25, "stride": [25, 37, 164], "partit": [25, 34, 44, 62, 85, 164, 316, 321, 323, 324, 325, 333, 357, 358, 359, 360, 361, 362, 384], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 97, 160, 164, 174, 219, 243, 269, 333], "nor": [25, 38, 49, 97, 160, 164, 174, 219, 243, 269, 333, 356], "append": [25, 38, 40, 49, 97, 158, 160, 164, 172, 173, 174, 177, 180, 181, 183, 185, 188, 189, 191, 219, 222, 224, 226, 242, 243, 246, 248, 250, 269, 333, 343, 345, 347], "ideal": [25, 35, 38, 45, 93, 94, 97, 141, 160, 164, 174, 219, 243, 269, 270, 271, 273, 329, 333, 336, 355, 356, 357, 390], "fewer": [25, 35, 38, 45, 93, 94, 160, 164, 174, 219, 243, 269, 333, 356, 384], "memori": [25, 35, 38, 45, 164, 333, 357], "mb": [25, 35, 38, 45, 164, 333, 357], "placehold": [25, 35, 38, 45, 164, 333, 384], "diverg": [31, 167, 319, 368, 371, 374, 376, 380], "counterpart": [31, 141, 167], "nest": [31, 126, 128, 167], "graph_fil": 32, "run_as_subprocess": [38, 333], "smallest": [38, 333, 354, 367, 390], "unit": [38, 98, 102, 105, 333, 354, 370, 390], "term": [38, 354, 356, 377, 379], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 333, 335, 384], "finish": [38, 39, 82, 333, 356], "known": [38, 39, 138, 318, 333, 356], "suffici": [38, 333, 378], "establish": [38, 39, 333], "has_shared_config": 38, "is_depend": [38, 333], "machine_info": [38, 333], "machineinfo": 38, "base_work_dir": [38, 49, 112, 333, 335], "log_filenam": [38, 49, 333, 335], "redirect": [38, 333], "extern": [38, 138, 313, 330, 333, 335, 349, 368, 385], "turn": [38, 56, 330, 333, 353, 356, 382], "inner": [38, 333], "repres": [38, 356, 367, 372, 375, 380], "database_compon": [40, 333], "work_dir_target": [40, 333], "come": [40, 138, 333, 337, 356, 358, 359, 360, 361, 362, 363, 364, 368], "_database_root": 40, "available_resourc": [42, 92], "constrain": [42, 152, 155, 161, 165, 175, 199, 220, 236, 244, 262, 316, 323, 324, 325, 333, 356], "cores_per_nod": [42, 92, 95, 138, 357, 358, 359, 360, 361, 362, 363, 364, 384], "everi": [43, 316, 333, 335, 336, 352, 353, 354, 356, 370, 375, 382], "child": [43, 141, 330, 333, 335, 336], "subtask": 45, "step_symlink": [49, 335], "outsid": [49, 50, 329, 331, 333, 335, 337], "stdout_logg": [49, 335], "goe": [49, 333, 335, 356], "regardless": [49, 335], "new_step_log_fil": [49, 335], "run_by_default": [50, 335], "assum": [51, 116, 127, 138, 337, 356, 364, 370], "prior": [51, 333], "step_path": 55, "variant": [55, 195, 208, 275, 277, 316, 321, 324, 329, 334, 336, 337, 356, 363, 367, 370, 371, 372, 373, 378, 380, 381], "uncach": 55, "datestamp": 55, "yymmdd": [55, 357], "dry": [55, 334], "meta": 57, "empti": [57, 305, 333, 336, 337, 354, 356], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 111, 337], "isadirectoryerror": 60, "show_progressbar": 61, "fix": [61, 141, 356], "permiss": [61, 337], "everyon": 61, "progress": [61, 110, 111], "bar": [61, 124], "qo": [62, 358, 359, 361, 363, 364, 384], "qualiti": [62, 358, 359, 361, 363, 364, 384], "servic": [62, 358, 359, 361, 363, 364, 384], "wall_tim": [62, 384], "wall": [62, 384], "target_cor": 63, "min_cor": 63, "decomposition_test": [67, 329, 384], "decompositiontest": [67, 329], "e501": [67, 356], "turquois": [67, 359], "usr": [67, 138, 359, 384], "climat": [67, 358, 359, 360, 363, 384], "mhoffman": 67, "constant": [68, 75, 76, 141, 305, 306, 307, 315, 327, 356, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 388], "latitud": [69, 76, 98, 100, 102, 105, 122, 123, 141, 304, 307, 371, 372, 373, 374, 380, 383, 388], "longitud": [69, 76, 77, 83, 98, 100, 102, 105, 122, 123, 141, 304, 307, 371, 372, 373, 374, 380, 383, 388], "ndarrai": [69, 76, 77, 83, 87, 122, 124, 170, 203, 289, 290, 356], "length": [69, 76, 77, 83, 375, 378], "90": [69, 76, 77, 83, 141, 333, 371, 372, 373, 375, 380, 381], "static": [70, 71], "rule": 70, "thumb": 70, "achiev": [71, 334], "uniform": [75, 80, 151, 154, 198, 212, 282, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 335, 356, 357, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388], "natur": 80, "jigsawpi": [81, 333], "jigsaw_jig_t": 81, "area": [86, 306, 307, 356], "dt_target": 87, "start_xtim": 87, "char": 87, "defaults_filenam": 88, "total": [92, 333, 334, 336, 356, 357, 359, 384], "substep": [93, 94], "command_line_arg": 93, "cpus_per_nod": 95, "map_filenam": 97, "src_grid_info": 97, "dst_grid_info": 97, "neareststod": [97, 372, 383, 388], "conserv": [97, 372, 383, 388], "expand_dist": 97, "meter": [97, 203, 289, 290, 307, 371, 373, 380], "expand": [97, 141, 367], "expand_factor": 97, "src_mesh_filenam": 97, "scrip": [97, 137, 139, 357], "dst_mesh_filenam": 97, "map_": 97, "source_typ": 97, "_": [97, 138, 333, 335, 337, 356, 378, 382], "dest_typ": 97, "1d": [98, 102, 105, 122, 141, 289, 290, 291, 292, 293, 294, 297, 298, 300, 302, 321], "2d": [98, 102, 105, 122, 158, 218, 224, 310, 321, 368, 376], "5x0": [98, 102, 105], "5degre": [98, 102, 105], "coordin": [98, 100, 101, 105, 107, 122, 124, 232, 258, 291, 294, 295, 296, 300, 301, 302, 303, 304, 306, 307, 309, 310, 321, 366, 368, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383, 387], "mesh_typ": [99, 106, 329, 333, 335], "vertex": [99, 106], "x_var": [101, 107], "y_var": [101, 107], "proj_attr": [101, 107], "proj_str": [101, 107], "proj": [101, 107, 362], "left": [102, 141, 305, 356, 367, 370, 372], "remapp": [103, 104], "remap_fil": 103, "is_task": 111, "steps_to_skip": 111, "component_nam": 112, "config_filepath": 112, "unpickl": [113, 333], "cached_step": 114, "task_list": 115, "_all": 115, "streams_filenam": 116, "lxml": [116, 118, 132], "etre": [116, 118, 132], "new_child": 117, "children": 117, "sub": [117, 356, 375], "new_tre": 118, "infin": [121, 371, 373, 380, 381], "toler": 121, "data_arrai": 122, "colorbar_label": [122, 123, 305], "subtitl": [122, 123], "dpi": [123, 305], "200": [123, 141, 305, 323, 325, 356, 370, 375, 377, 379, 382], "patch_edge_color": 123, "horizont": [123, 124, 141, 170, 226, 304, 305, 310, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 370, 371, 373, 375, 377, 378, 379, 380, 381, 382], "inch": [123, 124, 305], "dot": [123, 124, 305, 336], "face": 123, "ax": [124, 305], "z_index": 124, "cmap_set_und": 124, "cmap_set_ov": 124, "cmap_scal": 124, "cmap_titl": 124, "vert_dim": 124, "transect_x": 124, "transect_i": 124, "transect_color": 124, "black": [124, 305], "transect_start": 124, "red": [124, 305, 331], "transect_end": 124, "green": [124, 305, 331], "transect_linewidth": 124, "transect_markers": 124, "depth": [124, 141, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 305, 310, 356, 357, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383], "slice": [124, 144], "fieldnam": 124, "matplotlib": [124, 125, 305, 356], "multi": [124, 305], "panel": [124, 305], "visibl": 124, "ratio": 124, "Not": 124, "transect": [124, 141, 304, 305, 357], "marker": 124, "style": [125, 141, 355, 356], "classmethod": 127, "jinja": [127, 141, 317, 318, 319, 326, 327], "namelist_templ": 131, "polarisyaml": [131, 132], "processed_registry_filenam": 132, "registri": [132, 315, 349], "steam": 132, "1_anvil_intel_impi": [133, 138], "ve": [133, 134, 135, 136, 137, 139, 337, 356], "1_anvil_gnu_openmpi": 133, "1_chicoma": 134, "cpu_gnu_mpich": [134, 139], "crai": [134, 137, 138, 139, 362, 364], "1_chrysalis_intel_openmpi": 135, "1_chrysalis_gnu_openmpi": 135, "soon": [136, 138, 356, 384], "1_compy_intel_impi": 136, "1_compy_gnu_openmpi": 136, "1_frontier_gnu_mpich": 137, "1_frontier_crayclang_mpich": 137, "load_polaris_env": [138, 337, 356, 384], "therefor": [138, 333, 354, 356], "chicoma": [138, 363, 384], "mpich": [138, 337, 355, 359, 362, 364, 384], "compi": [138, 361, 384], "frontier": [138, 363], "crayclang": [138, 362], "pm": [138, 364, 384], "compymcnodefac": [138, 363], "pretti": [138, 333, 336, 356, 357], "conda_path": [138, 337], "osx": [138, 363], "clang": [138, 337], "1_": 138, "morpheu": 138, "cobalt": [138, 358, 359, 360, 361, 362, 363, 364], "single_nod": [138, 357, 358, 359, 360, 361, 362, 363, 364, 384], "mpirun": [138, 353, 357, 358, 359, 360, 361, 362, 363, 364, 384], "srun": [138, 333, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384], "parallel_execut": [138, 353, 357, 358, 359, 360, 361, 362, 363, 364, 384], "modules_befor": [138, 359, 362, 364], "modules_aft": [138, 359, 362, 364], "polaris_env": [138, 358, 359, 360, 361, 362, 363, 364], "deploi": [138, 337, 355, 358, 359, 360, 361, 362, 363, 364], "mpi_gnu": [138, 358, 359, 360, 361, 362, 363, 364], "hdf5": [138, 358, 359, 360, 361, 362, 363, 364], "use_e3sm_hdf5_netcdf": [138, 358, 359, 360, 361, 362, 363, 364], "discoveri": 138, "hostnam": 138, "hostname_contain": 138, "queu": 138, "laptop": [138, 337, 356, 357], "workstat": [138, 337], "high": [138, 333, 360, 363], "hpc": [138, 337, 359, 363], "safest": [138, 337], "mpi_": 138, "simpl": [138, 141, 336, 349, 356, 384], "compiler_gnu": 138, "compiler_intel": 138, "hopefulli": [138, 357], "parlanc": 138, "concret": 138, "ubuntu": 138, "spec": [138, 353, 364], "gcc": 138, "curl": 138, "81": 138, "buildabl": 138, "install_missing_compil": 138, "cc": [138, 362], "bin": [138, 337, 364, 384], "cxx": 138, "f77": 138, "fc": 138, "operating_system": 138, "ubuntu22": 138, "04": 138, "extra_rpath": 138, "luck": 138, "catch": [138, 334, 337], "22": 138, "guess": [138, 356], "correct": [138, 337], "potenti": [138, 170, 183, 248, 333, 356, 370, 378], "purg": 138, "perl": 138, "32": [138, 334, 384], "bsnc6lt": 138, "ugetvbp": 138, "sxfyy4k": 138, "2020": 138, "304": 138, "n3b5fye": 138, "j3zxncu": 138, "7ohuiwq": 138, "k2zu3y5": 138, "mirrcz7": 138, "variou": [138, 267, 333, 337, 341], "ask": 138, "gb": 138, "minut": [138, 316, 321, 334, 370, 375, 378, 389], "hour": [138, 141, 323, 325, 334, 352, 359, 364, 365, 371, 372, 373, 374, 375, 377, 379, 380, 381, 384, 387], "zlib": 138, "incompat": 138, "ubuntu20": 138, "readlin": 138, "pkgconf": 138, "spackdir": 138, "env": [138, 364], "arch": 138, "repositori": [138, 331, 355, 356, 384], "x86_64_v4": 138, "free": [138, 315, 356, 357], "touch": [138, 306, 307, 337], "everyth": 138, "1_pm": 139, "cpu_intel_mpich": 139, "ever": [141, 336], "oceanmodelstep": [141, 333, 356], "decid": [141, 356], "veri": [141, 321, 330, 333, 336, 337, 349, 356, 374, 375, 382], "earli": [141, 368, 384], "stage": [141, 315, 333, 335, 337, 345, 352, 368, 384], "map_yaml_to_namelist": 141, "heurist": 141, "round": [141, 371, 372, 373, 380, 381], "cell_count": [141, 152, 155, 161, 165, 175, 199, 220, 236, 244, 262, 356], "goal_cells_per_cor": [141, 356, 371, 372, 373, 377, 378, 379, 380, 381, 383, 388], "pinch": 141, "2000": [141, 329, 350, 352, 356, 375, 387], "max_cells_per_cor": [141, 356, 371, 372, 373, 377, 378, 379, 380, 381, 383, 388], "seciton": 141, "control": [141, 317, 318, 319, 320, 326, 327, 333, 357, 370, 371, 372, 373, 380, 381, 382, 384], "scale": [141, 370, 380, 384], "tri": [141, 336], "apport": 141, "dai": [141, 169, 183, 248, 316, 317, 318, 319, 320, 321, 324, 326, 327, 328, 352, 356, 370, 371, 372, 373, 374, 375, 378, 380, 381, 382, 387], "form": [141, 324, 378, 390], "dddd_hh": [141, 169], "ss": [141, 169], "get_time_interval_str": 141, "run_dur": [141, 365, 371, 372, 373, 374, 375, 380, 381], "fill": 141, "dt_str": 141, "run_duration_str": 141, "output_interval_str": 141, "yaml_filenam": [141, 151, 154, 157, 160], "caviti": [141, 321, 336, 356, 357, 365, 367, 375], "frazil": [141, 321, 375], "flux": [141, 315, 321, 324, 375, 378, 382], "add_spherical_base_mesh_step": [141, 335], "spherical_converg": [141, 320, 335, 371, 372, 373, 380, 381], "icos_resolut": [141, 371, 372, 373, 380, 381], "480": [141, 371, 372, 373, 380, 381], "qu_resolut": [141, 371, 372, 373, 380, 381], "150": [141, 371, 372, 373, 378, 380, 381], "210": [141, 367, 371, 372, 373, 380, 381], "evalu": [141, 144, 145, 146, 147, 197, 210, 211, 231, 233, 234, 257, 259, 260, 279, 317, 319, 326, 327, 371, 372, 373, 374, 380, 381], "convergence_eval_tim": [141, 371, 372, 373, 374, 380, 381], "24": [141, 318, 372, 387], "convergence_thresh": [141, 372], "error_typ": [141, 144, 145, 371, 372, 373, 374, 380, 381], "convergence_forward": [141, 317, 318, 319, 326, 327, 372, 374], "split_explicit": [141, 365, 371, 372, 373, 374, 375, 380, 381], "rk4_dt_per_km": [141, 365, 371, 372, 373, 374, 375, 380, 381], "split": [141, 336], "split_dt_per_km": [141, 365, 375], "barotrop": [141, 174, 269, 333, 356, 370, 382], "simul": [141, 321, 323, 325, 333, 354, 356, 365, 369, 370, 371, 374, 375, 377, 379, 383, 384, 388], "numer": [141, 317, 319, 326, 327, 371, 373, 377, 379, 380, 381], "infti": [141, 367], "inf": [141, 144, 145, 374], "infrastructur": [141, 336, 356], "add_cosine_bell_task": [141, 330], "sphericalconvergenceforward": [141, 317, 318, 319, 320, 326, 327], "invok": 141, "analyz": [141, 143, 196, 209, 278, 280, 285, 356, 371, 372, 373, 380, 381], "split_explicit_t": [141, 356], "convergenceforward": [141, 323, 325], "convergenceanalysi": [141, 317, 318, 319, 320, 323, 325, 326, 327], "convergence_var": [141, 143], "zidx": [141, 143, 144, 146, 147, 148, 197, 210, 211, 231, 257], "exact_solut": 141, "state": [141, 146, 158, 170, 172, 173, 180, 183, 188, 197, 210, 231, 242, 248, 257, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 333, 334, 356, 365, 372, 374], "put": [141, 156, 337, 356], "ice_shelf": [141, 321], "iceshelf": 141, "ice_shelf_2d": [141, 313, 322, 375], "iceshelf2d": [141, 321], "setup_ssh_adjustment_step": 141, "ssh_forward": [141, 157, 160, 321], "ssh_adjust": [141, 156, 157, 158, 313, 321, 333, 357, 365, 375], "sshforward": [141, 157, 321], "sshadjust": [141, 321], "grid_1d": 141, "generate_1d_grid": 141, "vertical_grid": [141, 289, 291, 294, 300, 302, 329, 333, 356, 357, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "z": [141, 143, 144, 146, 147, 148, 197, 210, 211, 231, 257, 292, 293, 297, 298, 299, 300, 301, 302, 303, 321, 356, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "star": [141, 299, 302, 303, 321, 356, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "init_vertical_coord": [141, 333, 356], "minlevelcel": [141, 291, 293, 294, 297, 298, 299, 300, 302, 356], "cellmask": [141, 291, 294, 297, 300, 302, 356], "zmid": [141, 291, 294, 300, 302, 356], "restingthick": [141, 291, 294, 299, 300, 302, 356], "update_layer_thick": 141, "entir": [141, 356, 370, 375, 378, 389], "petersen": [141, 337, 356, 370], "et": [141, 356, 367, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381], "al": [141, 356, 367, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381], "2015": [141, 356, 370], "int_": 141, "rho": 141, "dv": 141, "sort": [141, 330, 331, 336, 337], "compute_rp": [141, 356], "csv": [141, 317, 318, 319, 320, 326, 327, 356], "compute_transect": [141, 305, 321], "plot_transect": [141, 304], "dependencies_dict": 143, "rate": [143, 145, 146, 197, 210, 231, 257, 279, 317, 318, 319, 320, 323, 325, 326, 327, 356, 371, 372, 373, 374, 377, 379, 380, 381, 382], "variable_nam": [144, 148], "exact": [144, 146, 147, 197, 210, 211, 231, 232, 233, 234, 257, 258, 259, 260, 318, 320, 323, 325, 336, 377, 379], "conv_thresh": [145, 279, 377, 379], "deriv": [146, 157, 160, 231, 257], "min_resolut": [156, 160], "sshdir": 156, "shelv": [156, 313, 357, 367, 375], "init_filenam": [157, 160, 356], "forwardstep": [157, 333], "yaml_replac": [157, 160], "shared_step": 157, "match": [158, 321, 337, 356], "dynam": [159, 164, 313, 321, 328, 357, 365, 370, 371, 372, 373, 374, 375, 380, 381, 382, 383], "subdivid": [163, 306, 307, 335], "dynamic_ntask": 164, "available_cor": 166, "estim": [166, 168, 356], "time_str": 169, "initial_state_filenam": 170, "energi": [170, 183, 248, 355, 356, 370, 378], "len": [170, 356], "output_fil": [170, 333, 356], "shorter": [180, 334, 342], "step_subdir": [189, 224, 343], "processor": [189, 333, 343, 370, 375], "include_viz": [193, 206, 218, 275, 335], "advect": [193, 242, 243, 248, 275, 317, 318, 319, 320, 324, 326, 327, 371, 372, 373, 377, 378, 379, 380, 381, 382], "less": [193, 206, 275, 280, 285, 333, 367], "max_valu": 203, "ri": 203, "accord": [203, 374, 377, 379, 384], "radiu": [203, 307, 371, 372, 373, 380, 381], "testcas": [214, 252, 356, 357, 370, 375, 382, 384], "include_restart": 218, "include_tid": 218, "tidal": [218, 219, 321, 375], "do_restart": 219, "tidal_forc": [219, 315], "cross": [226, 252, 356], "plane": 226, "inerti": [228, 229, 230, 232, 235, 237, 239, 323, 335, 368, 376], "graviti": [228, 229, 230, 232, 235, 237, 239, 323, 335, 368, 376], "wave": [228, 229, 230, 232, 235, 237, 239, 241, 242, 243, 246, 248, 250, 252, 258, 323, 324, 333, 335, 356, 368, 370, 376, 379], "analys": [230, 256], "angleedg": [232, 258], "angl": [232, 258, 374], "posit": [232, 258, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 310, 356, 367, 382], "xcell": [232, 258, 333, 356], "ycell": [232, 258, 333, 356], "xedg": [232, 258, 333, 356], "yedg": [232, 258], "f0": 232, "corioli": [232, 323, 325, 356, 370, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382], "eta0": [232, 258], "amplitid": [232, 258], "kx": [232, 258], "ky": [232, 258], "angular": [232, 258], "frequenc": [232, 258, 316], "veloc": [233, 259, 315, 316, 320, 321, 323, 324, 325, 335, 337, 356, 371, 372, 373, 374, 375, 380, 381, 382, 384], "norm_vel": 233, "eta": [234, 260, 377, 379], "taskdir": [237, 239, 263, 265], "vadv_method": [242, 243, 248], "vlr": [242, 243, 248, 324, 378], "test_cas": 252, "manufactur": [254, 255, 256, 258, 261, 263, 265, 325, 368, 376], "mix": [268, 329, 330, 371, 377, 379, 382], "param": [268, 270], "resources_fix": 269, "ag": [270, 271, 273], "evolv": [270, 355, 367, 371, 372, 373, 380, 381, 382], "ideal_ag": [271, 273], "case_nam": [275, 278, 280, 282, 283, 285], "transport": [277, 278, 280, 282, 285, 317, 319, 326, 327, 371, 372, 373, 380, 381], "nondivergent_2d": [277, 313, 322, 380], "divergent_2d": [277, 313, 322, 373], "correlated_tracers_2d": [277, 313, 322, 371], "rotation_2d": [277, 313, 322, 381], "layer": [289, 290, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 310, 315, 316, 317, 319, 321, 323, 324, 325, 326, 327, 328, 356, 357, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "bottom": [291, 292, 293, 294, 297, 298, 299, 300, 302, 315, 356, 357, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383], "thick": [291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 310, 316, 317, 319, 320, 321, 324, 326, 327, 328, 350, 356, 357, 367, 370, 371, 373, 374, 375, 377, 380, 381, 387], "stretch": [291, 294, 300, 302, 356, 367], "elev": [291, 294, 300, 302, 356, 367], "midpoint": [291, 294, 300, 302, 356], "reftopdepth": [291, 294, 297, 298, 300, 302, 356], "down": [291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 310, 321, 356, 367, 372], "ref": [291, 294, 300, 302, 356], "middl": [291, 294, 300, 302, 305, 356], "refbottomdepth": [291, 292, 293, 294, 297, 298, 300, 302, 333, 356], "refinterfac": [291, 294, 300, 302, 356], "element": [291, 294, 300, 302, 356], "vertcoordmovementweight": [291, 294, 300, 302, 356], "movement": [291, 294, 300, 302, 356], "alter": [292, 293, 333, 335, 355, 356, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383], "partial": [292, 293, 356, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "seafloor": [292, 297, 298, 299, 304, 305, 310, 367], "terrain": [294, 367], "min_vert_level": [297, 367, 375], "min_layer_thick": [297, 357, 367, 375], "unstretch": 299, "ds_horiz_mesh": 304, "layer_thick": [304, 310], "bottom_depth": [304, 310, 333, 356, 357, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383], "min_level_cel": [304, 310], "max_level_cel": [304, 310], "quad": 304, "intersect": [304, 306, 307, 308], "instant": 304, "tidx": 304, "ds_transect": [304, 305, 310, 311, 312], "vert": 304, "find_transect_levels_and_weight": [304, 311, 312], "mpas_field": 305, "flat": [305, 367, 370, 374], "outline_color": 305, "ssh_color": 305, "seafloor_color": 305, "interface_color": 305, "cell_boundary_color": 305, "linewidth": 305, "color_start_and_end": 305, "start_color": 305, "end_color": 305, "3d": 305, "outlin": 305, "boundari": [305, 310, 355, 370, 375, 378, 390], "inset": 305, "axi": [305, 333, 356, 381], "plot_start_end": 305, "x_transect": 306, "y_transect": 306, "ds_tri": [306, 307, 308, 309], "subdivision_r": [306, 307], "10000": [306, 307, 377, 379], "triangl": [306, 307, 308, 309, 310], "segment": [306, 307, 308, 310], "mesh_to_triangl": [306, 307, 308], "scipi": [306, 307, 308, 357], "spatial": [306, 307, 308, 382], "ckdtree": [306, 307, 308], "make_triangle_tre": [306, 307], "candid": [306, 307], "enough": [306, 307, 308, 316, 324, 333, 336, 356, 375], "curvatur": [306, 307], "lie": [306, 307], "purposefulli": [306, 307], "repeat": [306, 307], "discontinu": [306, 307, 373, 380, 381], "xnode": [306, 309], "ynode": [306, 309], "dnode": [306, 307], "horiztriangleindic": [306, 307], "horiztrianglenodeindic": [306, 307], "mod": [306, 307], "horizcellindic": [306, 307], "interphorizcellindic": [306, 307], "interphorizcellweight": [306, 307], "averag": [306, 307], "xtransect": 306, "ytransect": 306, "dtransect": [306, 307], "transectindicesonhoriznod": [306, 307], "transectweightsonhoriznod": [306, 307], "nodevalu": [306, 307], "transectvalu": [306, 307], "lon_transect": 307, "lat_transect": 307, "earth_radiu": 307, "radian": [307, 309], "earth": [307, 355], "sphere_radiu": 307, "cartesian": [307, 309, 381], "xcartnod": 307, "ycartnod": 307, "zcartnod": 307, "lonnod": [307, 309], "latnod": [307, 309], "lontransect": 307, "lattransect": 307, "xcarttransect": 307, "ycarttransect": 307, "zcarttransect": 307, "great": [307, 356], "circl": 307, "kd": 308, "connect": [309, 356, 364], "pair": [309, 371, 373, 380, 381, 387], "tricellindic": 309, "nodecellindic": 309, "nodecellweight": 309, "znode": 309, "counterclockwis": 309, "wind": [309, 374, 382], "ds_horiz_transect": 310, "horiz": 310, "find_spherical_transect_cells_and_weight": 310, "find_planar_transect_cells_and_weight": 310, "transectz": 310, "bilinearli": 310, "nsegment": [310, 311], "nhalflevel": [310, 311], "quadrilater": 310, "nhoriznod": [310, 312], "nvertnod": [310, 312], "corner": 310, "validcel": 310, "validnod": 310, "ztransectnod": 310, "zseafloor": 310, "floor": [310, 367, 375], "cellindic": 310, "levelindic": 310, "interpcellindic": 310, "interplevelindic": 310, "nhorizweight": 310, "nvertweight": 310, "interpcellweight": 310, "multipli": [310, 371, 372, 373, 374, 380, 381], "dinterfaceseg": 310, "zinterfaceseg": 310, "dcellboundari": 310, "zcellboundari": 310, "interp_mpas_to_transect_cel": 310, "interp_mpas_to_transect_nod": 310, "among": [311, 312, 329, 331, 337, 356], "da_cel": 311, "whatev": [311, 312, 384], "besid": [311, 312], "linearli": [312, 375], "neighbor": 312, "da_nod": 312, "compass_branch": 313, "example_compact": [313, 330, 349, 357], "default_input": [313, 330, 349, 356, 357], "ocean_model": [313, 337, 357], "latest": [313, 337, 349, 355, 368, 384], "compat": [313, 337, 349, 353, 355, 375], "verison": 313, "geostroph": [313, 322, 368, 376], "internal_wav": [313, 322, 378], "manufactured_solut": [313, 322, 330, 379], "single_column": [313, 322, 330, 349, 351, 382], "minim": 315, "fcell": [315, 333, 356, 371, 372, 373, 380, 381], "fedg": [315, 333, 356, 371, 372, 373, 380, 381], "fvertex": [315, 333, 356, 371, 372, 373, 380, 381], "slip": 315, "solid": [315, 350, 370, 372, 375, 378], "tangenti": 315, "nonperiod": 315, "drag": [315, 317, 318, 319, 320, 326, 327], "mass": 315, "momentum": [315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 377, 379], "scalar": 315, "rigid": [315, 381], "solv": [315, 353, 367], "mid": [315, 370, 380], "vari": [315, 317, 318, 319, 320, 326, 327, 333, 353, 363, 367, 372, 374, 375], "consult": [315, 356], "eddi": [316, 370], "addition": [316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 333, 358, 359, 360, 361, 362, 364], "diffus": [316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328], "50": [316, 323, 324, 325, 356, 370, 375, 377, 379, 382], "prescrib": [316, 323, 324, 325, 374], "intens": [316, 324], "sphere_transport": [317, 319, 326, 327, 371, 373, 380, 381], "spheretransport": [317, 319, 326, 327], "deform": [317, 326, 380], "flow": [317, 319, 326, 327, 370, 371, 372, 373, 374, 380, 381], "distribut": [317, 318, 319, 326, 327, 371, 373, 380, 381], "scheme": [317, 319, 321, 324, 326, 327, 365, 371, 375, 378, 380, 382], "correl": [317, 368, 376], "differenti": [317, 319, 326, 327], "convergence_": [317, 319, 326, 327], "mixinganalysi": 317, "relationship": [317, 371], "triplot": 317, "fast": [317, 318, 319, 320, 326, 327, 356], "sphere_transport_viz_": [317, 319, 326, 327], "cosinebel": [318, 335], "shape": [318, 372], "blob": 318, "around": [318, 356, 357, 370, 371, 372, 373, 378, 380, 381], "convergence_tracer1": 318, "convergence_h": 320, "convergence_normalveloc": 320, "invari": 321, "inherit": [321, 336, 356], "iceshelftask": [321, 365], "100": [321, 323, 325, 328, 367, 377, 379, 382], "squash": [321, 367], "profil": [321, 328, 353, 382], "land_ice_flux": 321, "prognost": [321, 370, 375], "coord_typ": [321, 356, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "with_restart": [321, 375], "default_tidal_forc": 321, "shallow": [323, 337, 371, 372, 373, 374, 377, 379, 380, 381, 383], "25": [323, 325, 371, 373, 377, 379, 380, 381, 382], "exactsolut": [323, 325], "obtain": [323, 325, 337, 359], "normal_veloc": [323, 325, 333, 356], "assign": [323, 325, 372], "fall": [323, 325, 384], "accept": [323, 325], "5km": [324, 375, 378], "lagrangian": [324, 378], "manufacturedsolut": 325, "nondiverg": [326, 368, 376], "filamentanalysi": 326, "filament": [326, 380], "rotat": [327, 368, 371, 372, 373, 376, 377, 379, 380], "exercis": [328, 352, 371, 372, 373, 374, 380, 381, 382], "kpp_test": 328, "mixedlayerdepthsoutput": 328, "idealagetrac": [328, 382], "single_column_forc": [328, 382], "throughout": [328, 370, 378, 382], "idealag": 328, "enabel": 328, "formal": 329, "organ": [329, 331, 334, 355], "conceptu": [329, 336, 375], "broadli": [329, 330, 336], "realist": [329, 355, 375, 390], "greenland": [329, 355, 390], "2000m": [329, 384], "34": [329, 375, 384], "halfar": 329, "cism": 329, "dome_typ": 329, "put_origin_on_a_cel": 329, "hydrologi": 329, "hydro": [329, 390], "dome_viz": 329, "time_slic": 329, "save_imag": 329, "hide": [329, 356], "hide_fig": 329, "clutter": 329, "smoke_test": [329, 335], "smoketest": [329, 335], "restart_test": 329, "restarttest": 329, "add_dome_task": 329, "variable_resolut": [329, 333, 384], "talk": 329, "reduc": [329, 333, 375], "encompass": 330, "perspect": 330, "four": 330, "broader": 330, "univers": 330, "add_inertial_gravity_wave_task": 330, "add_manufactured_solution_task": 330, "add_single_column_task": 330, "alphabet": [330, 356], "landice_model": [330, 337], "diagram": 331, "blue": [331, 358, 384], "orang": 331, "laid": 331, "fig": 331, "organiz": 331, "concept": [331, 336, 356, 390], "somewher": 333, "multiprocess": [333, 336, 357], "aspir": 333, "emploi": 333, "unwant": 333, "outer": 333, "dome_varres_grid": 333, "signific": [333, 334, 335], "neglig": [333, 375], "culled_graph": [333, 356], "meshstep": 333, "getint": 333, "mesh_cpus_per_task": 333, "mesh_min_cpus_per_task": 333, "fit": [333, 357], "applic": [333, 336, 337, 383, 388], "launch": [333, 355], "write_netcdf": [333, 356], "convers": [333, 356], "greater": [333, 356], "graphinfofilenam": [333, 356], "culled_mesh": [333, 356], "use_dist": [333, 356, 370, 378], "gradient_width_dist": [333, 356, 370], "gradient_width_frac": [333, 356, 370], "bottom_temperatur": [333, 356, 370, 378], "surface_temperatur": [333, 356, 370, 378, 382], "temperature_differ": [333, 356, 370, 378], "coriolis_paramet": [333, 356, 370, 375, 377, 378, 379, 382], "x_cell": [333, 356], "y_cell": [333, 356], "ones_lik": [333, 356], "zeros_lik": [333, 356], "x_min": [333, 356], "min": [333, 356, 367, 370, 375, 378, 382], "x_max": [333, 356], "y_min": [333, 356], "y_max": [333, 356], "y_mid": [333, 356], "x_perturb_min": [333, 356], "x_perturb_max": [333, 356], "perturb_width": [333, 356, 370], "y_offset": [333, 356], "sin": [333, 356, 370, 371, 373, 374, 377, 378, 379, 380], "pi": [333, 356, 367, 370, 371, 372, 373, 374, 380], "temp_vert": [333, 356], "frac": [333, 356, 367, 370, 371, 373, 377, 380], "logical_and": [333, 356], "transpos": [333, 356], "3rd": [333, 356], "crest": [333, 356, 370], "expand_dim": [333, 356], "dim": [333, 356], "broadcast": [333, 356], "xvertex": [333, 356], "attr": [333, 356], "initial_temperatur": [333, 356], "initial_normal_veloc": [333, 356], "superclass": 333, "commandlin": 333, "harm": 333, "likewis": [333, 356], "arisen": 333, "problemat": 333, "add_depend": 333, "usual": [333, 335, 337, 356, 384], "mesh_path": 333, "mesh_step": 333, "with_ice_shelf_cav": 333, "initial_state_target": 333, "adjusted_init": 333, "forcing_data": 333, "init_mode_forcing_data": 333, "entha_analy_result": 333, "mat": 333, "enthalpy_benchmark": 333, "ourselv": 333, "firewal": 333, "bedmachineantarctica_v2_and_gebco_2022_0": 333, "05_degree_20220729": 333, "slate": 333, "icepresent_qu60km_polar": 333, "practic": [333, 336, 337], "straightforward": 333, "commonli": [333, 354], "notat": [333, 383, 388], "phc": [333, 367], "That": [333, 336, 354, 356, 384], "word": 333, "ff": 333, "quwisc240": [333, 336, 384], "90c": 333, "91c": 333, "92": [333, 367], "91": 333, "sowisc12to60": [333, 384], "performance_test": 333, "approach": [333, 336, 337, 353, 356, 367], "transfer": 333, "feasibl": 333, "overhead": 333, "philosophi": [334, 336, 356], "context": [334, 356], "namesak": 334, "256": [334, 359, 364], "quicker": 334, "exce": 334, "offer": 334, "benefit": [334, 355], "bug": 334, "coverag": 334, "exhaust": 334, "recent": [334, 368, 385], "merg": 334, "reach": 334, "steadi": [334, 374], "wet": 334, "fundament": 335, "incorpor": 335, "velo_solv": 335, "sia": [335, 337], "fo": 335, "runmodel": 335, "run_step": 335, "0200": 335, "00_00": [335, 350, 356], "recip": 335, "demonstr": [335, 356], "fairli": [335, 336, 337, 356, 375], "_cosine_bel": 335, "_with_viz": 335, "_setup_step": [335, 356], "_resolut": 335, "remove_step": 335, "analysis_depend": 335, "base_mesh_step": 335, "cos_bell_dir": 335, "_init_": 335, "init_step": 335, "_forward_": 335, "forward_step": 335, "with_viz_dir": 335, "_map_": 335, "viz_map": 335, "_viz_": 335, "rare": [335, 337], "480km": 335, "closer": 335, "imp_r": 335, "joinpath": 335, "initial_condit": 336, "dig": [336, 357], "background": [336, 371, 373, 378, 380, 381], "adher": [336, 356], "pep8": [336, 337], "bot": [336, 367], "violat": 336, "consid": 336, "editor": 336, "pycharm": [336, 337, 356], "spyder": 336, "linter": 336, "flake8": [336, 337], "discourag": [336, 354], "reformat": 336, "autopep8": 336, "undesir": 336, "lint": 336, "wildcard": 336, "vim": [336, 356], "plugin": 336, "id": [336, 337], "commit": [336, 337], "why": 336, "sound": 336, "subpackag": 336, "understand": [336, 357], "downstream": 336, "tutori": [336, 337], "clu": 336, "intro": 336, "docstr": [336, 355, 356], "strip": 336, "mpas_ocean": 336, "hidden": 336, "shortcut": [336, 384], "referenc": [336, 356], "mention": 336, "charact": 336, "unix": [336, 355], "distinct": 336, "mayb": [336, 356], "machine_config": 336, "endswith": 336, "splitext": 336, "exactli": [336, 337, 356, 367], "move": [336, 337, 356, 383, 388], "renam": 336, "visa": 336, "versa": 336, "comfort": [336, 356], "orient": [336, 374], "program": [336, 357], "led": 336, "felt": 336, "contribut": 336, "hesit": 336, "predecessor": [336, 354, 355], "clumsi": 336, "harder": 336, "outcom": 336, "augment": 336, "explain": 336, "hope": 336, "dens": 336, "learn": [336, 356], "curv": 336, "worth": [336, 356], "skill": 336, "endeavor": 336, "manipul": 336, "get_available_cores_and_nod": 336, "theoret": 336, "dozen": 336, "theori": 336, "biogeochemistri": 336, "ksh": 337, "mac": [337, 355], "csh": 337, "tcsh": 337, "temporarili": 337, "recogn": [337, 357, 384], "anyon": 337, "caus": [337, 359, 364, 367], "person": [337, 353], "base_path_to_install_or_update_conda": 337, "with_netlib_lapack": 337, "flavor": [337, 356], "troubl": [337, 356], "recognit": 337, "downsid": 337, "unneed": 337, "reinstal": 337, "caution": 337, "load_": 337, "encod": 337, "load_dev_polaris_": [337, 356], "env_nam": 337, "dev_polaris_": [337, 353], "update_jigsaw": 337, "workdir": [337, 384], "unexpect": [337, 354, 356], "occur": [337, 353, 367], "echo": 337, "proceed": 337, "notic": 337, "conda_env": [337, 384], "load_polaris_test_morpheus_gnu_openmpi": 337, "__version__": 337, "rememb": 337, "incorrect": 337, "unus": 337, "session": [337, 356], "With": 337, "pip": 337, "substanti": 337, "unsupport": 337, "env_onli": 337, "risk": [337, 356, 375], "mpas_make_target": [337, 384], "scientif": [337, 384], "_albani": 337, "instruct": [337, 356], "es3m": 337, "compli": 337, "memor": 337, "guidelin": 337, "complianc": 337, "checker": 337, "isort": 337, "flynt": 337, "mypi": 337, "77": 337, "e302": 337, "blank": 337, "resolv": 337, "simpler": [337, 356], "new_branch_nam": 337, "disk": [337, 357, 359, 364], "respons": 337, "simplest": [337, 355], "your_new_branch": 337, "restart_filenam": 343, "polaris_branch": 349, "post": 349, "src": 349, "registry_process": 349, "seaice_model": 349, "1m": [350, 387], "disc": [350, 387], "config_initial_ice_area": 350, "config_initial_ice_volum": 350, "config_atmospheric_forcing_typ": 350, "config_forcing_start_tim": 350, "config_forcing_cycle_start": 350, "config_forcing_cycle_dur": 350, "config_forcing_precipitation_unit": 350, "mm_per_sec": 350, "config_forcing_sst_typ": 350, "ncar": 350, "config_update_ocean_flux": 350, "config_include_pond_freshwater_feedback": 350, "standard_phys": 352, "standardphys": 352, "year": [352, 368, 387], "volum": 352, "snow": 352, "exact_restart": 352, "exactrestart": 352, "geo": 353, "cartopi": 353, "14": 353, "np110py27_4": 353, "calledprocesserror": 353, "deploy_tmp": 353, "vpn": 353, "site": 353, "shell": [353, 355], "honor": 353, "wide": [353, 375], "spawn": 353, "usernam": [353, 356, 359, 362, 364], "proxy_en": 353, "all_proxi": 353, "proxyout": 353, "8080": 353, "no_proxi": 353, "localhost": [353, 357, 363, 364, 384], "127": 353, "proxy_dis": 353, "unset": 353, "anytim": 353, "fatal": 353, "mpi_init": 353, "stack": 353, "mpir_init_thread": 353, "159": 353, "mpid_init": 353, "164": 353, "mpidi_ch3_init": 353, "95": 353, "mpid_nem_init": 353, "314": 353, "mpid_nem_tcp_init": 353, "173": 353, "mpid_nem_tcp_get_business_card": 353, "395": 353, "getsockinterfaceaddr": 353, "369": 353, "pn2034311": 353, "errno": 353, "host": [353, 357, 363, 384], "focus": 354, "autom": 355, "exascal": 355, "kept": 355, "expert": 355, "uncoupl": 355, "extens": [355, 357], "primarili": 355, "darren": 355, "engwirda": 355, "quick": [355, 356, 368, 375, 385], "queue": 355, "beginn": [355, 356], "advanc": [355, 356], "mpas_to_yaml": 355, "troubleshoot": 355, "proxi": 355, "lanl": [355, 357, 359], "gethostbynam": 355, "glossari": 356, "stick": 356, "miniconda": 356, "3_chrysalis_intel_openmpi": 356, "strict": 356, "push": 356, "lowercas": 356, "hyphen": 356, "settl": 356, "desktop": 356, "realli": [356, 364], "nice": [356, 364], "supercomput": 356, "yet_another_channel": 356, "testgroup": 356, "vi": 356, "polaris_head": 356, "yetanotherchannel": 356, "instanc": 356, "highli": 356, "camelcas": 356, "capit": 356, "letter": 356, "cap": 356, "awkward": 356, "encourag": 356, "enclos": 356, "briefli": 356, "baroclinicchannel": 356, "globalconverg": 356, "add_test_group": 356, "interest": 356, "test_group": 356, "add_test_cas": 356, "anyth": 356, "probabl": [356, 363, 374], "suppos": 356, "easili": 356, "tide": 356, "sai": [356, 363], "res_str": 356, "1000": [356, 357, 367, 370, 374, 377, 379], "still": [356, 368, 383, 384, 388], "ti": 356, "loop": 356, "1km": [356, 370, 384], "4km": [356, 370, 384], "coarsest": [356, 357], "especi": 356, "promot": 356, "pattern": 356, "familiar": 356, "seen": 356, "brows": 356, "row": 356, "disadvantag": 356, "foremost": 356, "magic": 356, "effect": [356, 383], "pain": 356, "160": [356, 370], "500": [356, 357, 367, 370, 378], "path_to_mpas_ocean": 356, "path_to_working_dir": 356, "cat": 356, "slurm_jobid": 356, "_run_test": 356, "gpf": 356, "fs1": 356, "cbegeman": 356, "grid_typ": [356, 357, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "vert_level": [356, 357, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "partial_cell_typ": [356, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "min_pc_fract": [356, 367, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382, 383], "everywher": 356, "depress": [356, 367, 375], "mostli": 356, "logic": [356, 370, 378], "northern": [356, 370, 375, 378], "half": [356, 370, 375, 378], "southern": [356, 370], "halv": [356, 370], "gradient": [356, 370, 377, 378, 379, 382], "500km": [356, 370, 378], "40e3": [356, 370], "35": [356, 370, 371, 372, 373, 374, 378, 380, 381, 382, 383, 384, 388], "2e": [356, 370], "light": 356, "e3sm_compon": 356, "interact": [356, 359, 362, 363, 364, 384], "interrupt": 356, "pty": 356, "navig": 356, "newli": 356, "bunch": 356, "didn": 356, "mistak": 356, "finger": 356, "initial_normalveloc": 356, "initial_salin": 356, "obvious": 356, "stress": [356, 382], "landicemodelstep": 356, "huge": 356, "cp": 356, "05": [356, 374], "hmix_del2": 356, "bottom_drag": 356, "cvmix": 356, "0002": 356, "filename_interv": 356, "0100": 356, "input_interv": 356, "initial_onli": 356, "basicmesh": 356, "dayssincestart": 356, "surfacespe": 356, "lowersurfac": 356, "uppersurfac": 356, "ureconstructx": 356, "ureconstructi": 356, "load_dataset": 356, "final_temperatur": 356, "ab": 356, "proc": 356, "4proc": [356, 370], "8proc": [356, 370], "markdown": 356, "developers_guid": 356, "users_guid": 356, "daunt": 356, "flesh": 356, "bonu": 356, "improv": 356, "introduc": 356, "techniqu": 356, "aim": 356, "constrain_resourc": 356, "becam": 356, "mainten": 356, "counter": 356, "thought": 356, "yet_another_channel_test_cas": 356, "yetanotherchanneltestcas": 356, "choic": [356, 371, 372, 373, 374, 380, 381], "spuriou": [356, 370], "dissip": [356, 370], "pop": [356, 370], "mom": [356, 370], "mitgcm": [356, 370], "higher": 356, "heavi": 356, "analogi": 356, "tet": 356, "bear": 356, "late": 356, "_add_step": 356, "startswith": 356, "enumer": 356, "rpe_": 356, "_nu_": 356, "privat": 356, "break": [356, 370], "unusu": 356, "rpe_1_nu_1": [356, 370], "rpe_2_nu_5": [356, 370], "rpe_3_nu_10": 356, "rpe_4_nu_20": 356, "rpe_5_nu_200": 356, "20_00": 356, "0000": 356, "dayssincestartofsim": 356, "relativevort": 356, "pyplot": 356, "plt": 356, "output_": 356, "sections_yet_another_channel_": 356, "rpe_t": 356, "initial_state_file_nam": 356, "_plot": 356, "dirti": 356, "adopt": 356, "lesson": 356, "tricki": 356, "commun": 356, "nuanc": 356, "fake": 356, "wasn": 356, "fold": 356, "proper": 356, "third": 356, "previous": 356, "multinod": [357, 384], "explanatori": 357, "my_machin": 357, "extend": 357, "gitconfig": 357, "enter": 357, "author": 357, "email": 357, "pull_request": 357, "28": [357, 367, 371], "address": [357, 371, 380], "metadata": 357, "customize_config_pars": 357, "server_base_url": 357, "inej": 357, "check_siz": 357, "ssl": 357, "certif": 357, "core_path": 357, "partition_execut": 357, "dask": 357, "netcdf4": 357, "netcdf4_class": 357, "netcdf3_64bit": 357, "netcdf3_class": 357, "engin": 357, "mesh_databas": 357, "ocean_database_root": 357, "landice_database_root": 357, "mesh_cor": 357, "mesh_min_cor": 357, "mesh_max_memori": 357, "mesh_max_disk": 357, "init_cor": 357, "init_min_cor": 357, "init_max_memori": 357, "init_max_disk": 357, "init_thread": 357, "forward_cor": 357, "forward_min_cor": 357, "forward_thread": 357, "forward_max_memori": 357, "forward_max_disk": 357, "add_metadata": 357, "ec": 357, "wc": 357, "mesh_descript": 357, "autodetect": 357, "bathy_descript": 357, "gebco": 357, "2022": 357, "bedmachin": 357, "antarctica": 357, "init_descript": 357, "e3sm_vers": 357, "increment": 357, "mesh_revis": 357, "finest": 357, "min_r": 357, "max_r": 357, "max_depth": 357, "creation_d": 357, "peopl": 357, "contact": 357, "temperaturemax": 357, "temperature_max": 357, "33": [357, 378, 384], "enable_ocean_initial_condit": 357, "enable_ocean_graph_partit": 357, "enable_seaice_initial_condit": 357, "enable_scrip": 357, "onlin": 357, "member": 357, "offlin": 357, "enable_diagnostics_fil": 357, "coarser": [357, 367, 371, 372, 373, 374, 380, 381], "finer": [357, 367], "comparisonlatresolut": 357, "comparisonlonresolut": 357, "antarct": 357, "polar": [357, 358, 360, 367], "stereograph": 357, "comparisonantarcticstereowidth": 357, "6000": [357, 367], "comparisonantarcticstereoresolut": 357, "arctic": [357, 387], "comparisonarcticstereowidth": 357, "comparisonarcticstereoresolut": 357, "tanh_dz": 357, "16": [357, 382, 384], "3000": [357, 374], "max_layer_thick": [357, 367], "retain": 357, "ecosystem": 358, "gain": 358, "confluenc": 358, "public_html": [358, 360, 363], "soft": [358, 360, 363, 384], "mpi_intel": [358, 360, 361, 363], "36": [358, 363, 382, 384], "condo": [358, 384], "acm": [358, 384], "medium": 358, "acme_high": 358, "environo": [358, 359, 360, 361, 362, 364], "dst": 359, "calendar": 359, "network": 359, "introduct": 359, "platform": 359, "batch": [359, 362], "wtrw": 359, "ch": 359, "fe": 359, "lustr": [359, 362], "scratch4": 359, "scratch5": 359, "sacctmgr": 359, "assoc": 359, "cluster": 359, "45": 359, "sshare": 359, "sreport": 359, "accountutilizationbyus": 359, "2019": 359, "prioriti": 359, "yellow": 359, "chkhome": 359, "petabyt": 359, "df": 359, "bp": 359, "archiv": [359, 364], "hpss": [359, 364], "front": [359, 375], "tn": 359, "storag": 359, "project_nam": 359, "salloc": [359, 362, 363, 364], "account_nam": 359, "gpu": [359, 362, 364], "hyperthread": [359, 362, 364], "hang": [359, 364], "threads_per_cor": [359, 362, 364], "compyf": 361, "app": [361, 384], "pmi2": 361, "40": [361, 374, 375], "olcf": 362, "ornl": 362, "cli115": 362, "poari": 362, "orion": 362, "world": 362, "software_compil": 362, "gnugpu": 362, "mpi_gnugpu": 362, "mpi_crayclang": 362, "crayclanggpu": 362, "mpi_crayclanggpu": 362, "cray_compil": [362, 364], "submit": 363, "workload": 363, "squeue": 363, "my_usernam": [363, 364], "scancel": 363, "jobid": 363, "cancel": 363, "emtpi": 363, "three": [363, 371, 373, 374, 375, 380, 381, 390], "mpi_mpich": [363, 384], "mpi_openmpi": [363, 384], "nompi": [363, 384], "p1": 364, "nersc": 364, "iri": 364, "filesystem": 364, "myquota": 364, "prjquota": 364, "projectid": 364, "m1795": 364, "hsi": 364, "htar": 364, "zstash": 364, "cf": [364, 384], "cdir": [364, 384], "premium": 364, "8844": 364, "monik": 364, "browser": 364, "grab": 364, "logon": 364, "kernel": 364, "myenv": 364, "ipykernel": 364, "kernelspec": 364, "u1": 364, "interpret": 364, "argv": 364, "ipykernel_launch": 364, "connection_fil": 364, "display_nam": 364, "languag": 364, "equilibrium": 365, "tasksthat": 365, "influenc": 365, "phase": [365, 375], "mask_vari": 365, "adjustsshmask": 365, "adjust_vari": [365, 375], "2500": 367, "transit": [367, 371, 372, 373, 380, 381], "transition_level": 367, "deepest": 367, "stewart": 367, "2017": 367, "delta": [367, 370, 374, 382], "z_2": 367, "z_1": 367, "mathrm": 367, "tanh": 367, "rightarrow": 367, "z_k": 367, "z_0": 367, "z_": [367, 382], "k": 367, "finder": 367, "n_z": 367, "h_": 367, "hyperbol": 367, "tangent": 367, "k_0": 367, "v3": 367, "5500": 367, "250": [367, 378], "scienc": 367, "hydrograph": 367, "climatologi": 367, "renorm": 367, "arrm10to60": 367, "80": 367, "146": 367, "5550": 367, "51": 367, "221": 367, "ziso": [367, 390], "63": 367, "collaps": 367, "adcroft": 367, "campin": 367, "2004": 367, "absenc": 367, "press": 367, "batymetri": 367, "stair": 367, "month": 368, "websit": [368, 385], "release_6": 368, "ilicak": [370, 378], "2012": [370, 371, 373, 378, 380, 381], "variat": [370, 374], "distinguish": 370, "zonal": [370, 374, 378, 382], "meridion": [370, 378, 382], "psu": [370, 375, 378, 382], "cooler": 370, "north": 370, "sinusoid": [370, 378], "perturb": [370, 372, 378, 379], "t_0": 370, "t_b": 370, "t_": 370, "z_b": 370, "y_": 370, "l_x": 370, "warmer": 370, "ge": [370, 372], "gradient_width_fract": 370, "l_y": 370, "le": [370, 382], "stationari": [370, 382], "literatur": 370, "mk": 370, "celsiu": [370, 375], "lauritzen": [371, 373, 380, 381], "nonlinear": [371, 374, 377, 379], "mixing_analysi": 371, "icosohydr": [371, 372, 373, 380, 381], "nearest": [371, 372, 373, 380, 381], "insensit": [371, 372, 373, 374, 380, 381, 382], "300": [371, 372, 373, 380, 381, 383], "debugtrac": [371, 373, 380, 381], "tracer2": [371, 373, 380, 381], "tracer3": [371, 373, 380, 381], "nonlinearli": 371, "tau": [371, 372, 373, 380], "lambda": [371, 373, 374, 380], "theta": [371, 373, 374, 380], "co": [371, 372, 373, 374, 377, 379, 380], "equat": [371, 372, 373, 374, 377, 379, 380, 381, 382], "vel_pd": [371, 372, 373, 380, 381], "rung": [371, 372, 373, 374, 380, 381], "kutta": [371, 372, 373, 374, 380, 381], "4th": [371, 372, 373, 374, 380, 381], "spherical_convergence_forward": [371, 373, 380, 381], "globe": [371, 372, 373, 380, 381], "correlated_tracer_2d": 371, "288": [371, 373, 380, 381], "cosine_bells_radiu": [371, 373, 380, 381], "cosine_bells_background": [371, 373, 380, 381], "amplitud": [371, 373, 375, 377, 378, 379, 380, 381], "cosine_bells_amplitud": [371, 373, 380, 381], "slot": [371, 373, 380, 381], "cylind": [371, 373, 380, 381], "slotted_cylinders_radiu": [371, 373, 380, 381], "slotted_cylinders_background": [371, 373, 380, 381], "slotted_cylinders_amplitud": [371, 373, 380, 381], "sphere_transport_viz_trac": [371, 373, 380, 381], "sphere_transport_viz_tracer_diff": [371, 373, 380, 381], "sphere_transport_viz_h": [371, 373, 380, 381], "99": [371, 373, 380, 381], "101": [371, 373, 380, 381], "sphere_transport_viz_h_diff": [371, 373, 380, 381], "vel_amp": [371, 373, 380], "convergence_thresh_tracer1": [371, 373, 380, 381], "convergence_thresh_tracer2": [371, 373, 380, 381], "66": 371, "convergence_thresh_tracer3": [371, 373, 380, 381], "mixing_evaluation_tim": 371, "sphere_transport_viz": [371, 373, 380, 381], "roughli": [371, 372, 373, 380, 381], "studi": [371, 372, 373, 374, 380, 381], "williamson": [372, 374], "1992": [372, 374], "sec": 372, "3a": 372, "skamarock": 372, "gassmann": 372, "bodi": 372, "psi": 372, "proportion": [372, 374], "slow": 372, "passiv": 372, "psi_0": 372, "debug_tracers_1": 372, "equatori": 372, "u_0": [372, 373, 374, 380], "tendenc": [372, 379], "rad": 372, "lat_cent": 372, "lon_cent": 372, "14159265": 372, "2123666": 372, "6667": 372, "hill": 372, "psi0": 372, "576": 372, "circul": 372, "48": 373, "86": 373, "chosen": [374, 382], "h_0": 374, "textrm": 374, "sensit": 374, "l_1": 374, "l_2": 374, "l_": 374, "examin": [374, 382], "vel_period": 374, "gh_0": 374, "94e4": 374, "william": 374, "paper": [374, 384], "arbitrari": 374, "evolut": [374, 378], "unexpectedli": 374, "convergence_thresh_h": 374, "convergence_thresh_normalveloc": 374, "necessit": 374, "geostropnic_viz": 374, "geostrophic_viz_h": 374, "deep": 374, "geostrophic_viz_vel": 374, "geostrophic_viz_diff_h": 374, "geostrophic_viz_diff_vel": 374, "dimension": 375, "strenuou": 375, "transient": 375, "land_ice_pressur": 375, "freshwat": 375, "heat": [375, 382], "44": 375, "piecewis": 375, "y1": 375, "y2": 375, "y3": 375, "dictat": [375, 382], "inflect": 375, "y1_water_column_thick": 375, "y2_water_column_thick": 375, "1040": 375, "rise": 375, "abruptli": 375, "occupi": 375, "75": 375, "melt": 375, "geometri": 375, "parameter": 375, "surface_salin": [375, 382], "bottom_salin": 375, "190": 375, "y0_land_ice_height_above_float": 375, "gl": 375, "1050": 375, "ice_shelf_2d_default": 375, "forward_run_dur": 375, "ten": 375, "ice_shelf_2d_default_tidal_forc": 375, "_tidal_forc": 375, "propag": [377, 378, 379], "doubli": [377, 379], "assess": [377, 379], "accuraci": [377, 379], "discret": [377, 379], "bishnu": [377, 379], "friction": [377, 379], "neglect": [377, 379], "analyt": [377, 390], "k_x": [377, 379], "k_y": [377, 379], "availi": [377, 379], "coriloi": 377, "1e": 377, "ssh_amplitud": [377, 379], "wavelength": [377, 379], "n_wavelengths_x": [377, 379], "n_wavelengths_i": [377, 379], "induc": 378, "doi": 378, "org": 378, "1016": 378, "j": [378, 384], "ocemod": 378, "2011": 378, "003": 378, "stabl": 378, "stratif": 378, "20km": 378, "250km": 378, "inher": [378, 383], "background_salin": 378, "amplitude_width_dist": 378, "amplitude_width_frac": 378, "50e3": 378, "del2": 378, "internal_wave_rp": 378, "plot_tim": 378, "min_temp": 378, "max_temp": 378, "embed": 379, "eta_0": 379, "preserv": [380, 384], "rough": 380, "revers": 380, "filament_analysi": 380, "thhe": 380, "filament_evaluation_tim": 380, "offset": 381, "vector": 381, "rotation_vector": 381, "span": 382, "arbitrarili": 382, "virtu": 382, "400": 382, "phi": 382, "phi_0": 382, "dz": 382, "ml": 382, "mld": 382, "surface_x": 382, "x_gradient_mixed_lay": 382, "mixed_layer_depth_x": 382, "x_difference_across_mixed_lay": 382, "x_gradient_interior": 382, "4x4": 382, "960": 382, "degc": 382, "temperature_gradient_mixed_lay": 382, "temperature_difference_across_mixed_lay": 382, "temperature_gradient_interior": 382, "mixed_layer_depth_temperatur": 382, "salinity_gradient_mixed_lay": 382, "salinity_difference_across_mixed_lay": 382, "salinity_gradient_interior": 382, "mixed_layer_depth_salin": 382, "kpp": 382, "restor": 382, "piston": 382, "toward": 382, "temperature_surface_restoring_valu": 382, "temperature_piston_veloc": 382, "salinity_surface_restoring_valu": 382, "salinity_piston_veloc": 382, "temperature_interior_restoring_r": 382, "salinity_interior_restoring_r": 382, "net": 382, "latent": 382, "bulk": 382, "latent_heat_flux": 382, "sensibl": 382, "sensible_heat_flux": 382, "solar": 382, "shortwav": 382, "shortwave_heat_flux": 382, "evapor": 382, "evaporation_flux": 382, "5e": 382, "rain": 382, "rain_flux": 382, "wind_stress_zon": 382, "wind_stress_meridion": 382, "welcom": [383, 388], "icosohedr": [383, 388], "pertain": [383, 388], "warrant": 383, "investig": 383, "load_latest_polari": 384, "shared_clim": 384, "minu": 384, "load_latest_polaris_gnu_openmpi": 384, "create_polaris_load_script": 384, "load_polaris_1": 384, "0_mpich": 384, "exclud": 384, "wiki": 384, "circular_shelf": 384, "sia_smoke_test": 384, "sia_decomposition_test": 384, "sia_restart_test": 384, "fo_smoke_test": 384, "fo_decomposition_test": 384, "fo_restart_test": 384, "37": 384, "17": 384, "210131_test_new_branch": 384, "my_config": 384, "smaller": 384, "previous_workdir": 384, "recompil": 384, "safer": 384, "test_subdir": 384, "clock": 384, "exclus": 384, "job_nam": 384, "fo_integr": 384, "sia_integr": 384, "cosine_bell_cached_init": [384, 389], "ec30to60": 384, "ecwisc30to60": 384, "qu240_for_e3sm": 384, "quwisc240_for_e3sm": 384, "wc14": 384, "suitenam": 384, "seaice_standalone_framework": 385, "71": 387, "35n": 387, "156": 387, "5w": 387, "atmospher": 387, "timeseri": 387, "prohibit": 389, "speed": 389, "radial": 390}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 2, 1, "", "symlink"], [61, 2, 1, "", "update_permissions"]], "polaris.job": [[62, 2, 1, "", "get_slurm_options"], [63, 2, 1, "", "write_job_script"]], "polaris.list": [[64, 2, 1, "", "list_cases"], [65, 2, 1, "", "list_machines"], [66, 2, 1, "", "list_suites"]], "polaris.logging": [[67, 2, 1, "", "log_method_call"]], "polaris.mesh": [[68, 0, 1, "", "IcosahedralMeshStep"], [75, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [70, 1, 1, "", "get_cell_width"], [71, 1, 1, "", "get_subdivisions"], [72, 1, 1, "", "make_jigsaw_mesh"], [73, 1, 1, "", "run"], [74, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, 1, 1, "", "__init__"], [76, 1, 1, "", "build_cell_width_lat_lon"], [77, 1, 1, "", "make_jigsaw_mesh"], [78, 1, 1, "", "run"], [79, 1, 1, "", "setup"]], "polaris.mesh.planar": [[80, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[81, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, 1, 1, "", "__init__"], [82, 1, 1, "", "run"], [83, 1, 1, "", "save_and_plot_cell_width"], [84, 1, 1, "", "setup"]], "polaris.model_step": [[85, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[86, 2, 1, "", "area_for_field"], [87, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[88, 2, 1, "", "ingest"], [89, 2, 1, "", "parse_replacements"], [90, 2, 1, "", "replace"], [91, 2, 1, "", "write"]], "polaris.ocean": [[142, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[142, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[143, 0, 1, "", "ConvergenceAnalysis"], [151, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "compute_error"], [145, 1, 1, "", "convergence_parameters"], [146, 1, 1, "", "exact_solution"], [147, 1, 1, "", "get_output_field"], [148, 1, 1, "", "plot_convergence"], [149, 1, 1, "", "run"], [150, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "compute_cell_count"], [153, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[154, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "compute_cell_count"]], "polaris.ocean.ice_shelf": [[156, 0, 1, "", "IceShelfTask"], [158, 0, 1, "", "SshAdjustment"], [160, 0, 1, "", "SshForward"]], "polaris.ocean.ice_shelf.IceShelfTask": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "setup_ssh_adjustment_steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "polaris.ocean.ice_shelf.SshForward": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "compute_cell_count"], [162, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.mesh.spherical": [[163, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[164, 0, 1, "", "OceanModelStep"], [169, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "compute_cell_count"], [166, 1, 1, "", "constrain_resources"], [167, 1, 1, "", "map_yaml_to_namelist"], [168, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[170, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[171, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[172, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[172, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[173, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[173, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[174, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "compute_cell_count"], [176, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[177, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"], [179, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[180, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[180, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[181, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[183, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[185, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "run"], [187, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[188, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[188, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[189, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[191, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[193, 0, 1, "", "CosineBell"], [195, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[196, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[198, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "compute_cell_count"], [200, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[201, 0, 1, "", "Init"], [203, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[204, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[206, 0, 1, "", "Geostrophic"], [208, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[209, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "exact_solution"], [211, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[212, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[212, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[213, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[215, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d": [[217, 2, 1, "", "add_ice_shelf_2d_tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default": [[218, 0, 1, "", "Default"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[218, 1, 1, "", "__init__"]], "polaris.ocean.tasks.ice_shelf_2d.forward": [[219, 0, 1, "", "Forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "compute_cell_count"], [221, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.ice_shelf_2d.init": [[222, 0, 1, "", "Init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[222, 1, 1, "", "__init__"], [223, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.validate": [[224, 0, 1, "", "Validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[224, 1, 1, "", "__init__"], [225, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.viz": [[226, 0, 1, "", "Viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[228, 0, 1, "", "InertialGravityWave"], [229, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[228, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[230, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[232, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "normal_velocity"], [234, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[235, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[235, 1, 1, "", "__init__"], [236, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[237, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[237, 1, 1, "", "__init__"], [238, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[239, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave": [[241, 2, 1, "", "add_internal_wave_tasks"]], "polaris.ocean.tasks.internal_wave.default": [[242, 0, 1, "", "Default"]], "polaris.ocean.tasks.internal_wave.default.Default": [[242, 1, 1, "", "__init__"]], "polaris.ocean.tasks.internal_wave.forward": [[243, 0, 1, "", "Forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[243, 1, 1, "", "__init__"], [244, 1, 1, "", "compute_cell_count"], [245, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.internal_wave.init": [[246, 0, 1, "", "Init"]], "polaris.ocean.tasks.internal_wave.init.Init": [[246, 1, 1, "", "__init__"], [247, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.rpe": [[248, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis": [[250, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[250, 1, 1, "", "__init__"], [251, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.viz": [[252, 0, 1, "", "Viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[252, 1, 1, "", "__init__"], [253, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[254, 0, 1, "", "ManufacturedSolution"], [255, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[254, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[256, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[258, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[258, 1, 1, "", "__init__"], [259, 1, 1, "", "normal_velocity"], [260, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[261, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[261, 1, 1, "", "__init__"], [262, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[263, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[263, 1, 1, "", "__init__"], [264, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[265, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[265, 1, 1, "", "__init__"], [266, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[267, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[268, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[268, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[269, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[269, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[270, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[270, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[271, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[271, 1, 1, "", "__init__"], [272, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[273, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[273, 1, 1, "", "__init__"], [274, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[275, 0, 1, "", "SphereTransport"], [277, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[275, 1, 1, "", "__init__"], [276, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[278, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[278, 1, 1, "", "__init__"], [279, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[280, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[280, 1, 1, "", "__init__"], [281, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[282, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[282, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[283, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[283, 1, 1, "", "__init__"], [284, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[285, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[285, 1, 1, "", "__init__"], [286, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[287, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[287, 1, 1, "", "__init__"], [288, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[289, 2, 1, "", "generate_1d_grid"], [290, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[291, 2, 1, "", "init_vertical_coord"], [296, 2, 1, "", "update_layer_thickness"]], "polaris.ocean.vertical.partial_cells": [[292, 2, 1, "", "alter_bottom_depth"], [293, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.sigma": [[294, 2, 1, "", "init_sigma_vertical_coord"], [295, 2, 1, "", "update_sigma_layer_thickness"]], "polaris.ocean.vertical.zlevel": [[297, 2, 1, "", "compute_min_max_level_cell"], [298, 2, 1, "", "compute_z_level_layer_thickness"], [299, 2, 1, "", "compute_z_level_resting_thickness"], [300, 2, 1, "", "init_z_level_vertical_coord"], [301, 2, 1, "", "update_z_level_layer_thickness"]], "polaris.ocean.vertical.zstar": [[302, 2, 1, "", "init_z_star_vertical_coord"], [303, 2, 1, "", "update_z_star_layer_thickness"]], "polaris.ocean.viz": [[304, 2, 1, "", "compute_transect"], [305, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[306, 2, 1, "", "find_planar_transect_cells_and_weights"], [307, 2, 1, "", "find_spherical_transect_cells_and_weights"], [308, 2, 1, "", "make_triangle_tree"], [309, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[310, 2, 1, "", "find_transect_levels_and_weights"], [311, 2, 1, "", "interp_mpas_to_transect_cells"], [312, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[92, 2, 1, "", "get_available_parallel_resources"], [93, 2, 1, "", "get_parallel_command"], [94, 2, 1, "", "run_command"], [95, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[96, 2, 1, "", "write"]], "polaris.remap": [[97, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "dst_from_lon_lat"], [99, 1, 1, "", "dst_from_mpas"], [100, 1, 1, "", "dst_from_points"], [101, 1, 1, "", "dst_from_proj"], [102, 1, 1, "", "dst_global_lon_lat"], [103, 1, 1, "", "get_remapper"], [104, 1, 1, "", "runtime_setup"], [105, 1, 1, "", "src_from_lon_lat"], [106, 1, 1, "", "src_from_mpas"], [107, 1, 1, "", "src_from_proj"]], "polaris.run": [[108, 2, 1, "", "complete_step_run"], [109, 2, 1, "", "load_dependencies"], [112, 2, 1, "", "setup_config"], [113, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[110, 2, 1, "", "run_single_step"], [111, 2, 1, "", "run_tasks"]], "polaris.seaice": [[340, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[340, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[341, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[342, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[342, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[343, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[343, 1, 1, "", "__init__"], [344, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[345, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[345, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[346, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[346, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[347, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[347, 1, 1, "", "__init__"], [348, 1, 1, "", "run"]], "polaris.setup": [[114, 2, 1, "", "setup_task"], [115, 2, 1, "", "setup_tasks"]], "polaris.streams": [[116, 2, 1, "", "read"], [117, 2, 1, "", "update_defaults"], [118, 2, 1, "", "update_tree"], [119, 2, 1, "", "write"]], "polaris.suite": [[120, 2, 1, "", "setup_suite"]], "polaris.validate": [[121, 2, 1, "", "compare_variables"]], "polaris.viz": [[122, 2, 1, "", "plot_global_lat_lon_field"], [123, 2, 1, "", "plot_global_mpas_field"], [124, 2, 1, "", "plot_horiz_field"], [125, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[126, 0, 1, "", "PolarisYaml"], [130, 2, 1, "", "main_mpas_to_yaml"], [131, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [132, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[126, 1, 1, "", "__init__"], [127, 1, 1, "", "read"], [128, 1, 1, "", "update"], [129, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 356], "share": [1, 6, 9, 336, 356], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 140, 333, 356, 365, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 73, 78, 82, 108, 109, 110, 111, 112, 113, 141, 149, 159, 178, 186, 190, 192, 202, 205, 214, 216, 223, 225, 227, 238, 240, 247, 251, 253, 264, 266, 272, 274, 281, 284, 286, 288, 333, 337, 344, 348, 358, 359, 360, 361, 362, 364, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388], "onc": 1, "befor": 1, "depend": [1, 6, 333], "output": [1, 333, 356], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 140, 141, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 322, 329, 332, 335, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 351, 356, 376, 378, 383, 384, 386, 388, 390], "work": 1, "directori": [1, 331], "structur": [1, 331], "i": [1, 384], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 337, 355, 357, 384], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 141, 333, 337, 363], "other": [1, 138, 333, 356, 363, 384], "implement": [1, 2], "set": [1, 141, 337, 384], "up": [1, 337, 384], "test": [1, 2, 6, 140, 141, 356, 357, 387], "And": 1, "valid": [1, 2, 3, 18, 121, 189, 190, 224, 225, 316, 321, 324, 343, 344, 356, 384], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 141, 337, 356, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "same": 2, "api": 3, "refer": [3, 140, 141], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 141, 313, 330, 336, 337, 349, 368, 384, 385], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 355, 358, 359, 360, 361, 362, 364, 384], "framework": [3, 10, 140, 141, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 336, 339, 352, 366], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 64, 65, 66], "setup": [3, 5, 8, 36, 47, 58, 74, 79, 84, 114, 115, 150, 168, 179, 187, 333], "suit": [3, 5, 8, 120, 334, 369, 384, 389], "cach": [3, 5, 8, 55, 333], "mpas_to_yaml": [3, 5], "base": [3, 140], "class": [3, 336], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 138, 141, 330, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "io": [3, 11, 59, 60, 61], "job": [3, 62, 63, 363, 384], "log": [3, 12, 67], "mesh": [3, 13, 14, 19, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 140, 141, 163, 356, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "model_step": [3, 85], "mpa": [3, 6, 15, 19, 86, 87, 141, 315, 350], "namelist": [3, 14, 88, 89, 90, 91, 141], "parallel": [3, 92, 93, 94, 95], "proven": [3, 16, 96], "remap": [3, 17, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "stream": [3, 14, 116, 117, 118, 119, 141, 356], "viz": [3, 122, 123, 124, 125, 191, 192, 204, 205, 215, 216, 226, 227, 239, 240, 252, 253, 265, 266, 273, 274, 287, 288, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 347, 348, 352, 356], "yaml": [3, 14, 126, 127, 128, 129, 130, 131, 132, 141], "build": [4, 138, 337, 384], "serial": [5, 8, 110, 111], "deploi": 6, "new": [6, 138, 356], "spack": [6, 138, 337, 384], "environ": [6, 138, 337, 353, 384], "where": 6, "we": 6, "updat": [6, 14, 128, 337], "mach": 6, "conda": [6, 337, 353, 363, 384], "identifi": 6, "e3sm": [6, 14, 141, 337, 384], "machin": [6, 138, 337, 363, 384], "describ": [6, 138], "modul": [6, 8, 336, 337], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 337, 356], "remot": [6, 364], "branch": 6, "petsc": [6, 337], "netlib": [6, 337], "lapack": [6, 337], "albani": [6, 337], "troubleshoot": [6, 337, 353], "ocean": [6, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 368], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 138, 141, 330, 333, 356, 357], "comment": 9, "symlink": [11, 60, 333], "download": [11, 59, 333], "permiss": 11, "spheric": [13, 19, 81, 82, 83, 84, 140, 141, 154, 155, 163], "planar": [13, 19, 80], "uniform": [13, 141, 367], "gener": 13, "model": [14, 140, 141, 164, 165, 166, 167, 168, 169, 314, 350, 356, 384], "an": [14, 141, 356], "ad": [14, 138, 333, 356], "dynam": [14, 356], "input": [14, 333], "partit": [14, 32], "pio": 14, "make": [14, 356], "graph": 14, "area": 15, "time": [15, 141, 356, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 388], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 140, 141, 356, 387], "common": 19, "matplotlib": 19, "style": [19, 336, 337], "horizont": [19, 356], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 356], "grid": [19, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 153, 162, 176, 182, 200, 221, 245], "map_yaml_to_namelist": [31, 167], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 104, 333], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 166, 333], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 184, 194, 207, 249, 276, 335, 353], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "update_permiss": 61, "get_slurm_opt": 62, "write_job_script": 63, "list_cas": 64, "list_machin": 65, "list_suit": 66, "log_method_cal": 67, "icosahedralmeshstep": [68, 69, 70, 71, 72, 73, 74], "build_subdivisions_cell_width_lat_lon": 69, "get_cell_width": 70, "get_subdivis": 71, "make_jigsaw_mesh": [72, 77], "quasiuniformsphericalmeshstep": [75, 76, 77, 78, 79], "build_cell_width_lat_lon": 76, "compute_planar_hex_nx_ni": 80, "sphericalbasestep": [81, 82, 83, 84], "save_and_plot_cell_width": 83, "make_graph_fil": 85, "area_for_field": 86, "time_index_from_xtim": 87, "ingest": 88, "parse_replac": 89, "replac": 90, "write": [91, 96, 119, 129], "get_available_parallel_resourc": 92, "get_parallel_command": 93, "run_command": 94, "set_cores_per_nod": 95, "mappingfilestep": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "dst_from_lon_lat": 98, "dst_from_mpa": 99, "dst_from_point": 100, "dst_from_proj": 101, "dst_global_lon_lat": 102, "get_remapp": 103, "src_from_lon_lat": 105, "src_from_mpa": 106, "src_from_proj": 107, "complete_step_run": 108, "load_depend": 109, "run_single_step": 110, "run_task": 111, "setup_config": 112, "unpickle_suit": 113, "setup_task": [114, 115], "read": [116, 127], "update_default": 117, "update_tre": 118, "setup_suit": 120, "compare_vari": 121, "plot_global_lat_lon_field": 122, "plot_global_mpas_field": 123, "plot_horiz_field": 124, "use_mplstyl": 125, "polarisyaml": [126, 127, 128, 129], "main_mpas_to_yaml": 130, "mpas_namelist_and_streams_to_yaml": 131, "yaml_to_mpas_stream": 132, "anvil": [133, 358], "intel": [133, 135, 136, 139], "gnu": [133, 134, 135, 136, 137, 139], "chicoma": [134, 359], "cpu": [134, 139, 359, 364], "chrysali": [135, 360], "compymcnodefac": [136, 361], "frontier": [137, 362], "crayclang": 137, "support": [138, 314, 337, 350, 363, 384], "perlmutt": [139, 364], "pm": 139, "baroclinic_channel": [140, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 316], "cosine_bel": [140, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 318, 369], "geostroph": [140, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 320, 374], "ice_shelf_2d": [140, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 321], "inertial_gravity_wav": [140, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 323], "internal_wav": [140, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 324], "manufactured_solut": [140, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 325], "single_column": [140, 267, 268, 269, 270, 271, 272, 273, 274, 328, 338, 341, 342, 343, 344, 345, 346, 347, 348, 352], "sphere_transport": [140, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "converg": [140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 379], "ic": [140, 141, 365, 375, 385], "shelf": [140, 141, 365, 375], "potenti": [140, 141], "energi": [140, 141], "rpe": [140, 141, 170, 183, 184, 185, 186, 187, 248, 249, 250, 251, 316, 324, 370, 378], "vertic": [140, 141, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 356, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383], "coordin": [140, 141, 356, 367], "v": 141, "map": 141, "omega": 141, "mpi": [141, 363], "resourc": 141, "interv": 141, "quasi": 141, "icosahedr": 141, "rest": 141, "convergenceanalysi": [143, 144, 145, 146, 147, 148, 149, 150], "compute_error": 144, "convergence_paramet": [145, 279], "exact_solut": [146, 197, 210, 231, 232, 233, 234, 257, 258, 259, 260, 323, 325], "get_output_field": [147, 211], "plot_converg": 148, "convergenceforward": [151, 152, 153], "compute_cell_count": [152, 155, 161, 165, 175, 199, 220, 236, 244, 262], "sphericalconvergenceforward": [154, 155], "ice_shelf": [156, 157, 158, 159, 160, 161, 162], "iceshelftask": [156, 157], "setup_ssh_adjustment_step": 157, "sshadjust": [158, 159], "sshforward": [160, 161, 162], "add_spherical_base_mesh_step": 163, "oceanmodelstep": [164, 165, 166, 167, 168], "get_time_interval_str": 169, "compute_rp": 170, "add_baroclinic_channel_task": 171, "decomp": [172, 316, 370], "default": [173, 218, 242, 316, 321, 324, 356, 370, 375, 378], "forward": [174, 175, 176, 198, 199, 200, 212, 219, 220, 221, 235, 236, 243, 244, 245, 261, 262, 269, 282, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 345, 352, 356], "init": [177, 178, 179, 201, 202, 203, 213, 214, 222, 223, 237, 238, 246, 247, 263, 264, 271, 272, 283, 284, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 356], "restart": [180, 181, 182, 316, 370, 387], "restart_step": [181, 182], "restartstep": [181, 182], "analysi": [185, 186, 187, 196, 197, 209, 210, 211, 230, 231, 250, 251, 256, 257, 278, 279, 317, 318, 319, 320, 323, 325, 326, 327, 356, 374], "thread": [188, 316, 370], "cosinebel": [193, 194], "add_cosine_bell_task": 195, "add_geostrophic_task": 208, "add_ice_shelf_2d_task": 217, "inertialgravitywav": 228, "add_inertial_gravity_wave_task": 229, "exactsolut": [232, 233, 234, 258, 259, 260], "normal_veloc": [233, 259], "ssh": [234, 260, 365], "add_internal_wave_task": 241, "manufacturedsolut": 254, "add_manufactured_solution_task": 255, "add_single_column_task": [267, 341], "cvmix": [268, 328, 382], "ideal_ag": 270, "idealag": 270, "spheretransport": [275, 276], "add_sphere_transport_task": 277, "filament_analysi": [280, 281, 326], "filamentanalysi": [280, 281], "mixing_analysi": [285, 286, 317], "mixinganalysi": [285, 286], "grid_1d": [289, 290], "generate_1d_grid": 289, "write_1d_grid": 290, "init_vertical_coord": 291, "partial_cel": [292, 293], "alter_bottom_depth": 292, "alter_ssh": 293, "sigma": [294, 295, 367], "init_sigma_vertical_coord": 294, "update_sigma_layer_thick": 295, "update_layer_thick": 296, "zlevel": [297, 298, 299, 300, 301], "compute_min_max_level_cel": 297, "compute_z_level_layer_thick": 298, "compute_z_level_resting_thick": 299, "init_z_level_vertical_coord": 300, "update_z_level_layer_thick": 301, "zstar": [302, 303], "init_z_star_vertical_coord": 302, "update_z_star_layer_thick": 303, "compute_transect": 304, "plot_transect": 305, "transect": [306, 307, 308, 309, 310, 311, 312], "horiz": [306, 307, 308, 309], "find_planar_transect_cells_and_weight": 306, "find_spherical_transect_cells_and_weight": 307, "make_triangle_tre": 308, "mesh_to_triangl": 309, "vert": [310, 311, 312], "find_transect_levels_and_weight": 310, "interp_mpas_to_transect_cel": 311, "interp_mpas_to_transect_nod": 312, "initi": [315, 350, 356, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "condit": [315, 350, 356, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "boundari": 315, "forc": [315, 350, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "correlated_tracers_2d": 317, "base_mesh": [317, 318, 319, 320, 326, 327], "divergent_2d": 319, "nondivergent_2d": 326, "rotation_2d": 327, "ideal": [328, 382], "ag": [328, 382], "categori": [329, 383, 388], "constructor": [330, 333, 335], "organ": 332, "attribut": [333, 335], "copi": 333, "pull": 334, "request": 334, "pr": 334, "nightli": 334, "overview": 336, "code": [336, 337, 356], "packag": 336, "within": 336, "group": [336, 356], "relat": 336, "quick": [337, 384], "start": [337, 356, 384], "develop": [337, 355, 356], "unix": 337, "shell": 337, "repositori": 337, "beginn": 337, "compil": 337, "system": 337, "unknown": 337, "what": 337, "script": [337, 384], "doe": 337, "flag": 337, "activ": 337, "switch": 337, "between": [337, 356], "differ": 337, "onli": 337, "repo": 337, "worktre": 337, "advanc": 337, "seaic": [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350], "exact_restart": [342, 343, 344], "exactrestart": 342, "standard_phys": [346, 347, 348], "standardphys": 346, "standard_physics_test": 352, "exact_restart_test": 352, "solver": 353, "error": 353, "when": 353, "proxi": 353, "lanl": 353, "mac": 353, "gethostbynam": 353, "fail": 353, "glossari": [354, 355], "": 355, "guid": 355, "tutori": [355, 356], "compass": 355, "get": 356, "vari": 356, "resolut": 356, "paramet": 356, "thing": 356, "out": 356, "defin": 356, "more": 356, "again": 356, "one": 356, "second": 356, "enhanc": 356, "comput": 356, "cell": 356, "count": 356, "superclass": 356, "studi": 356, "how": 356, "pass": 356, "data": [356, 364], "A": 357, "case": 357, "load": [358, 359, 360, 361, 362, 364, 384], "slurm": 363, "queue": 363, "mpich": 363, "openmpi": 363, "No": 363, "forg": 363, "jupyt": 364, "notebook": 364, "adjust": 365, "1d": 367, "type": 367, "tanh_dz": 367, "index_tanh_dz": 367, "60layerphc": 367, "80layere3smv1": 367, "100layere3smv1": 367, "3d": 367, "z": 367, "star": 367, "level": 367, "cosine_bell_cached_init": 369, "baroclin": 370, "channel": 370, "descript": [370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "durat": [370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "core": [370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388], "correl": 371, "tracer": 371, "2": [371, 373, 380, 381], "d": [371, 373, 380, 381], "cosin": 372, "bell": 372, "diverg": 373, "2d": 375, "default_with_restart": 375, "default_tidal_forc": 375, "inerti": 377, "graviti": 377, "wave": [377, 378], "intern": 378, "manufactur": 379, "solut": 379, "nondiverg": 380, "rotat": 381, "singl": [382, 387], "column": [382, 387], "task_nam": [383, 388], "yet": 384, "standalon": 384, "sea": 385, "standard": 387, "physic": 387, "timestep": 387, "exact": 387}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [330, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [370, "mesh"], [370, "id2"], [370, "id9"], [370, "id17"], [370, "id25"], [370, "id32"], [371, "mesh"], [372, "mesh"], [373, "mesh"], [374, "mesh"], [375, "mesh"], [375, "id2"], [375, "id9"], [375, "id17"], [377, "mesh"], [378, "mesh"], [378, "id2"], [379, "mesh"], [380, "mesh"], [381, "mesh"], [382, "mesh"], [382, "id3"], [382, "id8"], [383, "mesh"], [387, "mesh"], [387, "id1"], [387, "id6"], [388, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [316, "validate"], [321, "validate"], [324, "validate"]], "viz": [[3, "viz"], [317, "viz"], [318, "viz"], [319, "viz"], [320, "viz"], [321, "viz"], [323, "viz"], [325, "viz"], [326, "viz"], [327, "viz"], [328, "viz"], [352, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [356, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [366, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Permissions": [[11, "permissions"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [141, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [141, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"], [140, "visualization"], [141, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.io.update_permissions": [[61, "polaris-io-update-permissions"]], "polaris.job.get_slurm_options": [[62, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[63, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[64, "polaris-list-list-cases"]], "polaris.list.list_machines": [[65, "polaris-list-list-machines"]], "polaris.list.list_suites": [[66, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[67, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[68, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[69, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[70, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[71, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[72, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[73, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[74, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[79, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[80, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[82, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[83, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[84, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[85, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[86, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[87, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[88, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[89, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[90, "polaris-namelist-replace"]], "polaris.namelist.write": [[91, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[92, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[93, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[94, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[95, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[96, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[97, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[98, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[99, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[100, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[101, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[102, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[103, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[104, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[105, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[106, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[107, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[108, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[109, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[110, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[111, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[112, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[113, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[114, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[115, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[116, "polaris-streams-read"]], "polaris.streams.update_defaults": [[117, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[118, "polaris-streams-update-tree"]], "polaris.streams.write": [[119, "polaris-streams-write"]], "polaris.suite.setup_suite": [[120, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[121, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_lat_lon_field": [[122, "polaris-viz-plot-global-lat-lon-field"]], "polaris.viz.plot_global_mpas_field": [[123, "polaris-viz-plot-global-mpas-field"]], "polaris.viz.plot_horiz_field": [[124, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[125, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[126, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[127, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[128, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[129, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[130, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[131, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[132, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[133, "anvil"], [358, "anvil"]], "intel": [[133, "intel"], [135, "intel"], [136, "intel"]], "gnu": [[133, "gnu"], [135, "gnu"], [136, "gnu"]], "Chicoma": [[134, "chicoma"], [359, "chicoma"]], "chicoma-cpu, gnu": [[134, "chicoma-cpu-gnu"]], "Chrysalis": [[135, "chrysalis"], [360, "chrysalis"]], "CompyMcNodeFace": [[136, "compymcnodeface"], [361, "compymcnodeface"]], "Frontier": [[137, "frontier"], [362, "frontier"]], "frontier, gnu": [[137, "frontier-gnu"]], "frontier, crayclang": [[137, "frontier-crayclang"]], "Machines": [[138, "machines"], [363, "machines"]], "Supported Machines": [[138, "supported-machines"], [363, "supported-machines"]], "Other Machines": [[138, "other-machines"], [363, "other-machines"]], "Adding a New Supported Machine": [[138, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[138, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[138, "describing-a-spack-environment"]], "Building the Spack Environment": [[138, "building-the-spack-environment"]], "Perlmutter": [[139, "perlmutter"], [364, "perlmutter"]], "pm-cpu, gnu": [[139, "pm-cpu-gnu"]], "pm-cpu, intel": [[139, "pm-cpu-intel"]], "ocean": [[140, "ocean"]], "Tasks": [[140, "tasks"], [322, "tasks"], [335, "tasks"], [338, "tasks"], [351, "tasks"], [376, "tasks"], [386, "tasks"], [390, "tasks"]], "baroclinic_channel": [[140, "baroclinic-channel"], [316, "baroclinic-channel"]], "cosine_bell": [[140, "cosine-bell"], [318, "cosine-bell"]], "geostrophic": [[140, "geostrophic"], [320, "geostrophic"], [374, "geostrophic"]], "ice_shelf_2d": [[140, "ice-shelf-2d"], [321, "ice-shelf-2d"]], "inertial_gravity_wave": [[140, "inertial-gravity-wave"], [323, "inertial-gravity-wave"]], "internal_wave": [[140, "internal-wave"], [324, "internal-wave"]], "manufactured_solution": [[140, "manufactured-solution"], [325, "manufactured-solution"]], "single_column": [[140, "single-column"], [328, "single-column"], [338, "single-column"], [352, "single-column"]], "sphere_transport": [[140, "sphere-transport"]], "Ocean Framework": [[140, "ocean-framework"]], "Convergence Tests": [[140, "convergence-tests"], [141, "convergence-tests"]], "Spherical Convergence Tests": [[140, "spherical-convergence-tests"]], "Ice Shelf": [[140, "ice-shelf"]], "Ocean Model": [[140, "ocean-model"]], "Spherical Base Mesh Step": [[140, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[140, "reference-potential-energy-rpe"]], "Vertical coordinates": [[140, "vertical-coordinates"]], "Ocean framework": [[141, "ocean-framework"]], "YAML files vs. namelists and streams": [[141, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[141, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[141, "setting-mpi-resources"]], "Setting time intervals in model config options": [[141, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[141, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[141, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Ice Shelf Tasks": [[141, "ice-shelf-tasks"]], "Vertical coordinate": [[141, "vertical-coordinate"], [367, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[141, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[142, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[143, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[144, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[145, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[146, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[147, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[148, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[149, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[150, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[151, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[152, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[153, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[154, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[155, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.ice_shelf.IceShelfTask": [[156, "polaris-ocean-ice-shelf-iceshelftask"]], "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps": [[157, "polaris-ocean-ice-shelf-iceshelftask-setup-ssh-adjustment-steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[158, "polaris-ocean-ice-shelf-sshadjustment"]], "polaris.ocean.ice_shelf.SshAdjustment.run": [[159, "polaris-ocean-ice-shelf-sshadjustment-run"]], "polaris.ocean.ice_shelf.SshForward": [[160, "polaris-ocean-ice-shelf-sshforward"]], "polaris.ocean.ice_shelf.SshForward.compute_cell_count": [[161, "polaris-ocean-ice-shelf-sshforward-compute-cell-count"]], "polaris.ocean.ice_shelf.SshForward.dynamic_model_config": [[162, "polaris-ocean-ice-shelf-sshforward-dynamic-model-config"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[163, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[164, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[165, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[166, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[167, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[168, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[169, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[170, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[171, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[172, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[173, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[174, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[175, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[176, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[177, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[178, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[179, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[180, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[181, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[182, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[183, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[184, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[185, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[186, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[187, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[188, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[189, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[190, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[191, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[192, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[193, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[194, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[195, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[196, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[197, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[198, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[199, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[200, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[201, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[202, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[203, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[204, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[205, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[206, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[207, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[208, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[209, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[210, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[211, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[212, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[213, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[214, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[215, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[216, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks": [[217, "polaris-ocean-tasks-ice-shelf-2d-add-ice-shelf-2d-tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[218, "polaris-ocean-tasks-ice-shelf-2d-default-default"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[219, "polaris-ocean-tasks-ice-shelf-2d-forward-forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count": [[220, "polaris-ocean-tasks-ice-shelf-2d-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config": [[221, "polaris-ocean-tasks-ice-shelf-2d-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[222, "polaris-ocean-tasks-ice-shelf-2d-init-init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init.run": [[223, "polaris-ocean-tasks-ice-shelf-2d-init-init-run"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[224, "polaris-ocean-tasks-ice-shelf-2d-validate-validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run": [[225, "polaris-ocean-tasks-ice-shelf-2d-validate-validate-run"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[226, "polaris-ocean-tasks-ice-shelf-2d-viz-viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run": [[227, "polaris-ocean-tasks-ice-shelf-2d-viz-viz-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[228, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[229, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[230, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[231, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[232, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[233, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[234, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[235, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[236, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[237, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[238, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[239, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[240, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks": [[241, "polaris-ocean-tasks-internal-wave-add-internal-wave-tasks"]], "polaris.ocean.tasks.internal_wave.default.Default": [[242, "polaris-ocean-tasks-internal-wave-default-default"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[243, "polaris-ocean-tasks-internal-wave-forward-forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count": [[244, "polaris-ocean-tasks-internal-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config": [[245, "polaris-ocean-tasks-internal-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.internal_wave.init.Init": [[246, "polaris-ocean-tasks-internal-wave-init-init"]], "polaris.ocean.tasks.internal_wave.init.Init.run": [[247, "polaris-ocean-tasks-internal-wave-init-init-run"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[248, "polaris-ocean-tasks-internal-wave-rpe-rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure": [[249, "polaris-ocean-tasks-internal-wave-rpe-rpe-configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[250, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run": [[251, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[252, "polaris-ocean-tasks-internal-wave-viz-viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz.run": [[253, "polaris-ocean-tasks-internal-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[254, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[255, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[256, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[257, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[258, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[259, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[260, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[261, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[262, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[263, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[264, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[265, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[266, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[267, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[268, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[269, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[270, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[271, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[272, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[273, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[274, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[275, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[276, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[277, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[278, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[279, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[280, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[281, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[282, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[283, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[284, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[285, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[286, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[287, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[288, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[289, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[290, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[291, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[292, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[293, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.sigma.init_sigma_vertical_coord": [[294, "polaris-ocean-vertical-sigma-init-sigma-vertical-coord"]], "polaris.ocean.vertical.sigma.update_sigma_layer_thickness": [[295, "polaris-ocean-vertical-sigma-update-sigma-layer-thickness"]], "polaris.ocean.vertical.update_layer_thickness": [[296, "polaris-ocean-vertical-update-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[297, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[298, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[299, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[300, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness": [[301, "polaris-ocean-vertical-zlevel-update-z-level-layer-thickness"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[302, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "polaris.ocean.vertical.zstar.update_z_star_layer_thickness": [[303, "polaris-ocean-vertical-zstar-update-z-star-layer-thickness"]], "polaris.ocean.viz.compute_transect": [[304, "polaris-ocean-viz-compute-transect"]], "polaris.ocean.viz.plot_transect": [[305, "polaris-ocean-viz-plot-transect"]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[306, "polaris-ocean-viz-transect-horiz-find-planar-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[307, "polaris-ocean-viz-transect-horiz-find-spherical-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[308, "polaris-ocean-viz-transect-horiz-make-triangle-tree"]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[309, "polaris-ocean-viz-transect-horiz-mesh-to-triangles"]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[310, "polaris-ocean-viz-transect-vert-find-transect-levels-and-weights"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[311, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-cells"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[312, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-nodes"]], "Ocean component": [[313, "ocean-component"], [368, "ocean-component"]], "Models": [[314, "models"]], "Supported Models": [[314, "supported-models"]], "MPAS-Ocean": [[315, "mpas-ocean"]], "Initial conditions": [[315, "initial-conditions"], [350, "initial-conditions"]], "Boundary conditions": [[315, "boundary-conditions"]], "Forcing": [[315, "forcing"], [350, "forcing"]], "framework": [[316, "framework"], [317, "framework"], [318, "framework"], [319, "framework"], [320, "framework"], [321, "framework"], [323, "framework"], [324, "framework"], [325, "framework"], [326, "framework"], [327, "framework"], [328, "framework"], [352, "framework"]], "init": [[316, "init"], [317, "init"], [318, "init"], [319, "init"], [320, "init"], [321, "init"], [323, "init"], [324, "init"], [325, "init"], [326, "init"], [327, "init"], [328, "init"]], "forward": [[316, "forward"], [317, "forward"], [318, "forward"], [319, "forward"], [320, "forward"], [321, "forward"], [323, "forward"], [324, "forward"], [325, "forward"], [326, "forward"], [327, "forward"], [328, "forward"], [352, "forward"]], "default": [[316, "default"], [321, "default"], [324, "default"], [370, "default"], [375, "default"]], "decomp": [[316, "decomp"], [370, "decomp"]], "restart": [[316, "restart"], [370, "restart"]], "threads": [[316, "threads"]], "rpe": [[316, "rpe"], [324, "rpe"], [370, "rpe"]], "correlated_tracers_2d": [[317, "correlated-tracers-2d"]], "base_mesh": [[317, "base-mesh"], [318, "base-mesh"], [319, "base-mesh"], [320, "base-mesh"], [326, "base-mesh"], [327, "base-mesh"]], "analysis": [[317, "analysis"], [318, "analysis"], [319, "analysis"], [320, "analysis"], [323, "analysis"], [325, "analysis"], [326, "analysis"], [327, "analysis"], [374, "analysis"]], "mixing_analysis": [[317, "mixing-analysis"]], "divergent_2d": [[319, "divergent-2d"]], "exact_solution": [[323, "exact-solution"], [325, "exact-solution"]], "nondivergent_2d": [[326, "nondivergent-2d"]], "filament_analysis": [[326, "filament-analysis"]], "rotation_2d": [[327, "rotation-2d"]], "cvmix": [[328, "cvmix"], [382, "cvmix"]], "ideal age": [[328, "ideal-age"], [382, "ocean-single-column-ideal-age"]], "Categories of tasks": [[329, "categories-of-tasks"]], "Constructor": [[330, "constructor"]], "Config file": [[330, "config-file"]], "Directory structure": [[331, "directory-structure"]], "Organization of Tasks": [[332, "organization-of-tasks"]], "Steps": [[333, "steps"]], "Step attributes": [[333, "step-attributes"]], "constructor": [[333, "constructor"], [335, "constructor"]], "setup()": [[333, "setup"]], "constrain_resources()": [[333, "constrain-resources"]], "runtime_setup()": [[333, "runtime-setup"]], "run()": [[333, "run"]], "inputs and outputs": [[333, "inputs-and-outputs"]], "Input files": [[333, "input-files"]], "Symlinks to input files": [[333, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[333, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[333, "downloading-and-symlinking-input-files"]], "Copying input files": [[333, "copying-input-files"]], "Output files": [[333, "output-files"]], "Cached output files": [[333, "cached-output-files"]], "Adding other steps as dependencies": [[333, "adding-other-steps-as-dependencies"]], "Suites": [[334, "suites"], [369, "suites"], [384, "suites"], [389, "suites"]], "Pull-Request (PR) suite": [[334, "pull-request-pr-suite"]], "Nightly suite": [[334, "nightly-suite"]], "Task attributes": [[335, "task-attributes"]], "configure()": [[335, "configure"]], "Overview": [[336, "overview"]], "Code Style": [[336, "code-style"]], "Packages and Modules": [[336, "packages-and-modules"]], "Packages": [[336, "packages"]], "Modules": [[336, "modules"]], "Classes": [[336, "classes"]], "Code sharing": [[336, "code-sharing"]], "\u2026in the polaris framework": [[336, "in-the-polaris-framework"]], "\u2026within a component": [[336, "within-a-component"]], "\u2026within a group of related tasks": [[336, "within-a-group-of-related-tasks"]], "\u2026within a task": [[336, "within-a-task"]], "Quick Start for Developers": [[337, "quick-start-for-developers"]], "Unix Shell": [[337, "unix-shell"]], "Set up a polaris repository: for beginners": [[337, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[337, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[337, "supported-machines"]], "Environments with Albany": [[337, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[337, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[337, "unknown-machines"]], "What the script does": [[337, "what-the-script-does"]], "Optional flags": [[337, "optional-flags"]], "Activating the environment": [[337, "activating-the-environment"]], "Switching between different polaris environments": [[337, "switching-between-different-polaris-environments"]], "Troubleshooting": [[337, "troubleshooting"], [353, "troubleshooting"]], "Creating/updating only the polaris environment": [[337, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[337, "building-e3sm-components"]], "Running polaris from the repo": [[337, "running-polaris-from-the-repo"]], "Code style for polaris": [[337, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[337, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[338, "seaice"]], "SeaIce framework": [[339, "seaice-framework"]], "polaris.seaice.SeaIce": [[340, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[341, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[342, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[343, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[344, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[345, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[346, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[347, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[348, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[349, "seaice-component"]], "Supported Model: MPAS-Seaice": [[350, "supported-model-mpas-seaice"]], "standard_physics_test": [[352, "standard-physics-test"]], "exact_restart_test": [[352, "exact-restart-test"]], "Solver errors when configuring conda environment": [[353, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[353, "proxy-on-lanl-macs"]], "gethostbyname failed": [[353, "gethostbyname-failed"]], "Glossary": [[354, "glossary"], [355, null]], "Polaris": [[355, "polaris"]], "User's guide": [[355, null]], "Developer's guide": [[355, null]], "Tutorials": [[355, null]], "Compass": [[355, "compass"]], "Developer Tutorial: Adding a new test group": [[356, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[356, "getting-started"]], "Making a new test group": [[356, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[356, "adding-a-default-task"]], "Varying resolution and other parameters": [[356, "varying-resolution-and-other-parameters"]], "Adding the init step": [[356, "adding-the-init-step"]], "Creating a horizontal mesh": [[356, "creating-a-horizontal-mesh"]], "Adding a config file": [[356, "adding-a-config-file"]], "Adding the step to the task": [[356, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[356, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[356, "creating-an-initial-condition"]], "Adding plots": [[356, "adding-plots"]], "Adding step outputs": [[356, "adding-step-outputs"]], "Adding validation": [[356, "adding-validation"], [356, "id1"]], "Test things out!": [[356, "test-things-out"]], "Adding the forward step": [[356, "adding-the-forward-step"]], "Defining model config options and streams": [[356, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[356, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[356, "adding-more-validation"]], "Test the task again!": [[356, "test-the-task-again"]], "Adding a visualization step": [[356, "adding-a-visualization-step"]], "Adding the viz step to the task": [[356, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[356, "test-the-task-one-more-time"]], "Adding a second task": [[356, "adding-a-second-task"]], "Enhancements": [[356, "enhancements"]], "Adding model config options in code": [[356, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[356, "adding-dynamic-model-config-options"]], "Computing the cell count": [[356, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[356, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[356, "adding-a-parameter-study"]], "Adding the steps to the task": [[356, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[356, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[356, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[357, "config-files"]], "A \u201cuser\u201d config file": [[357, "a-user-config-file"]], "Test-case config files": [[357, "test-case-config-files"]], "config options": [[358, "config-options"], [359, "config-options"], [360, "config-options"], [361, "config-options"], [362, "config-options"], [363, "config-options"], [364, "config-options"], [365, "config-options"], [370, "config-options"], [370, "id7"], [370, "id14"], [370, "id22"], [370, "id30"], [370, "id37"], [371, "config-options"], [372, "config-options"], [373, "config-options"], [374, "config-options"], [375, "config-options"], [375, "id7"], [375, "id14"], [375, "id22"], [377, "config-options"], [378, "config-options"], [378, "id7"], [379, "config-options"], [380, "config-options"], [381, "config-options"], [382, "config-options"], [382, "id1"], [382, "id6"], [382, "id13"], [383, "config-options"], [387, "config-options"], [387, "id5"], [387, "id10"], [388, "config-options"]], "Loading and running Polaris on Anvil": [[358, "loading-and-running-polaris-on-anvil"]], "Chicoma-CPU": [[359, "chicoma-cpu"]], "Loading and running Polaris on Chicoma": [[359, "loading-and-running-polaris-on-chicoma"]], "Loading and running Polaris on Chrysalis": [[360, "loading-and-running-polaris-on-chrysalis"]], "Loading and running Polaris on CompyMcNodeFace": [[361, "loading-and-running-polaris-on-compymcnodeface"]], "Loading and running Polaris on Frontier": [[362, "loading-and-running-polaris-on-frontier"]], "Slurm job queueing": [[363, "slurm-job-queueing"]], "MPICH": [[363, "mpich"]], "OpenMPI": [[363, "openmpi"]], "No MPI from conda-forge": [[363, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[364, "perlmutter-cpu"]], "Loading and running Polaris on Perlmutter": [[364, "loading-and-running-polaris-on-perlmutter"]], "Jupyter notebook on remote data": [[364, "jupyter-notebook-on-remote-data"]], "Ice shelf": [[365, "ice-shelf"]], "SSH adjustment steps": [[365, "ssh-adjustment-steps"]], "1D Grid type": [[367, "d-grid-type"]], "uniform": [[367, "uniform"]], "tanh_dz": [[367, "tanh-dz"]], "index_tanh_dz": [[367, "index-tanh-dz"]], "60layerPHC": [[367, "layerphc"]], "80layerE3SMv1": [[367, "layere3smv1"]], "100layerE3SMv1": [[367, "id1"]], "3D vertical coordinates": [[367, "d-vertical-coordinates"]], "z-star": [[367, "z-star"]], "z-level": [[367, "z-level"]], "sigma": [[367, "sigma"]], "cosine_bell and cosine_bell_cached_init suite": [[369, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[370, "baroclinic-channel"]], "description": [[370, "description"], [370, "id1"], [370, "id8"], [370, "id16"], [370, "id24"], [371, "description"], [372, "description"], [373, "description"], [374, "description"], [375, "description"], [375, "id1"], [375, "id8"], [375, "id16"], [377, "description"], [378, "description"], [378, "id1"], [379, "description"], [380, "description"], [381, "description"], [382, "description"], [382, "id2"], [382, "id7"], [383, "description"], [387, "description"], [388, "description"]], "vertical grid": [[370, "vertical-grid"], [370, "id3"], [370, "id10"], [370, "id18"], [370, "id26"], [370, "id33"], [371, "vertical-grid"], [372, "vertical-grid"], [373, "vertical-grid"], [374, "vertical-grid"], [375, "vertical-grid"], [375, "id3"], [375, "id10"], [375, "id18"], [377, "vertical-grid"], [378, "vertical-grid"], [378, "id3"], [379, "vertical-grid"], [380, "vertical-grid"], [381, "vertical-grid"], [382, "vertical-grid"], [382, "id4"], [382, "id9"], [383, "vertical-grid"]], "initial conditions": [[370, "initial-conditions"], [370, "id4"], [370, "id11"], [370, "id19"], [370, "id27"], [370, "id34"], [371, "initial-conditions"], [372, "initial-conditions"], [373, "initial-conditions"], [374, "initial-conditions"], [375, "initial-conditions"], [375, "id4"], [375, "id11"], [375, "id19"], [377, "initial-conditions"], [378, "initial-conditions"], [378, "id4"], [379, "initial-conditions"], [380, "initial-conditions"], [381, "initial-conditions"], [382, "initial-conditions"], [382, "id5"], [382, "id10"], [383, "initial-conditions"], [387, "initial-conditions"], [387, "id2"], [387, "id7"], [388, "initial-conditions"]], "forcing": [[370, "forcing"], [370, "id5"], [370, "id12"], [370, "id20"], [370, "id28"], [370, "id35"], [371, "forcing"], [372, "forcing"], [373, "forcing"], [374, "forcing"], [375, "forcing"], [375, "id5"], [375, "id12"], [375, "id20"], [377, "forcing"], [378, "forcing"], [378, "id5"], [379, "forcing"], [380, "forcing"], [381, "forcing"], [382, "forcing"], [382, "id11"], [383, "forcing"], [387, "forcing"], [387, "id3"], [387, "id8"], [388, "forcing"]], "time step and run duration": [[370, "time-step-and-run-duration"], [370, "id6"], [370, "id13"], [370, "id21"], [370, "id29"], [370, "id36"], [371, "time-step-and-run-duration"], [372, "time-step-and-run-duration"], [373, "time-step-and-run-duration"], [374, "time-step-and-run-duration"], [375, "time-step-and-run-duration"], [375, "id6"], [375, "id13"], [375, "id21"], [377, "time-step-and-run-duration"], [378, "time-step-and-run-duration"], [378, "id6"], [379, "time-step-and-run-duration"], [380, "time-step-and-run-duration"], [381, "time-step-and-run-duration"], [382, "time-step-and-run-duration"], [382, "id12"], [383, "time-step-and-run-duration"], [388, "time-step-and-run-duration"]], "cores": [[370, "cores"], [370, "id15"], [370, "id23"], [370, "id31"], [370, "id38"], [371, "cores"], [372, "cores"], [373, "cores"], [374, "cores"], [375, "cores"], [375, "id15"], [375, "id23"], [377, "cores"], [378, "cores"], [379, "cores"], [380, "cores"], [381, "cores"], [382, "cores"], [382, "id14"], [383, "cores"], [387, "cores"], [387, "id4"], [387, "id9"], [388, "cores"]], "thread": [[370, "thread"]], "correlated tracers 2-d": [[371, "correlated-tracers-2-d"]], "cosine bell": [[372, "cosine-bell"]], "divergent 2-d": [[373, "divergent-2-d"]], "ice shelf 2d": [[375, "ice-shelf-2d"]], "default_with_restart": [[375, "default-with-restart"]], "default_tidal_forcing": [[375, "default-tidal-forcing"]], "inertial gravity wave": [[377, "inertial-gravity-wave"]], "internal wave": [[378, "internal-wave"]], "default task": [[378, "default-task"]], "RPE task": [[378, "rpe-task"]], "manufactured solution": [[379, "manufactured-solution"]], "convergence": [[379, "convergence"]], "nondivergent 2-d": [[380, "nondivergent-2-d"]], "rotation 2-d": [[381, "rotation-2-d"]], "single column": [[382, "single-column"], [387, "single-column"]], "<Category of task>": [[383, "ocean-category-of-task"], [388, "seaice-category-of-task"]], "task_name": [[383, "task-name"], [388, "task-name"]], "Quick Start for Users": [[384, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[384, null]], "Loading polaris conda and spack environments": [[384, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[384, "e3sm-supported-machines"]], "Other machines": [[384, "other-machines"]], "Building supported E3SM components as standalone models": [[384, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[384, "setting-up-tasks"]], "Running a task": [[384, "running-a-task"]], "Running with a job script": [[384, "running-with-a-job-script"]], "Sea ice component": [[385, "sea-ice-component"]], "standard physics test": [[387, "standard-physics-test"]], "timestep and run duration": [[387, "timestep-and-run-duration"], [387, "id11"]], "visualization": [[387, "visualization"]], "exact restart test": [[387, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "update_permissions() (in module polaris.io)": [[61, "polaris.io.update_permissions"]], "get_slurm_options() (in module polaris.job)": [[62, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[63, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[64, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[65, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[66, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[67, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[68, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[69, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[71, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[74, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[80, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[81, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[85, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[86, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[87, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[88, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[89, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[90, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[91, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[92, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[93, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[94, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[95, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[96, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[97, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[108, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[109, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[111, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[112, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[113, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[114, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[115, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[116, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[117, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[118, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[119, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[120, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[121, "polaris.validate.compare_variables"]], "plot_global_lat_lon_field() (in module polaris.viz)": [[122, "polaris.viz.plot_global_lat_lon_field"]], "plot_global_mpas_field() (in module polaris.viz)": [[123, "polaris.viz.plot_global_mpas_field"]], "plot_horiz_field() (in module polaris.viz)": [[124, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[125, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[126, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[126, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[127, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[128, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[129, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[130, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[131, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[132, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[142, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[142, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[149, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[150, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[151, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[151, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[152, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[153, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[154, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[154, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[155, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "iceshelftask (class in polaris.ocean.ice_shelf)": [[156, "polaris.ocean.ice_shelf.IceShelfTask"]], "__init__() (polaris.ocean.ice_shelf.iceshelftask method)": [[156, "polaris.ocean.ice_shelf.IceShelfTask.__init__"]], "setup_ssh_adjustment_steps() (polaris.ocean.ice_shelf.iceshelftask method)": [[157, "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps"]], "sshadjustment (class in polaris.ocean.ice_shelf)": [[158, "polaris.ocean.ice_shelf.SshAdjustment"]], "__init__() (polaris.ocean.ice_shelf.sshadjustment method)": [[158, "polaris.ocean.ice_shelf.SshAdjustment.__init__"]], "run() (polaris.ocean.ice_shelf.sshadjustment method)": [[159, "polaris.ocean.ice_shelf.SshAdjustment.run"]], "sshforward (class in polaris.ocean.ice_shelf)": [[160, "polaris.ocean.ice_shelf.SshForward"]], "__init__() (polaris.ocean.ice_shelf.sshforward method)": [[160, "polaris.ocean.ice_shelf.SshForward.__init__"]], "compute_cell_count() (polaris.ocean.ice_shelf.sshforward method)": [[161, "polaris.ocean.ice_shelf.SshForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.ice_shelf.sshforward method)": [[162, "polaris.ocean.ice_shelf.SshForward.dynamic_model_config"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[163, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[164, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[164, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[165, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[166, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[167, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[168, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[169, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[170, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[171, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[172, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[172, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[173, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[173, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[174, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[174, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[175, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[176, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[177, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[177, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[178, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[179, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[180, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[180, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[181, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[181, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[182, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[183, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[183, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[184, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[185, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[185, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[186, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[187, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[188, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[188, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[189, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[189, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[190, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[191, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[191, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[192, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[193, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[193, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[194, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[195, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[196, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[196, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[197, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[198, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[198, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[199, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[200, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[201, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[201, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[202, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[203, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[204, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[204, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[205, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[206, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[206, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[207, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[208, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[209, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[209, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[210, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[211, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[212, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[212, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[213, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[213, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[214, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[215, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[215, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[216, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "add_ice_shelf_2d_tasks() (in module polaris.ocean.tasks.ice_shelf_2d)": [[217, "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks"]], "default (class in polaris.ocean.tasks.ice_shelf_2d.default)": [[218, "polaris.ocean.tasks.ice_shelf_2d.default.Default"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.default.default method)": [[218, "polaris.ocean.tasks.ice_shelf_2d.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.ice_shelf_2d.forward)": [[219, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[219, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[220, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[221, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.ice_shelf_2d.init)": [[222, "polaris.ocean.tasks.ice_shelf_2d.init.Init"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[222, "polaris.ocean.tasks.ice_shelf_2d.init.Init.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[223, "polaris.ocean.tasks.ice_shelf_2d.init.Init.run"]], "validate (class in polaris.ocean.tasks.ice_shelf_2d.validate)": [[224, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[224, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[225, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.ice_shelf_2d.viz)": [[226, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[226, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[227, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[228, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[228, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[229, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[230, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[230, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[231, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[232, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[232, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[233, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[234, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[235, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[235, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[236, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[237, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[237, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[238, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[239, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[239, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[240, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "add_internal_wave_tasks() (in module polaris.ocean.tasks.internal_wave)": [[241, "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks"]], "default (class in polaris.ocean.tasks.internal_wave.default)": [[242, "polaris.ocean.tasks.internal_wave.default.Default"]], "__init__() (polaris.ocean.tasks.internal_wave.default.default method)": [[242, "polaris.ocean.tasks.internal_wave.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.internal_wave.forward)": [[243, "polaris.ocean.tasks.internal_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[243, "polaris.ocean.tasks.internal_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[244, "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[245, "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.internal_wave.init)": [[246, "polaris.ocean.tasks.internal_wave.init.Init"]], "__init__() (polaris.ocean.tasks.internal_wave.init.init method)": [[246, "polaris.ocean.tasks.internal_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.internal_wave.init.init method)": [[247, "polaris.ocean.tasks.internal_wave.init.Init.run"]], "rpe (class in polaris.ocean.tasks.internal_wave.rpe)": [[248, "polaris.ocean.tasks.internal_wave.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[248, "polaris.ocean.tasks.internal_wave.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[249, "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.internal_wave.rpe.analysis)": [[250, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[250, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[251, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run"]], "viz (class in polaris.ocean.tasks.internal_wave.viz)": [[252, "polaris.ocean.tasks.internal_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[252, "polaris.ocean.tasks.internal_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[253, "polaris.ocean.tasks.internal_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[254, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[254, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[255, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[256, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[256, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[257, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[258, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[258, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[259, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[260, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[261, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[261, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[262, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[263, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[263, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[264, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[265, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[265, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[266, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[267, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[268, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[268, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[269, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[269, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[270, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[270, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[271, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[271, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[272, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[273, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[273, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[274, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[275, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[275, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[276, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[277, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[278, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[278, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[279, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[280, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[280, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[281, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[282, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[282, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[283, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[283, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[284, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[285, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[285, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[286, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[287, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[287, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[288, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[289, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[290, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[291, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[292, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[293, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "init_sigma_vertical_coord() (in module polaris.ocean.vertical.sigma)": [[294, "polaris.ocean.vertical.sigma.init_sigma_vertical_coord"]], "update_sigma_layer_thickness() (in module polaris.ocean.vertical.sigma)": [[295, "polaris.ocean.vertical.sigma.update_sigma_layer_thickness"]], "update_layer_thickness() (in module polaris.ocean.vertical)": [[296, "polaris.ocean.vertical.update_layer_thickness"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[297, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[298, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[299, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[300, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "update_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[301, "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[302, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "update_z_star_layer_thickness() (in module polaris.ocean.vertical.zstar)": [[303, "polaris.ocean.vertical.zstar.update_z_star_layer_thickness"]], "compute_transect() (in module polaris.ocean.viz)": [[304, "polaris.ocean.viz.compute_transect"]], "plot_transect() (in module polaris.ocean.viz)": [[305, "polaris.ocean.viz.plot_transect"]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[306, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights"]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[307, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights"]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[308, "polaris.ocean.viz.transect.horiz.make_triangle_tree"]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[309, "polaris.ocean.viz.transect.horiz.mesh_to_triangles"]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[310, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights"]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[311, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells"]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[312, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes"]], "seaice (class in polaris.seaice)": [[340, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[340, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[341, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[342, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[342, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[343, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[343, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[344, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[345, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[345, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[346, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[346, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[347, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[347, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[348, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})