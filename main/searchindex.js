Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "cosine_bell", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "cosine bell", "Tasks", "inertial gravity wave", "manufactured solution", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 18, 20, 37, 45, 48, 49, 52, 133, 136, 145, 154, 155, 162, 165, 170, 175, 236, 239, 240, 244, 245, 246, 247, 249, 251, 253, 255, 268, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 289, 290, 291, 295, 297], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 34, 48, 49, 51, 54, 67, 72, 74, 77, 80, 81, 89, 91, 93, 94, 100, 105, 106, 107, 108, 111, 112, 133, 136, 138, 143, 144, 145, 146, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 182, 183, 184, 186, 187, 188, 189, 192, 193, 197, 199, 200, 201, 202, 203, 206, 207, 211, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 259, 260, 261, 263, 264, 268, 270, 271, 273, 279, 281, 296, 297], "templat": [0, 5, 6, 7, 27, 28, 29, 113, 123, 127, 133, 136, 144, 158, 164, 240, 271, 272, 273], "date": [1, 2, 5, 54, 236, 247, 253, 265, 273], "2023": [1, 16, 287, 288], "08": [1, 272, 284], "18": [1, 6, 273, 275], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 17, 133, 272, 273, 278], "asai": [1, 273], "davi": [1, 273], "capabl": [1, 2, 6, 16, 133, 249, 252, 272, 278, 291], "design": [1, 133, 237, 249, 251, 252, 271, 278, 284], "here": [1, 6, 9, 12, 14, 16, 17, 133, 136, 239, 244, 245, 248, 249, 251, 252, 253, 268, 272, 273, 274, 275, 276, 277, 278, 279, 285, 289, 290, 291, 295, 296], "abil": [1, 7], "across": [1, 6, 7, 9, 14, 18, 136, 239, 245, 249, 250, 251, 252, 253, 270, 272, 280, 284, 285], "In": [1, 2, 6, 7, 8, 9, 11, 14, 16, 17, 37, 133, 136, 245, 247, 249, 250, 251, 252, 253, 271, 272, 273, 278, 281, 285, 290, 291, 295, 296, 297], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 23, 24, 29, 30, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 62, 66, 68, 71, 72, 75, 76, 77, 81, 90, 91, 93, 94, 100, 105, 108, 118, 129, 130, 131, 132, 133, 134, 136, 138, 143, 146, 149, 154, 155, 156, 158, 160, 161, 162, 164, 165, 166, 168, 169, 170, 174, 175, 178, 182, 184, 187, 189, 190, 193, 197, 199, 201, 203, 204, 207, 211, 213, 215, 217, 219, 220, 221, 222, 223, 224, 225, 236, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 264, 265, 269, 270, 271, 272, 273, 275, 278, 279, 281, 284, 285, 287, 288, 289, 290, 291, 295, 296], "document": [1, 3, 9, 14, 249, 252, 271, 273, 291], "refer": [1, 7, 14, 37, 152, 165, 228, 231, 234, 235, 249, 252, 253, 270, 271, 272, 281, 284, 291], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 33, 46, 105, 111, 112, 161, 169, 245, 246, 247, 249, 250, 251, 252, 253, 255, 272, 273, 278, 284, 285, 289, 290, 291, 294, 295], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 24, 27, 28, 30, 37, 39, 48, 55, 94, 96, 103, 111, 112, 113, 117, 120, 123, 133, 136, 138, 139, 140, 141, 142, 146, 149, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 179, 195, 196, 209, 210, 220, 236, 238, 245, 246, 248, 249, 251, 253, 258, 259, 261, 263, 272, 273, 275, 278, 281, 284, 285, 287, 288, 289, 290, 291], "avail": [1, 4, 5, 7, 11, 14, 18, 24, 34, 37, 40, 41, 44, 55, 63, 89, 90, 91, 133, 146, 156, 197, 211, 220, 239, 240, 249, 251, 252, 253, 272, 274, 275, 276, 277, 279, 284, 291, 296], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 129, 131, 132, 133, 136, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 265, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 292, 296, 297], "main": [1, 3, 6, 7, 9, 14, 42, 133, 189, 245, 246, 251, 252, 253, 272, 297], "motiv": 1, "behind": [1, 252], "comput": [1, 7, 13, 14, 79, 133, 136, 139, 140, 142, 146, 147, 152, 157, 181, 185, 194, 198, 208, 212, 231, 232, 233, 239, 240, 242, 243, 244, 249, 253, 275, 276, 278, 279, 284, 285, 287, 288, 291], "expens": [1, 249, 250], "could": [1, 14, 16, 18, 133, 240, 249, 250, 251, 252, 253, 272, 285], "time": [1, 5, 6, 7, 8, 14, 17, 18, 37, 48, 61, 120, 133, 141, 151, 152, 156, 165, 179, 182, 195, 196, 199, 209, 210, 213, 220, 238, 239, 240, 242, 243, 245, 249, 250, 251, 252, 253, 268, 269, 270, 273, 275, 279, 291, 296], "order": [1, 5, 8, 13, 14, 136, 240, 246, 249, 250, 253, 272, 285, 288, 289, 291], "reflect": [1, 5, 253], "fact": [1, 14, 37, 133], "we": [1, 2, 5, 7, 9, 11, 13, 14, 16, 17, 18, 132, 133, 136, 140, 141, 150, 179, 239, 240, 244, 245, 248, 249, 251, 252, 253, 268, 271, 272, 273, 275, 277, 278, 279, 281, 285, 291, 296], "present": [1, 49, 120, 253, 272], "new": [1, 2, 5, 19, 25, 37, 48, 56, 60, 67, 74, 80, 94, 114, 115, 136, 144, 156, 163, 180, 194, 197, 208, 211, 220, 228, 234, 235, 249, 251, 252, 253, 266, 269, 270, 271, 291], "success": [1, 2, 8, 47, 58, 236, 246, 265, 272, 273], "insofar": 1, "guarante": [1, 14, 133, 236, 253, 265], "per": [1, 8, 14, 24, 34, 36, 37, 44, 90, 91, 133, 136, 146, 249, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 287, 288, 290, 295], "slurm": [1, 61, 92, 133, 249, 271, 273, 274, 275, 276, 277, 279, 291], "job": [1, 6, 133, 253, 271, 272, 274, 275, 276, 277, 279], "role": 1, "clear": [1, 2, 252, 272], "should": [1, 2, 5, 6, 7, 9, 12, 14, 17, 18, 25, 30, 37, 38, 39, 46, 48, 50, 58, 62, 75, 111, 112, 119, 120, 129, 130, 131, 132, 133, 134, 136, 138, 142, 149, 161, 169, 222, 224, 236, 245, 246, 247, 249, 250, 251, 253, 265, 266, 269, 270, 272, 273, 284, 285, 289, 290, 291, 295], "invoc": 1, "serial": [1, 43, 249, 251, 271, 272, 291], "A": [1, 6, 7, 8, 11, 13, 14, 16, 18, 19, 25, 27, 28, 30, 37, 38, 39, 40, 41, 45, 48, 49, 52, 55, 56, 57, 63, 67, 68, 71, 74, 75, 76, 80, 86, 89, 91, 93, 94, 95, 96, 97, 98, 102, 103, 104, 108, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 133, 136, 138, 144, 149, 151, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 175, 178, 180, 183, 186, 188, 192, 197, 200, 202, 206, 211, 214, 216, 220, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 239, 240, 242, 243, 244, 246, 249, 250, 251, 252, 253, 258, 259, 261, 263, 270, 271, 272, 274, 275, 276, 277, 278, 279, 284, 285, 287, 288, 290, 291, 294, 295], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 16, 37, 39, 40, 45, 48, 49, 50, 52, 54, 56, 81, 107, 114, 117, 133, 136, 186, 236, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 265, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 285, 287, 288, 290, 291, 292, 295], "class": [1, 9, 11, 13, 14, 16, 17, 18, 19, 24, 32, 37, 42, 48, 56, 66, 67, 74, 80, 94, 122, 136, 137, 138, 144, 146, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 175, 178, 180, 183, 186, 188, 189, 190, 192, 194, 197, 200, 202, 204, 206, 208, 211, 214, 216, 219, 220, 221, 222, 224, 236, 239, 240, 242, 243, 244, 246, 247, 249, 251, 256, 258, 259, 261, 262, 263, 265, 268, 272], "attribut": [1, 8, 9, 12, 13, 14, 43, 45, 52, 98, 104, 105, 138, 242, 243, 272], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 17, 18, 39, 46, 48, 58, 107, 108, 119, 133, 136, 161, 169, 175, 222, 224, 239, 240, 244, 245, 247, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 294, 295, 296, 297], "relat": [1, 6, 7, 11, 13, 14, 133, 136, 236, 239, 240, 242, 243, 244, 245, 249, 253, 269, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 284, 285, 289, 290, 291, 292], "inform": [1, 5, 7, 8, 37, 94, 118, 128, 194, 208, 249, 251, 253, 273, 275, 282, 291, 292], "belong": [1, 10, 12, 14, 24, 34, 37, 44, 48, 67, 74, 80, 94, 136, 138, 144, 146, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 175, 178, 180, 183, 186, 188, 190, 192, 197, 200, 202, 204, 206, 211, 214, 216, 219, 220, 221, 222, 224, 245, 246, 249, 251, 252, 258, 259, 261, 262, 263, 272, 296], "locat": [1, 5, 6, 9, 14, 18, 37, 49, 111, 112, 117, 136, 236, 249, 251, 253, 265, 270, 272, 273, 275, 278, 281, 284, 285, 291], "highest": 1, "level": [1, 2, 11, 12, 13, 17, 18, 136, 141, 179, 228, 229, 230, 231, 232, 233, 234, 235, 239, 245, 247, 248, 249, 251, 272, 273, 284, 285, 287, 288, 289, 290, 295], "where": [1, 5, 7, 9, 14, 17, 37, 39, 48, 56, 58, 62, 93, 112, 117, 119, 133, 136, 228, 231, 234, 235, 236, 246, 248, 249, 251, 253, 265, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 289, 290, 291, 295, 296], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 24, 37, 44, 48, 55, 90, 91, 93, 112, 118, 133, 136, 137, 140, 141, 146, 156, 179, 197, 211, 220, 228, 234, 235, 236, 239, 245, 246, 247, 249, 250, 251, 252, 253, 256, 265, 270, 271, 272, 273, 278, 281, 282, 284, 285, 290, 291, 292, 295, 297], "below": [1, 5, 6, 14, 18, 24, 34, 37, 44, 90, 91, 133, 136, 146, 156, 197, 211, 220, 236, 245, 247, 249, 251, 253, 272, 273, 278, 281, 285, 287, 288, 289, 291], "There": [1, 5, 6, 13, 228, 234, 235, 244, 245, 247, 249, 252, 253, 269, 272, 273, 291], "wai": [1, 5, 7, 13, 14, 37, 71, 76, 133, 136, 249, 251, 252, 253, 269, 271, 272, 278, 281, 289], "list": [1, 2, 6, 7, 9, 14, 17, 24, 37, 40, 48, 49, 54, 55, 56, 90, 91, 108, 111, 112, 117, 118, 136, 138, 144, 152, 167, 171, 175, 178, 192, 202, 204, 206, 216, 220, 249, 250, 251, 252, 253, 259, 270, 271, 272, 273, 275, 278, 279, 285, 291, 296, 297], "within": [1, 5, 7, 9, 10, 11, 12, 14, 19, 34, 37, 39, 40, 44, 48, 49, 56, 59, 117, 118, 133, 136, 239, 242, 243, 245, 246, 247, 249, 250, 251, 253, 266, 270, 272, 273, 275, 278, 285, 289, 290, 295], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 37, 43, 48, 63, 69, 70, 79, 106, 112, 128, 133, 136, 138, 142, 171, 172, 175, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 259, 260, 268, 270, 272, 273, 278, 281, 284, 285, 287, 288, 290, 291, 295, 296], "also": [1, 2, 5, 6, 7, 9, 13, 14, 18, 32, 43, 56, 118, 119, 133, 136, 186, 228, 234, 235, 236, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 272, 273, 278, 279, 281, 285, 287, 288, 290, 291, 295, 297], "find": [1, 6, 7, 58, 70, 92, 133, 236, 251, 252, 253, 269, 272, 273, 291], "onli": [1, 5, 6, 7, 8, 14, 16, 17, 48, 133, 136, 236, 238, 240, 244, 246, 249, 251, 252, 265, 268, 271, 272, 273, 275, 278, 279, 281, 283, 284, 285, 288, 289, 291, 294], "its": [1, 5, 6, 7, 8, 9, 12, 16, 18, 37, 50, 100, 105, 106, 114, 133, 136, 245, 246, 247, 249, 250, 251, 252, 253, 270, 272, 273, 274, 285, 291, 297], "would": [1, 2, 5, 9, 14, 17, 24, 34, 37, 44, 49, 90, 91, 94, 133, 136, 146, 156, 197, 211, 220, 239, 247, 249, 251, 252, 253, 269, 272, 278, 281, 291], "ident": [1, 2, 5, 17, 154, 162, 170, 239, 249, 250, 252, 258, 272, 284], "self": [1, 9, 11, 12, 14, 16, 17, 18, 50, 82, 136, 246, 249, 251, 252, 272, 273], "contain": [1, 2, 5, 6, 7, 8, 9, 16, 18, 19, 26, 27, 28, 41, 55, 59, 86, 89, 95, 96, 97, 98, 102, 103, 104, 113, 120, 122, 136, 138, 144, 152, 228, 234, 235, 246, 247, 248, 249, 252, 253, 255, 265, 266, 270, 272, 273, 278, 282, 290, 291, 292, 295], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 16, 69, 133, 136, 236, 249, 253, 270, 272, 273, 281, 289, 291], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 18, 37, 38, 39, 50, 56, 74, 108, 124, 133, 136, 151, 236, 239, 240, 245, 248, 249, 251, 252, 253, 266, 270, 271, 272, 273, 278, 281, 284, 285, 291], "As": [1, 4, 5, 6, 9, 13, 17, 69, 136, 245, 249, 250, 251, 252, 253, 272, 273, 281, 285, 289, 296], "setup": [1, 6, 7, 9, 11, 14, 17, 29, 34, 37, 38, 44, 48, 133, 136, 158, 164, 182, 199, 213, 239, 242, 243, 244, 251, 252, 253, 270, 271, 272, 273, 285, 291, 297], "suit": [1, 2, 6, 7, 12, 17, 37, 48, 62, 63, 107, 108, 110, 112, 133, 239, 248, 249, 251, 253, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 284], "proce": [1, 253], "iter": [1, 236, 273], "through": [1, 2, 112, 252, 253, 266, 272], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 16, 17, 18, 24, 32, 37, 38, 39, 40, 60, 67, 69, 70, 96, 103, 113, 115, 119, 127, 133, 138, 142, 146, 183, 239, 240, 244, 245, 246, 247, 249, 250, 251, 252, 253, 269, 270, 271, 273, 275, 278, 281, 287, 291, 296, 297], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 24, 34, 37, 38, 40, 44, 49, 50, 92, 100, 105, 129, 131, 132, 133, 145, 146, 156, 197, 211, 220, 236, 240, 246, 247, 248, 249, 250, 251, 252, 253, 265, 266, 269, 270, 272, 273, 281, 284, 285, 287, 289, 291], "been": [1, 5, 6, 37, 40, 45, 49, 50, 52, 100, 112, 117, 129, 131, 132, 133, 136, 138, 145, 178, 192, 202, 206, 216, 236, 246, 249, 251, 252, 253, 265, 269, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 291], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 16, 17, 23, 38, 39, 46, 49, 50, 51, 56, 136, 145, 151, 153, 161, 169, 177, 191, 205, 218, 228, 234, 235, 245, 246, 251, 253, 257, 266, 271, 274, 275, 276, 277, 279, 291], "initi": [1, 7, 8, 37, 120, 136, 141, 152, 154, 155, 159, 162, 165, 170, 179, 183, 200, 214, 219, 221, 222, 224, 239, 240, 242, 243, 244, 245, 249, 251, 252, 262, 269, 270, 271, 273, 281, 283, 296, 297], "fals": [1, 9, 13, 14, 17, 18, 24, 37, 39, 49, 54, 63, 65, 107, 108, 112, 117, 118, 120, 133, 136, 146, 222, 224, 238, 245, 249, 251, 266, 272, 273, 275, 277, 279, 284], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 46, 68, 75, 133, 136, 161, 169, 185, 245, 246, 249, 251, 252, 270, 271, 272, 285, 297], "skip": [1, 5, 8, 118, 296], "true": [1, 6, 7, 9, 13, 14, 17, 18, 24, 49, 58, 60, 118, 119, 120, 124, 129, 130, 131, 132, 133, 134, 136, 146, 221, 238, 245, 249, 253, 272, 273, 274, 275, 276, 277, 278, 279, 284, 291, 297], "when": [1, 5, 6, 12, 14, 16, 17, 25, 26, 27, 28, 30, 37, 38, 43, 48, 49, 56, 58, 60, 63, 107, 118, 133, 136, 149, 233, 239, 240, 242, 243, 244, 245, 249, 251, 252, 253, 271, 272, 274, 275, 276, 277, 279, 281, 284, 285, 289, 291, 297], "complet": [1, 5, 8, 26, 27, 28, 105, 272, 291], "alreadi": [1, 4, 5, 6, 11, 14, 49, 50, 60, 133, 136, 145, 220, 249, 251, 252, 253, 272, 273, 278, 281, 285, 291], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 17, 18, 37, 48, 136, 144, 156, 180, 197, 211, 220, 239, 242, 243, 249, 250, 251, 252, 253, 271, 272, 281], "parallel": [1, 5, 16, 24, 34, 37, 43, 44, 133, 146, 249, 252, 253, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 291, 297], "make": [1, 4, 5, 6, 7, 9, 11, 12, 16, 17, 18, 24, 33, 39, 56, 68, 69, 71, 84, 129, 130, 131, 132, 133, 134, 136, 146, 150, 154, 162, 170, 188, 228, 234, 235, 236, 239, 245, 249, 251, 252, 253, 258, 265, 270, 273, 274, 275, 276, 277, 278, 279, 284, 285, 291, 296], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 52, 54, 58, 60, 66, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 127, 128, 138, 141, 142, 144, 146, 150, 152, 158, 161, 164, 169, 179, 186, 188, 227, 236, 239, 240, 242, 243, 244, 245, 250, 251, 252, 253, 259, 265, 266, 268, 269, 270, 271, 275, 278, 279, 281, 284, 285, 290, 291, 294, 295, 297], "mode": [1, 5, 14, 246, 253, 270, 271, 272, 291], "sure": [1, 5, 6, 7, 12, 14, 16, 17, 133, 136, 154, 162, 170, 236, 239, 249, 252, 253, 258, 265, 270, 272, 273, 278, 279, 284, 285], "dictionari": [1, 8, 9, 14, 18, 19, 25, 27, 28, 30, 37, 38, 41, 48, 56, 86, 89, 93, 112, 113, 122, 123, 124, 136, 144, 149, 240, 249, 251, 252, 272, 285], "them": [1, 7, 8, 9, 14, 16, 17, 24, 36, 133, 136, 146, 240, 246, 247, 249, 251, 252, 253, 270, 272, 277, 278, 283, 291, 297], "constructor": [1, 9, 14, 136, 239, 242, 243, 245, 272], "argument": [1, 5, 7, 9, 12, 14, 17, 18, 35, 37, 90, 91, 101, 119, 239, 246, 249, 251, 252, 253, 272, 290, 295, 296], "replac": [1, 5, 7, 9, 14, 25, 26, 27, 28, 29, 30, 45, 48, 52, 60, 86, 113, 123, 124, 133, 136, 144, 149, 158, 164, 251, 252, 272, 273, 291], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 16, 24, 37, 39, 48, 49, 51, 56, 62, 65, 67, 74, 80, 93, 94, 111, 117, 122, 133, 138, 144, 145, 146, 153, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 175, 177, 178, 180, 183, 186, 188, 190, 191, 192, 197, 200, 202, 204, 205, 206, 211, 214, 216, 218, 219, 220, 221, 222, 224, 245, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 261, 262, 263, 266, 270, 271, 272, 273, 278, 280, 283, 296, 297], "subdir": [1, 5, 9, 16, 24, 37, 48, 49, 67, 74, 80, 94, 136, 138, 144, 146, 156, 178, 180, 183, 186, 188, 220, 249, 251, 259, 272], "now": [1, 6, 133, 249, 253, 272, 273, 278], "rel": [1, 2, 5, 9, 16, 17, 39, 40, 49, 54, 56, 111, 112, 117, 118, 236, 246, 249, 251, 252, 253, 259, 265, 270, 272, 284, 291, 297], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 37, 39, 56, 133, 239, 249, 253, 269, 272, 281], "than": [1, 5, 6, 8, 9, 11, 13, 14, 37, 39, 44, 56, 133, 156, 197, 211, 220, 239, 249, 250, 252, 253, 269, 272, 281, 284], "parent": [1, 32, 136, 240, 245, 246, 249], "resid": [1, 5, 9, 39, 136, 138, 178, 247, 249, 251], "insid": [1, 12, 247, 249, 252, 285], "situat": [1, 16, 30, 149, 272, 291], "anoth": [1, 2, 6, 7, 9, 10, 13, 16, 17, 37, 38, 39, 118, 236, 239, 245, 247, 249, 251, 252, 253, 270, 272, 273, 284, 291, 296, 297], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 136, 236, 241, 246, 251, 272, 285, 290, 295, 296], "with_viz": [1, 240, 251, 285], "base": [1, 5, 8, 13, 14, 15, 17, 19, 37, 39, 41, 48, 54, 73, 78, 80, 111, 112, 117, 133, 136, 145, 148, 150, 180, 183, 186, 188, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 246, 248, 249, 251, 252, 253, 265, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 297], "mesh": [1, 5, 7, 10, 16, 24, 37, 84, 96, 103, 120, 138, 139, 141, 144, 146, 147, 148, 150, 152, 155, 157, 159, 175, 178, 179, 180, 181, 183, 186, 188, 192, 194, 198, 200, 202, 206, 208, 212, 214, 216, 219, 221, 222, 228, 234, 235, 238, 239, 240, 242, 243, 244, 245, 247, 249, 251, 252, 253, 261, 262, 270, 271, 273, 281, 283, 291, 296], "init": [1, 5, 6, 7, 9, 14, 17, 18, 34, 44, 136, 138, 144, 154, 155, 162, 165, 170, 180, 186, 236, 238, 246, 249, 251, 252, 253, 265, 273, 284, 285, 287, 288, 291], "forward": [1, 5, 7, 9, 14, 37, 136, 138, 144, 152, 155, 163, 165, 186, 219, 221, 236, 246, 249, 251, 252, 262, 265, 273, 284, 285, 287, 288, 290, 295], "resolut": [1, 9, 13, 14, 16, 67, 70, 74, 75, 79, 95, 99, 102, 136, 138, 139, 142, 144, 145, 154, 155, 156, 159, 162, 163, 165, 167, 170, 175, 178, 180, 192, 197, 200, 202, 204, 206, 211, 214, 216, 239, 240, 242, 243, 244, 245, 246, 247, 249, 251, 273, 284, 285, 287, 288, 289, 290, 295, 297], "singl": [1, 5, 8, 9, 18, 120, 133, 218, 219, 221, 222, 224, 244, 249, 251, 252, 257, 258, 259, 261, 262, 263, 265, 266, 270, 272, 278, 282, 285, 286, 287, 288, 292, 293], "analysi": [1, 6, 9, 18, 136, 239, 251, 252, 270, 271, 273, 285, 287, 288, 297], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 38, 39, 40, 49, 50, 51, 57, 73, 78, 83, 113, 114, 115, 123, 124, 127, 128, 133, 136, 145, 153, 158, 164, 177, 191, 205, 218, 245, 246, 249, 251, 252, 253, 257, 270, 272, 273, 279, 285], "remap": [1, 10, 18, 186, 240, 271, 285, 290, 295], "visual": [1, 10, 13, 16, 202, 216, 240, 242, 243, 245, 249, 251, 270, 271, 285, 287, 288, 290, 295], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 17, 18, 19, 30, 39, 117, 133, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 270, 271, 272, 273, 278, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 296, 297], "spheric": [1, 5, 240, 251, 285, 296], "qu": [1, 5, 136, 251, 272, 273, 283, 285, 296], "base_mesh": [1, 5, 13, 67, 74, 136, 138, 144, 145, 180, 183, 186, 188, 249, 251, 272, 285], "60km": [1, 5, 251, 285], "90km": [1, 5], "120km": [1, 5, 251], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 145, 251], "map": [1, 8, 16, 19, 30, 74, 75, 94, 119, 120, 149, 186, 188, 240, 251, 253, 273], "viz": [1, 5, 18, 175, 249, 251], "two": [1, 5, 10, 17, 118, 136, 162, 172, 239, 240, 242, 243, 244, 245, 246, 249, 250, 252, 253, 258, 260, 272, 284, 285, 287, 288, 294], "first": [1, 6, 9, 14, 112, 133, 136, 239, 242, 243, 244, 249, 251, 252, 253, 269, 272, 274, 275, 276, 277, 278, 279, 284, 285, 289, 291], "verbos": [1, 5, 6, 63, 65, 133, 249, 272, 296], "10": [1, 9, 13, 69, 133, 236, 239, 242, 243, 245, 246, 272, 273, 278, 281, 284, 287, 288, 289, 297], "name": [1, 5, 7, 8, 9, 13, 14, 16, 17, 18, 19, 24, 26, 27, 28, 30, 31, 37, 38, 39, 40, 48, 50, 58, 60, 61, 62, 63, 67, 74, 80, 84, 86, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 108, 110, 111, 112, 113, 117, 118, 119, 120, 122, 123, 127, 133, 136, 138, 139, 140, 141, 142, 144, 145, 146, 149, 152, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 179, 180, 183, 186, 188, 220, 227, 245, 246, 249, 251, 252, 253, 259, 261, 263, 270, 272, 273, 279, 284, 291, 296], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 136, 141, 151, 156, 179, 220, 244, 249, 252, 284, 289, 294], "symlink": [1, 5, 8, 9, 14, 17, 37, 39, 48, 49, 56, 251, 252, 253, 285], "what": [1, 2, 6, 11, 13, 16, 133, 251, 252, 272, 279, 290, 291, 295], "follow": [1, 4, 5, 7, 9, 13, 14, 18, 66, 133, 138, 228, 234, 235, 236, 238, 249, 250, 251, 253, 265, 266, 269, 272, 273, 278, 279, 281, 283, 285, 287, 288, 289, 291, 294], "subdirectori": [1, 5, 7, 8, 13, 19, 23, 24, 37, 39, 48, 49, 51, 63, 67, 74, 80, 94, 111, 136, 138, 144, 146, 156, 178, 180, 183, 186, 188, 192, 197, 200, 202, 206, 211, 214, 216, 220, 222, 224, 245, 247, 249, 251, 252, 272, 290, 291, 295, 297], "bold": [1, 251], "elsewher": [1, 253], "tree": [1, 7, 113, 115, 128, 251, 292], "thu": [1, 2, 7, 14, 272, 285], "similar": [1, 2, 5, 9, 12, 13, 14, 130, 133, 134, 136, 245, 247, 252, 253, 272, 273, 291], "had": [1, 133], "maintain": [1, 236, 291], "local": [1, 5, 6, 8, 9, 11, 17, 39, 236, 247, 249, 253, 265, 269, 272, 273, 278, 279, 281], "debug": [1, 8, 129, 130, 131, 132, 133, 134, 272, 274, 275, 276, 277, 279], "easier": [1, 14, 249, 251, 252, 253, 273, 291, 296], "symbol": [1, 60, 249], "link": [1, 2, 7, 9, 11, 14, 39, 45, 52, 60, 133, 245, 249, 251, 253, 272, 278, 282, 291, 292], "were": [1, 47, 133, 220, 249, 252, 270, 272, 273, 277, 281], "even": [1, 6, 12, 13, 14, 39, 56, 133, 249, 252, 253, 272, 273, 278, 291], "compass": [1, 5, 236, 249, 251, 252, 270, 272], "though": [1, 11, 37, 251, 252, 272], "global": [1, 13, 16, 98, 99, 104, 240, 245, 249, 250, 252, 270, 271, 272, 273, 279, 283, 285, 290, 291, 295, 297], "dynamic_adjust": [1, 14, 273], "allow": [1, 2, 8, 16, 17, 24, 34, 37, 44, 56, 118, 133, 136, 146, 249, 270, 272, 273, 278, 281, 285, 289, 297], "one": [1, 2, 5, 6, 7, 10, 14, 16, 17, 18, 24, 36, 37, 39, 40, 47, 48, 54, 60, 111, 112, 117, 133, 136, 145, 146, 162, 220, 236, 239, 242, 243, 244, 245, 247, 249, 251, 252, 253, 258, 268, 269, 270, 271, 273, 278, 279, 281, 284, 285, 288, 290, 291, 294, 295, 296, 297], "input": [1, 5, 8, 10, 11, 16, 32, 37, 38, 39, 40, 46, 84, 136, 161, 169, 239, 240, 242, 243, 244, 272, 289], "port": [1, 272, 279], "instead": [1, 5, 6, 12, 14, 24, 108, 129, 133, 249, 252, 253, 270, 272, 274, 285, 291, 296], "seri": [1, 14, 136, 167, 173, 240, 242, 268, 272, 283], "indic": [1, 7, 8, 14, 16, 17, 37, 38, 105, 112, 120, 133, 136, 231, 247, 249, 269, 272, 273, 281, 289], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 37, 38, 238, 249, 251, 252, 253, 272, 275, 277, 279, 291], "ran": [1, 106], "ico": [1, 5, 136, 251, 272, 283, 285, 296], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 24, 112, 117, 133, 146, 236, 246, 249, 253, 265, 272, 273, 274, 275, 276, 277, 278, 279, 291], "runtim": [1, 8, 14, 29, 43, 136, 158, 164, 182, 199, 213, 249, 272], "0": [1, 2, 5, 6, 7, 13, 14, 16, 17, 18, 69, 95, 99, 102, 118, 120, 129, 130, 131, 132, 133, 134, 136, 228, 233, 234, 235, 238, 240, 245, 249, 252, 266, 269, 272, 273, 275, 278, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 295], "01": [1, 14, 136, 266, 272, 289, 294], "00": [1, 14, 17, 136, 251, 266, 272, 279, 291], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 291], "02": [1, 275], "59": 1, "icos_map_60km": 1, "20": [1, 165, 239, 250, 272, 284, 289], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 56, 133, 239, 252, 253, 285, 289], "mechan": [1, 249], "prevent": [1, 249], "expect": [1, 2, 12, 16, 133, 136, 246, 249, 253, 272, 285], "affect": [1, 6, 249, 253, 272], "howev": [1, 13, 249, 250, 251, 253, 272], "perform": [1, 2, 5, 8, 14, 16, 17, 37, 42, 43, 46, 47, 67, 118, 133, 136, 144, 155, 156, 161, 165, 169, 180, 189, 197, 211, 219, 220, 221, 236, 239, 240, 242, 243, 244, 249, 250, 251, 262, 270, 271, 272, 273, 278, 284, 296], "successfulli": [1, 47, 272], "after": [1, 5, 6, 7, 9, 16, 17, 18, 37, 39, 40, 81, 100, 105, 133, 229, 230, 236, 246, 249, 251, 253, 265, 272, 273, 275, 279, 285, 291, 294], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 16, 30, 37, 38, 45, 52, 106, 112, 117, 132, 133, 136, 138, 142, 149, 178, 192, 202, 206, 216, 236, 239, 242, 243, 245, 247, 249, 250, 251, 252, 253, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 291, 296, 297], "remov": [1, 5, 14, 23, 51, 108, 239, 242, 243, 251, 253, 272], "longer": [1, 162, 239, 250, 258, 272, 284, 285], "about": [1, 5, 6, 7, 8, 12, 14, 37, 94, 122, 136, 245, 249, 251, 252, 253, 272, 273, 275], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 29, 49, 56, 75, 133, 136, 158, 164, 236, 240, 246, 249, 251, 252, 253, 265, 266, 269, 271, 272, 273, 274, 278, 279, 281, 284, 285, 291, 296], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 18, 133, 136, 236, 238, 246, 249, 250, 251, 252, 266, 269, 273, 278, 282, 291], "enforc": [1, 238, 253], "framework": [1, 5, 7, 9, 12, 13, 14, 107, 236, 245, 246, 249, 251, 265, 270, 271, 272, 282, 289, 290, 292, 295, 297], "propos": [1, 2], "close": [1, 6, 70, 133, 271, 285], "root": [1, 39, 133, 236, 242, 243, 246, 249, 252, 253, 265, 270, 273, 274, 275, 276, 277, 278, 279, 281, 287, 288, 291], "live": [1, 49, 251, 291], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 24, 36, 39, 47, 68, 75, 76, 79, 82, 94, 100, 118, 136, 146, 162, 171, 194, 208, 228, 234, 235, 240, 246, 247, 249, 251, 252, 258, 259, 278, 281, 284, 287, 288], "think": [1, 5, 272], "condit": [1, 7, 37, 136, 141, 155, 159, 179, 183, 200, 214, 219, 221, 222, 224, 239, 240, 242, 243, 244, 245, 249, 250, 251, 252, 262, 268, 270, 271, 273, 283, 296, 297], "shown": [1, 14, 133, 247, 289], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 34, 37, 38, 39, 40, 44, 48, 57, 71, 74, 76, 95, 99, 100, 102, 111, 112, 117, 129, 130, 131, 132, 133, 134, 136, 236, 239, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 285, 288, 291, 296, 297], "simpli": [1, 14, 17, 56, 133, 155, 246, 249, 251, 253, 272, 281, 291, 296], "prefer": [1, 2, 133, 249, 250, 272, 273], "convent": [1, 249, 253, 272], "futur": [1, 13, 43, 249, 252, 270, 271, 272, 273, 289, 291, 297], "current": [1, 2, 5, 6, 8, 11, 24, 34, 37, 44, 118, 133, 146, 236, 244, 246, 249, 252, 253, 255, 265, 266, 270, 271, 272, 273, 278, 281, 284, 288, 289, 291, 296, 297], "independ": [1, 2, 5, 250, 270], "yyyi": 2, "mm": [2, 136, 151], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 43, 46, 48, 49, 51, 54, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 84, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 122, 123, 127, 128, 133, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 151, 154, 155, 156, 157, 159, 161, 162, 163, 165, 167, 169, 170, 171, 173, 175, 178, 179, 180, 181, 183, 186, 188, 190, 192, 197, 198, 200, 202, 204, 206, 211, 212, 214, 216, 219, 220, 221, 222, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 259, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 294, 295, 297], "purpos": [2, 245, 252, 272, 297], "section": [2, 3, 5, 6, 7, 9, 12, 14, 16, 24, 30, 75, 119, 124, 133, 136, 146, 149, 226, 228, 234, 235, 236, 240, 244, 245, 246, 249, 250, 252, 253, 265, 269, 272, 273, 274, 275, 276, 277, 278, 279, 281, 285, 289, 290, 291, 295], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 24, 29, 34, 37, 38, 39, 40, 43, 44, 48, 49, 54, 58, 60, 74, 75, 80, 90, 91, 94, 98, 104, 105, 107, 108, 113, 115, 118, 120, 123, 128, 129, 131, 132, 133, 136, 141, 144, 145, 146, 154, 155, 156, 158, 159, 162, 163, 164, 165, 167, 170, 171, 173, 179, 182, 197, 199, 211, 213, 220, 228, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 259, 261, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 289, 290, 294, 295, 296, 297], "summar": 2, "process": [2, 6, 8, 14, 32, 90, 91, 128, 249, 252, 253, 265, 270, 271, 272], "It": [2, 5, 6, 9, 14, 16, 37, 43, 119, 136, 242, 243, 245, 249, 250, 251, 252, 253, 270, 272, 273, 278, 285, 287, 288], "code": [2, 5, 7, 9, 12, 14, 37, 136, 236, 245, 246, 249, 250, 251, 255, 265, 270, 271, 273, 280, 284, 289, 291], "do": [2, 5, 9, 11, 14, 16, 17, 123, 133, 136, 245, 249, 251, 253, 269, 270, 271, 272, 278, 285, 291], "doe": [2, 6, 9, 12, 14, 249, 255, 271, 272, 278], "primari": [2, 5, 9, 272, 296], "challeng": 2, "respect": [2, 8, 9, 14, 18, 136, 139, 249, 252, 285, 290, 295], "softwar": [2, 84, 279, 291], "appropri": [2, 5, 6, 14, 25, 79, 133, 136, 236, 239, 242, 243, 244, 246, 247, 249, 253, 265, 271, 272, 273, 274, 275, 276, 277, 278, 279, 290, 291, 295], "final": [2, 5, 6, 7, 8, 133, 239, 240, 242, 243, 244, 249, 251, 268, 272, 285], "statement": [2, 12, 249, 270], "gener": [2, 3, 5, 7, 8, 12, 14, 18, 25, 26, 27, 28, 32, 46, 74, 118, 136, 161, 169, 226, 236, 238, 239, 242, 243, 244, 246, 249, 253, 265, 272, 273, 278, 285, 287, 288, 291], "regard": 2, "last": [2, 250, 253, 284, 291], "modifi": [2, 8, 9, 13, 14, 24, 36, 50, 113, 115, 136, 146, 166, 239, 242, 243, 249, 251, 253, 271, 272, 273, 284, 291], "your": [2, 4, 5, 6, 11, 133, 236, 252, 253, 265, 269, 272, 273, 274, 275, 278, 279, 285, 291], "appear": [2, 133, 249, 272], "under": [2, 16, 37, 38, 133, 136, 238, 249, 250, 253, 271, 281, 297], "head": [2, 238, 275], "correspond": [2, 6, 7, 118, 133, 136, 138, 236, 249, 253, 265, 284], "discuss": [2, 6, 136, 240, 249, 252, 272, 284], "technic": [2, 7], "issu": [2, 6, 249, 250, 253, 287, 288], "focu": [2, 272], "model": [2, 5, 10, 24, 25, 29, 30, 32, 37, 39, 112, 117, 122, 127, 129, 130, 131, 132, 133, 134, 144, 154, 156, 158, 162, 163, 164, 165, 170, 182, 199, 213, 220, 236, 239, 240, 242, 243, 244, 246, 249, 250, 252, 253, 258, 265, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 284, 287, 288, 290], "To": [2, 5, 6, 12, 16, 17, 118, 133, 136, 236, 249, 252, 253, 265, 266, 272, 274, 275, 276, 277, 278, 279, 281, 285, 291], "extent": [2, 13, 16, 272, 284], "possibl": [2, 8, 11, 70, 136, 238, 240, 249, 250, 251, 252, 272, 281], "other": [2, 5, 6, 7, 8, 9, 10, 13, 16, 18, 37, 38, 40, 48, 56, 105, 129, 172, 240, 244, 245, 246, 247, 251, 252, 253, 260, 269, 270, 271, 273, 274, 284, 285, 297], "clean": [2, 4, 5, 6, 112, 117, 249, 251, 253], "plan": [2, 13, 136, 236, 242, 243, 249, 265, 270, 287, 288, 297], "For": [2, 3, 5, 6, 7, 9, 12, 14, 16, 18, 112, 129, 133, 136, 140, 141, 179, 238, 239, 242, 243, 244, 249, 252, 253, 272, 273, 274, 282, 285, 287, 288, 291, 292, 297], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 129, 130, 131, 132, 133, 134, 136, 236, 246, 249, 251, 252, 253, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 285, 291, 296, 297], "provid": [2, 3, 5, 8, 9, 14, 16, 17, 18, 24, 37, 39, 40, 45, 47, 48, 52, 94, 98, 104, 118, 123, 133, 136, 146, 151, 156, 220, 236, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 265, 268, 269, 270, 271, 272, 273, 278, 282, 285, 290, 291], "intend": [2, 6, 8, 9, 250, 273, 288, 297], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 63, 118, 238, 240, 247, 249, 252, 253, 269, 272, 291], "pde": 2, "solver": [2, 251, 253, 271, 291], "well": [2, 6, 9, 12, 13, 133, 136, 231, 239, 240, 242, 243, 244, 249, 253, 270, 272, 273, 285, 291, 297], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 23, 24, 26, 27, 30, 37, 38, 39, 47, 48, 50, 51, 54, 58, 60, 84, 86, 91, 95, 96, 97, 98, 99, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 118, 120, 123, 124, 127, 128, 133, 138, 141, 146, 149, 156, 178, 182, 185, 186, 192, 199, 202, 206, 213, 216, 232, 236, 238, 239, 240, 242, 243, 244, 245, 246, 251, 252, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 284, 285, 287, 288, 290, 291, 294, 295, 296, 297], "low": [2, 120], "variabl": [2, 5, 13, 18, 19, 24, 37, 40, 47, 48, 56, 67, 74, 80, 84, 94, 95, 99, 102, 118, 120, 122, 123, 128, 133, 136, 138, 139, 140, 141, 142, 144, 146, 152, 156, 159, 165, 167, 171, 175, 179, 186, 188, 192, 194, 197, 200, 202, 204, 206, 208, 211, 214, 216, 220, 228, 234, 235, 238, 244, 249, 252, 253, 259, 260, 265, 269, 272, 274, 275, 276, 277, 278, 279, 282, 284, 290, 291, 292, 295], "declar": [2, 7], "interfac": [2, 10, 226, 227, 228, 234, 235, 252, 253, 271, 272, 281], "sequenc": [2, 5, 14, 240, 248, 249, 252, 270, 272, 291, 296, 297], "If": [2, 5, 6, 7, 8, 9, 12, 14, 17, 18, 24, 34, 37, 39, 44, 45, 48, 49, 50, 52, 60, 90, 91, 92, 94, 105, 118, 120, 129, 130, 131, 132, 133, 134, 136, 146, 151, 156, 197, 211, 220, 239, 249, 251, 252, 253, 266, 269, 270, 272, 273, 278, 279, 281, 285, 290, 291, 295], "want": [2, 5, 6, 11, 14, 16, 17, 50, 133, 136, 249, 251, 253, 269, 272, 273, 278, 279, 289, 291, 297], "math": 2, "syntax": [2, 136, 272], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 253, 270, 272, 291], "2": [2, 6, 13, 14, 17, 38, 133, 136, 170, 238, 239, 247, 250, 253, 259, 266, 272, 273, 275, 278, 281, 284, 285, 287, 288, 291], "2ab": 2, "imag": [2, 7, 18, 119, 120, 245, 272, 290, 295], "keep": [2, 5, 6, 9, 14, 24, 56, 240, 245, 246, 249, 251, 253, 272, 290, 295], "mind": [2, 5, 272], "quit": [2, 247, 249, 251, 272], "small": [2, 9, 43, 133, 245, 249, 272, 274, 275, 280, 281, 289, 291], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24, 33, 34, 37, 39, 43, 44, 48, 56, 79, 90, 91, 94, 107, 108, 112, 124, 133, 136, 138, 146, 151, 156, 197, 211, 220, 228, 231, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 287, 288, 289, 290, 291, 294, 295, 296, 297], "png": [2, 13, 18, 240, 249, 272], "okai": [2, 6, 249, 272], "size": [2, 13, 18, 69, 70, 79, 136, 148, 150, 152, 245, 272, 273, 284, 285, 287, 288, 289, 290, 295], "repo": [2, 5, 6, 133, 236, 265, 271, 272, 292], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 133, 136, 245, 246, 247, 249, 250, 251, 252, 253, 269, 270, 272, 273, 275, 281, 290, 291, 296, 297], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 249, 251, 253, 272], "sourc": [2, 6, 7, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 249, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 272, 273, 274, 275, 276, 277, 278, 279, 291], "project": [2, 5, 6, 7, 66, 98, 104, 236, 252, 253, 265, 266, 272, 273, 274, 275, 278, 291, 292], "manag": [2, 269, 278], "item": [2, 272], "git": [2, 6, 15, 93, 236, 253, 265, 272, 273, 291], "branch": [2, 5, 133, 236, 246, 249, 253, 265, 271, 272, 291], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 249, 253, 278], "block": [2, 251], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 17, 95, 99, 102, 133, 136, 245, 247, 249, 251, 252, 253, 269, 271, 272, 273, 278, 284, 285, 291, 297], "def": [2, 7, 9, 11, 12, 14, 16, 17, 18, 136, 245, 246, 249, 251, 252, 272], "example_funct": 2, "foo": [2, 252], "return": [2, 7, 30, 47, 55, 58, 61, 68, 69, 70, 75, 79, 86, 89, 90, 100, 109, 110, 112, 113, 115, 118, 123, 127, 128, 136, 139, 140, 141, 145, 147, 149, 151, 152, 157, 179, 181, 195, 196, 198, 209, 210, 212, 226, 229, 230, 231, 232, 233, 251, 252, 272, 285], "how": [2, 5, 6, 12, 14, 74, 136, 248, 249, 251, 252, 253, 273, 278, 279], "show": [2, 7, 13, 249, 272, 278, 279, 284, 285, 290, 295], "met": 2, "regress": [2, 239, 240, 250, 270, 271, 272, 284, 285, 291, 296], "configur": [2, 5, 6, 11, 14, 16, 34, 37, 44, 48, 58, 62, 89, 90, 91, 92, 93, 112, 117, 133, 136, 226, 228, 229, 230, 234, 235, 249, 252, 271, 272, 273, 275, 278, 279, 281, 287, 288, 290, 291, 295, 297], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 37, 39, 40, 42, 45, 46, 48, 49, 52, 54, 56, 62, 93, 107, 112, 117, 132, 133, 161, 169, 186, 189, 247, 248, 249, 250, 251, 252, 253, 269, 270, 272, 273, 278, 285, 289, 291, 297], "properli": [2, 129, 131, 132, 272, 273, 291], "addit": [2, 7, 9, 17, 37, 136, 244, 245, 246, 247, 249, 251, 252, 253, 272], "modif": [2, 7, 249, 266], "nightli": [2, 253, 291, 296], "might": [2, 6, 11, 14, 16, 18, 133, 136, 245, 249, 253, 272, 273, 278, 291], "made": [2, 5, 16, 37, 40, 48, 118, 249, 251, 252, 266, 268, 270, 272, 297], "continu": [2, 6, 249, 272], "page": [3, 7, 133, 274], "auto": 3, "summari": [3, 275], "more": [3, 5, 6, 9, 11, 12, 13, 14, 16, 18, 37, 48, 54, 75, 111, 112, 133, 136, 238, 239, 240, 245, 247, 249, 250, 251, 252, 253, 270, 278, 282, 284, 290, 291, 292, 295, 297], "relev": [3, 7, 9, 136, 240, 242, 243, 272, 274, 275, 276, 277, 278, 279, 290, 291, 295], "seaic": [3, 10, 19, 39, 246, 249, 268, 270, 271, 291, 292, 295, 297], "long": [4, 24, 34, 37, 44, 90, 91, 146, 156, 197, 211, 220, 249, 272, 284, 291], "procedur": [4, 133, 253, 272, 279], "conda": [4, 5, 15, 93, 129, 131, 132, 133, 236, 246, 252, 265, 271, 272, 273, 274, 275, 276, 277, 279], "environ": [4, 5, 129, 131, 132, 236, 246, 252, 265, 271, 272, 273, 274, 275, 276, 277, 278, 279], "spack": [4, 5, 129, 131, 132, 269, 271, 272, 274, 275, 276, 277, 278, 279], "compil": [4, 5, 6, 14, 129, 130, 131, 132, 133, 134, 269, 271, 272, 274, 275, 276, 277, 278, 279, 291], "system": [4, 5, 6, 24, 34, 37, 44, 90, 91, 92, 129, 131, 132, 133, 146, 156, 197, 211, 220, 249, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 291], "modul": [4, 5, 9, 10, 12, 14, 15, 26, 27, 28, 66, 86, 113, 129, 131, 132, 133, 136, 144, 245, 246, 247, 249, 251, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 291], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 25, 26, 27, 28, 29, 37, 39, 45, 46, 52, 75, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 109, 111, 112, 113, 115, 117, 118, 119, 120, 129, 130, 131, 132, 133, 134, 158, 161, 164, 169, 176, 182, 199, 213, 220, 228, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 248, 249, 251, 252, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 284, 285, 287, 288, 289, 290, 295, 296], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 25, 26, 27, 28, 37, 46, 48, 81, 93, 105, 106, 109, 111, 112, 117, 118, 129, 130, 131, 132, 133, 134, 136, 161, 169, 236, 239, 240, 242, 243, 244, 248, 249, 251, 252, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 285, 290, 295, 296, 297], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 15, 26, 27, 28, 39, 50, 59, 86, 93, 113, 117, 123, 133, 136, 144, 245, 246, 247, 248, 249, 251, 253, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 291], "Then": [4, 6, 7, 11, 14, 129, 130, 131, 132, 133, 134, 236, 239, 242, 243, 244, 246, 249, 251, 253, 265, 272, 278, 284, 291], "run": [4, 5, 6, 7, 10, 12, 16, 17, 18, 24, 29, 34, 37, 38, 40, 43, 44, 47, 48, 49, 54, 66, 89, 90, 91, 100, 112, 117, 132, 133, 138, 144, 146, 155, 156, 158, 162, 164, 167, 171, 173, 178, 180, 182, 192, 197, 199, 202, 206, 211, 213, 216, 219, 220, 221, 236, 239, 240, 242, 243, 244, 247, 248, 250, 251, 252, 258, 259, 262, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 296, 297], "script": [4, 5, 6, 12, 18, 53, 62, 130, 133, 134, 252, 270, 271, 272, 275, 278], "doc": [4, 7, 272, 279], "cd": [4, 6, 236, 253, 265, 272, 275, 291], "html": [4, 282], "view": [4, 242, 243, 253, 287, 288], "open": [4, 6, 253, 272], "_build": 4, "index": [4, 17, 120, 138, 139, 141, 142, 179, 228, 229, 230, 231, 232, 233, 234, 235, 245, 272], "act": [5, 252, 281], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 133, 154, 155, 239, 242, 243, 244, 246, 249, 251, 272, 273, 278, 284, 285, 287, 288, 289, 291], "These": [5, 6, 8, 9, 14, 19, 37, 133, 136, 236, 238, 246, 249, 251, 252, 253, 265, 266, 271, 272, 273, 278, 284, 288, 291, 296, 297], "user": [5, 6, 7, 8, 9, 11, 14, 16, 37, 48, 49, 56, 62, 93, 133, 136, 239, 240, 242, 243, 244, 249, 250, 251, 269, 270, 272, 275, 278, 279, 282, 284, 285, 292], "describ": [5, 7, 14, 16, 18, 93, 113, 115, 128, 136, 239, 240, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 281, 285, 291], "instal": [5, 6, 133, 253, 272, 278, 279, 291], "abov": [5, 7, 14, 17, 133, 245, 247, 249, 250, 251, 252, 253, 272, 273, 287, 288, 289, 291, 296], "off": [5, 6, 253, 269], "http": [5, 7, 11, 14, 60, 249, 252, 269, 271, 272, 273, 279, 282, 291, 292], "github": [5, 6, 7, 252, 253, 271, 272, 273, 282, 291, 292], "com": [5, 6, 7, 14, 60, 252, 253, 271, 272, 273, 291, 292], "e3sm": [5, 7, 10, 11, 37, 122, 133, 236, 246, 249, 250, 252, 265, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 292], "creat": [5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 37, 39, 43, 48, 56, 60, 67, 68, 74, 75, 80, 94, 101, 111, 112, 117, 122, 133, 136, 138, 144, 145, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 175, 178, 180, 183, 186, 188, 190, 192, 194, 197, 200, 202, 204, 206, 208, 211, 214, 216, 219, 220, 221, 222, 224, 228, 234, 235, 240, 244, 245, 249, 250, 251, 252, 258, 259, 261, 262, 263, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 285, 291, 296], "see": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 129, 131, 132, 133, 239, 240, 243, 249, 253, 269, 272, 273, 278, 282, 283, 284, 285, 289, 290, 291, 292, 294, 296, 297], "mean": [5, 242, 243, 253, 272, 281, 284, 285, 287, 288, 296], "chang": [5, 6, 8, 16, 74, 105, 106, 136, 236, 246, 249, 250, 251, 252, 253, 265, 270, 272, 273, 275, 279, 281, 284, 285, 291, 296], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 32, 37, 43, 48, 49, 50, 66, 100, 107, 133, 136, 239, 242, 243, 244, 246, 249, 250, 251, 252, 253, 269, 270, 271, 272, 273, 278, 279, 291], "tool": [5, 6, 9, 12, 14, 16, 236, 246, 249, 253, 265, 271, 272, 273], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 29, 30, 34, 37, 38, 39, 43, 44, 48, 49, 54, 58, 62, 75, 84, 87, 90, 91, 94, 100, 107, 118, 119, 120, 121, 122, 123, 128, 129, 133, 136, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 156, 157, 158, 164, 171, 175, 178, 179, 181, 186, 197, 198, 204, 205, 211, 212, 220, 226, 228, 229, 230, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 259, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 289, 290, 291, 294, 296, 297], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 31, 34, 36, 37, 40, 41, 43, 44, 46, 55, 63, 66, 72, 77, 89, 90, 91, 93, 94, 107, 108, 111, 112, 117, 133, 136, 146, 148, 150, 236, 238, 239, 240, 242, 243, 244, 246, 247, 249, 250, 253, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 292, 296], "support": [5, 6, 8, 13, 16, 37, 136, 228, 234, 235, 238, 249, 252, 265, 270, 271, 272, 273, 275, 279, 281, 284, 289, 297], "machin": [5, 8, 9, 37, 39, 61, 62, 93, 111, 112, 117, 236, 249, 252, 265, 271, 272, 273, 274, 275, 276, 277, 279], "option": [5, 7, 9, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 44, 45, 48, 49, 50, 52, 54, 56, 57, 58, 60, 61, 62, 63, 67, 73, 74, 75, 78, 80, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 108, 111, 112, 113, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 133, 139, 141, 144, 146, 149, 151, 156, 158, 164, 166, 176, 179, 182, 194, 197, 199, 208, 211, 213, 220, 222, 224, 226, 228, 229, 230, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 261, 265, 266, 269, 271, 273, 281, 283, 291, 297], "help": [5, 6, 13, 133, 245, 246, 247, 249, 253, 271, 272, 278, 282, 292], "usag": [5, 18, 251, 273, 275, 279], "h": [5, 14, 272], "t": [5, 6, 7, 9, 11, 12, 14, 37, 38, 128, 133, 136, 138, 142, 195, 196, 209, 210, 220, 240, 249, 251, 252, 253, 269, 272, 273, 275, 277, 278, 283, 284, 287, 288, 291, 296, 297], "n": [5, 6, 68, 75, 76, 82, 249, 272, 275, 278, 279, 284, 285, 287, 288, 290, 291, 295], "number": [5, 6, 8, 13, 14, 24, 31, 34, 36, 37, 41, 43, 44, 61, 62, 63, 67, 68, 69, 70, 71, 79, 89, 90, 91, 94, 112, 133, 136, 146, 147, 148, 150, 156, 157, 171, 181, 194, 197, 198, 208, 211, 212, 220, 236, 239, 242, 243, 245, 249, 250, 251, 252, 259, 270, 272, 273, 278, 281, 283, 284, 285, 287, 288, 289, 290, 291, 295], "v": [5, 253, 272, 287, 288, 296], "By": [5, 14, 17, 38, 39, 136, 236, 246, 249, 251, 265, 272, 273, 284, 285, 289], "default": [5, 7, 9, 14, 17, 18, 24, 38, 39, 48, 54, 62, 75, 80, 85, 93, 94, 95, 99, 102, 108, 112, 114, 117, 120, 129, 131, 132, 133, 136, 140, 141, 156, 179, 236, 240, 242, 243, 244, 245, 246, 249, 251, 253, 265, 266, 271, 273, 274, 275, 276, 277, 278, 279, 281, 285, 289, 290, 291, 295, 297], "planar": [5, 9, 120, 136, 238, 246, 249, 272, 287, 288, 289, 290, 295, 296, 297], "baroclinic_channel": [5, 7, 9, 14, 17, 236, 241, 245, 246, 249, 252, 272, 284, 291, 296, 297], "10km": [5, 17, 239, 272, 284, 291, 296, 297], "1": [5, 7, 9, 13, 14, 16, 17, 18, 37, 69, 129, 130, 131, 132, 133, 134, 136, 154, 156, 170, 197, 211, 219, 220, 221, 228, 234, 235, 239, 240, 242, 243, 244, 246, 247, 249, 251, 253, 266, 269, 272, 273, 275, 278, 279, 281, 284, 285, 287, 288, 289, 290, 291], "decomp": [5, 246, 272, 291, 296], "displai": [5, 8, 279], "path": [5, 6, 9, 11, 14, 17, 37, 39, 40, 48, 49, 54, 56, 58, 60, 63, 66, 93, 111, 112, 117, 118, 120, 133, 138, 236, 246, 249, 251, 252, 253, 259, 265, 270, 272, 273, 274, 275, 276, 277, 278, 279, 291, 297], "directori": [5, 6, 8, 9, 11, 12, 14, 15, 18, 24, 37, 39, 40, 45, 46, 48, 49, 52, 54, 56, 60, 62, 93, 94, 107, 111, 112, 117, 118, 133, 146, 154, 155, 156, 159, 161, 162, 163, 165, 167, 169, 170, 171, 173, 186, 220, 236, 239, 246, 248, 249, 250, 251, 252, 253, 259, 261, 263, 265, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 285, 291, 297], "messag": [5, 8, 133, 249, 269, 279], "task_expr": [5, 63], "flag": [5, 6, 133, 249, 252, 269, 270, 272, 273, 282, 284, 291, 292], "suppli": [5, 6, 7, 17, 128, 133, 249, 253, 272], "substr": [5, 133], "regular": [5, 18, 63, 68, 75, 136, 138, 175, 178, 272, 274, 277, 278, 279, 291], "express": [5, 63], "subset": 5, "search": [5, 63, 275], "given": [5, 7, 8, 13, 14, 16, 17, 19, 23, 24, 51, 58, 69, 79, 86, 90, 91, 108, 113, 115, 118, 123, 136, 138, 139, 142, 145, 146, 165, 231, 239, 240, 244, 249, 251, 269, 271, 272, 273, 284, 285, 289, 290, 291, 295, 296], "pass": [5, 8, 9, 12, 13, 14, 17, 79, 118, 119, 136, 245, 246, 249, 251, 252, 253, 270, 291], "similarli": [5, 8, 236, 249, 251, 253, 278, 291], "result": [5, 13, 17, 58, 70, 79, 133, 136, 154, 162, 167, 170, 173, 224, 239, 240, 249, 250, 252, 253, 258, 263, 270, 272, 273, 284, 285, 290, 295, 296], "descript": [5, 7, 272, 273, 282, 292], "short": [5, 155, 219, 221, 249, 250, 251, 252, 262, 272, 284], "core": [5, 7, 8, 14, 24, 34, 36, 37, 39, 41, 43, 44, 62, 89, 90, 91, 117, 133, 136, 137, 146, 154, 155, 219, 221, 239, 244, 245, 246, 249, 250, 251, 252, 266, 270, 272, 273, 274, 275, 276, 277, 278, 279, 291, 296], "underli": 5, "must": [5, 7, 11, 14, 18, 24, 27, 28, 37, 40, 42, 45, 52, 117, 119, 120, 133, 136, 138, 146, 189, 238, 249, 251, 253, 272, 281, 297], "built": [5, 14, 112, 117, 133, 236, 246, 253, 265, 271, 273, 278, 291], "standalon": [5, 14, 132, 133, 246, 253, 270, 271, 278, 292], "mpa": [5, 9, 11, 12, 13, 14, 16, 17, 18, 24, 30, 37, 39, 66, 84, 96, 103, 113, 115, 117, 127, 128, 129, 130, 131, 132, 133, 134, 137, 146, 149, 152, 186, 194, 208, 227, 236, 237, 239, 240, 242, 243, 244, 246, 249, 252, 253, 256, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 284, 287, 289, 290, 291, 292, 295, 296, 297], "befor": [5, 6, 8, 9, 14, 16, 18, 43, 112, 117, 133, 249, 251, 252, 253, 269, 272, 275, 279, 281, 285, 291], "num": 5, "f": [5, 9, 11, 17, 136, 246, 249, 251, 252, 253, 272, 273, 279, 284, 287, 291], "m": [5, 6, 14, 68, 75, 76, 82, 239, 244, 245, 253, 272, 274, 275, 276, 277, 279, 281, 284, 285, 289, 291], "mach": [5, 9, 37, 133, 271, 274, 275, 276, 277, 278, 279, 291], "w": [5, 6, 253, 270, 272, 291], "p": [5, 6, 253, 272, 273, 291], "suite_nam": [5, 8, 108, 110, 112, 117, 291], "copy_execut": [5, 112, 117, 291], "specifi": [5, 6, 14, 16, 17, 18, 39, 133, 238, 249, 253, 268, 272, 273, 279, 284, 285, 290, 291, 295], "altern": [5, 13, 249, 266, 291], "task_numb": 5, "multipl": [5, 9, 14, 133, 237, 250, 251, 252, 253, 272, 278, 284, 291], "test": [5, 7, 8, 9, 18, 48, 49, 54, 62, 89, 90, 91, 110, 118, 133, 137, 138, 143, 144, 153, 155, 156, 162, 163, 165, 166, 167, 168, 170, 175, 176, 177, 178, 180, 183, 186, 187, 190, 191, 192, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 256, 257, 258, 261, 262, 263, 264, 265, 268, 270, 271, 277, 278, 279, 281, 284, 285, 287, 288, 289, 290, 291, 292, 295, 296], "separ": [5, 7, 9, 14, 16, 17, 138, 249, 250, 270, 272, 285, 291], "space": [5, 6, 7, 9, 13, 133, 242, 243, 249, 253, 272, 275, 278, 291], "requir": [5, 6, 8, 14, 24, 34, 37, 38, 44, 94, 136, 146, 156, 197, 211, 220, 236, 245, 246, 249, 250, 251, 252, 253, 265, 266, 269, 271, 272, 273, 278, 281, 282, 290, 291, 292, 295, 297], "few": [5, 13, 14, 24, 34, 37, 44, 90, 91, 133, 146, 239, 240, 242, 243, 244, 249, 252, 272, 273, 278], "basic": [5, 7, 273, 275, 278, 291], "piec": [5, 245, 246, 272], "abl": [5, 129, 130, 131, 132, 134, 136, 249, 250, 253, 272, 278, 291], "place": [5, 6, 14, 119, 133, 245, 249, 251, 266, 272, 278], "download": [5, 6, 8, 10, 37, 39, 46, 133, 161, 169, 251, 252, 253, 273, 291, 296], "some": [5, 6, 8, 9, 10, 11, 13, 14, 48, 133, 238, 240, 245, 247, 249, 251, 252, 253, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 284, 291, 292, 296, 297], "data": [5, 10, 13, 16, 17, 18, 25, 37, 38, 39, 100, 113, 115, 116, 119, 120, 122, 128, 133, 186, 228, 234, 235, 249, 253, 271, 273, 274, 275, 276, 277, 278, 291, 296, 297], "r": [5, 185, 279, 285], "tell": [5, 6, 133, 253], "re": [5, 6, 9, 251, 252, 253, 270, 272, 273, 278, 279, 285], "leav": [5, 18, 240, 273, 285], "unknown": [5, 133, 252, 278], "component_path": [5, 9, 112, 117, 236, 246, 265, 273, 291], "absolut": [5, 9, 37, 39, 56, 112, 117, 236, 246, 249, 253, 265, 291], "landic": [5, 6, 12, 19, 39, 66, 117, 245, 246, 248, 249, 251, 253, 270, 271, 272, 273, 291, 297], "e3sm_submodul": [5, 236, 246, 253, 265, 266, 272], "mali": [5, 133, 246, 249, 253, 270, 272, 273, 291, 297], "dev": [5, 6, 7, 245, 246, 248, 249, 252, 253, 271, 272, 282, 291, 292], "albani": [5, 129, 131, 132, 133, 246, 273, 274, 275, 276, 279, 291], "depend": [5, 14, 16, 18, 37, 38, 46, 105, 106, 133, 136, 138, 161, 169, 178, 251, 253, 270, 271, 272, 273, 278, 279, 281, 285, 291, 297], "whether": [5, 8, 13, 14, 18, 24, 29, 37, 39, 47, 48, 49, 54, 58, 60, 63, 107, 108, 112, 117, 118, 119, 120, 124, 133, 136, 138, 145, 146, 158, 164, 175, 178, 182, 199, 213, 220, 222, 224, 242, 243, 245, 249, 251, 253, 269, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 287, 288, 289, 290, 291, 295], "omega": [5, 30, 122, 146, 149, 194, 208, 236, 246, 252, 253, 270, 272, 282, 287, 288, 291], "config": [5, 7, 8, 10, 11, 12, 13, 16, 18, 20, 24, 25, 28, 29, 30, 37, 38, 39, 45, 48, 50, 52, 58, 61, 62, 73, 75, 78, 89, 90, 91, 92, 93, 109, 111, 112, 117, 119, 122, 123, 124, 125, 127, 128, 144, 146, 149, 151, 158, 164, 165, 175, 176, 182, 194, 199, 208, 213, 226, 228, 229, 230, 234, 235, 236, 239, 240, 242, 243, 244, 245, 249, 250, 251, 252, 253, 265, 266, 269, 271, 281, 291, 297], "point": [5, 6, 9, 53, 60, 97, 133, 236, 238, 245, 246, 251, 252, 253, 265, 272, 273, 278, 291], "much": [5, 6, 14, 249, 272], "config_fil": [5, 9, 112, 117], "work_dir": [5, 11, 37, 48, 62, 93, 111, 112, 117, 118, 249, 251, 272], "recommend": [5, 7, 11, 18, 133, 249, 250, 252, 253, 272, 278], "itself": [5, 6, 7, 9, 37, 45, 52, 245, 246, 248, 249, 251, 253, 272, 291], "temp": 5, "scratch": [5, 6, 253, 272, 275, 279, 291], "avoid": [5, 249, 272], "confus": [5, 14, 252, 253, 272], "output": [5, 7, 8, 10, 12, 13, 14, 17, 19, 24, 37, 38, 40, 46, 47, 48, 54, 83, 84, 91, 94, 107, 108, 118, 136, 138, 142, 144, 146, 152, 161, 169, 171, 172, 178, 186, 192, 202, 206, 216, 227, 239, 240, 242, 243, 244, 251, 259, 260, 268, 270, 273, 279, 285, 291, 296], "compar": [5, 10, 17, 37, 40, 47, 111, 112, 117, 118, 136, 171, 172, 220, 240, 244, 249, 250, 251, 252, 253, 259, 260, 268, 270, 272, 283, 284, 291, 294, 296], "previou": [5, 172, 249, 253, 260, 272, 283, 291, 296], "same": [5, 7, 9, 14, 17, 37, 38, 39, 47, 118, 133, 136, 140, 141, 179, 239, 244, 245, 247, 249, 250, 251, 252, 253, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 289, 291, 296, 297], "baseline_dir": [5, 37, 111, 112, 117, 249], "mani": [5, 6, 8, 9, 136, 245, 247, 249, 251, 252, 253, 271, 272, 284, 290, 295], "valid": [5, 10, 37, 40, 47, 136, 144, 228, 229, 230, 231, 232, 233, 234, 235, 242, 243, 244, 249, 252, 253, 271, 281, 284], "timer": [5, 17, 37, 249, 250, 252], "both": [5, 6, 7, 8, 13, 14, 29, 133, 136, 151, 158, 164, 239, 245, 246, 248, 249, 253, 271, 272, 273, 283, 285, 287, 288, 289], "custom": [5, 6, 8, 13, 16, 18, 56, 58, 112, 117, 236, 246, 253, 265, 273, 279, 291], "give": [5, 14, 17, 133, 249, 252, 253, 272, 273, 291], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 17, 18, 24, 36, 105, 133, 136, 146, 228, 234, 235, 236, 239, 242, 243, 245, 246, 249, 251, 252, 253, 265, 270, 272, 273, 278, 279, 281, 284, 285, 289, 291, 296], "case": [5, 6, 7, 8, 9, 14, 18, 27, 28, 48, 49, 54, 62, 89, 90, 91, 113, 118, 133, 136, 137, 143, 155, 162, 163, 165, 166, 167, 168, 170, 176, 177, 178, 180, 183, 186, 187, 190, 192, 193, 194, 197, 200, 201, 202, 203, 204, 206, 207, 208, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 239, 240, 242, 243, 244, 245, 246, 247, 249, 251, 253, 256, 258, 261, 262, 264, 270, 271, 272, 278, 279, 281, 284, 285, 287, 288, 289, 290, 291, 295, 296], "pre": [5, 133, 253], "copi": [5, 6, 8, 39, 54, 112, 117, 272, 275, 291], "just": [5, 14, 24, 34, 37, 44, 63, 133, 146, 249, 252, 253, 270, 272, 275, 279], "wish": [5, 7, 14, 49, 249, 253, 272, 291], "again": [5, 14, 132, 136, 236, 249, 251, 253, 269, 291], "later": [5, 8, 17, 24, 34, 37, 44, 56, 133, 146, 249, 272, 273], "anticip": [5, 272], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 17, 38, 40, 43, 106, 119, 133, 236, 238, 245, 249, 250, 251, 253, 265, 266, 269, 270, 272, 273, 279, 285, 289, 290, 291, 295, 297], "delet": [5, 112, 117, 252, 253, 269, 291], "fresh": [5, 6, 251, 272], "sinc": [5, 14, 106, 128, 136, 239, 249, 251, 252, 253, 272, 284, 285, 287, 288, 290, 295], "rerun": [5, 253], "c": [5, 6, 112, 133, 249, 253, 274, 275, 276, 277, 278, 279, 283, 291, 296], "test_suit": [5, 110, 249], "build": [5, 6, 10, 13, 14, 71, 76, 129, 130, 131, 132, 134, 236, 246, 251, 252, 265, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279], "mpas_model": [5, 273], "overrid": [5, 13, 14, 42, 43, 46, 50, 56, 71, 74, 75, 76, 136, 161, 169, 189, 249, 251, 252, 272, 273, 279, 291], "baselin": [5, 6, 8, 10, 37, 40, 47, 111, 112, 117, 118, 136, 144, 220, 239, 242, 243, 244, 249, 250, 252, 268, 270, 272, 283, 291], "comparison": [5, 8, 17, 37, 47, 118, 249, 272, 273], "against": [5, 10, 40, 47, 118, 136, 144, 239, 242, 243, 244, 249, 268, 272, 283], "oppos": [5, 14, 29, 136, 138, 145, 158, 164, 175, 178, 182, 199, 213, 272], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 107], "wherea": [5, 12, 249, 270, 272, 283, 297], "typic": [5, 7, 9, 13, 14, 16, 17, 18, 37, 49, 108, 133, 136, 245, 246, 247, 249, 251, 253, 270, 272, 273, 278, 281, 289, 291, 297], "clone": [5, 6, 133, 236, 247, 253, 265, 272, 291], "pickl": [5, 8, 105, 106, 249, 272, 291], "latter": [5, 48, 133], "conveni": [5, 9, 16, 228, 234, 235, 245, 249, 272, 273, 285, 291, 297], "tab": [5, 291], "explicitli": [5, 7, 136, 239, 242, 243, 249, 253, 272, 273, 291], "select": [5, 8, 120, 249, 253, 272], "edit": [5, 7, 253, 272, 291], "steps_to_run": [5, 48, 108, 249, 251, 272, 273], "full_run": [5, 17, 268, 284, 294], "restart_run": [5, 17, 268, 284, 294], "Or": [5, 249, 273], "accomplish": [5, 249, 252], "thing": [5, 129, 130, 131, 132, 133, 134, 136, 245, 249, 252, 271, 296], "take": [5, 6, 7, 11, 13, 14, 56, 133, 136, 245, 249, 250, 251, 253, 272, 285, 296], "preced": [5, 56, 136], "over": [5, 9, 14, 56, 119, 249, 252, 271, 272, 281, 284, 289, 291], "intern": [5, 11, 24, 249, 253, 269], "shouldn": [5, 133, 220, 272], "special": [5, 270, 290], "databas": [5, 6, 8, 11, 16, 19, 24, 37, 39, 146, 249, 278], "polaris_cach": [5, 8, 19, 249], "structur": [5, 13, 30, 149, 248, 251, 271, 272], "without": [5, 39, 249, 252, 253, 272, 273, 277, 278, 287, 288, 290, 291], "redund": [5, 228, 234, 235, 239, 245, 272], "stamp": 5, "revis": [5, 273], "older": 5, "ones": [5, 228, 234, 235, 252, 272], "version": [5, 6, 15, 32, 56, 93, 118, 133, 236, 239, 245, 246, 247, 249, 251, 252, 253, 265, 271, 272, 273, 278, 279, 282, 284, 285, 291, 292], "updat": [5, 7, 8, 24, 26, 28, 33, 34, 43, 44, 114, 132, 133, 148, 220, 236, 239, 240, 242, 243, 249, 265, 269, 271, 272, 291], "cached_fil": [5, 19, 249], "json": [5, 8, 19, 54, 249, 279], "anvil": [5, 6, 133, 249, 273, 278, 291], "chrysali": [5, 6, 133, 249, 272, 273, 278, 291], "onto": [5, 253], "lcrc": [5, 6, 8, 11, 54, 249, 252, 273, 274, 276, 278, 291], "server": [5, 8, 39, 54, 249, 252, 273, 279], "d": [5, 18, 120, 194, 208, 228, 234, 235, 238, 249, 272, 289], "whose": [5, 45, 52, 249], "ocean_cached_fil": 5, "pr": [5, 6, 291, 296], "look": [5, 6, 7, 11, 17, 251, 252, 272, 273], "someth": [5, 7, 95, 99, 102, 133, 253, 272], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 16, 17, 18, 94, 136, 138, 144, 239, 249, 252, 272], "cellwidthvslatlon": [5, 13], "graph": [5, 24, 31, 33, 43, 84, 146, 239, 242, 243, 249, 272, 273], "info": [5, 12, 14, 24, 31, 84, 133, 146, 249, 272], "initial_st": [5, 17, 18, 136, 138, 239, 249, 272], "date_str": [5, 54], "let": [5, 249, 253, 270, 272, 273, 279], "string": [5, 9, 39, 98, 104, 133, 136, 151, 253], "choos": [5, 249, 252, 253, 272, 274, 275, 276, 277, 279, 297], "todai": [5, 54], "dry_run": [5, 54], "saniti": [5, 272], "check": [5, 6, 17, 118, 249, 253, 272, 273, 275, 279, 291, 296], "print": [5, 12, 17, 63, 118, 124, 249, 252, 296], "stdout": [5, 12, 37, 48, 249, 251], "translat": [5, 30, 136, 149], "convert": [5, 9, 13, 14, 136, 151, 249, 272], "namelist": [5, 7, 8, 10, 24, 25, 26, 29, 30, 32, 33, 36, 46, 112, 117, 127, 128, 146, 149, 150, 158, 161, 164, 169, 236, 239, 242, 243, 245, 246, 249, 251, 252, 265, 266, 268, 271, 272, 273, 289], "stream": [5, 7, 8, 10, 24, 27, 29, 32, 46, 122, 127, 128, 150, 158, 161, 164, 169, 236, 238, 239, 240, 242, 243, 244, 245, 246, 249, 251, 252, 265, 268, 273, 290, 295], "yaml": [5, 9, 10, 24, 25, 28, 29, 30, 133, 144, 146, 149, 150, 158, 164, 239, 240, 242, 243, 244, 245, 246, 249, 251, 271, 272, 275, 279], "e": [5, 6, 7, 9, 11, 14, 30, 37, 38, 50, 66, 122, 133, 136, 145, 149, 236, 245, 247, 249, 250, 252, 253, 265, 269, 270, 271, 272, 273, 279, 281, 284, 285, 287, 288, 289, 290, 291, 295, 297], "g": [5, 6, 7, 9, 11, 14, 30, 37, 38, 50, 66, 122, 133, 136, 145, 149, 236, 245, 247, 249, 250, 252, 253, 265, 269, 270, 271, 272, 273, 281, 284, 285, 287, 288, 289, 290, 291, 295], "don": [5, 6, 7, 14, 133, 136, 138, 142, 249, 251, 252, 253, 272, 277, 291, 297], "format": [5, 7, 11, 13, 14, 122, 128, 151, 250, 251, 253, 272, 273, 275], "note": [5, 7, 16, 17, 272, 279], "keyword": [5, 7, 14, 17, 18, 240, 249, 285], "top": [5, 18, 228, 229, 230, 231, 232, 233, 234, 235, 238, 247, 272, 281], "ignor": [5, 98, 104], "get": [5, 6, 7, 9, 11, 12, 14, 16, 24, 25, 26, 27, 28, 37, 48, 49, 55, 61, 69, 89, 100, 107, 133, 136, 140, 141, 146, 179, 245, 248, 249, 251, 252, 253, 270, 273, 281, 291], "pars": [5, 9, 14, 25, 26, 27, 28, 86, 113, 115], "valu": [5, 7, 9, 14, 17, 18, 25, 30, 118, 119, 120, 124, 138, 144, 149, 165, 185, 239, 246, 249, 251, 252, 271, 272, 273, 281, 284, 285, 289], "doesn": [5, 6, 128, 133, 249, 251, 272, 273, 278, 291], "matter": [5, 272], "usabl": 5, "try": [6, 14, 60, 133, 252, 253, 269, 272, 273, 275, 279, 291], "stai": [6, 253], "sync": 6, "mpi": [6, 14, 16, 94, 129, 132, 133, 146, 148, 150, 239, 242, 243, 249, 253, 269, 271, 272, 274, 275, 276, 277, 279, 291], "librari": [6, 14, 129, 133, 253, 272, 274, 275, 276, 277, 278, 279, 291], "netcdf": [6, 133, 138, 142, 152, 244, 273, 274, 275, 276, 277, 278, 279], "fortran": [6, 133, 274, 275, 276, 277, 278, 279], "pnetcdf": [6, 133, 274, 275, 276, 277, 278, 279], "mkl": [6, 133], "linear": [6, 18, 119, 120, 240, 242, 272, 284, 285, 287], "algebra": 6, "lib": [6, 133], "esmf": [6, 253, 291], "scorpio": [6, 253, 278, 291], "forg": [6, 133, 271, 291], "python": [6, 7, 8, 9, 25, 43, 50, 136, 245, 247, 249, 251, 252, 253, 270, 271, 272, 273, 278, 279, 291], "aren": [6, 11, 37, 38, 133, 249, 252, 253, 272, 296], "brief": [6, 7, 272], "tour": 6, "login": [6, 133, 253, 275, 279], "node": [6, 14, 24, 36, 37, 41, 44, 61, 89, 90, 91, 133, 146, 249, 250, 252, 253, 272, 273, 274, 275, 276, 277, 278, 279, 291], "bootstrap": 6, "rest": [6, 152, 233, 281, 285], "u": [6, 249, 272, 278, 279, 287, 288], "unifi": [6, 133, 253, 279], "diagnost": [6, 273, 274, 275, 277, 278, 279, 291], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 136, 249, 251, 252, 253, 272], "cach": [6, 19, 24, 37, 39, 111, 112, 146, 271, 273, 278, 283, 291, 296], "own": [6, 7, 8, 9, 11, 12, 18, 37, 133, 136, 249, 251, 252, 253, 270, 272, 273, 285, 291, 297], "config_machin": 6, "xml": [6, 14, 113, 115, 116, 128, 265], "ey": 6, "master": [6, 236, 265, 292], "happen": [6, 9, 12, 16, 106, 249, 272, 285], "me": [6, 272], "dev_quick_start": 6, "fork": [6, 272], "haven": [6, 272], "mkdir": [6, 253], "involv": [6, 14, 249, 270, 272], "coupl": [6, 269, 271], "alpha": [6, 129, 130, 131, 132, 133, 134, 272], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 17, 18, 37, 136, 245, 247, 249, 250, 251, 252, 253, 272, 273, 296, 297], "stand": 6, "omit": [6, 249, 291], "suffix": [6, 39, 112, 249], "onc": [6, 14, 40, 239, 253, 272, 273, 285, 291], "releas": [6, 133, 252, 271, 278, 282, 291], "spack_for_mache_1": 6, "12": [6, 13, 69, 268, 272, 275, 294], "worktre": [6, 271, 272], "my": [6, 133, 275], "fetch": [6, 253, 272], "out": [6, 8, 9, 13, 56, 88, 92, 120, 133, 144, 247, 249, 252, 253, 273, 281, 291], "checkout": [6, 253, 272], "mambaforg": [6, 253, 272, 278, 291], "manual": [6, 14, 48, 49, 249, 251, 297], "linux": [6, 133, 253, 278], "x86_64": [6, 133], "our": [6, 133, 252, 272, 291], "found": [6, 9, 14, 123, 133, 252, 253, 271, 272, 274, 275, 276, 277, 278, 279], "exist": [6, 7, 9, 30, 37, 40, 60, 113, 115, 117, 133, 149, 239, 249, 251, 252, 253, 269, 272, 278, 296], "miniconda3": [6, 253], "alwai": [6, 7, 9, 12, 56, 133, 136, 141, 179, 236, 246, 249, 251, 252, 253, 265, 270, 272, 273], "pleas": [6, 133, 246, 252, 253, 272, 291], "start": [6, 7, 8, 14, 114, 133, 238, 239, 245, 250, 251, 252, 271, 275, 278, 279, 282, 292, 294], "definit": [6, 14, 272], "defin": [6, 7, 8, 9, 13, 14, 15, 18, 37, 48, 74, 98, 104, 111, 112, 117, 133, 136, 177, 191, 205, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 257, 265, 266, 268, 270, 271, 273, 278, 281, 284, 285, 289, 296, 297], "export": [6, 269], "conda_bas": 6, "home": [6, 17, 133, 253, 272, 273, 275, 278, 279], "readi": [6, 272, 279], "configure_polaris_env": [6, 133, 253, 269, 272], "py": [6, 12, 14, 17, 66, 133, 245, 246, 252, 253, 270, 272, 273], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 133, 253], "tmpdir": [6, 133], "group": [6, 7, 245, 271, 274, 276, 278, 279, 290, 291, 297], "spack_temp": 6, "spack_test": 6, "intel": [6, 133, 278], "gnu": [6, 133, 253, 277, 278, 291], "openmpi": [6, 129, 133, 253, 271, 274, 276, 277, 291], "impi": [6, 129, 133, 274, 277], "recreat": [6, 251, 253, 269], "request": [6, 7, 14, 24, 31, 33, 133, 144, 146, 229, 230, 249, 251, 252, 253, 269, 272, 273, 285], "twice": [6, 272], "deploy": [6, 253], "prebootstrap": 6, "load": [6, 18, 106, 130, 133, 134, 249, 253, 271, 272, 273, 274, 275, 276, 277, 278, 279], "activ": [6, 133, 278, 279, 291], "differ": [6, 14, 16, 17, 56, 71, 76, 118, 133, 136, 153, 156, 165, 236, 239, 245, 246, 247, 249, 250, 251, 252, 265, 270, 272, 273, 275, 279, 284, 285, 287, 288, 290, 295], "On": [6, 7, 13, 133, 253, 278], "tmp": [6, 133], "safe": [6, 14, 249, 253, 284], "strictli": [6, 13, 252, 272], "necessari": [6, 7, 13, 133, 272], "good": [6, 12, 37, 249, 253, 272], "idea": [6, 12, 272], "Be": [6, 279], "awar": [6, 7, 133, 272, 278], "with_petsc": [6, 253], "wa": [6, 8, 47, 58, 118, 133, 249, 251, 252, 253, 269, 270, 272, 273, 281, 291], "limit": [6, 250, 253, 284], "amount": [6, 24, 34, 37, 44, 146, 249, 280, 289], "team": [6, 133, 271], "petsc_support": 6, "txt": [6, 8, 117, 250, 269], "with_albani": [6, 253], "albany_support": 6, "encount": [6, 250, 269], "error": [6, 8, 37, 48, 133, 136, 139, 140, 142, 240, 242, 243, 249, 251, 253, 271, 272, 285, 287, 288], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 17, 29, 37, 48, 57, 158, 164, 182, 199, 213, 249, 251, 252, 253, 272, 273, 291, 296, 297], "attempt": [6, 133, 271, 278], "sh": [6, 129, 130, 131, 132, 133, 134, 253, 269, 272, 274, 275, 276, 277, 279, 291], "build_": 6, "command": [6, 10, 15, 35, 37, 43, 90, 91, 93, 101, 133, 249, 252, 253, 270, 271, 272, 275, 278, 279, 291], "pscratch": 6, "suggest": [6, 133, 269], "correctli": 6, "seem": [6, 14, 272, 275, 279], "switch": [6, 272, 273], "v0": 6, "19": 6, "submodul": [6, 236, 246, 253, 265, 272, 291], "serv": [6, 111, 112, 117, 136, 245, 272], "kind": [6, 272], "whichev": [6, 236, 265, 281], "load_dev_polaris_0": [6, 129, 130, 131, 132, 133, 134, 272], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 236, 252, 253, 265, 272, 291], "pio": [6, 24, 33, 36, 146, 239, 242, 243], "openmp": [6, 24, 34, 37, 44, 91, 129, 131, 132, 146, 156, 197, 211, 220, 249, 272, 274, 275, 276, 277, 279], "ifort": [6, 129, 131, 133, 272, 274, 276], "ac": [6, 272], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 272, 278, 291], "job_script": [6, 272, 291], "bash": [6, 253, 269, 272, 291], "termin": [6, 8, 133, 249, 253, 272], "isn": [6, 9, 240, 249, 252, 272], "ll": [6, 18, 133, 240, 252, 272, 279, 285], "warn": [6, 287, 288], "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 129, 131, 132, 133, 253, 274, 276], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 245, 249, 272, 281], "util": [6, 252, 288], "matrix": 6, "sever": [6, 12, 133, 136, 245, 249, 251, 252, 253, 271, 272, 290, 291, 296], "automat": [6, 7, 9, 12, 14, 18, 133, 136, 249, 252, 253, 272, 273, 274, 276, 277, 278, 279, 291], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 291], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 132, 133, 136, 249, 252, 272], "integr": [6, 136, 165, 239, 252, 272, 284, 285, 290, 295], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 275, 291], "245": 6, "246": 6, "non": [6, 14, 17, 238, 249, 272, 291], "care": [6, 11, 13, 136, 245, 249, 253, 272], "temporari": [6, 133], "begin": [6, 7, 17, 239, 249, 253, 266, 271, 272, 278, 284, 285, 289], "anymor": 6, "best": [6, 16, 133, 249, 253], "hard": [6, 249, 272, 284, 289], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 37, 48, 56, 62, 119, 120, 144, 249, 251, 272, 294], "myst": [7, 272], "tip": [7, 253], "easi": [7, 9, 39, 252, 272], "pull": [7, 133, 252, 253, 272, 273], "guid": [7, 136, 239, 240, 242, 243, 244, 250, 252, 272, 275, 278, 282, 292], "baroclin": [7, 9, 14, 153, 154, 155, 156, 159, 162, 165, 167, 170, 171, 173, 220, 239, 246, 249, 272, 282, 286, 297], "channel": [7, 9, 14, 153, 154, 155, 156, 159, 162, 165, 167, 170, 171, 173, 220, 239, 246, 249, 269, 272, 282, 286, 297], "label": [7, 119, 278, 291], "prepend": 7, "categori": [7, 246, 247, 248, 271, 297], "uniqu": [7, 14, 133, 251, 272], "And": [7, 14, 253, 272], "becom": [7, 249, 251, 272], "who": [7, 253, 272, 273, 279], "citat": 7, "basi": [7, 272], "overview": [7, 271, 275, 279], "common": [7, 12, 14, 43, 48, 133, 239, 240, 242, 243, 244, 245, 249, 250, 251, 252, 269, 270, 272, 273, 278, 279, 290, 291, 295, 296, 297], "characterist": [7, 290, 295], "comment": [7, 250, 273], "appli": [7, 13, 14, 63, 238, 245, 272, 284, 289, 290, 295], "vertic": [7, 18, 141, 179, 219, 238, 239, 240, 242, 243, 244, 249, 273, 280, 282], "grid": [7, 13, 16, 68, 75, 79, 82, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 136, 186, 226, 227, 228, 229, 230, 231, 234, 235, 239, 240, 242, 243, 244, 249, 266, 272, 273], "forc": [7, 244, 268, 272, 297], "specif": [7, 9, 14, 50, 133, 136, 236, 245, 246, 247, 249, 265, 266, 271, 272, 273, 275, 278, 284, 290, 291, 295, 296], "public": [7, 11, 249, 272, 273], "api": [7, 12, 271, 272], "underscor": [7, 272], "md": [7, 272], "eval": 7, "rst": [7, 14, 272], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 246, 252], "compute_cell_count": [7, 136, 239, 242, 243, 272], "dynamic_model_config": [7, 14, 239, 242, 243, 272], "ot": [7, 272], "numpydoc": [7, 272], "text": [7, 8, 284, 285, 289], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 136, 228, 230, 231, 232, 233, 234, 235, 236, 242, 243, 249, 272, 273, 275, 279, 287, 288], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 236, 273, 287, 288], "overli": [7, 272], "ic": [7, 136, 236, 251, 252, 253, 266, 268, 271, 272, 273, 275, 281, 294, 297], "shelf": [7, 136, 245, 252, 272, 273, 281], "draft": [7, 281], "paramet": [7, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 44, 45, 48, 49, 51, 52, 54, 56, 58, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 79, 80, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 123, 124, 125, 127, 128, 136, 138, 139, 140, 141, 142, 144, 145, 146, 149, 151, 152, 154, 155, 156, 158, 159, 162, 163, 164, 165, 167, 170, 171, 173, 175, 178, 179, 180, 182, 183, 185, 186, 188, 190, 192, 194, 195, 196, 197, 199, 200, 202, 204, 206, 208, 209, 210, 211, 213, 214, 216, 220, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 242, 243, 245, 249, 251, 257, 258, 259, 261, 262, 263, 284, 285, 287, 288, 289], "xarrai": [7, 16, 18, 120, 141, 179, 228, 229, 230, 231, 232, 233, 234, 235, 249, 272], "dataarrai": [7, 141, 179, 194, 195, 196, 208, 209, 210, 229, 230, 231, 232, 233], "sea": [7, 136, 194, 196, 208, 210, 230, 231, 232, 233, 236, 266, 268, 271, 272, 273, 281, 287, 288, 294, 297], "surfac": [7, 136, 194, 196, 208, 210, 230, 231, 232, 233, 236, 238, 244, 268, 272, 273, 281, 284, 287, 288, 289], "height": [7, 136, 194, 196, 208, 210, 230, 231, 232, 233, 236, 272, 273, 281, 287, 288], "mask": [7, 228, 231, 234, 235, 249, 272, 273, 281], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 25, 67, 69, 70, 74, 79, 99, 118, 120, 136, 138, 139, 140, 141, 144, 145, 151, 154, 155, 156, 159, 162, 165, 167, 170, 175, 178, 179, 180, 185, 192, 194, 195, 196, 197, 200, 202, 204, 206, 208, 209, 210, 211, 214, 216, 220, 249, 251, 272], "densiti": [7, 13, 136, 272], "seawat": 7, "displac": 7, "land": [7, 136, 236, 251, 271, 272, 273, 281], "landicedraft": 7, "equal": [7, 244, 249, 252, 289], "entri": [7, 53, 87, 112], "line": [7, 10, 35, 37, 90, 91, 101, 133, 249, 250, 252, 253, 271, 291], "type": [7, 14, 16, 17, 18, 25, 96, 103, 128, 133, 136, 139, 185, 219, 221, 240, 245, 249, 251, 252, 253, 265, 269, 270, 272, 273, 284, 285, 287, 288, 289, 290, 296], "side": 7, "colon": 7, "doubl": [7, 14, 136, 249, 250, 272], "back": [7, 272, 275, 291], "quot": 7, "interfer": 7, "arg": [7, 12, 37, 90, 91, 249], "next": [7, 133, 239, 243, 272, 281, 291], "indent": [7, 249], "obviou": [7, 14, 272], "none": [7, 9, 14, 17, 24, 27, 28, 34, 37, 38, 39, 40, 44, 45, 48, 49, 52, 54, 56, 58, 62, 63, 65, 67, 74, 80, 84, 93, 94, 95, 98, 99, 102, 104, 108, 112, 113, 117, 118, 119, 120, 123, 127, 136, 138, 139, 140, 141, 142, 144, 146, 147, 151, 156, 157, 179, 181, 197, 198, 208, 211, 212, 220, 249, 251, 261, 272, 281, 284, 285, 287, 288, 289, 290, 294], "els": [7, 8, 133, 249, 251, 272], "further": [7, 245, 251, 279, 290, 295], "rais": [7, 9, 17, 37, 40, 58, 60, 136, 249, 252, 272], "list_cas": 8, "list_machin": [8, 252], "list_suit": 8, "anywher": [8, 12, 133, 253], "object": [8, 12, 16, 23, 26, 27, 28, 49, 51, 86, 105, 106, 109, 113, 122, 123, 127, 128, 144, 194, 208, 246, 251, 252, 272], "contrast": 8, "read": [8, 19, 26, 27, 28, 37, 38, 48, 59, 85, 86, 122, 238, 249, 251, 272], "properti": [8, 238, 249, 278, 285], "setup_suit": 8, "write": [8, 12, 13, 15, 18, 105, 122, 227, 249, 251, 253, 268, 272], "proven": [8, 10, 56, 271, 273], "save": [8, 18, 58, 82, 133, 239, 240, 245, 249, 251, 272, 278, 283, 284], "target": [8, 11, 16, 17, 24, 39, 60, 62, 94, 133, 136, 146, 239, 242, 243, 249, 251, 272, 285], "minimum": [8, 62, 120, 136, 140, 146, 239, 242, 243, 249, 272, 273, 281, 284, 285, 287, 288, 289, 290, 295], "determin": [8, 9, 13, 14, 18, 39, 43, 128, 133, 136, 150, 239, 240, 242, 243, 249, 272, 281, 284, 285, 287, 288, 290, 291, 295], "maximum": [8, 17, 118, 120, 185, 272, 273, 281], "product": 8, "ntask": [8, 9, 14, 16, 24, 34, 37, 41, 44, 90, 91, 94, 136, 146, 156, 197, 211, 220, 249, 251, 272], "cpus_per_task": [8, 14, 37, 41, 44, 90, 91, 249], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 272, 281, 284, 285, 287, 288, 289, 290], "min_task": [8, 9, 14, 16, 24, 34, 37, 44, 90, 91, 94, 136, 146, 156, 197, 211, 220, 249, 272], "min_cpus_per_task": [8, 14, 37, 44, 90, 91, 249], "fewest": 8, "least": [8, 13, 246, 253, 284], "fail": [8, 14, 17, 24, 34, 37, 44, 58, 133, 136, 146, 156, 197, 211, 220, 249, 271, 272, 273, 285, 287, 288], "run_task": [8, 249, 251], "run_single_step": 8, "oper": [8, 46, 133, 161, 169, 249, 251, 296], "log": [8, 10, 18, 37, 48, 91, 118, 119, 120, 249, 251, 253, 271, 291], "figur": [8, 18, 244, 245, 247, 249, 273], "cpu": [8, 133, 249, 272, 291], "method": [8, 9, 13, 14, 16, 17, 19, 24, 29, 30, 37, 38, 42, 43, 48, 49, 50, 56, 57, 66, 67, 71, 74, 75, 76, 80, 81, 94, 100, 122, 136, 137, 138, 140, 141, 144, 146, 149, 154, 155, 156, 158, 159, 162, 163, 164, 165, 167, 170, 171, 173, 175, 178, 179, 180, 182, 183, 186, 188, 189, 190, 192, 194, 197, 199, 200, 202, 204, 205, 206, 208, 211, 213, 214, 216, 219, 220, 221, 222, 224, 240, 242, 243, 246, 249, 251, 252, 256, 258, 259, 261, 262, 263, 272, 285, 290, 295], "retriev": [8, 269], "store": [8, 50, 133, 136, 242, 243, 249, 272, 291], "case_output": [8, 12], "individu": [8, 9, 18, 246, 251, 252, 272, 278, 279, 284, 291, 297], "overal": 8, "whole": [8, 48, 152, 245, 251, 252, 272, 291], "window": 8, "update_cach": 8, "_cached_fil": [8, 249], "origin": [8, 54, 253, 272, 291], "enabl": [8, 18, 244, 249, 269, 273, 279, 287, 288], "consum": [8, 249, 251, 272, 296], "faster": [8, 253], "parser": [9, 45, 52, 56, 165, 175], "mpas_tool": [9, 12, 13, 79, 239, 242, 243, 244, 249, 251, 272], "mpasconfigpars": [9, 249, 251], "polarisconfigpars": [9, 20, 37, 45, 48, 52, 58, 61, 62, 89, 92, 93, 109, 119, 136, 165, 175, 194, 208, 226, 228, 229, 230, 234, 235, 272], "certain": [9, 17, 56, 133, 249, 253, 273, 290, 295], "filepath": [9, 45, 52, 56, 136], "overridden": [9, 30, 57, 136, 149, 272], "algorithm": [9, 14, 136, 220, 239, 242, 243, 249, 272], "featur": [9, 14, 252, 253, 270, 272, 273, 284, 289], "accommod": [9, 24, 34, 37, 44, 90, 91, 146], "add_from_packag": [9, 136, 249, 251, 252, 272], "content": [9, 14, 112, 113, 115, 117, 128, 136, 245, 247, 249, 252, 268, 272, 291, 294], "inertial_gravity_wav": [9, 236, 241, 246, 251, 287, 296], "inertialgravitywav": [9, 242, 251], "import": [9, 11, 12, 13, 16, 17, 18, 136, 245, 246, 249, 251, 252, 253, 270, 272], "__init__": [9, 16, 17, 19, 24, 37, 48, 56, 66, 67, 74, 80, 94, 122, 136, 137, 138, 144, 146, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 175, 178, 180, 183, 186, 188, 190, 192, 194, 197, 200, 202, 204, 206, 208, 211, 214, 216, 219, 220, 221, 222, 224, 245, 246, 249, 251, 252, 256, 258, 259, 261, 262, 263, 270, 272], "super": [9, 14, 16, 17, 136, 246, 249, 251, 252, 272], "cfg": [9, 50, 136, 246, 251, 252, 272, 273, 291], "except": [9, 37, 40, 58, 249, 252, 272], "behavior": [9, 14, 108, 249, 250, 253, 272], "noth": [9, 133, 269, 285], "particular": [9, 133, 245, 253, 271, 275, 278, 291], "fine": [9, 251, 272, 289], "_get_basic_config": 9, "larg": [9, 249, 251, 272, 274], "those": [9, 14, 48, 118, 133, 136, 239, 251, 252, 253, 271, 272, 285, 290, 295, 296], "configpars": [9, 90, 91], "getinteg": 9, "getfloat": [9, 12, 14, 16, 136, 249, 272], "getboolean": [9, 249, 272], "implement": [9, 246, 249, 252, 284, 285, 287, 288], "getlist": [9, 251, 272], "comma": [9, 285], "integ": [9, 13], "boolean": [9, 120, 231], "etc": [9, 14, 114, 117, 246, 249, 284], "getexpress": 9, "tupl": 9, "rang": [9, 120, 272, 285], "numpi": [9, 13, 68, 75, 76, 82, 119, 136, 152, 226, 227, 249, 272], "linspac": [9, 18, 240, 285], "arang": 9, "arrai": [9, 68, 75, 76, 82, 119, 136, 226, 227, 229, 230, 231, 232, 272], "sens": [9, 271, 272], "set_shared_config": [9, 251], "intuit": 9, "resolution_to_subdir": [9, 246], "rpe": [9, 173, 246, 252, 272, 291], "resdir": [9, 246], "config_filenam": [9, 37, 48, 109, 249, 251], "indir": [9, 24, 37, 48, 94, 146, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 220, 222, 224, 246, 249, 259, 261, 263], "add_task": [9, 245, 246], "most": [9, 12, 43, 133, 236, 245, 246, 249, 252, 253, 265, 272, 273, 278, 279, 281, 282, 292, 297], "construct": [9, 14, 137, 226, 228, 229, 230, 234, 235, 238, 244, 246, 251, 256, 272, 284], "bring": [9, 136, 272], "add_step": [9, 251, 272], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 156, 167, 239, 249, 272], "baroclinic_channel_rp": 9, "viscos": [9, 14, 156, 165, 167, 239, 249, 252, 272, 284], "dtype": [9, 251, 272], "nu_": 9, "openmp_thread": [9, 14, 24, 34, 37, 44, 91, 146, 156, 197, 211, 220, 249, 251, 272], "add_yaml_fil": [9, 14, 24, 136, 249, 251, 272], "One": [9, 13, 272, 291, 296], "advantag": [9, 14, 133, 251, 252, 272, 278], "track": [9, 24, 249, 251, 253], "associ": [9, 13, 14, 18, 136, 228, 234, 235, 239, 249, 251, 253, 270], "while": [10, 16, 18, 238, 239, 249, 269, 272], "meant": [10, 252, 273], "simplifi": 10, "verifi": [10, 250, 273], "io": [10, 249, 251, 252, 271, 272, 273, 282, 292], "lot": [11, 136, 249, 252, 272], "o": [11, 12, 113, 115, 128, 133, 252, 253, 272, 273, 291], "handl": [11, 12, 253, 272, 278], "lower": [11, 251, 272, 284], "directli": [11, 13, 14, 16, 37, 247, 249, 252, 270, 271, 272, 275], "readm": [11, 251], "importlib": 11, "resourc": [11, 14, 34, 41, 44, 59, 89, 90, 91, 147, 157, 181, 198, 212, 220, 239, 242, 243, 249, 251, 272], "global_ocean": [11, 14, 249, 251, 252, 253, 273, 291], "files_for_e3sm": [11, 249, 251, 273], "str": [11, 14, 19, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 45, 48, 49, 52, 54, 56, 58, 60, 61, 62, 63, 67, 74, 80, 84, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 122, 123, 125, 127, 128, 136, 138, 139, 140, 141, 142, 144, 145, 146, 151, 152, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 178, 179, 180, 183, 186, 188, 192, 197, 200, 202, 206, 211, 214, 216, 220, 222, 224, 227, 249, 251, 259, 261, 263, 272], "did": [11, 270, 272], "add_input_fil": [11, 16, 17, 38, 249, 251, 272], "collect": [11, 97, 137, 246, 248, 256, 270, 272], "whenev": [11, 249, 272], "flexibl": [11, 136, 249, 251, 253, 272], "No": [11, 271, 287, 288], "step_dir": 11, "database_root": [11, 133, 249, 273, 274, 275, 276, 277, 278, 279, 291], "download_path": 11, "join": [11, 272], "bathymetry_databas": [11, 249, 273], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 231, 245, 249, 272, 281, 284, 285, 287, 288, 289, 290, 297], "url": [11, 39, 58, 249, 269, 273], "web": [11, 249, 273], "anl": [11, 249, 273], "gov": [11, 249, 269, 273, 275, 279], "mpas_standalonedata": [11, 133, 273, 278], "dest_path": [11, 58], "remot": [11, 39, 253, 271], "bathymetri": [11, 249, 273], "strategi": 12, "stderr": [12, 37, 48, 249, 251], "loggingcontext": 12, "check_cal": [12, 249], "won": [12, 252, 272, 273], "logger": [12, 17, 37, 48, 66, 91, 118, 249, 251, 272], "full": [12, 37, 90, 108, 229, 230, 239, 249, 251, 253, 268, 271, 272, 278, 281, 283, 284, 285, 287, 288, 289, 290, 291], "although": [12, 136], "captur": 12, "explicit": [12, 252], "go": [12, 45, 52, 222, 224, 245, 249, 251, 252, 253, 272, 279], "subprocess": [12, 37, 90, 91, 107, 249, 252, 269], "produc": [12, 14, 16, 18, 37, 38, 40, 54, 136, 142, 154, 162, 170, 239, 240, 242, 243, 244, 249, 252, 253, 258, 268, 272, 287, 288, 291, 294], "otherwis": [12, 133, 249, 251, 272, 274, 275, 276, 277, 278, 279, 284], "intent": 12, "desir": [12, 13, 14, 17, 18, 118, 136, 249, 250, 251, 272, 273, 291], "trick": [12, 249], "direct": [12, 13, 14, 79, 194, 208, 239, 242, 243, 272, 279, 284, 287, 288], "snippet": [12, 272], "dome": [12, 66, 245, 249, 251, 291, 297], "setup_mesh": [12, 249], "setupmesh": [12, 249, 251], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 249], "landice_grid": [12, 249, 272], "l": [12, 118, 272, 279], "quasiuniformsphericalmeshstep": [13, 136, 251], "icosahedralmeshstep": [13, 136, 251], "jigsaw": [13, 67, 71, 73, 74, 76, 78, 80, 136, 138, 175, 178, 249], "complex": [13, 75, 251, 252, 272], "build_cell_width_lat_lon": [13, 74], "opt": [13, 80], "make_jigsaw_mesh": [13, 74], "icosahedr": [13, 67, 69, 138, 145, 175, 178, 240, 251, 285], "significantli": [13, 281], "smooth": 13, "cell": [13, 14, 18, 67, 68, 69, 70, 74, 75, 76, 79, 82, 96, 103, 136, 146, 147, 157, 181, 194, 196, 198, 208, 210, 212, 228, 229, 230, 231, 234, 235, 239, 242, 243, 245, 266, 281, 284, 285, 287, 288, 289, 290, 294], "quasi": [13, 74, 240, 251, 273, 285, 290, 295], "hand": [13, 99, 252], "restrict": [13, 272, 290], "subdivis": [13, 67, 68, 69, 70, 71], "icosahedron": [13, 68, 69, 70, 71], "tabl": [13, 253, 278, 291], "approxim": [13, 67, 69, 70, 74, 136, 147, 157, 181, 198, 212, 239, 242, 243, 253, 272], "width": [13, 67, 68, 69, 74, 75, 76, 82, 272, 284], "km": [13, 14, 67, 68, 69, 70, 74, 75, 76, 79, 82, 136, 144, 145, 154, 155, 156, 159, 162, 163, 165, 167, 170, 180, 197, 200, 204, 211, 214, 239, 240, 242, 243, 249, 272, 273, 284, 285, 287, 288, 289, 290, 295, 297], "5": [13, 14, 69, 133, 136, 165, 239, 240, 249, 250, 252, 269, 272, 273, 284, 285, 290, 291, 295], "240": [13, 69, 136, 240, 273, 285], "6": [13, 69, 249, 272, 282, 284, 289, 291, 292], "120": [13, 69, 136, 250, 285], "7": [13, 69, 133, 272, 279, 285, 291], "60": [13, 69, 136, 240, 281, 285], "8": [13, 69, 133, 239, 253, 272, 273, 284, 285, 287, 288, 291], "30": [13, 14, 69, 136, 245, 272, 279, 284, 289, 290, 295], "9": [13, 18, 69, 133, 240, 272, 285, 291], "15": [13, 14, 69, 239, 272, 284, 285, 289, 290, 291, 295], "11": [13, 69, 133, 272, 291], "3": [13, 69, 133, 136, 239, 249, 250, 253, 269, 272, 273, 278, 279, 281, 284, 285, 287, 288, 290, 291], "13": [13, 69, 272, 284], "94": [13, 69], "spherical_mesh": [13, 75], "cell_width": [13, 67, 68, 69, 70, 74, 75, 76, 82], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 82, 119, 120, 136, 138, 142, 167, 173, 186, 224, 239, 240, 242, 243, 263, 285, 287, 288, 294, 297], "plot_cell_width": 13, "cell_width_filenam": [13, 82], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": 13, "lat": [13, 16, 68, 74, 75, 76, 82, 95, 97, 99, 102, 119, 186, 240, 273, 285], "lon": [13, 16, 68, 74, 75, 76, 82, 95, 97, 99, 102, 119, 186, 240, 273, 285], "sphere": [13, 240, 285], "vtk_lat_lon": 13, "far": [13, 133, 228, 234, 235, 252, 272], "But": [13, 133, 245, 249, 252, 253, 272, 273, 278], "hexagon": [13, 79, 272, 287, 288], "planar_hex": [13, 79, 239, 242, 243, 244, 249, 272], "make_planar_hex_mesh": [13, 79, 239, 242, 243, 244, 249, 272], "x": [13, 18, 68, 75, 76, 79, 82, 98, 104, 120, 152, 194, 208, 249, 272, 284, 287, 288, 289], "y": [13, 14, 18, 79, 98, 104, 120, 194, 208, 239, 242, 243, 249, 272, 279, 284, 287, 288], "nx": [13, 79, 245, 249, 272, 289], "ny": [13, 79, 245, 249, 272, 289], "dc": [13, 245, 249, 272], "distanc": [13, 79, 185, 272, 284], "adjac": [13, 281], "center": [13, 18, 79, 185, 194, 208, 245, 272, 281, 284], "admittedli": 13, "oddli": 13, "period": [13, 238, 239, 242, 243, 249, 272, 284, 285, 287, 288], "nonperiodic_x": [13, 249, 272], "nonperiodic_i": [13, 249, 272], "consider": [13, 228, 234, 235, 238, 266], "compute_planar_hex_nx_ni": [13, 249, 272], "lx": [13, 79, 249, 272, 284, 287, 288, 289], "ly": [13, 79, 249, 272, 284, 289], "explan": 13, "subtleti": 13, "account": [13, 79, 253, 272, 274, 275, 277, 278, 279, 291], "behav": 13, "stagger": [13, 79], "physic": [13, 79, 262, 268, 272], "np": [13, 18, 185, 240, 249, 272, 285], "sqrt": [13, 287], "domain": [13, 24, 31, 79, 120, 136, 146, 152, 238, 245, 266, 272, 284, 285, 287, 288, 289, 290, 295, 297], "extra": [13, 253], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 249, 272], "max": [13, 136, 249, 272, 284, 285], "int": [13, 14, 24, 25, 34, 37, 44, 61, 62, 63, 67, 68, 69, 70, 71, 79, 90, 91, 94, 120, 138, 139, 141, 142, 146, 147, 156, 157, 179, 181, 197, 198, 211, 212, 220, 249, 272, 289], "ds_mesh": [13, 18, 120, 249, 272], "creation": [13, 249, 273], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 24, 34, 37, 44, 90, 91, 146, 245, 249, 252, 272], "distant": 13, "descend": [14, 16, 136, 240, 245, 246, 249, 251, 252, 272], "modelstep": [14, 136, 249, 251, 272], "update_pio": [14, 24, 146], "make_graph": [14, 24, 146], "At": [14, 37, 48, 247, 248, 251, 272], "set_model_resourc": 14, "thread": [14, 24, 34, 37, 43, 44, 48, 91, 146, 156, 197, 211, 220, 246, 249, 250, 270, 272, 273, 275, 279, 291, 296], "prefix": [14, 39, 133, 136, 141, 179, 251, 253, 273], "end": [14, 144, 249, 251, 252, 253, 268, 270, 272, 275, 284, 285, 287, 288, 289, 294], "yml": 14, "reason": [14, 16, 43, 133, 249, 252, 272, 296], "add_namelist_fil": [14, 24, 136, 249, 251], "add_model_config_opt": [14, 24, 136, 249, 251, 272], "add_streams_fil": [14, 24, 136, 249, 251], "themselv": [14, 252, 271], "question": [14, 249, 273], "never": [14, 133, 270], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 136, 272], "config_run_dur": [14, 136, 251, 272], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 48, 154, 270, 272], "config_block_decomp_file_prefix": [14, 272], "time_integr": [14, 136, 272, 285], "config_time_integr": [14, 136], "rk4": [14, 136, 252, 285], "filename_templ": [14, 136, 272], "restart": [14, 17, 48, 136, 240, 242, 243, 244, 246, 250, 252, 258, 259, 268, 270, 272, 291, 296], "output_interv": [14, 136, 272, 285], "0030_00": 14, "clobber_mod": [14, 136, 272], "truncat": [14, 136, 272], "reference_tim": [14, 136], "0001": [14, 136, 272], "01_00": [14, 136, 266, 272], "tracer": [14, 18, 175, 221, 222, 224, 239, 240, 242, 243, 244, 272, 285, 287, 288, 289], "xtime": [14, 136, 272], "normalveloc": [14, 17, 18, 136, 172, 209, 238, 239, 242, 243, 244, 249, 272, 289], "layerthick": [14, 17, 136, 172, 228, 232, 233, 234, 235, 239, 242, 243, 244, 249, 272], "refzmid": [14, 228, 234, 235, 249, 272], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 272], "clariti": [14, 249], "global_converg": [14, 240, 251, 272, 283], "substitut": 14, "config_write_output_on_startup": [14, 272], "0000_00": [14, 272], "config_use_mom_del2": [14, 272], "config_implicit_bottom_drag_coeff": [14, 272], "0e": [14, 288, 289], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 272], "config_cvmix_background_viscos": [14, 272], "worri": 14, "sometim": [14, 228, 234, 235, 245, 247, 249, 251, 270, 272, 296], "togeth": [14, 17, 133, 245, 270, 272, 296], "overkil": 14, "reli": [14, 249, 251, 272], "along": [14, 18, 133, 239, 249, 271, 272], "dict": [14, 19, 25, 27, 28, 30, 37, 41, 48, 86, 87, 89, 93, 94, 110, 112, 113, 119, 122, 123, 124, 136, 138, 144, 149, 178, 249, 251, 272], "config_mom_del2": [14, 239, 249, 272], "precis": [14, 136, 249, 272], "bool": [14, 24, 25, 29, 37, 39, 47, 48, 49, 54, 58, 60, 63, 107, 108, 112, 117, 118, 119, 124, 136, 138, 145, 146, 158, 164, 175, 178, 182, 199, 213, 220, 222, 224, 272], "possibli": [14, 37, 48, 246, 249, 251, 253, 272], "at_setup": [14, 29, 158, 164, 182, 199, 213, 272], "being": [14, 29, 37, 48, 107, 112, 118, 133, 136, 158, 164, 182, 199, 213, 249, 251, 252, 253, 272, 281], "dt": [14, 136, 156, 220, 249, 272, 284, 285, 287, 288, 290, 295], "proport": [14, 136, 272, 281, 284, 285, 287, 288, 290, 295], "dt_per_km": [14, 136, 240, 272, 284, 287, 288, 290, 295], "stackoverflow": [14, 60, 272], "1384565": [14, 272], "7728169": [14, 60, 272], "config_dt": [14, 136, 272], "strftime": [14, 272], "gmtime": [14, 272], "run_time_step": [14, 156, 249, 272], "durat": [14, 136, 239, 242, 243, 244, 250, 272], "run_second": [14, 272], "btr_dt": [14, 136, 156, 220, 249, 272, 284], "btr_dt_per_km": [14, 136, 272, 284], "config_btr_dt": [14, 136, 272], "bit": [14, 133, 252, 270, 272, 284, 291], "complic": [14, 252, 253, 272], "slightli": [14, 253], "sophist": 14, "immutable_stream": [14, 272], "var_struct": [14, 265], "var": [14, 114, 265, 272], "var_arrai": [14, 265], "tag": [14, 271], "taken": [14, 24, 146, 240, 249, 272, 279, 291], "past": 14, "experi": [14, 133, 252, 281], "difficult": [14, 133, 278], "synchron": [14, 271], "out_nam": 14, "equival": [14, 253, 272, 274], "template_replac": [14, 27, 28, 136], "treat": [14, 250, 252], "jinja2": [14, 27, 28, 113, 144], "render": [14, 27, 28, 113], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 249, 252, 253, 273, 291], "qu240dynamicadjust": 14, "adjust": [14, 133, 136, 236, 273], "interv": [14, 151, 285], "spin": 14, "reus": [14, 249, 252, 253, 272, 273, 291], "qualit": 14, "forgotten": 14, "broken": [14, 249, 252], "immedi": [14, 66, 253, 272], "miss": [14, 249, 272, 273], "detect": [14, 18, 273, 274, 276, 277, 278, 291], "gpmeti": [14, 273], "divid": [14, 281], "partition_graph": [14, 24, 146], "circumst": [14, 17, 37, 38, 249, 272], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 269, 272, 290, 295], "v1": [14, 281], "better": [14, 16, 133, 291], "v2": [14, 273, 281], "littl": [14, 252, 253, 271, 272], "feel": [14, 133, 249, 272], "runtime_setup": [14, 16, 34, 44, 239, 242, 243, 251], "yourself": [14, 272, 278], "culler": 14, "cull": [14, 239, 242, 243, 249, 272], "model_step": 14, "make_graph_fil": 14, "field": [14, 17, 82, 84, 120, 136, 139, 140, 141, 179, 186, 228, 234, 235, 238, 239, 242, 243, 244, 272, 284, 285, 287, 288], "weight": [14, 16, 84, 228, 234, 235, 272, 281], "weight_field": [14, 84], "frequent": [16, 236, 265], "observ": [16, 271], "dataset": [16, 120, 194, 208, 228, 234, 235, 249, 272], "region": [16, 18, 271, 273], "pyremap": [16, 100], "interpol": [16, 94, 240, 273], "hood": 16, "esmf_regridweightgen": 16, "mappingfilestep": [16, 18], "woa": 16, "mytestcas": 16, "__int__": 16, "make_map": 16, "64": [16, 281], "bilinear": [16, 94, 240, 285, 290, 295], "filenam": [16, 17, 37, 39, 40, 48, 88, 95, 96, 97, 98, 102, 103, 104, 109, 118, 123, 125, 249, 251, 253, 272], "woa23_decav_0": 16, "25_extrap": 16, "20230414": 16, "initial_condition_databas": [16, 273], "destin": [16, 94, 95, 96, 97, 98, 99, 100], "src_from_lon_lat": 16, "lon_var": [16, 95, 97, 102], "lat_var": [16, 95, 97, 102], "dst_from_mpa": 16, "mesh_nam": [16, 95, 96, 97, 98, 99, 102, 103, 104, 139, 141, 145, 179, 186, 188, 251], "qu60": 16, "subclass": [16, 71, 74, 75, 76, 81, 136, 272], "src_": 16, "dst_": 16, "pick": [16, 105, 106], "vizmap": [16, 175, 186, 240, 251], "128": [16, 250, 275, 276, 279], "cosine_bell_viz": [16, 18, 240, 285, 290, 295], "dlon": [16, 99, 240, 285, 290, 295], "dlat": [16, 99, 240, 285, 290, 295], "remap_method": [16, 240, 285, 290, 295], "src_from_mpa": 16, "dst_global_lon_lat": 16, "lon_min": [16, 99], "With": [16, 253], "approach": [16, 249, 252, 253, 269, 272, 281], "perhap": [16, 18, 40, 245, 247], "cover": [16, 266, 272], "nearli": [16, 249, 251, 270, 271, 272], "workflow": [16, 249, 253], "critic": [17, 272], "easiest": [17, 133, 253], "validate_var": [17, 37, 40, 136, 144, 220, 249], "meth": 17, "add_output_fil": [17, 38, 249, 251, 272], "temperatur": [17, 172, 238, 239, 243, 244, 249, 268, 272, 284, 285, 289, 290, 295], "salin": [17, 172, 238, 239, 244, 249, 272, 284, 285, 289, 290, 295], "done": [17, 34, 44, 249, 251, 253, 272, 291], "compare_vari": [17, 272], "filename1": [17, 118, 272], "filename2": [17, 118, 272], "compact": [17, 272], "output_full_run": 17, "output_restart_run": 17, "all_pass": [17, 118], "valueerror": [17, 252], "quiet": [17, 107, 108, 118, 124], "report": 17, "threshold": [17, 136, 285, 287, 288], "l1": [17, 118], "00000000000000e": 17, "l2": [17, 118, 136, 139, 140, 240, 285], "l_infin": 17, "linf": [17, 118], "test_nightly_latest": 17, "threads_test": 17, "1thread": [17, 239, 284], "2thread": [17, 284], "test_20210616": 17, "further_valid": 17, "zero": [17, 229, 230, 231, 232, 233, 238, 239, 244, 272, 285, 289], "l1_norm": [17, 118], "l2_norm": [17, 118], "linf_norm": [17, 118], "nonzero": [17, 118], "solut": [17, 132, 139, 141, 179, 194, 195, 196, 204, 205, 206, 208, 209, 210, 211, 214, 216, 240, 242, 243, 250, 269, 272, 282, 286, 287], "aspect": [18, 272], "routin": 18, "use_mplstyl": 18, "sheet": 18, "font": 18, "consist": [18, 24, 36, 133, 146, 236, 253, 272, 273, 284], "plot_horiz_field": [18, 249, 272], "patch": [18, 120, 272], "edg": [18, 96, 99, 103, 120, 194, 195, 208, 209, 238, 272], "polygon": 18, "character": 18, "accordingli": [18, 92], "final_normalveloc": [18, 272], "t_index": [18, 120, 272], "vmin": [18, 120, 240, 272, 285], "max_veloc": [18, 272], "vmax": [18, 120, 240, 272, 285], "cmap": [18, 120, 249, 272], "cmo": [18, 249, 272], "balanc": [18, 249, 272], "show_patch_edg": [18, 120, 249, 272], "plot_global_field": 18, "plot_land": [18, 119], "disabl": [18, 238, 285, 297], "contin": [18, 119], "overlain": 18, "cmocean": [18, 249, 272], "noqa": [18, 66, 249, 272], "f401": [18, 249, 272], "xr": [18, 194, 195, 196, 208, 209, 210, 249, 272], "open_dataset": [18, 249, 272], "tracer1": [18, 136], "isel": 18, "nvertlevel": [18, 120, 138, 142, 228, 234, 235, 249, 272, 281], "out_filenam": [18, 116, 119, 227], "colormap_sect": [18, 119], "titl": [18, 119, 120, 136, 138, 142], "colormap": [18, 119, 120, 240, 272, 285], "cosin": [18, 136, 175, 177, 178, 180, 183, 185, 186, 188, 240, 251, 272, 282, 283, 286, 290, 295], "bell": [18, 136, 175, 177, 178, 180, 183, 185, 186, 188, 240, 251, 272, 282, 283, 286, 290, 295], "converg": [18, 175, 179, 190, 191, 204, 205, 240, 242, 243, 247, 250, 271, 272, 283, 285, 287, 290, 295], "colormap_nam": [18, 119, 240, 285], "viridi": [18, 240, 272, 285], "norm": [18, 118, 119, 136, 140, 142, 240, 285], "norm_typ": [18, 119, 240, 285], "norm_arg": [18, 119, 240, 285], "colorbar": [18, 119, 120, 240, 285], "tick": [18, 119, 240, 285], "mark": [18, 240, 253, 285], "colorbar_tick": [18, 119, 240, 285], "standard": [18, 252, 253, 262, 272, 275, 291], "symlog": [18, 119], "symmetr": 18, "central": [18, 285], "logarithm": [18, 120], "color": [18, 120], "normal": [18, 194, 195, 208, 209, 238, 249, 250, 253, 272, 278], "symlognorm": 18, "lognorm": 18, "hous": [19, 285], "kei": [19, 48, 112, 138, 251], "max_memori": [24, 34, 37, 44, 146, 249], "mesh_filenam": [24, 84, 146, 152], "graph_filenam": [24, 84, 146], "make_yaml": 24, "stride": [24, 36, 146], "partit": [24, 33, 43, 61, 84, 146, 239, 242, 243, 249, 273, 274, 275, 276, 277, 279, 291], "model_config_data": 24, "streams_data": 24, "neither": [24, 37, 48, 94, 146, 156, 220, 249], "nor": [24, 37, 48, 94, 146, 156, 220, 249, 272], "append": [24, 37, 39, 48, 94, 146, 154, 155, 156, 159, 162, 163, 165, 167, 170, 171, 173, 220, 249, 259, 261, 263], "ideal": [24, 34, 37, 44, 90, 91, 94, 136, 146, 156, 197, 211, 220, 221, 222, 224, 245, 249, 252, 271, 272, 273, 297], "fewer": [24, 34, 37, 44, 90, 91, 146, 156, 197, 211, 220, 249, 272, 291], "memori": [24, 34, 37, 44, 146, 249, 273], "mb": [24, 34, 37, 44, 146, 249, 273], "placehold": [24, 34, 37, 44, 146, 249, 291], "diverg": [30, 149], "counterpart": [30, 136, 149], "nest": [30, 122, 124, 149], "graph_fil": 31, "run_as_subprocess": [37, 249], "smallest": [37, 249, 270, 281, 297], "unit": [37, 95, 99, 102, 249, 270, 284, 297], "term": [37, 270, 272, 287, 288], "necessarili": [37, 39], "input_data": 37, "until": [37, 38, 249, 251, 291], "finish": [37, 38, 81, 249, 272], "known": [37, 38, 133, 240, 249, 272], "suffici": [37, 249], "establish": [37, 38, 249], "is_depend": [37, 249], "machine_info": [37, 249], "machineinfo": 37, "combin": [37, 39, 48, 56, 62, 93, 122, 249, 250, 251, 269, 272, 273, 291], "base_work_dir": [37, 48, 249, 251], "log_filenam": [37, 48, 249, 251], "redirect": [37, 249], "extern": [37, 133, 236, 246, 249, 251, 265, 282, 292], "turn": [37, 55, 246, 249, 269, 272, 289], "access": [38, 251, 252, 253, 272, 274, 278, 279], "database_compon": [39, 249], "work_dir_target": [39, 249], "come": [39, 133, 249, 253, 272, 274, 275, 276, 277, 278, 279, 282], "_database_root": 39, "available_resourc": [41, 89], "constrain": [41, 147, 157, 181, 198, 212, 239, 242, 243, 249, 272], "cores_per_nod": [41, 89, 92, 133, 273, 274, 275, 276, 277, 278, 279, 291], "everi": [42, 189, 239, 249, 251, 252, 268, 269, 270, 272, 284, 289], "child": [42, 189, 246, 249, 251, 252], "subtask": 44, "step_symlink": [48, 251], "outsid": [48, 49, 245, 247, 249, 251, 253], "stdout_logg": [48, 251], "goe": [48, 249, 251, 272], "regardless": [48, 251], "new_step_log_fil": [48, 251], "run_by_default": [49, 251], "assum": [50, 113, 123, 133, 253, 272, 279, 284], "prior": [50, 249], "step_path": 54, "variant": [54, 177, 239, 245, 250, 252, 253, 272, 278, 281, 284, 285], "uncach": 54, "datestamp": 54, "yymmdd": [54, 273], "dry": [54, 250], "meta": 56, "empti": [56, 249, 252, 253, 270, 272], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 108, 253], "isadirectoryerror": 60, "qo": [61, 274, 275, 277, 278, 279, 291], "qualiti": [61, 274, 275, 277, 278, 279, 291], "servic": [61, 274, 275, 277, 278, 279, 291], "constraint": [61, 279, 291], "wall_tim": [61, 291], "wall": [61, 291], "target_cor": 62, "min_cor": 62, "decomposition_test": [66, 245, 291], "decompositiontest": [66, 245], "e501": [66, 272], "turquois": [66, 275], "usr": [66, 133, 275, 291], "climat": [66, 274, 275, 276, 278, 291], "mhoffman": 66, "constant": [67, 74, 75, 136, 238, 272, 284, 285, 287, 289, 290, 295], "latitud": [68, 75, 95, 97, 99, 102, 119, 240, 285, 290, 295], "longitud": [68, 75, 76, 82, 95, 97, 99, 102, 119, 240, 285, 290, 295], "ndarrai": [68, 75, 76, 82, 119, 152, 185, 226, 227, 272], "degre": [68, 75, 76, 82, 99, 273, 284], "length": [68, 75, 76, 82], "180": [68, 75, 76, 82, 99, 136, 285], "90": [68, 75, 76, 82, 136, 249, 285], "static": [69, 70], "rule": 69, "thumb": 69, "achiev": [70, 250], "uniform": [74, 79, 144, 180, 239, 240, 242, 243, 245, 251, 272, 273, 284, 285, 287, 288, 289, 290, 295], "natur": 79, "jigsawpi": [80, 249], "jigsaw_jig_t": 80, "meti": 84, "defaults_filenam": 85, "total": [89, 249, 250, 252, 272, 273, 275, 291], "substep": [90, 91], "command_line_arg": 90, "cpus_per_nod": 92, "map_filenam": 94, "src_grid_info": 94, "dst_grid_info": 94, "neareststod": [94, 240, 285, 290, 295], "conserv": [94, 240, 285, 290, 295], "map_": 94, "source_typ": 94, "_": [94, 133, 249, 251, 253, 272, 289], "dest_typ": 94, "1d": [95, 99, 102, 119, 136, 226, 227, 228, 229, 230, 231, 232, 234, 235], "2d": [95, 99, 102, 119], "5x0": [95, 99, 102], "5degre": [95, 99, 102], "coordin": [95, 97, 98, 102, 104, 119, 120, 194, 208, 228, 234, 235, 280, 282, 284, 285, 287, 288, 289, 290, 294], "mesh_typ": [96, 103, 245, 249, 251], "vertex": [96, 103], "x_var": [98, 104], "y_var": [98, 104], "proj_attr": [98, 104], "proj_str": [98, 104], "proj": [98, 104], "left": [99, 136, 272, 281, 284, 285], "remapp": [100, 101], "remap_fil": 100, "progress": [107, 108], "is_task": 108, "steps_to_skip": 108, "unpickl": [110, 249], "cached_step": 111, "identifi": [111, 133, 246, 265, 297], "task_list": 112, "_all": 112, "streams_filenam": 113, "lxml": [113, 115, 128], "etre": [113, 115, 128], "new_child": 114, "children": 114, "sub": [114, 272], "new_tre": 115, "infin": 118, "toler": 118, "data_arrai": 119, "colorbar_label": 119, "subtitl": 119, "field_nam": [120, 140, 141, 179], "out_file_nam": 120, "ax": 120, "z_index": 120, "cmap_set_und": 120, "cmap_scal": 120, "cmap_titl": 120, "horizont": [120, 136, 152, 238, 239, 240, 242, 243, 244, 284, 287, 288, 289], "depth": [120, 136, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 272, 273, 281, 284, 285, 287, 288, 289, 290], "slice": [120, 139], "fieldnam": 120, "visibl": 120, "bar": 120, "matplotlib": [121, 272], "style": [121, 136, 271, 272], "classmethod": 123, "jinja": [123, 136, 240], "namelist_templ": 127, "polarisyaml": [127, 128], "processed_registry_filenam": 128, "registri": [128, 238, 265], "steam": 128, "1_anvil_intel_impi": [129, 133], "mvapich": [129, 133, 274], "ve": [129, 130, 131, 132, 134, 253, 272], "1_anvil_gnu_openmpi": 129, "1_chicoma": 130, "cpu_gnu_mpich": [130, 134], "crai": [130, 133, 134, 275, 279], "1_chrysalis_intel_openmpi": 131, "1_chrysalis_gnu_openmpi": 131, "soon": [132, 133, 272, 291], "1_compy_intel_impi": 132, "1_compy_gnu_openmpi": 132, "load_polaris_env": [133, 253, 272, 291], "right": [133, 136, 251, 253, 272, 273, 281, 284, 285, 291], "therefor": [133, 249, 270, 272], "chicoma": [133, 278, 291], "mpich": [133, 253, 271, 275, 279, 291], "compi": [133, 277, 291], "pm": [133, 279, 291], "compymcnodefac": [133, 278], "perlmutt": [133, 275, 278, 291], "pretti": [133, 249, 252, 272, 273], "conda_path": [133, 253], "osx": [133, 278], "clang": [133, 253], "1_": 133, "morpheu": 133, "cobalt": [133, 274, 275, 276, 277, 278, 279], "single_nod": [133, 273, 274, 275, 276, 277, 278, 279, 291], "mpirun": [133, 269, 273, 274, 275, 276, 277, 278, 279, 291], "srun": [133, 249, 269, 272, 273, 274, 275, 276, 277, 278, 279, 291], "parallel_execut": [133, 269, 273, 274, 275, 276, 277, 278, 279, 291], "modules_befor": [133, 275, 279], "modules_aft": [133, 275, 279], "polaris_env": [133, 274, 275, 276, 277, 278, 279], "deploi": [133, 253, 271, 274, 275, 276, 277, 278, 279], "mpi_gnu": [133, 274, 275, 276, 277, 278, 279], "hdf5": [133, 274, 275, 276, 277, 278, 279], "use_e3sm_hdf5_netcdf": [133, 274, 275, 276, 277, 278, 279], "discoveri": 133, "hostnam": 133, "hostname_contain": 133, "queu": 133, "laptop": [133, 253, 272, 273], "workstat": [133, 253], "high": [133, 249, 276, 278], "hpc": [133, 253, 275, 278], "safest": [133, 253], "mpi_": 133, "simpl": [133, 136, 252, 265, 272, 291], "compiler_gnu": 133, "compiler_intel": 133, "hopefulli": [133, 273], "parlanc": 133, "concret": 133, "ubuntu": 133, "spec": [133, 269, 279], "gcc": 133, "curl": 133, "81": 133, "buildabl": 133, "install_missing_compil": 133, "cc": 133, "bin": [133, 253, 279, 291], "cxx": 133, "f77": 133, "fc": 133, "operating_system": 133, "ubuntu22": 133, "04": 133, "extra_rpath": 133, "luck": 133, "catch": [133, 250], "22": 133, "guess": [133, 272], "correct": [133, 253], "potenti": [133, 152, 165, 249, 272, 284], "purg": 133, "perl": 133, "32": [133, 250, 291], "bsnc6lt": 133, "ugetvbp": 133, "sxfyy4k": 133, "2020": 133, "304": 133, "n3b5fye": 133, "j3zxncu": 133, "7ohuiwq": 133, "k2zu3y5": 133, "mirrcz7": 133, "variou": [133, 218, 249, 253, 257], "ask": 133, "gb": 133, "minut": [133, 239, 250, 284, 296], "hour": [133, 242, 243, 250, 268, 275, 279, 287, 288, 291, 294], "zlib": 133, "incompat": 133, "ubuntu20": 133, "readlin": 133, "pkgconf": 133, "spackdir": 133, "env": [133, 279], "arch": 133, "repositori": [133, 247, 271, 272, 291], "x86_64_v4": 133, "free": [133, 238, 272, 273], "touch": [133, 253], "everyth": 133, "1_pm": 134, "ever": [136, 252], "expand": [136, 281], "oceanmodelstep": [136, 249, 272], "decid": [136, 272], "veri": [136, 246, 249, 252, 253, 265, 272, 289], "earli": [136, 282, 291], "stage": [136, 238, 249, 251, 253, 261, 268, 282, 291], "map_yaml_to_namelist": 136, "heurist": 136, "200": [136, 242, 243, 272, 284, 287, 288, 289], "round": [136, 285], "cell_count": [136, 147, 157, 181, 198, 212, 272], "goal_cells_per_cor": [136, 272, 285, 287, 288, 290, 295], "pinch": 136, "2000": [136, 245, 266, 268, 272, 294], "max_cells_per_cor": [136, 272, 285, 287, 288, 290, 295], "seciton": 136, "control": [136, 240, 249, 273, 284, 285, 289, 291], "scale": [136, 284, 291], "tri": [136, 252], "apport": 136, "dai": [136, 151, 165, 239, 240, 244, 268, 272, 284, 285, 289, 294], "form": [136, 297], "dddd_hh": [136, 151], "ss": [136, 151], "get_time_interval_str": 136, "run_dur": [136, 285], "fill": 136, "dt_str": 136, "run_duration_str": 136, "output_interval_str": 136, "yaml_filenam": [136, 144], "caviti": [136, 252, 272, 273, 281], "frazil": 136, "flux": [136, 238, 289], "fix": [136, 272], "add_spherical_base_mesh_step": [136, 251], "spherical_converg": [136, 240, 251, 285], "icos_resolut": [136, 285], "480": [136, 285], "qu_resolut": [136, 285], "150": [136, 285], "210": [136, 281, 285], "evalu": [136, 139, 140, 141, 179, 195, 196, 209, 210, 285], "convergence_eval_tim": [136, 285], "convergence_thresh": [136, 285], "error_typ": [136, 139, 140, 285], "spherical_convergence_forward": [136, 285], "split_explicit": [136, 285], "rk4_dt_per_km": [136, 285], "split": [136, 252], "split_dt_per_km": 136, "barotrop": [136, 156, 220, 249, 272, 284, 289], "simul": [136, 242, 243, 249, 270, 272, 283, 284, 287, 288, 290, 291, 295], "numer": [136, 287, 288], "infrastructur": [136, 252, 272], "add_cosine_bell_task": [136, 246], "sphericalconvergenceforward": [136, 240], "output_filenam": [136, 144, 152], "analyz": [136, 138, 178, 272, 285], "split_explicit_t": [136, 272], "sphericalconvergenceanalysi": [136, 240], "less": [136, 138, 175, 178, 249, 281], "convergence_var": [136, 138], "zidx": [136, 138, 139, 141, 142, 179], "exact_solut": 136, "state": [136, 141, 152, 154, 155, 162, 165, 170, 179, 238, 239, 240, 242, 243, 244, 249, 250, 272, 285], "grid_1d": 136, "generate_1d_grid": 136, "vertical_grid": [136, 226, 228, 234, 235, 245, 249, 272, 273, 281, 284, 285, 287, 288, 289, 290], "z": [136, 138, 139, 141, 142, 179, 229, 230, 231, 232, 233, 234, 235, 272, 284, 285, 287, 288, 289, 290], "star": [136, 233, 235, 272, 284, 285, 287, 288, 289, 290], "init_vertical_coord": [136, 249, 272], "minlevelcel": [136, 228, 230, 231, 232, 233, 234, 235, 272], "maxlevelcel": [136, 228, 229, 230, 231, 232, 233, 234, 235, 272], "cellmask": [136, 228, 231, 234, 235, 272], "zmid": [136, 228, 234, 235, 272], "restingthick": [136, 228, 233, 234, 235, 272], "bottomdepth": [136, 228, 229, 231, 232, 233, 234, 235, 249, 272], "entir": [136, 272, 284, 296], "petersen": [136, 253, 272, 284], "et": [136, 272, 281, 284, 285, 287, 288], "al": [136, 272, 281, 284, 285, 287, 288], "2015": [136, 272, 284], "int_": 136, "rho": 136, "dv": 136, "sort": [136, 246, 247, 252, 253], "increas": [136, 252], "compute_rp": [136, 272], "csv": [136, 240, 272], "geostroph": 138, "dependencies_dict": 138, "rate": [138, 140, 141, 179, 240, 242, 243, 272, 285, 287, 288, 289], "dimens": [138, 142, 179, 244, 284], "variable_nam": [139, 142], "exact": [139, 141, 179, 194, 195, 196, 208, 209, 210, 240, 242, 243, 252, 287, 288], "inf": [139, 140], "conv_thresh": [140, 287, 288], "deriv": 141, "subdivid": [145, 251], "dynamic_ntask": 146, "dynam": [146, 236, 244, 273, 284, 285, 289, 290], "available_cor": 148, "estim": [148, 150, 272], "time_str": 151, "initial_state_filenam": 152, "energi": [152, 165, 271, 272, 284], "len": [152, 272], "output_fil": [152, 249, 272], "shorter": [162, 250, 258], "step_subdir": [171, 259], "processor": [171, 249, 259, 284], "include_viz": [175, 251], "advect": [175, 240, 285, 287, 288, 289], "ncell": [179, 249, 272], "max_valu": 185, "ri": 185, "accord": [185, 287, 288, 291], "meter": [185, 226, 227], "radiu": [185, 285], "viz_map": [186, 251], "inerti": [190, 191, 192, 194, 197, 200, 202, 242, 251, 282, 286], "graviti": [190, 191, 192, 194, 197, 200, 202, 242, 251, 282, 286], "wave": [190, 191, 192, 194, 197, 200, 202, 208, 242, 249, 251, 272, 282, 284, 286, 288], "taskdir": [192, 197, 200, 202, 206, 211, 214, 216], "analys": [192, 206], "angleedg": [194, 208], "angl": [194, 208], "posit": [194, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 272, 281, 289], "xcell": [194, 208, 249, 272], "ycell": [194, 208, 249, 272], "xedg": [194, 208, 249, 272], "yedg": [194, 208], "f0": 194, "corioli": [194, 242, 243, 272, 284, 285, 288, 289], "eta0": [194, 208], "amplitid": [194, 208], "kx": [194, 208], "ky": [194, 208], "angular": [194, 208], "frequenc": [194, 208, 239], "veloc": [195, 209, 238, 239, 242, 243, 251, 253, 272, 285, 289, 291], "norm_vel": 195, "eta": [196, 210, 287, 288], "manufactur": [204, 205, 206, 208, 211, 214, 216, 243, 282, 286], "column": [218, 219, 221, 222, 224, 244, 253, 257, 258, 259, 261, 262, 263, 265, 266, 268, 282, 286, 291, 292, 293], "mix": [219, 245, 246, 287, 288, 289], "param": [219, 221], "resources_fix": 220, "ag": [221, 222, 224], "evolv": [221, 271, 281, 285, 289], "ideal_ag": [222, 224], "layer": [226, 227, 228, 232, 233, 234, 235, 238, 239, 242, 243, 244, 272, 273, 281, 284, 285, 287, 288, 289, 290], "bottom": [228, 229, 230, 231, 232, 233, 234, 235, 238, 272, 273, 281, 284, 285, 287, 288, 289, 290], "thick": [228, 232, 233, 234, 235, 239, 244, 266, 272, 273, 281, 284, 287, 294], "stretch": [228, 234, 235, 272, 281], "elev": [228, 234, 235, 272, 281], "midpoint": [228, 234, 235, 272], "reftopdepth": [228, 231, 232, 234, 235, 272], "down": [228, 229, 230, 231, 232, 233, 234, 235, 272, 281, 285], "ref": [228, 234, 235, 272], "middl": [228, 234, 235, 272], "refbottomdepth": [228, 229, 230, 231, 232, 234, 235, 249, 272], "refinterfac": [228, 234, 235, 272], "element": [228, 234, 235, 272], "vertcoordmovementweight": [228, 234, 235, 272], "movement": [228, 234, 235, 272], "alter": [229, 230, 249, 251, 271, 272, 281, 284, 285, 287, 288, 289, 290], "partial": [229, 230, 272, 281, 284, 285, 287, 288, 289, 290], "seafloor": [229, 231, 232, 233, 281], "unstretch": 233, "shelv": [236, 273, 281], "ssh_adjust": [236, 249, 273], "compass_branch": 236, "example_compact": [236, 246, 265, 273], "default_input": [236, 246, 265, 272, 273], "ocean_model": [236, 253, 273], "latest": [236, 253, 265, 271, 282, 291], "compat": [236, 253, 265, 269, 271], "verison": 236, "manufactured_solut": [236, 241, 246, 288], "single_column": [236, 241, 246, 265, 267, 289], "minim": 238, "fcell": [238, 249, 272, 285], "fedg": [238, 249, 272, 285], "fvertex": [238, 249, 272, 285], "slip": 238, "solid": [238, 266, 284, 285], "tangenti": 238, "nonperiod": 238, "drag": [238, 240], "mass": 238, "momentum": [238, 239, 240, 242, 243, 287, 288], "scalar": 238, "rigid": 238, "solv": [238, 269, 281], "mid": [238, 284], "vari": [238, 240, 249, 269, 278, 281, 285], "consult": [238, 272], "tidal_forc": 238, "eddi": [239, 284], "addition": [239, 240, 242, 243, 244, 249, 274, 275, 276, 277, 279], "diffus": [239, 240, 242, 243, 244], "50": [239, 242, 243, 272, 284, 287, 288, 289], "prescrib": [239, 242, 243], "intens": 239, "enough": [239, 249, 252, 272], "cosinebel": [240, 251], "24": [240, 285, 294], "shape": [240, 285], "blob": 240, "around": [240, 272, 273, 284, 285], "distribut": 240, "convergence_tracer1": 240, "fast": [240, 272], "shallow": [242, 253, 285, 287, 288, 290], "water": [242, 272, 284, 285, 287, 288, 289, 290], "100": [242, 243, 244, 281, 287, 288, 289], "25": [242, 243, 287, 288, 289], "calcul": [242, 249, 251], "exactsolut": [242, 243], "obtain": [242, 243, 253, 275], "normal_veloc": [242, 243, 249, 272], "assign": [242, 243, 285], "squar": [242, 243, 287, 288], "fall": [242, 243, 291], "accept": [242, 243], "bound": [242, 243], "rmse": [242, 243, 287, 288], "manufacturedsolut": 243, "exercis": [244, 268, 285, 289], "kpp_test": 244, "mixedlayerdepthsoutput": 244, "idealagetrac": [244, 289], "single_column_forc": [244, 289], "profil": [244, 269, 289], "throughout": [244, 284, 289], "idealag": 244, "enabel": 244, "formal": 245, "organ": [245, 247, 250, 271], "conceptu": [245, 252], "broadli": [245, 246, 252], "realist": [245, 271, 297], "greenland": [245, 271, 297], "2000m": [245, 291], "34": [245, 291], "halfar": 245, "cism": 245, "dome_typ": 245, "closest": 245, "put_origin_on_a_cel": 245, "hydrologi": 245, "hydro": [245, 297], "dome_viz": 245, "time_slic": 245, "save_imag": 245, "hide": [245, 272], "hide_fig": 245, "helper": [245, 246], "clutter": 245, "smoke_test": [245, 251], "smoketest": [245, 251], "restart_test": 245, "restarttest": 245, "add_dome_task": 245, "variable_resolut": [245, 249, 291], "talk": 245, "reduc": [245, 249], "among": [245, 247, 253, 272], "encompass": 246, "perspect": 246, "four": 246, "major": [246, 249], "broader": 246, "univers": 246, "add_inertial_gravity_wave_task": 246, "add_manufactured_solution_task": 246, "add_single_column_task": 246, "alphabet": [246, 272], "landice_model": [246, 253], "diagram": 247, "green": 247, "blue": [247, 274, 291], "orang": 247, "red": 247, "laid": 247, "fig": 247, "organiz": 247, "concept": [247, 252, 272, 297], "somewher": 249, "multiprocess": [249, 252, 273], "aspir": 249, "emploi": 249, "unwant": 249, "outer": 249, "inner": 249, "dome_varres_grid": 249, "signific": [249, 250, 251], "neglig": 249, "culled_graph": [249, 272], "meshstep": 249, "getint": 249, "mesh_cpus_per_task": 249, "mesh_min_cpus_per_task": 249, "fit": [249, 273], "applic": [249, 252, 253, 290, 295], "launch": [249, 271], "write_netcdf": [249, 272], "convers": [249, 272], "greater": [249, 272], "graphinfofilenam": [249, 272], "culled_mesh": [249, 272], "use_dist": [249, 272, 284], "gradient_width_dist": [249, 272, 284], "gradient_width_frac": [249, 272, 284], "bottom_temperatur": [249, 272, 284], "surface_temperatur": [249, 272, 284, 289], "temperature_differ": [249, 272, 284], "coriolis_paramet": [249, 272, 284, 287, 288, 289], "x_cell": [249, 272], "y_cell": [249, 272], "bottom_depth": [249, 272, 273, 281, 284, 285, 287, 288, 289, 290], "ones_lik": [249, 272], "zeros_lik": [249, 272], "x_min": [249, 272], "min": [249, 272, 284, 289], "x_max": [249, 272], "y_min": [249, 272], "y_max": [249, 272], "y_mid": [249, 272], "x_perturb_min": [249, 272], "x_perturb_max": [249, 272], "perturb_width": [249, 272, 284], "y_offset": [249, 272], "sin": [249, 272, 284, 287, 288], "pi": [249, 272, 281, 284, 285], "temp_vert": [249, 272], "frac": [249, 272, 281, 284, 287], "logical_and": [249, 272], "transpos": [249, 272], "3rd": [249, 272], "crest": [249, 272, 284], "expand_dim": [249, 272], "dim": [249, 272], "axi": [249, 272], "broadcast": [249, 272], "nedg": [249, 272], "xvertex": [249, 272], "attr": [249, 272], "initial_temperatur": [249, 272], "initial_normal_veloc": [249, 272], "superclass": 249, "commandlin": 249, "harm": 249, "likewis": [249, 272], "subsequ": [249, 296], "arisen": 249, "problemat": 249, "add_depend": 249, "usual": [249, 251, 253, 272, 291], "forwardstep": 249, "mesh_path": 249, "mesh_step": 249, "with_ice_shelf_cav": 249, "initial_state_target": 249, "adjusted_init": 249, "forcing_data": 249, "init_mode_forcing_data": 249, "entha_analy_result": 249, "mat": 249, "enthalpy_benchmark": 249, "ourselv": 249, "problem": [249, 253, 269, 272], "firewal": 249, "bedmachineantarctica_v2_and_gebco_2022_0": 249, "05_degree_20220729": 249, "slate": 249, "icepresent_qu60km_polar": 249, "practic": [249, 252, 253], "straightforward": 249, "commonli": [249, 270], "notat": [249, 290, 295], "phc": [249, 281], "That": [249, 252, 270, 272, 291], "word": 249, "ff": 249, "quwisc240": [249, 252, 291], "90c": 249, "91c": 249, "92": [249, 281], "91": 249, "sowisc12to60": [249, 291], "performance_test": 249, "effici": [249, 272], "transfer": 249, "feasibl": 249, "overhead": 249, "philosophi": [250, 252, 272], "context": [250, 272], "namesak": 250, "256": [250, 275, 279], "count": [250, 270], "quicker": 250, "exce": 250, "offer": 250, "benefit": [250, 271], "bug": 250, "coverag": 250, "exhaust": 250, "recent": [250, 282, 292], "merg": 250, "reach": 250, "steadi": 250, "wet": 250, "fundament": 251, "incorpor": 251, "velo_solv": 251, "sia": [251, 253], "fo": 251, "runmodel": 251, "run_step": 251, "0200": 251, "00_00": [251, 266, 272], "recip": 251, "demonstr": [251, 272], "fairli": [251, 252, 253, 272], "_cosine_bel": 251, "_with_viz": 251, "_setup_step": [251, 272], "_resolut": 251, "remove_step": 251, "analysis_depend": 251, "base_mesh_step": 251, "cos_bell_dir": 251, "_init_": 251, "init_step": 251, "_forward_": 251, "forward_step": 251, "with_viz_dir": 251, "_map_": 251, "_viz_": 251, "rare": [251, 253], "480km": 251, "closer": 251, "imp_r": 251, "joinpath": 251, "initial_condit": 252, "dig": [252, 273], "background": 252, "adher": [252, 272], "pep8": [252, 253], "bot": [252, 281], "violat": 252, "consid": 252, "editor": 252, "pycharm": [252, 253, 272], "spyder": 252, "linter": 252, "flake8": [252, 253], "discourag": [252, 270], "reformat": 252, "autopep8": 252, "undesir": 252, "lint": 252, "wildcard": 252, "vim": [252, 272], "plugin": 252, "id": [252, 253], "commit": [252, 253], "why": 252, "sound": 252, "subpackag": 252, "understand": [252, 273], "downstream": 252, "tutori": [252, 253], "clu": 252, "intro": 252, "docstr": [252, 271, 272], "strip": 252, "mpas_ocean": 252, "hidden": 252, "shortcut": [252, 291], "referenc": [252, 272], "mention": 252, "dot": 252, "charact": 252, "unix": [252, 271], "distinct": 252, "mayb": [252, 272], "machine_config": 252, "endswith": 252, "splitext": 252, "exactli": [252, 253, 272, 281], "move": [252, 253, 272, 290, 295], "renam": 252, "visa": 252, "versa": 252, "comfort": [252, 272], "inherit": [252, 272], "orient": 252, "program": [252, 273], "led": 252, "felt": 252, "contribut": 252, "hesit": 252, "predecessor": [252, 270, 271], "clumsi": 252, "harder": 252, "outcom": 252, "augment": 252, "explain": 252, "hope": 252, "dens": 252, "learn": [252, 272], "curv": 252, "worth": [252, 272], "skill": 252, "endeavor": 252, "readabl": 252, "manipul": 252, "get_available_cores_and_nod": 252, "theoret": 252, "dozen": 252, "theori": 252, "biogeochemistri": 252, "ksh": 253, "mac": [253, 271], "csh": 253, "tcsh": 253, "temporarili": 253, "recogn": [253, 273, 291], "permiss": 253, "anyon": 253, "caus": [253, 275, 279, 281], "person": [253, 269], "base_path_to_install_or_update_conda": 253, "with_netlib_lapack": 253, "flavor": [253, 272], "troubl": [253, 272], "recognit": 253, "trilino": 253, "downsid": 253, "unneed": 253, "reinstal": 253, "caution": 253, "load_": 253, "encod": 253, "load_dev_polaris_": [253, 272], "env_nam": 253, "dev_polaris_": [253, 269], "workdir": [253, 291], "unexpect": [253, 270, 272], "occur": [253, 269], "echo": 253, "proceed": 253, "notic": 253, "conda_env": [253, 277, 291], "rememb": 253, "incorrect": 253, "unus": 253, "session": [253, 272], "pip": 253, "substanti": 253, "risk": [253, 272], "unsupport": 253, "env_onli": 253, "mpas_make_target": [253, 291], "scientif": [253, 291], "_albani": 253, "instruct": [253, 272], "es3m": 253, "compli": 253, "memor": 253, "guidelin": 253, "complianc": 253, "checker": 253, "isort": 253, "flynt": 253, "mypi": 253, "77": 253, "e302": 253, "blank": 253, "resolv": 253, "simpler": [253, 272], "new_branch_nam": 253, "put": [253, 272], "disk": [253, 273, 275, 279], "respons": 253, "simplest": 253, "your_new_branch": 253, "restart_filenam": 259, "polaris_branch": 265, "post": 265, "src": 265, "registry_process": 265, "seaice_model": 265, "1m": [266, 294], "disc": [266, 294], "config_initial_ice_area": 266, "config_initial_ice_volum": 266, "config_atmospheric_forcing_typ": 266, "config_forcing_start_tim": 266, "config_forcing_cycle_start": 266, "config_forcing_cycle_dur": 266, "config_forcing_precipitation_unit": 266, "mm_per_sec": 266, "config_forcing_sst_typ": 266, "ncar": 266, "config_update_ocean_flux": 266, "config_include_pond_freshwater_feedback": 266, "standard_phys": 268, "standardphys": 268, "year": [268, 282, 294], "volum": 268, "snow": 268, "exact_restart": 268, "exactrestart": 268, "geo": 269, "cartopi": 269, "14": 269, "np110py27_4": 269, "calledprocesserror": 269, "deploy_tmp": 269, "vpn": 269, "site": 269, "shell": [269, 271], "honor": 269, "wide": 269, "spawn": 269, "usernam": [269, 272, 275, 279], "proxy_en": 269, "all_proxi": 269, "proxyout": 269, "8080": 269, "no_proxi": 269, "localhost": [269, 273, 278, 279, 291], "127": 269, "proxy_dis": 269, "unset": 269, "anytim": 269, "fatal": 269, "mpi_init": 269, "stack": 269, "mpir_init_thread": 269, "159": 269, "mpid_init": 269, "164": 269, "mpidi_ch3_init": 269, "95": 269, "mpid_nem_init": 269, "314": 269, "mpid_nem_tcp_init": 269, "173": 269, "mpid_nem_tcp_get_business_card": 269, "395": 269, "getsockinterfaceaddr": 269, "369": 269, "pn2034311": 269, "errno": 269, "host": [269, 273, 278, 291], "focus": 270, "plu": 270, "autom": 271, "exascal": 271, "earth": 271, "kept": 271, "boundari": [271, 284, 297], "expert": 271, "uncoupl": 271, "quick": [271, 272, 282, 292], "queue": 271, "beginn": [271, 272], "advanc": [271, 272], "mpas_to_yaml": 271, "troubleshoot": 271, "proxi": 271, "lanl": [271, 273, 275], "gethostbynam": 271, "glossari": 272, "stick": 272, "miniconda": 272, "3_chrysalis_intel_openmpi": 272, "strict": 272, "push": 272, "lowercas": 272, "hyphen": 272, "settl": 272, "desktop": 272, "realli": [272, 279], "nice": [272, 279], "supercomput": 272, "yet_another_channel": 272, "testgroup": 272, "vi": 272, "polaris_head": 272, "yetanotherchannel": 272, "instanc": 272, "repres": [272, 281, 285], "highli": 272, "camelcas": 272, "capit": 272, "letter": 272, "cap": 272, "awkward": 272, "encourag": 272, "enclos": 272, "briefli": 272, "baroclinicchannel": 272, "globalconverg": 272, "add_test_group": 272, "interest": 272, "test_group": 272, "add_test_cas": 272, "anyth": 272, "testcas": [272, 273, 284, 289, 291], "probabl": [272, 278], "suppos": 272, "easili": 272, "tide": 272, "sai": [272, 278], "res_str": 272, "1000": [272, 273, 281, 284, 287, 288], "still": [272, 282, 290, 291, 295], "ti": 272, "loop": 272, "1km": [272, 284, 291], "4km": [272, 284, 291], "coarsest": [272, 273], "especi": 272, "promot": 272, "pattern": 272, "familiar": 272, "seen": 272, "brows": 272, "row": 272, "disadvantag": 272, "foremost": 272, "magic": 272, "effect": [272, 290], "pain": 272, "160": [272, 284], "500": [272, 273, 281, 284], "path_to_mpas_ocean": 272, "path_to_working_dir": 272, "cat": 272, "slurm_jobid": 272, "_run_test": 272, "gpf": 272, "fs1": 272, "cbegeman": 272, "grid_typ": [272, 273, 281, 284, 285, 287, 288, 289, 290], "vert_level": [272, 273, 281, 284, 285, 287, 288, 289, 290], "coord_typ": [272, 281, 284, 285, 287, 288, 289, 290], "partial_cell_typ": [272, 281, 284, 285, 287, 288, 289, 290], "min_pc_fract": [272, 281, 284, 285, 287, 288, 289, 290], "everywher": 272, "depress": [272, 281], "mostli": 272, "logic": [272, 284], "northern": [272, 284], "half": [272, 284], "southern": [272, 284], "halv": [272, 284], "gradient": [272, 284, 287, 288, 289], "500km": [272, 284], "40e3": [272, 284], "35": [272, 284, 285, 289, 290, 291, 295], "2e": [272, 284], "connect": [272, 279], "match": 272, "light": 272, "e3sm_compon": 272, "interact": [272, 275, 278, 279, 291], "interrupt": 272, "pty": 272, "navig": 272, "newli": 272, "bunch": 272, "didn": 272, "mistak": 272, "finger": 272, "cross": 272, "initial_normalveloc": 272, "initial_salin": 272, "obvious": 272, "stress": [272, 289], "landicemodelstep": 272, "huge": 272, "cp": 272, "05": 272, "hmix_del2": 272, "bottom_drag": 272, "cvmix": 272, "0002": 272, "filename_interv": 272, "0100": 272, "input_interv": 272, "initial_onli": 272, "basicmesh": 272, "dayssincestart": 272, "surfacespe": 272, "lowersurfac": 272, "uppersurfac": 272, "ureconstructx": 272, "ureconstructi": 272, "great": 272, "remain": [272, 285, 289], "load_dataset": 272, "final_temperatur": 272, "ab": 272, "proc": 272, "area": 272, "4proc": [272, 284], "8proc": [272, 284], "markdown": 272, "developers_guid": 272, "users_guid": 272, "daunt": 272, "flesh": 272, "bonu": 272, "improv": 272, "introduc": 272, "techniqu": 272, "cannot": 272, "aim": 272, "constrain_resourc": 272, "becam": 272, "mainten": 272, "counter": 272, "thought": 272, "yet_another_channel_test_cas": 272, "yetanotherchanneltestcas": 272, "choic": [272, 285], "spuriou": [272, 284], "dissip": [272, 284], "pop": [272, 284], "mom": [272, 284], "mitgcm": [272, 284], "higher": 272, "heavi": 272, "analogi": 272, "tet": 272, "bear": 272, "late": 272, "_add_step": 272, "startswith": 272, "enumer": 272, "rpe_": 272, "_nu_": 272, "privat": 272, "break": [272, 284], "unusu": 272, "rpe_1_nu_1": [272, 284], "rpe_2_nu_5": [272, 284], "rpe_3_nu_10": 272, "rpe_4_nu_20": 272, "rpe_5_nu_200": 272, "20_00": 272, "0000": 272, "dayssincestartofsim": 272, "relativevort": 272, "pyplot": 272, "plt": 272, "output_": 272, "sections_yet_another_channel_": 272, "rpe_t": 272, "init_filenam": 272, "initial_state_file_nam": 272, "ds_init": 272, "_plot": 272, "dirti": 272, "adopt": 272, "lesson": 272, "tricki": 272, "commun": 272, "nuanc": 272, "fake": 272, "wasn": 272, "fold": 272, "proper": 272, "third": 272, "previous": 272, "extens": 273, "multinod": [273, 291], "explanatori": 273, "my_machin": 273, "extend": 273, "gitconfig": 273, "enter": 273, "author": 273, "email": 273, "pull_request": 273, "28": 273, "address": 273, "metadata": 273, "customize_config_pars": 273, "server_base_url": 273, "inej": 273, "check_siz": 273, "ssl": 273, "certif": 273, "core_path": 273, "partition_execut": 273, "dask": 273, "netcdf4": 273, "netcdf4_class": 273, "netcdf3_64bit": 273, "netcdf3_class": 273, "engin": 273, "scipi": 273, "mesh_databas": 273, "ocean_database_root": 273, "landice_database_root": 273, "mesh_cor": 273, "mesh_min_cor": 273, "mesh_max_memori": 273, "mesh_max_disk": 273, "init_cor": 273, "init_min_cor": 273, "init_max_memori": 273, "init_max_disk": 273, "init_thread": 273, "forward_cor": 273, "forward_min_cor": 273, "forward_thread": 273, "forward_max_memori": 273, "forward_max_disk": 273, "add_metadata": 273, "ec": 273, "wc": 273, "mesh_descript": 273, "autodetect": 273, "bathy_descript": 273, "gebco": 273, "2022": 273, "bedmachin": 273, "antarctica": 273, "init_descript": 273, "e3sm_vers": 273, "increment": 273, "mesh_revis": 273, "finest": 273, "min_r": 273, "max_r": 273, "max_depth": 273, "creation_d": 273, "peopl": 273, "contact": 273, "temperaturemax": 273, "statist": 273, "temperature_max": 273, "33": [273, 291], "enable_ocean_initial_condit": 273, "enable_ocean_graph_partit": 273, "enable_seaice_initial_condit": 273, "scrip": 273, "enable_scrip": 273, "transect": 273, "onlin": 273, "member": 273, "offlin": 273, "enable_diagnostics_fil": 273, "coarser": [273, 285], "finer": 273, "comparisonlatresolut": 273, "comparisonlonresolut": 273, "antarct": 273, "polar": [273, 274, 276, 281], "stereograph": 273, "comparisonantarcticstereowidth": 273, "6000": [273, 281], "comparisonantarcticstereoresolut": 273, "arctic": [273, 294], "comparisonarcticstereowidth": 273, "comparisonarcticstereoresolut": 273, "tanh_dz": 273, "16": [273, 289, 291], "3000": 273, "min_layer_thick": [273, 281], "max_layer_thick": [273, 281], "retain": 273, "ecosystem": 274, "gain": 274, "confluenc": 274, "public_html": [274, 276, 278], "soft": [274, 276, 278, 291], "mpi_intel": [274, 276, 277, 278], "36": [274, 278, 289, 291], "condo": [274, 291], "acm": [274, 291], "medium": 274, "acme_high": 274, "load_latest_polaris_intel_impi": [274, 277], "load_latest_polaris_gnu_openmpi": [274, 276, 291], "dst": 275, "calendar": 275, "network": 275, "introduct": 275, "platform": 275, "batch": 275, "wtrw": 275, "ch": 275, "fe": 275, "lustr": 275, "scratch4": 275, "scratch5": 275, "sacctmgr": 275, "assoc": 275, "cluster": 275, "45": 275, "sshare": 275, "sreport": 275, "accountutilizationbyus": 275, "2019": 275, "prioriti": 275, "yellow": 275, "chkhome": 275, "petabyt": 275, "df": 275, "bp": 275, "archiv": [275, 279], "hpss": [275, 279], "front": 275, "tn": 275, "storag": 275, "project_nam": 275, "salloc": [275, 278, 279], "account_nam": 275, "gpu": [275, 279], "hyperthread": [275, 279], "hang": [275, 279], "threads_per_cor": [275, 279], "shared_clim": [275, 291], "load_latest_polaris_gnu_mpich": [275, 279], "load_latest_polaris_intel_openmpi": 276, "compyf": 277, "app": [277, 291], "pmi2": 277, "40": 277, "submit": 278, "workload": 278, "squeue": 278, "my_usernam": [278, 279], "scancel": 278, "jobid": 278, "cancel": 278, "emtpi": 278, "three": [278, 297], "mpi_mpich": [278, 291], "mpi_openmpi": [278, 291], "nompi": [278, 291], "p1": 279, "nersc": 279, "iri": 279, "filesystem": 279, "myquota": 279, "prjquota": 279, "projectid": 279, "m1795": 279, "hsi": 279, "htar": 279, "zstash": 279, "cf": [279, 291], "cdir": [279, 291], "premium": 279, "cray_compil": 279, "8844": 279, "monik": 279, "browser": 279, "grab": 279, "logon": 279, "kernel": 279, "myenv": 279, "ipykernel": 279, "kernelspec": 279, "u1": 279, "interpret": 279, "argv": 279, "ipykernel_launch": 279, "connection_fil": 279, "display_nam": 279, "languag": 279, "2500": 281, "deepest": 281, "stewart": 281, "2017": 281, "delta": [281, 284, 289], "z_2": 281, "z_1": 281, "mathrm": 281, "tanh": 281, "rightarrow": 281, "infti": 281, "z_k": 281, "z_0": 281, "z_": [281, 289], "k": 281, "finder": 281, "n_z": 281, "h_": 281, "scienc": 281, "hydrograph": 281, "climatologi": 281, "250": 281, "5500": 281, "renorm": 281, "51": 281, "221": 281, "ziso": [281, 297], "63": 281, "floor": 281, "flat": [281, 284], "collaps": 281, "adcroft": 281, "campin": 281, "2004": 281, "absenc": 281, "squash": 281, "watercolumn": 281, "press": 281, "batymetri": 281, "stair": 281, "month": 282, "websit": [282, 292], "release_6": 282, "ilicak": 284, "2012": 284, "variat": 284, "distinguish": 284, "zonal": [284, 289], "meridion": [284, 289], "psu": [284, 289], "cooler": 284, "north": 284, "sinusoid": 284, "perturb": [284, 285, 288], "t_0": 284, "t_b": 284, "t_": 284, "z_b": 284, "y_": 284, "l_x": 284, "warmer": 284, "ge": [284, 285], "gradient_width_fract": 284, "l_y": 284, "le": [284, 289], "flow": [284, 285], "stationari": [284, 289], "literatur": 284, "mk": 284, "celsiu": 284, "prognost": 284, "williamson": 285, "1992": 285, "sec": 285, "3a": 285, "skamarock": 285, "gassmann": 285, "bodi": 285, "rotat": [285, 287, 288], "transport": 285, "psi": 285, "proportion": 285, "slow": 285, "icosohydr": 285, "nearest": 285, "insensit": [285, 289], "300": [285, 290], "passiv": 285, "psi_0": 285, "co": [285, 287, 288], "debug_tracers_1": 285, "equatori": 285, "u_0": 285, "tau": 285, "transit": 285, "equat": [285, 287, 288, 289], "vel_pd": 285, "tendenc": [285, 288], "rung": 285, "kutta": 285, "4th": 285, "multipli": 285, "globe": 285, "rad": 285, "lat_cent": 285, "lon_cent": 285, "14159265": 285, "2123666": 285, "6667": 285, "hill": 285, "psi0": 285, "qu_conv_thresh": 285, "icos_conv_max": 285, "circul": 285, "roughli": 285, "studi": 285, "propag": [287, 288], "doubli": [287, 288], "assess": [287, 288], "accuraci": [287, 288], "discret": [287, 288], "bishnu": [287, 288], "friction": [287, 288], "neglect": [287, 288], "nonlinear": [287, 288], "analyt": [287, 297], "k_x": [287, 288], "k_y": [287, 288], "availi": [287, 288], "10000": [287, 288], "coriloi": 287, "1e": 287, "amplitud": [287, 288], "ssh_amplitud": [287, 288], "wavelength": [287, 288], "n_wavelengths_x": [287, 288], "n_wavelengths_i": [287, 288], "conv_max": [287, 288], "embed": 288, "eta_0": 288, "span": 289, "arbitrarili": 289, "chosen": 289, "virtu": 289, "examin": 289, "400": 289, "phi": 289, "phi_0": 289, "dz": 289, "ml": 289, "mld": 289, "surface_x": 289, "x_gradient_mixed_lay": 289, "mixed_layer_depth_x": 289, "x_difference_across_mixed_lay": 289, "x_gradient_interior": 289, "spatial": 289, "4x4": 289, "960": 289, "degc": 289, "temperature_gradient_mixed_lay": 289, "temperature_difference_across_mixed_lay": 289, "temperature_gradient_interior": 289, "mixed_layer_depth_temperatur": 289, "surface_salin": 289, "salinity_gradient_mixed_lay": 289, "salinity_difference_across_mixed_lay": 289, "salinity_gradient_interior": 289, "mixed_layer_depth_salin": 289, "scheme": 289, "dictat": 289, "kpp": 289, "restor": 289, "piston": 289, "toward": 289, "temperature_surface_restoring_valu": 289, "temperature_piston_veloc": 289, "salinity_surface_restoring_valu": 289, "salinity_piston_veloc": 289, "temperature_interior_restoring_r": 289, "salinity_interior_restoring_r": 289, "net": 289, "latent": 289, "heat": 289, "bulk": 289, "latent_heat_flux": 289, "sensibl": 289, "sensible_heat_flux": 289, "solar": 289, "shortwav": 289, "shortwave_heat_flux": 289, "evapor": 289, "evaporation_flux": 289, "5e": 289, "rain": 289, "rain_flux": 289, "wind": 289, "wind_stress_zon": 289, "wind_stress_meridion": 289, "welcom": [290, 295], "icosohedr": [290, 295], "pertain": [290, 295], "inher": 290, "warrant": 290, "investig": 290, "load_latest_polari": 291, "minu": 291, "create_polaris_load_script": 291, "load_polaris_1": 291, "0_mpich": 291, "exclud": 291, "wiki": 291, "circular_shelf": 291, "sia_smoke_test": 291, "sia_decomposition_test": 291, "sia_restart_test": 291, "fo_smoke_test": 291, "fo_decomposition_test": 291, "fo_restart_test": 291, "37": 291, "17": 291, "210131_test_new_branch": 291, "my_config": 291, "smaller": 291, "previous_workdir": 291, "paper": 291, "recompil": 291, "safer": 291, "preserv": 291, "test_subdir": 291, "whatev": 291, "clock": 291, "j": 291, "exclus": 291, "job_nam": 291, "fo_integr": 291, "sia_integr": 291, "cosine_bell_cached_init": [291, 296], "ec30to60": 291, "ecwisc30to60": 291, "qu240_for_e3sm": 291, "quwisc240_for_e3sm": 291, "wc14": 291, "suitenam": 291, "seaice_standalone_framework": 292, "71": 294, "35n": 294, "156": 294, "5w": 294, "atmospher": 294, "timeseri": 294, "pair": 294, "prohibit": 296, "speed": 296, "radial": 297}, "objects": {"polaris": [[19, 0, 1, "", "Component"], [24, 0, 1, "", "ModelStep"], [37, 0, 1, "", "Step"], [48, 0, 1, "", "Task"]], "polaris.Component": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_config"], [21, 1, 1, "", "add_step"], [22, 1, 1, "", "add_task"], [23, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[24, 1, 1, "", "__init__"], [25, 1, 1, "", "add_model_config_options"], [26, 1, 1, "", "add_namelist_file"], [27, 1, 1, "", "add_streams_file"], [28, 1, 1, "", "add_yaml_file"], [29, 1, 1, "", "dynamic_model_config"], [30, 1, 1, "", "map_yaml_to_namelist"], [31, 1, 1, "", "partition"], [32, 1, 1, "", "process_inputs_and_outputs"], [33, 1, 1, "", "runtime_setup"], [34, 1, 1, "", "set_model_resources"], [35, 1, 1, "", "setup"], [36, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[37, 1, 1, "", "__init__"], [38, 1, 1, "", "add_dependency"], [39, 1, 1, "", "add_input_file"], [40, 1, 1, "", "add_output_file"], [41, 1, 1, "", "constrain_resources"], [42, 1, 1, "", "run"], [43, 1, 1, "", "runtime_setup"], [44, 1, 1, "", "set_resources"], [45, 1, 1, "", "set_shared_config"], [46, 1, 1, "", "setup"], [47, 1, 1, "", "validate_baselines"]], "polaris.Task": [[48, 1, 1, "", "__init__"], [49, 1, 1, "", "add_step"], [50, 1, 1, "", "configure"], [51, 1, 1, "", "remove_step"], [52, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[53, 2, 1, "", "main"]], "polaris.cache": [[54, 2, 1, "", "update_cache"]], "polaris.components": [[55, 2, 1, "", "get_components"]], "polaris.config": [[56, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[56, 1, 1, "", "__init__"], [57, 1, 1, "", "setup"]], "polaris.io": [[58, 2, 1, "", "download"], [59, 3, 0, "-", "imp_res"], [60, 2, 1, "", "symlink"]], "polaris.job": [[61, 2, 1, "", "get_slurm_options"], [62, 2, 1, "", "write_job_script"]], "polaris.list": [[63, 2, 1, "", "list_cases"], [64, 2, 1, "", "list_machines"], [65, 2, 1, "", "list_suites"]], "polaris.logging": [[66, 2, 1, "", "log_method_call"]], "polaris.mesh": [[67, 0, 1, "", "IcosahedralMeshStep"], [74, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [69, 1, 1, "", "get_cell_width"], [70, 1, 1, "", "get_subdivisions"], [71, 1, 1, "", "make_jigsaw_mesh"], [72, 1, 1, "", "run"], [73, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "build_cell_width_lat_lon"], [76, 1, 1, "", "make_jigsaw_mesh"], [77, 1, 1, "", "run"], [78, 1, 1, "", "setup"]], "polaris.mesh.planar": [[79, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[80, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "run"], [82, 1, 1, "", "save_and_plot_cell_width"], [83, 1, 1, "", "setup"]], "polaris.model_step": [[84, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[85, 2, 1, "", "ingest"], [86, 2, 1, "", "parse_replacements"], [87, 2, 1, "", "replace"], [88, 2, 1, "", "write"]], "polaris.ocean": [[137, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[137, 1, 1, "", "__init__"]], "polaris.ocean.convergence.spherical": [[138, 0, 1, "", "SphericalConvergenceAnalysis"], [144, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "compute_error"], [140, 1, 1, "", "convergence_parameters"], [141, 1, 1, "", "exact_solution"], [142, 1, 1, "", "plot_convergence"], [143, 1, 1, "", "run"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[144, 1, 1, "", "__init__"]], "polaris.ocean.mesh.spherical": [[145, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[146, 0, 1, "", "OceanModelStep"], [151, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "compute_cell_count"], [148, 1, 1, "", "constrain_resources"], [149, 1, 1, "", "map_yaml_to_namelist"], [150, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[152, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[153, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[154, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[154, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[155, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[155, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[156, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "compute_cell_count"], [158, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[159, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "run"], [161, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[162, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[162, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[163, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[165, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[167, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"], [169, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[170, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[170, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[171, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[173, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[175, 0, 1, "", "CosineBell"], [177, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[178, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[180, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "compute_cell_count"], [182, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[183, 0, 1, "", "Init"], [185, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[186, 0, 1, "", "Viz"], [188, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[188, 1, 1, "", "__init__"], [189, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[190, 0, 1, "", "InertialGravityWave"], [191, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[190, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[192, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[194, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "normal_velocity"], [196, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[197, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "compute_cell_count"], [199, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[200, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[200, 1, 1, "", "__init__"], [201, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[202, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[204, 0, 1, "", "ManufacturedSolution"], [205, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[204, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[206, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[208, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[208, 1, 1, "", "__init__"], [209, 1, 1, "", "normal_velocity"], [210, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[211, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[211, 1, 1, "", "__init__"], [212, 1, 1, "", "compute_cell_count"], [213, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[214, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[216, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[216, 1, 1, "", "__init__"], [217, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[218, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[219, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[219, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[220, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[220, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[221, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[221, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[222, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[222, 1, 1, "", "__init__"], [223, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[224, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[224, 1, 1, "", "__init__"], [225, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[226, 2, 1, "", "generate_1d_grid"], [227, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[228, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[229, 2, 1, "", "alter_bottom_depth"], [230, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[231, 2, 1, "", "compute_min_max_level_cell"], [232, 2, 1, "", "compute_z_level_layer_thickness"], [233, 2, 1, "", "compute_z_level_resting_thickness"], [234, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[235, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[89, 2, 1, "", "get_available_parallel_resources"], [90, 2, 1, "", "get_parallel_command"], [91, 2, 1, "", "run_command"], [92, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[93, 2, 1, "", "write"]], "polaris.remap": [[94, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[94, 1, 1, "", "__init__"], [95, 1, 1, "", "dst_from_lon_lat"], [96, 1, 1, "", "dst_from_mpas"], [97, 1, 1, "", "dst_from_points"], [98, 1, 1, "", "dst_from_proj"], [99, 1, 1, "", "dst_global_lon_lat"], [100, 1, 1, "", "get_remapper"], [101, 1, 1, "", "runtime_setup"], [102, 1, 1, "", "src_from_lon_lat"], [103, 1, 1, "", "src_from_mpas"], [104, 1, 1, "", "src_from_proj"]], "polaris.run": [[105, 2, 1, "", "complete_step_run"], [106, 2, 1, "", "load_dependencies"], [109, 2, 1, "", "setup_config"], [110, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[107, 2, 1, "", "run_single_step"], [108, 2, 1, "", "run_tasks"]], "polaris.seaice": [[256, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[256, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[257, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[258, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[258, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[259, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[259, 1, 1, "", "__init__"], [260, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[261, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[261, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[262, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[262, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[263, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[263, 1, 1, "", "__init__"], [264, 1, 1, "", "run"]], "polaris.setup": [[111, 2, 1, "", "setup_task"], [112, 2, 1, "", "setup_tasks"]], "polaris.streams": [[113, 2, 1, "", "read"], [114, 2, 1, "", "update_defaults"], [115, 2, 1, "", "update_tree"], [116, 2, 1, "", "write"]], "polaris.suite": [[117, 2, 1, "", "setup_suite"]], "polaris.validate": [[118, 2, 1, "", "compare_variables"]], "polaris.viz": [[119, 2, 1, "", "plot_global_field"], [120, 2, 1, "", "plot_horiz_field"], [121, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[122, 0, 1, "", "PolarisYaml"], [126, 2, 1, "", "main_mpas_to_yaml"], [127, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [128, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[122, 1, 1, "", "__init__"], [123, 1, 1, "", "read"], [124, 1, 1, "", "update"], [125, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 272], "share": [1, 6, 9, 252, 272], "step": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 135, 249, 272, 284, 285, 287, 288, 289, 290, 295], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 42, 72, 77, 81, 105, 106, 107, 108, 109, 110, 136, 143, 160, 168, 172, 174, 184, 187, 189, 193, 201, 203, 207, 215, 217, 223, 225, 249, 253, 260, 264, 284, 285, 287, 288, 289, 290, 291, 294, 295], "onc": 1, "befor": 1, "depend": [1, 6, 249], "output": [1, 249, 272], "daughter": 1, "task": [1, 3, 48, 49, 50, 51, 52, 135, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 241, 245, 248, 251, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 267, 272, 286, 290, 291, 293, 295, 297], "work": 1, "directori": [1, 247], "structur": [1, 247], "i": [1, 291], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 253, 271, 273, 291], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 18, 136, 249, 253, 278], "other": [1, 133, 249, 272, 278, 291], "implement": [1, 2], "set": [1, 136, 253, 291], "up": [1, 253, 291], "test": [1, 2, 6, 135, 136, 272, 273, 294], "And": 1, "valid": [1, 2, 3, 17, 118, 171, 172, 239, 259, 260, 272, 291], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 136, 253, 272, 274, 275, 276, 277, 278, 279, 284, 285, 287, 288, 289, 290, 294, 295], "same": 2, "api": 3, "refer": [3, 135, 136], "compon": [3, 14, 19, 20, 21, 22, 23, 55, 136, 236, 246, 252, 253, 265, 282, 291, 292], "polari": [3, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 249, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 291], "framework": [3, 10, 135, 136, 239, 240, 242, 243, 244, 252, 255, 268, 280], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 63, 64, 65], "setup": [3, 5, 8, 35, 46, 57, 73, 78, 83, 111, 112, 150, 161, 169, 249], "suit": [3, 5, 8, 117, 250, 283, 291, 296], "cach": [3, 5, 8, 54, 249], "mpas_to_yaml": [3, 5], "base": [3, 135], "class": [3, 252], "modelstep": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "config": [3, 6, 9, 14, 56, 57, 133, 136, 246, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 287, 288, 289, 290, 294, 295], "io": [3, 11, 58, 59, 60], "job": [3, 61, 62, 278, 291], "log": [3, 12, 66], "mesh": [3, 13, 14, 18, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 135, 136, 145, 272, 284, 285, 287, 288, 289, 290, 294, 295], "model_step": [3, 84], "namelist": [3, 14, 85, 86, 87, 88, 136], "parallel": [3, 89, 90, 91, 92], "proven": [3, 15, 93], "remap": [3, 16, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "stream": [3, 14, 113, 114, 115, 116, 136, 272], "viz": [3, 119, 120, 121, 173, 174, 186, 187, 188, 189, 202, 203, 216, 217, 224, 225, 240, 242, 243, 244, 263, 264, 268, 272], "yaml": [3, 14, 122, 123, 124, 125, 126, 127, 128, 136], "build": [4, 133, 253, 291], "serial": [5, 8, 107, 108], "deploi": 6, "new": [6, 133, 272], "spack": [6, 133, 253, 291], "environ": [6, 133, 253, 269, 291], "where": 6, "we": 6, "updat": [6, 14, 124, 253], "mach": 6, "conda": [6, 253, 269, 278, 291], "identifi": 6, "e3sm": [6, 14, 136, 253, 291], "machin": [6, 133, 253, 278, 291], "describ": [6, 133], "modul": [6, 8, 252, 253], "env": 6, "variabl": [6, 17], "etc": 6, "creat": [6, 253, 272], "remot": [6, 279], "branch": 6, "petsc": [6, 253], "netlib": [6, 253], "lapack": [6, 253], "albani": [6, 253], "troubleshoot": [6, 253, 269], "mpa": [6, 136, 238, 266], "ocean": [6, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 282], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 133, 136, 246, 249, 272, 273], "comment": 9, "symlink": [11, 60, 249], "download": [11, 58, 249], "spheric": [13, 18, 80, 81, 82, 83, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145], "planar": [13, 18, 79], "uniform": [13, 136, 281], "gener": 13, "model": [14, 135, 136, 146, 147, 148, 149, 150, 151, 237, 266, 272, 291], "an": [14, 136, 272], "ad": [14, 133, 249, 272], "dynam": [14, 272], "input": [14, 249], "partit": [14, 31], "pio": 14, "make": [14, 272], "graph": 14, "against": 17, "baselin": 17, "norm": 17, "visual": [18, 272, 294], "common": 18, "matplotlib": 18, "style": [18, 252, 253], "horizont": [18, 272], "field": 18, "global": 18, "lat": 18, "lon": 18, "plot": [18, 272], "add_config": 20, "add_step": [21, 49], "add_task": 22, "remove_step": [23, 51], "add_model_config_opt": 25, "add_namelist_fil": 26, "add_streams_fil": 27, "add_yaml_fil": 28, "dynamic_model_config": [29, 158, 164, 182, 199, 213], "map_yaml_to_namelist": [30, 149], "process_inputs_and_output": 32, "runtime_setup": [33, 43, 101, 249], "set_model_resourc": 34, "update_namelist_pio": 36, "add_depend": 38, "add_input_fil": 39, "add_output_fil": 40, "constrain_resourc": [41, 148, 249], "set_resourc": 44, "set_shared_config": [45, 52], "validate_baselin": 47, "configur": [50, 166, 176, 251, 269], "__main__": 53, "main": 53, "update_cach": 54, "get_compon": 55, "polarisconfigpars": [56, 57], "imp_r": 59, "get_slurm_opt": 61, "write_job_script": 62, "list_cas": 63, "list_machin": 64, "list_suit": 65, "log_method_cal": 66, "icosahedralmeshstep": [67, 68, 69, 70, 71, 72, 73], "build_subdivisions_cell_width_lat_lon": 68, "get_cell_width": 69, "get_subdivis": 70, "make_jigsaw_mesh": [71, 76], "quasiuniformsphericalmeshstep": [74, 75, 76, 77, 78], "build_cell_width_lat_lon": 75, "compute_planar_hex_nx_ni": 79, "sphericalbasestep": [80, 81, 82, 83], "save_and_plot_cell_width": 82, "make_graph_fil": 84, "ingest": 85, "parse_replac": 86, "replac": 87, "write": [88, 93, 116, 125], "get_available_parallel_resourc": 89, "get_parallel_command": 90, "run_command": 91, "set_cores_per_nod": 92, "mappingfilestep": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "dst_from_lon_lat": 95, "dst_from_mpa": 96, "dst_from_point": 97, "dst_from_proj": 98, "dst_global_lon_lat": 99, "get_remapp": 100, "src_from_lon_lat": 102, "src_from_mpa": 103, "src_from_proj": 104, "complete_step_run": 105, "load_depend": 106, "run_single_step": 107, "run_task": 108, "setup_config": 109, "unpickle_suit": 110, "setup_task": [111, 112], "read": [113, 123], "update_default": 114, "update_tre": 115, "setup_suit": 117, "compare_vari": 118, "plot_global_field": 119, "plot_horiz_field": 120, "use_mplstyl": 121, "polarisyaml": [122, 123, 124, 125], "main_mpas_to_yaml": 126, "mpas_namelist_and_streams_to_yaml": 127, "yaml_to_mpas_stream": 128, "anvil": [129, 274], "intel": [129, 131, 132, 274, 276, 277], "gnu": [129, 130, 131, 132, 134, 274, 275, 276, 279], "chicoma": [130, 275], "cpu": [130, 134, 275, 279], "chrysali": [131, 276], "compymcnodefac": [132, 277], "support": [133, 237, 253, 266, 278, 291], "perlmutt": [134, 279], "pm": 134, "baroclinic_channel": [135, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 239], "inertial_gravity_wav": [135, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 242], "cosine_bel": [135, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 240, 283], "manufactured_solut": [135, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 243], "single_column": [135, 218, 219, 220, 221, 222, 223, 224, 225, 244, 254, 257, 258, 259, 260, 261, 262, 263, 264, 268], "converg": [135, 136, 138, 139, 140, 141, 142, 143, 144, 288], "potenti": [135, 136], "energi": [135, 136], "rpe": [135, 136, 152, 165, 166, 167, 168, 169, 239, 284], "vertic": [135, 136, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 272, 281, 284, 285, 287, 288, 289, 290], "coordin": [135, 136, 272, 281], "v": 136, "map": 136, "omega": 136, "mpi": [136, 278], "resourc": 136, "time": [136, 272, 284, 285, 287, 288, 289, 290, 295], "interv": 136, "quasi": 136, "icosahedr": 136, "rest": 136, "sphericalconvergenceanalysi": [138, 139, 140, 141, 142, 143], "compute_error": 139, "convergence_paramet": 140, "exact_solut": [141, 179, 194, 195, 196, 208, 209, 210, 242, 243], "plot_converg": 142, "sphericalconvergenceforward": 144, "add_spherical_base_mesh_step": 145, "oceanmodelstep": [146, 147, 148, 149, 150], "compute_cell_count": [147, 157, 181, 198, 212], "get_time_interval_str": 151, "compute_rp": 152, "add_baroclinic_channel_task": 153, "decomp": [154, 239, 284], "default": [155, 239, 272, 284], "forward": [156, 157, 158, 180, 181, 182, 197, 198, 199, 211, 212, 213, 220, 239, 240, 242, 243, 244, 261, 268, 272], "init": [159, 160, 161, 183, 184, 185, 200, 201, 214, 215, 222, 223, 239, 240, 242, 243, 244, 272], "restart": [162, 163, 164, 239, 284, 294], "restart_step": [163, 164], "restartstep": [163, 164], "analysi": [167, 168, 169, 178, 179, 192, 193, 206, 207, 240, 242, 243, 272], "thread": [170, 239, 284], "cosinebel": [175, 176], "add_cosine_bell_task": 177, "vizmap": [188, 189], "inertialgravitywav": 190, "add_inertial_gravity_wave_task": 191, "exactsolut": [194, 195, 196, 208, 209, 210], "normal_veloc": [195, 209], "ssh": [196, 210], "manufacturedsolut": 204, "add_manufactured_solution_task": 205, "add_single_column_task": [218, 257], "cvmix": [219, 244, 289], "ideal_ag": 221, "idealag": 221, "grid_1d": [226, 227], "generate_1d_grid": 226, "write_1d_grid": 227, "init_vertical_coord": 228, "partial_cel": [229, 230], "alter_bottom_depth": 229, "alter_ssh": 230, "zlevel": [231, 232, 233, 234], "compute_min_max_level_cel": 231, "compute_z_level_layer_thick": 232, "compute_z_level_resting_thick": 233, "init_z_level_vertical_coord": 234, "zstar": 235, "init_z_star_vertical_coord": 235, "initi": [238, 266, 272, 284, 285, 287, 288, 289, 290, 294, 295], "condit": [238, 266, 272, 284, 285, 287, 288, 289, 290, 294, 295], "boundari": 238, "forc": [238, 266, 284, 285, 287, 288, 289, 290, 294, 295], "base_mesh": 240, "ideal": [244, 289], "ag": [244, 289], "categori": [245, 290, 295], "constructor": [246, 249, 251], "organ": 248, "attribut": [249, 251], "copi": 249, "pull": 250, "request": 250, "pr": 250, "nightli": 250, "overview": 252, "code": [252, 253, 272], "packag": 252, "within": 252, "group": [252, 272], "relat": 252, "quick": [253, 291], "start": [253, 272, 291], "develop": [253, 271, 272], "unix": 253, "shell": 253, "repositori": 253, "beginn": 253, "compil": 253, "system": 253, "unknown": 253, "what": 253, "script": [253, 291], "doe": 253, "flag": 253, "activ": 253, "switch": 253, "between": [253, 272], "differ": 253, "onli": 253, "repo": 253, "worktre": 253, "advanc": 253, "seaic": [254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "exact_restart": [258, 259, 260], "exactrestart": 258, "standard_phys": [262, 263, 264], "standardphys": 262, "standard_physics_test": 268, "exact_restart_test": 268, "solver": 269, "error": 269, "when": 269, "proxi": 269, "lanl": 269, "mac": 269, "gethostbynam": 269, "fail": 269, "glossari": [270, 271], "": 271, "guid": 271, "tutori": [271, 272], "compass": 271, "get": 272, "vari": 272, "resolut": 272, "paramet": 272, "thing": 272, "out": 272, "defin": 272, "more": 272, "again": 272, "one": 272, "second": 272, "enhanc": 272, "comput": 272, "cell": 272, "count": 272, "superclass": 272, "studi": 272, "how": 272, "pass": 272, "data": [272, 279], "A": 273, "case": 273, "slurm": 278, "queue": 278, "mpich": 278, "openmpi": 278, "No": 278, "forg": 278, "jupyt": 279, "notebook": 279, "1d": 281, "grid": [281, 284, 285, 287, 288, 289, 290], "type": 281, "tanh_dz": 281, "60layerphc": 281, "100layere3smv1": 281, "3d": 281, "z": 281, "star": 281, "level": 281, "cosine_bell_cached_init": 283, "baroclin": 284, "channel": 284, "descript": [284, 285, 287, 288, 289, 290, 294, 295], "durat": [284, 285, 287, 288, 289, 290, 294, 295], "core": [284, 285, 287, 288, 289, 290, 294, 295], "cosin": 285, "bell": 285, "inerti": 287, "graviti": 287, "wave": 287, "manufactur": 288, "solut": 288, "singl": [289, 294], "column": [289, 294], "task_nam": [290, 295], "yet": 291, "load": 291, "standalon": 291, "sea": 292, "ic": 292, "standard": 294, "physic": 294, "timestep": 294, "exact": 294}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [246, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [284, "mesh"], [284, "id2"], [284, "id9"], [284, "id17"], [284, "id25"], [284, "id32"], [285, "mesh"], [287, "mesh"], [288, "mesh"], [289, "mesh"], [289, "id3"], [289, "id8"], [290, "mesh"], [294, "mesh"], [294, "id1"], [294, "id6"], [295, "mesh"]], "model_step": [[3, "model-step"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [239, "validate"]], "viz": [[3, "viz"], [240, "viz"], [242, "viz"], [243, "viz"], [244, "viz"], [268, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [272, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [280, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [136, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [136, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "Provenance": [[15, "provenance"]], "Remapping": [[16, "remapping"]], "Validation": [[17, "validation"]], "Validating variables against a baseline": [[17, "validating-variables-against-a-baseline"]], "Validating variables": [[17, "validating-variables"]], "Norms": [[17, "norms"]], "Visualization": [[18, "visualization"]], "common matplotlib style": [[18, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[18, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[18, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[19, "polaris-component"]], "polaris.Component.add_config": [[20, "polaris-component-add-config"]], "polaris.Component.add_step": [[21, "polaris-component-add-step"]], "polaris.Component.add_task": [[22, "polaris-component-add-task"]], "polaris.Component.remove_step": [[23, "polaris-component-remove-step"]], "polaris.ModelStep": [[24, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[25, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[26, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[27, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[28, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[29, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[30, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[31, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[32, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[33, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[34, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[35, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[36, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[37, "polaris-step"]], "polaris.Step.add_dependency": [[38, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[39, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[40, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[41, "polaris-step-constrain-resources"]], "polaris.Step.run": [[42, "polaris-step-run"]], "polaris.Step.runtime_setup": [[43, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[44, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[45, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[46, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[47, "polaris-step-validate-baselines"]], "polaris.Task": [[48, "polaris-task"]], "polaris.Task.add_step": [[49, "polaris-task-add-step"]], "polaris.Task.configure": [[50, "polaris-task-configure"]], "polaris.Task.remove_step": [[51, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[52, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[53, "polaris-main-main"]], "polaris.cache.update_cache": [[54, "polaris-cache-update-cache"]], "polaris.components.get_components": [[55, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[56, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[57, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[58, "polaris-io-download"]], "polaris.io.imp_res": [[59, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[61, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[62, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[63, "polaris-list-list-cases"]], "polaris.list.list_machines": [[64, "polaris-list-list-machines"]], "polaris.list.list_suites": [[65, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[66, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[67, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[68, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[69, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[70, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[71, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[72, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[73, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[75, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[79, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[81, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[82, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[83, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[84, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[85, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[86, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[87, "polaris-namelist-replace"]], "polaris.namelist.write": [[88, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[89, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[90, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[91, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[92, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[93, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[94, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[95, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[96, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[97, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[98, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[99, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[100, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[101, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[102, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[103, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[104, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[105, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[106, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[107, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[108, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[109, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[110, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[111, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[112, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[113, "polaris-streams-read"]], "polaris.streams.update_defaults": [[114, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[115, "polaris-streams-update-tree"]], "polaris.streams.write": [[116, "polaris-streams-write"]], "polaris.suite.setup_suite": [[117, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[118, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_field": [[119, "polaris-viz-plot-global-field"]], "polaris.viz.plot_horiz_field": [[120, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[121, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[122, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[123, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[124, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[125, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[126, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[127, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[128, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[129, "anvil"], [274, "anvil"]], "intel": [[129, "intel"], [131, "intel"], [132, "intel"]], "gnu": [[129, "gnu"], [131, "gnu"], [132, "gnu"]], "Chicoma": [[130, "chicoma"], [275, "chicoma"]], "chicoma-cpu, gnu": [[130, "chicoma-cpu-gnu"]], "Chrysalis": [[131, "chrysalis"], [276, "chrysalis"]], "CompyMcNodeFace": [[132, "compymcnodeface"], [277, "compymcnodeface"]], "Machines": [[133, "machines"], [278, "machines"]], "Supported Machines": [[133, "supported-machines"], [278, "supported-machines"]], "Other Machines": [[133, "other-machines"], [278, "other-machines"]], "Adding a New Supported Machine": [[133, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[133, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[133, "describing-a-spack-environment"]], "Building the Spack Environment": [[133, "building-the-spack-environment"]], "Perlmutter": [[134, "perlmutter"], [279, "perlmutter"]], "pm-cpu, gnu": [[134, "pm-cpu-gnu"]], "ocean": [[135, "ocean"]], "Tasks": [[135, "tasks"], [241, "tasks"], [251, "tasks"], [254, "tasks"], [267, "tasks"], [286, "tasks"], [293, "tasks"], [297, "tasks"]], "baroclinic_channel": [[135, "baroclinic-channel"], [239, "baroclinic-channel"]], "inertial_gravity_wave": [[135, "inertial-gravity-wave"], [242, "inertial-gravity-wave"]], "cosine_bell": [[135, "cosine-bell"], [240, "cosine-bell"]], "manufactured_solution": [[135, "manufactured-solution"], [243, "manufactured-solution"]], "single_column": [[135, "single-column"], [244, "single-column"], [254, "single-column"], [268, "single-column"]], "Ocean Framework": [[135, "ocean-framework"]], "Spherical Convergence Tests": [[135, "spherical-convergence-tests"], [136, "spherical-convergence-tests"]], "Ocean Model": [[135, "ocean-model"]], "Spherical Base Mesh Step": [[135, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[135, "reference-potential-energy-rpe"]], "Vertical coordinates": [[135, "vertical-coordinates"]], "Ocean framework": [[136, "ocean-framework"]], "YAML files vs. namelists and streams": [[136, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[136, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[136, "setting-mpi-resources"]], "Setting time intervals in model config options": [[136, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[136, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[136, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[136, "vertical-coordinate"], [281, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[136, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[137, "polaris-ocean-ocean"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis": [[138, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error": [[139, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-compute-error"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters": [[140, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution": [[141, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-exact-solution"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence": [[142, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run": [[143, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-run"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[144, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[145, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[146, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[147, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[148, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[149, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[150, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[151, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[152, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[153, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[154, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[155, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[156, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[157, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[158, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[159, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[160, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[161, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[162, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[163, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[164, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[165, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[166, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[167, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[168, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[169, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[170, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[171, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[172, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[173, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[174, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[175, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[176, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[177, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[178, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[179, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[180, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[181, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[182, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[183, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[184, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[185, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[186, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[187, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[188, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[189, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[190, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[191, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[192, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[193, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[194, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[195, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[196, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[197, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[198, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[199, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[200, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[201, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[202, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[203, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[204, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[205, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[206, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[207, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[208, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[209, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[210, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[211, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[212, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[213, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[214, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[215, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[216, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[217, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[218, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[219, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[220, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[221, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[222, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[223, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[224, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[225, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[226, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[227, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[228, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[229, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[230, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[231, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[232, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[233, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[234, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[235, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[236, "ocean-component"], [282, "ocean-component"]], "Models": [[237, "models"]], "Supported Models": [[237, "supported-models"]], "MPAS-Ocean": [[238, "mpas-ocean"]], "Initial conditions": [[238, "initial-conditions"], [266, "initial-conditions"]], "Boundary conditions": [[238, "boundary-conditions"]], "Forcing": [[238, "forcing"], [266, "forcing"]], "framework": [[239, "framework"], [240, "framework"], [242, "framework"], [243, "framework"], [244, "framework"], [268, "framework"]], "init": [[239, "init"], [240, "init"], [242, "init"], [243, "init"], [244, "init"]], "forward": [[239, "forward"], [240, "forward"], [242, "forward"], [243, "forward"], [244, "forward"], [268, "forward"]], "default": [[239, "default"], [284, "default"]], "decomp": [[239, "decomp"], [284, "decomp"]], "restart": [[239, "restart"], [284, "restart"]], "threads": [[239, "threads"]], "rpe": [[239, "rpe"], [284, "rpe"]], "base_mesh": [[240, "base-mesh"]], "analysis": [[240, "analysis"], [242, "analysis"], [243, "analysis"]], "exact_solution": [[242, "exact-solution"], [243, "exact-solution"]], "cvmix": [[244, "cvmix"], [289, "cvmix"]], "ideal age": [[244, "ideal-age"], [289, "ocean-single-column-ideal-age"]], "Categories of tasks": [[245, "categories-of-tasks"]], "Constructor": [[246, "constructor"]], "Config file": [[246, "config-file"]], "Directory structure": [[247, "directory-structure"]], "Organization of Tasks": [[248, "organization-of-tasks"]], "Steps": [[249, "steps"]], "Step attributes": [[249, "step-attributes"]], "constructor": [[249, "constructor"], [251, "constructor"]], "setup()": [[249, "setup"]], "constrain_resources()": [[249, "constrain-resources"]], "runtime_setup()": [[249, "runtime-setup"]], "run()": [[249, "run"]], "inputs and outputs": [[249, "inputs-and-outputs"]], "Input files": [[249, "input-files"]], "Symlinks to input files": [[249, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[249, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[249, "downloading-and-symlinking-input-files"]], "Copying input files": [[249, "copying-input-files"]], "Output files": [[249, "output-files"]], "Cached output files": [[249, "cached-output-files"]], "Adding other steps as dependencies": [[249, "adding-other-steps-as-dependencies"]], "Suites": [[250, "suites"], [283, "suites"], [291, "suites"], [296, "suites"]], "Pull-Request (PR) suite": [[250, "pull-request-pr-suite"]], "Nightly suite": [[250, "nightly-suite"]], "Task attributes": [[251, "task-attributes"]], "configure()": [[251, "configure"]], "Overview": [[252, "overview"]], "Code Style": [[252, "code-style"]], "Packages and Modules": [[252, "packages-and-modules"]], "Packages": [[252, "packages"]], "Modules": [[252, "modules"]], "Classes": [[252, "classes"]], "Code sharing": [[252, "code-sharing"]], "\u2026in the polaris framework": [[252, "in-the-polaris-framework"]], "\u2026within a component": [[252, "within-a-component"]], "\u2026within a group of related tasks": [[252, "within-a-group-of-related-tasks"]], "\u2026within a task": [[252, "within-a-task"]], "Quick Start for Developers": [[253, "quick-start-for-developers"]], "Unix Shell": [[253, "unix-shell"]], "Set up a polaris repository: for beginners": [[253, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[253, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[253, "supported-machines"]], "Environments with Albany": [[253, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[253, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[253, "unknown-machines"]], "What the script does": [[253, "what-the-script-does"]], "Optional flags": [[253, "optional-flags"]], "Activating the environment": [[253, "activating-the-environment"]], "Switching between different polaris environments": [[253, "switching-between-different-polaris-environments"]], "Troubleshooting": [[253, "troubleshooting"], [269, "troubleshooting"]], "Creating/updating only the polaris environment": [[253, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[253, "building-e3sm-components"]], "Running polaris from the repo": [[253, "running-polaris-from-the-repo"]], "Code style for polaris": [[253, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[253, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[254, "seaice"]], "SeaIce framework": [[255, "seaice-framework"]], "polaris.seaice.SeaIce": [[256, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[257, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[258, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[259, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[260, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[261, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[262, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[263, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[264, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[265, "seaice-component"]], "Supported Model: MPAS-Seaice": [[266, "supported-model-mpas-seaice"]], "standard_physics_test": [[268, "standard-physics-test"]], "exact_restart_test": [[268, "exact-restart-test"]], "Solver errors when configuring conda environment": [[269, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[269, "proxy-on-lanl-macs"]], "gethostbyname failed": [[269, "gethostbyname-failed"]], "Glossary": [[270, "glossary"], [271, null]], "Polaris": [[271, "polaris"]], "User's guide": [[271, null]], "Developer's guide": [[271, null]], "Tutorials": [[271, null]], "Compass": [[271, "compass"]], "Developer Tutorial: Adding a new test group": [[272, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[272, "getting-started"]], "Making a new test group": [[272, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[272, "adding-a-default-task"]], "Varying resolution and other parameters": [[272, "varying-resolution-and-other-parameters"]], "Adding the init step": [[272, "adding-the-init-step"]], "Creating a horizontal mesh": [[272, "creating-a-horizontal-mesh"]], "Adding a config file": [[272, "adding-a-config-file"]], "Adding the step to the task": [[272, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[272, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[272, "creating-an-initial-condition"]], "Adding plots": [[272, "adding-plots"]], "Adding step outputs": [[272, "adding-step-outputs"]], "Adding validation": [[272, "adding-validation"], [272, "id1"]], "Test things out!": [[272, "test-things-out"]], "Adding the forward step": [[272, "adding-the-forward-step"]], "Defining model config options and streams": [[272, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[272, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[272, "adding-more-validation"]], "Test the task again!": [[272, "test-the-task-again"]], "Adding a visualization step": [[272, "adding-a-visualization-step"]], "Adding the viz step to the task": [[272, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[272, "test-the-task-one-more-time"]], "Adding a second task": [[272, "adding-a-second-task"]], "Enhancements": [[272, "enhancements"]], "Adding model config options in code": [[272, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[272, "adding-dynamic-model-config-options"]], "Computing the cell count": [[272, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[272, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[272, "adding-a-parameter-study"]], "Adding the steps to the task": [[272, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[272, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[272, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[273, "config-files"]], "A \u201cuser\u201d config file": [[273, "a-user-config-file"]], "Test-case config files": [[273, "test-case-config-files"]], "config options": [[274, "config-options"], [275, "config-options"], [276, "config-options"], [277, "config-options"], [278, "config-options"], [279, "config-options"], [284, "config-options"], [284, "id7"], [284, "id14"], [284, "id22"], [284, "id30"], [284, "id37"], [285, "config-options"], [287, "config-options"], [288, "config-options"], [289, "config-options"], [289, "id1"], [289, "id6"], [289, "id13"], [290, "config-options"], [294, "config-options"], [294, "id5"], [294, "id10"], [295, "config-options"]], "Intel on Anvil": [[274, "intel-on-anvil"]], "Gnu on Anvil": [[274, "gnu-on-anvil"]], "Chicoma-CPU": [[275, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[275, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[276, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[276, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[277, "intel-on-compymcnodeface"]], "Slurm job queueing": [[278, "slurm-job-queueing"]], "MPICH": [[278, "mpich"]], "OpenMPI": [[278, "openmpi"]], "No MPI from conda-forge": [[278, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[279, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[279, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[279, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[281, "d-grid-type"]], "uniform": [[281, "uniform"]], "tanh_dz": [[281, "tanh-dz"]], "60layerPHC": [[281, "layerphc"]], "100layerE3SMv1": [[281, "layere3smv1"]], "3D vertical coordinates": [[281, "d-vertical-coordinates"]], "z-star": [[281, "z-star"]], "z-level": [[281, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[283, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[284, "baroclinic-channel"]], "description": [[284, "description"], [284, "id1"], [284, "id8"], [284, "id16"], [284, "id24"], [285, "description"], [287, "description"], [288, "description"], [289, "description"], [289, "id2"], [289, "id7"], [290, "description"], [294, "description"], [295, "description"]], "vertical grid": [[284, "vertical-grid"], [284, "id3"], [284, "id10"], [284, "id18"], [284, "id26"], [284, "id33"], [285, "vertical-grid"], [287, "vertical-grid"], [288, "vertical-grid"], [289, "vertical-grid"], [289, "id4"], [289, "id9"], [290, "vertical-grid"]], "initial conditions": [[284, "initial-conditions"], [284, "id4"], [284, "id11"], [284, "id19"], [284, "id27"], [284, "id34"], [285, "initial-conditions"], [287, "initial-conditions"], [288, "initial-conditions"], [289, "initial-conditions"], [289, "id5"], [289, "id10"], [290, "initial-conditions"], [294, "initial-conditions"], [294, "id2"], [294, "id7"], [295, "initial-conditions"]], "forcing": [[284, "forcing"], [284, "id5"], [284, "id12"], [284, "id20"], [284, "id28"], [284, "id35"], [285, "forcing"], [287, "forcing"], [288, "forcing"], [289, "forcing"], [289, "id11"], [290, "forcing"], [294, "forcing"], [294, "id3"], [294, "id8"], [295, "forcing"]], "time step and run duration": [[284, "time-step-and-run-duration"], [284, "id6"], [284, "id13"], [284, "id21"], [284, "id29"], [284, "id36"], [285, "time-step-and-run-duration"], [287, "time-step-and-run-duration"], [288, "time-step-and-run-duration"], [289, "time-step-and-run-duration"], [289, "id12"], [290, "time-step-and-run-duration"], [295, "time-step-and-run-duration"]], "cores": [[284, "cores"], [284, "id15"], [284, "id23"], [284, "id31"], [284, "id38"], [285, "cores"], [287, "cores"], [288, "cores"], [289, "cores"], [289, "id14"], [290, "cores"], [294, "cores"], [294, "id4"], [294, "id9"], [295, "cores"]], "thread": [[284, "thread"]], "cosine bell": [[285, "cosine-bell"]], "inertial gravity wave": [[287, "inertial-gravity-wave"]], "manufactured solution": [[288, "manufactured-solution"]], "convergence": [[288, "convergence"]], "single column": [[289, "single-column"], [294, "single-column"]], "<Category of task>": [[290, "ocean-category-of-task"], [295, "seaice-category-of-task"]], "task_name": [[290, "task-name"], [295, "task-name"]], "Quick Start for Users": [[291, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[291, null]], "Loading polaris conda and spack environments": [[291, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[291, "e3sm-supported-machines"]], "Other machines": [[291, "other-machines"]], "Building supported E3SM components as standalone models": [[291, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[291, "setting-up-tasks"]], "Running a task": [[291, "running-a-task"]], "Running with a job script": [[291, "running-with-a-job-script"]], "Sea ice component": [[292, "sea-ice-component"]], "standard physics test": [[294, "standard-physics-test"]], "timestep and run duration": [[294, "timestep-and-run-duration"], [294, "id11"]], "visualization": [[294, "visualization"]], "exact restart test": [[294, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[19, "polaris.Component"]], "__init__() (polaris.component method)": [[19, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[20, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[21, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[22, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[23, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[24, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[24, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[25, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[29, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[30, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[31, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[32, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[33, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[34, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[35, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[36, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[37, "polaris.Step"]], "__init__() (polaris.step method)": [[37, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[38, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[39, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[40, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[41, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[42, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[43, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[44, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[45, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[46, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[47, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[48, "polaris.Task"]], "__init__() (polaris.task method)": [[48, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[49, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[50, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[51, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[52, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[53, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[54, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[55, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[56, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[56, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[58, "polaris.io.download"]], "module": [[59, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[59, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[61, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[62, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[63, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[64, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[65, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[66, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[69, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[79, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[80, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[80, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[84, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[85, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[86, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[87, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[88, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[89, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[90, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[91, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[92, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[93, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[94, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[105, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[106, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[107, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[108, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[109, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[110, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[111, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[112, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[113, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[114, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[115, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[116, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[117, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[118, "polaris.validate.compare_variables"]], "plot_global_field() (in module polaris.viz)": [[119, "polaris.viz.plot_global_field"]], "plot_horiz_field() (in module polaris.viz)": [[120, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[121, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[122, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[122, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[123, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[124, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[125, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[126, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[127, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[128, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[137, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[137, "polaris.ocean.Ocean.__init__"]], "sphericalconvergenceanalysis (class in polaris.ocean.convergence.spherical)": [[138, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[138, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[139, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[140, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[141, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution"]], "plot_convergence() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[142, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[143, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[144, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[144, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[145, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[146, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[146, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[147, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[148, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[149, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[150, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[151, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[152, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[153, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[154, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[154, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[155, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[155, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[156, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[156, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[157, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[158, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[159, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[159, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[160, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[161, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[162, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[162, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[163, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[163, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[164, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[165, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[165, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[166, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[167, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[167, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[168, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[169, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[170, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[170, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[171, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[171, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[172, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[173, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[173, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[174, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[175, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[175, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[176, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[177, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[178, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[178, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[179, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[180, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[180, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[181, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[182, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[183, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[183, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[184, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[185, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[186, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[186, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[187, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[188, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[188, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[189, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[191, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[192, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[192, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[193, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[194, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[194, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[195, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[196, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[197, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[197, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[198, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[199, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[200, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[200, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[201, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[202, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[202, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[203, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[204, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[204, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[205, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[206, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[206, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[207, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[208, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[208, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[209, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[210, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[211, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[211, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[212, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[213, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[214, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[214, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[215, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[216, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[216, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[217, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[218, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[219, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[219, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[220, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[220, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[221, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[221, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[222, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[222, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[223, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[224, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[224, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[225, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[226, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[227, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[228, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[229, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[230, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[231, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[232, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[233, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[234, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[235, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[256, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[256, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[257, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[258, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[258, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[259, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[259, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[260, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[261, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[261, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[262, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[262, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[263, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[263, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[264, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})