Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.io.update_permissions", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/frontier", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/internal_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/frontier", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/internal_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.io.update_permissions.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/frontier.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/internal_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/frontier.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/internal_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.io.update_permissions", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "polaris.ocean.tasks.internal_wave.default.Default", "polaris.ocean.tasks.internal_wave.forward.Forward", "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.internal_wave.init.Init", "polaris.ocean.tasks.internal_wave.init.Init.run", "polaris.ocean.tasks.internal_wave.rpe.Rpe", "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "polaris.ocean.tasks.internal_wave.viz.Viz", "polaris.ocean.tasks.internal_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "Tasks", "inertial_gravity_wave", "internal_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "Tasks", "inertial gravity wave", "internal wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 11, 19, 21, 38, 46, 49, 50, 53, 138, 141, 156, 165, 166, 173, 176, 181, 186, 199, 224, 230, 257, 290, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 307, 309, 311, 313, 315, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 346, 347, 348, 354, 355, 356, 357, 358, 362, 364], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 68, 73, 75, 78, 81, 82, 92, 94, 96, 97, 103, 108, 109, 110, 111, 114, 115, 138, 141, 143, 149, 151, 153, 154, 156, 157, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 193, 194, 195, 197, 198, 199, 202, 205, 206, 207, 208, 209, 212, 217, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 238, 243, 245, 246, 247, 248, 251, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 319, 320, 321, 323, 324, 328, 330, 331, 333, 340, 342, 363, 364], "templat": [0, 5, 6, 7, 28, 29, 30, 116, 127, 131, 138, 141, 151, 154, 169, 175, 227, 294, 295, 296, 302, 303, 331, 332, 333], "date": [1, 2, 5, 55, 290, 307, 313, 325, 333], "2023": [1, 17, 351, 353], "08": [1, 332, 345], "18": [1, 6, 333, 335], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 138, 332, 333, 339], "asai": [1, 333], "davi": [1, 333], "capabl": [1, 2, 6, 17, 138, 309, 312, 331, 332, 339, 358], "design": [1, 138, 291, 309, 311, 312, 331, 339, 345], "here": [1, 6, 9, 12, 14, 17, 18, 138, 141, 293, 300, 304, 305, 308, 309, 311, 312, 313, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 354, 355, 356, 357, 358, 362, 363], "abil": [1, 7, 346, 354], "across": [1, 6, 7, 9, 14, 19, 141, 293, 305, 309, 310, 311, 312, 313, 330, 332, 341, 345, 346, 347, 348, 354, 355], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 138, 141, 283, 284, 287, 305, 307, 309, 310, 311, 312, 313, 331, 332, 333, 339, 342, 347, 349, 352, 357, 358, 362, 363, 364], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 63, 67, 69, 72, 73, 76, 77, 78, 82, 93, 94, 96, 97, 103, 108, 111, 121, 133, 134, 135, 136, 137, 138, 139, 141, 143, 149, 153, 157, 160, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 179, 180, 181, 185, 186, 189, 193, 195, 198, 199, 202, 207, 209, 210, 212, 220, 222, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 238, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 266, 267, 268, 270, 281, 283, 284, 287, 290, 293, 294, 295, 296, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 324, 325, 329, 330, 331, 332, 333, 335, 338, 339, 340, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363], "document": [1, 3, 9, 14, 309, 312, 331, 333, 352, 358], "refer": [1, 7, 14, 38, 163, 176, 230, 273, 276, 279, 280, 309, 312, 313, 330, 331, 332, 342, 345, 349, 352, 358], "ani": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 34, 47, 108, 114, 115, 172, 180, 305, 306, 307, 309, 310, 311, 312, 313, 315, 332, 333, 339, 345, 347, 356, 357, 358, 361, 362], "which": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 86, 97, 99, 106, 114, 115, 116, 120, 124, 127, 138, 141, 143, 144, 145, 146, 147, 148, 150, 157, 160, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 190, 203, 204, 213, 215, 216, 217, 224, 225, 228, 230, 232, 239, 241, 242, 243, 251, 257, 261, 282, 283, 284, 286, 287, 290, 292, 294, 296, 302, 303, 305, 306, 308, 309, 311, 313, 318, 319, 321, 323, 331, 332, 333, 335, 339, 342, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 64, 92, 93, 94, 138, 141, 157, 167, 225, 251, 293, 294, 295, 296, 297, 300, 302, 303, 309, 311, 312, 313, 332, 334, 335, 336, 337, 338, 340, 345, 358, 363], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 133, 135, 136, 138, 141, 290, 291, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 325, 328, 329, 330, 332, 333, 339, 343, 344, 345, 359, 363, 364], "main": [1, 3, 6, 7, 9, 14, 43, 138, 305, 306, 311, 312, 313, 332, 364], "motiv": 1, "behind": [1, 312], "comput": [1, 7, 13, 14, 15, 80, 138, 141, 144, 145, 148, 152, 155, 157, 158, 163, 168, 192, 196, 214, 218, 226, 240, 244, 276, 277, 278, 287, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 313, 335, 336, 339, 340, 345, 346, 347, 348, 349, 351, 353, 354, 355, 358], "expens": [1, 309, 310], "could": [1, 14, 17, 19, 138, 309, 310, 311, 312, 313, 332, 347], "time": [1, 6, 7, 8, 14, 18, 19, 38, 49, 62, 87, 124, 138, 146, 147, 153, 162, 163, 167, 176, 190, 193, 203, 204, 213, 215, 216, 225, 230, 239, 241, 242, 251, 281, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 309, 310, 311, 312, 313, 328, 329, 330, 333, 335, 338, 340, 358, 363], "order": [1, 5, 8, 13, 14, 141, 283, 284, 294, 295, 296, 297, 302, 303, 306, 309, 310, 313, 332, 346, 347, 348, 349, 353, 354, 355, 356, 358], "reflect": [1, 5, 313], "fact": [1, 14, 38, 138], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 136, 138, 141, 145, 146, 147, 161, 190, 203, 204, 213, 239, 261, 293, 300, 304, 305, 308, 309, 311, 312, 313, 328, 331, 332, 333, 335, 337, 338, 339, 340, 342, 347, 349, 358, 363], "present": [1, 50, 124, 313, 332], "new": [1, 2, 5, 20, 26, 38, 49, 57, 60, 68, 75, 81, 97, 117, 118, 141, 151, 154, 167, 174, 191, 205, 214, 217, 225, 240, 243, 251, 264, 273, 279, 280, 309, 311, 312, 313, 326, 329, 330, 331, 358], "success": [1, 2, 8, 48, 59, 290, 306, 325, 332, 333], "insofar": 1, "guarante": [1, 14, 138, 286, 290, 313, 325], "per": [1, 8, 14, 25, 35, 37, 38, 45, 93, 94, 123, 138, 141, 157, 282, 309, 332, 333, 334, 335, 336, 337, 338, 339, 340, 345, 346, 347, 348, 349, 351, 353, 354, 355, 357, 362], "slurm": [1, 62, 95, 138, 309, 331, 333, 334, 335, 336, 337, 338, 340, 358], "job": [1, 6, 138, 313, 331, 332, 334, 335, 336, 337, 338, 340], "role": 1, "clear": [1, 2, 312, 332], "should": [1, 2, 5, 6, 7, 9, 11, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 63, 76, 114, 115, 122, 124, 133, 134, 135, 136, 137, 138, 139, 141, 143, 148, 160, 172, 180, 253, 255, 283, 284, 290, 305, 306, 307, 309, 310, 311, 313, 325, 326, 329, 330, 332, 333, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 362], "invoc": 1, "serial": [1, 44, 309, 311, 331, 332, 358], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 64, 68, 69, 72, 75, 76, 77, 81, 89, 92, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 111, 114, 115, 116, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 138, 141, 143, 151, 154, 160, 162, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 186, 189, 191, 194, 197, 199, 202, 205, 206, 208, 212, 217, 219, 221, 224, 225, 228, 230, 232, 234, 238, 243, 245, 247, 251, 253, 255, 257, 260, 262, 264, 265, 267, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 293, 299, 300, 301, 304, 306, 309, 310, 311, 312, 313, 318, 319, 321, 323, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 361, 362], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 82, 110, 112, 117, 120, 138, 141, 197, 208, 269, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 325, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 351, 353, 354, 355, 357, 358, 359, 362], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 67, 68, 75, 81, 97, 126, 141, 142, 143, 151, 154, 157, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 186, 189, 191, 194, 197, 199, 202, 205, 206, 208, 210, 212, 214, 217, 219, 221, 224, 225, 228, 230, 232, 234, 236, 238, 240, 243, 245, 247, 250, 251, 252, 253, 255, 257, 260, 262, 264, 265, 267, 269, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 307, 309, 311, 316, 318, 319, 321, 322, 323, 325, 328, 332], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 101, 107, 108, 143, 284, 299, 301, 332], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 40, 47, 49, 59, 110, 111, 122, 123, 138, 141, 172, 180, 186, 199, 253, 255, 257, 282, 283, 284, 286, 293, 294, 295, 296, 297, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 329, 330, 331, 332, 333, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364], "relat": [1, 6, 7, 11, 13, 14, 138, 141, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 309, 313, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 359], "inform": [1, 5, 7, 8, 38, 97, 121, 132, 214, 240, 309, 311, 313, 333, 335, 343, 358, 359], "belong": [1, 10, 11, 12, 14, 25, 35, 38, 45, 49, 68, 75, 81, 97, 112, 141, 143, 151, 154, 157, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 186, 189, 191, 194, 197, 199, 202, 205, 206, 208, 210, 212, 217, 219, 221, 224, 225, 228, 230, 232, 234, 236, 238, 243, 245, 247, 250, 251, 252, 253, 255, 257, 260, 262, 264, 265, 267, 269, 283, 284, 305, 306, 309, 311, 312, 318, 319, 321, 322, 323, 332, 363], "locat": [1, 5, 6, 9, 11, 14, 19, 38, 50, 114, 115, 120, 141, 290, 309, 311, 313, 325, 330, 332, 333, 335, 339, 342, 345, 347, 352, 358], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 124, 141, 146, 147, 190, 203, 204, 213, 239, 273, 274, 275, 276, 277, 278, 279, 280, 287, 293, 305, 307, 308, 309, 311, 332, 333, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 362], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 61, 63, 96, 112, 115, 120, 122, 124, 138, 141, 273, 276, 279, 280, 283, 284, 290, 306, 308, 309, 311, 313, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 346, 347, 348, 349, 354, 356, 357, 358, 362, 363], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 93, 94, 96, 115, 121, 138, 141, 142, 145, 146, 157, 167, 190, 203, 213, 225, 239, 251, 261, 273, 279, 280, 290, 293, 300, 305, 306, 307, 309, 310, 311, 312, 313, 316, 325, 330, 331, 332, 333, 339, 342, 343, 345, 346, 347, 348, 349, 354, 355, 357, 358, 359, 362, 364], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 93, 94, 138, 141, 157, 167, 225, 251, 287, 290, 305, 307, 309, 311, 313, 332, 333, 339, 342, 346, 347, 348, 349, 351, 353, 354, 355, 356, 358], "There": [1, 5, 6, 13, 273, 279, 280, 287, 304, 305, 307, 309, 312, 313, 329, 332, 333, 334, 335, 336, 337, 338, 340, 352, 358], "wai": [1, 5, 7, 13, 14, 38, 72, 77, 138, 141, 309, 311, 312, 313, 329, 331, 332, 339, 342, 349, 356], "list": [1, 2, 6, 7, 9, 11, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 61, 87, 93, 94, 111, 114, 115, 120, 121, 124, 141, 143, 151, 154, 163, 178, 182, 186, 189, 199, 202, 212, 221, 232, 236, 238, 247, 251, 257, 260, 262, 267, 309, 310, 311, 312, 313, 319, 330, 331, 332, 333, 335, 339, 340, 346, 347, 348, 354, 355, 358, 363, 364], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 112, 120, 121, 138, 141, 283, 284, 286, 293, 299, 301, 305, 306, 307, 309, 310, 311, 313, 326, 330, 332, 333, 335, 339, 356, 357, 362], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 64, 70, 71, 80, 109, 115, 132, 138, 141, 143, 148, 182, 183, 186, 199, 257, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 286, 287, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 319, 320, 328, 330, 332, 333, 339, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 362, 363], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 121, 122, 138, 141, 273, 279, 280, 282, 283, 284, 287, 290, 299, 301, 304, 305, 306, 307, 309, 311, 312, 313, 332, 333, 339, 340, 342, 347, 349, 351, 352, 353, 357, 358, 362, 364], "find": [1, 6, 7, 15, 59, 71, 95, 138, 283, 284, 285, 290, 311, 312, 313, 329, 332, 333, 358], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 124, 138, 141, 290, 292, 294, 295, 296, 297, 302, 303, 304, 306, 309, 311, 312, 325, 328, 331, 332, 333, 335, 339, 340, 342, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 361], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 103, 108, 109, 117, 138, 141, 305, 306, 307, 309, 310, 311, 312, 313, 330, 332, 333, 334, 347, 358, 364], "would": [1, 2, 5, 9, 11, 14, 18, 19, 25, 35, 38, 45, 50, 93, 94, 97, 138, 141, 157, 167, 225, 251, 293, 307, 309, 311, 312, 313, 329, 331, 332, 339, 342, 358], "ident": [1, 2, 5, 18, 165, 173, 181, 293, 300, 309, 310, 312, 318, 332, 345], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 83, 141, 306, 309, 311, 312, 332, 333], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 89, 92, 98, 99, 100, 101, 105, 106, 107, 116, 123, 124, 126, 141, 143, 151, 154, 163, 273, 279, 280, 281, 283, 284, 287, 306, 307, 308, 309, 312, 313, 315, 325, 326, 330, 332, 333, 339, 343, 357, 358, 359, 362], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 70, 138, 141, 290, 309, 313, 330, 332, 333, 342, 349, 356, 358], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 75, 111, 128, 138, 141, 162, 285, 290, 293, 305, 308, 309, 311, 312, 313, 326, 330, 331, 332, 333, 339, 342, 345, 346, 347, 348, 349, 354, 355, 358], "As": [1, 4, 5, 6, 9, 11, 13, 18, 70, 141, 305, 309, 310, 311, 312, 313, 332, 333, 342, 346, 347, 348, 349, 354, 355, 356, 363], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 138, 141, 153, 169, 175, 193, 227, 293, 299, 300, 301, 304, 311, 312, 313, 330, 331, 332, 333, 346, 347, 348, 349, 354, 355, 358, 364], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 63, 64, 110, 111, 112, 113, 115, 138, 293, 308, 309, 311, 313, 330, 331, 332, 333, 334, 335, 336, 337, 340, 343, 345], "proce": [1, 313], "iter": [1, 290, 333], "through": [1, 2, 115, 141, 234, 312, 313, 326, 332, 352], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 60, 68, 70, 71, 99, 106, 116, 118, 122, 131, 138, 143, 148, 157, 194, 206, 265, 282, 283, 284, 285, 286, 288, 289, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 329, 330, 331, 333, 335, 339, 342, 349, 351, 355, 358, 363, 364], "setup_complet": 1, "ha": [1, 5, 6, 9, 11, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 95, 103, 108, 124, 133, 135, 136, 138, 156, 157, 167, 225, 251, 283, 284, 290, 294, 295, 296, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 325, 326, 329, 330, 332, 333, 342, 345, 347, 351, 352, 356, 358], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 103, 115, 120, 133, 135, 136, 138, 141, 143, 150, 156, 189, 202, 212, 221, 238, 247, 260, 262, 267, 290, 306, 309, 311, 312, 313, 325, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 358], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 141, 156, 162, 164, 172, 180, 188, 201, 211, 223, 237, 249, 259, 273, 279, 280, 305, 306, 311, 313, 317, 326, 331, 334, 335, 336, 337, 338, 340, 358], "initi": [1, 7, 8, 38, 124, 141, 146, 163, 165, 166, 170, 173, 176, 181, 190, 194, 203, 206, 213, 217, 219, 224, 228, 230, 239, 243, 245, 250, 252, 253, 255, 265, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 309, 311, 312, 322, 329, 330, 331, 333, 342, 344, 363, 364], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 64, 66, 110, 111, 115, 120, 121, 124, 138, 141, 157, 253, 255, 281, 282, 292, 305, 309, 311, 326, 332, 333, 335, 337, 338, 340, 345, 352], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 69, 76, 138, 141, 172, 180, 196, 305, 306, 309, 311, 312, 330, 331, 332, 342, 346, 347, 348, 349, 354, 355, 364], "skip": [1, 5, 8, 121, 363], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 60, 61, 121, 122, 123, 124, 128, 133, 134, 135, 136, 137, 138, 139, 141, 157, 252, 282, 284, 292, 305, 309, 313, 332, 333, 334, 335, 336, 338, 339, 340, 345, 358, 364], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 60, 64, 110, 121, 138, 141, 160, 278, 283, 284, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 309, 311, 312, 313, 331, 332, 334, 335, 336, 337, 338, 340, 342, 345, 347, 349, 356, 358, 364], "complet": [1, 5, 8, 27, 28, 29, 108, 332, 358], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 60, 138, 141, 156, 251, 309, 311, 312, 313, 332, 333, 339, 342, 346, 347, 348, 354, 355, 358], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 141, 151, 154, 167, 191, 205, 217, 225, 243, 251, 264, 282, 286, 293, 299, 300, 301, 309, 310, 311, 312, 313, 331, 332, 342], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 138, 157, 309, 312, 313, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 358, 364], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 69, 70, 72, 85, 124, 133, 134, 135, 136, 137, 138, 139, 141, 157, 161, 165, 173, 181, 273, 279, 280, 282, 283, 284, 285, 287, 290, 293, 300, 305, 309, 311, 312, 313, 318, 325, 330, 331, 333, 339, 345, 346, 347, 348, 354, 355, 358, 363], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 60, 61, 67, 84, 85, 88, 89, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 143, 146, 147, 148, 150, 151, 154, 157, 161, 163, 169, 172, 175, 180, 190, 203, 204, 213, 227, 239, 272, 282, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 319, 325, 326, 328, 329, 330, 331, 335, 338, 339, 340, 342, 345, 346, 347, 348, 349, 352, 354, 355, 357, 358, 361, 362, 364], "mode": [1, 5, 14, 306, 313, 330, 331, 332, 358], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 138, 141, 165, 173, 181, 290, 293, 309, 312, 313, 318, 325, 330, 332, 333, 339, 340, 345, 346, 347, 348, 354, 355], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 89, 92, 96, 115, 116, 126, 127, 128, 141, 151, 154, 160, 309, 311, 312, 332, 347], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 37, 61, 138, 141, 157, 294, 295, 296, 297, 302, 303, 306, 307, 309, 311, 312, 313, 330, 332, 337, 339, 344, 358, 364], "constructor": [1, 9, 14, 141, 293, 299, 300, 301, 305, 332], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 93, 94, 104, 122, 293, 300, 306, 309, 311, 312, 313, 332, 357, 362, 363], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 60, 89, 116, 127, 128, 138, 141, 151, 154, 160, 169, 175, 227, 311, 312, 332, 333, 358], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 63, 66, 68, 75, 81, 96, 97, 112, 114, 120, 126, 137, 138, 139, 143, 151, 154, 156, 157, 164, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 186, 188, 189, 191, 194, 197, 199, 201, 202, 205, 206, 208, 210, 211, 212, 217, 219, 221, 223, 224, 225, 228, 230, 232, 234, 236, 237, 238, 243, 245, 247, 249, 250, 251, 252, 253, 255, 257, 259, 260, 262, 264, 265, 267, 269, 305, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 321, 322, 323, 326, 330, 331, 332, 333, 339, 341, 344, 363, 364], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 68, 75, 81, 97, 141, 143, 151, 154, 157, 167, 189, 191, 194, 197, 202, 205, 206, 208, 212, 217, 225, 238, 243, 251, 260, 262, 264, 265, 267, 269, 309, 311, 319, 332], "now": [1, 6, 138, 309, 313, 332, 333, 339], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 114, 115, 120, 121, 290, 306, 309, 311, 312, 313, 319, 325, 330, 332, 345, 349, 352, 358, 364], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 138, 141, 293, 309, 313, 329, 332, 342], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 138, 167, 225, 251, 293, 309, 310, 312, 313, 329, 332, 342, 345], "parent": [1, 33, 141, 294, 295, 296, 297, 299, 301, 302, 303, 305, 306, 309], "resid": [1, 5, 9, 40, 141, 143, 189, 202, 212, 238, 260, 262, 267, 307, 309, 311], "insid": [1, 12, 307, 309, 312, 346, 347, 348, 354, 355], "situat": [1, 17, 31, 160, 313, 332, 358], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 38, 39, 40, 121, 290, 293, 300, 305, 307, 309, 311, 312, 313, 330, 332, 333, 345, 358, 363, 364], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 141, 261, 290, 298, 306, 311, 332, 347, 355, 357, 362, 363], "with_viz": [1, 294, 295, 296, 297, 302, 303, 311, 346, 347, 348, 349, 354, 355], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 74, 79, 81, 112, 114, 115, 120, 124, 138, 141, 150, 156, 159, 161, 191, 194, 197, 205, 206, 208, 264, 265, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 308, 309, 311, 312, 313, 325, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 346, 348, 349, 354, 355, 364], "mesh": [1, 5, 7, 10, 17, 25, 38, 85, 86, 97, 99, 106, 123, 124, 143, 144, 146, 147, 151, 152, 154, 155, 157, 158, 159, 161, 163, 166, 168, 170, 186, 189, 190, 191, 192, 194, 197, 199, 202, 203, 204, 205, 206, 208, 212, 213, 214, 217, 218, 219, 221, 226, 228, 238, 239, 240, 243, 244, 245, 247, 250, 252, 253, 257, 260, 262, 264, 265, 267, 269, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 321, 322, 330, 331, 333, 342, 344, 358, 363], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 141, 143, 151, 154, 165, 166, 173, 176, 181, 191, 197, 205, 208, 217, 224, 230, 243, 264, 269, 290, 292, 306, 309, 311, 312, 313, 325, 333, 345, 347, 351, 353, 358], "forward": [1, 5, 7, 9, 14, 38, 141, 143, 151, 154, 163, 166, 174, 176, 197, 208, 230, 250, 252, 269, 290, 306, 309, 311, 312, 322, 325, 333, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 362], "resolut": [1, 9, 13, 14, 17, 68, 71, 75, 76, 80, 98, 102, 105, 141, 143, 144, 148, 150, 151, 154, 156, 165, 166, 167, 170, 173, 174, 176, 178, 181, 186, 189, 191, 199, 202, 205, 212, 217, 219, 221, 230, 236, 238, 243, 245, 247, 257, 260, 262, 264, 267, 283, 284, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 333, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 362, 364], "singl": [1, 5, 8, 9, 19, 124, 138, 249, 250, 252, 253, 255, 304, 309, 311, 312, 317, 318, 319, 321, 322, 323, 325, 326, 330, 332, 339, 343, 346, 347, 348, 350, 351, 353, 354, 355, 359, 360], "analysi": [1, 6, 9, 19, 141, 293, 300, 311, 312, 330, 331, 333, 346, 347, 348, 351, 352, 353, 354, 355, 364], "add": [1, 2, 5, 6, 7, 9, 13, 14, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 74, 79, 84, 116, 117, 118, 127, 128, 131, 132, 138, 141, 150, 156, 164, 169, 175, 188, 201, 211, 223, 227, 237, 249, 259, 305, 306, 309, 311, 312, 313, 317, 330, 332, 333, 338, 340, 346, 347, 348, 354, 355], "remap": [1, 10, 19, 300, 331, 347, 349, 352, 357, 362], "visual": [1, 10, 13, 17, 221, 234, 247, 294, 295, 296, 297, 299, 301, 302, 303, 305, 309, 311, 330, 331, 346, 347, 348, 349, 351, 353, 354, 355, 357, 362], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 120, 138, 291, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 330, 331, 332, 333, 339, 341, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 363, 364], "spheric": [1, 5, 151, 281, 294, 295, 296, 297, 302, 303, 311, 346, 347, 348, 354, 355, 363], "qu": [1, 5, 11, 141, 311, 332, 333, 344, 346, 347, 348, 349, 354, 355, 363], "base_mesh": [1, 5, 13, 68, 75, 143, 156, 194, 197, 206, 208, 264, 265, 269, 309, 311, 332, 346, 347, 348, 354, 355], "60km": [1, 5, 311, 346, 347, 348, 354, 355], "90km": [1, 5], "120km": [1, 5, 311], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 11, 156, 311], "map": [1, 8, 17, 20, 31, 75, 76, 97, 122, 123, 124, 160, 311, 313, 333], "viz": [1, 5, 19, 141, 186, 199, 257, 309, 311, 346, 348, 354, 355], "two": [1, 5, 6, 10, 18, 121, 141, 173, 183, 283, 284, 293, 294, 300, 304, 305, 306, 309, 310, 312, 313, 318, 320, 332, 345, 346, 347, 348, 351, 352, 353, 354, 355, 361], "first": [1, 6, 9, 14, 15, 87, 115, 138, 141, 283, 284, 293, 299, 300, 301, 304, 309, 311, 312, 313, 329, 332, 334, 335, 336, 337, 338, 339, 340, 345, 347, 349, 356, 358], "verbos": [1, 5, 6, 64, 66, 138, 309, 332, 363], "10": [1, 9, 13, 70, 138, 290, 293, 299, 301, 305, 306, 332, 333, 339, 342, 345, 346, 348, 349, 351, 352, 353, 354, 356, 364], "name": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 60, 61, 62, 63, 64, 68, 75, 81, 85, 89, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 113, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 131, 138, 141, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 160, 163, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 190, 191, 194, 197, 203, 204, 205, 206, 208, 213, 217, 224, 225, 228, 230, 232, 239, 243, 251, 257, 260, 261, 262, 264, 265, 267, 269, 272, 282, 305, 306, 309, 311, 312, 313, 319, 321, 323, 330, 332, 333, 340, 345, 358, 363], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 87, 141, 146, 147, 162, 167, 190, 203, 204, 213, 239, 251, 283, 284, 304, 309, 312, 345, 346, 348, 354, 356, 361], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 311, 312, 313, 346, 347, 348, 354, 355], "what": [1, 2, 6, 11, 13, 17, 138, 257, 311, 312, 332, 340, 357, 358, 362], "follow": [1, 4, 5, 7, 9, 11, 13, 14, 19, 67, 138, 143, 273, 279, 280, 290, 292, 309, 310, 311, 313, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 361], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 64, 68, 75, 81, 97, 114, 141, 143, 151, 154, 157, 167, 189, 191, 194, 197, 202, 205, 206, 208, 212, 217, 219, 221, 225, 238, 243, 245, 247, 251, 253, 255, 260, 262, 264, 265, 267, 269, 305, 307, 309, 311, 312, 332, 357, 358, 362, 364], "bold": [1, 311], "elsewher": [1, 313], "tree": [1, 7, 116, 118, 132, 283, 284, 285, 311, 359], "thu": [1, 2, 7, 14, 313, 332, 346, 347, 348, 354, 355], "similar": [1, 2, 5, 9, 12, 13, 14, 134, 137, 138, 139, 141, 305, 307, 312, 313, 332, 333, 342, 346, 348, 354, 355, 358], "had": [1, 138], "maintain": [1, 290, 346, 358], "local": [1, 5, 6, 8, 9, 11, 18, 40, 290, 307, 309, 313, 325, 329, 332, 333, 339, 340, 342], "debug": [1, 8, 133, 134, 135, 136, 137, 138, 139, 332, 335, 336, 340, 346, 354], "easier": [1, 14, 309, 311, 312, 313, 333, 358, 363], "symbol": [1, 60, 309], "link": [1, 2, 7, 9, 11, 14, 40, 46, 53, 60, 138, 305, 309, 311, 313, 332, 338, 339, 343, 358, 359], "were": [1, 48, 61, 138, 251, 288, 289, 309, 312, 330, 332, 333, 337, 342], "even": [1, 6, 12, 13, 14, 40, 57, 138, 309, 312, 313, 332, 333, 339, 358], "compass": [1, 5, 6, 234, 290, 309, 311, 312, 313, 330, 332], "though": [1, 11, 38, 311, 312, 332], "global": [1, 13, 17, 101, 102, 107, 257, 284, 294, 295, 296, 297, 302, 303, 305, 309, 310, 312, 330, 331, 332, 333, 340, 346, 347, 348, 349, 354, 355, 357, 358, 362, 364], "dynamic_adjust": [1, 14, 333], "allow": [1, 2, 6, 8, 17, 18, 25, 35, 38, 45, 57, 121, 138, 141, 157, 283, 284, 309, 330, 332, 333, 339, 342, 346, 347, 348, 354, 355, 356, 364], "one": [1, 2, 5, 6, 7, 10, 11, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 60, 114, 115, 120, 138, 141, 156, 157, 173, 251, 283, 284, 290, 293, 294, 296, 299, 300, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 318, 328, 329, 330, 331, 333, 339, 340, 342, 345, 346, 347, 348, 353, 354, 355, 357, 358, 361, 362, 363, 364], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 85, 141, 150, 172, 180, 287, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 332, 356], "port": [1, 332, 340], "instead": [1, 5, 6, 12, 14, 15, 25, 111, 133, 138, 309, 312, 313, 330, 332, 346, 347, 348, 354, 355, 358, 363], "seri": [1, 14, 141, 178, 184, 232, 295, 297, 299, 328, 332, 344], "indic": [1, 7, 8, 14, 17, 18, 19, 38, 39, 108, 115, 124, 138, 141, 276, 283, 284, 286, 307, 309, 329, 332, 333, 342, 356], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 292, 309, 311, 312, 313, 332, 335, 337, 338, 340, 358], "ran": [1, 109], "ico": [1, 5, 141, 311, 332, 344, 346, 347, 348, 354, 355, 363], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 115, 120, 138, 157, 290, 306, 309, 313, 325, 332, 333, 334, 335, 336, 337, 338, 339, 340, 358], "runtim": [1, 8, 14, 30, 44, 141, 153, 169, 175, 193, 227, 309, 332], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 70, 98, 102, 105, 121, 123, 124, 133, 134, 135, 136, 137, 138, 139, 141, 273, 278, 279, 280, 282, 283, 284, 292, 294, 295, 296, 302, 303, 305, 309, 312, 313, 326, 329, 332, 333, 335, 339, 342, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362], "01": [1, 14, 141, 326, 332, 352, 356, 361], "00": [1, 14, 18, 141, 311, 326, 332, 338, 340, 358], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 358], "02": [1, 335], "59": 1, "icos_map_60km": 1, "20": [1, 176, 230, 293, 300, 310, 332, 345, 352, 356], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 6, 9, 14, 57, 138, 293, 300, 312, 313, 346, 347, 348, 354, 355, 356], "mechan": [1, 309], "prevent": [1, 309], "expect": [1, 2, 12, 17, 138, 141, 306, 309, 313, 332], "affect": [1, 6, 294, 296, 302, 303, 309, 313, 332, 349], "howev": [1, 13, 309, 310, 311, 313, 332], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 68, 121, 138, 141, 151, 154, 166, 167, 172, 176, 180, 191, 205, 217, 225, 230, 243, 250, 251, 252, 264, 287, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 310, 311, 322, 330, 331, 332, 333, 339, 345, 363], "successfulli": [1, 48, 332], "after": [1, 5, 6, 7, 9, 11, 17, 18, 19, 38, 40, 41, 82, 103, 108, 138, 274, 275, 290, 294, 296, 297, 302, 303, 306, 309, 311, 313, 325, 332, 333, 335, 338, 340, 347, 349, 358, 361], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 109, 115, 120, 124, 136, 138, 141, 143, 148, 150, 160, 189, 202, 212, 221, 238, 247, 260, 262, 267, 286, 290, 293, 299, 300, 301, 305, 307, 309, 310, 311, 312, 313, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 354, 355, 358, 363, 364], "remov": [1, 5, 14, 24, 52, 111, 293, 299, 300, 301, 311, 313, 332], "longer": [1, 173, 293, 300, 310, 318, 332, 345, 346, 347, 348, 349, 354, 355], "about": [1, 5, 6, 7, 8, 12, 14, 38, 97, 126, 141, 305, 309, 311, 312, 313, 332, 333, 335, 349, 355], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 50, 57, 76, 138, 141, 169, 175, 227, 290, 294, 295, 296, 297, 302, 303, 306, 309, 311, 312, 313, 325, 326, 329, 331, 332, 333, 334, 339, 340, 342, 345, 346, 347, 348, 354, 355, 358, 363], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 138, 141, 290, 292, 306, 309, 310, 311, 312, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340, 343, 358], "enforc": [1, 292, 313], "framework": [1, 5, 7, 9, 12, 13, 14, 110, 290, 305, 306, 309, 311, 325, 330, 331, 332, 343, 356, 357, 359, 362, 364], "propos": [1, 2], "close": [1, 6, 71, 138, 331, 346, 347, 348, 354, 355], "root": [1, 40, 138, 290, 306, 309, 312, 313, 325, 330, 333, 334, 335, 336, 337, 338, 339, 340, 342, 358], "live": [1, 50, 311, 358], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 69, 76, 77, 80, 83, 97, 103, 121, 141, 157, 173, 182, 214, 240, 273, 279, 280, 282, 283, 284, 287, 289, 294, 295, 296, 297, 302, 303, 306, 307, 309, 311, 312, 318, 319, 339, 342, 345, 346, 349, 351, 352, 353], "think": [1, 5, 332], "condit": [1, 7, 38, 141, 146, 166, 170, 190, 194, 203, 206, 213, 217, 219, 228, 239, 243, 245, 250, 252, 253, 255, 265, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 309, 310, 311, 312, 322, 328, 330, 331, 333, 344, 363, 364], "shown": [1, 14, 19, 138, 307, 356], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 61, 72, 75, 77, 98, 102, 103, 105, 114, 115, 120, 124, 133, 134, 135, 136, 137, 138, 139, 141, 281, 283, 284, 287, 290, 293, 299, 300, 301, 305, 306, 307, 309, 310, 311, 312, 313, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 353, 354, 355, 358, 363, 364], "simpli": [1, 14, 18, 57, 138, 166, 306, 309, 311, 313, 332, 342, 358, 363], "prefer": [1, 2, 138, 309, 310, 332, 333], "convent": [1, 309, 313, 332], "futur": [1, 13, 44, 124, 309, 312, 330, 331, 332, 333, 349, 356, 358, 364], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 121, 138, 141, 157, 290, 304, 306, 309, 312, 313, 315, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 353, 356, 358, 363, 364], "independ": [1, 2, 5, 6, 310, 330], "yyyi": 2, "mm": [2, 141, 162], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 80, 81, 85, 86, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 131, 132, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 157, 158, 162, 165, 166, 167, 168, 170, 172, 173, 174, 176, 178, 180, 181, 182, 184, 186, 189, 190, 191, 192, 194, 197, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 217, 218, 219, 221, 224, 225, 226, 228, 230, 232, 234, 236, 238, 239, 243, 244, 245, 247, 250, 251, 252, 253, 255, 257, 260, 261, 262, 264, 265, 267, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 315, 316, 319, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 364], "purpos": [2, 305, 312, 332, 364], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 76, 122, 123, 128, 138, 141, 157, 160, 234, 271, 273, 279, 280, 290, 294, 295, 296, 297, 302, 303, 304, 305, 306, 309, 310, 312, 313, 325, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 362], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 60, 75, 76, 81, 87, 93, 94, 97, 101, 107, 108, 110, 111, 116, 118, 121, 124, 127, 132, 133, 135, 136, 138, 141, 146, 147, 151, 153, 154, 156, 157, 165, 166, 167, 169, 170, 173, 174, 175, 176, 178, 181, 182, 184, 190, 193, 203, 204, 213, 224, 225, 227, 228, 230, 232, 239, 251, 273, 279, 280, 282, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 319, 321, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364], "summar": 2, "process": [2, 6, 8, 14, 33, 93, 94, 132, 309, 312, 313, 325, 330, 331, 332], "It": [2, 5, 6, 9, 14, 17, 38, 44, 122, 141, 294, 295, 296, 297, 299, 301, 302, 303, 305, 309, 310, 311, 312, 313, 330, 332, 333, 339, 347, 351, 353, 354, 355], "code": [2, 5, 7, 9, 12, 14, 38, 141, 290, 305, 306, 309, 310, 311, 315, 325, 330, 331, 333, 341, 345, 356, 358], "do": [2, 5, 9, 11, 14, 17, 18, 127, 138, 141, 305, 309, 311, 313, 329, 330, 331, 332, 339, 346, 347, 348, 349, 354, 355, 358], "doe": [2, 6, 9, 12, 14, 309, 315, 331, 332, 339], "primari": [2, 5, 9, 332, 363], "challeng": 2, "respect": [2, 8, 9, 14, 19, 141, 144, 283, 284, 309, 312, 346, 347, 348, 354, 355, 357, 362], "softwar": [2, 85, 338, 340, 358], "appropri": [2, 5, 6, 14, 15, 26, 80, 86, 138, 141, 290, 293, 299, 300, 301, 304, 306, 307, 309, 313, 325, 331, 332, 333, 339, 357, 358, 362], "final": [2, 5, 6, 7, 8, 138, 283, 284, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 311, 328, 332, 347, 354], "statement": [2, 12, 309, 330], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 75, 121, 141, 172, 180, 217, 243, 271, 290, 292, 293, 299, 300, 301, 304, 306, 309, 313, 325, 331, 332, 333, 339, 346, 347, 348, 349, 351, 353, 354, 355, 358], "regard": 2, "last": [2, 310, 313, 345, 358], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 116, 118, 141, 157, 177, 231, 293, 299, 300, 301, 309, 311, 313, 331, 332, 333, 345, 358], "your": [2, 4, 5, 6, 11, 138, 290, 312, 313, 325, 329, 332, 333, 334, 335, 339, 340, 346, 347, 348, 354, 355, 358], "appear": [2, 138, 309, 332], "under": [2, 17, 38, 39, 138, 141, 292, 309, 310, 313, 331, 342, 364], "head": [2, 292, 335], "correspond": [2, 6, 7, 121, 138, 141, 143, 286, 290, 309, 313, 325, 345], "discuss": [2, 6, 141, 294, 295, 296, 297, 302, 303, 309, 312, 332, 345], "technic": [2, 7], "issu": [2, 6, 309, 310, 313], "focu": [2, 332], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 115, 120, 126, 131, 133, 134, 135, 136, 137, 138, 139, 147, 151, 153, 154, 165, 167, 169, 173, 174, 175, 176, 181, 193, 204, 227, 230, 251, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 309, 310, 312, 313, 318, 325, 329, 330, 331, 333, 339, 345, 351, 353, 357], "To": [2, 5, 6, 12, 17, 18, 121, 137, 138, 139, 141, 290, 309, 312, 313, 325, 326, 332, 334, 335, 339, 342, 346, 347, 348, 354, 355, 358], "extent": [2, 13, 17, 332, 345], "possibl": [2, 8, 11, 71, 141, 292, 294, 295, 296, 297, 302, 303, 309, 310, 311, 312, 331, 332, 342, 349], "other": [2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 38, 39, 41, 49, 57, 108, 124, 133, 183, 288, 289, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 311, 312, 313, 320, 329, 330, 331, 333, 345, 346, 347, 348, 354, 355, 364], "clean": [2, 4, 5, 6, 115, 120, 309, 311, 313], "plan": [2, 13, 141, 290, 299, 301, 309, 325, 330, 334, 335, 336, 337, 338, 340, 351, 353, 364], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 115, 133, 138, 141, 145, 146, 190, 203, 213, 239, 261, 292, 293, 299, 300, 301, 304, 309, 312, 313, 332, 333, 343, 346, 347, 348, 349, 351, 353, 354, 355, 358, 359, 364], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 133, 134, 135, 136, 137, 138, 139, 141, 290, 306, 309, 311, 312, 313, 325, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 354, 355, 358, 363, 364], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 97, 101, 107, 121, 127, 138, 141, 157, 162, 167, 225, 251, 283, 284, 290, 293, 299, 300, 301, 304, 305, 306, 307, 309, 310, 311, 312, 313, 325, 328, 329, 330, 331, 332, 333, 339, 343, 347, 354, 357, 358], "intend": [2, 6, 8, 9, 310, 333, 353, 364], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 64, 121, 281, 292, 294, 295, 296, 297, 302, 303, 307, 309, 312, 313, 329, 332, 349, 358], "pde": 2, "solver": [2, 311, 313, 331, 358], "well": [2, 6, 9, 12, 13, 138, 141, 276, 286, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 313, 330, 332, 333, 347, 358, 364], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 60, 85, 89, 94, 98, 99, 100, 101, 102, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 121, 124, 127, 128, 131, 132, 138, 143, 146, 147, 153, 157, 160, 167, 189, 193, 196, 197, 202, 204, 208, 212, 213, 221, 225, 238, 239, 247, 260, 262, 267, 269, 277, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 311, 312, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 361, 362, 363, 364], "low": [2, 124, 349], "variabl": [2, 5, 11, 13, 19, 20, 25, 38, 41, 48, 49, 57, 68, 75, 81, 85, 97, 98, 102, 105, 121, 124, 126, 127, 132, 138, 141, 143, 144, 145, 146, 147, 148, 151, 154, 157, 163, 167, 170, 176, 178, 182, 186, 190, 197, 199, 203, 204, 208, 212, 213, 214, 217, 219, 221, 225, 230, 232, 236, 238, 239, 240, 243, 245, 247, 251, 257, 260, 261, 262, 267, 269, 273, 279, 280, 286, 287, 292, 304, 309, 312, 313, 319, 320, 325, 329, 332, 339, 343, 345, 357, 358, 359, 362], "declar": [2, 7], "interfac": [2, 10, 271, 272, 273, 279, 280, 282, 287, 312, 313, 331, 332, 342], "sequenc": [2, 5, 14, 141, 281, 294, 295, 296, 297, 302, 303, 308, 309, 312, 330, 332, 358, 363, 364], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 60, 93, 94, 95, 97, 108, 121, 124, 133, 134, 135, 136, 137, 138, 139, 141, 157, 162, 167, 225, 251, 293, 300, 309, 311, 312, 313, 326, 329, 330, 332, 333, 339, 340, 342, 346, 347, 348, 349, 354, 355, 357, 358, 362], "want": [2, 5, 6, 11, 14, 17, 18, 51, 138, 141, 309, 311, 313, 329, 332, 333, 339, 340, 356, 358, 364], "math": 2, "syntax": [2, 141, 332], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 313, 330, 332, 358], "2": [2, 6, 13, 14, 15, 18, 39, 124, 138, 141, 181, 292, 293, 296, 302, 303, 307, 310, 313, 319, 326, 332, 333, 335, 339, 342, 343, 345, 347, 349, 350, 351, 352, 353, 358], "2ab": 2, "imag": [2, 7, 19, 122, 123, 124, 282, 305, 332, 357, 362], "keep": [2, 5, 6, 9, 14, 25, 57, 294, 295, 296, 297, 302, 303, 305, 306, 309, 311, 313, 332, 357, 362], "mind": [2, 5, 332], "quit": [2, 307, 309, 311, 332], "small": [2, 9, 44, 138, 283, 284, 305, 309, 332, 334, 335, 341, 342, 354, 356, 358], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 61, 80, 93, 94, 97, 110, 111, 112, 115, 124, 128, 138, 141, 143, 157, 162, 167, 225, 251, 273, 276, 279, 280, 281, 283, 284, 285, 287, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364], "png": [2, 13, 19, 282, 294, 295, 296, 297, 302, 303, 309, 332], "okai": [2, 6, 309, 332], "size": [2, 13, 19, 70, 71, 80, 123, 124, 141, 159, 161, 163, 282, 305, 332, 333, 345, 347, 349, 351, 352, 353, 356, 357, 362], "repo": [2, 5, 6, 138, 290, 325, 331, 332, 359], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 138, 141, 305, 306, 307, 309, 310, 311, 312, 313, 329, 330, 332, 333, 335, 342, 357, 358, 363, 364], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 309, 311, 313, 332], "sourc": [2, 6, 7, 11, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 309, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 332, 333, 339, 340, 358], "project": [2, 5, 6, 7, 67, 101, 107, 290, 312, 313, 325, 326, 332, 333, 334, 335, 339, 358, 359], "manag": [2, 329, 339], "item": [2, 332], "git": [2, 6, 16, 96, 290, 313, 325, 332, 333, 358], "branch": [2, 5, 138, 290, 306, 309, 313, 325, 331, 332, 358], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 309, 313, 339], "block": [2, 311], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 98, 102, 105, 137, 138, 139, 141, 305, 307, 309, 311, 312, 313, 329, 331, 332, 333, 339, 345, 346, 347, 348, 349, 354, 355, 358, 364], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 141, 305, 306, 309, 311, 312, 332], "example_funct": 2, "foo": [2, 312], "return": [2, 7, 15, 31, 48, 56, 59, 62, 69, 70, 71, 76, 80, 86, 87, 89, 92, 93, 103, 112, 113, 115, 116, 118, 121, 124, 127, 131, 132, 141, 144, 145, 146, 147, 152, 155, 156, 158, 160, 162, 163, 168, 190, 192, 196, 203, 204, 213, 215, 216, 218, 226, 239, 241, 242, 244, 261, 271, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 289, 311, 312, 332, 347], "how": [2, 5, 6, 12, 14, 75, 141, 308, 309, 311, 312, 313, 333, 339, 340], "show": [2, 7, 13, 61, 281, 282, 309, 332, 339, 340, 345, 346, 347, 348, 349, 354, 355, 357, 362], "met": 2, "regress": [2, 293, 294, 295, 296, 297, 300, 302, 303, 310, 330, 331, 332, 345, 347, 358, 363], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 63, 92, 93, 94, 95, 96, 115, 120, 138, 141, 199, 257, 271, 273, 274, 275, 279, 280, 309, 312, 313, 331, 332, 333, 335, 338, 339, 340, 342, 351, 353, 357, 358, 362, 364], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 63, 96, 110, 112, 115, 120, 136, 138, 172, 180, 197, 208, 269, 307, 308, 309, 310, 311, 312, 313, 329, 330, 332, 333, 339, 346, 347, 348, 349, 354, 355, 356, 358, 364], "properli": [2, 133, 135, 136, 332, 333, 358], "addit": [2, 7, 9, 18, 38, 141, 287, 288, 289, 304, 305, 306, 307, 309, 311, 312, 313, 332, 349, 352], "modif": [2, 6, 7, 309, 326], "nightli": [2, 313, 358, 363], "might": [2, 6, 11, 14, 17, 19, 138, 141, 285, 305, 309, 313, 332, 333, 339, 358], "made": [2, 5, 17, 38, 41, 49, 121, 309, 311, 312, 313, 326, 328, 330, 332, 364], "continu": [2, 6, 309, 332], "page": [3, 7, 138, 334], "auto": 3, "summari": [3, 335], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 76, 114, 115, 138, 141, 292, 293, 294, 295, 296, 297, 302, 303, 305, 307, 309, 310, 311, 312, 313, 330, 339, 343, 345, 349, 357, 358, 359, 362, 364], "relev": [3, 7, 9, 141, 294, 295, 296, 297, 299, 301, 302, 303, 332, 334, 335, 336, 337, 338, 339, 340, 357, 358, 362], "seaic": [3, 10, 20, 40, 306, 309, 328, 330, 331, 358, 359, 362, 364], "long": [4, 25, 35, 38, 45, 93, 94, 157, 167, 225, 251, 309, 332, 345, 358], "procedur": [4, 138, 313, 332, 340], "conda": [4, 5, 16, 96, 133, 135, 136, 138, 290, 306, 312, 325, 331, 332, 333, 334, 335, 336, 337, 338, 340], "environ": [4, 5, 11, 133, 135, 136, 290, 306, 312, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "spack": [4, 5, 133, 135, 136, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340], "compil": [4, 5, 6, 14, 133, 134, 135, 136, 137, 138, 139, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 358], "system": [4, 5, 6, 25, 35, 38, 45, 93, 94, 95, 133, 135, 136, 138, 157, 167, 225, 251, 309, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 358], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 67, 89, 116, 133, 135, 136, 138, 141, 151, 154, 305, 306, 307, 309, 311, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 358], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 61, 76, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 112, 114, 115, 116, 118, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 153, 169, 172, 175, 180, 187, 193, 200, 227, 251, 258, 273, 279, 280, 283, 284, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 311, 312, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 362, 363], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 82, 96, 108, 109, 112, 114, 115, 120, 121, 133, 134, 135, 136, 137, 138, 139, 141, 172, 180, 283, 284, 285, 287, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 308, 309, 311, 312, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 346, 347, 348, 354, 355, 357, 362, 363, 364], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 89, 96, 116, 120, 127, 138, 141, 151, 154, 305, 306, 307, 308, 309, 311, 313, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 358], "Then": [4, 6, 7, 11, 14, 133, 134, 135, 136, 137, 138, 139, 290, 293, 299, 300, 301, 304, 306, 309, 311, 313, 325, 332, 339, 345, 349, 358], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 67, 92, 93, 94, 103, 115, 120, 136, 138, 143, 151, 153, 154, 157, 166, 167, 169, 173, 175, 178, 182, 184, 189, 191, 193, 202, 205, 212, 217, 221, 225, 227, 232, 238, 243, 247, 250, 251, 252, 260, 262, 264, 267, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 307, 308, 310, 311, 312, 318, 319, 322, 325, 328, 329, 330, 331, 332, 333, 339, 344, 363, 364], "script": [4, 5, 6, 11, 12, 19, 54, 63, 134, 137, 138, 139, 312, 330, 331, 332, 335, 339], "doc": [4, 7, 332, 340], "cd": [4, 6, 290, 313, 325, 332, 335, 358], "html": [4, 343], "view": [4, 299, 301, 313, 351, 353], "open": [4, 6, 313, 332], "_build": 4, "index": [4, 15, 18, 87, 141, 143, 144, 146, 147, 148, 190, 203, 204, 213, 239, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 305, 332, 342], "act": [5, 312, 342], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 123, 138, 165, 166, 293, 299, 300, 301, 304, 306, 309, 311, 332, 333, 339, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 358], "These": [5, 6, 8, 9, 14, 20, 38, 138, 141, 290, 292, 306, 309, 311, 312, 313, 325, 326, 331, 332, 333, 339, 345, 349, 353, 354, 358, 363, 364], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 63, 96, 138, 141, 150, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 310, 311, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 354, 355, 359], "describ": [5, 7, 14, 17, 19, 96, 116, 118, 132, 141, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 347, 348, 349, 354, 358], "instal": [5, 6, 138, 313, 332, 339, 340, 358], "abov": [5, 7, 14, 18, 19, 138, 287, 305, 307, 309, 310, 311, 312, 313, 332, 333, 346, 347, 348, 349, 354, 356, 358, 363], "off": [5, 6, 313, 329], "http": [5, 7, 11, 14, 60, 309, 312, 329, 331, 332, 333, 340, 343, 352, 358, 359], "github": [5, 6, 7, 312, 313, 331, 332, 333, 343, 358, 359], "com": [5, 6, 7, 14, 60, 312, 313, 331, 332, 333, 358, 359], "e3sm": [5, 7, 10, 11, 38, 126, 138, 290, 306, 309, 310, 312, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 359], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 60, 68, 69, 75, 76, 81, 97, 104, 114, 115, 120, 126, 138, 141, 143, 151, 154, 156, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 186, 189, 191, 194, 197, 199, 202, 205, 206, 208, 210, 212, 214, 217, 219, 221, 224, 225, 228, 230, 232, 234, 236, 238, 240, 243, 245, 247, 250, 251, 252, 253, 255, 257, 260, 262, 264, 265, 267, 269, 273, 279, 280, 294, 295, 296, 297, 302, 303, 304, 305, 309, 310, 311, 312, 318, 319, 321, 322, 323, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 354, 355, 358, 363], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 133, 135, 136, 138, 281, 293, 294, 295, 296, 297, 300, 301, 302, 303, 309, 313, 329, 332, 333, 339, 343, 344, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 359, 361, 363, 364], "mean": [5, 282, 313, 332, 342, 345, 346, 347, 348, 349, 352, 354, 355, 363], "chang": [5, 6, 8, 11, 17, 61, 75, 108, 109, 141, 150, 290, 306, 309, 310, 311, 312, 313, 325, 330, 332, 333, 335, 340, 342, 345, 346, 347, 348, 352, 354, 355, 358, 363], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 67, 103, 110, 124, 138, 141, 283, 284, 285, 288, 289, 293, 299, 300, 301, 304, 306, 309, 310, 311, 312, 313, 329, 330, 331, 332, 333, 339, 340, 358], "tool": [5, 6, 9, 12, 14, 17, 290, 306, 309, 313, 325, 331, 332, 333], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 63, 76, 85, 90, 93, 94, 97, 103, 110, 121, 122, 123, 124, 125, 126, 127, 132, 133, 137, 138, 139, 141, 143, 144, 145, 146, 148, 152, 155, 157, 158, 159, 160, 161, 162, 167, 168, 169, 175, 182, 186, 190, 192, 199, 203, 213, 218, 225, 226, 227, 236, 237, 239, 244, 251, 257, 261, 262, 267, 271, 273, 274, 275, 279, 280, 281, 282, 283, 284, 286, 287, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 319, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 64, 67, 73, 78, 92, 93, 94, 96, 97, 110, 111, 112, 114, 115, 120, 138, 141, 157, 159, 161, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 313, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 359, 363], "support": [5, 6, 8, 13, 17, 38, 141, 273, 279, 280, 292, 309, 312, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 345, 356, 364], "machin": [5, 8, 9, 11, 38, 40, 62, 63, 96, 114, 115, 120, 290, 309, 312, 325, 331, 332, 333, 334, 335, 336, 337, 338, 340], "option": [5, 7, 9, 11, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 74, 75, 76, 79, 81, 85, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 138, 144, 146, 147, 150, 151, 153, 154, 157, 160, 162, 167, 169, 175, 177, 187, 190, 193, 200, 203, 204, 213, 214, 224, 225, 227, 230, 231, 239, 240, 251, 253, 255, 258, 271, 273, 274, 275, 279, 280, 281, 282, 283, 284, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 321, 325, 326, 329, 331, 333, 342, 344, 358, 364], "help": [5, 6, 13, 138, 305, 306, 307, 309, 313, 331, 332, 339, 343, 359], "usag": [5, 15, 19, 311, 333, 335, 340], "h": [5, 14, 332, 349], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 132, 138, 141, 143, 148, 215, 216, 241, 242, 251, 294, 295, 296, 297, 302, 303, 309, 311, 312, 313, 329, 332, 333, 335, 337, 338, 339, 344, 345, 346, 348, 351, 353, 354, 358, 363, 364], "n": [5, 6, 69, 76, 77, 83, 309, 332, 335, 339, 340, 345, 347, 349, 351, 352, 353, 357, 358, 362], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 92, 93, 94, 97, 115, 138, 141, 152, 155, 157, 158, 159, 161, 167, 168, 182, 192, 214, 218, 225, 226, 240, 244, 251, 290, 293, 299, 300, 301, 305, 309, 310, 311, 312, 319, 330, 332, 333, 339, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 362], "v": [5, 313, 332, 346, 348, 349, 351, 353, 354, 363], "By": [5, 14, 18, 39, 40, 141, 290, 306, 309, 311, 325, 332, 333, 345, 347, 356], "default": [5, 7, 9, 11, 14, 15, 18, 19, 25, 39, 40, 49, 55, 63, 76, 81, 87, 88, 96, 97, 98, 102, 105, 111, 115, 117, 120, 124, 133, 135, 136, 138, 141, 145, 146, 167, 190, 203, 213, 225, 239, 290, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 309, 311, 313, 325, 326, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 347, 348, 354, 355, 356, 357, 358, 362, 364], "planar": [5, 9, 124, 141, 283, 292, 306, 309, 332, 351, 352, 353, 356, 357, 362, 363, 364], "baroclinic_channel": [5, 7, 9, 14, 18, 224, 230, 290, 298, 305, 306, 309, 312, 332, 345, 358, 363, 364], "10km": [5, 18, 293, 332, 345, 358, 363, 364], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 70, 133, 134, 135, 136, 138, 139, 141, 165, 167, 181, 225, 250, 251, 252, 273, 279, 280, 282, 283, 284, 293, 294, 295, 296, 299, 301, 302, 303, 304, 306, 307, 309, 311, 313, 326, 329, 332, 333, 335, 338, 339, 340, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358], "decomp": [5, 306, 332, 358, 363], "displai": [5, 8, 282, 340], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 60, 64, 67, 96, 112, 114, 115, 120, 121, 124, 138, 143, 290, 306, 309, 311, 312, 313, 319, 325, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 358, 364], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 60, 61, 63, 96, 97, 110, 112, 114, 115, 120, 121, 138, 157, 165, 166, 167, 170, 172, 173, 174, 176, 178, 180, 181, 182, 184, 197, 208, 224, 225, 228, 230, 232, 251, 269, 290, 293, 300, 306, 308, 309, 310, 311, 312, 313, 319, 321, 323, 325, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 354, 355, 358, 364], "messag": [5, 8, 138, 309, 329, 340], "task_expr": [5, 64], "flag": [5, 6, 138, 309, 312, 329, 330, 332, 333, 338, 343, 345, 352, 358, 359], "suppli": [5, 6, 7, 15, 18, 124, 132, 138, 309, 313, 332], "substr": [5, 138], "regular": [5, 19, 64, 69, 76, 186, 199, 257, 262, 267, 332, 334, 337, 339, 340, 349, 358], "express": [5, 64], "subset": 5, "search": [5, 64, 335], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 70, 80, 86, 89, 93, 94, 111, 116, 118, 121, 127, 141, 143, 144, 147, 148, 156, 157, 176, 204, 230, 276, 283, 284, 287, 293, 300, 304, 309, 311, 329, 331, 332, 333, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 362, 363], "pass": [5, 8, 9, 12, 13, 14, 18, 80, 121, 122, 141, 305, 306, 309, 311, 312, 313, 330, 358], "similarli": [5, 8, 124, 137, 139, 287, 290, 309, 311, 313, 339, 358], "result": [5, 13, 18, 59, 71, 80, 138, 141, 165, 173, 178, 181, 184, 232, 255, 283, 284, 285, 288, 289, 293, 294, 295, 296, 297, 300, 302, 303, 309, 310, 312, 313, 318, 323, 330, 332, 333, 345, 346, 347, 348, 349, 354, 355, 357, 362, 363], "descript": [5, 7, 332, 333, 343, 359], "short": [5, 166, 250, 252, 309, 310, 311, 312, 322, 332, 345], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 63, 92, 93, 94, 120, 138, 141, 142, 157, 165, 166, 250, 252, 293, 300, 304, 305, 306, 309, 310, 311, 312, 326, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 358, 363], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 120, 122, 123, 124, 138, 141, 143, 157, 292, 309, 311, 313, 332, 342, 349, 364], "built": [5, 6, 14, 115, 120, 138, 290, 306, 313, 325, 331, 333, 339, 358], "standalon": [5, 14, 136, 138, 306, 313, 330, 331, 339, 359], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 38, 40, 67, 85, 99, 106, 116, 118, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 157, 160, 163, 214, 225, 240, 257, 272, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 309, 312, 313, 316, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 349, 351, 356, 357, 358, 359, 362, 363, 364], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 115, 120, 138, 309, 311, 312, 313, 329, 332, 335, 338, 340, 342, 346, 347, 348, 349, 354, 355, 358], "num": 5, "f": [5, 9, 11, 18, 141, 196, 306, 309, 311, 312, 313, 332, 333, 340, 345, 349, 351, 358], "m": [5, 6, 14, 69, 76, 77, 83, 283, 284, 293, 300, 304, 305, 313, 332, 334, 335, 336, 337, 338, 340, 342, 345, 347, 348, 349, 354, 356, 358], "mach": [5, 9, 11, 38, 138, 331, 334, 335, 336, 337, 338, 339, 340, 358], "w": [5, 6, 313, 330, 332, 358], "p": [5, 6, 313, 332, 333, 358], "suite_nam": [5, 8, 111, 113, 115, 120, 358], "copy_execut": [5, 115, 120, 358], "specifi": [5, 6, 14, 17, 18, 19, 40, 138, 141, 292, 309, 313, 328, 332, 333, 338, 340, 345, 346, 347, 348, 354, 355, 357, 358, 362], "sever": [5, 6, 12, 138, 141, 305, 309, 311, 312, 313, 331, 332, 352, 357, 358, 363], "onc": [5, 6, 14, 41, 283, 284, 293, 313, 332, 333, 346, 347, 348, 354, 355, 358], "separ": [5, 7, 9, 14, 17, 18, 19, 143, 309, 310, 330, 332, 346, 347, 348, 354, 355, 358], "space": [5, 6, 7, 9, 13, 138, 299, 301, 309, 313, 332, 335, 339, 342, 349, 358], "altern": [5, 13, 309, 326, 358], "task_numb": 5, "multipl": [5, 9, 14, 138, 291, 310, 311, 312, 313, 332, 339, 345, 358], "test": [5, 7, 8, 9, 19, 49, 50, 55, 63, 92, 93, 94, 113, 121, 138, 142, 143, 149, 151, 154, 164, 166, 167, 173, 174, 176, 177, 178, 179, 181, 186, 187, 188, 189, 191, 194, 197, 198, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 214, 217, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 316, 317, 318, 321, 322, 323, 324, 325, 328, 330, 331, 337, 339, 340, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363], "requir": [5, 6, 8, 14, 25, 35, 38, 39, 45, 97, 141, 157, 167, 225, 251, 290, 305, 306, 309, 310, 311, 312, 313, 325, 326, 329, 331, 332, 333, 338, 339, 342, 343, 357, 358, 359, 362, 364], "few": [5, 13, 14, 25, 35, 38, 45, 93, 94, 138, 157, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 312, 332, 333, 339], "basic": [5, 7, 333, 335, 339, 349, 358], "piec": [5, 305, 306, 332], "abl": [5, 6, 133, 134, 135, 136, 137, 139, 141, 309, 310, 313, 332, 339, 358], "place": [5, 6, 14, 122, 138, 305, 309, 311, 326, 332, 339], "download": [5, 6, 8, 10, 38, 40, 47, 61, 138, 172, 180, 311, 312, 313, 333, 358, 363], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 138, 141, 283, 284, 292, 294, 295, 296, 297, 302, 303, 305, 307, 309, 311, 312, 313, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 358, 359, 363, 364], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 103, 116, 118, 119, 122, 123, 124, 126, 132, 138, 141, 273, 279, 280, 281, 283, 284, 286, 288, 289, 309, 313, 331, 333, 334, 335, 336, 337, 338, 339, 358, 363, 364], "r": [5, 196, 340, 346, 347, 348, 354], "tell": [5, 6, 138, 313], "re": [5, 6, 9, 311, 312, 313, 330, 332, 333, 339, 340, 346, 347, 348, 354, 355], "leav": [5, 19, 333, 347], "unknown": [5, 138, 312, 339], "component_path": [5, 9, 115, 120, 290, 306, 325, 333, 358], "absolut": [5, 9, 38, 40, 57, 115, 120, 290, 306, 309, 313, 325, 358], "landic": [5, 6, 12, 20, 40, 67, 120, 305, 306, 308, 309, 311, 313, 330, 331, 332, 333, 358, 364], "e3sm_submodul": [5, 290, 306, 313, 325, 326, 332], "mali": [5, 138, 306, 309, 313, 330, 332, 333, 358, 364], "dev": [5, 6, 7, 294, 296, 297, 302, 303, 305, 306, 308, 309, 312, 313, 331, 332, 343, 358, 359], "albani": [5, 133, 135, 136, 138, 306, 333, 358], "depend": [5, 14, 17, 19, 38, 39, 47, 108, 109, 138, 141, 143, 172, 180, 189, 202, 212, 238, 260, 262, 267, 311, 313, 330, 331, 332, 333, 339, 340, 342, 346, 347, 348, 354, 355, 358, 364], "whether": [5, 8, 13, 14, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 60, 61, 64, 110, 111, 115, 120, 121, 122, 123, 124, 128, 138, 141, 153, 156, 157, 169, 175, 186, 193, 199, 227, 251, 253, 255, 257, 262, 267, 281, 282, 284, 299, 301, 305, 309, 311, 313, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 362], "omega": [5, 31, 126, 157, 160, 214, 240, 290, 306, 312, 313, 330, 332, 343, 349, 351, 353, 358], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 62, 63, 74, 76, 79, 92, 93, 94, 95, 96, 112, 114, 115, 120, 122, 123, 126, 127, 128, 129, 131, 132, 150, 151, 153, 154, 157, 160, 162, 169, 175, 176, 186, 187, 193, 199, 200, 214, 227, 230, 240, 257, 258, 271, 273, 274, 275, 279, 280, 290, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 309, 310, 311, 312, 313, 325, 326, 329, 331, 342, 358, 364], "point": [5, 6, 9, 54, 60, 100, 138, 283, 284, 287, 290, 292, 305, 306, 311, 312, 313, 325, 332, 333, 339, 354, 358], "much": [5, 6, 14, 309, 332], "config_fil": [5, 9, 115, 120], "work_dir": [5, 11, 38, 49, 63, 96, 114, 115, 120, 121, 309, 311, 332], "recommend": [5, 7, 11, 19, 138, 309, 310, 312, 313, 332, 339], "itself": [5, 6, 7, 9, 38, 46, 53, 305, 306, 308, 309, 311, 313, 332, 358], "temp": 5, "scratch": [5, 6, 313, 332, 335, 340, 358], "avoid": [5, 309, 332], "confus": [5, 14, 312, 313, 332], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 84, 85, 94, 97, 110, 111, 121, 123, 141, 143, 147, 148, 151, 154, 157, 163, 172, 180, 182, 183, 189, 197, 202, 204, 208, 212, 221, 238, 247, 260, 262, 267, 269, 272, 287, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 311, 319, 320, 328, 330, 333, 340, 346, 347, 348, 349, 354, 355, 358, 363], "compar": [5, 10, 18, 38, 41, 48, 114, 115, 120, 121, 141, 182, 183, 251, 294, 295, 296, 297, 302, 303, 304, 309, 310, 311, 312, 313, 319, 320, 328, 330, 332, 344, 345, 352, 358, 361, 363], "previou": [5, 124, 183, 309, 313, 320, 332, 344, 358, 363], "same": [5, 6, 7, 9, 14, 18, 38, 39, 40, 48, 121, 123, 138, 141, 145, 146, 190, 203, 213, 239, 261, 293, 300, 304, 305, 307, 309, 310, 311, 312, 313, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 354, 355, 356, 358, 363, 364], "baseline_dir": [5, 38, 114, 115, 120, 309], "mani": [5, 6, 8, 9, 141, 305, 307, 309, 311, 312, 313, 331, 332, 345, 357, 362], "valid": [5, 10, 19, 38, 41, 48, 124, 141, 151, 154, 273, 274, 275, 276, 277, 278, 279, 280, 287, 299, 301, 304, 309, 312, 313, 331, 342, 345], "timer": [5, 18, 38, 309, 310, 312], "both": [5, 6, 7, 8, 13, 14, 30, 124, 138, 141, 162, 169, 175, 227, 282, 293, 305, 306, 308, 309, 313, 331, 332, 333, 344, 347, 351, 353, 356], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 115, 120, 290, 306, 313, 325, 333, 340, 358], "give": [5, 6, 14, 18, 138, 309, 312, 313, 332, 333, 358], "predefin": 5, "so": [5, 6, 7, 9, 11, 12, 13, 14, 18, 19, 25, 37, 61, 108, 138, 141, 157, 273, 279, 280, 290, 293, 299, 300, 301, 305, 306, 309, 311, 312, 313, 325, 330, 332, 333, 338, 339, 340, 342, 345, 346, 347, 348, 349, 354, 355, 356, 358, 363], "case": [5, 6, 7, 8, 9, 11, 14, 19, 28, 29, 49, 50, 55, 63, 92, 93, 94, 116, 121, 138, 141, 142, 149, 166, 173, 174, 176, 177, 178, 179, 181, 187, 188, 189, 191, 194, 197, 198, 200, 202, 205, 206, 208, 209, 210, 212, 214, 217, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 233, 234, 235, 236, 238, 240, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 283, 284, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 313, 316, 318, 321, 322, 324, 330, 331, 332, 339, 340, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363], "pre": [5, 138, 313], "copi": [5, 6, 8, 40, 55, 115, 120, 332, 335, 358], "just": [5, 14, 25, 35, 38, 45, 64, 138, 157, 309, 312, 313, 330, 332, 335, 338, 340], "wish": [5, 7, 14, 50, 283, 284, 309, 313, 332, 358], "again": [5, 6, 14, 136, 141, 290, 309, 311, 313, 329, 358], "later": [5, 8, 18, 25, 35, 38, 45, 57, 138, 157, 309, 332, 333], "anticip": [5, 332], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 109, 122, 138, 150, 283, 284, 290, 292, 305, 309, 310, 311, 313, 325, 326, 329, 330, 332, 333, 340, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 362, 364], "delet": [5, 115, 120, 312, 313, 329, 358], "fresh": [5, 6, 311, 332], "sinc": [5, 6, 14, 87, 109, 132, 141, 293, 309, 311, 312, 313, 332, 345, 346, 347, 348, 349, 351, 353, 354, 355, 357, 362], "rerun": [5, 313], "c": [5, 6, 115, 138, 309, 313, 334, 335, 336, 337, 338, 339, 340, 344, 346, 348, 352, 354, 355, 358, 363], "test_suit": [5, 113, 309], "build": [5, 6, 10, 13, 14, 72, 77, 133, 134, 135, 136, 137, 139, 281, 290, 306, 311, 312, 325, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "mpas_model": [5, 333], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 72, 75, 76, 77, 141, 172, 180, 309, 311, 312, 332, 333, 338, 340, 358], "baselin": [5, 6, 8, 10, 38, 41, 48, 114, 115, 120, 121, 141, 151, 154, 251, 293, 299, 300, 301, 304, 309, 310, 312, 328, 330, 332, 344, 358], "comparison": [5, 8, 18, 38, 48, 121, 309, 332, 333, 354], "against": [5, 10, 41, 48, 121, 141, 151, 154, 293, 299, 300, 301, 304, 309, 328, 332, 344], "oppos": [5, 14, 30, 153, 156, 169, 175, 186, 193, 199, 227, 257, 262, 267, 284, 332], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 110], "wherea": [5, 12, 309, 330, 332, 344, 364], "typic": [5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 38, 50, 111, 138, 141, 282, 283, 284, 305, 306, 307, 309, 311, 313, 330, 332, 333, 339, 342, 356, 358, 364], "clone": [5, 6, 138, 290, 307, 313, 325, 332, 358], "pickl": [5, 8, 108, 109, 309, 332, 358], "latter": [5, 49, 138], "conveni": [5, 9, 17, 273, 279, 280, 305, 309, 332, 333, 346, 347, 348, 354, 355, 358, 364], "tab": [5, 358], "explicitli": [5, 7, 141, 293, 299, 300, 301, 309, 313, 332, 333, 358], "select": [5, 8, 124, 281, 309, 313, 332], "edit": [5, 7, 313, 332, 358], "steps_to_run": [5, 49, 111, 309, 311, 332, 333], "full_run": [5, 18, 328, 345, 361], "restart_run": [5, 18, 328, 345, 361], "Or": [5, 309, 333], "accomplish": [5, 11, 309, 312], "thing": [5, 133, 134, 135, 136, 137, 138, 139, 141, 305, 309, 312, 331, 363], "take": [5, 6, 7, 11, 13, 14, 57, 138, 141, 147, 204, 305, 309, 310, 311, 313, 332, 346, 347, 348, 354, 363], "preced": [5, 57, 141], "over": [5, 9, 14, 57, 97, 122, 123, 282, 309, 312, 331, 332, 342, 345, 352, 356, 358], "intern": [5, 11, 25, 223, 224, 225, 228, 230, 232, 234, 283, 284, 300, 309, 313, 329, 343, 350], "shouldn": [5, 138, 251, 332], "special": [5, 330, 357], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 61, 157, 309, 339], "polaris_cach": [5, 8, 20, 309], "structur": [5, 13, 31, 160, 308, 311, 331, 332, 352], "without": [5, 40, 282, 309, 312, 313, 331, 332, 333, 337, 339, 351, 353, 357, 358], "redund": [5, 273, 279, 280, 293, 305, 332], "stamp": 5, "revis": [5, 333], "older": 5, "ones": [5, 273, 279, 280, 312, 332], "version": [5, 6, 16, 33, 57, 96, 121, 138, 290, 293, 300, 305, 306, 307, 309, 311, 312, 313, 325, 331, 332, 333, 339, 340, 343, 345, 347, 358, 359], "updat": [5, 7, 8, 11, 25, 27, 29, 34, 35, 44, 45, 61, 117, 136, 138, 159, 251, 290, 293, 294, 295, 296, 299, 300, 301, 302, 303, 309, 325, 329, 331, 332, 358], "cached_fil": [5, 20, 309], "json": [5, 8, 20, 55, 309, 340], "anvil": [5, 6, 138, 309, 333, 339, 358], "chrysali": [5, 6, 138, 309, 332, 333, 339, 358], "onto": [5, 313], "lcrc": [5, 6, 8, 11, 55, 309, 312, 333, 334, 336, 339, 358], "server": [5, 8, 40, 55, 309, 312, 333, 340], "d": [5, 19, 124, 214, 240, 273, 279, 280, 292, 296, 302, 303, 309, 332, 343, 350, 356], "whose": [5, 46, 53, 86, 309], "ocean_cached_fil": 5, "pr": [5, 6, 358, 363], "look": [5, 6, 7, 11, 18, 137, 139, 283, 284, 311, 312, 332, 333], "someth": [5, 7, 98, 102, 105, 137, 138, 139, 313, 332], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 97, 141, 143, 151, 154, 293, 300, 309, 312, 332], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 85, 151, 154, 157, 293, 299, 300, 301, 309, 332, 333], "info": [5, 12, 14, 25, 32, 85, 138, 151, 154, 157, 309, 332], "initial_st": [5, 18, 19, 143, 293, 300, 309, 332], "date_str": [5, 55], "let": [5, 309, 313, 330, 332, 333, 340], "string": [5, 9, 15, 40, 101, 107, 138, 141, 162, 257, 282, 313], "choos": [5, 309, 312, 313, 332, 334, 335, 336, 337, 340, 364], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 332], "check": [5, 6, 18, 121, 309, 313, 332, 333, 335, 340, 358, 363], "print": [5, 12, 18, 64, 121, 128, 309, 312, 363], "stdout": [5, 12, 38, 49, 309, 311], "translat": [5, 31, 141, 160], "convert": [5, 9, 13, 14, 141, 162, 309, 332], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 115, 120, 131, 132, 157, 160, 161, 169, 172, 175, 180, 227, 290, 293, 299, 300, 301, 305, 306, 309, 311, 312, 325, 326, 328, 331, 332, 333, 356], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 126, 131, 132, 161, 169, 172, 175, 180, 227, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 312, 325, 328, 333, 357, 362], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 138, 151, 154, 157, 160, 161, 169, 175, 227, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 331, 332, 335, 338, 340], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 126, 138, 141, 156, 160, 283, 284, 290, 305, 307, 309, 310, 312, 313, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 362, 364], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 126, 138, 141, 156, 160, 283, 284, 290, 305, 307, 309, 310, 312, 313, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 362], "don": [5, 6, 7, 14, 138, 141, 143, 148, 309, 311, 312, 313, 332, 337, 358, 364], "format": [5, 7, 11, 13, 14, 126, 132, 162, 310, 311, 313, 332, 333, 335], "note": [5, 7, 17, 18, 332, 340], "keyword": [5, 7, 14, 18, 19, 309, 347], "top": [5, 19, 124, 273, 274, 275, 276, 277, 278, 279, 280, 282, 292, 307, 332, 342, 352], "ignor": [5, 101, 107], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 62, 70, 86, 92, 103, 110, 138, 141, 145, 146, 147, 157, 190, 203, 204, 213, 239, 261, 305, 308, 309, 311, 312, 313, 330, 333, 334, 335, 336, 337, 338, 340, 342, 358], "pars": [5, 9, 14, 26, 27, 28, 29, 89, 116, 118], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 87, 121, 122, 123, 124, 128, 141, 143, 151, 154, 160, 176, 196, 230, 282, 283, 284, 287, 293, 300, 302, 306, 309, 311, 312, 331, 332, 333, 342, 345, 346, 347, 348, 349, 352, 354, 355, 356], "doesn": [5, 6, 132, 138, 309, 311, 332, 333, 338, 339, 358], "matter": [5, 332], "usabl": 5, "try": [6, 14, 60, 138, 312, 313, 329, 332, 333, 335, 340, 358], "stai": [6, 313], "sync": 6, "mpi": [6, 14, 17, 97, 133, 136, 138, 157, 159, 161, 293, 299, 300, 301, 309, 313, 329, 331, 332, 334, 335, 336, 337, 338, 340, 358], "librari": [6, 14, 133, 138, 313, 332, 334, 335, 336, 337, 338, 339, 340, 358], "netcdf": [6, 138, 143, 148, 163, 304, 333, 334, 335, 336, 337, 338, 339, 340], "fortran": [6, 138, 334, 335, 336, 337, 338, 339, 340], "pnetcdf": [6, 138, 334, 335, 336, 337, 338, 339, 340], "mkl": [6, 138], "linear": [6, 19, 122, 123, 124, 283, 284, 294, 295, 296, 299, 302, 303, 332, 345, 346, 347, 348, 349, 351, 352, 354, 355], "algebra": 6, "lib": [6, 138], "bump": 6, "major": [6, 306, 309], "minor": 6, "esmf": [6, 313, 338, 358], "moab": [6, 338], "scorpio": [6, 313, 339, 358], "meti": [6, 85], "parmeti": 6, "trilino": [6, 313], "u": [6, 11, 309, 332, 339, 340, 346, 348, 349, 351, 353, 354], "adn": 6, "sometim": [6, 14, 273, 279, 280, 305, 307, 309, 311, 330, 332, 363], "necessari": [6, 7, 13, 138, 332], "alwai": [6, 7, 9, 12, 57, 138, 141, 146, 190, 203, 213, 239, 286, 290, 306, 309, 311, 312, 313, 325, 330, 332, 333], "correctli": 6, "combin": [6, 38, 40, 49, 57, 63, 96, 126, 309, 310, 311, 329, 332, 333, 358], "experienc": 6, "problem": [6, 309, 313, 329, 332], "intel": [6, 138, 334, 336, 337, 339], "perlmutt": [6, 138, 335, 339, 358], "eigen": 6, "nvidiagpu": 6, "forg": [6, 138, 331, 358], "python": [6, 7, 8, 9, 26, 44, 51, 141, 305, 307, 309, 311, 312, 313, 330, 331, 332, 333, 339, 340, 358], "aren": [6, 11, 38, 39, 138, 309, 312, 313, 332, 363], "constraint": [6, 62, 340, 358], "alpha": [6, 133, 134, 135, 136, 137, 138, 139, 313, 332, 349], "beta": 6, "rc": 6, "remain": [6, 332, 347, 349, 356], "unaffect": 6, "brief": [6, 7, 332], "tour": 6, "login": [6, 138, 313, 335, 338, 340], "node": [6, 14, 25, 37, 38, 42, 45, 62, 92, 93, 94, 138, 157, 283, 284, 286, 287, 289, 309, 310, 312, 313, 332, 333, 334, 335, 336, 337, 338, 339, 340, 358], "bootstrap": 6, "rest": [6, 163, 278, 342, 347], "unifi": [6, 138, 313, 340], "diagnost": [6, 302, 333, 334, 335, 337, 338, 339, 340, 346, 358], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 141, 309, 311, 312, 313, 332], "cach": [6, 20, 25, 38, 40, 114, 115, 157, 331, 333, 339, 344, 358, 363], "own": [6, 7, 8, 9, 11, 12, 19, 38, 138, 141, 309, 311, 312, 313, 330, 332, 333, 346, 347, 348, 354, 355, 358, 364], "config_machin": 6, "xml": [6, 14, 116, 118, 119, 132, 325], "ey": 6, "master": [6, 290, 325, 359], "happen": [6, 9, 12, 17, 109, 309, 332, 346, 347, 348, 354, 355], "me": [6, 332], "dev_quick_start": 6, "fork": [6, 332], "haven": [6, 332], "mkdir": [6, 313], "involv": [6, 14, 287, 309, 330, 332], "coupl": [6, 329, 331], "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 141, 305, 307, 309, 310, 311, 312, 313, 332, 333, 363, 364], "stand": 6, "uupdat": 6, "releas": [6, 138, 312, 331, 339, 343, 358], "omit": [6, 309, 358], "suffix": [6, 40, 115, 309], "spack_for_mache_1": 6, "12": [6, 13, 70, 124, 282, 287, 294, 296, 302, 303, 328, 332, 335, 346, 348, 349, 354, 355, 361], "plu": [6, 330], "discov": 6, "cannot": [6, 332], "uniqu": [6, 7, 14, 138, 311, 332], "worktre": [6, 331, 332], "my": [6, 138, 335], "fetch": [6, 313, 332], "out": [6, 8, 9, 13, 57, 91, 95, 124, 138, 151, 154, 282, 307, 309, 312, 313, 333, 342, 358], "checkout": [6, 313, 332], "miniforge3": [6, 313, 332, 339, 358], "manual": [6, 14, 49, 50, 309, 311, 364], "linux": [6, 138, 313, 339], "x86_64": [6, 138], "our": [6, 138, 312, 332, 358], "found": [6, 9, 14, 127, 138, 283, 284, 312, 313, 331, 332, 334, 335, 336, 337, 338, 339, 340], "exist": [6, 7, 9, 31, 38, 41, 60, 116, 118, 120, 138, 160, 293, 300, 309, 311, 312, 313, 329, 332, 339, 363], "miniconda3": [6, 313], "pleas": [6, 138, 306, 312, 313, 332, 358], "start": [6, 7, 8, 14, 15, 87, 117, 124, 138, 282, 292, 293, 297, 305, 310, 311, 312, 331, 335, 339, 340, 343, 359, 361], "definit": [6, 14, 332], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 75, 101, 107, 114, 115, 120, 138, 141, 188, 201, 211, 237, 259, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 317, 325, 326, 328, 330, 331, 333, 339, 342, 345, 347, 352, 355, 356, 363, 364], "export": [6, 329], "conda_bas": 6, "home": [6, 18, 138, 313, 332, 333, 335, 339, 340], "readi": [6, 332, 340], "configure_polaris_env": [6, 138, 313, 329, 332, 338], "py": [6, 12, 14, 18, 67, 138, 305, 306, 312, 313, 330, 332, 333, 338], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 138, 313], "tmpdir": [6, 138], "group": [6, 7, 11, 61, 225, 305, 331, 334, 336, 339, 340, 352, 357, 358, 364], "spack_temp": 6, "spack_test": 6, "gnu": [6, 138, 313, 334, 335, 336, 337, 338, 339, 340, 358], "openmpi": [6, 133, 138, 313, 331, 334, 336, 337, 358], "impi": [6, 133, 138, 334, 337], "recreat": [6, 311, 313, 329], "request": [6, 7, 14, 15, 25, 32, 34, 138, 141, 151, 154, 157, 274, 275, 309, 311, 312, 313, 329, 332, 333, 346, 347, 348, 354, 355], "twice": [6, 283, 284, 332], "deploy": [6, 313, 334, 335, 336, 337, 338, 340], "prebootstrap": 6, "load": [6, 11, 19, 109, 134, 137, 138, 139, 309, 313, 331, 332, 333, 339], "activ": [6, 19, 138, 339, 340, 358], "differ": [6, 14, 15, 17, 18, 57, 72, 77, 121, 138, 141, 164, 167, 176, 223, 225, 230, 287, 290, 293, 300, 305, 306, 307, 309, 310, 311, 312, 325, 330, 332, 333, 334, 335, 336, 337, 338, 340, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 362], "On": [6, 7, 13, 138, 313, 339], "tmp": [6, 138], "safe": [6, 14, 309, 313, 345], "strictli": [6, 13, 312, 332], "good": [6, 11, 12, 38, 309, 313, 332], "idea": [6, 11, 12, 332], "Be": [6, 340], "awar": [6, 7, 138, 332, 339], "with_petsc": [6, 313], "wa": [6, 8, 48, 59, 121, 138, 309, 311, 312, 313, 329, 330, 332, 333, 342, 358], "limit": [6, 19, 294, 295, 296, 302, 303, 310, 313, 345, 346, 348, 349, 354, 355], "amount": [6, 25, 35, 38, 45, 157, 309, 341, 356], "team": [6, 138, 331], "petsc_support": 6, "txt": [6, 8, 120, 310, 329], "with_albani": [6, 313], "albany_support": 6, "encount": [6, 310, 329], "error": [6, 8, 15, 38, 49, 138, 141, 144, 145, 148, 294, 295, 296, 297, 299, 301, 302, 303, 309, 311, 313, 331, 332, 346, 347, 348, 349, 354, 355], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 153, 169, 175, 193, 227, 309, 311, 312, 313, 332, 333, 358, 363, 364], "attempt": [6, 138, 331, 339], "sh": [6, 133, 134, 135, 136, 137, 138, 139, 313, 329, 332, 358], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 93, 94, 96, 104, 138, 309, 312, 313, 330, 331, 332, 335, 339, 340, 358], "pscratch": 6, "suggest": [6, 138, 329], "seem": [6, 14, 332, 335, 340], "switch": [6, 332, 333], "v0": 6, "19": 6, "submodul": [6, 290, 306, 313, 325, 332, 358], "serv": [6, 114, 115, 120, 141, 305, 332], "kind": [6, 332], "whichev": [6, 290, 325, 342], "load_dev_polaris_0": [6, 133, 134, 135, 136, 137, 138, 139, 332], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 290, 312, 313, 325, 332, 358], "pio": [6, 25, 34, 37, 157, 293, 299, 300, 301], "openmp": [6, 25, 35, 38, 45, 94, 133, 135, 136, 157, 167, 225, 251, 309, 332], "ifort": [6, 133, 135, 138, 332], "ac": [6, 332], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 332, 338, 339, 358], "job_script": [6, 332, 358], "bash": [6, 313, 329, 332, 358], "termin": [6, 8, 138, 309, 313, 332], "isn": [6, 9, 15, 294, 295, 296, 297, 302, 303, 309, 312, 332], "ll": [6, 19, 138, 312, 332, 340, 347], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 133, 135, 136, 138, 313], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 305, 309, 332, 342, 354], "util": [6, 312, 353], "matrix": 6, "automat": [6, 7, 9, 12, 14, 19, 138, 141, 309, 312, 313, 332, 333, 334, 336, 337, 339, 340, 358], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 358], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 136, 138, 141, 309, 312, 332, 338], "integr": [6, 15, 141, 176, 230, 293, 300, 312, 332, 345, 346, 347, 348, 349, 352, 354, 355, 357, 362], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 335, 358], "245": 6, "246": 6, "non": [6, 14, 18, 292, 309, 332, 346, 354, 358], "care": [6, 11, 13, 141, 305, 309, 313, 332], "temporari": [6, 138], "begin": [6, 7, 18, 293, 309, 313, 326, 331, 332, 339, 345, 347, 356], "anymor": 6, "best": [6, 17, 138, 309, 313], "hard": [6, 309, 332, 345, 356], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 63, 122, 123, 124, 151, 154, 309, 311, 332, 361], "myst": [7, 332], "tip": [7, 313], "easi": [7, 9, 40, 312, 332], "pull": [7, 138, 312, 313, 332, 333], "guid": [7, 141, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 310, 312, 332, 334, 335, 336, 337, 338, 339, 340, 343, 359], "baroclin": [7, 9, 14, 164, 165, 166, 167, 170, 173, 176, 178, 181, 182, 184, 251, 293, 306, 309, 332, 343, 350, 364], "channel": [7, 9, 14, 164, 165, 166, 167, 170, 173, 176, 178, 181, 182, 184, 251, 293, 306, 309, 329, 332, 343, 350, 364], "label": [7, 122, 123, 282, 339, 349, 358], "prepend": 7, "categori": [7, 306, 307, 308, 331, 364], "And": [7, 14, 313, 332], "becom": [7, 309, 311, 332], "who": [7, 313, 332, 333, 340], "citat": 7, "basi": [7, 332], "overview": [7, 331, 335, 340], "common": [7, 12, 14, 44, 49, 138, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 309, 310, 311, 312, 329, 330, 332, 333, 339, 340, 357, 358, 362, 363, 364], "characterist": [7, 342, 357, 362], "comment": [7, 310, 333], "appli": [7, 13, 14, 64, 292, 305, 332, 345, 356, 357, 362], "vertic": [7, 15, 19, 86, 124, 146, 147, 190, 203, 204, 213, 224, 225, 230, 239, 250, 281, 282, 283, 284, 286, 287, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 333, 341, 343], "grid": [7, 13, 17, 69, 76, 80, 83, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 141, 271, 272, 273, 274, 275, 276, 279, 280, 293, 299, 300, 301, 304, 309, 326, 332, 333], "forc": [7, 304, 328, 332, 364], "specif": [7, 9, 14, 19, 51, 138, 141, 290, 305, 306, 307, 309, 325, 326, 331, 332, 333, 335, 339, 345, 352, 357, 358, 362, 363], "public": [7, 11, 309, 332, 333], "api": [7, 12, 331, 332], "underscor": [7, 332], "md": [7, 332], "eval": 7, "rst": [7, 14, 332], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 306, 312], "compute_cell_count": [7, 141, 293, 299, 300, 301, 332], "dynamic_model_config": [7, 14, 293, 300, 332], "ot": [7, 332], "numpydoc": [7, 332], "text": [7, 8, 345, 347, 349, 356], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 19, 141, 273, 275, 276, 277, 278, 279, 280, 282, 287, 290, 299, 301, 309, 332, 333, 335, 338, 340, 342, 349, 351, 353], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 290, 333, 351, 353], "overli": [7, 332], "ic": [7, 141, 290, 311, 312, 313, 326, 328, 331, 332, 333, 335, 342, 361, 364], "shelf": [7, 141, 305, 312, 332, 333, 342], "draft": [7, 342], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 75, 80, 81, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 141, 143, 144, 145, 146, 147, 148, 151, 153, 154, 156, 157, 160, 162, 163, 165, 166, 167, 169, 170, 173, 174, 175, 176, 178, 181, 182, 184, 186, 189, 190, 191, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 208, 210, 212, 213, 214, 215, 216, 217, 219, 221, 224, 225, 227, 228, 230, 232, 234, 236, 238, 239, 240, 241, 242, 243, 245, 247, 251, 253, 255, 257, 260, 261, 262, 264, 265, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 299, 301, 305, 309, 311, 317, 318, 319, 321, 322, 323, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356], "xarrai": [7, 15, 17, 19, 86, 123, 124, 141, 146, 147, 190, 203, 204, 213, 239, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 309, 332], "dataarrai": [7, 86, 123, 124, 146, 147, 190, 203, 204, 213, 214, 215, 216, 239, 240, 241, 242, 274, 275, 276, 277, 278, 281, 282, 283, 284, 287, 288, 289], "sea": [7, 141, 214, 216, 240, 242, 275, 276, 277, 278, 281, 282, 287, 290, 326, 328, 331, 332, 333, 342, 351, 353, 361, 364], "surfac": [7, 141, 214, 216, 240, 242, 275, 276, 277, 278, 281, 282, 287, 290, 292, 304, 328, 332, 333, 342, 345, 351, 352, 353, 356], "height": [7, 124, 141, 214, 216, 240, 242, 275, 276, 277, 278, 282, 287, 290, 332, 333, 342, 351, 353], "mask": [7, 124, 273, 276, 279, 280, 309, 332, 333, 342], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 26, 68, 70, 71, 75, 80, 87, 97, 102, 121, 123, 124, 141, 143, 144, 145, 146, 147, 151, 154, 156, 162, 165, 166, 167, 170, 173, 176, 178, 181, 186, 189, 190, 191, 196, 199, 202, 203, 204, 205, 212, 213, 214, 215, 216, 217, 219, 221, 225, 230, 232, 236, 238, 239, 240, 241, 242, 243, 245, 247, 251, 257, 260, 261, 262, 264, 267, 282, 283, 284, 309, 311, 332], "densiti": [7, 13, 141, 332], "seawat": 7, "displac": 7, "land": [7, 141, 290, 311, 331, 332, 333, 342], "landicedraft": 7, "equal": [7, 304, 309, 312, 356], "entri": [7, 54, 87, 90, 115, 124], "line": [7, 10, 36, 38, 93, 94, 104, 124, 138, 309, 310, 312, 313, 331, 358], "type": [7, 14, 17, 18, 19, 26, 99, 106, 132, 138, 141, 144, 196, 250, 252, 282, 294, 295, 296, 302, 303, 305, 309, 311, 312, 313, 325, 329, 330, 332, 333, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 363], "side": 7, "colon": 7, "doubl": [7, 14, 141, 309, 310, 332], "back": [7, 332, 335, 358], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 93, 94, 309], "next": [7, 138, 293, 300, 332, 342, 358], "indent": [7, 309], "obviou": [7, 14, 332], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 63, 64, 66, 68, 75, 81, 85, 87, 96, 97, 98, 101, 102, 105, 107, 111, 115, 116, 120, 121, 122, 123, 124, 127, 131, 141, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 157, 158, 162, 167, 168, 190, 192, 203, 204, 213, 218, 225, 226, 239, 240, 244, 251, 261, 276, 282, 284, 309, 311, 321, 332, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 361], "els": [7, 8, 138, 309, 311, 332], "further": [7, 305, 311, 340, 357, 362], "rais": [7, 9, 18, 38, 41, 59, 60, 141, 309, 312, 332, 349], "list_cas": 8, "list_machin": [8, 312], "list_suit": 8, "anywher": [8, 12, 138, 313], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 89, 108, 109, 112, 116, 126, 127, 131, 132, 151, 154, 214, 240, 306, 311, 312, 332], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 61, 88, 89, 126, 141, 292, 309, 311, 332], "properti": [8, 257, 292, 309, 339, 346, 347, 348, 354, 355], "setup_suit": 8, "write": [8, 11, 12, 13, 16, 19, 61, 108, 126, 272, 282, 309, 311, 313, 328, 332], "proven": [8, 10, 57, 331, 333], "save": [8, 19, 59, 83, 138, 282, 293, 294, 295, 296, 297, 302, 303, 305, 309, 311, 332, 339, 344, 345], "target": [8, 11, 17, 18, 25, 40, 60, 63, 87, 97, 138, 141, 157, 293, 299, 300, 301, 309, 311, 332, 346, 347, 348, 354, 355], "minimum": [8, 63, 123, 124, 141, 145, 157, 261, 282, 293, 299, 300, 301, 309, 332, 333, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 362], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 86, 87, 124, 132, 138, 141, 161, 257, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 309, 332, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 362], "maximum": [8, 18, 121, 123, 124, 196, 261, 282, 332, 333, 342], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 93, 94, 97, 141, 157, 167, 225, 251, 309, 311, 332], "cpus_per_task": [8, 14, 38, 42, 45, 93, 94, 309], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 332, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 93, 94, 97, 141, 157, 167, 225, 251, 309, 332], "min_cpus_per_task": [8, 14, 38, 45, 93, 94, 309], "fewest": 8, "least": [8, 13, 306, 313, 345, 349], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 138, 141, 157, 167, 225, 251, 309, 331, 332, 333, 346, 347, 348, 349, 351, 353, 354, 355], "run_task": [8, 309, 311], "run_single_step": 8, "oper": [8, 47, 138, 172, 180, 309, 311, 363], "log": [8, 10, 19, 38, 49, 94, 121, 122, 123, 124, 309, 311, 313, 331, 358], "figur": [8, 19, 123, 124, 282, 299, 301, 304, 305, 307, 309, 333, 346, 348, 354, 355], "cpu": [8, 138, 309, 332, 338, 358], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 67, 68, 72, 75, 76, 77, 81, 82, 97, 103, 126, 141, 142, 143, 145, 146, 151, 153, 154, 157, 160, 165, 166, 167, 169, 170, 173, 174, 175, 176, 178, 181, 182, 184, 186, 189, 190, 191, 193, 194, 197, 199, 202, 203, 205, 206, 208, 210, 212, 213, 214, 217, 219, 221, 224, 225, 227, 228, 230, 232, 234, 236, 237, 238, 239, 240, 243, 245, 247, 250, 251, 252, 253, 255, 257, 260, 262, 264, 265, 267, 269, 282, 299, 301, 306, 309, 311, 312, 316, 318, 319, 321, 322, 323, 332, 347, 357, 362], "retriev": [8, 329], "store": [8, 11, 19, 51, 138, 141, 299, 301, 309, 332, 346, 348, 354, 355, 358], "case_output": [8, 12], "individu": [8, 9, 19, 306, 311, 312, 332, 339, 340, 345, 358, 364], "overal": 8, "whole": [8, 49, 163, 305, 311, 312, 332, 358], "window": 8, "update_cach": 8, "_cached_fil": [8, 309], "origin": [8, 55, 281, 283, 284, 287, 313, 332, 342, 358], "enabl": [8, 19, 304, 309, 329, 333, 340, 351, 353], "consum": [8, 309, 311, 332, 363], "faster": [8, 313], "parser": [9, 46, 53, 57, 176, 186, 199, 230, 257], "mpas_tool": [9, 12, 13, 80, 293, 299, 300, 301, 304, 309, 311, 332], "mpasconfigpars": [9, 309, 311], "polarisconfigpars": [9, 11, 21, 38, 46, 49, 53, 59, 62, 63, 92, 95, 96, 112, 122, 123, 141, 176, 186, 199, 214, 230, 240, 257, 271, 273, 274, 275, 279, 280, 332], "certain": [9, 18, 57, 138, 309, 313, 333, 357, 362], "filepath": [9, 46, 53, 57, 141], "overridden": [9, 31, 58, 141, 160, 332], "algorithm": [9, 14, 141, 251, 293, 299, 300, 301, 309, 332], "featur": [9, 14, 312, 313, 330, 332, 333, 345, 352, 356], "accommod": [9, 25, 35, 38, 45, 93, 94, 157], "add_from_packag": [9, 11, 141, 309, 311, 312, 332], "content": [9, 14, 115, 116, 118, 120, 132, 141, 305, 307, 309, 312, 328, 332, 358, 361], "inertial_gravity_wav": [9, 290, 298, 301, 306, 311, 351, 363], "inertialgravitywav": [9, 299, 311], "import": [9, 11, 12, 13, 15, 17, 18, 19, 141, 305, 306, 309, 311, 312, 313, 330, 332], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 67, 68, 75, 81, 97, 126, 141, 142, 143, 151, 154, 157, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 186, 189, 191, 194, 197, 199, 202, 205, 206, 208, 210, 212, 214, 217, 219, 221, 224, 225, 228, 230, 232, 234, 236, 238, 240, 243, 245, 247, 250, 251, 252, 253, 255, 257, 260, 262, 264, 265, 267, 269, 305, 306, 309, 311, 312, 316, 318, 319, 321, 322, 323, 330, 332], "super": [9, 14, 17, 18, 141, 306, 309, 311, 312, 332], "cfg": [9, 11, 51, 141, 306, 311, 312, 332, 333, 346, 348, 354, 355, 358], "except": [9, 38, 41, 59, 282, 309, 312, 332, 352, 355], "behavior": [9, 14, 111, 141, 309, 310, 313, 332], "noth": [9, 138, 329, 346, 347, 348, 354, 355], "particular": [9, 138, 281, 305, 313, 331, 335, 339, 358], "fine": [9, 311, 332, 356], "_get_basic_config": 9, "larg": [9, 309, 311, 332, 334, 354], "those": [9, 14, 49, 121, 138, 141, 293, 300, 311, 312, 313, 331, 332, 346, 347, 348, 349, 354, 355, 357, 362, 363], "configpars": [9, 93, 94], "getinteg": 9, "getfloat": [9, 12, 14, 17, 141, 309, 332], "getboolean": [9, 309, 332], "implement": [9, 306, 309, 312, 345, 346, 347, 348, 349, 351, 353, 354, 355], "getlist": [9, 311, 332], "comma": [9, 346, 347, 348, 354, 355], "integ": [9, 13], "boolean": [9, 124, 276], "etc": [9, 14, 117, 120, 306, 309, 345], "getexpress": 9, "tupl": [9, 123, 124, 282], "rang": [9, 19, 124, 332, 352], "numpi": [9, 13, 15, 69, 76, 77, 83, 87, 122, 124, 141, 163, 271, 272, 283, 284, 309, 332], "linspac": [9, 19, 347], "arang": 9, "arrai": [9, 15, 69, 76, 77, 83, 122, 141, 271, 272, 274, 275, 276, 277, 281, 288, 289, 332], "sens": [9, 331, 332], "set_shared_config": [9, 311], "intuit": 9, "resolution_to_subdir": [9, 306], "rpe": [9, 184, 306, 312, 332, 358], "resdir": [9, 306], "config_filenam": [9, 38, 49, 309, 311], "indir": [9, 25, 38, 49, 97, 157, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 224, 225, 228, 230, 232, 234, 251, 253, 255, 306, 309, 319, 321, 323], "add_task": [9, 305, 306], "most": [9, 12, 44, 138, 290, 305, 306, 309, 312, 313, 325, 332, 333, 338, 339, 340, 342, 343, 359, 364], "construct": [9, 14, 142, 271, 273, 274, 275, 279, 280, 286, 287, 292, 304, 306, 311, 316, 332, 345, 349], "bring": [9, 141, 332], "add_step": [9, 311, 332], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 167, 178, 225, 232, 293, 300, 309, 332], "baroclinic_channel_rp": 9, "viscos": [9, 14, 167, 176, 178, 225, 230, 232, 293, 300, 309, 312, 332, 345, 352], "dtype": [9, 311, 332], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 94, 157, 167, 225, 251, 309, 311, 332], "add_yaml_fil": [9, 14, 25, 141, 309, 311, 332], "One": [9, 13, 332, 358, 363], "advantag": [9, 14, 138, 311, 312, 332, 339], "track": [9, 25, 309, 311, 313], "associ": [9, 13, 14, 15, 19, 141, 273, 279, 280, 283, 284, 293, 294, 296, 300, 302, 303, 309, 311, 313, 330], "while": [10, 17, 19, 292, 293, 309, 329, 332], "meant": [10, 312, 333], "simplifi": 10, "verifi": [10, 310, 333], "io": [10, 309, 311, 312, 331, 332, 333, 343, 359], "lot": [11, 141, 309, 312, 332], "o": [11, 12, 116, 118, 132, 138, 312, 313, 332, 333, 358], "handl": [11, 12, 313, 332, 339, 349], "lower": [11, 19, 311, 332, 345], "directli": [11, 13, 14, 17, 38, 141, 307, 309, 312, 330, 331, 332, 335], "readm": [11, 311], "importlib": 11, "resourc": [11, 14, 35, 42, 45, 92, 93, 94, 152, 155, 158, 168, 192, 218, 226, 244, 251, 293, 299, 300, 301, 309, 311, 332], "global_ocean": [11, 14, 309, 311, 312, 313, 333, 358], "files_for_e3sm": [11, 309, 311, 333], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 60, 61, 62, 63, 64, 68, 75, 81, 85, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 141, 143, 144, 145, 146, 147, 148, 151, 154, 156, 157, 162, 163, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 189, 190, 191, 194, 197, 202, 203, 204, 205, 206, 208, 212, 213, 217, 219, 221, 224, 225, 228, 230, 232, 238, 239, 243, 245, 247, 251, 253, 255, 260, 261, 262, 264, 265, 267, 269, 272, 282, 309, 311, 319, 321, 323, 332], "did": [11, 330, 332], "add_input_fil": [11, 17, 18, 39, 309, 311, 332], "collect": [11, 100, 142, 306, 308, 316, 330, 332], "whenev": [11, 309, 332], "flexibl": [11, 141, 309, 311, 313, 332], "No": [11, 331, 351, 353], "step_dir": 11, "database_root": [11, 138, 309, 333, 334, 335, 336, 337, 338, 339, 340, 358], "download_path": 11, "join": [11, 332], "bathymetry_databas": [11, 309, 333], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 276, 305, 309, 332, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 364], "url": [11, 40, 59, 309, 329, 333], "web": [11, 309, 333], "anl": [11, 309, 333], "gov": [11, 309, 329, 333, 335, 338, 340], "mpas_standalonedata": [11, 138, 333, 339], "dest_path": [11, 59], "remot": [11, 40, 313, 331], "bathymetri": [11, 281, 287, 309, 333], "access": [11, 39, 311, 312, 313, 332, 334, 339, 340], "update_permiss": 11, "along": [11, 14, 19, 138, 282, 283, 284, 293, 300, 309, 331, 332], "151209": 11, "omega_ctest": 11, "readabl": [11, 312], "writabl": 11, "identifi": [11, 114, 138, 306, 325, 364], "e3sm_unifi": 11, "polaris_machin": 11, "base_url": 11, "filenam": [11, 17, 18, 38, 40, 41, 49, 91, 98, 99, 100, 101, 105, 106, 107, 121, 123, 127, 129, 309, 311, 313, 332], "database_path": 11, "download_target": 11, "has_opt": 11, "full_path": 11, "count": [11, 310, 330], "strategi": [12, 334, 335, 336, 337, 338, 340], "stderr": [12, 38, 49, 309, 311], "loggingcontext": 12, "check_cal": [12, 309], "won": [12, 312, 332, 333], "logger": [12, 18, 38, 49, 67, 94, 121, 309, 311, 332], "full": [12, 38, 93, 111, 274, 275, 283, 284, 293, 309, 311, 328, 331, 332, 339, 342, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358], "although": [12, 141], "captur": [12, 352], "explicit": [12, 312], "go": [12, 46, 53, 253, 255, 305, 309, 311, 312, 313, 332, 340], "subprocess": [12, 38, 93, 94, 110, 309, 312, 329], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 141, 148, 165, 173, 181, 287, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 312, 313, 318, 328, 332, 346, 348, 351, 353, 354, 355, 358, 361], "otherwis": [12, 19, 138, 309, 311, 332, 334, 335, 336, 337, 338, 339, 340, 345], "intent": 12, "desir": [12, 13, 14, 18, 19, 121, 141, 309, 310, 311, 332, 333, 358], "trick": [12, 309], "direct": [12, 13, 14, 80, 214, 240, 293, 299, 300, 301, 332, 340, 345, 351, 352, 353], "snippet": [12, 332], "dome": [12, 67, 305, 309, 311, 358, 364], "setup_mesh": [12, 309], "setupmesh": [12, 309, 311], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 309], "landice_grid": [12, 309, 332], "l": [12, 121, 141, 332, 340], "quasiuniformsphericalmeshstep": [13, 141, 311], "icosahedralmeshstep": [13, 141, 311], "jigsaw": [13, 68, 72, 74, 75, 77, 79, 81, 186, 199, 257, 262, 267, 309, 313, 331], "complex": [13, 76, 311, 312, 332], "build_cell_width_lat_lon": [13, 75], "opt": [13, 81], "make_jigsaw_mesh": [13, 75], "icosahedr": [13, 68, 70, 156, 186, 199, 257, 262, 267, 294, 295, 296, 297, 302, 303, 311, 346, 347, 348, 349, 354, 355], "significantli": [13, 342, 349], "smooth": [13, 97, 282], "cell": [13, 14, 15, 19, 68, 69, 70, 71, 75, 76, 77, 80, 83, 86, 97, 99, 106, 124, 141, 152, 155, 157, 158, 168, 192, 214, 216, 218, 226, 240, 242, 244, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 293, 299, 300, 301, 305, 326, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 361], "quasi": [13, 75, 294, 295, 296, 297, 302, 303, 311, 333, 346, 347, 348, 349, 354, 355, 357, 362], "hand": [13, 102, 312], "restrict": [13, 332, 352, 357], "subdivis": [13, 68, 69, 70, 71, 72], "icosahedron": [13, 69, 70, 71, 72], "tabl": [13, 313, 339, 358], "approxim": [13, 68, 70, 71, 75, 141, 152, 155, 158, 168, 192, 218, 226, 244, 293, 299, 300, 301, 313, 332], "width": [13, 68, 69, 70, 75, 76, 77, 83, 124, 282, 332, 345, 352], "km": [13, 14, 68, 69, 70, 71, 75, 76, 77, 80, 83, 141, 151, 154, 156, 165, 166, 167, 170, 173, 174, 176, 178, 181, 191, 205, 217, 219, 230, 236, 243, 245, 264, 293, 294, 295, 296, 297, 299, 301, 302, 303, 309, 332, 333, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 362, 364], "5": [13, 14, 70, 123, 138, 141, 176, 230, 293, 297, 309, 310, 312, 329, 332, 333, 345, 346, 347, 348, 349, 352, 354, 355, 357, 358, 362], "240": [13, 70, 141, 294, 295, 296, 297, 302, 303, 333, 346, 347, 348, 354, 355], "6": [13, 70, 282, 283, 284, 309, 332, 343, 345, 346, 354, 356, 358, 359], "120": [13, 70, 141, 310, 346, 347, 348, 349, 354, 355], "7": [13, 70, 138, 332, 340, 346, 347, 355, 358], "60": [13, 70, 141, 294, 295, 296, 297, 302, 303, 342, 346, 347, 348, 354, 355], "8": [13, 70, 123, 138, 293, 313, 332, 333, 345, 347, 351, 353, 355, 358], "30": [13, 14, 70, 141, 305, 332, 338, 340, 345, 356, 357, 362], "9": [13, 19, 70, 138, 332, 346, 347, 348, 354, 355, 358], "15": [13, 14, 70, 293, 332, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 362], "11": [13, 70, 138, 332, 358], "3": [13, 70, 137, 138, 141, 283, 284, 293, 300, 309, 310, 313, 329, 332, 333, 339, 340, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358], "13": [13, 70, 332, 345], "94": [13, 70, 349], "spherical_mesh": [13, 76], "cell_width": [13, 68, 69, 70, 71, 75, 76, 77, 83], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 83, 122, 123, 124, 141, 143, 148, 178, 184, 197, 208, 232, 255, 269, 281, 282, 283, 284, 287, 293, 294, 295, 296, 297, 300, 302, 303, 323, 346, 347, 348, 349, 351, 352, 353, 354, 355, 361, 364], "plot_cell_width": 13, "cell_width_filenam": [13, 83], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 284, 294, 295, 296, 297, 302, 303, 333, 347], "lon": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 284, 294, 295, 296, 297, 302, 303, 333, 347], "sphere": [13, 259, 260, 262, 264, 267, 294, 295, 296, 297, 302, 303, 346, 347, 348, 354, 355], "vtk_lat_lon": 13, "far": [13, 138, 273, 279, 280, 312, 332], "But": [13, 138, 305, 309, 312, 313, 332, 333, 339], "hexagon": [13, 80, 332, 351, 353], "planar_hex": [13, 80, 293, 299, 300, 301, 304, 309, 332], "make_planar_hex_mesh": [13, 80, 293, 299, 300, 301, 304, 309, 332], "x": [13, 19, 69, 76, 77, 80, 83, 101, 107, 124, 141, 163, 214, 240, 281, 283, 309, 332, 345, 351, 353, 356], "y": [13, 14, 19, 80, 101, 107, 124, 141, 214, 240, 281, 283, 293, 299, 300, 301, 309, 332, 340, 345, 351, 352, 353], "nx": [13, 80, 305, 309, 332, 356], "ny": [13, 80, 305, 309, 332, 356], "dc": [13, 305, 309, 332], "distanc": [13, 80, 97, 196, 283, 284, 332, 345, 352], "adjac": [13, 286, 342], "center": [13, 19, 80, 123, 196, 214, 240, 282, 283, 284, 285, 286, 305, 332, 342, 345, 352], "admittedli": 13, "oddli": 13, "period": [13, 292, 293, 294, 296, 299, 300, 301, 302, 303, 309, 332, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355], "nonperiodic_x": [13, 309, 332], "nonperiodic_i": [13, 309, 332], "consider": [13, 273, 279, 280, 292, 326], "compute_planar_hex_nx_ni": [13, 309, 332], "lx": [13, 80, 309, 332, 345, 351, 352, 353, 356], "ly": [13, 80, 309, 332, 345, 352, 356], "explan": 13, "subtleti": 13, "account": [13, 80, 313, 332, 334, 335, 337, 338, 339, 340, 358], "behav": 13, "stagger": [13, 80], "physic": [13, 80, 322, 328, 332, 342], "np": [13, 15, 19, 196, 309, 332, 347], "sqrt": [13, 15, 351], "domain": [13, 25, 32, 80, 124, 141, 157, 163, 292, 305, 326, 332, 345, 347, 349, 351, 352, 353, 356, 357, 362, 364], "extra": [13, 313, 338], "factor": [13, 97], "500e3": 13, "160e3": 13, "1e3": [13, 309, 332], "max": [13, 141, 309, 332, 342, 345, 347, 352], "int": [13, 14, 25, 26, 35, 38, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 87, 93, 94, 97, 123, 124, 143, 144, 146, 147, 148, 152, 155, 157, 158, 167, 168, 190, 192, 203, 204, 213, 218, 225, 226, 239, 244, 251, 282, 309, 332, 356], "ds_mesh": [13, 15, 19, 86, 124, 283, 284, 286, 309, 332], "creation": [13, 309, 333], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 93, 94, 157, 305, 309, 312, 332], "distant": 13, "descend": [14, 17, 141, 294, 295, 296, 297, 299, 301, 302, 303, 305, 306, 309, 311, 312, 332], "modelstep": [14, 141, 309, 311, 332], "update_pio": [14, 25, 157], "make_graph": [14, 25, 157], "At": [14, 38, 49, 307, 308, 311, 332, 349], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 94, 157, 167, 225, 251, 306, 309, 310, 330, 332, 333, 335, 338, 340, 358, 363], "prefix": [14, 40, 138, 141, 146, 147, 190, 203, 204, 213, 239, 311, 313, 333], "end": [14, 124, 151, 154, 282, 283, 284, 309, 311, 312, 313, 328, 330, 332, 335, 345, 346, 347, 351, 353, 356, 361], "yml": 14, "reason": [14, 17, 44, 138, 309, 312, 332, 363], "add_namelist_fil": [14, 25, 141, 309, 311], "add_model_config_opt": [14, 25, 141, 309, 311, 332], "add_streams_fil": [14, 25, 141, 309, 311], "themselv": [14, 312, 331], "question": [14, 309, 333], "never": [14, 138, 330], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 141, 332], "config_run_dur": [14, 141, 311, 332], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 165, 330, 332], "config_block_decomp_file_prefix": [14, 332], "time_integr": [14, 141, 332, 346, 347, 348, 349, 354, 355], "config_time_integr": [14, 141], "rk4": [14, 141, 312, 346, 347, 348, 349, 354, 355], "filename_templ": [14, 141, 332], "restart": [14, 18, 49, 141, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 306, 310, 312, 318, 319, 328, 330, 332, 358, 363], "output_interv": [14, 141, 332, 346, 347, 348, 349, 354, 355], "0030_00": 14, "clobber_mod": [14, 141, 332], "truncat": [14, 141, 332], "reference_tim": [14, 141], "0001": [14, 141, 332], "01_00": [14, 141, 326, 332], "tracer": [14, 19, 186, 196, 252, 253, 255, 257, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 332, 343, 347, 348, 350, 351, 353, 354, 355, 356], "xtime": [14, 15, 87, 141, 332], "normalveloc": [14, 18, 19, 141, 183, 241, 292, 293, 299, 300, 301, 304, 309, 332, 356], "layerthick": [14, 18, 141, 183, 273, 277, 278, 279, 280, 281, 293, 299, 300, 301, 304, 309, 332], "refzmid": [14, 273, 279, 280, 309, 332], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 332], "clariti": [14, 309], "global_converg": [14, 311, 332, 344], "substitut": 14, "config_write_output_on_startup": [14, 332], "0000_00": [14, 332], "config_use_mom_del2": [14, 332], "config_implicit_bottom_drag_coeff": [14, 332], "0e": [14, 353, 356], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 332], "config_cvmix_background_viscos": [14, 332], "worri": 14, "togeth": [14, 18, 138, 305, 330, 332, 363], "overkil": 14, "reli": [14, 309, 311, 332], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 89, 90, 92, 96, 97, 113, 115, 116, 122, 126, 127, 128, 141, 143, 151, 154, 160, 189, 202, 212, 238, 260, 262, 267, 309, 311, 332], "config_mom_del2": [14, 293, 300, 309, 332], "precis": [14, 141, 309, 332], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 60, 61, 64, 110, 111, 115, 120, 121, 122, 123, 124, 128, 153, 156, 157, 169, 175, 186, 193, 199, 227, 251, 253, 255, 257, 262, 267, 281, 282, 284, 332], "possibli": [14, 38, 49, 288, 289, 306, 309, 311, 313, 332], "at_setup": [14, 30, 153, 169, 175, 193, 227, 332], "being": [14, 30, 38, 49, 110, 112, 115, 121, 138, 141, 153, 169, 175, 193, 227, 282, 309, 311, 312, 332, 342], "dt": [14, 141, 167, 251, 309, 332, 345, 346, 347, 348, 349, 351, 353, 354, 355, 357, 362], "proport": [14, 141, 332, 342, 345, 346, 347, 348, 349, 351, 353, 354, 355, 357, 362], "dt_per_km": [14, 141, 294, 295, 296, 297, 302, 303, 332, 345, 351, 353, 357, 362], "stackoverflow": [14, 60, 332], "1384565": [14, 332], "7728169": [14, 60, 332], "config_dt": [14, 141, 332], "strftime": [14, 332], "gmtime": [14, 332], "run_time_step": [14, 167, 225, 309, 332], "durat": [14, 141, 293, 299, 300, 301, 304, 310, 332], "run_second": [14, 332], "btr_dt": [14, 141, 167, 251, 309, 332, 345], "btr_dt_per_km": [14, 141, 332, 345], "config_btr_dt": [14, 141, 332], "bit": [14, 138, 312, 330, 332, 345, 358], "complic": [14, 312, 313, 332], "slightli": [14, 313], "sophist": 14, "immutable_stream": [14, 332], "var_struct": [14, 325], "var": [14, 117, 325, 332], "var_arrai": [14, 325], "tag": [14, 331], "taken": [14, 25, 157, 284, 294, 295, 296, 297, 302, 303, 309, 332, 340, 358], "past": 14, "experi": [14, 138, 312, 342], "difficult": [14, 138, 339], "synchron": [14, 331], "out_nam": 14, "equival": [14, 313, 332, 334], "template_replac": [14, 28, 29, 141], "treat": [14, 310, 312], "jinja2": [14, 28, 29, 116, 151, 154], "render": [14, 28, 29, 116], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 309, 312, 313, 333, 358], "qu240dynamicadjust": 14, "adjust": [14, 138, 141, 290, 333], "interv": [14, 15, 162, 346, 347, 348, 349, 354, 355], "spin": 14, "reus": [14, 19, 124, 309, 312, 313, 332, 333, 358], "qualit": 14, "forgotten": 14, "broken": [14, 309, 312], "immedi": [14, 67, 313, 332], "miss": [14, 309, 332, 333], "detect": [14, 19, 333, 334, 336, 337, 339, 349, 358], "gpmeti": [14, 333], "divid": [14, 19, 286, 342], "partition_graph": [14, 25, 157], "circumst": [14, 18, 38, 39, 309, 332], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 329, 332, 357, 362], "v1": [14, 342], "better": [14, 17, 138, 358], "v2": [14, 333, 342], "littl": [14, 312, 313, 331, 332], "feel": [14, 138, 309, 332], "runtime_setup": [14, 17, 35, 45, 293, 299, 300, 301, 311], "yourself": [14, 332, 339], "culler": 14, "cull": [14, 293, 299, 300, 301, 309, 332], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 83, 85, 86, 123, 124, 141, 144, 145, 146, 147, 190, 197, 203, 204, 208, 213, 239, 261, 269, 273, 279, 280, 281, 282, 283, 284, 287, 288, 289, 292, 293, 297, 299, 300, 301, 304, 332, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355], "weight": [14, 15, 17, 85, 273, 279, 280, 283, 284, 286, 287, 332, 342], "weight_field": [14, 85], "helper": [15, 305, 306], "handi": 15, "area_for_field": 15, "right": [15, 137, 138, 139, 141, 282, 311, 313, 332, 333, 342, 345, 347, 358], "edg": [15, 19, 86, 99, 102, 106, 123, 124, 214, 215, 240, 241, 283, 284, 285, 292, 332], "dimens": [15, 19, 86, 124, 141, 143, 148, 190, 203, 281, 288, 289, 304, 345], "statist": [15, 333], "calcul": [15, 299, 309, 311], "xr": [15, 19, 214, 215, 216, 240, 241, 242, 309, 332], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 147, 204], "mesh_filenam": [15, 19, 25, 85, 123, 157, 163], "open_dataset": [15, 19, 309, 332], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 87, 141, 289, 305], "get_output_field": [15, 141], "field_nam": [15, 19, 124, 145, 146, 147, 190, 203, 204, 213, 239, 261], "output_filenam": [15, 141, 151, 154, 163], "ds_out": [15, 283, 284], "time_index": [15, 87], "isel": [15, 19, 281], "frequent": [17, 290, 325], "observ": [17, 283, 284, 287, 331], "dataset": [17, 86, 87, 124, 214, 240, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 309, 332], "region": [17, 19, 331, 333], "pyremap": [17, 103], "interpol": [17, 97, 282, 283, 284, 286, 287, 288, 289, 333], "hood": 17, "esmf_regridweightgen": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 338, 342], "bilinear": [17, 97, 282, 347, 357, 362], "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 333], "destin": [17, 97, 98, 99, 100, 101, 102, 103], "src_from_lon_lat": 17, "lon_var": [17, 98, 100, 105], "lat_var": [17, 98, 100, 105], "dst_from_mpa": 17, "mesh_nam": [17, 98, 99, 100, 101, 102, 105, 106, 107, 144, 146, 147, 156, 190, 197, 203, 204, 208, 213, 239, 269, 311], "qu60": 17, "subclass": [17, 72, 75, 76, 77, 82, 141, 332], "src_": 17, "dst_": 17, "pick": [17, 108, 109], "vizmap": [17, 186, 199, 257, 311], "128": [17, 310, 335, 336, 340], "cosine_bell_viz": [17, 19, 295, 347, 357, 362], "dlon": [17, 102, 347, 357, 362], "dlat": [17, 102, 347, 357, 362], "remap_method": [17, 347, 357, 362], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 102], "With": [17, 313], "approach": [17, 309, 312, 313, 329, 332, 342], "perhap": [17, 19, 41, 282, 305, 307], "cover": [17, 326, 332], "nearli": [17, 309, 311, 330, 331, 332], "workflow": [17, 309, 313], "critic": [18, 332], "easiest": [18, 138, 313], "validate_var": [18, 38, 41, 141, 151, 154, 251, 309], "meth": 18, "add_output_fil": [18, 39, 309, 311, 332], "temperatur": [18, 183, 292, 293, 300, 301, 304, 309, 328, 332, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 362], "salin": [18, 183, 292, 293, 300, 304, 309, 332, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 362], "done": [18, 35, 45, 309, 311, 313, 332, 358], "compare_vari": [18, 332], "filename1": [18, 121, 332], "filename2": [18, 121, 332], "compact": [18, 332], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 121], "valueerror": [18, 312], "quiet": [18, 110, 111, 121, 128], "report": 18, "threshold": [18, 141, 302, 346, 347, 348, 349, 351, 353, 354, 355], "l1": [18, 121], "00000000000000e": 18, "l2": [18, 121, 141, 144, 145, 294, 295, 296, 297, 302, 303, 346, 347, 348, 349, 351, 353, 354, 355], "l_infin": 18, "linf": [18, 121], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 293, 345], "2thread": [18, 345], "test_20210616": 18, "further_valid": 18, "zero": [18, 274, 275, 276, 277, 278, 281, 283, 284, 287, 292, 293, 300, 304, 332, 346, 347, 348, 354, 355, 356], "l1_norm": [18, 121], "l2_norm": [18, 121], "linf_norm": [18, 121], "nonzero": [18, 121], "solut": [18, 136, 144, 146, 147, 190, 203, 204, 213, 214, 215, 216, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 295, 297, 299, 301, 310, 329, 332, 343, 349, 350, 351], "aspect": [19, 124, 332], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 138, 157, 290, 313, 332, 333, 345, 352], "plot_horiz_field": [19, 309, 332], "patch": [19, 123, 124, 332], "polygon": 19, "character": [19, 346, 348, 352, 354, 355], "accordingli": [19, 95], "cell_mask": [19, 124], "ds_init": [19, 332], "maxlevelcel": [19, 141, 273, 274, 275, 276, 277, 278, 279, 280, 332], "final_normalveloc": [19, 332], "t_index": [19, 124, 332], "vmin": [19, 124, 282, 332, 347], "max_veloc": [19, 332], "vmax": [19, 124, 282, 332, 347], "cmap": [19, 124, 282, 309, 332], "cmo": [19, 309, 332, 346, 348, 349, 354, 355], "balanc": [19, 199, 297, 309, 332, 346, 348, 349, 354, 355], "show_patch_edg": [19, 124, 309, 332], "water": [19, 297, 299, 332, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357], "column": [19, 249, 250, 252, 253, 255, 297, 304, 313, 317, 318, 319, 321, 322, 323, 325, 326, 328, 342, 343, 349, 350, 358, 359, 360], "increas": [19, 141, 312], "effici": [19, 309, 332], "patch_mask": [19, 124], "subsequ": [19, 309, 363], "ncell": [19, 141, 190, 203, 281, 288, 289, 309, 332], "nedg": [19, 309, 332], "cell_patch": 19, "cell_patch_mask": 19, "out_file_nam": [19, 124], "720": 19, "figsiz": [19, 123, 124, 282], "bottomdepth": [19, 141, 273, 274, 276, 277, 278, 279, 280, 309, 332, 342, 349], "edge_patch": 19, "edge_patch_mask": 19, "plot_global_mpas_field": 19, "cmocean": [19, 309, 332], "noqa": [19, 67, 309, 332], "f401": [19, 309, 332], "da": [19, 123, 288, 289], "tracer1": [19, 141, 346, 348, 354, 355], "nvertlevel": [19, 124, 141, 143, 148, 273, 279, 280, 281, 288, 289, 309, 332, 342], "out_filenam": [19, 119, 122, 123, 272, 282], "colormap_sect": [19, 122, 123], "titl": [19, 122, 123, 124, 141, 143, 148, 282], "plot_land": [19, 122, 123], "central_longitud": [19, 123], "180": [19, 69, 76, 77, 83, 102, 141, 286, 346, 347, 348, 354, 355], "disabl": [19, 292, 347, 364], "contin": [19, 122, 123], "overlain": 19, "degre": [19, 69, 76, 77, 83, 102, 281, 284, 286, 333, 345, 352], "quantiti": 19, "antimeridian": 19, "colormap": [19, 122, 123, 124, 282, 294, 295, 296, 297, 302, 303, 332, 346, 347, 348, 349, 354, 355], "cosin": [19, 141, 186, 188, 189, 191, 194, 196, 197, 205, 208, 265, 269, 295, 311, 332, 343, 344, 346, 348, 349, 350, 354, 355, 357, 362], "bell": [19, 141, 186, 188, 189, 191, 194, 196, 197, 205, 208, 265, 269, 295, 311, 332, 343, 344, 346, 348, 349, 350, 354, 355, 357, 362], "converg": [19, 186, 190, 199, 203, 204, 210, 211, 213, 236, 237, 239, 261, 294, 295, 296, 297, 299, 301, 302, 303, 307, 310, 331, 332, 346, 347, 348, 349, 351, 354, 355, 357, 362], "colormap_nam": [19, 122, 123, 294, 295, 296, 302, 303, 346, 347, 348, 349, 354, 355], "viridi": [19, 294, 295, 296, 302, 303, 332, 346, 347, 348, 354, 355], "norm": [19, 121, 122, 123, 141, 145, 148, 294, 295, 296, 297, 302, 303, 346, 347, 348, 349, 351, 353, 354, 355], "norm_typ": [19, 122, 123, 294, 295, 296, 302, 303, 346, 347, 348, 349, 354, 355], "colorbar": [19, 122, 123, 124, 282, 294, 295, 296, 302, 303, 346, 347, 348, 349, 354, 355], "colorbar_limit": [19, 123, 294, 295, 296, 302, 303, 346, 348, 349, 354, 355], "standard": [19, 224, 225, 230, 300, 312, 313, 322, 332, 335, 352, 358], "logarithm": [19, 124], "upper": [19, 124], "bound": [19, 287, 299, 301], "plot_global_lat_lon_field": 19, "norm_arg": [19, 122, 347], "tick": [19, 122, 347], "mark": [19, 124, 282, 313, 347], "colorbar_tick": [19, 122, 347], "symlog": [19, 122], "symmetr": 19, "central": [19, 347], "color": [19, 123, 124, 282], "normal": [19, 214, 215, 240, 241, 292, 297, 309, 310, 313, 332, 339, 349], "symlognorm": 19, "lognorm": 19, "hous": [20, 346, 347, 348, 354, 355], "kei": [20, 49, 115, 141, 143, 311], "max_memori": [25, 35, 38, 45, 157, 309], "graph_filenam": [25, 85, 151, 154, 157], "make_yaml": 25, "stride": [25, 37, 157], "partit": [25, 34, 44, 62, 85, 157, 293, 299, 300, 301, 309, 333, 334, 335, 336, 337, 338, 358], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 97, 157, 167, 225, 251, 309], "nor": [25, 38, 49, 97, 157, 167, 225, 251, 309, 332], "append": [25, 38, 40, 49, 97, 157, 165, 166, 167, 170, 173, 174, 176, 178, 181, 182, 184, 224, 225, 228, 230, 232, 251, 309, 319, 321, 323], "ideal": [25, 35, 38, 45, 93, 94, 97, 141, 157, 167, 225, 251, 252, 253, 255, 305, 309, 312, 331, 332, 333, 364], "fewer": [25, 35, 38, 45, 93, 94, 157, 167, 225, 251, 309, 332, 358], "memori": [25, 35, 38, 45, 157, 309, 333], "mb": [25, 35, 38, 45, 157, 309, 333], "placehold": [25, 35, 38, 45, 157, 309, 358], "diverg": [31, 160, 296, 343, 346, 349, 350, 354], "counterpart": [31, 141, 160], "nest": [31, 126, 128, 160], "graph_fil": 32, "run_as_subprocess": [38, 309], "smallest": [38, 309, 330, 342, 364], "unit": [38, 98, 102, 105, 309, 330, 345, 364], "term": [38, 330, 332, 351, 353], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 309, 311, 358], "finish": [38, 39, 82, 309, 332], "known": [38, 39, 138, 295, 309, 332], "suffici": [38, 309, 352], "establish": [38, 39, 309], "has_shared_config": 38, "is_depend": [38, 309], "machine_info": [38, 309], "machineinfo": 38, "base_work_dir": [38, 49, 112, 309, 311], "log_filenam": [38, 49, 309, 311], "redirect": [38, 309], "extern": [38, 138, 290, 306, 309, 311, 325, 343, 359], "turn": [38, 56, 306, 309, 329, 332, 356], "database_compon": [40, 309], "work_dir_target": [40, 309], "come": [40, 138, 309, 313, 332, 334, 335, 336, 337, 338, 339, 340, 343], "_database_root": 40, "available_resourc": [42, 92], "constrain": [42, 152, 155, 158, 168, 192, 218, 226, 244, 293, 299, 300, 301, 309, 332], "cores_per_nod": [42, 92, 95, 138, 333, 334, 335, 336, 337, 338, 339, 340, 358], "everi": [43, 293, 309, 311, 312, 328, 329, 330, 332, 345, 356], "child": [43, 141, 306, 309, 311, 312], "subtask": 45, "step_symlink": [49, 311], "outsid": [49, 50, 305, 307, 309, 311, 313], "stdout_logg": [49, 311], "goe": [49, 309, 311, 332], "regardless": [49, 311], "new_step_log_fil": [49, 311], "run_by_default": [50, 311], "assum": [51, 116, 127, 138, 313, 332, 340, 345], "prior": [51, 309], "step_path": 55, "variant": [55, 188, 201, 257, 259, 293, 300, 305, 310, 312, 313, 332, 339, 342, 345, 346, 347, 348, 352, 354, 355], "uncach": 55, "datestamp": 55, "yymmdd": [55, 333], "dry": [55, 310], "meta": 57, "empti": [57, 282, 309, 312, 313, 330, 332], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 111, 313], "isadirectoryerror": 60, "show_progressbar": 61, "fix": [61, 141, 332], "permiss": [61, 313], "everyon": 61, "progress": [61, 110, 111], "bar": [61, 124], "qo": [62, 334, 335, 337, 339, 340, 358], "qualiti": [62, 334, 335, 337, 339, 340, 358], "servic": [62, 334, 335, 337, 339, 340, 358], "wall_tim": [62, 358], "wall": [62, 358], "target_cor": 63, "min_cor": 63, "decomposition_test": [67, 305, 358], "decompositiontest": [67, 305], "e501": [67, 332], "turquois": [67, 335], "usr": [67, 138, 335, 358], "climat": [67, 334, 335, 336, 339, 358], "mhoffman": 67, "constant": [68, 75, 76, 141, 282, 283, 284, 292, 303, 332, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 362], "latitud": [69, 76, 98, 100, 102, 105, 122, 123, 141, 281, 284, 346, 347, 348, 349, 354, 357, 362], "longitud": [69, 76, 77, 83, 98, 100, 102, 105, 122, 123, 141, 281, 284, 346, 347, 348, 349, 354, 357, 362], "ndarrai": [69, 76, 77, 83, 87, 122, 124, 163, 196, 271, 272, 332], "length": [69, 76, 77, 83, 352], "90": [69, 76, 77, 83, 141, 309, 346, 347, 348, 354, 355], "static": [70, 71], "rule": 70, "thumb": 70, "achiev": [71, 310], "uniform": [75, 80, 151, 154, 191, 205, 264, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 305, 311, 332, 333, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 362], "natur": 80, "jigsawpi": [81, 309], "jigsaw_jig_t": 81, "area": [86, 283, 284, 332], "dt_target": 87, "start_xtim": 87, "char": 87, "defaults_filenam": 88, "total": [92, 309, 310, 312, 332, 333, 335, 358], "substep": [93, 94], "command_line_arg": 93, "cpus_per_nod": 95, "map_filenam": 97, "src_grid_info": 97, "dst_grid_info": 97, "neareststod": [97, 347, 357, 362], "conserv": [97, 347, 357, 362], "expand_dist": 97, "meter": [97, 196, 271, 272, 284, 346, 348, 354], "expand": [97, 141, 342], "expand_factor": 97, "src_mesh_filenam": 97, "scrip": [97, 137, 139, 333], "dst_mesh_filenam": 97, "map_": 97, "source_typ": 97, "_": [97, 138, 309, 311, 313, 332, 352, 356], "dest_typ": 97, "1d": [98, 102, 105, 122, 141, 271, 272, 273, 274, 275, 276, 277, 279, 280], "2d": [98, 102, 105, 122, 287, 294], "5x0": [98, 102, 105], "5degre": [98, 102, 105], "coordin": [98, 100, 101, 105, 107, 122, 124, 214, 240, 273, 279, 280, 281, 283, 284, 286, 287, 341, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 361], "mesh_typ": [99, 106, 305, 309, 311], "vertex": [99, 106], "x_var": [101, 107], "y_var": [101, 107], "proj_attr": [101, 107], "proj_str": [101, 107], "proj": [101, 107, 338], "left": [102, 141, 282, 332, 342, 345, 347], "remapp": [103, 104], "remap_fil": 103, "is_task": 111, "steps_to_skip": 111, "component_nam": 112, "config_filepath": 112, "unpickl": [113, 309], "cached_step": 114, "task_list": 115, "_all": 115, "streams_filenam": 116, "lxml": [116, 118, 132], "etre": [116, 118, 132], "new_child": 117, "children": 117, "sub": [117, 332], "new_tre": 118, "infin": [121, 346, 348, 354, 355], "toler": 121, "data_arrai": 122, "colorbar_label": [122, 123, 282], "subtitl": [122, 123], "dpi": [123, 282], "200": [123, 141, 282, 299, 301, 332, 345, 351, 353, 356], "patch_edge_color": 123, "horizont": [123, 124, 141, 163, 281, 282, 287, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 345, 346, 348, 351, 352, 353, 354, 355, 356], "inch": [123, 124, 282], "dot": [123, 124, 282, 312], "face": 123, "ax": [124, 282], "z_index": 124, "cmap_set_und": 124, "cmap_set_ov": 124, "cmap_scal": 124, "cmap_titl": 124, "vert_dim": 124, "transect_x": 124, "transect_i": 124, "transect_color": 124, "black": [124, 282], "transect_start": 124, "red": [124, 282, 307], "transect_end": 124, "green": [124, 282, 307], "transect_linewidth": 124, "transect_markers": 124, "depth": [124, 141, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 287, 332, 333, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357], "slice": [124, 144], "fieldnam": 124, "matplotlib": [124, 125, 282, 332], "multi": [124, 282], "panel": [124, 282], "visibl": 124, "ratio": 124, "Not": 124, "transect": [124, 141, 281, 282, 333], "marker": 124, "style": [125, 141, 331, 332], "classmethod": 127, "jinja": [127, 141, 294, 295, 296, 302, 303], "namelist_templ": 131, "polarisyaml": [131, 132], "processed_registry_filenam": 132, "registri": [132, 292, 325], "steam": 132, "1_anvil_intel_impi": [133, 138], "ve": [133, 134, 135, 136, 137, 139, 313, 332], "1_anvil_gnu_openmpi": 133, "1_chicoma": 134, "cpu_gnu_mpich": [134, 139], "crai": [134, 137, 138, 139, 338, 340], "1_chrysalis_intel_openmpi": 135, "1_chrysalis_gnu_openmpi": 135, "soon": [136, 138, 332, 358], "1_compy_intel_impi": 136, "1_compy_gnu_openmpi": 136, "1_frontier_gnu_mpich": 137, "1_frontier_crayclang_mpich": 137, "load_polaris_env": [138, 313, 332, 358], "therefor": [138, 309, 330, 332], "chicoma": [138, 339, 358], "mpich": [138, 313, 331, 335, 338, 340, 358], "compi": [138, 337, 358], "frontier": [138, 339], "crayclang": [138, 338], "pm": [138, 340, 358], "compymcnodefac": [138, 339], "pretti": [138, 309, 312, 332, 333], "conda_path": [138, 313], "osx": [138, 339], "clang": [138, 313], "1_": 138, "morpheu": 138, "cobalt": [138, 334, 335, 336, 337, 338, 339, 340], "single_nod": [138, 333, 334, 335, 336, 337, 338, 339, 340, 358], "mpirun": [138, 329, 333, 334, 335, 336, 337, 338, 339, 340, 358], "srun": [138, 309, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 358], "parallel_execut": [138, 329, 333, 334, 335, 336, 337, 338, 339, 340, 358], "modules_befor": [138, 335, 338, 340], "modules_aft": [138, 335, 338, 340], "polaris_env": [138, 334, 335, 336, 337, 338, 339, 340], "deploi": [138, 313, 331, 334, 335, 336, 337, 338, 339, 340], "mpi_gnu": [138, 334, 335, 336, 337, 338, 339, 340], "hdf5": [138, 334, 335, 336, 337, 338, 339, 340], "use_e3sm_hdf5_netcdf": [138, 334, 335, 336, 337, 338, 339, 340], "discoveri": 138, "hostnam": 138, "hostname_contain": 138, "queu": 138, "laptop": [138, 313, 332, 333], "workstat": [138, 313], "high": [138, 309, 336, 339], "hpc": [138, 313, 335, 339], "safest": [138, 313], "mpi_": 138, "simpl": [138, 141, 312, 325, 332, 358], "compiler_gnu": 138, "compiler_intel": 138, "hopefulli": [138, 333], "parlanc": 138, "concret": 138, "ubuntu": 138, "spec": [138, 329, 340], "gcc": 138, "curl": 138, "81": 138, "buildabl": 138, "install_missing_compil": 138, "cc": [138, 338], "bin": [138, 313, 340, 358], "cxx": 138, "f77": 138, "fc": 138, "operating_system": 138, "ubuntu22": 138, "04": 138, "extra_rpath": 138, "luck": 138, "catch": [138, 310, 313], "22": 138, "guess": [138, 332], "correct": [138, 313], "potenti": [138, 163, 176, 230, 309, 332, 345, 352], "purg": 138, "perl": 138, "32": [138, 310, 358], "bsnc6lt": 138, "ugetvbp": 138, "sxfyy4k": 138, "2020": 138, "304": 138, "n3b5fye": 138, "j3zxncu": 138, "7ohuiwq": 138, "k2zu3y5": 138, "mirrcz7": 138, "variou": [138, 249, 309, 313, 317], "ask": 138, "gb": 138, "minut": [138, 293, 310, 345, 352, 363], "hour": [138, 141, 299, 301, 310, 328, 335, 340, 346, 347, 348, 349, 351, 353, 354, 355, 358, 361], "zlib": 138, "incompat": 138, "ubuntu20": 138, "readlin": 138, "pkgconf": 138, "spackdir": 138, "env": [138, 340], "arch": 138, "repositori": [138, 307, 331, 332, 358], "x86_64_v4": 138, "free": [138, 292, 332, 333], "touch": [138, 283, 284, 313], "everyth": 138, "1_pm": 139, "cpu_intel_mpich": 139, "ever": [141, 312], "oceanmodelstep": [141, 309, 332], "decid": [141, 332], "veri": [141, 306, 309, 312, 313, 325, 332, 349, 356], "earli": [141, 343, 358], "stage": [141, 292, 309, 311, 313, 321, 328, 343, 358], "map_yaml_to_namelist": 141, "heurist": 141, "round": [141, 346, 347, 348, 354, 355], "cell_count": [141, 152, 155, 158, 168, 192, 218, 226, 244, 332], "goal_cells_per_cor": [141, 332, 346, 347, 348, 351, 352, 353, 354, 355, 357, 362], "pinch": 141, "2000": [141, 305, 326, 328, 332, 361], "max_cells_per_cor": [141, 332, 346, 347, 348, 351, 352, 353, 354, 355, 357, 362], "seciton": 141, "control": [141, 294, 295, 296, 297, 302, 303, 309, 333, 345, 346, 347, 348, 354, 355, 356, 358], "scale": [141, 345, 354, 358], "tri": [141, 312], "apport": 141, "dai": [141, 162, 176, 230, 293, 294, 295, 296, 297, 300, 302, 303, 304, 328, 332, 345, 346, 347, 348, 349, 352, 354, 355, 356, 361], "form": [141, 300, 352, 364], "dddd_hh": [141, 162], "ss": [141, 162], "get_time_interval_str": 141, "run_dur": [141, 346, 347, 348, 349, 354, 355], "fill": 141, "dt_str": 141, "run_duration_str": 141, "output_interval_str": 141, "yaml_filenam": [141, 151, 154], "caviti": [141, 312, 332, 333, 342], "frazil": 141, "flux": [141, 292, 300, 352, 356], "add_spherical_base_mesh_step": [141, 311], "spherical_converg": [141, 297, 311, 346, 347, 348, 354, 355], "icos_resolut": [141, 346, 347, 348, 354, 355], "480": [141, 346, 347, 348, 354, 355], "qu_resolut": [141, 346, 347, 348, 354, 355], "150": [141, 346, 347, 348, 352, 354, 355], "210": [141, 342, 346, 347, 348, 354, 355], "evalu": [141, 144, 145, 146, 147, 190, 203, 204, 213, 215, 216, 239, 241, 242, 261, 294, 296, 302, 303, 346, 347, 348, 349, 354, 355], "convergence_eval_tim": [141, 346, 347, 348, 349, 354, 355], "24": [141, 295, 347, 361], "convergence_thresh": [141, 347], "error_typ": [141, 144, 145, 346, 347, 348, 349, 354, 355], "convergence_forward": [141, 294, 295, 296, 302, 303, 347, 349], "split_explicit": [141, 346, 347, 348, 349, 354, 355], "rk4_dt_per_km": [141, 346, 347, 348, 349, 354, 355], "split": [141, 312], "split_dt_per_km": 141, "barotrop": [141, 167, 251, 309, 332, 345, 356], "simul": [141, 299, 301, 309, 330, 332, 344, 345, 346, 349, 351, 353, 357, 358, 362], "numer": [141, 294, 296, 302, 303, 346, 348, 351, 353, 354, 355], "infti": [141, 342], "inf": [141, 144, 145, 349], "infrastructur": [141, 312, 332], "add_cosine_bell_task": [141, 306], "sphericalconvergenceforward": [141, 294, 295, 296, 297, 302, 303], "invok": 141, "analyz": [141, 143, 189, 202, 260, 262, 267, 332, 346, 347, 348, 354, 355], "split_explicit_t": [141, 332], "convergenceforward": [141, 299, 301], "convergenceanalysi": [141, 294, 295, 296, 297, 299, 301, 302, 303], "convergence_var": [141, 143], "zidx": [141, 143, 144, 146, 147, 148, 190, 203, 204, 213, 239], "exact_solut": 141, "state": [141, 146, 163, 165, 166, 173, 176, 181, 190, 203, 213, 224, 230, 239, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 310, 332, 347, 349], "put": [141, 313, 332], "grid_1d": 141, "generate_1d_grid": 141, "vertical_grid": [141, 271, 273, 279, 280, 305, 309, 332, 333, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "z": [141, 143, 144, 146, 147, 148, 190, 203, 204, 213, 239, 274, 275, 276, 277, 278, 279, 280, 332, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "star": [141, 278, 280, 332, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "init_vertical_coord": [141, 309, 332], "minlevelcel": [141, 273, 275, 276, 277, 278, 279, 280, 332], "cellmask": [141, 273, 276, 279, 280, 332], "zmid": [141, 273, 279, 280, 332], "restingthick": [141, 273, 278, 279, 280, 332], "entir": [141, 332, 345, 352, 363], "petersen": [141, 313, 332, 345], "et": [141, 332, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355], "al": [141, 332, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355], "2015": [141, 332, 345], "int_": 141, "rho": 141, "dv": 141, "sort": [141, 306, 307, 312, 313], "compute_rp": [141, 332], "csv": [141, 294, 295, 296, 297, 302, 303, 332], "compute_transect": [141, 282], "plot_transect": [141, 281], "dependencies_dict": 143, "rate": [143, 145, 146, 190, 203, 213, 239, 261, 294, 295, 296, 297, 299, 301, 302, 303, 332, 346, 347, 348, 349, 351, 353, 354, 355, 356], "variable_nam": [144, 148], "exact": [144, 146, 147, 190, 203, 204, 213, 214, 215, 216, 239, 240, 241, 242, 295, 297, 299, 301, 312, 351, 353], "conv_thresh": [145, 261, 351, 353], "deriv": [146, 213, 239], "subdivid": [156, 283, 284, 311], "dynamic_ntask": 157, "dynam": [157, 290, 304, 333, 345, 346, 347, 348, 349, 354, 355, 356, 357], "available_cor": 159, "estim": [159, 161, 332], "time_str": 162, "initial_state_filenam": 163, "energi": [163, 176, 230, 331, 332, 345, 352], "len": [163, 332], "output_fil": [163, 309, 332], "shorter": [173, 310, 318], "step_subdir": [182, 319], "processor": [182, 309, 319, 345], "include_viz": [186, 199, 257, 311], "advect": [186, 224, 225, 230, 257, 294, 295, 296, 297, 300, 302, 303, 346, 347, 348, 351, 352, 353, 354, 355, 356], "less": [186, 199, 257, 262, 267, 309, 342], "max_valu": 196, "ri": 196, "accord": [196, 349, 351, 353, 358], "radiu": [196, 284, 346, 347, 348, 354, 355], "testcas": [207, 234, 332, 333, 345, 356, 358], "inerti": [210, 211, 212, 214, 217, 219, 221, 299, 311, 343, 350], "graviti": [210, 211, 212, 214, 217, 219, 221, 299, 311, 343, 350], "wave": [210, 211, 212, 214, 217, 219, 221, 223, 224, 225, 228, 230, 232, 234, 240, 299, 300, 309, 311, 332, 343, 345, 350, 353], "analys": [212, 238], "angleedg": [214, 240], "angl": [214, 240, 349], "posit": [214, 240, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 332, 342, 356], "xcell": [214, 240, 309, 332], "ycell": [214, 240, 309, 332], "xedg": [214, 240, 309, 332], "yedg": [214, 240], "f0": 214, "corioli": [214, 299, 301, 332, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356], "eta0": [214, 240], "amplitid": [214, 240], "kx": [214, 240], "ky": [214, 240], "angular": [214, 240], "frequenc": [214, 240, 293], "veloc": [215, 241, 292, 293, 297, 299, 300, 301, 311, 313, 332, 346, 347, 348, 349, 354, 355, 356, 358], "norm_vel": 215, "eta": [216, 242, 351, 353], "taskdir": [219, 221, 245, 247], "vadv_method": [224, 225, 230], "vlr": [224, 225, 230, 300, 352], "cross": [234, 332], "test_cas": 234, "manufactur": [236, 237, 238, 240, 243, 245, 247, 301, 343, 350], "mix": [250, 305, 306, 346, 351, 353, 356], "param": [250, 252], "resources_fix": 251, "ag": [252, 253, 255], "evolv": [252, 331, 342, 346, 347, 348, 354, 355, 356], "ideal_ag": [253, 255], "case_nam": [257, 260, 262, 264, 265, 267], "transport": [259, 260, 262, 264, 267, 294, 296, 302, 303, 346, 347, 348, 354, 355], "nondivergent_2d": [259, 290, 298, 354], "divergent_2d": [259, 290, 298, 348], "correlated_tracers_2d": [259, 290, 298, 346], "rotation_2d": [259, 290, 298, 355], "layer": [271, 272, 273, 277, 278, 279, 280, 281, 282, 287, 292, 293, 294, 296, 299, 300, 301, 302, 303, 304, 332, 333, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "bottom": [273, 274, 275, 276, 277, 278, 279, 280, 292, 332, 333, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357], "thick": [273, 277, 278, 279, 280, 281, 287, 293, 294, 296, 297, 300, 302, 303, 304, 326, 332, 333, 342, 345, 346, 348, 349, 351, 354, 355, 361], "stretch": [273, 279, 280, 332, 342], "elev": [273, 279, 280, 332, 342], "midpoint": [273, 279, 280, 332], "reftopdepth": [273, 276, 277, 279, 280, 332], "down": [273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 332, 342, 347], "ref": [273, 279, 280, 332], "middl": [273, 279, 280, 282, 332], "refbottomdepth": [273, 274, 275, 276, 277, 279, 280, 309, 332], "refinterfac": [273, 279, 280, 332], "element": [273, 279, 280, 332], "vertcoordmovementweight": [273, 279, 280, 332], "movement": [273, 279, 280, 332], "alter": [274, 275, 309, 311, 331, 332, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357], "partial": [274, 275, 332, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "seafloor": [274, 276, 277, 278, 281, 282, 287, 342], "min_vert_level": [276, 342], "min_layer_thick": [276, 333, 342], "unstretch": 278, "ds_horiz_mesh": 281, "layer_thick": [281, 287], "bottom_depth": [281, 287, 309, 332, 333, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357], "min_level_cel": [281, 287], "max_level_cel": [281, 287], "quad": 281, "intersect": [281, 283, 284, 285], "instant": 281, "tidx": 281, "ds_transect": [281, 282, 287, 288, 289], "vert": 281, "find_transect_levels_and_weight": [281, 288, 289], "mpas_field": 282, "flat": [282, 342, 345, 349], "outline_color": 282, "ssh_color": 282, "seafloor_color": 282, "interface_color": 282, "cell_boundary_color": 282, "linewidth": 282, "color_start_and_end": 282, "start_color": 282, "end_color": 282, "3d": 282, "outlin": 282, "boundari": [282, 287, 331, 345, 352, 364], "inset": 282, "axi": [282, 309, 332, 355], "plot_start_end": 282, "x_transect": 283, "y_transect": 283, "ds_tri": [283, 284, 285, 286], "subdivision_r": [283, 284], "10000": [283, 284, 351, 353], "triangl": [283, 284, 285, 286, 287], "segment": [283, 284, 285, 287], "mesh_to_triangl": [283, 284, 285], "scipi": [283, 284, 285, 333], "spatial": [283, 284, 285, 356], "ckdtree": [283, 284, 285], "make_triangle_tre": [283, 284], "candid": [283, 284], "enough": [283, 284, 285, 293, 300, 309, 312, 332], "curvatur": [283, 284], "lie": [283, 284], "purposefulli": [283, 284], "repeat": [283, 284], "discontinu": [283, 284, 348, 354, 355], "xnode": [283, 286], "ynode": [283, 286], "dnode": [283, 284], "horiztriangleindic": [283, 284], "horiztrianglenodeindic": [283, 284], "mod": [283, 284], "horizcellindic": [283, 284], "interphorizcellindic": [283, 284], "interphorizcellweight": [283, 284], "averag": [283, 284], "xtransect": 283, "ytransect": 283, "dtransect": [283, 284], "transectindicesonhoriznod": [283, 284], "transectweightsonhoriznod": [283, 284], "nodevalu": [283, 284], "transectvalu": [283, 284], "lon_transect": 284, "lat_transect": 284, "earth_radiu": 284, "radian": [284, 286], "earth": [284, 331], "sphere_radiu": 284, "cartesian": [284, 286, 355], "xcartnod": 284, "ycartnod": 284, "zcartnod": 284, "lonnod": [284, 286], "latnod": [284, 286], "lontransect": 284, "lattransect": 284, "xcarttransect": 284, "ycarttransect": 284, "zcarttransect": 284, "great": [284, 332], "circl": 284, "kd": 285, "connect": [286, 332, 340], "pair": [286, 346, 348, 354, 355, 361], "tricellindic": 286, "nodecellindic": 286, "nodecellweight": 286, "znode": 286, "counterclockwis": 286, "wind": [286, 349, 356], "ds_horiz_transect": 287, "horiz": 287, "find_spherical_transect_cells_and_weight": 287, "find_planar_transect_cells_and_weight": 287, "transectz": 287, "bilinearli": 287, "nsegment": [287, 288], "nhalflevel": [287, 288], "quadrilater": 287, "nhoriznod": [287, 289], "nvertnod": [287, 289], "corner": 287, "validcel": 287, "validnod": 287, "ztransectnod": 287, "zseafloor": 287, "floor": [287, 342], "cellindic": 287, "levelindic": 287, "interpcellindic": 287, "interplevelindic": 287, "nhorizweight": 287, "nvertweight": 287, "interpcellweight": 287, "multipli": [287, 346, 347, 348, 349, 354, 355], "dinterfaceseg": 287, "zinterfaceseg": 287, "dcellboundari": 287, "zcellboundari": 287, "interp_mpas_to_transect_cel": 287, "interp_mpas_to_transect_nod": 287, "among": [288, 289, 305, 307, 313, 332], "da_cel": 288, "whatev": [288, 289, 358], "besid": [288, 289], "linearli": 289, "neighbor": 289, "da_nod": 289, "shelv": [290, 333, 342], "ssh_adjust": [290, 309, 333], "compass_branch": 290, "example_compact": [290, 306, 325, 333], "default_input": [290, 306, 325, 332, 333], "ocean_model": [290, 313, 333], "latest": [290, 313, 325, 331, 343, 358], "compat": [290, 313, 325, 329, 331], "verison": 290, "geostroph": [290, 298, 343, 350], "internal_wav": [290, 298, 352], "manufactured_solut": [290, 298, 306, 353], "single_column": [290, 298, 306, 325, 327, 356], "minim": 292, "fcell": [292, 309, 332, 346, 347, 348, 354, 355], "fedg": [292, 309, 332, 346, 347, 348, 354, 355], "fvertex": [292, 309, 332, 346, 347, 348, 354, 355], "slip": 292, "solid": [292, 326, 345, 347, 352], "tangenti": 292, "nonperiod": 292, "drag": [292, 294, 295, 296, 297, 302, 303], "mass": 292, "momentum": [292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 351, 353], "scalar": 292, "rigid": [292, 355], "solv": [292, 329, 342], "mid": [292, 345, 354], "vari": [292, 294, 295, 296, 297, 302, 303, 309, 329, 339, 342, 347, 349], "consult": [292, 332], "tidal_forc": 292, "eddi": [293, 345], "addition": [293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 309, 334, 335, 336, 337, 338, 340], "diffus": [293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304], "50": [293, 299, 300, 301, 332, 345, 351, 353, 356], "prescrib": [293, 299, 300, 301, 349], "intens": [293, 300], "sphere_transport": [294, 296, 302, 303, 346, 348, 354, 355], "spheretransport": [294, 296, 302, 303], "deform": [294, 302, 354], "flow": [294, 296, 302, 303, 345, 346, 347, 348, 349, 354, 355], "distribut": [294, 295, 296, 302, 303, 346, 348, 354, 355], "scheme": [294, 296, 300, 302, 303, 346, 352, 354, 356], "correlated_trac": 294, "differenti": [294, 296, 302, 303], "convergence_": [294, 296, 302, 303], "mixinganalysi": 294, "relationship": [294, 346], "correl": [294, 343, 350], "triplot": 294, "fast": [294, 295, 296, 297, 302, 303, 332], "sphere_transport_viz_": [294, 296, 302, 303], "cosinebel": [295, 311], "shape": [295, 347], "blob": 295, "around": [295, 332, 333, 345, 346, 347, 348, 352, 354, 355], "convergence_tracer1": 295, "convergence_h": 297, "convergence_normalveloc": 297, "shallow": [299, 313, 346, 347, 348, 349, 351, 353, 354, 355, 357], "100": [299, 301, 304, 342, 351, 353, 356], "25": [299, 301, 346, 348, 351, 353, 354, 355, 356], "exactsolut": [299, 301], "obtain": [299, 301, 313, 335], "normal_veloc": [299, 301, 309, 332], "assign": [299, 301, 347], "fall": [299, 301, 358], "accept": [299, 301], "5km": [300, 352], "lagrangian": [300, 352], "manufacturedsolut": 301, "nondiverg": [302, 343, 350], "filamentanalysi": 302, "filament": [302, 354], "rotat": [303, 343, 346, 347, 348, 350, 351, 353, 354], "exercis": [304, 328, 346, 347, 348, 349, 354, 355, 356], "kpp_test": 304, "mixedlayerdepthsoutput": 304, "idealagetrac": [304, 356], "single_column_forc": [304, 356], "profil": [304, 329, 356], "throughout": [304, 345, 352, 356], "idealag": 304, "enabel": 304, "formal": 305, "organ": [305, 307, 310, 331], "conceptu": [305, 312], "broadli": [305, 306, 312], "realist": [305, 331, 364], "greenland": [305, 331, 364], "2000m": [305, 358], "34": [305, 358], "halfar": 305, "cism": 305, "dome_typ": 305, "put_origin_on_a_cel": 305, "hydrologi": 305, "hydro": [305, 364], "dome_viz": 305, "time_slic": 305, "save_imag": 305, "hide": [305, 332], "hide_fig": 305, "clutter": 305, "smoke_test": [305, 311], "smoketest": [305, 311], "restart_test": 305, "restarttest": 305, "add_dome_task": 305, "variable_resolut": [305, 309, 358], "talk": 305, "reduc": [305, 309], "encompass": 306, "perspect": 306, "four": 306, "broader": 306, "univers": 306, "add_inertial_gravity_wave_task": 306, "add_manufactured_solution_task": 306, "add_single_column_task": 306, "alphabet": [306, 332], "landice_model": [306, 313], "diagram": 307, "blue": [307, 334, 358], "orang": 307, "laid": 307, "fig": 307, "organiz": 307, "concept": [307, 312, 332, 364], "somewher": 309, "multiprocess": [309, 312, 333], "aspir": 309, "emploi": 309, "unwant": 309, "outer": 309, "inner": 309, "dome_varres_grid": 309, "signific": [309, 310, 311], "neglig": 309, "culled_graph": [309, 332], "meshstep": 309, "getint": 309, "mesh_cpus_per_task": 309, "mesh_min_cpus_per_task": 309, "fit": [309, 333], "applic": [309, 312, 313, 357, 362], "launch": [309, 331], "write_netcdf": [309, 332], "convers": [309, 332], "greater": [309, 332], "graphinfofilenam": [309, 332], "culled_mesh": [309, 332], "use_dist": [309, 332, 345, 352], "gradient_width_dist": [309, 332, 345], "gradient_width_frac": [309, 332, 345], "bottom_temperatur": [309, 332, 345, 352], "surface_temperatur": [309, 332, 345, 352, 356], "temperature_differ": [309, 332, 345, 352], "coriolis_paramet": [309, 332, 345, 351, 352, 353, 356], "x_cell": [309, 332], "y_cell": [309, 332], "ones_lik": [309, 332], "zeros_lik": [309, 332], "x_min": [309, 332], "min": [309, 332, 342, 345, 352, 356], "x_max": [309, 332], "y_min": [309, 332], "y_max": [309, 332], "y_mid": [309, 332], "x_perturb_min": [309, 332], "x_perturb_max": [309, 332], "perturb_width": [309, 332, 345], "y_offset": [309, 332], "sin": [309, 332, 345, 346, 348, 349, 351, 352, 353, 354], "pi": [309, 332, 342, 345, 346, 347, 348, 349, 354], "temp_vert": [309, 332], "frac": [309, 332, 342, 345, 346, 348, 351, 354], "logical_and": [309, 332], "transpos": [309, 332], "3rd": [309, 332], "crest": [309, 332, 345], "expand_dim": [309, 332], "dim": [309, 332], "broadcast": [309, 332], "xvertex": [309, 332], "attr": [309, 332], "initial_temperatur": [309, 332], "initial_normal_veloc": [309, 332], "superclass": 309, "commandlin": 309, "harm": 309, "likewis": [309, 332], "arisen": 309, "problemat": 309, "add_depend": 309, "usual": [309, 311, 313, 332, 358], "forwardstep": 309, "mesh_path": 309, "mesh_step": 309, "with_ice_shelf_cav": 309, "initial_state_target": 309, "adjusted_init": 309, "forcing_data": 309, "init_mode_forcing_data": 309, "entha_analy_result": 309, "mat": 309, "enthalpy_benchmark": 309, "ourselv": 309, "firewal": 309, "bedmachineantarctica_v2_and_gebco_2022_0": 309, "05_degree_20220729": 309, "slate": 309, "icepresent_qu60km_polar": 309, "practic": [309, 312, 313], "straightforward": 309, "commonli": [309, 330], "notat": [309, 357, 362], "phc": [309, 342], "That": [309, 312, 330, 332, 358], "word": 309, "ff": 309, "quwisc240": [309, 312, 358], "90c": 309, "91c": 309, "92": [309, 342], "91": 309, "sowisc12to60": [309, 358], "performance_test": 309, "transfer": 309, "feasibl": 309, "overhead": 309, "philosophi": [310, 312, 332], "context": [310, 332], "namesak": 310, "256": [310, 335, 340], "quicker": 310, "exce": 310, "offer": 310, "benefit": [310, 331], "bug": 310, "coverag": 310, "exhaust": 310, "recent": [310, 343, 359], "merg": 310, "reach": 310, "steadi": [310, 349], "wet": 310, "fundament": 311, "incorpor": 311, "velo_solv": 311, "sia": [311, 313], "fo": 311, "runmodel": 311, "run_step": 311, "0200": 311, "00_00": [311, 326, 332], "recip": 311, "demonstr": [311, 332], "fairli": [311, 312, 313, 332], "_cosine_bel": 311, "_with_viz": 311, "_setup_step": [311, 332], "_resolut": 311, "remove_step": 311, "analysis_depend": 311, "base_mesh_step": 311, "cos_bell_dir": 311, "_init_": 311, "init_step": 311, "_forward_": 311, "forward_step": 311, "with_viz_dir": 311, "_map_": 311, "viz_map": 311, "_viz_": 311, "rare": [311, 313], "480km": 311, "closer": 311, "imp_r": 311, "joinpath": 311, "initial_condit": 312, "dig": [312, 333], "background": [312, 346, 348, 352, 354, 355], "adher": [312, 332], "pep8": [312, 313], "bot": [312, 342], "violat": 312, "consid": 312, "editor": 312, "pycharm": [312, 313, 332], "spyder": 312, "linter": 312, "flake8": [312, 313], "discourag": [312, 330], "reformat": 312, "autopep8": 312, "undesir": 312, "lint": 312, "wildcard": 312, "vim": [312, 332], "plugin": 312, "id": [312, 313], "commit": [312, 313], "why": 312, "sound": 312, "subpackag": 312, "understand": [312, 333], "downstream": 312, "tutori": [312, 313], "clu": 312, "intro": 312, "docstr": [312, 331, 332], "strip": 312, "mpas_ocean": 312, "hidden": 312, "shortcut": [312, 358], "referenc": [312, 332], "mention": 312, "charact": 312, "unix": [312, 331], "distinct": 312, "mayb": [312, 332], "machine_config": 312, "endswith": 312, "splitext": 312, "exactli": [312, 313, 332, 342], "move": [312, 313, 332, 357, 362], "renam": 312, "visa": 312, "versa": 312, "comfort": [312, 332], "inherit": [312, 332], "orient": [312, 349], "program": [312, 333], "led": 312, "felt": 312, "contribut": 312, "hesit": 312, "predecessor": [312, 330, 331], "clumsi": 312, "harder": 312, "outcom": 312, "augment": 312, "explain": 312, "hope": 312, "dens": 312, "learn": [312, 332], "curv": 312, "worth": [312, 332], "skill": 312, "endeavor": 312, "manipul": 312, "get_available_cores_and_nod": 312, "theoret": 312, "dozen": 312, "theori": 312, "biogeochemistri": 312, "ksh": 313, "mac": [313, 331], "csh": 313, "tcsh": 313, "temporarili": 313, "recogn": [313, 333, 358], "anyon": 313, "caus": [313, 335, 340, 342], "person": [313, 329], "base_path_to_install_or_update_conda": 313, "with_netlib_lapack": 313, "flavor": [313, 332], "troubl": [313, 332], "recognit": 313, "downsid": 313, "unneed": 313, "reinstal": 313, "caution": 313, "load_": 313, "encod": 313, "load_dev_polaris_": [313, 332], "env_nam": 313, "dev_polaris_": [313, 329], "update_jigsaw": 313, "workdir": [313, 358], "unexpect": [313, 330, 332], "occur": [313, 329, 342], "echo": 313, "proceed": 313, "notic": 313, "conda_env": [313, 358], "match": [313, 332], "load_polaris_test_morpheus_gnu_openmpi": 313, "__version__": 313, "rememb": 313, "incorrect": 313, "unus": 313, "session": [313, 332], "pip": 313, "substanti": 313, "unsupport": 313, "env_onli": 313, "risk": [313, 332], "mpas_make_target": [313, 358], "scientif": [313, 358], "_albani": 313, "instruct": [313, 332], "es3m": 313, "compli": 313, "memor": 313, "guidelin": 313, "complianc": 313, "checker": 313, "isort": 313, "flynt": 313, "mypi": 313, "77": 313, "e302": 313, "blank": 313, "resolv": 313, "simpler": [313, 332], "new_branch_nam": 313, "disk": [313, 333, 335, 340], "respons": 313, "simplest": [313, 331], "your_new_branch": 313, "restart_filenam": 319, "polaris_branch": 325, "post": 325, "src": 325, "registry_process": 325, "seaice_model": 325, "1m": [326, 361], "disc": [326, 361], "config_initial_ice_area": 326, "config_initial_ice_volum": 326, "config_atmospheric_forcing_typ": 326, "config_forcing_start_tim": 326, "config_forcing_cycle_start": 326, "config_forcing_cycle_dur": 326, "config_forcing_precipitation_unit": 326, "mm_per_sec": 326, "config_forcing_sst_typ": 326, "ncar": 326, "config_update_ocean_flux": 326, "config_include_pond_freshwater_feedback": 326, "standard_phys": 328, "standardphys": 328, "year": [328, 343, 361], "volum": 328, "snow": 328, "exact_restart": 328, "exactrestart": 328, "geo": 329, "cartopi": 329, "14": 329, "np110py27_4": 329, "calledprocesserror": 329, "deploy_tmp": 329, "vpn": 329, "site": 329, "shell": [329, 331], "honor": 329, "wide": 329, "spawn": 329, "usernam": [329, 332, 335, 338, 340], "proxy_en": 329, "all_proxi": 329, "proxyout": 329, "8080": 329, "no_proxi": 329, "localhost": [329, 333, 339, 340, 358], "127": 329, "proxy_dis": 329, "unset": 329, "anytim": 329, "fatal": 329, "mpi_init": 329, "stack": 329, "mpir_init_thread": 329, "159": 329, "mpid_init": 329, "164": 329, "mpidi_ch3_init": 329, "95": 329, "mpid_nem_init": 329, "314": 329, "mpid_nem_tcp_init": 329, "173": 329, "mpid_nem_tcp_get_business_card": 329, "395": 329, "getsockinterfaceaddr": 329, "369": 329, "pn2034311": 329, "errno": 329, "host": [329, 333, 339, 358], "focus": 330, "autom": 331, "exascal": 331, "kept": 331, "expert": 331, "uncoupl": 331, "extens": [331, 333], "primarili": 331, "darren": 331, "engwirda": 331, "quick": [331, 332, 343, 359], "queue": 331, "beginn": [331, 332], "advanc": [331, 332], "mpas_to_yaml": 331, "troubleshoot": 331, "proxi": 331, "lanl": [331, 333, 335], "gethostbynam": 331, "glossari": 332, "stick": 332, "miniconda": 332, "3_chrysalis_intel_openmpi": 332, "strict": 332, "push": 332, "lowercas": 332, "hyphen": 332, "settl": 332, "desktop": 332, "realli": [332, 340], "nice": [332, 340], "supercomput": 332, "yet_another_channel": 332, "testgroup": 332, "vi": 332, "polaris_head": 332, "yetanotherchannel": 332, "instanc": 332, "repres": [332, 342, 347, 354], "highli": 332, "camelcas": 332, "capit": 332, "letter": 332, "cap": 332, "awkward": 332, "encourag": 332, "enclos": 332, "briefli": 332, "baroclinicchannel": 332, "globalconverg": 332, "add_test_group": 332, "interest": 332, "test_group": 332, "add_test_cas": 332, "anyth": 332, "probabl": [332, 339, 349], "suppos": 332, "easili": 332, "tide": 332, "sai": [332, 339], "res_str": 332, "1000": [332, 333, 342, 345, 349, 351, 353], "still": [332, 343, 357, 358, 362], "ti": 332, "loop": 332, "1km": [332, 345, 358], "4km": [332, 345, 358], "coarsest": [332, 333], "especi": 332, "promot": 332, "pattern": 332, "familiar": 332, "seen": 332, "brows": 332, "row": 332, "disadvantag": 332, "foremost": 332, "magic": 332, "effect": [332, 357], "pain": 332, "160": [332, 345], "500": [332, 333, 342, 345, 352], "path_to_mpas_ocean": 332, "path_to_working_dir": 332, "cat": 332, "slurm_jobid": 332, "_run_test": 332, "gpf": 332, "fs1": 332, "cbegeman": 332, "grid_typ": [332, 333, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "vert_level": [332, 333, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "coord_typ": [332, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "partial_cell_typ": [332, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "min_pc_fract": [332, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357], "everywher": 332, "depress": [332, 342], "mostli": 332, "logic": [332, 345, 352], "northern": [332, 345, 352], "half": [332, 345, 352], "southern": [332, 345], "halv": [332, 345], "gradient": [332, 345, 351, 352, 353, 356], "500km": [332, 345, 352], "40e3": [332, 345], "35": [332, 345, 346, 347, 348, 349, 352, 354, 355, 356, 357, 358, 362], "2e": [332, 345], "light": 332, "e3sm_compon": 332, "interact": [332, 335, 338, 339, 340, 358], "interrupt": 332, "pty": 332, "navig": 332, "newli": 332, "bunch": 332, "didn": 332, "mistak": 332, "finger": 332, "initial_normalveloc": 332, "initial_salin": 332, "obvious": 332, "stress": [332, 356], "landicemodelstep": 332, "huge": 332, "cp": 332, "05": [332, 349], "hmix_del2": 332, "bottom_drag": 332, "cvmix": 332, "0002": 332, "filename_interv": 332, "0100": 332, "input_interv": 332, "initial_onli": 332, "basicmesh": 332, "dayssincestart": 332, "surfacespe": 332, "lowersurfac": 332, "uppersurfac": 332, "ureconstructx": 332, "ureconstructi": 332, "load_dataset": 332, "final_temperatur": 332, "ab": 332, "proc": 332, "4proc": [332, 345], "8proc": [332, 345], "markdown": 332, "developers_guid": 332, "users_guid": 332, "daunt": 332, "flesh": 332, "bonu": 332, "improv": 332, "introduc": 332, "techniqu": 332, "aim": 332, "constrain_resourc": 332, "becam": 332, "mainten": 332, "counter": 332, "thought": 332, "yet_another_channel_test_cas": 332, "yetanotherchanneltestcas": 332, "choic": [332, 346, 347, 348, 349, 354, 355], "spuriou": [332, 345], "dissip": [332, 345], "pop": [332, 345], "mom": [332, 345], "mitgcm": [332, 345], "higher": 332, "heavi": 332, "analogi": 332, "tet": 332, "bear": 332, "late": 332, "_add_step": 332, "startswith": 332, "enumer": 332, "rpe_": 332, "_nu_": 332, "privat": 332, "break": [332, 345], "unusu": 332, "rpe_1_nu_1": [332, 345], "rpe_2_nu_5": [332, 345], "rpe_3_nu_10": 332, "rpe_4_nu_20": 332, "rpe_5_nu_200": 332, "20_00": 332, "0000": 332, "dayssincestartofsim": 332, "relativevort": 332, "pyplot": 332, "plt": 332, "output_": 332, "sections_yet_another_channel_": 332, "rpe_t": 332, "init_filenam": 332, "initial_state_file_nam": 332, "_plot": 332, "dirti": 332, "adopt": 332, "lesson": 332, "tricki": 332, "commun": 332, "nuanc": 332, "fake": 332, "wasn": 332, "fold": 332, "proper": 332, "third": 332, "previous": 332, "multinod": [333, 358], "explanatori": 333, "my_machin": 333, "extend": 333, "gitconfig": 333, "enter": 333, "author": 333, "email": 333, "pull_request": 333, "28": [333, 342, 346], "address": [333, 346, 354], "metadata": 333, "customize_config_pars": 333, "server_base_url": 333, "inej": 333, "check_siz": 333, "ssl": 333, "certif": 333, "core_path": 333, "partition_execut": 333, "dask": 333, "netcdf4": 333, "netcdf4_class": 333, "netcdf3_64bit": 333, "netcdf3_class": 333, "engin": 333, "mesh_databas": 333, "ocean_database_root": 333, "landice_database_root": 333, "mesh_cor": 333, "mesh_min_cor": 333, "mesh_max_memori": 333, "mesh_max_disk": 333, "init_cor": 333, "init_min_cor": 333, "init_max_memori": 333, "init_max_disk": 333, "init_thread": 333, "forward_cor": 333, "forward_min_cor": 333, "forward_thread": 333, "forward_max_memori": 333, "forward_max_disk": 333, "add_metadata": 333, "ec": 333, "wc": 333, "mesh_descript": 333, "autodetect": 333, "bathy_descript": 333, "gebco": 333, "2022": 333, "bedmachin": 333, "antarctica": 333, "init_descript": 333, "e3sm_vers": 333, "increment": 333, "mesh_revis": 333, "finest": 333, "min_r": 333, "max_r": 333, "max_depth": 333, "creation_d": 333, "peopl": 333, "contact": 333, "temperaturemax": 333, "temperature_max": 333, "33": [333, 352, 358], "enable_ocean_initial_condit": 333, "enable_ocean_graph_partit": 333, "enable_seaice_initial_condit": 333, "enable_scrip": 333, "onlin": 333, "member": 333, "offlin": 333, "enable_diagnostics_fil": 333, "coarser": [333, 342, 346, 347, 348, 349, 354, 355], "finer": [333, 342], "comparisonlatresolut": 333, "comparisonlonresolut": 333, "antarct": 333, "polar": [333, 334, 336, 342], "stereograph": 333, "comparisonantarcticstereowidth": 333, "6000": [333, 342], "comparisonantarcticstereoresolut": 333, "arctic": [333, 361], "comparisonarcticstereowidth": 333, "comparisonarcticstereoresolut": 333, "tanh_dz": 333, "16": [333, 356, 358], "3000": [333, 349], "max_layer_thick": [333, 342], "retain": 333, "ecosystem": 334, "gain": 334, "confluenc": 334, "public_html": [334, 336, 339], "soft": [334, 336, 339, 358], "mpi_intel": [334, 336, 337, 339], "36": [334, 339, 356, 358], "condo": [334, 358], "acm": [334, 358], "medium": 334, "acme_high": 334, "environo": [334, 335, 336, 337, 338, 340], "dst": 335, "calendar": 335, "network": 335, "introduct": 335, "platform": 335, "batch": [335, 338], "wtrw": 335, "ch": 335, "fe": 335, "lustr": [335, 338], "scratch4": 335, "scratch5": 335, "sacctmgr": 335, "assoc": 335, "cluster": 335, "45": 335, "sshare": 335, "sreport": 335, "accountutilizationbyus": 335, "2019": 335, "prioriti": 335, "yellow": 335, "chkhome": 335, "petabyt": 335, "df": 335, "bp": 335, "archiv": [335, 340], "hpss": [335, 340], "front": 335, "tn": 335, "storag": 335, "project_nam": 335, "salloc": [335, 338, 339, 340], "account_nam": 335, "gpu": [335, 338, 340], "hyperthread": [335, 338, 340], "hang": [335, 340], "threads_per_cor": [335, 338, 340], "compyf": 337, "app": [337, 358], "pmi2": 337, "40": [337, 349], "olcf": 338, "ornl": 338, "cli115": 338, "poari": 338, "orion": 338, "world": 338, "software_compil": 338, "gnugpu": 338, "mpi_gnugpu": 338, "mpi_crayclang": 338, "crayclanggpu": 338, "mpi_crayclanggpu": 338, "cray_compil": [338, 340], "submit": 339, "workload": 339, "squeue": 339, "my_usernam": [339, 340], "scancel": 339, "jobid": 339, "cancel": 339, "emtpi": 339, "three": [339, 346, 348, 349, 354, 355, 364], "mpi_mpich": [339, 358], "mpi_openmpi": [339, 358], "nompi": [339, 358], "p1": 340, "nersc": 340, "iri": 340, "filesystem": 340, "myquota": 340, "prjquota": 340, "projectid": 340, "m1795": 340, "hsi": 340, "htar": 340, "zstash": 340, "cf": [340, 358], "cdir": [340, 358], "premium": 340, "8844": 340, "monik": 340, "browser": 340, "grab": 340, "logon": 340, "kernel": 340, "myenv": 340, "ipykernel": 340, "kernelspec": 340, "u1": 340, "interpret": 340, "argv": 340, "ipykernel_launch": 340, "connection_fil": 340, "display_nam": 340, "languag": 340, "2500": 342, "transit": [342, 346, 347, 348, 354, 355], "transition_level": 342, "deepest": 342, "stewart": 342, "2017": 342, "delta": [342, 345, 349, 356], "z_2": 342, "z_1": 342, "mathrm": 342, "tanh": 342, "rightarrow": 342, "z_k": 342, "z_0": 342, "z_": [342, 356], "k": 342, "finder": 342, "n_z": 342, "h_": 342, "hyperbol": 342, "tangent": 342, "k_0": 342, "v3": 342, "5500": 342, "250": [342, 352], "scienc": 342, "hydrograph": 342, "climatologi": 342, "renorm": 342, "arrm10to60": 342, "80": 342, "146": 342, "5550": 342, "51": 342, "221": 342, "ziso": [342, 364], "63": 342, "collaps": 342, "adcroft": 342, "campin": 342, "2004": 342, "absenc": 342, "squash": 342, "press": 342, "batymetri": 342, "stair": 342, "terrain": 342, "month": 343, "websit": [343, 359], "release_6": 343, "ilicak": [345, 352], "2012": [345, 346, 348, 352, 354, 355], "variat": [345, 349], "distinguish": 345, "zonal": [345, 349, 352, 356], "meridion": [345, 352, 356], "psu": [345, 352, 356], "cooler": 345, "north": 345, "sinusoid": [345, 352], "perturb": [345, 347, 352, 353], "t_0": 345, "t_b": 345, "t_": 345, "z_b": 345, "y_": 345, "l_x": 345, "warmer": 345, "ge": [345, 347], "gradient_width_fract": 345, "l_y": 345, "le": [345, 356], "stationari": [345, 356], "literatur": 345, "mk": 345, "celsiu": 345, "prognost": 345, "lauritzen": [346, 348, 354, 355], "nonlinear": [346, 349, 351, 353], "mixing_analysi": 346, "icosohydr": [346, 347, 348, 354, 355], "nearest": [346, 347, 348, 354, 355], "insensit": [346, 347, 348, 349, 354, 355, 356], "300": [346, 347, 348, 354, 355, 357], "debugtrac": [346, 348, 354, 355], "tracer2": [346, 348, 354, 355], "tracer3": [346, 348, 354, 355], "nonlinearli": 346, "tau": [346, 347, 348, 354], "lambda": [346, 348, 349, 354], "theta": [346, 348, 349, 354], "co": [346, 347, 348, 349, 351, 353, 354], "equat": [346, 347, 348, 349, 351, 353, 354, 355, 356], "vel_pd": [346, 347, 348, 354, 355], "rung": [346, 347, 348, 349, 354, 355], "kutta": [346, 347, 348, 349, 354, 355], "4th": [346, 347, 348, 349, 354, 355], "spherical_convergence_forward": [346, 348, 354, 355], "globe": [346, 347, 348, 354, 355], "correlated_tracer_2d": 346, "288": [346, 348, 354, 355], "cosine_bells_radiu": [346, 348, 354, 355], "cosine_bells_background": [346, 348, 354, 355], "amplitud": [346, 348, 351, 352, 353, 354, 355], "cosine_bells_amplitud": [346, 348, 354, 355], "slot": [346, 348, 354, 355], "cylind": [346, 348, 354, 355], "slotted_cylinders_radiu": [346, 348, 354, 355], "slotted_cylinders_background": [346, 348, 354, 355], "slotted_cylinders_amplitud": [346, 348, 354, 355], "sphere_transport_viz_trac": [346, 348, 354, 355], "sphere_transport_viz_tracer_diff": [346, 348, 354, 355], "sphere_transport_viz_h": [346, 348, 354, 355], "99": [346, 348, 354, 355], "101": [346, 348, 354, 355], "sphere_transport_viz_h_diff": [346, 348, 354, 355], "vel_amp": [346, 348, 354], "convergence_thresh_tracer1": [346, 348, 354, 355], "convergence_thresh_tracer2": [346, 348, 354, 355], "66": 346, "convergence_thresh_tracer3": [346, 348, 354, 355], "mixing_evaluation_tim": 346, "sphere_transport_viz": [346, 348, 354, 355], "roughli": [346, 347, 348, 354, 355], "studi": [346, 347, 348, 349, 354, 355], "williamson": [347, 349], "1992": [347, 349], "sec": 347, "3a": 347, "skamarock": 347, "gassmann": 347, "bodi": 347, "psi": 347, "proportion": [347, 349], "slow": 347, "passiv": 347, "psi_0": 347, "debug_tracers_1": 347, "equatori": 347, "u_0": [347, 348, 349, 354], "tendenc": [347, 353], "rad": 347, "lat_cent": 347, "lon_cent": 347, "14159265": 347, "2123666": 347, "6667": 347, "hill": 347, "psi0": 347, "576": 347, "circul": 347, "48": 348, "86": 348, "chosen": [349, 356], "h_0": 349, "textrm": 349, "sensit": 349, "l_1": 349, "l_2": 349, "l_": 349, "examin": [349, 356], "vel_period": 349, "gh_0": 349, "94e4": 349, "william": 349, "paper": [349, 358], "arbitrari": 349, "evolut": [349, 352], "unexpectedli": 349, "convergence_thresh_h": 349, "convergence_thresh_normalveloc": 349, "necessit": 349, "geostropnic_viz": 349, "geostrophic_viz_h": 349, "deep": 349, "geostrophic_viz_vel": 349, "geostrophic_viz_diff_h": 349, "geostrophic_viz_diff_vel": 349, "propag": [351, 352, 353], "doubli": [351, 353], "assess": [351, 353], "accuraci": [351, 353], "discret": [351, 353], "bishnu": [351, 353], "friction": [351, 353], "neglect": [351, 353], "analyt": [351, 364], "k_x": [351, 353], "k_y": [351, 353], "availi": [351, 353], "coriloi": 351, "1e": 351, "ssh_amplitud": [351, 353], "wavelength": [351, 353], "n_wavelengths_x": [351, 353], "n_wavelengths_i": [351, 353], "induc": 352, "doi": 352, "org": 352, "1016": 352, "j": [352, 358], "ocemod": 352, "2011": 352, "003": 352, "stabl": 352, "stratif": 352, "20km": 352, "250km": 352, "inher": [352, 357], "background_salin": 352, "amplitude_width_dist": 352, "amplitude_width_frac": 352, "50e3": 352, "del2": 352, "internal_wave_rp": 352, "plot_tim": 352, "min_temp": 352, "max_temp": 352, "embed": 353, "eta_0": 353, "preserv": [354, 358], "rough": 354, "revers": 354, "filament_analysi": 354, "thhe": 354, "filament_evaluation_tim": 354, "offset": 355, "vector": 355, "rotation_vector": 355, "span": 356, "arbitrarili": 356, "virtu": 356, "400": 356, "phi": 356, "phi_0": 356, "dz": 356, "ml": 356, "mld": 356, "surface_x": 356, "x_gradient_mixed_lay": 356, "mixed_layer_depth_x": 356, "x_difference_across_mixed_lay": 356, "x_gradient_interior": 356, "4x4": 356, "960": 356, "degc": 356, "temperature_gradient_mixed_lay": 356, "temperature_difference_across_mixed_lay": 356, "temperature_gradient_interior": 356, "mixed_layer_depth_temperatur": 356, "surface_salin": 356, "salinity_gradient_mixed_lay": 356, "salinity_difference_across_mixed_lay": 356, "salinity_gradient_interior": 356, "mixed_layer_depth_salin": 356, "dictat": 356, "kpp": 356, "restor": 356, "piston": 356, "toward": 356, "temperature_surface_restoring_valu": 356, "temperature_piston_veloc": 356, "salinity_surface_restoring_valu": 356, "salinity_piston_veloc": 356, "temperature_interior_restoring_r": 356, "salinity_interior_restoring_r": 356, "net": 356, "latent": 356, "heat": 356, "bulk": 356, "latent_heat_flux": 356, "sensibl": 356, "sensible_heat_flux": 356, "solar": 356, "shortwav": 356, "shortwave_heat_flux": 356, "evapor": 356, "evaporation_flux": 356, "5e": 356, "rain": 356, "rain_flux": 356, "wind_stress_zon": 356, "wind_stress_meridion": 356, "welcom": [357, 362], "icosohedr": [357, 362], "pertain": [357, 362], "warrant": 357, "investig": 357, "load_latest_polari": 358, "shared_clim": 358, "minu": 358, "load_latest_polaris_gnu_openmpi": 358, "create_polaris_load_script": 358, "load_polaris_1": 358, "0_mpich": 358, "exclud": 358, "wiki": 358, "circular_shelf": 358, "sia_smoke_test": 358, "sia_decomposition_test": 358, "sia_restart_test": 358, "fo_smoke_test": 358, "fo_decomposition_test": 358, "fo_restart_test": 358, "37": 358, "17": 358, "210131_test_new_branch": 358, "my_config": 358, "smaller": 358, "previous_workdir": 358, "recompil": 358, "safer": 358, "test_subdir": 358, "clock": 358, "exclus": 358, "job_nam": 358, "fo_integr": 358, "sia_integr": 358, "cosine_bell_cached_init": [358, 363], "ec30to60": 358, "ecwisc30to60": 358, "qu240_for_e3sm": 358, "quwisc240_for_e3sm": 358, "wc14": 358, "suitenam": 358, "seaice_standalone_framework": 359, "71": 361, "35n": 361, "156": 361, "5w": 361, "atmospher": 361, "timeseri": 361, "prohibit": 363, "speed": 363, "radial": 364}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 2, 1, "", "symlink"], [61, 2, 1, "", "update_permissions"]], "polaris.job": [[62, 2, 1, "", "get_slurm_options"], [63, 2, 1, "", "write_job_script"]], "polaris.list": [[64, 2, 1, "", "list_cases"], [65, 2, 1, "", "list_machines"], [66, 2, 1, "", "list_suites"]], "polaris.logging": [[67, 2, 1, "", "log_method_call"]], "polaris.mesh": [[68, 0, 1, "", "IcosahedralMeshStep"], [75, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [70, 1, 1, "", "get_cell_width"], [71, 1, 1, "", "get_subdivisions"], [72, 1, 1, "", "make_jigsaw_mesh"], [73, 1, 1, "", "run"], [74, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, 1, 1, "", "__init__"], [76, 1, 1, "", "build_cell_width_lat_lon"], [77, 1, 1, "", "make_jigsaw_mesh"], [78, 1, 1, "", "run"], [79, 1, 1, "", "setup"]], "polaris.mesh.planar": [[80, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[81, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, 1, 1, "", "__init__"], [82, 1, 1, "", "run"], [83, 1, 1, "", "save_and_plot_cell_width"], [84, 1, 1, "", "setup"]], "polaris.model_step": [[85, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[86, 2, 1, "", "area_for_field"], [87, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[88, 2, 1, "", "ingest"], [89, 2, 1, "", "parse_replacements"], [90, 2, 1, "", "replace"], [91, 2, 1, "", "write"]], "polaris.ocean": [[142, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[142, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[143, 0, 1, "", "ConvergenceAnalysis"], [151, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "compute_error"], [145, 1, 1, "", "convergence_parameters"], [146, 1, 1, "", "exact_solution"], [147, 1, 1, "", "get_output_field"], [148, 1, 1, "", "plot_convergence"], [149, 1, 1, "", "run"], [150, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "compute_cell_count"], [153, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[154, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "compute_cell_count"]], "polaris.ocean.mesh.spherical": [[156, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[157, 0, 1, "", "OceanModelStep"], [162, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[157, 1, 1, "", "__init__"], [158, 1, 1, "", "compute_cell_count"], [159, 1, 1, "", "constrain_resources"], [160, 1, 1, "", "map_yaml_to_namelist"], [161, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[163, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[164, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[165, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[165, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[166, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[166, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[167, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "compute_cell_count"], [169, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[170, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"], [172, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[173, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[173, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[174, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[176, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[178, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "run"], [180, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[181, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[181, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[182, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[184, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[186, 0, 1, "", "CosineBell"], [188, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[189, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[191, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "compute_cell_count"], [193, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[194, 0, 1, "", "Init"], [196, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[197, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[199, 0, 1, "", "Geostrophic"], [201, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[202, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "exact_solution"], [204, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[205, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[205, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[206, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[208, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[208, 1, 1, "", "__init__"], [209, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[210, 0, 1, "", "InertialGravityWave"], [211, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[210, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[212, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[214, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "normal_velocity"], [216, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[217, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[217, 1, 1, "", "__init__"], [218, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[219, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[221, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[221, 1, 1, "", "__init__"], [222, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave": [[223, 2, 1, "", "add_internal_wave_tasks"]], "polaris.ocean.tasks.internal_wave.default": [[224, 0, 1, "", "Default"]], "polaris.ocean.tasks.internal_wave.default.Default": [[224, 1, 1, "", "__init__"]], "polaris.ocean.tasks.internal_wave.forward": [[225, 0, 1, "", "Forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[225, 1, 1, "", "__init__"], [226, 1, 1, "", "compute_cell_count"], [227, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.internal_wave.init": [[228, 0, 1, "", "Init"]], "polaris.ocean.tasks.internal_wave.init.Init": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.rpe": [[230, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis": [[232, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.viz": [[234, 0, 1, "", "Viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[234, 1, 1, "", "__init__"], [235, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[236, 0, 1, "", "ManufacturedSolution"], [237, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[236, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[238, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[238, 1, 1, "", "__init__"], [239, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[240, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[240, 1, 1, "", "__init__"], [241, 1, 1, "", "normal_velocity"], [242, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[243, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[243, 1, 1, "", "__init__"], [244, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[245, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[247, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[247, 1, 1, "", "__init__"], [248, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[249, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[250, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[250, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[251, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[251, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[252, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[252, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[253, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[253, 1, 1, "", "__init__"], [254, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[255, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[255, 1, 1, "", "__init__"], [256, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[257, 0, 1, "", "SphereTransport"], [259, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[257, 1, 1, "", "__init__"], [258, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[260, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[260, 1, 1, "", "__init__"], [261, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[262, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[262, 1, 1, "", "__init__"], [263, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[264, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[264, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[265, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[265, 1, 1, "", "__init__"], [266, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[267, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[267, 1, 1, "", "__init__"], [268, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[269, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[269, 1, 1, "", "__init__"], [270, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[271, 2, 1, "", "generate_1d_grid"], [272, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[273, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[274, 2, 1, "", "alter_bottom_depth"], [275, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[276, 2, 1, "", "compute_min_max_level_cell"], [277, 2, 1, "", "compute_z_level_layer_thickness"], [278, 2, 1, "", "compute_z_level_resting_thickness"], [279, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[280, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.ocean.viz": [[281, 2, 1, "", "compute_transect"], [282, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[283, 2, 1, "", "find_planar_transect_cells_and_weights"], [284, 2, 1, "", "find_spherical_transect_cells_and_weights"], [285, 2, 1, "", "make_triangle_tree"], [286, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[287, 2, 1, "", "find_transect_levels_and_weights"], [288, 2, 1, "", "interp_mpas_to_transect_cells"], [289, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[92, 2, 1, "", "get_available_parallel_resources"], [93, 2, 1, "", "get_parallel_command"], [94, 2, 1, "", "run_command"], [95, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[96, 2, 1, "", "write"]], "polaris.remap": [[97, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "dst_from_lon_lat"], [99, 1, 1, "", "dst_from_mpas"], [100, 1, 1, "", "dst_from_points"], [101, 1, 1, "", "dst_from_proj"], [102, 1, 1, "", "dst_global_lon_lat"], [103, 1, 1, "", "get_remapper"], [104, 1, 1, "", "runtime_setup"], [105, 1, 1, "", "src_from_lon_lat"], [106, 1, 1, "", "src_from_mpas"], [107, 1, 1, "", "src_from_proj"]], "polaris.run": [[108, 2, 1, "", "complete_step_run"], [109, 2, 1, "", "load_dependencies"], [112, 2, 1, "", "setup_config"], [113, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[110, 2, 1, "", "run_single_step"], [111, 2, 1, "", "run_tasks"]], "polaris.seaice": [[316, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[316, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[317, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[318, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[318, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[319, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[319, 1, 1, "", "__init__"], [320, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[321, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[321, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[322, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[322, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[323, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[323, 1, 1, "", "__init__"], [324, 1, 1, "", "run"]], "polaris.setup": [[114, 2, 1, "", "setup_task"], [115, 2, 1, "", "setup_tasks"]], "polaris.streams": [[116, 2, 1, "", "read"], [117, 2, 1, "", "update_defaults"], [118, 2, 1, "", "update_tree"], [119, 2, 1, "", "write"]], "polaris.suite": [[120, 2, 1, "", "setup_suite"]], "polaris.validate": [[121, 2, 1, "", "compare_variables"]], "polaris.viz": [[122, 2, 1, "", "plot_global_lat_lon_field"], [123, 2, 1, "", "plot_global_mpas_field"], [124, 2, 1, "", "plot_horiz_field"], [125, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[126, 0, 1, "", "PolarisYaml"], [130, 2, 1, "", "main_mpas_to_yaml"], [131, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [132, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[126, 1, 1, "", "__init__"], [127, 1, 1, "", "read"], [128, 1, 1, "", "update"], [129, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 332], "share": [1, 6, 9, 312, 332], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 140, 309, 332, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 362], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 73, 78, 82, 108, 109, 110, 111, 112, 113, 141, 149, 171, 179, 183, 185, 195, 198, 207, 209, 220, 222, 229, 233, 235, 246, 248, 254, 256, 263, 266, 268, 270, 309, 313, 320, 324, 334, 335, 336, 337, 338, 340, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362], "onc": 1, "befor": 1, "depend": [1, 6, 309], "output": [1, 309, 332], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 140, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 298, 305, 308, 311, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 327, 332, 350, 352, 357, 358, 360, 362, 364], "work": 1, "directori": [1, 307], "structur": [1, 307], "i": [1, 358], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 313, 331, 333, 358], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 141, 309, 313, 339], "other": [1, 138, 309, 332, 339, 358], "implement": [1, 2], "set": [1, 141, 313, 358], "up": [1, 313, 358], "test": [1, 2, 6, 140, 141, 332, 333, 361], "And": 1, "valid": [1, 2, 3, 18, 121, 182, 183, 293, 300, 319, 320, 332, 358], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 141, 313, 332, 334, 335, 336, 337, 338, 339, 340, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "same": 2, "api": 3, "refer": [3, 140, 141], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 141, 290, 306, 312, 313, 325, 343, 358, 359], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 309, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 334, 335, 336, 337, 338, 340, 358], "framework": [3, 10, 140, 141, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 312, 315, 328, 341], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 64, 65, 66], "setup": [3, 5, 8, 36, 47, 58, 74, 79, 84, 114, 115, 150, 161, 172, 180, 309], "suit": [3, 5, 8, 120, 310, 344, 358, 363], "cach": [3, 5, 8, 55, 309], "mpas_to_yaml": [3, 5], "base": [3, 140], "class": [3, 312], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 138, 141, 306, 332, 333, 334, 335, 336, 337, 338, 339, 340, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "io": [3, 11, 59, 60, 61], "job": [3, 62, 63, 339, 358], "log": [3, 12, 67], "mesh": [3, 13, 14, 19, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 140, 141, 156, 332, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "model_step": [3, 85], "mpa": [3, 6, 15, 19, 86, 87, 141, 292, 326], "namelist": [3, 14, 88, 89, 90, 91, 141], "parallel": [3, 92, 93, 94, 95], "proven": [3, 16, 96], "remap": [3, 17, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "stream": [3, 14, 116, 117, 118, 119, 141, 332], "viz": [3, 122, 123, 124, 125, 184, 185, 197, 198, 208, 209, 221, 222, 234, 235, 247, 248, 255, 256, 269, 270, 281, 282, 283, 284, 285, 286, 287, 288, 289, 294, 295, 296, 297, 299, 301, 302, 303, 304, 323, 324, 328, 332], "yaml": [3, 14, 126, 127, 128, 129, 130, 131, 132, 141], "build": [4, 138, 313, 358], "serial": [5, 8, 110, 111], "deploi": 6, "new": [6, 138, 332], "spack": [6, 138, 313, 358], "environ": [6, 138, 313, 329, 358], "where": 6, "we": 6, "updat": [6, 14, 128, 313], "mach": 6, "conda": [6, 313, 329, 339, 358], "identifi": 6, "e3sm": [6, 14, 141, 313, 358], "machin": [6, 138, 313, 339, 358], "describ": [6, 138], "modul": [6, 8, 312, 313], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 313, 332], "remot": [6, 340], "branch": 6, "petsc": [6, 313], "netlib": [6, 313], "lapack": [6, 313], "albani": [6, 313], "troubleshoot": [6, 313, 329], "ocean": [6, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 343], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 138, 141, 306, 309, 332, 333], "comment": 9, "symlink": [11, 60, 309], "download": [11, 59, 309], "permiss": 11, "spheric": [13, 19, 81, 82, 83, 84, 140, 141, 154, 155, 156], "planar": [13, 19, 80], "uniform": [13, 141, 342], "gener": 13, "model": [14, 140, 141, 157, 158, 159, 160, 161, 162, 291, 326, 332, 358], "an": [14, 141, 332], "ad": [14, 138, 309, 332], "dynam": [14, 332], "input": [14, 309], "partit": [14, 32], "pio": 14, "make": [14, 332], "graph": 14, "area": 15, "time": [15, 141, 332, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 362], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 140, 141, 332, 361], "common": 19, "matplotlib": 19, "style": [19, 312, 313], "horizont": [19, 332], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 332], "grid": [19, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 153, 169, 175, 193, 227], "map_yaml_to_namelist": [31, 160], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 104, 309], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 159, 309], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 177, 187, 200, 231, 258, 311, 329], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "update_permiss": 61, "get_slurm_opt": 62, "write_job_script": 63, "list_cas": 64, "list_machin": 65, "list_suit": 66, "log_method_cal": 67, "icosahedralmeshstep": [68, 69, 70, 71, 72, 73, 74], "build_subdivisions_cell_width_lat_lon": 69, "get_cell_width": 70, "get_subdivis": 71, "make_jigsaw_mesh": [72, 77], "quasiuniformsphericalmeshstep": [75, 76, 77, 78, 79], "build_cell_width_lat_lon": 76, "compute_planar_hex_nx_ni": 80, "sphericalbasestep": [81, 82, 83, 84], "save_and_plot_cell_width": 83, "make_graph_fil": 85, "area_for_field": 86, "time_index_from_xtim": 87, "ingest": 88, "parse_replac": 89, "replac": 90, "write": [91, 96, 119, 129], "get_available_parallel_resourc": 92, "get_parallel_command": 93, "run_command": 94, "set_cores_per_nod": 95, "mappingfilestep": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "dst_from_lon_lat": 98, "dst_from_mpa": 99, "dst_from_point": 100, "dst_from_proj": 101, "dst_global_lon_lat": 102, "get_remapp": 103, "src_from_lon_lat": 105, "src_from_mpa": 106, "src_from_proj": 107, "complete_step_run": 108, "load_depend": 109, "run_single_step": 110, "run_task": 111, "setup_config": 112, "unpickle_suit": 113, "setup_task": [114, 115], "read": [116, 127], "update_default": 117, "update_tre": 118, "setup_suit": 120, "compare_vari": 121, "plot_global_lat_lon_field": 122, "plot_global_mpas_field": 123, "plot_horiz_field": 124, "use_mplstyl": 125, "polarisyaml": [126, 127, 128, 129], "main_mpas_to_yaml": 130, "mpas_namelist_and_streams_to_yaml": 131, "yaml_to_mpas_stream": 132, "anvil": [133, 334], "intel": [133, 135, 136, 139], "gnu": [133, 134, 135, 136, 137, 139], "chicoma": [134, 335], "cpu": [134, 139, 335, 340], "chrysali": [135, 336], "compymcnodefac": [136, 337], "frontier": [137, 338], "crayclang": 137, "support": [138, 291, 313, 326, 339, 358], "perlmutt": [139, 340], "pm": 139, "baroclinic_channel": [140, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 293], "cosine_bel": [140, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 295, 344], "geostroph": [140, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 297, 349], "inertial_gravity_wav": [140, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 299], "internal_wav": [140, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 300], "manufactured_solut": [140, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 301], "single_column": [140, 249, 250, 251, 252, 253, 254, 255, 256, 304, 314, 317, 318, 319, 320, 321, 322, 323, 324, 328], "sphere_transport": [140, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "converg": [140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 353], "potenti": [140, 141], "energi": [140, 141], "rpe": [140, 141, 163, 176, 177, 178, 179, 180, 230, 231, 232, 233, 293, 300, 345, 352], "vertic": [140, 141, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 332, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357], "coordin": [140, 141, 332, 342], "v": 141, "map": 141, "omega": 141, "mpi": [141, 339], "resourc": 141, "interv": 141, "quasi": 141, "icosahedr": 141, "rest": 141, "convergenceanalysi": [143, 144, 145, 146, 147, 148, 149, 150], "compute_error": 144, "convergence_paramet": [145, 261], "exact_solut": [146, 190, 203, 213, 214, 215, 216, 239, 240, 241, 242, 299, 301], "get_output_field": [147, 204], "plot_converg": 148, "convergenceforward": [151, 152, 153], "compute_cell_count": [152, 155, 158, 168, 192, 218, 226, 244], "sphericalconvergenceforward": [154, 155], "add_spherical_base_mesh_step": 156, "oceanmodelstep": [157, 158, 159, 160, 161], "get_time_interval_str": 162, "compute_rp": 163, "add_baroclinic_channel_task": 164, "decomp": [165, 293, 345], "default": [166, 224, 293, 300, 332, 345, 352], "forward": [167, 168, 169, 191, 192, 193, 205, 217, 218, 225, 226, 227, 243, 244, 251, 264, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 321, 328, 332], "init": [170, 171, 172, 194, 195, 196, 206, 207, 219, 220, 228, 229, 245, 246, 253, 254, 265, 266, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 332], "restart": [173, 174, 175, 293, 345, 361], "restart_step": [174, 175], "restartstep": [174, 175], "analysi": [178, 179, 180, 189, 190, 202, 203, 204, 212, 213, 232, 233, 238, 239, 260, 261, 294, 295, 296, 297, 299, 301, 302, 303, 332, 349], "thread": [181, 293, 345], "cosinebel": [186, 187], "add_cosine_bell_task": 188, "add_geostrophic_task": 201, "inertialgravitywav": 210, "add_inertial_gravity_wave_task": 211, "exactsolut": [214, 215, 216, 240, 241, 242], "normal_veloc": [215, 241], "ssh": [216, 242], "add_internal_wave_task": 223, "manufacturedsolut": 236, "add_manufactured_solution_task": 237, "add_single_column_task": [249, 317], "cvmix": [250, 304, 356], "ideal_ag": 252, "idealag": 252, "spheretransport": [257, 258], "add_sphere_transport_task": 259, "filament_analysi": [262, 263, 302], "filamentanalysi": [262, 263], "mixing_analysi": [267, 268, 294], "mixinganalysi": [267, 268], "grid_1d": [271, 272], "generate_1d_grid": 271, "write_1d_grid": 272, "init_vertical_coord": 273, "partial_cel": [274, 275], "alter_bottom_depth": 274, "alter_ssh": 275, "zlevel": [276, 277, 278, 279], "compute_min_max_level_cel": 276, "compute_z_level_layer_thick": 277, "compute_z_level_resting_thick": 278, "init_z_level_vertical_coord": 279, "zstar": 280, "init_z_star_vertical_coord": 280, "compute_transect": 281, "plot_transect": 282, "transect": [283, 284, 285, 286, 287, 288, 289], "horiz": [283, 284, 285, 286], "find_planar_transect_cells_and_weight": 283, "find_spherical_transect_cells_and_weight": 284, "make_triangle_tre": 285, "mesh_to_triangl": 286, "vert": [287, 288, 289], "find_transect_levels_and_weight": 287, "interp_mpas_to_transect_cel": 288, "interp_mpas_to_transect_nod": 289, "initi": [292, 326, 332, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "condit": [292, 326, 332, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "boundari": 292, "forc": [292, 326, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "correlated_tracers_2d": 294, "base_mesh": [294, 295, 296, 297, 302, 303], "divergent_2d": 296, "nondivergent_2d": 302, "rotation_2d": 303, "ideal": [304, 356], "ag": [304, 356], "categori": [305, 357, 362], "constructor": [306, 309, 311], "organ": 308, "attribut": [309, 311], "copi": 309, "pull": 310, "request": 310, "pr": 310, "nightli": 310, "overview": 312, "code": [312, 313, 332], "packag": 312, "within": 312, "group": [312, 332], "relat": 312, "quick": [313, 358], "start": [313, 332, 358], "develop": [313, 331, 332], "unix": 313, "shell": 313, "repositori": 313, "beginn": 313, "compil": 313, "system": 313, "unknown": 313, "what": 313, "script": [313, 358], "doe": 313, "flag": 313, "activ": 313, "switch": 313, "between": [313, 332], "differ": 313, "onli": 313, "repo": 313, "worktre": 313, "advanc": 313, "seaic": [314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326], "exact_restart": [318, 319, 320], "exactrestart": 318, "standard_phys": [322, 323, 324], "standardphys": 322, "standard_physics_test": 328, "exact_restart_test": 328, "solver": 329, "error": 329, "when": 329, "proxi": 329, "lanl": 329, "mac": 329, "gethostbynam": 329, "fail": 329, "glossari": [330, 331], "": 331, "guid": 331, "tutori": [331, 332], "compass": 331, "get": 332, "vari": 332, "resolut": 332, "paramet": 332, "thing": 332, "out": 332, "defin": 332, "more": 332, "again": 332, "one": 332, "second": 332, "enhanc": 332, "comput": 332, "cell": 332, "count": 332, "superclass": 332, "studi": 332, "how": 332, "pass": 332, "data": [332, 340], "A": 333, "case": 333, "load": [334, 335, 336, 337, 338, 340, 358], "slurm": 339, "queue": 339, "mpich": 339, "openmpi": 339, "No": 339, "forg": 339, "jupyt": 340, "notebook": 340, "1d": 342, "type": 342, "tanh_dz": 342, "index_tanh_dz": 342, "60layerphc": 342, "80layere3smv1": 342, "100layere3smv1": 342, "3d": 342, "z": 342, "star": 342, "level": 342, "sigma": 342, "cosine_bell_cached_init": 344, "baroclin": 345, "channel": 345, "descript": [345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "durat": [345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "core": [345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 361, 362], "correl": 346, "tracer": 346, "2": [346, 348, 354, 355], "d": [346, 348, 354, 355], "cosin": 347, "bell": 347, "diverg": 348, "inerti": 351, "graviti": 351, "wave": [351, 352], "intern": 352, "manufactur": 353, "solut": 353, "nondiverg": 354, "rotat": 355, "singl": [356, 361], "column": [356, 361], "task_nam": [357, 362], "yet": 358, "standalon": 358, "sea": 359, "ic": 359, "standard": 361, "physic": 361, "timestep": 361, "exact": 361}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [306, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [345, "mesh"], [345, "id2"], [345, "id9"], [345, "id17"], [345, "id25"], [345, "id32"], [346, "mesh"], [347, "mesh"], [348, "mesh"], [349, "mesh"], [351, "mesh"], [352, "mesh"], [352, "id2"], [353, "mesh"], [354, "mesh"], [355, "mesh"], [356, "mesh"], [356, "id3"], [356, "id8"], [357, "mesh"], [361, "mesh"], [361, "id1"], [361, "id6"], [362, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [293, "validate"], [300, "validate"]], "viz": [[3, "viz"], [294, "viz"], [295, "viz"], [296, "viz"], [297, "viz"], [299, "viz"], [301, "viz"], [302, "viz"], [303, "viz"], [304, "viz"], [328, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [332, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [341, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Permissions": [[11, "permissions"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [141, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [141, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"], [140, "visualization"], [141, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.io.update_permissions": [[61, "polaris-io-update-permissions"]], "polaris.job.get_slurm_options": [[62, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[63, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[64, "polaris-list-list-cases"]], "polaris.list.list_machines": [[65, "polaris-list-list-machines"]], "polaris.list.list_suites": [[66, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[67, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[68, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[69, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[70, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[71, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[72, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[73, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[74, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[79, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[80, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[82, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[83, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[84, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[85, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[86, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[87, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[88, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[89, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[90, "polaris-namelist-replace"]], "polaris.namelist.write": [[91, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[92, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[93, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[94, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[95, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[96, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[97, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[98, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[99, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[100, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[101, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[102, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[103, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[104, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[105, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[106, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[107, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[108, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[109, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[110, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[111, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[112, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[113, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[114, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[115, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[116, "polaris-streams-read"]], "polaris.streams.update_defaults": [[117, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[118, "polaris-streams-update-tree"]], "polaris.streams.write": [[119, "polaris-streams-write"]], "polaris.suite.setup_suite": [[120, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[121, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_lat_lon_field": [[122, "polaris-viz-plot-global-lat-lon-field"]], "polaris.viz.plot_global_mpas_field": [[123, "polaris-viz-plot-global-mpas-field"]], "polaris.viz.plot_horiz_field": [[124, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[125, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[126, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[127, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[128, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[129, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[130, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[131, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[132, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[133, "anvil"], [334, "anvil"]], "intel": [[133, "intel"], [135, "intel"], [136, "intel"]], "gnu": [[133, "gnu"], [135, "gnu"], [136, "gnu"]], "Chicoma": [[134, "chicoma"], [335, "chicoma"]], "chicoma-cpu, gnu": [[134, "chicoma-cpu-gnu"]], "Chrysalis": [[135, "chrysalis"], [336, "chrysalis"]], "CompyMcNodeFace": [[136, "compymcnodeface"], [337, "compymcnodeface"]], "Frontier": [[137, "frontier"], [338, "frontier"]], "frontier, gnu": [[137, "frontier-gnu"]], "frontier, crayclang": [[137, "frontier-crayclang"]], "Machines": [[138, "machines"], [339, "machines"]], "Supported Machines": [[138, "supported-machines"], [339, "supported-machines"]], "Other Machines": [[138, "other-machines"], [339, "other-machines"]], "Adding a New Supported Machine": [[138, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[138, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[138, "describing-a-spack-environment"]], "Building the Spack Environment": [[138, "building-the-spack-environment"]], "Perlmutter": [[139, "perlmutter"], [340, "perlmutter"]], "pm-cpu, gnu": [[139, "pm-cpu-gnu"]], "pm-cpu, intel": [[139, "pm-cpu-intel"]], "ocean": [[140, "ocean"]], "Tasks": [[140, "tasks"], [298, "tasks"], [311, "tasks"], [314, "tasks"], [327, "tasks"], [350, "tasks"], [360, "tasks"], [364, "tasks"]], "baroclinic_channel": [[140, "baroclinic-channel"], [293, "baroclinic-channel"]], "cosine_bell": [[140, "cosine-bell"], [295, "cosine-bell"]], "geostrophic": [[140, "geostrophic"], [297, "geostrophic"], [349, "geostrophic"]], "inertial_gravity_wave": [[140, "inertial-gravity-wave"], [299, "inertial-gravity-wave"]], "internal_wave": [[140, "internal-wave"], [300, "internal-wave"]], "manufactured_solution": [[140, "manufactured-solution"], [301, "manufactured-solution"]], "single_column": [[140, "single-column"], [304, "single-column"], [314, "single-column"], [328, "single-column"]], "sphere_transport": [[140, "sphere-transport"]], "Ocean Framework": [[140, "ocean-framework"]], "Convergence Tests": [[140, "convergence-tests"], [141, "convergence-tests"]], "Spherical Convergence Tests": [[140, "spherical-convergence-tests"]], "Ocean Model": [[140, "ocean-model"]], "Spherical Base Mesh Step": [[140, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[140, "reference-potential-energy-rpe"]], "Vertical coordinates": [[140, "vertical-coordinates"]], "Ocean framework": [[141, "ocean-framework"]], "YAML files vs. namelists and streams": [[141, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[141, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[141, "setting-mpi-resources"]], "Setting time intervals in model config options": [[141, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[141, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[141, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[141, "vertical-coordinate"], [342, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[141, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[142, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[143, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[144, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[145, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[146, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[147, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[148, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[149, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[150, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[151, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[152, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[153, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[154, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[155, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[156, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[157, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[158, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[159, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[160, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[161, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[162, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[163, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[164, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[165, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[166, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[167, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[168, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[169, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[170, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[171, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[172, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[173, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[174, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[175, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[176, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[177, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[178, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[179, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[180, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[181, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[182, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[183, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[184, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[185, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[186, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[187, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[188, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[189, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[190, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[191, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[192, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[193, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[194, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[195, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[196, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[197, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[198, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[199, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[200, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[201, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[202, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[203, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[204, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[205, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[206, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[207, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[208, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[209, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[210, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[211, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[212, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[213, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[214, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[215, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[216, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[217, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[218, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[219, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[220, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[221, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[222, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks": [[223, "polaris-ocean-tasks-internal-wave-add-internal-wave-tasks"]], "polaris.ocean.tasks.internal_wave.default.Default": [[224, "polaris-ocean-tasks-internal-wave-default-default"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[225, "polaris-ocean-tasks-internal-wave-forward-forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count": [[226, "polaris-ocean-tasks-internal-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config": [[227, "polaris-ocean-tasks-internal-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.internal_wave.init.Init": [[228, "polaris-ocean-tasks-internal-wave-init-init"]], "polaris.ocean.tasks.internal_wave.init.Init.run": [[229, "polaris-ocean-tasks-internal-wave-init-init-run"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[230, "polaris-ocean-tasks-internal-wave-rpe-rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure": [[231, "polaris-ocean-tasks-internal-wave-rpe-rpe-configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[232, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run": [[233, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[234, "polaris-ocean-tasks-internal-wave-viz-viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz.run": [[235, "polaris-ocean-tasks-internal-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[236, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[237, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[238, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[239, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[240, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[241, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[242, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[243, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[244, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[245, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[246, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[247, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[248, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[249, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[250, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[251, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[252, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[253, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[254, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[255, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[256, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[257, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[258, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[259, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[260, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[261, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[262, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[263, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[264, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[265, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[266, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[267, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[268, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[269, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[270, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[271, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[272, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[273, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[274, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[275, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[276, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[277, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[278, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[279, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[280, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "polaris.ocean.viz.compute_transect": [[281, "polaris-ocean-viz-compute-transect"]], "polaris.ocean.viz.plot_transect": [[282, "polaris-ocean-viz-plot-transect"]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[283, "polaris-ocean-viz-transect-horiz-find-planar-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[284, "polaris-ocean-viz-transect-horiz-find-spherical-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[285, "polaris-ocean-viz-transect-horiz-make-triangle-tree"]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[286, "polaris-ocean-viz-transect-horiz-mesh-to-triangles"]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[287, "polaris-ocean-viz-transect-vert-find-transect-levels-and-weights"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[288, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-cells"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[289, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-nodes"]], "Ocean component": [[290, "ocean-component"], [343, "ocean-component"]], "Models": [[291, "models"]], "Supported Models": [[291, "supported-models"]], "MPAS-Ocean": [[292, "mpas-ocean"]], "Initial conditions": [[292, "initial-conditions"], [326, "initial-conditions"]], "Boundary conditions": [[292, "boundary-conditions"]], "Forcing": [[292, "forcing"], [326, "forcing"]], "framework": [[293, "framework"], [294, "framework"], [295, "framework"], [296, "framework"], [297, "framework"], [299, "framework"], [300, "framework"], [301, "framework"], [302, "framework"], [303, "framework"], [304, "framework"], [328, "framework"]], "init": [[293, "init"], [294, "init"], [295, "init"], [296, "init"], [297, "init"], [299, "init"], [300, "init"], [301, "init"], [302, "init"], [303, "init"], [304, "init"]], "forward": [[293, "forward"], [294, "forward"], [295, "forward"], [296, "forward"], [297, "forward"], [299, "forward"], [300, "forward"], [301, "forward"], [302, "forward"], [303, "forward"], [304, "forward"], [328, "forward"]], "default": [[293, "default"], [300, "default"], [345, "default"]], "decomp": [[293, "decomp"], [345, "decomp"]], "restart": [[293, "restart"], [345, "restart"]], "threads": [[293, "threads"]], "rpe": [[293, "rpe"], [300, "rpe"], [345, "rpe"]], "correlated_tracers_2d": [[294, "correlated-tracers-2d"]], "base_mesh": [[294, "base-mesh"], [295, "base-mesh"], [296, "base-mesh"], [297, "base-mesh"], [302, "base-mesh"], [303, "base-mesh"]], "analysis": [[294, "analysis"], [295, "analysis"], [296, "analysis"], [297, "analysis"], [299, "analysis"], [301, "analysis"], [302, "analysis"], [303, "analysis"], [349, "analysis"]], "mixing_analysis": [[294, "mixing-analysis"]], "divergent_2d": [[296, "divergent-2d"]], "exact_solution": [[299, "exact-solution"], [301, "exact-solution"]], "nondivergent_2d": [[302, "nondivergent-2d"]], "filament_analysis": [[302, "filament-analysis"]], "rotation_2d": [[303, "rotation-2d"]], "cvmix": [[304, "cvmix"], [356, "cvmix"]], "ideal age": [[304, "ideal-age"], [356, "ocean-single-column-ideal-age"]], "Categories of tasks": [[305, "categories-of-tasks"]], "Constructor": [[306, "constructor"]], "Config file": [[306, "config-file"]], "Directory structure": [[307, "directory-structure"]], "Organization of Tasks": [[308, "organization-of-tasks"]], "Steps": [[309, "steps"]], "Step attributes": [[309, "step-attributes"]], "constructor": [[309, "constructor"], [311, "constructor"]], "setup()": [[309, "setup"]], "constrain_resources()": [[309, "constrain-resources"]], "runtime_setup()": [[309, "runtime-setup"]], "run()": [[309, "run"]], "inputs and outputs": [[309, "inputs-and-outputs"]], "Input files": [[309, "input-files"]], "Symlinks to input files": [[309, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[309, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[309, "downloading-and-symlinking-input-files"]], "Copying input files": [[309, "copying-input-files"]], "Output files": [[309, "output-files"]], "Cached output files": [[309, "cached-output-files"]], "Adding other steps as dependencies": [[309, "adding-other-steps-as-dependencies"]], "Suites": [[310, "suites"], [344, "suites"], [358, "suites"], [363, "suites"]], "Pull-Request (PR) suite": [[310, "pull-request-pr-suite"]], "Nightly suite": [[310, "nightly-suite"]], "Task attributes": [[311, "task-attributes"]], "configure()": [[311, "configure"]], "Overview": [[312, "overview"]], "Code Style": [[312, "code-style"]], "Packages and Modules": [[312, "packages-and-modules"]], "Packages": [[312, "packages"]], "Modules": [[312, "modules"]], "Classes": [[312, "classes"]], "Code sharing": [[312, "code-sharing"]], "\u2026in the polaris framework": [[312, "in-the-polaris-framework"]], "\u2026within a component": [[312, "within-a-component"]], "\u2026within a group of related tasks": [[312, "within-a-group-of-related-tasks"]], "\u2026within a task": [[312, "within-a-task"]], "Quick Start for Developers": [[313, "quick-start-for-developers"]], "Unix Shell": [[313, "unix-shell"]], "Set up a polaris repository: for beginners": [[313, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[313, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[313, "supported-machines"]], "Environments with Albany": [[313, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[313, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[313, "unknown-machines"]], "What the script does": [[313, "what-the-script-does"]], "Optional flags": [[313, "optional-flags"]], "Activating the environment": [[313, "activating-the-environment"]], "Switching between different polaris environments": [[313, "switching-between-different-polaris-environments"]], "Troubleshooting": [[313, "troubleshooting"], [329, "troubleshooting"]], "Creating/updating only the polaris environment": [[313, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[313, "building-e3sm-components"]], "Running polaris from the repo": [[313, "running-polaris-from-the-repo"]], "Code style for polaris": [[313, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[313, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[314, "seaice"]], "SeaIce framework": [[315, "seaice-framework"]], "polaris.seaice.SeaIce": [[316, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[317, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[318, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[319, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[320, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[321, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[322, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[323, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[324, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[325, "seaice-component"]], "Supported Model: MPAS-Seaice": [[326, "supported-model-mpas-seaice"]], "standard_physics_test": [[328, "standard-physics-test"]], "exact_restart_test": [[328, "exact-restart-test"]], "Solver errors when configuring conda environment": [[329, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[329, "proxy-on-lanl-macs"]], "gethostbyname failed": [[329, "gethostbyname-failed"]], "Glossary": [[330, "glossary"], [331, null]], "Polaris": [[331, "polaris"]], "User's guide": [[331, null]], "Developer's guide": [[331, null]], "Tutorials": [[331, null]], "Compass": [[331, "compass"]], "Developer Tutorial: Adding a new test group": [[332, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[332, "getting-started"]], "Making a new test group": [[332, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[332, "adding-a-default-task"]], "Varying resolution and other parameters": [[332, "varying-resolution-and-other-parameters"]], "Adding the init step": [[332, "adding-the-init-step"]], "Creating a horizontal mesh": [[332, "creating-a-horizontal-mesh"]], "Adding a config file": [[332, "adding-a-config-file"]], "Adding the step to the task": [[332, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[332, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[332, "creating-an-initial-condition"]], "Adding plots": [[332, "adding-plots"]], "Adding step outputs": [[332, "adding-step-outputs"]], "Adding validation": [[332, "adding-validation"], [332, "id1"]], "Test things out!": [[332, "test-things-out"]], "Adding the forward step": [[332, "adding-the-forward-step"]], "Defining model config options and streams": [[332, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[332, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[332, "adding-more-validation"]], "Test the task again!": [[332, "test-the-task-again"]], "Adding a visualization step": [[332, "adding-a-visualization-step"]], "Adding the viz step to the task": [[332, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[332, "test-the-task-one-more-time"]], "Adding a second task": [[332, "adding-a-second-task"]], "Enhancements": [[332, "enhancements"]], "Adding model config options in code": [[332, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[332, "adding-dynamic-model-config-options"]], "Computing the cell count": [[332, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[332, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[332, "adding-a-parameter-study"]], "Adding the steps to the task": [[332, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[332, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[332, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[333, "config-files"]], "A \u201cuser\u201d config file": [[333, "a-user-config-file"]], "Test-case config files": [[333, "test-case-config-files"]], "config options": [[334, "config-options"], [335, "config-options"], [336, "config-options"], [337, "config-options"], [338, "config-options"], [339, "config-options"], [340, "config-options"], [345, "config-options"], [345, "id7"], [345, "id14"], [345, "id22"], [345, "id30"], [345, "id37"], [346, "config-options"], [347, "config-options"], [348, "config-options"], [349, "config-options"], [351, "config-options"], [352, "config-options"], [352, "id7"], [353, "config-options"], [354, "config-options"], [355, "config-options"], [356, "config-options"], [356, "id1"], [356, "id6"], [356, "id13"], [357, "config-options"], [361, "config-options"], [361, "id5"], [361, "id10"], [362, "config-options"]], "Loading and running Polaris on Anvil": [[334, "loading-and-running-polaris-on-anvil"]], "Chicoma-CPU": [[335, "chicoma-cpu"]], "Loading and running Polaris on Chicoma": [[335, "loading-and-running-polaris-on-chicoma"]], "Loading and running Polaris on Chrysalis": [[336, "loading-and-running-polaris-on-chrysalis"]], "Loading and running Polaris on CompyMcNodeFace": [[337, "loading-and-running-polaris-on-compymcnodeface"]], "Loading and running Polaris on Frontier": [[338, "loading-and-running-polaris-on-frontier"]], "Slurm job queueing": [[339, "slurm-job-queueing"]], "MPICH": [[339, "mpich"]], "OpenMPI": [[339, "openmpi"]], "No MPI from conda-forge": [[339, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[340, "perlmutter-cpu"]], "Loading and running Polaris on Perlmutter": [[340, "loading-and-running-polaris-on-perlmutter"]], "Jupyter notebook on remote data": [[340, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[342, "d-grid-type"]], "uniform": [[342, "uniform"]], "tanh_dz": [[342, "tanh-dz"]], "index_tanh_dz": [[342, "index-tanh-dz"]], "60layerPHC": [[342, "layerphc"]], "80layerE3SMv1": [[342, "layere3smv1"]], "100layerE3SMv1": [[342, "id1"]], "3D vertical coordinates": [[342, "d-vertical-coordinates"]], "z-star": [[342, "z-star"]], "z-level": [[342, "z-level"]], "sigma": [[342, "sigma"]], "cosine_bell and cosine_bell_cached_init suite": [[344, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[345, "baroclinic-channel"]], "description": [[345, "description"], [345, "id1"], [345, "id8"], [345, "id16"], [345, "id24"], [346, "description"], [347, "description"], [348, "description"], [349, "description"], [351, "description"], [352, "description"], [352, "id1"], [353, "description"], [354, "description"], [355, "description"], [356, "description"], [356, "id2"], [356, "id7"], [357, "description"], [361, "description"], [362, "description"]], "vertical grid": [[345, "vertical-grid"], [345, "id3"], [345, "id10"], [345, "id18"], [345, "id26"], [345, "id33"], [346, "vertical-grid"], [347, "vertical-grid"], [348, "vertical-grid"], [349, "vertical-grid"], [351, "vertical-grid"], [352, "vertical-grid"], [352, "id3"], [353, "vertical-grid"], [354, "vertical-grid"], [355, "vertical-grid"], [356, "vertical-grid"], [356, "id4"], [356, "id9"], [357, "vertical-grid"]], "initial conditions": [[345, "initial-conditions"], [345, "id4"], [345, "id11"], [345, "id19"], [345, "id27"], [345, "id34"], [346, "initial-conditions"], [347, "initial-conditions"], [348, "initial-conditions"], [349, "initial-conditions"], [351, "initial-conditions"], [352, "initial-conditions"], [352, "id4"], [353, "initial-conditions"], [354, "initial-conditions"], [355, "initial-conditions"], [356, "initial-conditions"], [356, "id5"], [356, "id10"], [357, "initial-conditions"], [361, "initial-conditions"], [361, "id2"], [361, "id7"], [362, "initial-conditions"]], "forcing": [[345, "forcing"], [345, "id5"], [345, "id12"], [345, "id20"], [345, "id28"], [345, "id35"], [346, "forcing"], [347, "forcing"], [348, "forcing"], [349, "forcing"], [351, "forcing"], [352, "forcing"], [352, "id5"], [353, "forcing"], [354, "forcing"], [355, "forcing"], [356, "forcing"], [356, "id11"], [357, "forcing"], [361, "forcing"], [361, "id3"], [361, "id8"], [362, "forcing"]], "time step and run duration": [[345, "time-step-and-run-duration"], [345, "id6"], [345, "id13"], [345, "id21"], [345, "id29"], [345, "id36"], [346, "time-step-and-run-duration"], [347, "time-step-and-run-duration"], [348, "time-step-and-run-duration"], [349, "time-step-and-run-duration"], [351, "time-step-and-run-duration"], [352, "time-step-and-run-duration"], [352, "id6"], [353, "time-step-and-run-duration"], [354, "time-step-and-run-duration"], [355, "time-step-and-run-duration"], [356, "time-step-and-run-duration"], [356, "id12"], [357, "time-step-and-run-duration"], [362, "time-step-and-run-duration"]], "cores": [[345, "cores"], [345, "id15"], [345, "id23"], [345, "id31"], [345, "id38"], [346, "cores"], [347, "cores"], [348, "cores"], [349, "cores"], [351, "cores"], [352, "cores"], [353, "cores"], [354, "cores"], [355, "cores"], [356, "cores"], [356, "id14"], [357, "cores"], [361, "cores"], [361, "id4"], [361, "id9"], [362, "cores"]], "thread": [[345, "thread"]], "correlated tracers 2-d": [[346, "correlated-tracers-2-d"]], "cosine bell": [[347, "cosine-bell"]], "divergent 2-d": [[348, "divergent-2-d"]], "inertial gravity wave": [[351, "inertial-gravity-wave"]], "internal wave": [[352, "internal-wave"]], "default task": [[352, "default-task"]], "RPE task": [[352, "rpe-task"]], "manufactured solution": [[353, "manufactured-solution"]], "convergence": [[353, "convergence"]], "nondivergent 2-d": [[354, "nondivergent-2-d"]], "rotation 2-d": [[355, "rotation-2-d"]], "single column": [[356, "single-column"], [361, "single-column"]], "<Category of task>": [[357, "ocean-category-of-task"], [362, "seaice-category-of-task"]], "task_name": [[357, "task-name"], [362, "task-name"]], "Quick Start for Users": [[358, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[358, null]], "Loading polaris conda and spack environments": [[358, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[358, "e3sm-supported-machines"]], "Other machines": [[358, "other-machines"]], "Building supported E3SM components as standalone models": [[358, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[358, "setting-up-tasks"]], "Running a task": [[358, "running-a-task"]], "Running with a job script": [[358, "running-with-a-job-script"]], "Sea ice component": [[359, "sea-ice-component"]], "standard physics test": [[361, "standard-physics-test"]], "timestep and run duration": [[361, "timestep-and-run-duration"], [361, "id11"]], "visualization": [[361, "visualization"]], "exact restart test": [[361, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "update_permissions() (in module polaris.io)": [[61, "polaris.io.update_permissions"]], "get_slurm_options() (in module polaris.job)": [[62, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[63, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[64, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[65, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[66, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[67, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[68, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[69, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[71, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[74, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[80, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[81, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[85, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[86, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[87, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[88, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[89, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[90, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[91, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[92, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[93, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[94, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[95, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[96, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[97, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[108, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[109, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[111, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[112, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[113, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[114, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[115, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[116, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[117, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[118, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[119, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[120, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[121, "polaris.validate.compare_variables"]], "plot_global_lat_lon_field() (in module polaris.viz)": [[122, "polaris.viz.plot_global_lat_lon_field"]], "plot_global_mpas_field() (in module polaris.viz)": [[123, "polaris.viz.plot_global_mpas_field"]], "plot_horiz_field() (in module polaris.viz)": [[124, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[125, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[126, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[126, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[127, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[128, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[129, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[130, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[131, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[132, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[142, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[142, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[149, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[150, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[151, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[151, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[152, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[153, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[154, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[154, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[155, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[156, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[157, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[157, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[158, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[159, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[160, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[161, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[162, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[163, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[164, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[165, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[165, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[166, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[166, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[167, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[167, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[168, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[169, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[170, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[170, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[171, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[172, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[173, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[173, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[174, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[174, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[175, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[177, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[178, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[178, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[179, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[180, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[181, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[181, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[182, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[182, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[183, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[184, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[184, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[185, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[186, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[186, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[187, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[188, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[189, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[189, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[190, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[191, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[191, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[192, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[193, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[194, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[194, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[195, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[196, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[197, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[197, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[198, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[199, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[199, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[200, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[201, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[203, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[204, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[205, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[205, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[206, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[206, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[207, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[208, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[208, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[209, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[210, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[210, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[211, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[221, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[221, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[222, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "add_internal_wave_tasks() (in module polaris.ocean.tasks.internal_wave)": [[223, "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks"]], "default (class in polaris.ocean.tasks.internal_wave.default)": [[224, "polaris.ocean.tasks.internal_wave.default.Default"]], "__init__() (polaris.ocean.tasks.internal_wave.default.default method)": [[224, "polaris.ocean.tasks.internal_wave.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.internal_wave.forward)": [[225, "polaris.ocean.tasks.internal_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[225, "polaris.ocean.tasks.internal_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[226, "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[227, "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.internal_wave.init)": [[228, "polaris.ocean.tasks.internal_wave.init.Init"]], "__init__() (polaris.ocean.tasks.internal_wave.init.init method)": [[228, "polaris.ocean.tasks.internal_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.internal_wave.init.init method)": [[229, "polaris.ocean.tasks.internal_wave.init.Init.run"]], "rpe (class in polaris.ocean.tasks.internal_wave.rpe)": [[230, "polaris.ocean.tasks.internal_wave.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[230, "polaris.ocean.tasks.internal_wave.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[231, "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.internal_wave.rpe.analysis)": [[232, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[232, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[233, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run"]], "viz (class in polaris.ocean.tasks.internal_wave.viz)": [[234, "polaris.ocean.tasks.internal_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[234, "polaris.ocean.tasks.internal_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[235, "polaris.ocean.tasks.internal_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[236, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[236, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[237, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[238, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[238, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[239, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[240, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[240, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[241, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[242, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[243, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[243, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[244, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[245, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[245, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[246, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[247, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[247, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[248, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[249, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[250, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[250, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[251, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[251, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[252, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[252, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[253, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[253, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[254, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[255, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[255, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[256, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[257, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[257, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[258, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[259, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[260, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[260, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[261, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[262, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[262, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[263, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[264, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[264, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[265, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[265, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[266, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[267, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[267, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[268, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[269, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[269, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[270, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[271, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[272, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[273, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[274, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[275, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[276, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[277, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[278, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[279, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[280, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "compute_transect() (in module polaris.ocean.viz)": [[281, "polaris.ocean.viz.compute_transect"]], "plot_transect() (in module polaris.ocean.viz)": [[282, "polaris.ocean.viz.plot_transect"]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[283, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights"]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[284, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights"]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[285, "polaris.ocean.viz.transect.horiz.make_triangle_tree"]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[286, "polaris.ocean.viz.transect.horiz.mesh_to_triangles"]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[287, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights"]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[288, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells"]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[289, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes"]], "seaice (class in polaris.seaice)": [[316, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[316, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[317, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[318, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[318, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[319, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[319, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[320, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[321, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[321, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[322, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[322, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[323, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[323, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[324, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})