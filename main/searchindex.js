Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/organization/components", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/organization/components.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.get_available_cores_and_nodes", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "Components", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 21, 22, 23, 87, 96, 100, 127, 134, 183, 184], "date": [1, 4, 47, 167, 180, 184], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 31, 32, 33, 34, 35, 37, 39, 40, 41, 44, 45, 47, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 64, 65, 69, 73, 75, 79, 80, 82, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 100, 101, 106, 109, 110, 111, 112, 118, 121, 123, 125, 126, 128, 130, 131, 133, 135, 138, 140, 141, 143, 146, 149, 150, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199], "purpos": [1, 44, 178, 179, 182, 199], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 18, 23, 24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 56, 57, 58, 61, 62, 64, 65, 66, 67, 69, 70, 78, 80, 82, 84, 92, 93, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 195, 196, 198, 200], "section": [1, 2, 4, 5, 7, 10, 12, 18, 24, 65, 97, 109, 111, 114, 157, 159, 165, 166, 167, 173, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 196, 198], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 18, 23, 28, 31, 32, 33, 37, 38, 40, 47, 50, 52, 64, 65, 69, 80, 83, 84, 85, 87, 89, 92, 93, 94, 96, 101, 102, 104, 105, 106, 109, 111, 112, 125, 126, 127, 134, 153, 154, 159, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 199, 200], "summar": 1, "what": [1, 9, 106, 179, 190, 198], "capabl": [1, 106, 175, 179, 189, 198], "ad": [1, 4, 5, 7, 8, 9, 14, 32, 33, 39, 42, 49, 93, 118, 130, 140, 159, 165, 166, 177, 178, 180, 183, 185, 186, 187, 188, 190, 198], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 102, 104, 105, 106, 109, 167, 168, 170, 171, 173, 174, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 193, 194, 199, 200], "through": [1, 86, 179], "process": [1, 6, 12, 26, 80, 101, 175, 179, 180, 182, 183], "It": [1, 4, 12, 31, 37, 170, 175, 176, 177, 178, 179, 180, 182, 184, 189], "should": [1, 4, 5, 7, 10, 12, 14, 19, 24, 32, 33, 39, 40, 42, 50, 65, 85, 86, 93, 94, 102, 103, 104, 105, 106, 107, 109, 114, 130, 140, 167, 173, 175, 176, 177, 178, 180, 181, 184, 195, 198], "clear": [1, 179], "new": [1, 4, 12, 16, 19, 31, 40, 44, 49, 52, 57, 64, 69, 88, 89, 125, 133, 152, 159, 165, 166, 175, 179, 180, 181, 182, 183, 198], "code": [1, 4, 5, 7, 10, 12, 31, 109, 167, 173, 175, 176, 177, 182, 183, 184, 191, 195, 198], "do": [1, 4, 7, 9, 12, 14, 96, 175, 177, 180, 181, 182, 189, 198], "current": [1, 4, 6, 9, 18, 28, 31, 38, 92, 93, 106, 111, 167, 171, 173, 175, 179, 180, 182, 183, 184, 189, 192, 195, 196, 198, 199, 200], "doe": [1, 7, 10, 12, 175, 183, 189], "primari": [1, 4, 7, 200], "challeng": 1, "respect": [1, 6, 7, 12, 109, 175, 179], "softwar": [1, 73, 190, 198], "also": [1, 4, 5, 7, 11, 12, 14, 15, 26, 37, 49, 92, 93, 109, 159, 165, 166, 167, 173, 174, 175, 177, 178, 179, 180, 184, 189, 190, 192, 195, 198, 199], "appropri": [1, 4, 12, 19, 78, 106, 167, 170, 173, 175, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 198], "final": [1, 5, 170, 174, 175, 177], "statement": [1, 10, 175, 182], "contain": [1, 4, 5, 6, 7, 16, 20, 21, 22, 48, 51, 75, 87, 94, 95, 109, 116, 159, 165, 166, 173, 174, 175, 179, 180, 182, 184, 189, 193, 198], "gener": [1, 2, 3, 5, 6, 10, 12, 14, 15, 19, 20, 21, 22, 26, 39, 64, 93, 109, 130, 140, 157, 167, 169, 170, 171, 173, 175, 180, 184, 189, 196, 198], "regard": 1, "success": [1, 50, 167, 173, 184], "last": [1, 176, 180, 196, 198], "modifi": [1, 6, 7, 11, 12, 18, 30, 42, 87, 89, 111, 119, 136, 170, 175, 177, 178, 180, 183, 184, 195, 198], "add": [1, 4, 5, 7, 11, 12, 17, 19, 20, 21, 22, 23, 32, 33, 34, 41, 42, 45, 63, 68, 72, 87, 88, 89, 96, 97, 100, 101, 127, 134, 170, 173, 175, 177, 178, 179, 180, 182, 184, 190, 196], "your": [1, 3, 4, 9, 106, 167, 179, 180, 181, 184, 185, 186, 189, 190, 196, 198], "list": [1, 5, 7, 12, 14, 18, 31, 40, 41, 47, 48, 80, 84, 85, 86, 91, 92, 93, 116, 138, 143, 146, 149, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 189, 190, 196, 198, 199, 200], "appear": [1, 106, 175], "each": [1, 4, 5, 6, 10, 11, 12, 14, 37, 40, 53, 59, 60, 86, 101, 106, 109, 122, 132, 142, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 189, 192, 195, 196, 198, 200], "under": [1, 31, 32, 92, 106, 109, 169, 175, 176, 180, 183, 192, 199], "head": [1, 169, 186], "one": [1, 4, 5, 8, 12, 14, 18, 30, 31, 33, 40, 47, 52, 85, 86, 91, 93, 109, 111, 120, 122, 124, 131, 132, 137, 142, 167, 170, 175, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 192, 196, 198, 199, 200], "correspond": [1, 5, 14, 92, 93, 109, 167, 175, 180], "between": [1, 4, 6, 10, 11, 12, 14, 18, 30, 33, 58, 65, 66, 71, 92, 93, 111, 131, 159, 165, 166, 171, 173, 175, 178, 179, 180, 189, 192, 195], "propos": 1, "discuss": [1, 109, 175, 177, 178, 179, 196], "technic": [1, 5], "issu": [1, 175, 176, 180, 196], "rather": [1, 6, 7, 9, 11, 12, 31, 33, 49, 106, 170, 175, 177, 178, 180, 181, 192], "focu": 1, "model": [1, 4, 8, 18, 19, 23, 24, 26, 31, 33, 85, 86, 91, 95, 100, 102, 103, 104, 105, 106, 107, 121, 125, 127, 131, 133, 134, 135, 141, 154, 167, 170, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195], "To": [1, 4, 10, 14, 93, 106, 109, 167, 175, 179, 180, 185, 186, 187, 188, 189, 190, 192, 196, 198], "extent": [1, 11], "possibl": [1, 6, 9, 60, 109, 169, 175, 176, 179, 192], "rel": [1, 4, 7, 14, 33, 34, 47, 49, 85, 86, 91, 92, 93, 167, 173, 175, 179, 180, 182, 195, 198, 199], "independ": [1, 4, 176, 182], "other": [1, 4, 5, 6, 7, 8, 11, 15, 31, 32, 34, 49, 102, 122, 132, 142, 171, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 199], "thu": [1, 5, 12], "allow": [1, 6, 14, 18, 28, 31, 38, 49, 93, 109, 111, 175, 178, 182, 184, 189, 192, 195, 196, 199], "clean": [1, 175, 177, 180], "plan": [1, 11, 167, 175, 182, 199], "For": [1, 2, 4, 5, 10, 12, 78, 86, 102, 169, 170, 175, 179, 180, 182, 184, 185, 193, 196, 198, 199], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 102, 103, 104, 105, 106, 107, 167, 173, 175, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 195, 196, 198, 199, 200], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 28, 31, 32, 33, 38, 40, 43, 61, 64, 66, 85, 86, 91, 93, 102, 103, 104, 105, 106, 107, 109, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 198, 199, 200], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 33, 92, 93, 96, 109, 120, 122, 124, 132, 137, 142, 167, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 189, 193, 198], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 18, 26, 31, 32, 33, 34, 52, 57, 59, 60, 78, 87, 89, 92, 93, 100, 106, 111, 155, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 192, 198, 199, 200], "intend": [1, 6, 7, 176, 184, 199], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 14, 15, 33, 39, 40, 50, 84, 106, 109, 118, 130, 140, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 191, 192, 193, 194, 195, 196, 198, 199, 200], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 53, 93, 169, 171, 174, 175, 177, 179, 180, 181, 198], "pde": 1, "solver": [1, 177, 180, 183, 198], "similar": [1, 4, 6, 7, 10, 11, 12, 14, 103, 106, 107, 174, 177, 178, 179, 180, 198], "well": [1, 6, 7, 10, 11, 109, 162, 170, 175, 180, 182, 184, 198, 199], "perform": [1, 4, 6, 12, 14, 36, 37, 39, 43, 57, 92, 93, 123, 125, 130, 135, 140, 145, 152, 167, 170, 171, 175, 176, 177, 182, 183, 184, 189, 195, 200], "In": [1, 5, 6, 7, 9, 12, 14, 31, 109, 171, 174, 175, 176, 177, 178, 179, 180, 183, 184, 189, 192, 198, 199, 200], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 24, 31, 32, 33, 40, 42, 47, 50, 52, 73, 75, 80, 84, 86, 87, 88, 89, 92, 93, 94, 96, 97, 100, 101, 106, 111, 114, 120, 125, 149, 154, 163, 167, 169, 170, 171, 173, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 195, 196, 198, 199, 200], "low": [1, 94], "level": [1, 9, 10, 11, 14, 15, 109, 159, 160, 161, 162, 163, 164, 165, 166, 170, 174, 175, 177, 178, 184, 195, 200], "variabl": [1, 4, 11, 15, 16, 18, 31, 40, 43, 44, 57, 64, 69, 73, 78, 92, 93, 94, 95, 96, 101, 106, 109, 111, 118, 125, 128, 138, 143, 146, 148, 149, 152, 159, 165, 166, 169, 177, 179, 180, 181, 185, 186, 187, 188, 189, 190, 193, 195, 198], "declar": [1, 5], "interfac": [1, 8, 157, 158, 159, 165, 166, 175, 179, 180, 183, 192], "sequenc": [1, 4, 12, 174, 175, 179, 182, 198, 199, 200], "If": [1, 4, 5, 6, 7, 10, 12, 14, 18, 28, 31, 33, 38, 41, 42, 52, 78, 80, 81, 85, 92, 93, 94, 102, 103, 104, 105, 106, 107, 111, 125, 170, 175, 177, 178, 179, 180, 181, 182, 184, 189, 190, 192, 195, 196, 198], "want": [1, 4, 9, 12, 14, 42, 109, 175, 178, 180, 181, 184, 189, 190, 198, 199], "math": 1, "syntax": 1, "almost": [1, 7], "ident": [1, 4, 14, 121, 131, 141, 170, 176, 179, 195], "latex": 1, "b": [1, 4, 180, 182, 198], "2": [1, 11, 12, 14, 32, 141, 169, 170, 174, 176, 180, 184, 186, 189, 192, 195, 196, 198], "2ab": 1, "imag": [1, 5, 15, 94, 178], "keep": [1, 4, 7, 12, 18, 49, 175, 177, 180], "mind": [1, 4], "quit": [1, 174, 175, 177], "small": [1, 7, 37, 175, 178, 185, 186, 191, 192, 198], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 27, 28, 31, 33, 37, 38, 40, 44, 49, 78, 80, 84, 86, 93, 97, 106, 109, 111, 125, 159, 162, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 196, 198, 199, 200], "prefer": [1, 175, 176, 184], "png": [1, 11, 15, 171], "okai": [1, 175], "size": [1, 11, 59, 60, 109, 113, 115, 116, 170, 178, 184, 196], "repo": [1, 4, 167, 183], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 192, 198, 199, 200], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 33, 52, 106, 175, 178, 180, 189, 193, 198], "actual": [1, 4, 10, 175, 177, 180], "sourc": [1, 5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 175, 180, 184, 185, 186, 187, 188, 189, 190, 198], "project": [1, 4, 5, 56, 167, 179, 180, 184, 185, 186, 189, 198], "manag": [1, 181, 189], "item": 1, "git": [1, 13, 82, 167, 180, 184, 198], "branch": [1, 4, 106, 167, 173, 175, 180, 198], "timelin": 1, "staf": 1, "via": [1, 4, 12, 175, 189], "block": [1, 177], "like": [1, 4, 5, 6, 7, 8, 9, 12, 14, 109, 174, 175, 178, 179, 180, 181, 183, 184, 189, 195, 196, 198, 199], "def": [1, 5, 7, 9, 10, 173, 175, 177, 178, 179], "example_funct": 1, "foo": [1, 179], "return": [1, 5, 24, 48, 50, 58, 59, 60, 65, 75, 79, 86, 87, 89, 96, 100, 101, 109, 112, 114, 116, 126, 150, 153, 157, 160, 161, 162, 163, 164, 179, 196], "0": [1, 4, 5, 11, 12, 14, 59, 93, 102, 103, 104, 105, 106, 107, 109, 159, 164, 165, 166, 169, 175, 178, 179, 181, 184, 186, 189, 192, 193, 195, 196, 198], "how": [1, 4, 10, 12, 64, 109, 174, 175, 177, 179, 184, 189, 190, 195, 196], "show": [1, 5, 11, 175, 189, 190, 195, 196], "we": [1, 4, 5, 7, 9, 11, 12, 14, 78, 105, 106, 109, 115, 170, 174, 175, 177, 178, 179, 180, 184, 186, 188, 189, 190, 192, 198, 200], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 24, 31, 32, 78, 85, 86, 91, 105, 106, 109, 114, 149, 167, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 21, 22, 24, 33, 44, 48, 85, 86, 87, 91, 93, 94, 96, 109, 114, 121, 131, 141, 167, 169, 173, 174, 175, 177, 178, 179, 180, 184, 186, 189, 192, 195, 196, 198, 199, 200], "regress": [1, 145, 170, 176, 182, 183, 195, 198, 200], "suit": [1, 5, 10, 14, 31, 40, 53, 83, 84, 86, 106, 170, 174, 175, 177, 180, 182, 183, 184, 185, 186, 187, 188, 190, 193], "would": [1, 4, 7, 12, 14, 18, 28, 31, 38, 41, 80, 93, 109, 111, 125, 170, 174, 175, 177, 178, 179, 180, 181, 189, 192, 198], "thei": [1, 4, 5, 6, 10, 11, 12, 14, 31, 32, 33, 42, 49, 64, 84, 97, 109, 167, 170, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 189, 192, 195, 196, 198, 200], "need": [1, 3, 4, 5, 9, 10, 11, 12, 23, 41, 49, 65, 78, 109, 127, 134, 167, 173, 175, 177, 179, 180, 181, 183, 184, 185, 189, 190, 192, 196, 198, 200], "configur": [1, 4, 5, 7, 9, 12, 28, 31, 38, 40, 50, 78, 79, 80, 81, 82, 85, 86, 91, 106, 109, 157, 159, 160, 161, 165, 166, 170, 175, 178, 179, 183, 184, 186, 189, 190, 192, 198, 199], "work": [1, 4, 6, 9, 10, 12, 13, 31, 33, 34, 36, 39, 40, 47, 82, 83, 85, 86, 91, 105, 106, 130, 140, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 189, 196, 198, 199], "properli": [1, 102, 104, 105, 184, 198], "addit": [1, 5, 7, 31, 173, 174, 175, 177, 178, 179, 180], "modif": [1, 5, 175], "nightli": [1, 180, 198, 200], "anoth": [1, 5, 7, 8, 11, 14, 31, 32, 33, 92, 93, 167, 175, 177, 178, 179, 180, 182, 184, 195, 198, 199, 200], "might": [1, 9, 12, 175, 178, 180, 184, 189, 198], "made": [1, 4, 31, 34, 40, 93, 175, 177, 179, 182, 199], "ensur": [1, 7, 12, 49, 170, 179, 180], "continu": [1, 175], "expect": [1, 10, 173, 175, 180], "page": [2, 5, 185], "auto": 2, "summari": [2, 186], "more": [2, 4, 7, 9, 10, 11, 12, 14, 31, 40, 47, 65, 85, 86, 109, 169, 170, 171, 174, 175, 176, 177, 179, 180, 182, 189, 193, 195, 198, 199], "relev": [2, 5, 7, 109, 185, 186, 187, 188, 189, 190, 198], "main": [2, 5, 7, 12, 36, 106, 173, 178, 179, 180, 199], "part": [2, 4, 5, 10, 12, 14, 15, 31, 40, 125, 152, 170, 175, 176, 179, 180, 183, 192], "document": [2, 7, 12, 175, 179, 183, 184, 198], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 14, 16, 24, 33, 44, 91, 168, 170, 171, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 189, 191, 192, 194, 195, 198, 199, 200], "As": [3, 4, 11, 14, 59, 109, 175, 176, 177, 178, 179, 180, 184, 192, 200], "long": [3, 18, 28, 31, 38, 80, 111, 125, 175, 198], "follow": [3, 4, 5, 11, 12, 15, 56, 106, 159, 165, 166, 167, 169, 170, 175, 176, 177, 180, 181, 184, 189, 190, 192, 194, 196, 198], "procedur": [3, 106, 180, 190], "conda": [3, 4, 13, 82, 102, 104, 105, 106, 167, 173, 179, 183, 184, 185, 186, 187, 188, 190], "environ": [3, 4, 78, 102, 104, 105, 106, 167, 173, 179, 183, 184, 185, 186, 187, 188, 189, 190], "spack": [3, 4, 102, 104, 105, 106, 181, 183, 185, 186, 187, 188, 189, 190], "compil": [3, 4, 12, 102, 103, 104, 105, 106, 107, 181, 183, 185, 186, 187, 188, 189, 190, 198], "system": [3, 4, 18, 28, 31, 38, 78, 80, 81, 102, 104, 105, 106, 111, 125, 175, 181, 183, 184, 185, 186, 187, 188, 189, 190, 198], "modul": [3, 4, 7, 8, 10, 12, 13, 20, 21, 22, 56, 75, 87, 102, 104, 105, 106, 109, 173, 174, 175, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 19, 20, 21, 22, 23, 31, 33, 39, 65, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 102, 103, 104, 105, 106, 107, 125, 127, 130, 134, 140, 145, 147, 154, 159, 165, 166, 167, 169, 170, 171, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 200], "up": [3, 4, 5, 6, 8, 9, 12, 14, 19, 20, 21, 22, 31, 39, 40, 70, 82, 85, 86, 91, 92, 93, 102, 103, 104, 105, 106, 107, 109, 130, 140, 145, 167, 170, 171, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 196, 199], "alreadi": [3, 9, 12, 42, 52, 109, 125, 177, 179, 180, 184, 189, 192, 196, 198], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 20, 21, 22, 33, 42, 51, 75, 82, 87, 91, 96, 106, 173, 174, 175, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 198], "avail": [3, 4, 9, 12, 14, 18, 28, 31, 34, 35, 38, 48, 53, 79, 80, 111, 125, 175, 177, 179, 180, 185, 186, 187, 188, 190, 195, 196, 198, 200], "Then": [3, 5, 9, 102, 103, 104, 105, 106, 107, 109, 167, 170, 173, 175, 177, 178, 180, 189, 195, 198], "run": [3, 4, 5, 8, 10, 14, 18, 23, 28, 31, 32, 34, 37, 38, 40, 41, 47, 56, 79, 80, 85, 86, 91, 93, 105, 106, 111, 112, 123, 125, 126, 127, 131, 134, 138, 143, 149, 152, 153, 154, 167, 170, 171, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 199, 200], "script": [3, 4, 10, 15, 46, 103, 106, 107, 179, 182, 183, 186, 189], "doc": [3, 5, 177, 190], "cd": [3, 167, 180, 186, 198], "rm": 3, "rf": 3, "developers_guid": 3, "_build": 3, "make": [3, 4, 9, 10, 14, 18, 27, 33, 49, 58, 59, 61, 73, 93, 102, 103, 104, 105, 106, 107, 111, 115, 121, 131, 141, 159, 165, 166, 167, 170, 175, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 195, 196, 198, 200], "html": [3, 193], "view": [3, 180], "open": [3, 180], "index": [3, 14, 159, 160, 161, 162, 163, 164, 165, 166, 177, 178], "act": [4, 179, 192], "essenti": [4, 12], "4": [4, 5, 11, 12, 14, 121, 123, 170, 175, 177, 184, 189, 195, 196, 198], "These": [4, 6, 12, 14, 16, 31, 109, 167, 169, 173, 175, 177, 179, 180, 183, 184, 189, 198, 199, 200], "user": [4, 5, 6, 7, 9, 12, 14, 31, 40, 41, 49, 82, 93, 106, 109, 170, 175, 176, 177, 178, 181, 182, 186, 189, 190, 193, 195, 196], "describ": [4, 5, 12, 82, 87, 89, 92, 93, 101, 106, 109, 170, 171, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 196, 198], "below": [4, 12, 18, 28, 31, 38, 80, 106, 111, 125, 167, 174, 175, 177, 178, 180, 184, 189, 192, 196, 198], "when": [4, 10, 12, 14, 19, 20, 21, 22, 24, 31, 32, 37, 40, 41, 49, 50, 52, 53, 83, 92, 93, 106, 109, 114, 164, 170, 175, 177, 178, 179, 180, 183, 185, 186, 187, 188, 190, 192, 198, 199], "instal": [4, 180, 189, 190, 198], "abov": [4, 5, 12, 14, 174, 175, 176, 177, 178, 179, 180, 184, 196, 198, 200], "develop": [4, 5, 6, 10, 11, 15, 106, 109, 167, 169, 173, 175, 176, 179, 181, 184, 189, 193, 198], "local": [4, 6, 9, 31, 33, 40, 167, 174, 175, 177, 180, 181, 184, 189, 190, 192], "off": [4, 180, 181], "http": [4, 5, 9, 52, 175, 179, 181, 183, 184, 190, 193, 198], "github": [4, 5, 179, 180, 183, 184, 193, 198], "com": [4, 5, 52, 179, 180, 183, 184, 198], "e3sm": [4, 5, 8, 9, 31, 95, 167, 173, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193], "creat": [4, 6, 9, 10, 11, 12, 13, 16, 18, 31, 33, 37, 40, 44, 52, 57, 58, 64, 65, 69, 85, 86, 91, 95, 106, 109, 118, 121, 123, 125, 128, 131, 133, 135, 138, 141, 143, 146, 149, 152, 155, 159, 165, 166, 171, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 198], "see": [4, 5, 6, 7, 10, 11, 12, 14, 102, 104, 105, 170, 171, 175, 177, 180, 181, 184, 189, 193, 194, 196, 198, 199, 200], "mode": [4, 12, 173, 180, 182, 183, 198], "mean": [4, 14, 78, 150, 171, 180, 192, 195, 200], "chang": [4, 6, 12, 14, 64, 167, 173, 175, 176, 177, 179, 180, 182, 184, 186, 190, 192, 195, 198, 200], "reflect": [4, 180], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 18, 26, 31, 37, 40, 41, 42, 56, 83, 106, 109, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 198], "tool": [4, 7, 10, 12, 167, 173, 175, 180, 183, 184], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 23, 24, 28, 31, 32, 33, 37, 38, 40, 47, 50, 65, 73, 76, 78, 80, 83, 93, 94, 95, 96, 101, 102, 106, 109, 111, 112, 113, 114, 115, 125, 126, 127, 134, 146, 149, 153, 157, 159, 160, 161, 165, 166, 167, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 31, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 53, 56, 57, 62, 64, 67, 69, 79, 80, 82, 83, 84, 85, 86, 91, 92, 93, 106, 109, 110, 111, 157, 167, 169, 170, 171, 173, 175, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 28, 31, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 53, 57, 62, 64, 67, 69, 79, 80, 82, 83, 84, 85, 86, 87, 91, 92, 93, 106, 109, 110, 111, 117, 118, 119, 121, 123, 125, 128, 129, 130, 131, 133, 135, 136, 138, 139, 140, 141, 143, 144, 146, 147, 149, 151, 152, 155, 157, 167, 169, 170, 171, 173, 174, 175, 176, 178, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 200], "support": [4, 6, 11, 31, 109, 159, 165, 166, 169, 171, 175, 177, 178, 179, 183, 184, 186, 190, 192, 195, 199], "machin": [4, 6, 31, 33, 40, 82, 85, 86, 91, 167, 175, 177, 179, 183, 184, 185, 186, 187, 188, 190], "option": [4, 5, 7, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 33, 38, 40, 41, 42, 47, 49, 50, 52, 53, 57, 63, 64, 65, 68, 69, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 106, 111, 114, 119, 125, 127, 134, 136, 147, 154, 157, 159, 160, 161, 165, 166, 167, 170, 171, 173, 175, 176, 177, 178, 179, 181, 183, 184, 192, 194, 198, 199], "h": [4, 12], "t": [4, 5, 7, 9, 10, 12, 31, 32, 101, 109, 125, 175, 177, 179, 180, 181, 184, 186, 188, 189, 194, 195, 196, 198, 199, 200], "n": [4, 58, 65, 66, 71, 175, 186, 189, 190, 198], "number": [4, 6, 11, 12, 18, 25, 28, 30, 31, 35, 37, 38, 53, 57, 58, 59, 60, 61, 79, 80, 86, 109, 111, 112, 113, 115, 125, 126, 150, 153, 167, 170, 175, 176, 177, 178, 179, 182, 184, 189, 192, 194, 195, 196, 198], "v": [4, 180, 200], "By": [4, 12, 14, 32, 33, 109, 167, 173, 177, 184, 195, 196], "default": [4, 5, 7, 12, 14, 15, 18, 31, 32, 33, 40, 47, 65, 69, 74, 82, 84, 85, 86, 88, 91, 102, 104, 105, 109, 111, 125, 167, 171, 173, 175, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 196, 198, 199, 200], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 31, 38, 40, 48, 80, 82, 85, 86, 109, 110, 111, 118, 125, 159, 165, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 189, 192, 193, 195, 198, 199], "testcas": [4, 6, 9, 14, 18, 31, 45, 57, 64, 69, 85, 86, 92, 93, 111, 125, 128, 133, 138, 143, 156, 175, 179, 184, 195, 198], "example_compact": [4, 167, 173, 184], "1km": [4, 177, 178, 195, 198], "test1": 4, "1": [4, 5, 11, 12, 14, 31, 59, 102, 103, 104, 105, 106, 107, 109, 121, 125, 141, 159, 165, 166, 170, 174, 175, 177, 180, 181, 184, 186, 189, 190, 192, 195, 196, 198], "test2": 4, "displai": [4, 6, 190], "path": [4, 7, 9, 12, 14, 31, 33, 34, 40, 47, 49, 50, 52, 53, 56, 82, 85, 86, 91, 92, 93, 94, 167, 173, 175, 177, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 198, 199], "directori": [4, 6, 9, 10, 12, 13, 14, 15, 31, 33, 34, 39, 40, 47, 52, 82, 83, 85, 86, 91, 92, 93, 106, 130, 140, 167, 170, 173, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 198, 199], "help": [4, 11, 174, 175, 180, 183, 189, 193], "messag": [4, 6, 14, 177, 181, 190], "test_expr": [4, 53], "flag": [4, 175, 179, 181, 182, 184, 193, 195, 198], "suppli": [4, 5, 14, 101, 175, 180], "substr": 4, "regular": [4, 53, 58, 65, 146, 149, 185, 188, 189, 190, 198], "express": [4, 53], "subset": 4, "think": 4, "search": [4, 53, 186], "within": [4, 5, 6, 7, 8, 9, 10, 12, 14, 28, 31, 33, 34, 38, 40, 51, 91, 92, 93, 170, 173, 174, 175, 176, 177, 178, 180, 182, 184, 186, 189], "name": [4, 5, 6, 7, 11, 12, 15, 16, 18, 20, 21, 22, 24, 25, 31, 32, 33, 40, 42, 44, 50, 52, 53, 57, 64, 69, 73, 75, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 100, 109, 111, 114, 116, 118, 125, 133, 150, 152, 155, 158, 173, 175, 177, 178, 179, 180, 182, 184, 190, 195, 198, 200], "singl": [4, 6, 15, 94, 175, 177, 179, 182, 189, 196], "given": [4, 5, 6, 11, 12, 14, 16, 18, 50, 59, 75, 78, 80, 84, 87, 89, 92, 93, 96, 109, 111, 135, 150, 162, 170, 175, 177, 181, 183, 184, 195, 198, 200], "instead": [4, 10, 12, 18, 84, 102, 106, 175, 177, 179, 180, 185, 198, 200], "pass": [4, 6, 10, 11, 12, 14, 40, 93, 173, 175, 177, 178, 179, 180, 182, 198], "similarli": [4, 6, 167, 175, 180, 189, 198], "compon": [4, 5, 6, 7, 8, 11, 18, 31, 33, 40, 44, 55, 82, 91, 95, 111, 117, 125, 145, 152, 174, 175, 176, 177, 178, 182, 183, 184, 189, 191, 194, 199], "result": [4, 11, 14, 50, 60, 92, 93, 106, 109, 121, 131, 138, 141, 143, 170, 171, 175, 176, 179, 180, 182, 184, 195, 196, 200], "verbos": [4, 53, 55, 175, 200], "about": [4, 5, 6, 10, 12, 14, 31, 95, 109, 175, 177, 178, 179, 180, 184, 186, 195], "its": [4, 5, 6, 10, 15, 31, 42, 88, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 196, 198, 199], "descript": [4, 5, 184, 193], "short": [4, 123, 175, 176, 177, 179, 195], "core": [4, 6, 12, 18, 28, 30, 31, 33, 35, 37, 38, 40, 79, 80, 91, 109, 110, 111, 121, 123, 170, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 195, 198, 200], "subdirectori": [4, 6, 11, 18, 31, 33, 40, 53, 57, 64, 69, 111, 125, 170, 174, 175, 177, 179, 198, 199], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 28, 40, 41, 47, 57, 62, 64, 67, 69, 70, 79, 80, 82, 83, 84, 85, 86, 93, 109, 111, 112, 116, 118, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 169, 170, 171, 173, 174, 177, 178, 179, 182, 184, 190, 192, 195, 199, 200], "tempat": 4, "subdir": [4, 18, 31, 40, 57, 64, 69, 111, 125, 175, 177], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 14, 40, 83, 93, 167, 173, 175, 177, 178, 182, 183, 193], "must": [4, 5, 9, 12, 14, 18, 21, 22, 31, 34, 36, 91, 94, 109, 111, 169, 175, 177, 178, 180, 192, 199], "built": [4, 12, 85, 86, 91, 167, 173, 180, 183, 184, 189, 198], "execut": [4, 6, 12, 14, 18, 85, 86, 91, 111, 167, 173, 175, 180, 184, 185, 186, 187, 188, 189, 190, 198], "standalon": [4, 12, 105, 173, 180, 182, 183, 189], "mpa": [4, 7, 9, 10, 11, 12, 14, 18, 24, 31, 33, 56, 73, 87, 89, 91, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 114, 145, 146, 158, 167, 168, 170, 171, 173, 174, 175, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 198, 199, 200], "befor": [4, 6, 12, 37, 175, 178, 179, 180, 181, 186, 190, 192, 196, 198], "w": [4, 180, 182, 198], "num": 4, "f": [4, 7, 9, 12, 177, 179, 180, 184, 190, 198], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 37, 39, 40, 42, 47, 50, 52, 56, 72, 73, 74, 75, 82, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 106, 111, 115, 116, 127, 130, 134, 140, 158, 167, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 189, 190, 192, 195, 196, 198, 199], "m": [4, 12, 58, 65, 66, 71, 170, 178, 180, 185, 186, 187, 188, 190, 192, 195, 196, 198], "mach": [4, 31, 185, 186, 187, 188, 189, 190, 198], "p": [4, 180, 184, 198], "suite_nam": [4, 6, 84, 86, 91, 198], "specifi": [4, 12, 14, 15, 33, 169, 175, 180, 184, 190, 196, 198], "either": [4, 5, 6, 10, 11, 12, 59, 109, 167, 175, 180, 182, 184, 192, 198], "onli": [4, 5, 6, 12, 14, 40, 106, 167, 169, 171, 173, 175, 177, 179, 183, 184, 186, 189, 190, 192, 194, 195, 196, 198], "time": [4, 5, 6, 12, 14, 15, 31, 40, 94, 109, 116, 125, 135, 154, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 190, 195, 198, 200], "wai": [4, 5, 11, 12, 31, 61, 66, 106, 109, 175, 177, 178, 179, 180, 181, 183, 189, 192], "altern": [4, 11, 198], "ani": [4, 5, 6, 7, 11, 12, 14, 27, 39, 85, 86, 130, 140, 173, 174, 175, 176, 177, 178, 179, 180, 184, 189, 195, 198], "case_numb": 4, "multipl": [4, 5, 12, 14, 168, 176, 179, 189, 195, 198], "separ": [4, 5, 7, 12, 14, 175, 176, 182, 196, 198], "space": [4, 5, 7, 11, 175, 180, 186, 189, 198], "requir": [4, 6, 12, 18, 28, 31, 32, 38, 111, 125, 167, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 189, 192, 193, 198, 199], "few": [4, 11, 12, 18, 28, 31, 38, 80, 106, 111, 170, 175, 179, 184, 189, 195, 196], "basic": [4, 5, 184, 186, 189, 198], "piec": [4, 173], "inform": [4, 5, 6, 31, 93, 101, 175, 177, 180, 184, 186, 193, 198], "abl": [4, 102, 103, 104, 105, 107, 109, 175, 176, 178, 180, 189, 198], "place": [4, 12, 14, 175, 177, 189, 196], "download": [4, 6, 8, 31, 33, 39, 130, 140, 177, 179, 180, 184, 198, 200], "some": [4, 6, 7, 8, 9, 11, 12, 14, 40, 169, 170, 174, 175, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 198, 199, 200], "data": [4, 8, 11, 14, 19, 31, 32, 33, 87, 89, 90, 94, 95, 101, 106, 159, 165, 166, 175, 180, 183, 184, 185, 186, 187, 188, 189, 198, 199, 200], "locat": [4, 12, 14, 40, 85, 86, 91, 167, 175, 180, 182, 184, 186, 189, 192, 195, 196, 198], "where": [4, 5, 12, 14, 31, 33, 40, 50, 82, 85, 86, 91, 109, 159, 162, 165, 166, 167, 173, 174, 175, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 196, 198, 200], "There": [4, 11, 159, 165, 166, 174, 175, 179, 180, 181, 184, 198], "r": [4, 190, 196], "tell": [4, 180], "re": [4, 175, 179, 180, 182, 184, 189, 190, 196], "leav": [4, 177, 184], "unknown": [4, 106, 179, 189], "component_path": [4, 85, 86, 91, 167, 173, 184, 198], "absolut": [4, 7, 31, 33, 49, 85, 86, 91, 167, 173, 175, 180, 198], "landic": [4, 8, 10, 16, 33, 56, 91, 173, 174, 175, 177, 178, 180, 182, 183, 184, 198, 199, 200], "e3sm_submodul": [4, 167, 173, 180], "mali": [4, 106, 173, 175, 180, 182, 184, 198, 199], "dev": [4, 5, 173, 174, 175, 178, 179, 180, 183, 193, 198], "albani": [4, 102, 104, 105, 106, 173, 184, 185, 186, 187, 190, 198], "depend": [4, 6, 12, 31, 32, 39, 130, 140, 171, 177, 180, 182, 184, 189, 190, 192, 196, 198, 199], "whether": [4, 6, 11, 14, 15, 18, 23, 31, 33, 40, 41, 47, 50, 52, 53, 78, 83, 84, 85, 86, 91, 93, 94, 97, 109, 111, 112, 125, 126, 127, 134, 146, 149, 153, 154, 175, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 195, 198], "omega": [4, 24, 95, 111, 114, 167, 173, 179, 180, 182, 193, 198], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 18, 19, 22, 23, 24, 31, 32, 33, 40, 42, 50, 63, 65, 68, 78, 79, 80, 81, 82, 85, 86, 91, 93, 95, 96, 97, 98, 100, 101, 106, 111, 114, 127, 134, 147, 154, 157, 159, 160, 161, 165, 166, 167, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 183, 192, 198, 199], "point": [4, 46, 52, 167, 169, 173, 177, 178, 179, 180, 184, 189, 198], "much": [4, 12, 175], "config_fil": [4, 85, 86, 91], "work_dir": [4, 9, 14, 31, 40, 82, 85, 86, 91, 92, 93, 175, 177], "base": [4, 6, 11, 12, 13, 14, 16, 31, 33, 35, 40, 44, 47, 63, 68, 69, 85, 86, 91, 106, 113, 115, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 192, 199], "": [4, 5, 6, 9, 10, 12, 14, 31, 33, 34, 40, 42, 47, 70, 83, 88, 91, 93, 109, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 198], "recommend": [4, 5, 9, 175, 176, 179, 180, 189, 195], "itself": [4, 5, 7, 31, 173, 174, 175, 177, 178, 180, 198], "temp": 4, "scratch": [4, 180, 186, 190, 198], "avoid": [4, 175], "confus": [4, 12, 179, 180], "output": [4, 5, 6, 8, 10, 11, 12, 14, 16, 18, 31, 32, 34, 39, 40, 47, 72, 73, 80, 84, 93, 109, 111, 116, 130, 140, 149, 158, 170, 177, 182, 184, 190, 198, 200], "compar": [4, 8, 14, 40, 85, 86, 91, 92, 93, 120, 122, 124, 132, 137, 142, 171, 176, 179, 182, 194, 195, 198, 200], "previou": [4, 14, 175, 194, 198, 200], "same": [4, 5, 7, 12, 14, 32, 33, 40, 92, 93, 109, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 198, 199, 200], "baseline_dir": [4, 40, 85, 86, 91], "mani": [4, 6, 7, 109, 174, 175, 177, 179, 180, 182, 183, 195, 196], "valid": [4, 5, 6, 8, 40, 159, 160, 161, 162, 163, 164, 165, 166, 170, 179, 180, 183, 192, 195], "sure": [4, 10, 14, 93, 106, 121, 131, 141, 167, 170, 175, 179, 180, 182, 184, 189, 190, 195, 196], "timer": [4, 40, 43, 92, 176, 177, 179], "ha": [4, 7, 12, 14, 18, 28, 31, 32, 34, 38, 40, 42, 81, 93, 102, 104, 105, 111, 125, 167, 170, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 192, 195, 196, 198], "both": [4, 5, 6, 11, 12, 14, 23, 93, 109, 127, 134, 170, 174, 175, 178, 180, 183, 184, 194], "custom": [4, 6, 11, 49, 50, 85, 86, 91, 167, 173, 184, 190, 198], "order": [4, 6, 11, 12, 109, 173, 175, 176, 180, 198], "give": [4, 12, 14, 175, 179, 180, 184, 198], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 14, 18, 30, 106, 109, 111, 159, 165, 166, 167, 170, 173, 175, 177, 179, 180, 182, 184, 189, 190, 192, 195, 196, 198, 200], "after": [4, 5, 12, 31, 33, 34, 70, 106, 160, 161, 167, 173, 175, 177, 180, 184, 186, 190, 198], "c": [4, 86, 106, 175, 180, 185, 186, 187, 188, 189, 190, 194, 198, 200], "argument": [4, 5, 7, 10, 12, 14, 29, 31, 80, 170, 175, 177, 179, 180, 200], "resid": [4, 33], "test_suit": [4, 175], "build": [4, 8, 11, 12, 61, 66, 102, 103, 104, 105, 106, 107, 167, 171, 173, 177, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190], "mpas_model": [4, 184], "overrid": [4, 11, 12, 36, 37, 39, 42, 43, 49, 61, 64, 65, 66, 109, 130, 140, 175, 177, 179, 184, 190, 195, 198], "mai": [4, 5, 6, 10, 11, 12, 14, 32, 34, 37, 106, 109, 167, 169, 175, 176, 177, 178, 180, 181, 182, 184, 190, 198, 199], "baselin": [4, 6, 8, 14, 40, 85, 86, 91, 92, 93, 120, 122, 124, 132, 137, 142, 148, 170, 176, 179, 182, 194, 198], "comparison": [4, 14, 40, 92, 93, 177, 184], "against": [4, 6, 8, 14, 93, 148, 170, 175, 194], "oppos": [4, 23, 112, 126, 127, 134, 146, 149, 153, 154], "task": [4, 6, 8, 9, 12, 18, 25, 28, 30, 31, 37, 38, 80, 109, 111, 113, 115, 125, 170, 175, 179, 182, 183, 185, 186, 187, 188, 189, 190, 195], "parallel": [4, 18, 28, 31, 37, 38, 111, 175, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 198, 199], "been": [4, 12, 14, 31, 40, 42, 85, 86, 91, 102, 104, 105, 109, 149, 167, 173, 175, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 198], "no_step": 4, "wherea": [4, 10, 175, 194, 199], "typic": [4, 5, 7, 11, 12, 14, 31, 84, 109, 173, 174, 175, 178, 180, 182, 184, 189, 192, 198, 199], "clone": [4, 167, 174, 180, 198], "than": [4, 6, 7, 9, 11, 12, 31, 33, 38, 49, 106, 125, 170, 175, 176, 179, 180, 181, 192, 195, 200], "just": [4, 12, 18, 28, 31, 38, 53, 106, 111, 175, 179, 180, 182, 186, 190], "pickl": [4, 6, 175, 198], "latter": [4, 40, 106], "conveni": [4, 159, 165, 166, 175, 182, 184, 198], "tab": [4, 198], "complet": [4, 6, 20, 21, 22, 198], "explicitli": [4, 5, 14, 109, 170, 175, 184, 198], "select": [4, 6, 94, 175, 180], "two": [4, 8, 131, 170, 171, 173, 175, 176, 178, 179, 180, 195, 199], "edit": [4, 5, 93, 180, 198], "steps_to_run": [4, 14, 40, 84, 93, 175, 177, 184], "test_cas": [4, 6, 7, 18, 31, 44, 45, 57, 64, 69, 82, 85, 86, 92, 93, 111, 125, 128, 133, 138, 143, 149, 152, 155, 175, 177, 184, 198], "initial_st": [4, 5, 15, 118, 169, 171, 175, 177, 179, 184, 195], "full_run": [4, 132, 195], "restart_run": [4, 132, 195], "Or": [4, 175, 184], "accomplish": [4, 175, 179], "thing": [4, 102, 103, 104, 105, 106, 107, 109, 175, 179, 183], "skip": [4, 6, 14, 93, 177, 200], "take": [4, 5, 9, 12, 14, 49, 175, 176, 178, 180, 200], "preced": [4, 49], "over": [4, 7, 12, 49, 175, 179, 183, 192, 195, 198], "special": [4, 182], "databas": [4, 6, 9, 16, 18, 31, 33, 111, 175, 189], "polaris_cach": [4, 6, 16, 175], "symlink": [4, 6, 12, 31, 33, 177, 179, 180], "input": [4, 6, 8, 9, 26, 31, 32, 33, 34, 39, 73, 130, 140, 170], "structur": [4, 11, 24, 114, 177, 183], "without": [4, 14, 33, 175, 179, 180, 184, 188, 189, 198], "redund": [4, 159, 165, 166, 170], "stamp": 4, "revis": [4, 184], "remov": [4, 12, 14, 84, 170], "older": 4, "ones": [4, 159, 165, 166, 179], "version": [4, 13, 26, 49, 82, 92, 93, 167, 170, 173, 174, 175, 178, 179, 180, 183, 184, 189, 190, 193, 195, 198], "A": [4, 5, 6, 9, 11, 12, 16, 19, 21, 22, 24, 31, 32, 33, 40, 44, 48, 49, 53, 57, 58, 61, 64, 65, 66, 69, 75, 80, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 114, 117, 121, 125, 128, 131, 133, 138, 141, 143, 145, 146, 149, 152, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 170, 173, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 195, 196, 198], "aid": 4, "updat": [4, 5, 6, 18, 20, 22, 27, 28, 37, 38, 88, 105, 113, 125, 167, 170, 175, 181, 183, 198], "cached_fil": [4, 16, 175], "json": [4, 6, 16, 47, 175, 190], "anvil": [4, 106, 175, 184, 189, 198], "chrysali": [4, 106, 175, 184, 189, 198], "sinc": [4, 12, 14, 101, 109, 170, 175, 177, 179, 180, 195, 196], "copi": [4, 6, 33, 47, 85, 86, 91, 186, 198], "onto": [4, 180], "lcrc": [4, 6, 9, 47, 175, 179, 184, 185, 187, 189, 198], "server": [4, 6, 33, 47, 175, 179, 184, 190], "whose": [4, 175], "global_ocean": [4, 7, 9, 12, 173, 175, 177, 179, 180, 184, 198, 200], "qu240": [4, 12, 175, 179, 180, 184, 198, 200], "mesh": [4, 8, 18, 31, 73, 94, 109, 111, 112, 113, 115, 123, 126, 128, 146, 149, 150, 152, 153, 155, 159, 165, 166, 169, 170, 174, 175, 177, 178, 179, 180, 182, 183, 184, 192, 194, 195, 196, 198, 200], "phc": [4, 175, 192, 200], "init": [4, 12, 28, 38, 167, 173, 175, 177, 179, 180, 184, 198, 200], "ocean_cached_fil": 4, "pr": [4, 198, 200], "look": [4, 5, 9, 14, 178, 179, 184], "someth": [4, 5, 180], "culled_mesh": [4, 175], "nc": [4, 9, 10, 11, 12, 14, 175, 177, 179], "210803": 4, "culled_graph": [4, 175], "info": [4, 10, 12, 18, 25, 73, 111, 175], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 175], "date_str": [4, 47], "let": [4, 175, 180, 182, 184, 190], "string": [4, 7, 12, 33], "choos": [4, 175, 179, 185, 186, 187, 188, 190, 199], "todai": [4, 47], "dry_run": [4, 47], "saniti": 4, "check": [4, 14, 78, 93, 180, 182, 184, 186, 190, 198, 200], "print": [4, 10, 14, 53, 93, 97, 175, 179, 200], "stdout": [4, 10, 31, 40, 175], "translat": [4, 24, 109, 114], "compass": [4, 56, 167, 175, 179, 182], "convert": [4, 7, 11, 12, 109, 175], "namelist": [4, 5, 6, 8, 18, 19, 20, 23, 24, 26, 27, 30, 39, 85, 86, 91, 100, 101, 111, 114, 115, 127, 130, 134, 140, 167, 170, 171, 173, 175, 177, 178, 179, 183, 184], "stream": [4, 5, 6, 8, 18, 21, 23, 26, 39, 95, 100, 101, 115, 127, 130, 134, 140, 167, 169, 170, 173, 175, 177, 178, 179, 184], "yaml": [4, 8, 18, 19, 22, 23, 24, 111, 114, 115, 127, 134, 170, 175, 183, 186, 190], "e": [4, 5, 9, 12, 24, 31, 32, 42, 44, 56, 95, 106, 109, 114, 167, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 190, 192, 195, 198, 199, 200], "g": [4, 5, 9, 12, 24, 31, 32, 42, 44, 56, 95, 106, 109, 114, 167, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 192, 195, 198, 200], "forward": [4, 5, 12, 14, 31, 116, 123, 124, 133, 135, 137, 167, 173, 175, 177, 179, 184, 195, 196], "becaus": [4, 5, 9, 10, 11, 12, 14, 31, 32, 169, 175, 177, 179, 180, 186, 188, 190, 198], "don": [4, 5, 12, 109, 175, 177, 179, 180, 188, 198, 199], "format": [4, 5, 9, 11, 12, 95, 101, 175, 176, 177, 178, 180, 184, 186], "note": [4, 5, 14, 190], "keyword": [4, 5, 12, 14, 175, 177], "top": [4, 15, 159, 160, 161, 162, 163, 164, 165, 166, 169, 174, 192], "ignor": 4, "get": [4, 5, 7, 9, 10, 12, 18, 19, 20, 21, 22, 31, 40, 41, 48, 59, 79, 83, 106, 109, 111, 174, 175, 177, 178, 179, 180, 182, 184, 192, 198], "pars": [4, 7, 12, 19, 20, 21, 22, 75, 87, 89], "valu": [4, 5, 7, 12, 14, 15, 19, 24, 93, 94, 97, 114, 135, 170, 173, 175, 177, 178, 179, 183, 184, 192, 195], "doesn": [4, 7, 101, 175, 177, 184, 189, 198], "matter": 4, "usabl": 4, "sphinx": 5, "written": [5, 6, 31, 40, 94, 175, 177], "myst": 5, "tip": [5, 180], "easi": [5, 33, 179], "start": [5, 6, 12, 88, 169, 170, 176, 178, 179, 183, 186, 189, 190, 193], "exist": [5, 7, 24, 31, 34, 52, 87, 89, 91, 114, 170, 175, 179, 180, 181, 189, 200], "tree": [5, 87, 89, 101], "group": [5, 7, 12, 16, 17, 31, 40, 44, 45, 48, 117, 118, 121, 123, 125, 131, 135, 138, 141, 143, 145, 146, 167, 170, 171, 173, 174, 175, 177, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200], "pull": [5, 179, 180, 184], "request": [5, 12, 18, 25, 27, 111, 160, 161, 175, 179, 180, 181, 184, 196], "guid": [5, 109, 170, 176, 179, 186, 189, 193], "baroclinic_channel": [5, 12, 14, 167, 172, 173, 175, 177, 178, 179, 182, 193, 197, 198, 199, 200], "label": [5, 189, 198], "prepend": 5, "them": [5, 6, 12, 14, 18, 30, 106, 111, 171, 173, 175, 177, 178, 179, 180, 182, 188, 189, 194, 198, 199], "baroclin": [5, 44, 117, 118, 121, 123, 125, 128, 131, 135, 138, 141, 143, 170, 175, 177, 178, 195], "channel": [5, 44, 117, 118, 121, 123, 125, 128, 131, 135, 138, 141, 143, 170, 175, 177, 181, 195], "And": [5, 12, 180], "becom": [5, 175, 177], "who": [5, 180, 184, 190], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 31, 40, 64, 85, 86, 91, 106, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 189, 192, 195, 196, 199, 200], "brief": 5, "overview": [5, 183, 186, 190], "comment": [5, 176, 184], "appli": [5, 11, 12, 53, 169, 178], "common": [5, 7, 10, 37, 40, 44, 170, 175, 176, 177, 178, 179, 181, 182, 184, 189, 190, 198, 199, 200], "refer": [5, 12, 31, 116, 135, 159, 162, 165, 166, 175, 177, 179, 180, 182, 183, 192, 195, 198], "awar": [5, 106, 173, 189], "wish": [5, 12, 175, 180, 198, 200], "specif": [5, 7, 12, 42, 106, 167, 173, 174, 178, 183, 184, 186, 189, 198, 200], "share": [5, 15, 109, 118, 167, 170, 173, 174, 175, 177, 178, 180, 183, 185, 186, 187, 188, 189, 190, 191, 195, 198], "function": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 39, 58, 65, 106, 109, 118, 130, 140, 175, 177, 178, 179, 183, 196, 199], "public": [5, 9, 175, 184], "api": [5, 10, 183], "underscor": 5, "md": 5, "eval": 5, "rst": [5, 12], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 118, 121, 123, 131, 135, 141, 170, 173, 177], "baroclinicchanneltestcas": [5, 170], "compute_cell_count": [5, 109, 170], "dynamic_model_config": [5, 170], "initialst": [5, 170, 175, 177], "setup": [5, 7, 9, 12, 14, 23, 28, 31, 32, 38, 40, 109, 112, 126, 127, 134, 153, 154, 170, 177, 179, 180, 182, 183, 184, 196, 198, 199], "across": [5, 12, 15, 170, 175, 176, 177, 178, 179, 182, 191, 195], "ot": 5, "automat": [5, 7, 10, 12, 15, 109, 177, 179, 180, 184, 185, 187, 188, 189, 190, 198], "python": [5, 6, 7, 19, 37, 42, 174, 175, 177, 178, 179, 180, 182, 183, 184, 189, 190, 198], "begin": [5, 14, 170, 175, 180, 183, 189, 196], "numpydoc": 5, "text": [5, 6, 196], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 109, 159, 161, 162, 163, 164, 165, 166, 167, 177, 184, 186, 190], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 78, 106, 109, 111, 112, 116, 126, 150, 153, 162, 163, 164, 170, 171, 175, 180, 186, 187, 189, 190, 198], "pressur": [5, 167, 184], "overli": 5, "ic": [5, 109, 167, 179, 180, 183, 184, 186, 192, 199], "shelf": [5, 109, 178, 179, 184, 192], "draft": [5, 192], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 38, 40, 41, 44, 45, 47, 50, 52, 53, 56, 57, 59, 60, 61, 64, 69, 71, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 96, 97, 98, 100, 101, 109, 111, 112, 114, 116, 118, 121, 123, 125, 126, 127, 128, 131, 133, 134, 135, 138, 141, 143, 146, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 175, 177, 178, 195], "xarrai": [5, 94, 159, 160, 161, 162, 163, 164, 165, 166, 175], "dataarrai": [5, 160, 161, 162, 163, 164, 175], "sea": [5, 109, 161, 162, 163, 164, 167, 184, 192], "surfac": [5, 109, 161, 162, 163, 164, 167, 169, 184, 192, 195], "height": [5, 109, 161, 162, 163, 164, 167, 184, 192], "mask": [5, 159, 162, 165, 166, 175, 184, 192], "landicepressur": [5, 177], "deviat": 5, "float": [5, 7, 12, 19, 57, 59, 60, 64, 93, 94, 118, 121, 123, 125, 128, 131, 135, 138, 141, 150, 175, 177], "densiti": [5, 11, 109], "seawat": 5, "displac": 5, "land": [5, 109, 167, 183, 184, 192, 199], "landicedraft": 5, "equal": [5, 179], "initi": [5, 6, 31, 116, 120, 123, 128, 145, 155, 170, 171, 175, 177, 178, 179, 181, 182, 183, 184, 192, 194, 195, 196, 199], "entri": [5, 46, 76, 85, 86], "alwai": [5, 7, 10, 14, 49, 109, 167, 173, 179, 180, 184], "own": [5, 6, 9, 10, 15, 31, 175, 177, 179, 180, 182, 184, 196, 198, 199], "line": [5, 8, 29, 31, 80, 175, 176, 179, 180, 183, 198], "type": [5, 12, 19, 101, 175, 177, 178, 179, 180, 181, 182, 184, 195, 196, 200], "side": 5, "colon": 5, "doubl": [5, 109, 175, 176], "back": [5, 186, 198], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 50, 60, 81, 167, 179, 180, 181, 184, 198], "arg": [5, 10, 31, 80, 175], "indic": [5, 6, 12, 14, 31, 32, 86, 93, 94, 162, 174, 175, 181, 184, 192, 195], "On": [5, 11, 180, 189], "next": [5, 178, 192, 198], "indent": [5, 175], "obviou": [5, 12], "none": [5, 12, 14, 18, 21, 22, 28, 31, 32, 33, 38, 40, 47, 50, 53, 55, 57, 64, 69, 73, 82, 84, 86, 87, 91, 92, 93, 94, 96, 100, 111, 112, 125, 126, 153, 175, 192, 195], "replac": [5, 7, 12, 19, 20, 21, 22, 23, 24, 40, 52, 75, 87, 96, 97, 114, 127, 134, 177, 179, 184, 198], "els": [5, 6, 175], "true": [5, 7, 11, 12, 14, 15, 18, 41, 50, 52, 93, 94, 97, 102, 103, 104, 105, 107, 109, 111, 169, 175, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 198, 199], "further": [5, 177, 178, 190], "necessari": [5, 11, 173], "rais": [5, 7, 14, 31, 34, 50, 52, 78, 93, 109, 175, 177, 178, 179], "list_cas": 6, "list_machin": [6, 179], "list_suit": 6, "anywher": [6, 10, 180], "setup_cas": [6, 7], "object": [6, 10, 20, 21, 22, 75, 87, 92, 93, 95, 96, 100, 101, 173, 177, 178, 179], "later": [6, 14, 18, 28, 31, 38, 49, 93, 111, 175, 184], "contrast": 6, "read": [6, 16, 20, 21, 22, 31, 32, 40, 51, 74, 75, 95, 109, 169, 175, 177], "properti": [6, 12, 169, 175, 189, 196], "clean_cas": 6, "delet": [6, 179, 180, 181, 198], "constant": [6, 57, 64, 65, 109, 169, 195, 196], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 15, 95, 158, 175, 177, 180], "out": [6, 11, 77, 81, 94, 174, 175, 179, 180, 184, 192, 198], "proven": [6, 8, 49, 183, 184], "save": [6, 15, 50, 71, 170, 175, 177, 178, 189, 194, 195], "dictionari": [6, 7, 12, 16, 19, 21, 22, 24, 31, 32, 40, 44, 49, 75, 82, 86, 87, 93, 95, 96, 97, 114, 175, 177, 178, 179], "target": [6, 9, 18, 33, 52, 106, 109, 111, 170, 175, 177], "minimum": [6, 94, 109, 111, 170, 175, 184, 192, 195, 196], "determin": [6, 11, 12, 33, 37, 40, 78, 101, 109, 115, 170, 171, 175, 178, 192, 195, 196, 198], "maximum": [6, 14, 93, 94, 184, 192, 195, 196], "product": 6, "ntask": [6, 12, 18, 28, 31, 35, 38, 80, 109, 111, 125, 175, 177], "cpus_per_task": [6, 12, 31, 35, 38, 80, 175], "attribut": [6, 10, 11, 12, 14, 37, 178], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 192, 195], "runtim": [6, 23, 37, 109, 112, 126, 127, 134, 153, 154, 175, 177], "min_task": [6, 12, 18, 28, 31, 38, 80, 109, 111, 125, 175, 177], "min_cpus_per_task": [6, 12, 31, 38, 80, 175], "fewest": 6, "least": [6, 11, 14, 173, 180], "fail": [6, 12, 14, 18, 28, 31, 38, 40, 50, 93, 111, 125, 175, 183, 184, 195, 196], "run_test": [6, 175, 177], "run_single_step": 6, "oper": [6, 39, 130, 140, 175, 177, 200], "log": [6, 8, 14, 31, 40, 80, 93, 94, 175, 177, 180, 183, 198], "figur": [6, 174, 175, 178, 184], "cpu": [6, 12, 106, 175, 198], "per": [6, 12, 18, 28, 30, 31, 38, 80, 109, 111, 175, 184, 185, 186, 187, 188, 189, 190, 195, 196], "method": [6, 7, 11, 12, 16, 18, 23, 24, 31, 32, 36, 37, 40, 41, 42, 43, 44, 49, 56, 57, 61, 64, 65, 66, 69, 70, 95, 109, 110, 111, 112, 114, 117, 118, 121, 123, 125, 126, 127, 128, 131, 133, 134, 135, 138, 141, 143, 145, 146, 149, 152, 153, 154, 155, 170, 173, 175, 177, 179], "wa": [6, 14, 50, 92, 93, 106, 120, 122, 124, 132, 137, 142, 175, 177, 179, 180, 181, 184, 192, 198], "retriev": [6, 181], "store": [6, 14, 42, 109, 175, 177, 198], "dure": [6, 9, 12, 23, 31, 40, 109, 112, 126, 127, 134, 153, 154, 175, 177, 179, 184, 198, 199, 200], "txt": [6, 91, 176, 181], "case_output": [6, 10], "individu": [6, 7, 15, 93, 177, 179, 189, 190, 198, 199], "involv": [6, 12, 14, 93, 175, 177, 182], "implement": [6, 7, 170, 171, 179, 195, 196], "termin": [6, 14, 175, 180], "window": 6, "update_cach": 6, "_cached_fil": [6, 175], "map": [6, 16, 24, 64, 65, 94, 114, 180, 184], "origin": [6, 47, 180, 198], "enabl": [6, 175, 181, 184, 190], "consum": [6, 175, 177, 200], "faster": [6, 180], "debug": [6, 102, 103, 104, 105, 107, 185, 186, 187, 188, 190], "parser": [7, 49], "here": [7, 10, 12, 14, 170, 174, 175, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 198, 200], "mpas_tool": [7, 10, 11, 170, 175], "mpasconfigpars": 7, "polarisconfigpars": [7, 31, 40, 50, 78, 79, 81, 82, 157, 159, 160, 161, 165, 166], "certain": [7, 14, 49, 175, 180, 184], "add_from_packag": [7, 179], "content": [7, 12, 87, 89, 101, 174, 175, 179, 198], "found": [7, 12, 96, 179, 180, 183, 185, 186, 187, 188, 189, 190], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 42, 71, 109, 173, 175, 177, 178, 179, 184], "cfg": [7, 42, 173, 177, 178, 179, 184, 198], "except": [7, 14, 31, 34, 50, 93, 175, 179], "first": [7, 12, 85, 86, 170, 175, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 196, 198], "second": [7, 11, 12, 125, 175, 179, 195], "know": [7, 9, 11, 109, 175, 179, 180], "behavior": [7, 12, 84, 175, 176, 177], "noth": [7, 181, 196], "being": [7, 23, 31, 40, 83, 86, 93, 112, 126, 127, 134, 153, 154, 175, 177, 178, 179, 180, 192], "test_group": [7, 16, 17, 31, 40, 118, 121, 123, 131, 135, 141, 146, 175, 177, 178], "fals": [7, 11, 12, 14, 18, 31, 33, 41, 47, 53, 55, 83, 84, 86, 91, 93, 94, 109, 111, 169, 175, 177, 178, 184, 186, 188, 190, 195], "happen": [7, 10, 12, 93, 175, 177, 196], "class": [7, 9, 11, 12, 16, 18, 26, 31, 36, 40, 44, 49, 56, 57, 64, 69, 95, 109, 110, 111, 117, 118, 121, 123, 125, 128, 131, 133, 135, 138, 141, 143, 145, 146, 149, 152, 155, 167, 170, 171, 173, 175, 177, 178], "larg": [7, 14, 175, 177, 185], "those": [7, 12, 14, 40, 92, 93, 106, 177, 178, 179, 180, 183, 196, 200], "configpars": [7, 80, 178], "getinteg": 7, "getfloat": [7, 10, 12, 175], "getboolean": [7, 175], "getlist": 7, "comma": [7, 196], "integ": [7, 11], "boolean": [7, 94, 162], "etc": [7, 12, 88, 91, 173, 175, 177, 195], "getexpress": 7, "tupl": 7, "rang": [7, 94], "numpi": [7, 11, 58, 65, 66, 71, 109, 116, 157, 158, 175], "linspac": 7, "arang": 7, "arrai": [7, 58, 65, 66, 71, 109, 157, 158, 160, 161, 162, 163], "One": [7, 11, 198, 200], "advantag": [7, 12, 106, 179, 189], "track": [7, 18, 175, 177, 180], "associ": [7, 11, 12, 15, 159, 165, 166, 170, 177, 178, 182], "belong": [8, 10, 12, 18, 28, 31, 38, 40, 44, 57, 64, 69, 111, 117, 118, 121, 123, 125, 128, 131, 133, 135, 138, 141, 143, 145, 146, 149, 152, 155, 173, 175, 177, 178, 179, 200], "command": [8, 13, 29, 31, 37, 80, 82, 175, 179, 180, 182, 183, 186, 189, 190, 198], "while": [8, 15, 169, 170, 175, 178, 181, 182, 195], "meant": [8, 179, 184], "simplifi": 8, "verifi": [8, 176, 184], "io": [8, 175, 177, 179, 183, 184, 193], "visual": [8, 11, 149, 175, 177, 178, 182, 183], "lot": [9, 109, 175, 179], "o": [9, 10, 87, 89, 101, 179, 180, 184, 198], "relat": [9, 11, 12, 109, 167, 170, 175, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 198], "handl": [9, 10, 177, 189, 196], "intern": [9, 18, 40, 175, 180, 181], "lower": [9, 177, 195], "directli": [9, 11, 12, 31, 174, 175, 179, 182, 183, 186], "aren": [9, 31, 32, 175, 179, 180, 195, 196, 200], "readm": [9, 177], "importlib": [9, 177], "resourc": [9, 12, 28, 38, 51, 80, 112, 125, 126, 153, 170, 175, 177, 195], "import": [9, 10, 11, 12, 173, 175, 177, 178, 179, 180, 182], "files_for_e3sm": [9, 177, 184], "str": [9, 12, 16, 18, 19, 20, 21, 22, 25, 31, 32, 33, 34, 40, 44, 47, 50, 52, 53, 57, 64, 69, 73, 75, 80, 82, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 98, 100, 101, 111, 116, 118, 125, 133, 150, 152, 155, 158, 175, 177, 178], "did": [9, 14, 93], "add_input_fil": [9, 32, 175, 177], "collect": [9, 44, 110, 173, 174, 182], "though": [9, 31, 177, 179], "whenev": [9, 175], "flexibl": [9, 171, 177, 180], "care": [9, 175, 178, 180], "No": [9, 183], "step_dir": 9, "database_root": [9, 175, 184, 185, 186, 187, 188, 189, 190, 198], "download_path": 9, "join": 9, "bathymetry_databas": [9, 175, 184], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 162, 175, 178, 192, 195, 199], "url": [9, 33, 50, 175, 181, 184], "web": [9, 175, 184], "anl": [9, 175, 184], "gov": [9, 175, 181, 184, 186, 190], "mpas_standalonedata": [9, 184, 189], "dest_path": [9, 50], "remot": [9, 33, 180], "bathymetri": [9, 175, 184], "strategi": 10, "stderr": [10, 31, 40, 175], "loggingcontext": 10, "check_cal": [10, 175], "most": [10, 37, 106, 167, 173, 175, 178, 179, 180, 182, 184, 189, 190, 192, 193, 199], "won": [10, 179, 184], "logger": [10, 31, 40, 56, 80, 175, 177], "full": [10, 31, 84, 160, 161, 170, 171, 175, 177, 180, 183, 189, 192, 194, 195, 196, 198], "although": 10, "captur": 10, "insid": [10, 175, 179], "good": [10, 31, 175, 180], "idea": 10, "explicit": [10, 179], "go": [10, 175, 177, 178, 179, 180, 190], "even": [10, 11, 12, 14, 33, 49, 106, 175, 179, 180, 184, 189, 198], "subprocess": [10, 31, 80, 83, 175, 179, 181], "produc": [10, 12, 15, 31, 32, 34, 47, 109, 121, 131, 141, 170, 171, 175, 179, 180, 198], "otherwis": [10, 14, 175, 177, 185, 186, 187, 188, 189, 190], "intent": 10, "desir": [10, 11, 12, 14, 15, 93, 109, 175, 176, 184, 198], "trick": [10, 175], "direct": [10, 11, 12, 170, 177, 190, 195], "snippet": 10, "dome": [10, 56, 175, 177, 178, 182, 198, 199], "setup_mesh": [10, 175], "setupmesh": [10, 175, 177], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 56, 106, 173, 178, 179, 180, 182, 184], "mpas_grid": [10, 175], "landice_grid": [10, 175], "l": [10, 93, 190], "sever": [10, 175, 177, 178, 179, 180, 182, 183, 198, 200], "global": [11, 44, 145, 146, 171, 175, 176, 178, 179, 182, 183, 184, 190, 198, 199], "quasiuniformsphericalmeshstep": [11, 171], "icosahedralmeshstep": [11, 171], "jigsaw": [11, 57, 61, 63, 64, 66, 68, 69, 146, 149, 175], "complex": [11, 14, 65, 177, 179], "build_cell_width_lat_lon": [11, 64], "opt": [11, 69], "make_jigsaw_mesh": [11, 64], "icosahedr": [11, 57, 59, 146, 149, 196], "significantli": [11, 192], "smooth": 11, "cell": [11, 12, 15, 57, 58, 59, 60, 64, 65, 66, 71, 109, 111, 112, 126, 150, 153, 159, 160, 161, 162, 165, 166, 170, 175, 177, 178, 192, 195, 196], "quasi": [11, 64, 184], "hand": [11, 179], "restrict": 11, "resolut": [11, 12, 57, 60, 64, 65, 118, 121, 123, 125, 128, 131, 133, 135, 138, 141, 146, 149, 150, 152, 170, 171, 174, 175, 177, 178, 184, 195, 199], "subdivis": [11, 57, 58, 59, 60, 61], "icosahedron": [11, 58, 59, 60, 61], "tabl": [11, 180, 189, 198], "approxim": [11, 57, 59, 60, 64, 109, 112, 126, 153, 180, 195, 196], "width": [11, 57, 58, 59, 64, 65, 66, 71, 195], "km": [11, 57, 58, 59, 60, 64, 65, 66, 71, 118, 121, 123, 125, 128, 131, 133, 135, 138, 141, 152, 170, 171, 184, 195, 196, 199], "5": [11, 59, 109, 135, 170, 175, 176, 177, 179, 181, 184, 195, 198], "240": [11, 59, 171, 184, 196], "6": [11, 59, 175, 193, 198], "120": [11, 59, 176, 196], "7": [11, 59, 190, 196, 198], "60": [11, 12, 59, 171, 192, 196], "8": [11, 59, 170, 177, 180, 184, 195, 196, 198], "30": [11, 59, 178, 190, 195, 196], "9": [11, 59, 198], "15": [11, 12, 59, 170, 195, 196, 198], "10": [11, 14, 59, 167, 170, 177, 178, 184, 189, 192, 195, 199], "11": [11, 59, 198], "3": [11, 59, 170, 175, 176, 178, 180, 181, 184, 189, 190, 192, 195, 196, 198], "12": [11, 59, 186], "13": [11, 59, 195], "94": [11, 59], "spherical_mesh": [11, 65], "cell_width": [11, 57, 58, 59, 60, 64, 65, 66, 71], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 57, 64, 175], "plot": [11, 71, 94, 109, 138, 143, 170, 171, 196, 199], "plot_cell_width": 11, "cell_width_filenam": [11, 71], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 58, 64, 65, 66, 71, 184], "lon": [11, 58, 64, 65, 66, 71, 184], "sphere": [11, 171, 196], "vtk_lat_lon": 11, "far": [11, 159, 165, 166, 179], "But": [11, 106, 175, 178, 179, 184, 189], "hexagon": 11, "planar_hex": [11, 170, 175], "make_planar_hex_mesh": [11, 170, 175], "x": [11, 15, 58, 65, 66, 71, 94, 116, 175, 177, 195], "y": [11, 12, 15, 94, 170, 175, 177, 190, 195], "nx": [11, 175, 178, 195], "ny": [11, 175, 178, 195], "dc": [11, 175, 178, 195], "distanc": [11, 195], "adjac": [11, 192, 195], "center": [11, 15, 178, 192, 195], "admittedli": 11, "oddli": 11, "period": [11, 169, 170, 175, 195], "nonperiodic_x": [11, 175], "nonperiodic_i": [11, 175], "consider": [11, 159, 165, 166, 169], "grid": [11, 58, 65, 71, 109, 157, 158, 159, 160, 161, 162, 165, 166, 170, 175, 184, 195, 196], "behav": 11, "stagger": 11, "strictli": [11, 179], "physic": 11, "lx": 11, "howev": [11, 175, 176, 177], "ly": 11, "np": 11, "sqrt": 11, "domain": [11, 18, 25, 94, 109, 111, 116, 169, 178, 195, 196, 199], "extra": [11, 180], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 178], "max": [11, 109, 175, 196], "int": [11, 12, 18, 19, 28, 31, 35, 38, 53, 57, 58, 59, 60, 61, 79, 80, 94, 111, 112, 125, 126, 146, 149, 150, 152, 153, 175], "ds_mesh": [11, 15, 94], "creation": [11, 175, 184], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 18, 28, 31, 38, 80, 111, 175, 178, 179, 195, 196], "distant": 11, "futur": [11, 37, 175, 179, 182, 183, 184, 198, 199], "descend": [12, 109, 173, 175, 177, 178, 179], "modelstep": [12, 109, 175, 177], "update_pio": [12, 18, 111], "librari": [12, 102, 106, 180, 185, 186, 187, 188, 189, 190, 198], "make_graph": [12, 18, 111], "mpi": [12, 102, 105, 106, 111, 113, 115, 170, 175, 180, 181, 183, 185, 186, 187, 188, 190, 195, 198], "construct": [12, 110, 157, 159, 160, 161, 165, 166, 169, 173, 177, 178], "non": [12, 14, 169, 175, 198], "At": [12, 31, 40, 174], "set_model_resourc": 12, "thread": [12, 18, 28, 31, 37, 38, 40, 80, 111, 125, 141, 170, 175, 176, 182, 184, 186, 190, 195], "openmp_thread": [12, 18, 28, 31, 38, 80, 111, 125, 175, 177], "definit": 12, "prefix": [12, 33, 180, 184], "end": [12, 170, 175, 177, 179, 180, 182, 186, 196], "yml": 12, "reason": [12, 37, 175, 179, 200], "add_namelist_fil": [12, 18, 109, 175, 177], "add_yaml_fil": [12, 18, 175, 177], "add_model_config_opt": [12, 18, 175, 177], "add_streams_fil": [12, 18, 109, 175, 177], "themselv": [12, 179, 183], "question": [12, 175, 184], "constructor": [12, 170, 173, 178], "simpli": [12, 49, 123, 173, 175, 177, 178, 180, 192, 198, 200], "safe": [12, 14, 175, 180, 195], "never": [12, 182], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": 12, "config_run_dur": [12, 177], "0024_00": 12, "00": [12, 14, 177, 190, 198], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 40, 121, 182, 195], "config_block_decomp_file_prefix": 12, "time_integr": 12, "config_time_integr": 12, "rk4": [12, 179, 200], "filename_templ": 12, "restart": [12, 40, 131, 133, 170, 176, 179, 182, 195], "output_interv": 12, "0030_00": 12, "clobber_mod": 12, "truncat": 12, "reference_tim": 12, "0001": 12, "01": 12, "01_00": 12, "tracer": [12, 170, 171, 196], "xtime": 12, "normalveloc": [12, 14, 15, 122, 124, 132, 137, 142, 169, 170, 175], "layerthick": [12, 14, 109, 120, 122, 124, 132, 137, 142, 159, 163, 164, 165, 166, 170, 175, 177], "refzmid": [12, 159, 165, 166, 175], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 14], "clariti": [12, 175], "guarante": [12, 167, 180], "uniqu": [12, 177], "global_converg": [12, 167, 172, 193, 194, 197], "cosine_bel": 12, "substitut": 12, "config_write_output_on_startup": 12, "0000_00": 12, "config_use_mom_del2": 12, "config_implicit_bottom_drag_coeff": 12, "0e": 12, "config_use_cvmix_background": 12, "config_cvmix_background_diffus": 12, "config_cvmix_background_viscos": 12, "worri": 12, "sometim": [12, 159, 165, 166, 175, 177, 182], "easier": [12, 175, 179, 180, 184, 198, 200], "togeth": [12, 182, 200], "seem": [12, 186, 190], "overkil": 12, "reli": [12, 175], "differ": [12, 14, 49, 61, 66, 93, 106, 109, 125, 135, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 190, 195, 196], "along": [12, 170, 175, 177, 183], "could": [12, 175, 176, 177, 179, 180], "nu": [12, 125, 138, 143, 170, 175, 177], "viscos": [12, 125, 135, 138, 143, 170, 175, 177, 179, 195], "hmix": 12, "config_mom_del2": [12, 170, 175], "bool": [12, 18, 19, 23, 31, 33, 40, 41, 47, 50, 52, 53, 83, 84, 85, 86, 91, 93, 97, 111, 112, 125, 126, 127, 134, 146, 149, 153, 154], "cannot": [12, 14], "known": [12, 31, 32, 171, 175], "beforehand": 12, "particularli": [12, 181], "openmp": [12, 18, 28, 31, 38, 80, 102, 104, 105, 111, 125, 175, 185, 186, 187, 188, 190], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 179, 182, 195, 198], "complic": [12, 178, 179, 180], "xml": [12, 87, 89, 90, 101, 182], "slightli": [12, 14], "sophist": 12, "immutable_stream": 12, "var_struct": 12, "var": [12, 88], "var_arrai": 12, "tag": [12, 183], "taken": [12, 18, 111, 171, 175, 190, 198], "past": 12, "experi": [12, 106, 179, 192], "shown": [12, 174, 177], "featur": [12, 179, 180, 182, 184, 195], "difficult": [12, 106, 189], "synchron": [12, 183], "equival": [12, 180, 185], "try": [12, 52, 179, 180, 181, 184, 186, 190, 198], "template_replac": [12, 21, 22], "treat": [12, 176, 179], "jinja2": [12, 21, 22, 87], "render": [12, 21, 22, 87], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 184], "qu240dynamicadjust": 12, "seri": [12, 109, 138, 143, 171, 194], "dynam": [12, 111, 145, 167, 184], "adjust": [12, 109, 145, 167, 184], "durat": [12, 170, 176], "interv": 12, "spin": 12, "reus": [12, 175, 179, 184, 198], "qualit": [12, 14], "affect": [12, 14, 175, 180], "update_streams_at_runtim": 12, "fairli": [12, 177, 179, 180], "hour": [12, 176, 186, 190, 198], "turn": [12, 31, 48, 175, 181], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 192], "minut": [12, 170, 176, 195, 200], "dai": [12, 135, 170, 171, 177, 195, 196], "03d": 12, "_": [12, 175, 177, 180], "02d": 12, "forgotten": 12, "broken": [12, 175, 179], "immedi": [12, 56, 180], "miss": [12, 14, 175, 184], "detect": [12, 15, 184, 185, 187, 188, 189, 198], "gpmeti": [12, 184], "divid": [12, 192], "partition_graph": [12, 18, 111], "circumst": [12, 14, 31, 32, 175], "wast": 12, "manual": [12, 14, 40, 41, 175, 177, 199], "update_namelist_pio": 12, "node": [12, 18, 30, 31, 38, 78, 79, 80, 106, 111, 176, 179, 180, 184, 185, 186, 187, 188, 189, 190, 198], "v1": [12, 192], "better": [12, 106, 198], "v2": [12, 184, 192], "littl": [12, 179, 180, 183], "feel": [12, 175], "runtime_setup": [12, 28, 38, 177], "onc": [12, 170, 180, 184, 196, 198], "yourself": [12, 189], "fact": [12, 31], "culler": 12, "cull": [12, 170, 175], "model_step": [12, 175], "make_graph_fil": [12, 175], "field": [12, 14, 15, 71, 73, 94, 159, 165, 166, 169, 170, 195, 196], "weight": [12, 73, 159, 165, 166, 192], "weight_field": [12, 73], "critic": 14, "compare_vari": [14, 177], "filename1": [14, 93, 177], "filename2": [14, 93], "simpl": [14, 179, 198], "temperatur": [14, 120, 122, 124, 132, 137, 142, 169, 170, 175, 177, 195, 196], "salin": [14, 120, 122, 124, 132, 137, 142, 169, 170, 175, 177, 195, 196], "prognost": [14, 195], "4proc": [14, 122, 195], "8proc": [14, 122, 195], "alter": [14, 160, 161, 175, 177, 183, 192, 195, 196], "skip_if_step_not_run": [14, 93, 177], "forc": [14, 199], "possibli": [14, 175, 180], "failur": 14, "valueerror": [14, 78, 177, 178, 179], "quiet": [14, 84, 93, 97], "report": 14, "threshold": [14, 196], "l1": [14, 93], "00000000000000e": 14, "l2": [14, 93], "l_infin": 14, "linf": [14, 93], "home": [14, 180, 184, 186, 189, 190], "xylar": [14, 184, 189], "test_nightly_latest": 14, "10km": [14, 170, 177, 178, 195, 198, 199, 200], "threads_test": [14, 198, 200], "1thread": [14, 142, 170, 195], "2thread": [14, 142, 195], "test_20210616": 14, "further_valid": 14, "add_output_fil": [14, 32, 175, 177], "disabl": [14, 169, 199], "check_output": [14, 93], "zero": [14, 160, 161, 162, 163, 164, 169, 170], "l1_norm": [14, 93], "l2_norm": [14, 93], "linf_norm": [14, 93], "nonzero": [14, 93], "easiest": [14, 180], "solut": [14, 105, 171, 176, 181], "clobber": 14, "error": [14, 31, 40, 109, 150, 171, 175, 180, 183], "judgment": 14, "enough": [14, 170, 175, 179, 195, 196], "problem": [14, 175, 180, 181], "compare_tim": 14, "integr": [14, 135, 170, 177, 179, 195, 196], "rundir1": [14, 92], "92264": 14, "82317": 14, "percent": 14, "781019682649793": 14, "speedup": 14, "1208377370409515": 14, "aspect": 15, "often": [15, 31, 175, 176, 177, 178, 179, 182, 184, 199, 200], "analysi": [15, 109, 170, 177, 179, 182, 183, 184, 196, 199], "routin": 15, "viz": 15, "plot_horiz_field": 15, "patch": [15, 94], "style": [15, 109, 183], "vertic": [15, 169, 170, 175, 184, 191, 193, 195], "edg": [15, 94, 169], "polygon": 15, "character": 15, "accordingli": [15, 81], "d": [15, 94, 159, 165, 166, 169, 175], "final_normalveloc": 15, "t_index": [15, 94], "vmin": [15, 94], "max_veloc": 15, "vmax": [15, 94], "cmap": [15, 94], "cmo": 15, "balanc": 15, "show_patch_edg": [15, 94], "hous": 16, "seaic": [16, 33, 175, 198], "dict": [16, 19, 21, 22, 24, 31, 40, 44, 75, 76, 82, 86, 87, 95, 96, 97, 114, 177], "kei": [16, 40, 44, 86, 177], "cach": [16, 18, 31, 33, 85, 86, 111, 183, 184, 189, 194, 198, 200], "__init__": [16, 18, 31, 40, 44, 49, 56, 57, 64, 69, 95, 110, 111, 117, 118, 121, 123, 125, 128, 131, 133, 135, 138, 141, 143, 145, 146, 149, 152, 155, 173, 175, 177, 178, 179, 182], "testgroup": [17, 31, 40, 178, 179], "max_memori": [18, 28, 31, 38, 111], "mesh_filenam": [18, 73, 111], "graph_filenam": [18, 73, 111], "graph": [18, 25, 27, 37, 73, 111, 170, 175, 184], "make_yaml": 18, "pio": [18, 27, 30, 111, 170], "stride": [18, 30, 111], "consist": [18, 30, 111, 167, 180, 184, 195], "partit": [18, 27, 37, 73, 111, 170, 175, 184, 185, 186, 187, 188, 190, 198], "model_config_data": 18, "streams_data": 18, "ideal": [18, 28, 31, 38, 80, 109, 111, 125, 175, 178, 179, 183, 184, 199], "accommod": [18, 28, 31, 38, 80, 111], "fewer": [18, 28, 31, 38, 80, 111, 125, 175, 195, 198], "amount": [18, 28, 31, 38, 111, 175, 191], "memori": [18, 28, 31, 38, 111, 175, 184], "mb": [18, 28, 31, 38, 111, 184], "placehold": [18, 28, 31, 38, 111, 175, 198], "at_setup": [23, 109, 112, 126, 127, 134, 153, 154], "overridden": [24, 114, 175, 177], "situat": [24, 114, 198], "diverg": [24, 114], "counterpart": [24, 109, 114], "nest": [24, 95, 97, 114], "graph_fil": 25, "parent": [26, 173, 175, 178], "done": [28, 38, 175, 198], "run_as_subprocess": [31, 175], "condit": [31, 120, 123, 128, 145, 155, 170, 171, 175, 176, 177, 178, 179, 182, 183, 184, 194, 195, 199], "smallest": [31, 175, 182, 192, 199], "unit": [31, 175, 182, 195, 199], "term": [31, 182], "necessarili": [31, 33, 182], "input_data": 31, "until": [31, 32, 175, 177, 198], "finish": [31, 32, 70], "suffici": 31, "establish": [31, 32], "is_depend": 31, "combin": [31, 33, 40, 49, 82, 95, 175, 176, 177, 181, 184, 198], "machine_info": 31, "machineinfo": 31, "config_filenam": [31, 40, 175, 177], "base_work_dir": [31, 40, 175, 177], "log_filenam": [31, 40, 175], "redirect": [31, 175], "extern": [31, 167, 173, 175, 193], "access": [32, 177, 179, 180, 185, 189, 190], "filenam": [33, 34, 77, 93, 96, 98, 175, 180], "database_compon": [33, 175], "work_dir_target": [33, 175], "come": [33, 175, 180, 185, 186, 187, 188, 189, 190, 193], "root": [33, 150, 167, 171, 173, 175, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 192, 198], "suffix": [33, 86, 175], "_database_root": 33, "append": 33, "perhap": [34, 178], "available_cor": [35, 113], "constrain": [35, 112, 126, 153, 170], "total": [35, 79, 175, 176, 179, 184, 186, 198], "everi": [36, 170, 175, 177, 179, 181, 182, 195], "child": [36, 173, 175, 177, 179], "serial": [37, 175, 177, 183, 198], "subtask": 38, "stdout_logg": 40, "goe": [40, 175], "regardless": 40, "new_step_log_fil": 40, "whole": [40, 116, 177, 179, 198], "statu": 40, "run_by_default": [41, 175, 177], "assum": [42, 87, 96, 177, 190, 195], "prior": [42, 175, 177], "greenland": [44, 178, 182, 183, 199], "eismint2": 44, "step_path": 47, "variant": [47, 170, 176, 178, 179, 180, 189, 192, 195, 196], "uncach": 47, "datestamp": 47, "yymmdd": [47, 184], "dry": [47, 176], "meta": 49, "empti": [49, 175, 179, 180, 182], "link_nam": 52, "overwrit": 52, "stackoverflow": 52, "55742015": 52, "7728169": 52, "symbol": [52, 175], "fileexistserror": 52, "unless": [52, 84, 180], "isadirectoryerror": 52, "decomposition_test": [56, 178, 198], "decompositiontest": [56, 178], "noqa": [56, 149, 152, 155], "e501": [56, 149, 152, 155], "turquois": [56, 186], "usr": [56, 186, 198], "climat": [56, 185, 186, 187, 189, 198], "mhoffman": 56, "latitud": [58, 65, 196], "longitud": [58, 65, 66, 71, 196], "ndarrai": [58, 65, 66, 71, 116, 157, 158], "degre": [58, 65, 66, 71, 184, 195], "length": [58, 65, 66, 71], "180": [58, 65, 66, 71, 196], "90": [58, 65, 66, 71, 175, 196], "static": [59, 60], "rule": 59, "thumb": 59, "achiev": [60, 176], "close": [60, 183, 196], "subclass": [61, 64, 65, 66, 70, 109], "uniform": [64, 152, 170, 171, 178, 184, 195], "jigsawpi": [69, 175], "jigsaw_jig_t": 69, "meti": 73, "defaults_filenam": 74, "state": [78, 116, 169, 170, 171, 175, 176], "queu": 78, "slurm": [78, 81, 183, 184, 185, 186, 187, 188, 190, 198], "interact": [78, 186, 189, 190, 198], "batch": [78, 186], "job": [78, 106, 180, 183, 185, 186, 187, 188, 190], "slurm_job_id": 78, "substep": 80, "cpus_per_nod": 81, "step_is_subprocess": 83, "is_test_cas": 84, "steps_not_to_run": 84, "progress": 84, "cached_step": 85, "copy_execut": [85, 86, 91, 198], "serv": [85, 86, 91, 178], "_all": [85, 86], "streams_filenam": 87, "lxml": [87, 89, 101], "etre": [87, 89, 101], "new_child": 88, "children": 88, "sub": 88, "new_tre": 89, "out_filenam": [90, 158], "rundir2": 92, "norm": 93, "infin": 93, "toler": 93, "exclud": [93, 198], "field_nam": 94, "out_file_nam": 94, "titl": 94, "z_index": 94, "cmap_set_und": 94, "cmap_scal": 94, "linear": [94, 195], "horizont": [94, 109, 169, 170, 195], "planar": [94, 109, 169], "coordin": [94, 159, 165, 166, 191, 193, 195], "depth": [94, 109, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 184, 192, 195], "slice": 94, "dataset": [94, 159, 165, 166, 175], "fieldnam": 94, "present": [94, 180], "colorbar": 94, "visibl": 94, "nvertlevel": [94, 159, 165, 166, 175, 192], "ax": 94, "colormap": 94, "color": 94, "logarithm": 94, "classmethod": 96, "jinja": 96, "namelist_templ": 100, "polarisyaml": [100, 101], "processed_registry_filenam": 101, "registri": [101, 169], "steam": 101, "load_dev_polaris_0": [102, 103, 104, 105, 106, 107], "alpha": [102, 103, 104, 105, 106, 107], "1_anvil_intel_impi": [102, 106], "sh": [102, 103, 104, 105, 106, 107, 180, 181, 185, 186, 187, 188, 190, 198], "openmpi": [102, 106, 180, 183, 185, 187, 188, 198], "mvapich": [102, 106, 185], "impi": [102, 106, 185, 188], "ifort": [102, 104, 106, 185, 187], "ve": [102, 103, 104, 105, 107, 175, 180], "1_anvil_gnu_openmpi": 102, "gfortran": [102, 104, 105, 106, 180, 185, 187], "load": [103, 106, 107, 180, 183, 184, 185, 186, 187, 188, 189, 190], "1_chicoma": 103, "cpu_gnu_mpich": [103, 107], "crai": [103, 106, 107, 186, 190], "1_chrysalis_intel_openmpi": 104, "1_chrysalis_gnu_openmpi": 104, "yet": [105, 109, 175, 179], "again": [105, 167, 175, 180, 181, 198], "soon": [105, 198], "1_compy_intel_impi": 105, "1_compy_gnu_openmpi": 105, "attempt": [106, 183, 189], "particular": [106, 178, 180, 183, 186, 189, 198], "activ": [106, 189, 190, 198], "load_polaris_env": [106, 180, 198], "were": [106, 125, 175, 179, 182, 184, 188, 192], "right": [106, 109, 177, 180, 184, 192, 196, 198], "therefor": [106, 175, 182, 196], "gnu": [106, 180, 188, 189, 198], "lib": 106, "intel": [106, 189], "chicoma": [106, 189, 198], "mpich": [106, 180, 183, 186, 190, 198], "compi": [106, 188, 198], "pm": [106, 190, 198], "compymcnodefac": [106, 189], "perlmutt": [106, 186, 189, 198], "pretti": [106, 175, 179, 184], "forg": [106, 183, 198], "linux": [106, 180, 189], "configure_polaris_env": [106, 180, 181], "conda_path": [106, 180], "osx": [106, 189], "clang": [106, 180], "had": 106, "1_": 106, "1_pm": 107, "ever": [109, 179], "expand": [109, 192], "oceanmodelstep": 109, "decid": 109, "veri": [109, 173, 175, 179, 180], "earli": [109, 193, 198], "stage": [109, 169, 175, 177, 180, 193, 198], "map_yaml_to_namelist": 109, "count": [109, 176], "heurist": 109, "exact": [109, 171, 179], "algorithm": [109, 125, 170, 175], "200": [109, 177, 195], "round": [109, 196], "cell_count": [109, 112, 126, 153], "goal_cells_per_cor": [109, 195, 196], "pinch": 109, "2000": [109, 178, 195], "max_cells_per_cor": [109, 195, 196], "seciton": 109, "control": [109, 175, 184, 195, 196, 198], "scale": [109, 198], "tri": [109, 179], "apport": 109, "precis": [109, 175], "caviti": [109, 179, 184, 192], "frazil": 109, "flux": [109, 169], "grid_1d": 109, "1d": [109, 157, 158, 159, 160, 161, 162, 163, 165, 166], "generate_1d_grid": 109, "vertical_grid": [109, 157, 159, 165, 166, 178, 184, 192, 195], "z": [109, 160, 161, 162, 163, 164, 165, 166, 195, 200], "star": [109, 164, 166, 195, 200], "init_vertical_coord": 109, "minlevelcel": [109, 159, 161, 162, 163, 164, 165, 166], "maxlevelcel": [109, 159, 160, 161, 162, 163, 164, 165, 166, 175], "cellmask": [109, 159, 162, 165, 166], "zmid": [109, 159, 165, 166], "restingthick": [109, 159, 164, 165, 166, 175], "bottomdepth": [109, 159, 160, 162, 163, 164, 165, 166, 175], "entir": [109, 195, 200], "petersen": [109, 180, 195], "et": [109, 192, 195, 196], "al": [109, 192, 195, 196], "2015": [109, 195], "int_": 109, "rho": 109, "left": [109, 192, 196], "dv": 109, "sort": [109, 174, 179, 180], "increas": [109, 179], "compute_rp": 109, "csv": 109, "dynamic_ntask": 111, "estim": [113, 115], "initial_state_file_nam": 116, "output_fil": [116, 175], "rest": [116, 164, 192], "potenti": [116, 135, 175, 177, 195], "energi": [116, 135, 177, 183, 195], "netcdf": [116, 184, 185, 186, 187, 188, 189, 190], "len": [116, 175], "superclass": [118, 170, 175], "run_time_step": 125, "resources_fix": 125, "shouldn": 125, "dt": [125, 195, 196], "btr_dt": [125, 195], "barotrop": [125, 195], "longer": [131, 170, 176, 195, 196, 200], "shorter": [131, 176], "rpe": [135, 138, 143, 177, 195], "20": [135, 170, 176, 177, 195], "less": [146, 149, 175, 192], "globalocean": [146, 173], "cosin": [149, 152, 155, 171, 196], "bell": [149, 152, 155, 171, 196], "cosinebel": [149, 152, 155, 171], "mesh_nam": [150, 152, 155], "rmsevalu": 150, "squar": [150, 171], "ncell": [150, 175], "posit": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 192], "layer": [157, 158, 159, 163, 164, 165, 166, 169, 170, 184, 192, 195], "meter": [157, 158], "bottom": [159, 160, 161, 162, 163, 164, 165, 166, 169, 184, 192, 195], "thick": [159, 163, 164, 165, 166, 170, 184, 192, 195], "stretch": [159, 165, 166, 192], "elev": [159, 165, 166, 192], "midpoint": [159, 165, 166], "reftopdepth": [159, 162, 163, 165, 166], "down": [159, 160, 161, 162, 163, 164, 165, 166, 192], "ref": [159, 165, 166], "middl": [159, 165, 166], "refbottomdepth": [159, 160, 161, 162, 163, 165, 166, 175], "refinterfac": [159, 165, 166], "element": [159, 165, 166], "vertcoordmovementweight": [159, 165, 166, 175], "movement": [159, 165, 166], "partial": [160, 161, 192, 195], "seafloor": [160, 162, 163, 164, 192], "unstretch": 164, "shelv": [167, 184, 192], "ssh_adjust": [167, 175, 177, 184], "iter": [167, 184], "compass_branch": 167, "default_input": [167, 173, 184], "ocean_model": [167, 180, 184], "submodul": [167, 173, 180, 198], "latest": [167, 180, 183, 193, 198], "master": 167, "frequent": 167, "compat": [167, 180, 181, 183], "verison": 167, "maintain": [167, 198], "recurs": [167, 179, 180, 198], "whichev": [167, 192], "design": [168, 175, 177, 179, 183, 189], "minim": 169, "fcell": [169, 175], "fedg": [169, 175], "fvertex": [169, 175], "free": [169, 184], "slip": 169, "solid": [169, 195, 196], "tangenti": 169, "enforc": [169, 180], "nonperiod": 169, "drag": 169, "mass": 169, "momentum": [169, 170], "scalar": 169, "rigid": 169, "veloc": [169, 170, 177, 180, 196, 198], "normal": [169, 175, 176, 180, 189], "solv": [169, 181, 192], "mid": 169, "vari": [169, 171, 175, 181, 189, 192, 196], "consult": 169, "tidal_forc": 169, "eddi": [170, 195], "addition": [170, 185, 186, 187, 188, 190], "diffus": 170, "50": [170, 178, 195], "prescrib": 170, "runtime_steup": 170, "decomptest": 170, "restarttest": [170, 178], "frequenc": 170, "threadstest": 170, "thread_test": 170, "rpetest": [170, 177], "intens": 170, "globalconverg": [171, 179], "converg": [171, 174, 176, 183, 196], "studi": [171, 196], "globe": [171, 196], "advect": [171, 196], "qu": [171, 184, 194, 196], "ico": [171, 194, 196], "fix": [171, 178], "spheric": [171, 196], "24": [171, 196], "shape": [171, 196], "blob": 171, "around": [171, 184, 195, 196], "rate": [171, 196], "distribut": 171, "dt_per_km": [171, 195, 196], "rmse": 171, "encompass": 173, "perspect": 173, "four": 173, "major": [173, 175], "add_test_group": [173, 179], "variou": [173, 175, 180], "univers": 173, "mix": [173, 178], "super": [173, 175, 177, 178, 179], "ice_shelf_2d": [173, 200], "iceshelf2d": 173, "ziso": [173, 192, 199, 200], "landice_model": [173, 180], "green": 174, "blue": [174, 185, 198], "orang": 174, "red": 174, "repositori": [174, 183, 198], "laid": 174, "fig": 174, "among": [174, 178, 180], "organiz": 174, "concept": [174, 179, 182, 199], "simul": [175, 182, 194, 195, 198], "multiprocess": [175, 179, 184], "outsid": 175, "emploi": 175, "prevent": 175, "unwant": 175, "outer": 175, "inner": 175, "mesh_typ": [175, 177, 178], "variable_resolut": [175, 178, 198], "dome_varres_grid": 175, "calcul": [175, 177], "signific": [175, 176, 177], "neglig": 175, "meshstep": 175, "getint": 175, "mesh_cpus_per_task": 175, "mesh_min_cpus_per_task": 175, "previous": 175, "processor": [175, 195, 196], "readi": [175, 190], "write_netcdf": 175, "convers": 175, "generate_grid": 175, "dsmesh": 175, "graphinfofilenam": 175, "use_dist": [175, 195], "gradient_width_dist": [175, 195], "gradient_width_frac": [175, 195], "bottom_temperatur": [175, 195], "surface_temperatur": [175, 195], "temperature_differ": [175, 195], "coriolis_paramet": [175, 195], "bottom_depth": [175, 184, 192, 195], "vert_level": [175, 184, 192, 195], "ones_lik": 175, "xcell": 175, "ycell": 175, "xmin": 175, "min": [175, 195], "xmax": 175, "ymin": 175, "ymax": 175, "ymid": 175, "xperturbmin": 175, "xperturbmax": 175, "perturbationwidth": 175, "yoffset": 175, "sin": [175, 195], "pi": [175, 192, 196], "temp_vert": 175, "frac": [175, 192], "logical_and": 175, "transpos": 175, "3rd": 175, "crest": 175, "wave": [175, 195], "expand_dim": 175, "dim": 175, "axi": 175, "broadcast": 175, "zeros_lik": 175, "xedg": 175, "nedg": 175, "dtype": 175, "xvertex": 175, "commandlin": 175, "best": [175, 180], "explor": [175, 178, 192], "harm": 175, "likewis": 175, "subsequ": [175, 182, 200], "arisen": 175, "now": [175, 180, 184, 189], "omit": [175, 198], "problemat": 175, "usual": [175, 177, 180, 198], "open_dataset": 175, "isn": [175, 179, 195], "forwardstep": 175, "mesh_path": 175, "mesh_step": 175, "with_ice_shelf_cav": [175, 177], "initial_state_target": 175, "adjusted_init": [175, 177], "forcing_data": 175, "entha_analy_result": 175, "mat": 175, "enthalpy_benchmark": 175, "ourselv": 175, "reduc": 175, "firewal": 175, "bedmachineantarctica_v2_and_gebco_2022_0": 175, "05_degree_20220729": 175, "slate": 175, "icepresent_qu60km_polar": 175, "practic": [175, 179, 180], "nearli": [175, 182, 183], "u": [175, 189, 190], "straightforward": 175, "commonli": [175, 182], "expens": [175, 176], "workflow": [175, 180], "mechan": 175, "notat": 175, "That": [175, 179, 182, 198], "word": 175, "ff": 175, "quwisc240": [175, 179, 198, 200], "90c": 175, "91c": 175, "92": [175, 192], "91": 175, "sowisc12to60": [175, 198, 200], "performance_test": [175, 200], "approach": [175, 178, 179, 180, 181, 192], "effici": 175, "transfer": 175, "feasibl": 175, "nor": 175, "add_depend": 175, "unpickl": 175, "overhead": 175, "organ": [176, 178, 183], "philosophi": [176, 179], "context": 176, "namesak": 176, "256": [176, 186, 190], "128": [176, 186, 187, 190], "quicker": 176, "32": [176, 198], "exce": 176, "limit": [176, 180], "offer": 176, "benefit": [176, 183], "catch": 176, "bug": 176, "covereag": 176, "timestep": 176, "exhaust": 176, "recent": [176, 193], "merg": 176, "reach": 176, "steadi": 176, "encount": [176, 181], "wet": 176, "fundament": 177, "incorpor": 177, "deprec": 177, "constrain_resourc": 177, "smoke_test": [177, 178], "smoketest": [177, 178], "velo_solv": 177, "sia": [177, 180], "fo": 177, "add_step": 177, "runmodel": 177, "run_step": 177, "0200": 177, "00_00": 177, "fine": 177, "recip": 177, "rpe_test": [177, 179, 198], "res_param": [177, 178], "144": 177, "36": [177, 185, 189, 198], "4km": [177, 178, 195, 198], "unsupport": [177, 178], "param": [177, 178], "enumer": 177, "rpe_test_": 177, "_nu_": 177, "deliber": 177, "chosen": 177, "demonstr": 177, "clumsi": [177, 179], "rpe_test_1_nu_1": [177, 195], "rpe_test_2_nu_5": [177, 195], "filesfore3sm": 177, "configure_global_ocean": 177, "with_bgc": 177, "po4": 177, "no3": 177, "sio3": 177, "nh4": 177, "fe": [177, 186], "o2": 177, "dic": 177, "dic_alt_co2": 177, "alk": 177, "dofe": 177, "dop": 177, "dopr": 177, "donr": 177, "zooc": 177, "spchl": 177, "spc": 177, "spfe": 177, "spcaco3": 177, "diatchl": 177, "diatc": 177, "diatf": 177, "diatsi": 177, "diazchl": 177, "diazc": 177, "diazf": 177, "phaeochl": 177, "phaeoc": 177, "phaeof": 177, "dm": 177, "dmsp": 177, "prot": 177, "poli": 177, "lip": 177, "conceptu": [178, 179], "realist": [178, 183, 199], "2000m": [178, 198], "34": [178, 198], "halfar": 178, "cism": 178, "dome_typ": 178, "closest": 178, "put_origin_on_a_cel": 178, "hydrologi": 178, "hydro": [178, 199], "dome_viz": 178, "time_slic": 178, "save_imag": 178, "hide": 178, "hide_fig": 178, "add_test_cas": 178, "restart_test": [178, 198, 200], "talk": 178, "16": [178, 184, 198], "10e3": 178, "40": [178, 188], "126": 178, "4e3": 178, "160": 178, "500": [178, 184, 192], "held": 178, "initial_condit": 179, "dig": [179, 184], "infrastructur": 179, "background": [179, 196], "behind": 179, "adher": 179, "pep8": [179, 180], "bot": [179, 192], "violat": 179, "pleas": [179, 180, 198], "consid": 179, "editor": 179, "pycharm": [179, 180], "spyder": 179, "linter": 179, "flake8": [179, 180], "discourag": 179, "reformat": 179, "autopep8": 179, "undesir": 179, "util": 179, "lint": 179, "standard": [179, 180, 186, 198], "wildcard": 179, "vim": 179, "plugin": 179, "id": [179, 180], "commit": [179, 180], "why": 179, "sound": 179, "subpackag": 179, "understand": [179, 184], "releas": [179, 183, 189, 193, 198], "our": [179, 198], "downstream": 179, "tutori": [179, 180], "clu": 179, "intro": 179, "docstr": [179, 183], "strip": 179, "mpas_ocean": 179, "hidden": 179, "shortcut": [179, 198], "referenc": 179, "ll": [179, 190], "mention": 179, "dot": 179, "charact": 179, "unix": [179, 183], "distinct": 179, "mayb": 179, "machine_config": 179, "endswith": 179, "splitext": 179, "exactli": [179, 180, 192], "move": 179, "renam": 179, "visa": 179, "versa": 179, "comfort": 179, "inherit": 179, "orient": 179, "program": [179, 184], "led": 179, "felt": 179, "contribut": 179, "hesit": 179, "predecessor": [179, 182, 183], "harder": 179, "outcom": 179, "augment": 179, "explain": 179, "hope": 179, "dens": 179, "learn": 179, "curv": 179, "worth": 179, "skill": 179, "broadli": 179, "applic": [179, 180], "endeavor": 179, "readabl": 179, "manipul": 179, "get_available_cores_and_nod": 179, "theoret": 179, "dozen": 179, "split": 179, "theori": 179, "biogeochemistri": 179, "bash": [180, 181, 198], "ksh": 180, "mac": [180, 183], "csh": 180, "tcsh": 180, "temporarili": 180, "switch": [180, 184], "bin": [180, 190, 198], "obtain": [180, 186], "recogn": [180, 184, 198], "mambaforg": [180, 189, 198], "permiss": 180, "miniconda3": 180, "unifi": [180, 190], "anyon": 180, "caus": [180, 186, 190, 192], "person": [180, 181], "base_path_to_install_or_update_conda": 180, "with_albani": 180, "with_netlib_lapack": 180, "with_petsc": 180, "flavor": 180, "login": [180, 186, 190], "troubl": 180, "recognit": 180, "trilino": 180, "downsid": 180, "unneed": 180, "laptop": [180, 184], "workstat": 180, "deploy": 180, "shallow": 180, "hpc": [180, 186, 189], "touch": 180, "update_spack": 180, "reinstal": 180, "scorpio": [180, 189, 198], "esmf": [180, 198], "caution": 180, "deploi": [180, 185, 186, 187, 188, 189, 190], "load_": 180, "encod": 180, "load_dev_polaris_": 180, "env_nam": 180, "dev_polaris_": [180, 181], "safest": 180, "rerun": 180, "load_dev_polari": 180, "echo": 180, "rememb": 180, "recreat": [180, 181], "incorrect": 180, "unus": 180, "session": 180, "With": 180, "pip": 180, "substanti": 180, "risk": 180, "rare": 180, "correct": 180, "wih": 180, "env_onli": 180, "mpas_make_target": [180, 198], "scientif": [180, 198], "_albani": 180, "column": [180, 198], "instruct": 180, "proce": 180, "workdir": [180, 198], "es3m": 180, "compli": 180, "convent": 180, "memor": 180, "guidelin": 180, "stai": 180, "complianc": 180, "checker": 180, "pre": 180, "isort": 180, "mypi": 180, "77": 180, "e302": 180, "blank": 180, "resolv": 180, "simpler": 180, "mkdir": 180, "mark": 180, "fetch": 180, "new_branch_nam": 180, "put": 180, "elsewher": 180, "disk": [180, 184, 186, 190], "respons": 180, "simplest": 180, "your_new_branch": 180, "checkout": 180, "suggest": 181, "geo": 181, "cartopi": 181, "14": 181, "np110py27_4": 181, "calledprocesserror": 181, "deploy_tmp": 181, "spec": [181, 190], "vpn": 181, "occur": 181, "site": 181, "shell": [181, 183], "honor": 181, "wide": 181, "coupl": [181, 183], "profil": 181, "spawn": 181, "usernam": [181, 186, 190], "proxy_en": 181, "export": 181, "all_proxi": 181, "proxyout": 181, "8080": 181, "no_proxi": 181, "localhost": [181, 184, 189, 190, 198], "127": 181, "proxy_dis": 181, "unset": 181, "anytim": 181, "fatal": 181, "mpi_init": 181, "stack": 181, "mpir_init_thread": 181, "159": 181, "mpid_init": 181, "164": 181, "mpidi_ch3_init": 181, "95": 181, "mpid_nem_init": 181, "314": 181, "mpid_nem_tcp_init": 181, "173": 181, "mpid_nem_tcp_get_business_card": 181, "395": 181, "getsockinterfaceaddr": 181, "369": 181, "pn2034311": 181, "errno": 181, "host": [181, 184, 189, 198], "mpirun": [181, 184, 185, 186, 187, 188, 189, 190, 198], "srun": [181, 184, 185, 186, 187, 188, 189, 190, 198], "parallel_execut": [181, 184, 185, 186, 187, 188, 189, 190, 198], "unexpect": 182, "plu": 182, "autom": 183, "exascal": 183, "earth": 183, "kept": 183, "sens": 183, "observ": 183, "region": [183, 184], "boundari": [183, 195, 199], "expert": 183, "team": 183, "launch": 183, "uncoupl": 183, "evolv": [183, 192], "quick": [183, 193, 200], "queue": 183, "beginn": 183, "worktre": 183, "advanc": 183, "mpas_to_yaml": 183, "troubleshoot": 183, "proxi": 183, "lanl": [183, 184, 186], "gethostbynam": 183, "extens": 184, "single_nod": [184, 185, 186, 187, 188, 189, 190, 198], "multinod": [184, 198], "cores_per_nod": [184, 185, 186, 187, 188, 189, 190, 198], "hopefulli": 184, "explanatori": 184, "my_machin": 184, "fit": 184, "extend": 184, "interpol": 184, "gitconfig": 184, "enter": 184, "author": 184, "asai": 184, "davi": 184, "email": 184, "pull_request": 184, "28": 184, "address": 184, "metadata": 184, "customize_config_pars": 184, "server_base_url": 184, "inej": 184, "check_siz": 184, "ssl": 184, "certif": 184, "core_path": 184, "partition_execut": 184, "dask": 184, "netcdf4": 184, "netcdf4_class": 184, "netcdf3_64bit": 184, "netcdf3_class": 184, "engin": 184, "scipi": 184, "mesh_databas": 184, "initial_condition_databas": 184, "ocean_database_root": 184, "landice_database_root": 184, "mesh_cor": 184, "18": [184, 186], "mesh_min_cor": 184, "usag": [184, 186, 190], "mesh_max_memori": 184, "1000": [184, 192, 195], "mesh_max_disk": 184, "init_cor": 184, "init_min_cor": 184, "init_max_memori": 184, "init_max_disk": 184, "init_thread": 184, "forward_cor": 184, "forward_min_cor": 184, "forward_thread": 184, "forward_max_memori": 184, "forward_max_disk": 184, "add_metadata": 184, "ec": 184, "wc": 184, "mesh_descript": 184, "autodetect": 184, "bathy_descript": 184, "gebco": 184, "2022": 184, "bedmachin": 184, "antarctica": 184, "init_descript": 184, "e3sm_vers": 184, "increment": 184, "mesh_revis": 184, "finest": [184, 196], "min_r": 184, "coarsest": 184, "max_r": 184, "max_depth": 184, "creation_d": 184, "peopl": 184, "contact": 184, "temperaturemax": 184, "statist": 184, "temperature_max": 184, "33": [184, 198], "diagnost": [184, 185, 186, 188, 189, 190, 198], "enable_ocean_initial_condit": 184, "enable_ocean_graph_partit": 184, "enable_seaice_initial_condit": 184, "scrip": 184, "enable_scrip": 184, "transect": 184, "onlin": 184, "member": 184, "offlin": 184, "enable_diagnostics_fil": 184, "coarser": [184, 196], "finer": 184, "comparisonlatresolut": 184, "comparisonlonresolut": 184, "antarct": 184, "polar": [184, 185, 187, 192], "stereograph": 184, "comparisonantarcticstereowidth": 184, "6000": [184, 192], "comparisonantarcticstereoresolut": 184, "arctic": 184, "comparisonarcticstereowidth": 184, "comparisonarcticstereoresolut": 184, "grid_typ": [184, 192, 195], "tanh_dz": 184, "3000": [184, 196], "min_layer_thick": [184, 192], "max_layer_thick": [184, 192], "retain": 184, "ecosystem": 185, "gain": 185, "confluenc": 185, "public_html": [185, 187, 189], "polaris_env": [185, 186, 187, 188, 189, 190], "soft": [185, 187, 189, 198], "mpi_intel": [185, 187, 188, 189], "mpi_gnu": [185, 186, 187, 188, 189, 190], "hdf5": [185, 186, 187, 188, 189, 190], "fortran": [185, 186, 187, 188, 189, 190], "pnetcdf": [185, 186, 187, 188, 189, 190], "use_e3sm_hdf5_netcdf": [185, 186, 187, 188, 189, 190], "cobalt": [185, 186, 187, 188, 189, 190], "account": [185, 186, 188, 189, 190, 198], "condo": [185, 198], "acm": [185, 198], "medium": 185, "qualiti": [185, 186, 188, 189, 190, 198], "servic": [185, 186, 188, 189, 190, 198], "qo": [185, 186, 188, 189, 190, 198], "acme_high": 185, "load_latest_polaris_intel_impi": [185, 188], "load_latest_polaris_gnu_openmpi": [185, 187, 198], "dst": 186, "calendar": 186, "network": 186, "introduct": 186, "platform": 186, "wtrw": 186, "ch": 186, "lustr": 186, "scratch4": 186, "scratch5": 186, "sacctmgr": 186, "assoc": 186, "cluster": 186, "45": 186, "my": 186, "sshare": 186, "grep": [186, 198], "sreport": 186, "accountutilizationbyus": 186, "2019": 186, "02": 186, "prioriti": 186, "yellow": 186, "chkhome": 186, "petabyt": 186, "df": 186, "bp": 186, "archiv": [186, 190], "hpss": [186, 190], "front": 186, "tn": 186, "storag": 186, "project_nam": 186, "salloc": [186, 189, 190], "account_nam": 186, "gpu": [186, 190], "hyperthread": [186, 190], "hang": [186, 190], "threads_per_cor": [186, 190], "modules_befor": [186, 190], "modules_aft": [186, 190], "shared_clim": [186, 198], "load_latest_polaris_gnu_mpich": [186, 190], "high": [187, 189], "load_latest_polaris_intel_openmpi": 187, "compyf": 188, "app": [188, 198], "pmi2": 188, "conda_env": [188, 198], "sai": 189, "submit": 189, "workload": 189, "sbatch": [189, 198], "squeue": 189, "my_usernam": [189, 190], "scancel": 189, "jobid": 189, "cancel": 189, "emtpi": 189, "probabl": 189, "three": 189, "mpi_mpich": [189, 198], "mpi_openmpi": [189, 198], "nompi": [189, 198], "p1": 190, "nersc": 190, "iri": 190, "filesystem": 190, "myquota": 190, "prjquota": 190, "projectid": 190, "m1795": 190, "hsi": 190, "htar": 190, "zstash": 190, "cf": [190, 198], "cdir": [190, 198], "constraint": [190, 198], "premium": 190, "cray_compil": 190, "8844": 190, "monik": 190, "browser": 190, "port": 190, "realli": 190, "nice": 190, "grab": 190, "logon": 190, "kernel": 190, "connect": 190, "myenv": 190, "ipykernel": 190, "kernelspec": 190, "u1": 190, "Be": 190, "interpret": 190, "argv": 190, "env": 190, "ipykernel_launch": 190, "connection_fil": 190, "display_nam": 190, "languag": 190, "100": 192, "2500": 192, "coord_typ": [192, 195], "partial_cell_typ": [192, 195], "min_pc_fract": [192, 195], "deepest": 192, "stewart": 192, "2017": 192, "z_2": 192, "z_1": 192, "mathrm": 192, "tanh": 192, "rightarrow": 192, "infti": 192, "z_k": 192, "z_0": 192, "z_": 192, "k": 192, "finder": 192, "n_z": 192, "h_": 192, "64": 192, "210": [192, 196], "scienc": 192, "hydrograph": 192, "climatologi": 192, "250": 192, "5500": 192, "renorm": 192, "51": 192, "221": 192, "63": 192, "floor": 192, "flat": 192, "collaps": 192, "adcroft": 192, "campin": 192, "2004": 192, "absenc": 192, "squash": 192, "proport": [192, 195, 196], "watercolumn": 192, "press": 192, "depress": 192, "batymetri": 192, "repres": [192, 196], "stair": 192, "still": [193, 198], "month": 193, "year": 193, "websit": 193, "release_6": 193, "ilicak": 195, "2012": 195, "zonal": 195, "northern": 195, "southern": 195, "throughout": 195, "35": [195, 196, 198], "psu": 195, "cooler": 195, "half": 195, "north": 195, "gradient": 195, "halv": 195, "sinusoid": 195, "perturb": [195, 196], "meridion": 195, "warmer": 195, "distinguish": 195, "aim": [195, 196], "btr_dt_per_km": 195, "logic": 195, "08": 195, "500km": 195, "40e3": 195, "water": 195, "corioli": 195, "2e": 195, "hard": 195, "decompos": 195, "goal": 195, "break": 195, "mk": 195, "celsiu": 195, "spuriou": 195, "dissip": 195, "pop": 195, "mom": 195, "mitgcm": 195, "williamson": 196, "1992": 196, "sec": 196, "3a": 196, "skamarock": 196, "gassmann": 196, "flow": 196, "bodi": 196, "rotat": 196, "transport": 196, "psi": 196, "psi_0": 196, "co": 196, "ge": 196, "radiu": 196, "equatori": 196, "u_0": 196, "300": 196, "central": 196, "rad": 196, "lat_cent": 196, "lon_cent": 196, "14159265": 196, "2123666": 196, "6667": 196, "hill": 196, "psi0": 196, "transit": 196, "equat": 196, "vel_pd": 196, "qu_conv_thresh": 196, "warn": 196, "qu_conv_max": 196, "icos_conv_thresh": 196, "icos_conv_max": 196, "480": 196, "150": 196, "nearest": 196, "multipli": 196, "roughli": 196, "alloc": 196, "load_latest_polari": 198, "minu": 198, "create_polaris_load_script": 198, "load_polaris_1": 198, "0_mpich": 198, "wiki": 198, "circular_shelf": 198, "sia_smoke_test": 198, "sia_decomposition_test": 198, "sia_restart_test": 198, "fo_smoke_test": 198, "fo_decomposition_test": 198, "fo_restart_test": 198, "decomp_test": [198, 200], "37": 198, "38": 198, "17": 198, "210131_test_new_branch": 198, "fall": 198, "my_config": 198, "smaller": 198, "previous_workdir": 198, "paper": 198, "recompil": 198, "live": 198, "safer": 198, "preserv": 198, "test_subdir": 198, "whatev": 198, "job_script": 198, "wall": 198, "clock": 198, "accord": 198, "j": 198, "exclus": 198, "job_nam": 198, "wall_tim": 198, "fo_integr": [198, 200], "full_integr": [198, 200], "sia_integr": [198, 200], "cosine_bell_cached_init": [198, 200], "ec30to60": [198, 200], "ecwisc30to60": [198, 200], "qu240_for_e3sm": [198, 200], "quwisc240_for_e3sm": [198, 200], "wc14": [198, 200], "suitenam": 198, "radial": 199, "analyt": 199, "form": 199, "identifi": 199, "analysis_test": 200, "5km": 200, "20km": 200, "with_frazil": 200, "prohibit": 200}, "objects": {"polaris": [[16, 0, 1, "", "Component"], [18, 0, 1, "", "ModelStep"], [31, 0, 1, "", "Step"], [40, 0, 1, "", "TestCase"], [44, 0, 1, "", "TestGroup"]], "polaris.Component": [[16, 1, 1, "", "__init__"], [17, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[18, 1, 1, "", "__init__"], [19, 1, 1, "", "add_model_config_options"], [20, 1, 1, "", "add_namelist_file"], [21, 1, 1, "", "add_streams_file"], [22, 1, 1, "", "add_yaml_file"], [23, 1, 1, "", "dynamic_model_config"], [24, 1, 1, "", "map_yaml_to_namelist"], [25, 1, 1, "", "partition"], [26, 1, 1, "", "process_inputs_and_outputs"], [27, 1, 1, "", "runtime_setup"], [28, 1, 1, "", "set_model_resources"], [29, 1, 1, "", "setup"], [30, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[31, 1, 1, "", "__init__"], [32, 1, 1, "", "add_dependency"], [33, 1, 1, "", "add_input_file"], [34, 1, 1, "", "add_output_file"], [35, 1, 1, "", "constrain_resources"], [36, 1, 1, "", "run"], [37, 1, 1, "", "runtime_setup"], [38, 1, 1, "", "set_resources"], [39, 1, 1, "", "setup"]], "polaris.TestCase": [[40, 1, 1, "", "__init__"], [41, 1, 1, "", "add_step"], [42, 1, 1, "", "configure"], [43, 1, 1, "", "validate"]], "polaris.TestGroup": [[44, 1, 1, "", "__init__"], [45, 1, 1, "", "add_test_case"]], "polaris.__main__": [[46, 2, 1, "", "main"]], "polaris.cache": [[47, 2, 1, "", "update_cache"]], "polaris.components": [[48, 2, 1, "", "get_components"]], "polaris.config": [[49, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[49, 1, 1, "", "__init__"]], "polaris.io": [[50, 2, 1, "", "download"], [51, 3, 0, "-", "imp_res"], [52, 2, 1, "", "symlink"]], "polaris.list": [[53, 2, 1, "", "list_cases"], [54, 2, 1, "", "list_machines"], [55, 2, 1, "", "list_suites"]], "polaris.logging": [[56, 2, 1, "", "log_method_call"]], "polaris.mesh": [[57, 0, 1, "", "IcosahedralMeshStep"], [64, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [59, 1, 1, "", "get_cell_width"], [60, 1, 1, "", "get_subdivisions"], [61, 1, 1, "", "make_jigsaw_mesh"], [62, 1, 1, "", "run"], [63, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[64, 1, 1, "", "__init__"], [65, 1, 1, "", "build_cell_width_lat_lon"], [66, 1, 1, "", "make_jigsaw_mesh"], [67, 1, 1, "", "run"], [68, 1, 1, "", "setup"]], "polaris.mesh.spherical": [[69, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[69, 1, 1, "", "__init__"], [70, 1, 1, "", "run"], [71, 1, 1, "", "save_and_plot_cell_width"], [72, 1, 1, "", "setup"]], "polaris.model_step": [[73, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[74, 2, 1, "", "ingest"], [75, 2, 1, "", "parse_replacements"], [76, 2, 1, "", "replace"], [77, 2, 1, "", "write"]], "polaris.ocean": [[110, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[110, 1, 1, "", "__init__"]], "polaris.ocean.model": [[111, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "compute_cell_count"], [113, 1, 1, "", "constrain_resources"], [114, 1, 1, "", "map_yaml_to_namelist"], [115, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[116, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[117, 0, 1, "", "BaroclinicChannel"], [118, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[117, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[118, 1, 1, "", "__init__"], [119, 1, 1, "", "configure"], [120, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[121, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[123, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[123, 1, 1, "", "__init__"], [124, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[125, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "compute_cell_count"], [127, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[128, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[128, 1, 1, "", "__init__"], [129, 1, 1, "", "run"], [130, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[131, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[131, 1, 1, "", "__init__"], [132, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[133, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[133, 1, 1, "", "__init__"], [134, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[135, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "configure"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[138, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "run"], [140, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[141, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[143, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[145, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[145, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[146, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "configure"], [148, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[149, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "rmse"], [151, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[152, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "compute_cell_count"], [154, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[155, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[157, 2, 1, "", "generate_1d_grid"], [158, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[159, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[160, 2, 1, "", "alter_bottom_depth"], [161, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[162, 2, 1, "", "compute_min_max_level_cell"], [163, 2, 1, "", "compute_z_level_layer_thickness"], [164, 2, 1, "", "compute_z_level_resting_thickness"], [165, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[166, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[78, 2, 1, "", "check_parallel_system"], [79, 2, 1, "", "get_available_cores_and_nodes"], [80, 2, 1, "", "run_command"], [81, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[82, 2, 1, "", "write"]], "polaris.run.serial": [[83, 2, 1, "", "run_single_step"], [84, 2, 1, "", "run_tests"]], "polaris.setup": [[85, 2, 1, "", "setup_case"], [86, 2, 1, "", "setup_cases"]], "polaris.streams": [[87, 2, 1, "", "read"], [88, 2, 1, "", "update_defaults"], [89, 2, 1, "", "update_tree"], [90, 2, 1, "", "write"]], "polaris.suite": [[91, 2, 1, "", "setup_suite"]], "polaris.validate": [[92, 2, 1, "", "compare_timers"], [93, 2, 1, "", "compare_variables"]], "polaris.viz": [[94, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[95, 0, 1, "", "PolarisYaml"], [99, 2, 1, "", "main_mpas_to_yaml"], [100, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [101, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[95, 1, 1, "", "__init__"], [96, 1, 1, "", "read"], [97, 1, 1, "", "update"], [98, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 109, 180, 185, 186, 187, 188, 189, 190, 195, 196], "same": 1, "implement": 1, "test": [1, 108, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 172, 174, 176, 177, 178, 179, 184, 194, 197, 198, 199, 200], "valid": [1, 2, 14, 43, 92, 93, 120, 122, 124, 132, 137, 142, 148, 177, 198], "api": 2, "refer": [2, 108, 109], "compon": [2, 12, 16, 17, 48, 109, 167, 173, 179, 180, 193, 198], "polari": [2, 4, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 175, 179, 180, 183, 198], "framework": [2, 8, 108, 109, 170, 179, 191], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 53, 54, 55], "setup": [2, 4, 6, 29, 39, 63, 68, 72, 85, 86, 115, 130, 140, 175], "suit": [2, 4, 6, 91, 176, 194, 198, 200], "run": [2, 6, 12, 36, 62, 67, 70, 83, 84, 109, 129, 139, 144, 151, 156, 175, 180, 198], "cach": [2, 4, 6, 47, 175], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 179], "testgroup": [2, 44, 45], "testcas": [2, 40, 41, 42, 43, 177], "step": [2, 31, 32, 33, 34, 35, 36, 37, 38, 39, 175, 196], "modelstep": [2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "config": [2, 7, 12, 49, 109, 184, 185, 186, 187, 188, 189, 190, 195, 196], "io": [2, 9, 50, 51, 52], "log": [2, 10, 56], "mesh": [2, 11, 12, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 171], "model_step": [2, 73], "namelist": [2, 12, 74, 75, 76, 77, 109], "parallel": [2, 78, 79, 80, 81], "proven": [2, 13, 82], "stream": [2, 12, 87, 88, 89, 90, 109], "viz": [2, 94, 143, 144], "yaml": [2, 12, 95, 96, 97, 98, 99, 100, 101, 109], "build": [3, 180, 198], "serial": [4, 6, 83, 84], "docstr": 5, "modul": [6, 179, 180], "clean": 6, "file": [7, 12, 109, 175, 184], "comment": 7, "symlink": [9, 52, 175], "download": [9, 50, 175], "spheric": [11, 69, 70, 71, 72], "planar": 11, "uniform": [11, 192], "gener": 11, "model": [12, 109, 111, 112, 113, 114, 115, 168, 198], "an": [12, 109], "e3sm": [12, 109, 180, 198], "ad": [12, 175], "updat": [12, 97, 180], "runtim": 12, "input": [12, 175], "partit": [12, 25], "pio": 12, "make": 12, "graph": 12, "variabl": 14, "norm": 14, "timer": 14, "visual": 15, "add_test_group": 17, "add_model_config_opt": 19, "add_namelist_fil": 20, "add_streams_fil": 21, "add_yaml_fil": 22, "dynamic_model_config": [23, 127, 134, 154], "map_yaml_to_namelist": [24, 114], "process_inputs_and_output": 26, "runtime_setup": [27, 37, 175], "set_model_resourc": 28, "update_namelist_pio": 30, "add_depend": 32, "add_input_fil": 33, "add_output_fil": 34, "constrain_resourc": [35, 113, 175], "set_resourc": 38, "add_step": 41, "configur": [42, 119, 136, 147, 177, 181], "add_test_cas": 45, "__main__": 46, "main": 46, "update_cach": 47, "get_compon": 48, "polarisconfigpars": 49, "imp_r": 51, "list_cas": 53, "list_machin": 54, "list_suit": 55, "log_method_cal": 56, "icosahedralmeshstep": [57, 58, 59, 60, 61, 62, 63], "build_subdivisions_cell_width_lat_lon": 58, "get_cell_width": 59, "get_subdivis": 60, "make_jigsaw_mesh": [61, 66], "quasiuniformsphericalmeshstep": [64, 65, 66, 67, 68], "build_cell_width_lat_lon": 65, "sphericalbasestep": [69, 70, 71, 72], "save_and_plot_cell_width": 71, "make_graph_fil": 73, "ingest": 74, "parse_replac": 75, "replac": 76, "write": [77, 82, 90, 98], "check_parallel_system": 78, "get_available_cores_and_nod": 79, "run_command": 80, "set_cores_per_nod": 81, "run_single_step": 83, "run_test": 84, "setup_cas": [85, 86], "read": [87, 96], "update_default": 88, "update_tre": 89, "setup_suit": 91, "compare_tim": 92, "compare_vari": 93, "plot_horiz_field": 94, "polarisyaml": [95, 96, 97, 98], "main_mpas_to_yaml": 99, "mpas_namelist_and_streams_to_yaml": 100, "yaml_to_mpas_stream": 101, "anvil": [102, 185], "intel": [102, 104, 105, 185, 187, 188], "gnu": [102, 103, 104, 105, 107, 185, 186, 187, 190], "chicoma": [103, 186], "cpu": [103, 107, 186, 190], "chrysali": [104, 187], "compymcnodefac": [105, 188], "machin": [106, 180, 189, 198], "support": [106, 168, 180, 189, 198], "other": [106, 175, 189, 198], "perlmutt": [107, 190], "pm": 107, "ocean": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 193], "group": [108, 172, 178, 179, 197], "baroclinic_channel": [108, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 170, 195], "global_converg": [108, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 171, 196], "cosine_bel": [108, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 171, 194, 196], "oceanmodelstep": [108, 111, 112, 113, 114, 115], "potenti": [108, 109], "energi": [108, 109], "rpe": [108, 109, 116], "vertic": [108, 109, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 192], "coordin": [108, 109, 192], "v": 109, "map": 109, "from": [109, 175, 180, 189], "omega": 109, "mpa": [109, 169], "set": [109, 180, 198], "mpi": [109, 189], "resourc": 109, "rest": 109, "compute_cell_count": [112, 126, 153], "compute_rp": 116, "baroclinicchannel": 117, "baroclinicchanneltestcas": [118, 119, 120], "decomp_test": [121, 122, 170, 195], "decomptest": [121, 122], "default": [123, 124, 170, 195], "forward": [125, 126, 127, 152, 153, 154, 170, 171], "initial_st": [128, 129, 130, 170], "initialst": [128, 129, 130], "restart_test": [131, 132, 133, 134, 170, 195], "restarttest": [131, 132], "restart_step": [133, 134], "restartstep": [133, 134], "rpe_test": [135, 136, 137, 138, 139, 140, 170, 195], "rpetest": [135, 136, 137], "analysi": [138, 139, 140, 149, 150, 151, 171], "threads_test": [141, 142, 170], "threadstest": [141, 142], "globalconverg": 145, "cosinebel": [146, 147, 148], "rmse": 150, "init": [155, 156, 171], "grid_1d": [157, 158], "generate_1d_grid": 157, "write_1d_grid": 158, "init_vertical_coord": 159, "partial_cel": [160, 161], "alter_bottom_depth": 160, "alter_ssh": 161, "zlevel": [162, 163, 164, 165], "compute_min_max_level_cel": 162, "compute_z_level_layer_thick": 163, "compute_z_level_resting_thick": 164, "init_z_level_vertical_coord": 165, "zstar": 166, "init_z_star_vertical_coord": 166, "initi": 169, "condit": 169, "boundari": 169, "forc": 169, "baroclinic_channel_test_cas": 170, "type": [171, 192], "organ": 174, "directori": 174, "structur": 174, "attribut": [175, 177], "constructor": [175, 177], "output": 175, "copi": 175, "depend": 175, "pull": 176, "request": 176, "pr": 176, "nightli": 176, "case": [177, 179, 184, 198, 199], "overview": 179, "code": [179, 180], "style": [179, 180], "packag": 179, "share": 179, "within": 179, "quick": [180, 198], "start": [180, 198], "develop": [180, 183], "unix": 180, "shell": 180, "up": [180, 198], "repositori": 180, "beginn": 180, "conda": [180, 181, 189, 198], "environ": [180, 181, 198], "spack": [180, 198], "compil": 180, "system": 180, "albani": 180, "petsc": 180, "netlib": 180, "lapack": 180, "unknown": 180, "what": 180, "script": [180, 198], "doe": 180, "flag": 180, "activ": 180, "troubleshoot": [180, 181], "creat": 180, "onli": 180, "repo": 180, "worktre": 180, "advanc": 180, "user": [180, 183, 184, 198], "solver": 181, "error": 181, "when": 181, "proxi": 181, "lanl": 181, "mac": 181, "gethostbynam": 181, "fail": 181, "glossari": [182, 183], "": 183, "guid": 183, "compass": 183, "A": 184, "slurm": 189, "job": [189, 198], "queue": 189, "mpich": 189, "openmpi": 189, "No": 189, "forg": 189, "jupyt": 190, "notebook": 190, "remot": 190, "data": 190, "1d": 192, "grid": 192, "tanh_dz": 192, "60layerphc": 192, "100layere3smv1": 192, "3d": 192, "z": 192, "star": 192, "level": 192, "cosine_bell_cached_init": 194, "thread_test": 195, "resolut": 196, "time": 196, "core": 196, "i": 198, "yet": 198, "load": 198, "standalon": 198}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [173, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [171, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [191, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [109, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [109, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Validation": [[14, "validation"]], "Validating variables": [[14, "validating-variables"]], "Norms": [[14, "norms"]], "Validating timers": [[14, "validating-timers"]], "Visualization": [[15, "visualization"]], "polaris.Component": [[16, "polaris-component"]], "polaris.Component.add_test_group": [[17, "polaris-component-add-test-group"]], "polaris.ModelStep": [[18, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[19, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[20, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[21, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[22, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[23, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[24, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[25, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[26, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[27, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[28, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[29, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[30, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[31, "polaris-step"]], "polaris.Step.add_dependency": [[32, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[33, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[34, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[35, "polaris-step-constrain-resources"]], "polaris.Step.run": [[36, "polaris-step-run"]], "polaris.Step.runtime_setup": [[37, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[38, "polaris-step-set-resources"]], "polaris.Step.setup": [[39, "polaris-step-setup"]], "polaris.TestCase": [[40, "polaris-testcase"]], "polaris.TestCase.add_step": [[41, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[42, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[43, "polaris-testcase-validate"]], "polaris.TestGroup": [[44, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[45, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[46, "polaris-main-main"]], "polaris.cache.update_cache": [[47, "polaris-cache-update-cache"]], "polaris.components.get_components": [[48, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[49, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[50, "polaris-io-download"]], "polaris.io.imp_res": [[51, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[52, "polaris-io-symlink"]], "polaris.list.list_cases": [[53, "polaris-list-list-cases"]], "polaris.list.list_machines": [[54, "polaris-list-list-machines"]], "polaris.list.list_suites": [[55, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[56, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[57, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[58, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[59, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[60, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[61, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[62, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[63, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[64, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[65, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.spherical.SphericalBaseStep": [[69, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[70, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[71, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[72, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[73, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[74, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[75, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[76, "polaris-namelist-replace"]], "polaris.namelist.write": [[77, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[78, "polaris-parallel-check-parallel-system"]], "polaris.parallel.get_available_cores_and_nodes": [[79, "polaris-parallel-get-available-cores-and-nodes"]], "polaris.parallel.run_command": [[80, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[81, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[82, "polaris-provenance-write"]], "polaris.run.serial.run_single_step": [[83, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[84, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[85, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[86, "polaris-setup-setup-cases"]], "polaris.streams.read": [[87, "polaris-streams-read"]], "polaris.streams.update_defaults": [[88, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[89, "polaris-streams-update-tree"]], "polaris.streams.write": [[90, "polaris-streams-write"]], "polaris.suite.setup_suite": [[91, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[92, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[93, "polaris-validate-compare-variables"]], "polaris.viz.plot_horiz_field": [[94, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[95, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[96, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[97, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[98, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[99, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[100, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[101, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[102, "anvil"], [185, "anvil"]], "intel": [[102, "intel"], [104, "intel"], [105, "intel"]], "gnu": [[102, "gnu"], [104, "gnu"], [105, "gnu"]], "Chicoma": [[103, "chicoma"], [186, "chicoma"]], "chicoma-cpu, gnu": [[103, "chicoma-cpu-gnu"]], "Chrysalis": [[104, "chrysalis"], [187, "chrysalis"]], "CompyMcNodeFace": [[105, "compymcnodeface"], [188, "compymcnodeface"]], "Machines": [[106, "machines"], [189, "machines"]], "Supported Machines": [[106, "supported-machines"], [189, "supported-machines"]], "Other Machines": [[106, "other-machines"], [189, "other-machines"]], "Perlmutter": [[107, "perlmutter"], [190, "perlmutter"]], "pm-cpu, gnu": [[107, "pm-cpu-gnu"]], "ocean": [[108, "ocean"]], "Test Groups": [[108, "test-groups"], [178, "test-groups"]], "baroclinic_channel": [[108, "baroclinic-channel"], [170, "baroclinic-channel"], [195, "baroclinic-channel"]], "global_convergence": [[108, "global-convergence"], [171, "global-convergence"], [196, "global-convergence"]], "cosine_bell": [[108, "cosine-bell"], [171, "cosine-bell"], [196, "cosine-bell"]], "Ocean Framework": [[108, "ocean-framework"]], "OceanModelStep": [[108, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[108, "reference-potential-energy-rpe"]], "Vertical coordinates": [[108, "vertical-coordinates"]], "Ocean framework": [[109, "ocean-framework"]], "YAML files vs. namelists and streams": [[109, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[109, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[109, "setting-mpi-resources"]], "Model config options and streams": [[109, "model-config-options-and-streams"]], "Vertical coordinate": [[109, "vertical-coordinate"], [192, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[109, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[110, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[111, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[112, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[113, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[114, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[115, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[116, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[117, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[118, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure": [[119, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-configure"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[120, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[121, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[122, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[123, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[124, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[125, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[126, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[127, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[128, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[129, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[130, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[131, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[132, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[133, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[134, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[135, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[136, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[137, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[138, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[139, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[140, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[141, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[142, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[143, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[144, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[145, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[146, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[147, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[148, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[149, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[150, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[151, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[152, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[153, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[154, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[155, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[156, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[157, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[158, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[159, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[160, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[161, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[162, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[163, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[164, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[165, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[166, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[167, "ocean-component"], [193, "ocean-component"]], "Models": [[168, "models"]], "Supported Models": [[168, "supported-models"]], "MPAS-Ocean": [[169, "mpas-ocean"]], "Initial conditions": [[169, "initial-conditions"]], "Boundary conditions": [[169, "boundary-conditions"]], "Forcing": [[169, "forcing"]], "framework": [[170, "framework"]], "baroclinic_channel_test_case": [[170, "baroclinic-channel-test-case"]], "initial_state": [[170, "initial-state"]], "forward": [[170, "forward"], [171, "forward"]], "default": [[170, "default"], [195, "default"]], "decomp_test": [[170, "decomp-test"], [195, "decomp-test"]], "restart_test": [[170, "restart-test"], [195, "restart-test"]], "threads_test": [[170, "threads-test"]], "rpe_test": [[170, "rpe-test"], [195, "rpe-test"]], "mesh types": [[171, "mesh-types"]], "init": [[171, "init"]], "analysis": [[171, "analysis"]], "Test groups": [[172, "test-groups"], [197, "test-groups"]], "Organization of Tests": [[174, "organization-of-tests"]], "Directory structure": [[174, "directory-structure"]], "Steps": [[175, "steps"]], "Step attributes": [[175, "step-attributes"]], "constructor": [[175, "constructor"], [177, "constructor"]], "constrain_resources()": [[175, "constrain-resources"]], "setup()": [[175, "setup"]], "runtime_setup()": [[175, "runtime-setup"]], "run()": [[175, "run"]], "inputs and outputs": [[175, "inputs-and-outputs"]], "Input files": [[175, "input-files"]], "Symlinks to input files": [[175, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[175, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[175, "downloading-and-symlinking-input-files"]], "Copying input files": [[175, "copying-input-files"]], "Output files": [[175, "output-files"]], "Cached output files": [[175, "cached-output-files"]], "Adding other steps as dependencies": [[175, "adding-other-steps-as-dependencies"]], "Test Suites": [[176, "test-suites"], [198, "test-suites"], [200, "test-suites"]], "Pull-Request (PR) suite": [[176, "pull-request-pr-suite"]], "Nightly suite": [[176, "nightly-suite"]], "Test cases": [[177, "test-cases"]], "TestCase attributes": [[177, "testcase-attributes"]], "configure()": [[177, "configure"]], "validate()": [[177, "validate"]], "Overview": [[179, "overview"]], "Code Style": [[179, "code-style"]], "Packages and Modules": [[179, "packages-and-modules"]], "Packages": [[179, "packages"]], "Modules": [[179, "modules"]], "Classes": [[179, "classes"]], "Code sharing": [[179, "code-sharing"]], "\u2026in the polaris framework": [[179, "in-the-polaris-framework"]], "\u2026within a component": [[179, "within-a-component"]], "\u2026within a test group": [[179, "within-a-test-group"]], "\u2026within a test case": [[179, "within-a-test-case"]], "Quick Start for Developers": [[180, "quick-start-for-developers"]], "Unix Shell": [[180, "unix-shell"]], "Set up a polaris repository: for beginners": [[180, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[180, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[180, "supported-machines"]], "Environments with Albany": [[180, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[180, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[180, "unknown-machines"]], "What the script does": [[180, "what-the-script-does"]], "Optional flags": [[180, "optional-flags"]], "Activating the environment": [[180, "activating-the-environment"]], "Troubleshooting": [[180, "troubleshooting"], [181, "troubleshooting"]], "Creating/updating only the polaris environment": [[180, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[180, "building-e3sm-components"]], "Running polaris from the repo": [[180, "running-polaris-from-the-repo"]], "Code style for polaris": [[180, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[180, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[181, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[181, "proxy-on-lanl-macs"]], "gethostbyname failed": [[181, "gethostbyname-failed"]], "Glossary": [[182, "glossary"], [183, null]], "Polaris": [[183, "polaris"]], "User's guide": [[183, null]], "Developer's guide": [[183, null]], "Compass": [[183, "compass"]], "Config Files": [[184, "config-files"]], "A \u201cuser\u201d config file": [[184, "a-user-config-file"]], "Test-case config files": [[184, "test-case-config-files"]], "config options": [[185, "config-options"], [186, "config-options"], [187, "config-options"], [188, "config-options"], [189, "config-options"], [190, "config-options"], [195, "config-options"], [196, "config-options"]], "Intel on Anvil": [[185, "intel-on-anvil"]], "Gnu on Anvil": [[185, "gnu-on-anvil"]], "Chicoma-CPU": [[186, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[186, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[187, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[187, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[188, "intel-on-compymcnodeface"]], "Slurm job queueing": [[189, "slurm-job-queueing"]], "MPICH": [[189, "mpich"]], "OpenMPI": [[189, "openmpi"]], "No MPI from conda-forge": [[189, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[190, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[190, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[190, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[192, "d-grid-type"]], "uniform": [[192, "uniform"]], "tanh_dz": [[192, "tanh-dz"]], "60layerPHC": [[192, "layerphc"]], "100layerE3SMv1": [[192, "layere3smv1"]], "3D vertical coordinates": [[192, "d-vertical-coordinates"]], "z-star": [[192, "z-star"]], "z-level": [[192, "z-level"]], "Test suites": [[194, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[194, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "thread_test": [[195, "thread-test"]], "resolutions": [[196, "resolutions"]], "time step": [[196, "time-step"]], "cores": [[196, "cores"]], "Quick Start for Users": [[198, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[198, null]], "Loading polaris conda and spack environments": [[198, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[198, "e3sm-supported-machines"]], "Other machines": [[198, "other-machines"]], "Building supported E3SM components as standalone models": [[198, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[198, "setting-up-test-cases"]], "Running a test case": [[198, "running-a-test-case"]], "Running with a job script": [[198, "running-with-a-job-script"]], "Test Cases": [[199, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[16, "polaris.Component"]], "__init__() (polaris.component method)": [[16, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[17, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[18, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[18, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[19, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[23, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[24, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[25, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[26, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[27, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[28, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[29, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[30, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[31, "polaris.Step"]], "__init__() (polaris.step method)": [[31, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[32, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[33, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[34, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[35, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[36, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[37, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[38, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[39, "polaris.Step.setup"]], "testcase (class in polaris)": [[40, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[40, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[41, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[42, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[43, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[44, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[44, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[45, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[46, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[47, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[48, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[49, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[49, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[50, "polaris.io.download"]], "module": [[51, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[51, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[52, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[53, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[54, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[55, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[56, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[57, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[57, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[59, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[64, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[64, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[69, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[69, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[70, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[73, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[74, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[75, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[76, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[77, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[78, "polaris.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module polaris.parallel)": [[79, "polaris.parallel.get_available_cores_and_nodes"]], "run_command() (in module polaris.parallel)": [[80, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[81, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[82, "polaris.provenance.write"]], "run_single_step() (in module polaris.run.serial)": [[83, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[84, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[85, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[86, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[87, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[88, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[89, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[90, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[91, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[92, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[93, "polaris.validate.compare_variables"]], "plot_horiz_field() (in module polaris.viz)": [[94, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[95, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[95, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[96, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[97, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[98, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[99, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[100, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[101, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[110, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[110, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[111, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[111, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[112, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[113, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[114, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[115, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[116, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[117, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[117, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[118, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[118, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[119, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[120, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[121, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[121, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[122, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[123, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[123, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[124, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[125, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[125, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[126, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[127, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[128, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[128, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[129, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[130, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[131, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[131, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[132, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[133, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[133, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[134, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[135, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[135, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[136, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[137, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[138, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[138, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[139, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[140, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[141, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[141, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[142, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[143, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[143, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[144, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[145, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[145, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[146, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[146, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[147, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[148, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[149, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[149, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[150, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[151, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[152, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[152, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[153, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[154, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[155, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[155, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[156, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[157, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[158, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[159, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[160, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[161, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[162, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[163, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[164, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[165, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[166, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})