Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/inertial_gravity_wave", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/inertial_gravity_wave", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/inertial_gravity_wave.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/inertial_gravity_wave.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState", "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.ideal_age.IdealAge", "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tests.single_column.initial_state.InitialState", "polaris.ocean.tests.single_column.initial_state.InitialState.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "inertial_gravity_wave", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "inertial gravity wave", "single_column", "test_group_name", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 102, 112, 116, 142, 149, 229, 230, 231], "date": [1, 4, 48, 210, 226, 231], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 72, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 116, 117, 122, 125, 126, 127, 128, 134, 136, 138, 140, 141, 143, 145, 146, 148, 150, 153, 155, 156, 158, 161, 164, 165, 167, 168, 170, 172, 174, 177, 179, 183, 184, 186, 188, 191, 193, 194, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249], "purpos": [1, 45, 224, 225, 228, 230, 249], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 55, 59, 60, 61, 64, 65, 67, 68, 69, 70, 73, 74, 83, 84, 86, 87, 93, 99, 107, 108, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 239, 242, 243, 245, 246, 247, 248, 250], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 68, 109, 113, 125, 127, 130, 200, 202, 208, 209, 210, 217, 218, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 246, 247, 248], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 67, 68, 73, 83, 84, 87, 91, 97, 98, 99, 100, 102, 104, 107, 108, 110, 112, 117, 118, 120, 121, 122, 125, 127, 128, 140, 141, 142, 149, 168, 169, 183, 184, 185, 193, 202, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250], "summar": 1, "what": [1, 9, 11, 14, 122, 225, 230, 237, 247, 248], "capabl": [1, 14, 122, 221, 225, 230, 236, 248], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 108, 134, 145, 155, 202, 208, 209, 223, 224, 226, 229, 232, 233, 234, 235, 237, 248], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 118, 120, 121, 122, 125, 210, 211, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 249, 250], "through": [1, 101, 225, 226, 230], "process": [1, 6, 12, 27, 83, 84, 117, 221, 225, 226, 228, 229, 230], "It": [1, 4, 12, 14, 32, 38, 109, 213, 216, 221, 222, 223, 224, 225, 226, 228, 230, 231, 236, 245], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 55, 68, 100, 101, 108, 109, 110, 118, 119, 120, 121, 122, 123, 125, 130, 145, 155, 210, 218, 221, 222, 223, 224, 226, 227, 230, 231, 242, 243, 246, 247, 248], "clear": [1, 225, 230], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 60, 67, 73, 87, 103, 104, 140, 148, 167, 181, 183, 193, 202, 208, 209, 221, 225, 226, 227, 228, 229, 248], "code": [1, 4, 5, 7, 10, 12, 32, 125, 210, 218, 221, 222, 223, 228, 229, 231, 238, 242, 246, 248], "do": [1, 4, 7, 9, 12, 14, 15, 112, 221, 223, 226, 227, 228, 230, 236, 243, 248], "current": [1, 4, 6, 9, 19, 29, 32, 39, 107, 108, 122, 127, 193, 210, 214, 217, 218, 221, 225, 226, 228, 229, 230, 231, 236, 239, 242, 243, 245, 246, 248, 249, 250], "doe": [1, 7, 10, 12, 221, 229, 230, 236], "primari": [1, 4, 7, 230, 250], "challeng": 1, "respect": [1, 6, 7, 12, 16, 125, 221, 225, 243, 247], "softwar": [1, 77, 237, 248], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 107, 108, 109, 125, 172, 202, 208, 209, 210, 216, 217, 218, 219, 221, 223, 224, 225, 226, 230, 231, 236, 237, 239, 243, 245, 247, 248, 249], "appropri": [1, 4, 12, 20, 72, 122, 210, 213, 216, 217, 218, 221, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 247, 248], "final": [1, 5, 213, 214, 216, 217, 219, 221, 223, 230, 243], "statement": [1, 10, 221, 228], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 36, 49, 52, 79, 82, 88, 89, 90, 91, 95, 96, 97, 102, 110, 111, 125, 132, 202, 208, 209, 218, 219, 220, 221, 225, 226, 228, 230, 231, 236, 240, 245, 247, 248], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 67, 108, 125, 145, 155, 200, 210, 212, 213, 214, 216, 217, 218, 221, 226, 230, 231, 236, 243, 245, 248], "regard": 1, "success": [1, 51, 210, 218, 230, 231], "last": [1, 222, 226, 242, 248], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 102, 104, 127, 151, 213, 216, 221, 223, 224, 226, 229, 230, 231, 242, 248], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 66, 71, 76, 102, 103, 104, 112, 113, 116, 117, 142, 149, 213, 218, 221, 223, 224, 225, 226, 228, 230, 231, 237, 243], "your": [1, 3, 4, 9, 122, 210, 225, 226, 227, 230, 231, 232, 233, 236, 237, 243, 248], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 83, 84, 99, 100, 101, 106, 107, 108, 132, 153, 161, 164, 177, 188, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 236, 237, 243, 248, 249, 250], "appear": [1, 122, 221, 230], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 56, 62, 63, 72, 101, 117, 122, 125, 137, 147, 157, 161, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 236, 239, 242, 243, 245, 247, 248, 250], "under": [1, 14, 32, 33, 107, 122, 125, 212, 221, 222, 226, 229, 239, 249], "head": [1, 212, 233], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 100, 101, 106, 108, 125, 127, 135, 137, 139, 146, 147, 152, 157, 180, 192, 195, 210, 213, 216, 217, 221, 223, 224, 225, 226, 227, 228, 229, 231, 236, 237, 239, 242, 243, 245, 247, 248, 249, 250], "correspond": [1, 5, 15, 107, 108, 125, 210, 221, 226, 242], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 61, 68, 69, 72, 75, 87, 93, 107, 108, 127, 146, 181, 202, 208, 209, 214, 218, 221, 224, 225, 236, 239, 242, 245], "propos": 1, "discuss": [1, 125, 221, 223, 224, 225, 230, 242, 243], "technic": [1, 5], "issu": [1, 221, 222, 226, 243, 245], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 122, 213, 221, 223, 224, 226, 227, 230, 239], "focu": [1, 230], "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 100, 101, 106, 111, 116, 118, 119, 120, 121, 122, 123, 136, 140, 142, 146, 148, 149, 150, 156, 169, 185, 193, 210, 213, 216, 217, 218, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 242, 245, 247], "To": [1, 4, 10, 14, 15, 108, 122, 125, 210, 221, 225, 226, 230, 232, 233, 234, 235, 236, 237, 239, 243, 248], "extent": [1, 11, 14, 230, 242], "possibl": [1, 6, 9, 63, 125, 212, 221, 222, 225, 230, 239], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 100, 101, 106, 107, 108, 210, 218, 221, 225, 226, 228, 230, 242, 248, 249], "independ": [1, 4, 222, 228], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 118, 137, 147, 157, 214, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 231, 232, 242, 249], "thu": [1, 5, 12, 230], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 108, 125, 127, 221, 224, 228, 230, 231, 236, 239, 243, 249], "clean": [1, 221, 223, 226], "plan": [1, 11, 210, 216, 221, 228, 245, 249], "For": [1, 2, 4, 5, 10, 12, 14, 16, 101, 118, 212, 213, 216, 217, 221, 225, 226, 228, 230, 231, 232, 240, 243, 245, 248, 249], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 118, 119, 120, 121, 122, 123, 210, 218, 221, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 248, 249, 250], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 64, 67, 69, 88, 92, 93, 95, 100, 101, 106, 108, 118, 119, 120, 121, 122, 123, 125, 210, 213, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 245, 248, 249, 250], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 91, 97, 107, 108, 112, 125, 135, 137, 139, 147, 152, 157, 180, 192, 195, 210, 213, 214, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 236, 240, 243, 247, 248], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 60, 62, 63, 89, 96, 102, 104, 107, 108, 109, 116, 122, 127, 170, 213, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 239, 245, 248, 249, 250], "intend": [1, 6, 7, 222, 231, 249], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 99, 109, 122, 125, 134, 145, 155, 161, 213, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 56, 108, 212, 214, 219, 221, 223, 225, 226, 227, 230, 243, 248], "pde": 1, "solver": [1, 223, 226, 229, 248], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 119, 122, 123, 219, 223, 224, 225, 226, 230, 248], "well": [1, 6, 7, 10, 11, 125, 205, 213, 216, 217, 221, 226, 228, 230, 231, 243, 248, 249], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 60, 107, 108, 138, 140, 145, 150, 155, 160, 167, 175, 183, 191, 193, 194, 210, 213, 214, 216, 217, 221, 222, 223, 228, 229, 230, 231, 236, 242, 250], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 125, 214, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 236, 239, 243, 245, 247, 248, 249, 250], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 77, 79, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 110, 112, 113, 116, 117, 122, 127, 130, 135, 140, 164, 169, 172, 177, 185, 188, 206, 210, 212, 213, 214, 216, 217, 218, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 245, 247, 248, 249, 250], "low": [1, 110], "level": [1, 9, 10, 11, 15, 16, 125, 202, 203, 204, 205, 206, 207, 208, 209, 213, 219, 220, 221, 223, 224, 230, 231, 242, 243, 245, 246, 247, 250], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 60, 67, 73, 77, 87, 88, 92, 95, 107, 108, 110, 111, 112, 117, 122, 125, 127, 134, 140, 143, 153, 161, 163, 164, 167, 172, 174, 177, 181, 183, 186, 188, 193, 194, 202, 208, 209, 212, 217, 223, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 240, 242, 247, 248], "declar": [1, 5], "interfac": [1, 8, 200, 201, 202, 208, 209, 221, 225, 226, 229, 230, 239], "sequenc": [1, 4, 12, 220, 221, 225, 228, 230, 248, 249, 250], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 83, 84, 85, 100, 107, 108, 110, 118, 119, 120, 121, 122, 123, 127, 140, 183, 193, 213, 221, 223, 224, 225, 226, 227, 228, 230, 231, 236, 237, 239, 243, 247, 248], "want": [1, 4, 9, 12, 14, 15, 43, 125, 221, 224, 226, 227, 230, 231, 236, 237, 246, 248, 249], "math": 1, "syntax": [1, 230], "almost": [1, 7], "ident": [1, 4, 15, 136, 146, 156, 213, 222, 225, 230, 242], "latex": 1, "b": [1, 4, 226, 228, 230, 248], "2": [1, 11, 12, 15, 33, 156, 212, 213, 219, 222, 226, 230, 231, 233, 236, 239, 242, 243, 245, 248], "2ab": 1, "imag": [1, 5, 16, 109, 110, 224, 230, 247], "keep": [1, 4, 7, 12, 19, 50, 221, 223, 226, 230, 247], "mind": [1, 4, 230], "quit": [1, 219, 221, 223, 230], "small": [1, 7, 38, 221, 224, 230, 232, 233, 238, 239, 246, 248], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 72, 83, 84, 99, 101, 108, 113, 122, 125, 127, 140, 183, 193, 202, 205, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250], "prefer": [1, 221, 222, 230, 231], "png": [1, 11, 16, 214, 230], "okai": [1, 221, 230], "size": [1, 11, 62, 63, 72, 125, 129, 131, 132, 213, 224, 230, 231, 242, 243, 245, 246, 247], "repo": [1, 4, 210, 229, 230], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 239, 247, 248, 249, 250], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 122, 221, 224, 226, 230, 236, 240, 248], "actual": [1, 4, 10, 221, 223, 226, 230], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 226, 230, 231, 232, 233, 234, 235, 236, 237, 248], "project": [1, 4, 5, 59, 91, 97, 210, 225, 226, 230, 231, 232, 233, 236, 248], "manag": [1, 227, 236], "item": [1, 230], "git": [1, 13, 86, 210, 226, 230, 231, 248], "branch": [1, 4, 122, 210, 218, 221, 226, 230, 248], "timelin": 1, "staf": 1, "via": [1, 4, 12, 221, 226, 236], "block": [1, 223], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 88, 92, 95, 125, 219, 221, 224, 225, 226, 227, 229, 230, 231, 236, 242, 243, 248, 249], "def": [1, 5, 7, 9, 10, 14, 16, 218, 221, 223, 224, 225, 230], "example_funct": 1, "foo": [1, 225], "return": [1, 5, 25, 49, 51, 54, 61, 62, 63, 68, 72, 79, 82, 83, 93, 101, 102, 104, 112, 116, 117, 125, 128, 130, 132, 141, 165, 168, 182, 184, 200, 203, 204, 205, 206, 207, 225, 230, 243], "0": [1, 4, 5, 11, 12, 14, 15, 16, 62, 88, 92, 95, 108, 110, 118, 119, 120, 121, 122, 123, 125, 202, 207, 208, 209, 212, 214, 221, 224, 225, 227, 230, 231, 233, 236, 239, 240, 242, 243, 245, 246, 247, 248], "how": [1, 4, 10, 12, 67, 125, 220, 221, 223, 225, 226, 231, 236, 237], "show": [1, 5, 11, 221, 230, 236, 237, 242, 243, 247], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 121, 122, 125, 131, 213, 214, 216, 217, 220, 221, 223, 224, 225, 226, 230, 231, 233, 235, 236, 237, 239, 243, 246, 248, 250], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 100, 101, 106, 121, 122, 125, 130, 164, 177, 188, 210, 213, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 248, 249, 250], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 89, 96, 100, 101, 102, 106, 108, 110, 112, 125, 130, 136, 146, 156, 182, 210, 212, 218, 220, 221, 223, 224, 225, 226, 230, 231, 233, 236, 239, 242, 243, 245, 246, 247, 248, 249, 250], "regress": [1, 160, 213, 214, 222, 228, 229, 230, 242, 243, 248, 250], "suit": [1, 5, 10, 15, 32, 41, 55, 56, 98, 99, 101, 122, 213, 220, 221, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 242], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 83, 84, 87, 108, 125, 127, 140, 183, 193, 213, 219, 221, 223, 224, 225, 226, 227, 230, 236, 239, 248], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 67, 99, 113, 125, 210, 213, 214, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 236, 239, 242, 243, 248, 250], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 68, 125, 142, 149, 210, 218, 221, 223, 225, 226, 227, 229, 230, 231, 232, 236, 237, 239, 242, 243, 248, 250], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 55, 82, 83, 84, 85, 86, 100, 101, 106, 122, 125, 200, 202, 203, 204, 208, 209, 213, 221, 224, 225, 229, 230, 231, 233, 236, 237, 239, 245, 247, 248, 249], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 55, 86, 98, 100, 101, 106, 121, 122, 145, 155, 172, 174, 175, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 236, 243, 246, 248, 249], "properli": [1, 118, 120, 121, 230, 231, 248], "addit": [1, 5, 7, 32, 217, 218, 219, 221, 223, 224, 225, 226, 230], "modif": [1, 5, 221], "nightli": [1, 226, 248, 250], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 107, 108, 210, 221, 223, 224, 225, 226, 228, 230, 231, 242, 248, 249, 250], "might": [1, 9, 12, 14, 16, 221, 224, 226, 230, 231, 236, 248], "made": [1, 4, 14, 32, 35, 41, 108, 221, 223, 225, 228, 230, 249], "ensur": [1, 7, 12, 50, 213, 225, 226, 243, 246], "continu": [1, 221, 230], "expect": [1, 10, 14, 218, 221, 226, 230, 243, 246], "page": [2, 5, 232], "auto": 2, "summari": [2, 233], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 68, 100, 101, 125, 212, 213, 214, 219, 221, 222, 223, 225, 226, 228, 236, 240, 242, 243, 247, 248, 249], "relev": [2, 5, 7, 125, 216, 230, 232, 233, 234, 235, 236, 237, 247, 248], "main": [2, 5, 7, 12, 37, 122, 175, 218, 224, 225, 226, 230, 249], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 140, 167, 183, 193, 213, 216, 221, 222, 225, 226, 229, 230, 239], "document": [2, 7, 12, 221, 225, 229, 231, 248], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 106, 211, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 236, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250], "As": [3, 4, 11, 15, 62, 125, 221, 222, 223, 224, 225, 226, 230, 231, 239, 243, 246, 250], "long": [3, 19, 29, 32, 39, 83, 84, 127, 140, 183, 193, 221, 230, 242, 248], "follow": [3, 4, 5, 11, 12, 16, 59, 122, 202, 208, 209, 210, 212, 213, 221, 222, 223, 226, 227, 230, 231, 236, 237, 239, 241, 243, 245, 246, 248], "procedur": [3, 122, 226, 230, 237], "conda": [3, 4, 13, 86, 118, 120, 121, 122, 210, 218, 225, 229, 230, 231, 232, 233, 234, 235, 237], "environ": [3, 4, 118, 120, 121, 122, 210, 218, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237], "spack": [3, 4, 118, 120, 121, 122, 227, 229, 230, 232, 233, 234, 235, 236, 237], "compil": [3, 4, 12, 118, 119, 120, 121, 122, 123, 227, 229, 230, 232, 233, 234, 235, 236, 237, 248], "system": [3, 4, 19, 29, 32, 39, 83, 84, 85, 118, 120, 121, 122, 127, 140, 183, 193, 221, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 248], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 59, 79, 102, 118, 120, 121, 122, 125, 218, 219, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 248], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 68, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 101, 102, 104, 106, 107, 108, 109, 110, 118, 119, 120, 121, 122, 123, 140, 142, 145, 149, 155, 160, 162, 169, 185, 193, 202, 208, 209, 210, 212, 213, 214, 216, 217, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 245, 246, 247, 250], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 74, 86, 100, 101, 106, 107, 108, 118, 119, 120, 121, 122, 123, 125, 145, 155, 160, 210, 213, 214, 216, 217, 220, 221, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 247, 249], "alreadi": [3, 9, 12, 43, 53, 125, 140, 193, 223, 225, 226, 230, 231, 236, 239, 243, 248], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 79, 86, 102, 106, 112, 122, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 248], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 56, 82, 83, 84, 127, 140, 183, 193, 214, 221, 223, 225, 226, 230, 232, 233, 234, 235, 237, 242, 248, 250], "Then": [3, 5, 9, 118, 119, 120, 121, 122, 123, 125, 210, 213, 216, 217, 218, 221, 223, 224, 226, 230, 236, 242, 248], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 59, 82, 83, 84, 93, 100, 101, 106, 108, 121, 122, 127, 128, 138, 140, 141, 142, 146, 149, 153, 158, 164, 167, 168, 169, 177, 183, 184, 185, 188, 191, 193, 194, 198, 210, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 249, 250], "script": [3, 4, 10, 16, 47, 55, 119, 122, 123, 225, 228, 229, 230, 233, 236], "doc": [3, 5, 223, 230, 237], "cd": [3, 210, 226, 230, 233, 248], "rm": 3, "rf": 3, "developers_guid": [3, 230], "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 61, 62, 64, 77, 108, 118, 119, 120, 121, 122, 123, 127, 131, 136, 146, 156, 174, 202, 208, 209, 210, 213, 221, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 242, 243, 248, 250], "html": [3, 240], "view": [3, 216, 226, 245], "open": [3, 226, 230], "index": [3, 15, 110, 202, 203, 204, 205, 206, 207, 208, 209, 223, 224, 230], "act": [4, 225, 239], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 136, 138, 191, 194, 213, 216, 217, 221, 223, 230, 231, 236, 242, 245, 246, 248], "These": [4, 6, 12, 15, 17, 32, 125, 210, 212, 218, 221, 223, 225, 226, 229, 230, 231, 236, 242, 248, 249, 250], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 55, 86, 108, 122, 125, 213, 216, 217, 221, 222, 223, 224, 227, 228, 230, 233, 236, 237, 240, 242, 243], "describ": [4, 5, 12, 14, 86, 102, 104, 107, 108, 117, 122, 125, 213, 214, 216, 217, 220, 221, 222, 223, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 248], "below": [4, 12, 19, 29, 32, 39, 83, 84, 122, 127, 140, 183, 193, 210, 219, 221, 223, 224, 226, 230, 231, 236, 239, 243, 245, 246, 248], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 56, 98, 107, 108, 122, 125, 130, 207, 213, 214, 216, 217, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 237, 239, 242, 243, 246, 248, 249], "instal": [4, 226, 230, 236, 237, 248], "abov": [4, 5, 12, 15, 219, 221, 222, 223, 224, 225, 226, 230, 231, 243, 245, 246, 248, 250], "develop": [4, 5, 6, 10, 11, 16, 122, 125, 210, 212, 218, 221, 222, 225, 227, 231, 236, 240, 248], "local": [4, 6, 9, 32, 34, 41, 210, 219, 221, 223, 226, 227, 230, 231, 236, 237, 239], "off": [4, 226, 227], "http": [4, 5, 9, 53, 221, 225, 227, 229, 230, 231, 237, 240, 248], "github": [4, 5, 225, 226, 229, 230, 231, 240, 248], "com": [4, 5, 53, 225, 226, 229, 230, 231, 248], "e3sm": [4, 5, 8, 9, 32, 111, 210, 218, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 60, 61, 67, 68, 73, 87, 94, 100, 101, 106, 111, 122, 125, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 158, 161, 164, 167, 170, 172, 174, 177, 179, 181, 183, 186, 188, 191, 193, 194, 196, 198, 202, 208, 209, 214, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 243, 248], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 118, 120, 121, 213, 214, 221, 223, 226, 227, 230, 231, 236, 240, 241, 242, 246, 247, 248, 249, 250], "mode": [4, 12, 218, 226, 228, 229, 230, 248], "mean": [4, 15, 165, 214, 216, 226, 230, 239, 242, 245, 250], "chang": [4, 6, 12, 14, 15, 67, 210, 218, 221, 222, 223, 225, 226, 228, 230, 231, 233, 237, 239, 242, 248, 250], "reflect": [4, 226], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 59, 93, 98, 122, 125, 213, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 248], "tool": [4, 7, 10, 12, 14, 210, 218, 221, 226, 229, 230, 231], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 55, 68, 77, 80, 83, 84, 87, 93, 98, 108, 109, 110, 111, 112, 117, 118, 122, 125, 127, 128, 129, 130, 131, 140, 141, 142, 149, 161, 164, 168, 172, 183, 184, 193, 200, 202, 203, 204, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 55, 56, 59, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 100, 101, 106, 107, 108, 122, 125, 126, 127, 200, 210, 212, 213, 214, 216, 217, 218, 219, 221, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 55, 56, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 100, 101, 102, 106, 107, 108, 122, 125, 126, 127, 133, 134, 136, 138, 140, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 158, 159, 161, 162, 164, 166, 167, 170, 172, 173, 174, 176, 177, 178, 179, 181, 183, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 226, 228, 229, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 250], "support": [4, 6, 11, 14, 32, 125, 202, 208, 209, 212, 214, 221, 223, 224, 225, 229, 230, 231, 233, 237, 239, 242, 246, 249], "machin": [4, 6, 32, 34, 41, 54, 55, 86, 100, 101, 106, 210, 221, 223, 225, 229, 230, 231, 232, 233, 234, 235, 237], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 55, 56, 60, 66, 67, 68, 71, 73, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 122, 127, 130, 140, 142, 149, 151, 162, 169, 181, 183, 185, 193, 200, 202, 203, 204, 208, 209, 210, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 227, 229, 231, 239, 241, 248, 249], "h": [4, 12, 230], "t": [4, 5, 7, 9, 10, 12, 32, 33, 117, 125, 140, 182, 193, 216, 221, 223, 225, 226, 227, 230, 231, 233, 235, 236, 241, 242, 245, 248, 249, 250], "n": [4, 61, 68, 69, 75, 221, 230, 233, 236, 237, 242, 243, 245, 247, 248], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 82, 83, 84, 87, 101, 125, 127, 128, 129, 131, 140, 141, 165, 168, 181, 183, 184, 193, 210, 213, 216, 221, 222, 223, 224, 225, 228, 230, 231, 236, 239, 241, 242, 243, 245, 246, 247, 248], "v": [4, 226, 230, 245, 250], "By": [4, 12, 15, 33, 34, 125, 210, 218, 223, 230, 231, 242, 246], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 55, 68, 73, 78, 86, 87, 88, 92, 95, 99, 100, 101, 103, 106, 110, 118, 120, 121, 125, 127, 140, 191, 193, 194, 210, 214, 216, 217, 218, 221, 223, 224, 226, 229, 231, 232, 233, 234, 235, 236, 237, 239, 243, 246, 247, 248, 249, 250], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 83, 84, 86, 100, 101, 125, 126, 127, 134, 140, 183, 193, 202, 208, 209, 210, 213, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 236, 239, 240, 242, 243, 247, 248, 249], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 60, 67, 73, 87, 100, 101, 107, 108, 127, 140, 143, 148, 153, 158, 171, 172, 174, 177, 183, 186, 193, 196, 198, 221, 225, 230, 231, 242, 246, 248], "example_compact": [4, 210, 218, 231], "1km": [4, 223, 224, 230, 242, 248], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 62, 118, 119, 120, 121, 122, 123, 125, 136, 140, 156, 183, 193, 202, 208, 209, 213, 214, 216, 217, 219, 221, 223, 226, 227, 230, 231, 233, 236, 237, 239, 242, 243, 245, 246, 247, 248], "test2": 4, "displai": [4, 6, 237], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 56, 59, 86, 100, 101, 106, 107, 108, 110, 210, 218, 221, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 248, 249], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 55, 86, 98, 100, 101, 106, 107, 108, 122, 145, 155, 172, 174, 210, 213, 218, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 248, 249], "help": [4, 11, 219, 221, 226, 229, 230, 236, 240], "messag": [4, 6, 15, 221, 223, 227, 237], "test_expr": [4, 56], "flag": [4, 221, 225, 227, 228, 230, 231, 240, 242, 248], "suppli": [4, 5, 15, 117, 221, 226, 230], "substr": 4, "regular": [4, 16, 56, 61, 68, 161, 164, 230, 232, 235, 236, 237, 248], "express": [4, 56], "subset": 4, "think": [4, 230], "search": [4, 56, 233], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 106, 107, 108, 213, 216, 218, 219, 221, 222, 223, 224, 226, 228, 230, 231, 233, 236, 243, 246, 247], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 116, 125, 127, 130, 132, 134, 140, 148, 165, 167, 170, 172, 174, 193, 201, 218, 221, 223, 224, 225, 226, 228, 230, 231, 237, 242, 248, 250], "singl": [4, 6, 16, 110, 190, 191, 194, 196, 217, 221, 223, 225, 228, 230, 236, 243, 245, 246], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 62, 72, 79, 83, 84, 99, 102, 104, 107, 108, 112, 125, 127, 150, 165, 205, 213, 214, 217, 221, 223, 227, 229, 230, 231, 242, 243, 246, 247, 248, 250], "instead": [4, 10, 12, 19, 99, 118, 122, 221, 223, 225, 226, 230, 232, 248, 250], "pass": [4, 6, 10, 11, 12, 15, 41, 72, 108, 109, 218, 221, 223, 224, 225, 226, 228, 248], "similarli": [4, 6, 210, 221, 226, 236, 248], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 55, 58, 86, 106, 111, 127, 133, 140, 160, 167, 176, 183, 190, 193, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 236, 238, 241, 249], "result": [4, 11, 15, 51, 63, 72, 107, 108, 122, 125, 136, 146, 153, 156, 158, 198, 213, 214, 221, 222, 225, 226, 228, 230, 231, 242, 243, 247, 250], "verbos": [4, 56, 58, 221, 230, 250], "about": [4, 5, 6, 10, 12, 15, 32, 87, 111, 125, 221, 223, 224, 225, 226, 230, 231, 233], "its": [4, 5, 6, 10, 14, 16, 32, 43, 93, 103, 218, 219, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 243, 248, 249], "descript": [4, 5, 230, 231, 240], "short": [4, 138, 191, 194, 221, 222, 223, 225, 230, 242], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 55, 82, 83, 84, 106, 125, 126, 127, 136, 138, 191, 194, 213, 217, 218, 219, 221, 222, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 248, 250], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 56, 60, 67, 73, 87, 127, 140, 172, 174, 193, 213, 219, 221, 223, 225, 230, 248, 249], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 60, 65, 67, 70, 73, 74, 82, 84, 86, 87, 93, 98, 99, 100, 101, 108, 125, 127, 128, 132, 134, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 225, 228, 229, 231, 237, 239, 249, 250], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 60, 67, 73, 87, 127, 140, 172, 174, 193, 221, 223, 230], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 98, 108, 210, 218, 221, 223, 224, 228, 229, 230, 240], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 106, 109, 110, 125, 127, 175, 212, 221, 223, 224, 226, 230, 239, 249], "built": [4, 12, 100, 101, 106, 210, 218, 226, 229, 231, 236, 248], "execut": [4, 6, 12, 15, 19, 100, 101, 106, 127, 210, 218, 221, 226, 230, 231, 232, 233, 234, 235, 236, 237, 248], "standalon": [4, 12, 121, 218, 226, 228, 229, 236], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 59, 77, 89, 96, 102, 104, 106, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 160, 161, 172, 181, 201, 210, 211, 213, 214, 216, 217, 218, 219, 221, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 245, 246, 247, 248, 249, 250], "befor": [4, 6, 12, 14, 38, 221, 224, 225, 226, 227, 230, 233, 237, 239, 243, 248], "w": [4, 226, 228, 230, 248], "num": 4, "f": [4, 7, 9, 12, 223, 225, 226, 230, 231, 237, 242, 245, 248], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 59, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 122, 127, 131, 132, 142, 145, 149, 155, 172, 174, 201, 210, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 233, 236, 237, 239, 242, 243, 247, 248, 249], "m": [4, 12, 61, 68, 69, 75, 213, 217, 224, 226, 230, 232, 233, 234, 235, 237, 239, 242, 243, 246, 248], "mach": [4, 32, 232, 233, 234, 235, 236, 237, 248], "p": [4, 226, 230, 231, 248], "suite_nam": [4, 6, 99, 101, 106, 248], "specifi": [4, 12, 14, 15, 16, 34, 212, 221, 226, 230, 231, 237, 242, 243, 247, 248], "either": [4, 5, 6, 10, 11, 12, 14, 62, 125, 210, 221, 226, 228, 230, 231, 239, 246, 248], "onli": [4, 5, 6, 12, 14, 15, 41, 122, 210, 212, 214, 217, 218, 221, 223, 225, 229, 230, 231, 233, 236, 237, 239, 241, 242, 243, 246, 248], "time": [4, 5, 6, 12, 15, 16, 32, 41, 54, 110, 125, 132, 140, 150, 169, 182, 185, 193, 212, 213, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 231, 233, 237, 248, 250], "wai": [4, 5, 11, 12, 32, 64, 69, 122, 125, 221, 223, 224, 225, 226, 227, 229, 230, 236, 239, 246], "altern": [4, 11, 248], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 100, 101, 145, 155, 218, 219, 221, 222, 223, 224, 225, 226, 230, 231, 236, 242, 243, 246, 247, 248], "case_numb": 4, "multipl": [4, 5, 12, 15, 211, 222, 225, 226, 230, 236, 242, 248], "separ": [4, 5, 7, 12, 14, 15, 221, 222, 228, 230, 243, 248], "space": [4, 5, 7, 11, 216, 221, 226, 230, 233, 236, 248], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 87, 127, 140, 183, 193, 210, 218, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 236, 239, 240, 247, 248, 249], "few": [4, 11, 12, 19, 29, 32, 39, 83, 84, 122, 127, 213, 216, 217, 221, 225, 230, 231, 236], "basic": [4, 5, 231, 233, 236, 248], "piec": [4, 218, 230], "inform": [4, 5, 6, 32, 87, 108, 117, 181, 221, 223, 226, 231, 233, 240, 248], "abl": [4, 118, 119, 120, 121, 123, 125, 221, 222, 224, 226, 230, 236, 248], "place": [4, 12, 15, 109, 221, 223, 230, 236], "download": [4, 6, 8, 32, 34, 40, 145, 155, 223, 225, 226, 231, 248, 250], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 212, 213, 219, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 248, 249, 250], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 93, 102, 104, 105, 109, 110, 111, 117, 122, 172, 202, 208, 209, 221, 226, 229, 231, 232, 233, 234, 235, 236, 248, 249, 250], "locat": [4, 12, 15, 16, 41, 100, 101, 106, 210, 221, 226, 228, 230, 231, 233, 236, 239, 242, 243, 248], "where": [4, 5, 12, 15, 32, 34, 41, 51, 55, 86, 100, 101, 106, 109, 125, 202, 205, 208, 209, 210, 218, 220, 221, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 246, 247, 248, 250], "There": [4, 11, 202, 208, 209, 217, 219, 221, 225, 226, 227, 230, 231, 248], "r": [4, 237, 243], "tell": [4, 226], "re": [4, 221, 225, 226, 228, 230, 231, 236, 237, 243], "leav": [4, 16, 214, 223, 231, 243], "unknown": [4, 122, 225, 236], "component_path": [4, 100, 101, 106, 210, 218, 231, 248], "absolut": [4, 7, 32, 34, 50, 100, 101, 106, 210, 218, 221, 226, 248], "landic": [4, 8, 10, 17, 34, 59, 106, 218, 220, 221, 223, 224, 226, 228, 229, 230, 231, 248, 249, 250], "e3sm_submodul": [4, 210, 218, 226, 230], "mali": [4, 122, 218, 221, 226, 228, 230, 231, 248, 249], "dev": [4, 5, 218, 220, 221, 224, 225, 226, 229, 240, 248], "albani": [4, 118, 120, 121, 122, 218, 231, 232, 233, 234, 237, 248], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 145, 155, 214, 223, 226, 228, 230, 231, 236, 237, 239, 243, 248, 249], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 100, 101, 106, 108, 109, 110, 113, 125, 127, 128, 140, 141, 142, 149, 161, 164, 168, 169, 184, 185, 193, 216, 221, 224, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248], "omega": [4, 25, 111, 127, 130, 181, 210, 218, 225, 226, 228, 230, 240, 245, 248], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 54, 55, 66, 68, 71, 82, 83, 84, 85, 86, 100, 101, 106, 108, 109, 111, 112, 113, 114, 116, 117, 122, 127, 130, 142, 149, 162, 169, 181, 185, 200, 202, 203, 204, 208, 209, 210, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 229, 239, 248, 249], "point": [4, 47, 53, 90, 210, 212, 218, 223, 224, 225, 226, 230, 231, 236, 248], "much": [4, 12, 221, 230], "config_fil": [4, 100, 101, 106], "work_dir": [4, 9, 15, 32, 41, 55, 86, 100, 101, 106, 107, 108, 221, 223, 230], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 66, 71, 73, 100, 101, 106, 122, 129, 131, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 249], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 74, 98, 103, 106, 108, 125, 172, 174, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 245, 247, 248], "recommend": [4, 5, 9, 16, 221, 222, 225, 226, 230, 236], "itself": [4, 5, 7, 32, 218, 220, 221, 223, 224, 226, 230, 248], "temp": 4, "scratch": [4, 226, 230, 233, 237, 248], "avoid": [4, 221, 230], "confus": [4, 12, 225, 226, 230], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 76, 77, 84, 87, 99, 108, 125, 127, 132, 145, 155, 164, 172, 177, 188, 201, 213, 216, 217, 223, 228, 231, 237, 248, 250], "compar": [4, 8, 15, 41, 100, 101, 106, 107, 108, 135, 137, 139, 147, 152, 157, 180, 192, 195, 214, 217, 222, 225, 226, 228, 230, 241, 242, 248, 250], "previou": [4, 15, 221, 226, 230, 241, 248, 250], "same": [4, 5, 7, 12, 15, 33, 34, 41, 107, 108, 125, 217, 219, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 246, 248, 249, 250], "baseline_dir": [4, 41, 100, 101, 106], "mani": [4, 6, 7, 125, 219, 221, 223, 225, 226, 228, 229, 230, 242, 247], "valid": [4, 5, 6, 8, 41, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 217, 225, 226, 229, 239, 242], "sure": [4, 10, 14, 15, 108, 122, 136, 146, 156, 210, 213, 221, 225, 226, 228, 230, 231, 236, 237, 242, 243], "timer": [4, 41, 44, 107, 222, 223, 225], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 85, 93, 108, 118, 120, 121, 127, 140, 183, 193, 210, 213, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 239, 242, 246, 248], "both": [4, 5, 6, 11, 12, 15, 24, 108, 125, 142, 149, 213, 220, 221, 224, 226, 229, 230, 231, 241, 245, 246], "custom": [4, 6, 11, 14, 50, 51, 100, 101, 106, 210, 218, 226, 231, 237, 248], "order": [4, 6, 11, 12, 125, 214, 218, 221, 222, 226, 230, 243, 246, 248], "give": [4, 12, 15, 221, 225, 226, 230, 231, 248], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 122, 125, 127, 202, 208, 209, 210, 213, 216, 218, 221, 223, 225, 226, 228, 230, 231, 236, 237, 239, 242, 243, 246, 248, 250], "after": [4, 5, 12, 14, 16, 32, 34, 35, 74, 93, 122, 203, 204, 210, 218, 221, 223, 226, 230, 231, 233, 237, 248], "c": [4, 101, 122, 221, 226, 232, 233, 234, 235, 236, 237, 241, 248, 250], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 83, 84, 94, 109, 213, 221, 223, 225, 226, 230, 247, 250], "resid": [4, 34], "test_suit": [4, 221], "build": [4, 8, 11, 12, 64, 69, 118, 119, 120, 121, 122, 123, 210, 214, 218, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237], "mpas_model": [4, 231], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 64, 67, 68, 69, 125, 145, 155, 175, 221, 223, 225, 230, 231, 237, 248], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 109, 122, 125, 210, 212, 221, 222, 223, 224, 226, 227, 228, 230, 231, 237, 243, 246, 247, 248, 249], "baselin": [4, 6, 8, 15, 41, 100, 101, 106, 107, 108, 135, 137, 139, 147, 152, 157, 163, 180, 192, 195, 213, 216, 217, 222, 225, 228, 230, 241, 248], "comparison": [4, 15, 41, 107, 108, 223, 230, 231], "against": [4, 6, 8, 15, 108, 163, 213, 216, 217, 221, 230, 241], "oppos": [4, 24, 128, 141, 142, 149, 161, 164, 168, 169, 184, 185, 230], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 36, 38, 39, 82, 83, 84, 87, 125, 127, 129, 131, 140, 183, 193, 213, 216, 221, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237], "parallel": [4, 14, 19, 29, 32, 38, 39, 127, 221, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 248, 249], "been": [4, 12, 15, 32, 41, 43, 93, 100, 101, 106, 118, 120, 121, 125, 164, 177, 188, 210, 218, 221, 223, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 248], "skip_step": 4, "wherea": [4, 10, 221, 230, 241, 249], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 99, 125, 218, 219, 221, 224, 226, 228, 230, 231, 236, 239, 246, 248, 249], "clone": [4, 210, 219, 226, 230, 248], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 122, 140, 183, 193, 213, 221, 222, 225, 226, 227, 230, 239, 242, 246, 250], "just": [4, 12, 19, 29, 32, 39, 56, 122, 127, 221, 225, 226, 228, 230, 233, 237], "pickl": [4, 6, 221, 230, 248], "latter": [4, 41, 122], "conveni": [4, 14, 202, 208, 209, 221, 228, 230, 231, 248], "tab": [4, 248], "complet": [4, 6, 21, 22, 23, 230, 248], "explicitli": [4, 5, 15, 125, 213, 216, 221, 226, 230, 231, 248], "select": [4, 6, 110, 221, 226, 230], "two": [4, 8, 146, 213, 214, 216, 217, 218, 221, 222, 224, 225, 226, 230, 242, 243, 245, 249], "edit": [4, 5, 108, 226, 230, 248], "steps_to_run": [4, 15, 41, 99, 108, 221, 223, 230, 231], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 60, 67, 73, 86, 87, 100, 101, 107, 108, 127, 140, 143, 148, 153, 158, 164, 167, 170, 172, 174, 177, 183, 186, 188, 193, 196, 198, 221, 223, 230, 231, 248], "initial_st": [4, 5, 16, 134, 212, 214, 221, 223, 225, 231, 242, 243, 245], "full_run": [4, 147, 242], "restart_run": [4, 147, 242], "Or": [4, 221, 231], "accomplish": [4, 221, 225], "thing": [4, 118, 119, 120, 121, 122, 123, 125, 221, 225, 229], "skip": [4, 6, 15, 108, 223, 250], "take": [4, 5, 9, 11, 12, 15, 50, 221, 222, 224, 226, 230, 243, 250], "preced": [4, 50], "over": [4, 7, 12, 50, 109, 221, 225, 229, 230, 239, 242, 246, 248], "special": [4, 228, 247], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 127, 221, 236], "polaris_cach": [4, 6, 17, 221], "symlink": [4, 6, 12, 32, 34, 223, 225, 226], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 77, 145, 155, 213, 216, 217, 230, 246], "structur": [4, 11, 25, 130, 220, 223, 229, 230], "without": [4, 15, 34, 221, 225, 226, 230, 231, 235, 236, 245, 247, 248], "redund": [4, 202, 208, 209, 213, 230], "stamp": 4, "revis": [4, 230, 231], "remov": [4, 12, 15, 99, 213, 216, 226, 230], "older": 4, "ones": [4, 202, 208, 209, 225, 230], "version": [4, 13, 27, 50, 86, 107, 108, 210, 213, 218, 219, 221, 224, 225, 226, 229, 230, 231, 236, 237, 240, 242, 243, 248], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 36, 41, 45, 49, 50, 56, 60, 61, 64, 67, 68, 69, 73, 79, 82, 84, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 130, 133, 136, 140, 143, 146, 148, 153, 156, 158, 160, 161, 164, 167, 170, 172, 174, 176, 177, 183, 186, 188, 190, 193, 196, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 242, 243, 245, 247, 248], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 103, 121, 129, 140, 193, 210, 213, 216, 221, 227, 229, 230, 248], "cached_fil": [4, 17, 221], "json": [4, 6, 17, 48, 221, 237], "anvil": [4, 122, 221, 231, 236, 248], "chrysali": [4, 122, 221, 230, 231, 236, 248], "sinc": [4, 12, 15, 117, 125, 213, 221, 223, 225, 226, 230, 242, 243, 245, 247], "copi": [4, 6, 34, 48, 100, 101, 106, 230, 233, 248], "onto": [4, 226], "lcrc": [4, 6, 9, 48, 221, 225, 231, 232, 234, 236, 248], "server": [4, 6, 34, 48, 221, 225, 231, 237], "whose": [4, 221], "global_ocean": [4, 7, 9, 12, 218, 221, 223, 225, 226, 231, 248, 250], "qu240": [4, 12, 221, 225, 226, 231, 248, 250], "mesh": [4, 5, 8, 14, 19, 32, 77, 89, 96, 110, 125, 127, 128, 129, 131, 138, 141, 143, 161, 164, 165, 167, 168, 170, 172, 174, 177, 181, 184, 186, 188, 191, 194, 196, 202, 208, 209, 212, 213, 216, 217, 219, 221, 223, 224, 225, 226, 228, 229, 231, 239, 241, 248, 250], "phc": [4, 221, 239, 250], "init": [4, 12, 16, 29, 39, 210, 218, 221, 223, 225, 226, 230, 231, 248, 250], "ocean_cached_fil": 4, "pr": [4, 248, 250], "look": [4, 5, 9, 15, 224, 225, 230, 231], "someth": [4, 5, 88, 92, 95, 226, 230], "culled_mesh": [4, 221, 230], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 87, 221, 223, 225, 230], "210803": 4, "culled_graph": [4, 221, 230], "info": [4, 10, 12, 19, 26, 77, 127, 221, 230], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 221], "date_str": [4, 48], "let": [4, 221, 226, 228, 230, 231, 237], "string": [4, 7, 12, 34, 91, 97], "choos": [4, 221, 225, 226, 230, 232, 233, 234, 235, 237, 249], "todai": [4, 48], "dry_run": [4, 48], "saniti": [4, 230], "check": [4, 15, 108, 226, 228, 230, 231, 233, 237, 248, 250], "print": [4, 10, 15, 56, 108, 113, 221, 225, 250], "stdout": [4, 10, 32, 41, 221], "translat": [4, 25, 125, 130], "compass": [4, 87, 210, 221, 225, 228, 230], "convert": [4, 7, 11, 12, 125, 221, 230], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 100, 101, 106, 116, 117, 127, 130, 131, 142, 145, 149, 155, 210, 213, 214, 216, 218, 221, 223, 224, 225, 229, 230, 231, 246], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 111, 116, 117, 131, 142, 145, 149, 155, 210, 212, 213, 216, 217, 218, 221, 223, 224, 225, 231, 247], "yaml": [4, 8, 19, 20, 23, 24, 25, 127, 130, 131, 142, 149, 213, 216, 217, 221, 229, 230, 233, 237], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 111, 122, 125, 130, 210, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 237, 239, 242, 243, 245, 246, 247, 248, 249, 250], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 111, 122, 125, 130, 210, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 239, 242, 243, 245, 246, 247, 248, 250], "forward": [4, 5, 12, 15, 32, 132, 138, 139, 148, 150, 152, 180, 191, 192, 194, 195, 210, 218, 221, 223, 225, 231, 242, 243, 245, 247], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 212, 221, 223, 225, 226, 230, 233, 235, 237, 248], "don": [4, 5, 12, 125, 221, 223, 225, 226, 230, 235, 248, 249], "format": [4, 5, 9, 11, 12, 111, 117, 221, 222, 223, 224, 226, 230, 231, 233], "note": [4, 5, 14, 15, 193, 230, 237], "keyword": [4, 5, 12, 15, 16, 214, 221, 223, 243], "top": [4, 16, 202, 203, 204, 205, 206, 207, 208, 209, 212, 219, 230, 239], "ignor": [4, 91, 97], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 54, 62, 82, 93, 98, 122, 125, 127, 220, 221, 223, 224, 225, 226, 228, 231, 239, 248], "pars": [4, 7, 12, 20, 21, 22, 23, 79, 102, 104], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 108, 109, 110, 113, 130, 150, 213, 218, 221, 223, 224, 225, 229, 230, 231, 239, 242, 243, 246], "doesn": [4, 7, 117, 221, 223, 230, 231, 236, 248], "matter": [4, 230], "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 55, 109, 110, 221, 223, 230], "myst": [5, 230], "tip": [5, 226], "easi": [5, 34, 225, 230], "start": [5, 6, 12, 103, 212, 213, 222, 224, 225, 229, 233, 236, 237, 240], "exist": [5, 7, 25, 32, 35, 53, 102, 104, 106, 130, 213, 221, 225, 226, 227, 230, 236, 250], "tree": [5, 102, 104, 117], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 133, 134, 136, 138, 140, 146, 150, 153, 156, 158, 160, 161, 176, 179, 190, 191, 194, 198, 210, 213, 214, 216, 217, 218, 219, 220, 221, 223, 228, 229, 231, 232, 234, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250], "pull": [5, 225, 226, 230, 231], "request": [5, 12, 19, 26, 28, 127, 203, 204, 221, 225, 226, 227, 230, 231, 243], "guid": [5, 125, 213, 216, 217, 222, 225, 230, 233, 236, 240], "baroclinic_channel": [5, 12, 15, 210, 215, 218, 221, 223, 224, 225, 228, 230, 240, 244, 248, 249, 250], "label": [5, 109, 236, 248], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 122, 127, 214, 218, 221, 223, 224, 225, 226, 228, 230, 235, 236, 241, 248, 249], "baroclin": [5, 45, 133, 134, 136, 138, 140, 143, 146, 150, 153, 156, 158, 193, 198, 213, 221, 223, 224, 230, 242], "channel": [5, 45, 133, 134, 136, 138, 140, 143, 146, 150, 153, 156, 158, 193, 198, 213, 221, 223, 227, 230, 242], "And": [5, 12, 226, 230], "becom": [5, 221, 223, 230], "who": [5, 226, 230, 231, 237], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 67, 91, 97, 100, 101, 106, 122, 210, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 231, 236, 239, 242, 243, 246, 249, 250], "brief": [5, 230], "overview": [5, 229, 233, 237], "comment": [5, 222, 231], "appli": [5, 11, 12, 56, 212, 224, 230, 242, 246, 247], "vertic": [5, 16, 212, 213, 216, 217, 221, 231, 238, 240], "grid": [5, 11, 14, 61, 68, 72, 75, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 125, 172, 200, 201, 202, 203, 204, 205, 208, 209, 213, 214, 216, 217, 221, 230, 231], "initi": [5, 6, 32, 110, 132, 135, 138, 143, 160, 170, 186, 191, 194, 196, 213, 214, 216, 217, 221, 223, 224, 225, 227, 228, 229, 231, 239, 241, 249], "condit": [5, 32, 135, 138, 143, 160, 170, 186, 191, 194, 196, 213, 214, 216, 217, 221, 222, 223, 224, 225, 228, 229, 231, 241, 249], "forc": [5, 15, 217, 230, 249], "common": [5, 7, 10, 38, 41, 45, 213, 214, 216, 217, 221, 222, 223, 224, 225, 227, 228, 230, 231, 236, 237, 248, 249, 250], "refer": [5, 12, 32, 132, 150, 202, 205, 208, 209, 221, 223, 225, 226, 228, 229, 230, 239, 242, 248], "awar": [5, 122, 218, 230, 236], "wish": [5, 12, 221, 226, 230, 248, 250], "test_group_nam": 5, "specif": [5, 7, 12, 43, 122, 210, 218, 219, 224, 229, 230, 231, 233, 236, 242, 247, 248, 250], "share": [5, 16, 125, 134, 210, 213, 216, 217, 218, 219, 221, 223, 224, 226, 229, 232, 233, 234, 235, 236, 237, 238, 242, 247, 248], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 61, 68, 122, 125, 134, 145, 155, 221, 223, 224, 225, 229, 230, 243, 249], "public": [5, 9, 221, 230, 231], "api": [5, 10, 229, 230], "underscor": [5, 230], "md": [5, 230], "eval": 5, "rst": [5, 12, 230], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 134, 136, 138, 146, 150, 156, 213, 218, 223, 230], "baroclinicchanneltestcas": [5, 213], "compute_cell_count": [5, 125, 213, 216, 230], "dynamic_model_config": [5, 213, 216, 230], "initialst": [5, 213, 216, 217, 221, 223, 230], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 125, 128, 141, 142, 149, 168, 169, 184, 185, 213, 216, 217, 223, 225, 226, 228, 229, 230, 231, 243, 248, 249], "across": [5, 12, 16, 213, 221, 222, 223, 224, 225, 226, 228, 230, 238, 242, 243], "ot": [5, 230], "automat": [5, 7, 10, 12, 16, 125, 221, 223, 225, 226, 230, 231, 232, 234, 235, 236, 237, 248], "python": [5, 6, 7, 20, 38, 43, 219, 221, 223, 224, 225, 226, 228, 229, 230, 231, 236, 237, 248], "begin": [5, 15, 213, 221, 226, 229, 230, 236, 242, 243, 246], "numpydoc": [5, 230], "text": [5, 6, 242, 243, 246], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 125, 202, 204, 205, 206, 207, 208, 209, 210, 216, 223, 230, 231, 233, 237, 245], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 72, 122, 125, 127, 128, 132, 141, 165, 168, 181, 184, 205, 206, 207, 213, 214, 216, 217, 221, 226, 233, 234, 236, 237, 242, 245, 248], "pressur": [5, 210, 231, 245], "overli": [5, 230], "ic": [5, 125, 210, 225, 226, 229, 230, 231, 233, 239, 249], "shelf": [5, 125, 224, 225, 230, 231, 239], "draft": [5, 239], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 67, 72, 73, 75, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 125, 127, 128, 130, 132, 134, 136, 138, 140, 141, 142, 143, 146, 148, 149, 150, 153, 156, 158, 161, 164, 165, 167, 168, 169, 170, 172, 174, 177, 179, 181, 182, 183, 184, 185, 186, 188, 193, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 221, 223, 224, 242, 243, 245, 246], "xarrai": [5, 14, 16, 110, 202, 203, 204, 205, 206, 207, 208, 209, 221, 230], "dataarrai": [5, 181, 182, 203, 204, 205, 206, 207, 221], "sea": [5, 125, 181, 182, 204, 205, 206, 207, 210, 230, 231, 239, 245], "surfac": [5, 125, 181, 182, 204, 205, 206, 207, 210, 212, 217, 230, 231, 239, 242, 245, 246], "height": [5, 125, 181, 182, 204, 205, 206, 207, 210, 230, 231, 239, 245], "mask": [5, 202, 205, 208, 209, 221, 230, 231, 239], "landicepressur": [5, 223], "deviat": 5, "float": [5, 7, 12, 20, 60, 62, 63, 67, 72, 92, 108, 110, 134, 136, 138, 140, 143, 146, 150, 153, 156, 165, 181, 182, 183, 186, 193, 194, 196, 221, 223, 230], "densiti": [5, 11, 125, 230], "seawat": 5, "displac": 5, "land": [5, 125, 210, 229, 230, 231, 239, 249], "landicedraft": 5, "equal": [5, 217, 221, 225, 246], "entri": [5, 47, 80, 100, 101], "alwai": [5, 7, 10, 15, 50, 125, 210, 218, 221, 225, 226, 230, 231], "own": [5, 6, 9, 10, 16, 32, 221, 223, 225, 226, 228, 230, 231, 243, 248, 249], "line": [5, 8, 30, 32, 83, 84, 94, 221, 222, 225, 226, 229, 248], "type": [5, 12, 14, 16, 20, 89, 96, 117, 191, 194, 196, 221, 223, 224, 225, 226, 227, 228, 230, 231, 242, 243, 245, 246, 247, 250], "side": 5, "colon": 5, "doubl": [5, 125, 221, 222, 230], "back": [5, 230, 233, 248], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 63, 85, 210, 225, 226, 227, 230, 231, 248], "arg": [5, 10, 32, 83, 84, 221], "indic": [5, 6, 12, 14, 15, 32, 33, 101, 108, 110, 205, 219, 221, 227, 230, 231, 239, 246], "On": [5, 11, 226, 236], "next": [5, 224, 230, 239, 248], "indent": [5, 221], "obviou": [5, 12, 230], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 55, 56, 58, 60, 67, 73, 77, 86, 87, 88, 91, 92, 95, 97, 99, 101, 102, 106, 107, 108, 109, 110, 112, 116, 127, 128, 140, 141, 168, 183, 184, 193, 221, 230, 239, 242, 243, 245, 246, 247], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 79, 102, 112, 113, 130, 142, 149, 223, 225, 230, 231, 248], "els": [5, 6, 221, 230], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 108, 109, 110, 113, 118, 119, 120, 121, 123, 125, 127, 194, 212, 221, 223, 224, 226, 230, 231, 232, 233, 234, 235, 236, 237, 242, 248, 249], "further": [5, 223, 224, 237, 247], "necessari": [5, 11, 218, 230], "rais": [5, 7, 15, 32, 35, 51, 53, 108, 125, 221, 223, 224, 225, 230], "list_cas": 6, "list_machin": [6, 225], "list_suit": 6, "anywher": [6, 10, 226], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 79, 102, 107, 108, 111, 112, 116, 117, 181, 218, 223, 224, 225, 230], "later": [6, 15, 19, 29, 32, 39, 50, 108, 127, 221, 230, 231], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 78, 79, 111, 125, 212, 221, 223, 230], "properti": [6, 12, 212, 221, 236, 243], "clean_cas": 6, "delet": [6, 225, 226, 227, 248], "constant": [6, 60, 67, 68, 125, 212, 230, 242, 243, 245, 246, 247], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 111, 201, 221, 223, 226, 230], "out": [6, 11, 81, 85, 110, 219, 221, 225, 226, 231, 239, 248], "proven": [6, 8, 50, 229, 231], "save": [6, 16, 51, 75, 213, 221, 223, 224, 230, 236, 241, 242], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 36, 41, 45, 50, 79, 82, 86, 101, 102, 108, 111, 112, 113, 130, 214, 221, 223, 224, 225, 230, 243], "target": [6, 9, 14, 19, 34, 53, 55, 87, 122, 125, 127, 213, 216, 221, 223, 230, 243], "minimum": [6, 55, 110, 125, 127, 213, 216, 221, 230, 231, 239, 242, 243, 245, 246, 247], "determin": [6, 11, 12, 16, 34, 38, 41, 117, 125, 131, 213, 214, 216, 221, 224, 230, 239, 242, 243, 245, 247, 248], "maximum": [6, 15, 108, 110, 230, 231, 239], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 83, 84, 87, 125, 127, 140, 183, 193, 221, 223, 230], "cpus_per_task": [6, 12, 32, 36, 39, 83, 84, 221], "attribut": [6, 10, 11, 12, 15, 38, 91, 97, 216, 224, 230], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 230, 239, 242, 243, 245, 246, 247], "runtim": [6, 24, 38, 125, 128, 141, 142, 149, 168, 169, 184, 185, 221, 223, 230], "min_task": [6, 12, 14, 19, 29, 32, 39, 83, 84, 87, 125, 127, 140, 183, 193, 221, 223, 230], "min_cpus_per_task": [6, 12, 32, 39, 83, 84, 221], "fewest": 6, "least": [6, 11, 15, 218, 226], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 108, 127, 140, 183, 193, 221, 229, 230, 231, 243, 245], "run_test": [6, 221, 223], "run_single_step": 6, "oper": [6, 40, 145, 155, 221, 223, 250], "log": [6, 8, 15, 16, 32, 41, 84, 108, 109, 110, 221, 223, 226, 229, 248], "figur": [6, 217, 219, 221, 224, 231], "cpu": [6, 12, 122, 221, 230, 248], "per": [6, 12, 19, 29, 31, 32, 39, 83, 84, 125, 127, 221, 230, 231, 232, 233, 234, 235, 236, 237, 242, 243, 245, 247], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 59, 60, 64, 67, 68, 69, 73, 74, 87, 93, 111, 125, 126, 127, 128, 130, 133, 134, 136, 138, 140, 141, 142, 143, 146, 148, 149, 150, 153, 156, 158, 160, 161, 164, 167, 168, 169, 170, 172, 174, 175, 176, 177, 179, 181, 183, 184, 185, 186, 188, 190, 191, 193, 194, 196, 198, 213, 214, 216, 218, 221, 223, 225, 230, 243, 247], "wa": [6, 15, 51, 107, 108, 122, 135, 137, 139, 147, 152, 157, 180, 192, 195, 221, 223, 225, 226, 227, 230, 231, 239, 248], "retriev": [6, 227], "store": [6, 15, 43, 125, 216, 221, 223, 230, 248], "dure": [6, 9, 12, 24, 32, 41, 125, 128, 141, 142, 149, 168, 169, 184, 185, 221, 223, 225, 226, 230, 231, 248, 249, 250], "txt": [6, 106, 222, 227], "case_output": [6, 10], "individu": [6, 7, 16, 108, 223, 225, 230, 236, 237, 242, 248, 249], "involv": [6, 12, 15, 108, 221, 223, 228, 230], "implement": [6, 7, 213, 214, 216, 217, 225, 242, 243, 245], "termin": [6, 15, 221, 226, 230], "window": 6, "update_cach": 6, "_cached_fil": [6, 221], "map": [6, 14, 17, 25, 67, 68, 87, 109, 110, 130, 172, 174, 214, 226, 231], "origin": [6, 48, 226, 230, 248], "enabl": [6, 16, 221, 227, 231, 237, 245], "consum": [6, 221, 223, 230, 250], "faster": [6, 226], "debug": [6, 118, 119, 120, 121, 123, 230, 232, 233, 234, 235, 237], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 213, 216, 217, 220, 221, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 246, 247, 248, 250], "mpas_tool": [7, 10, 11, 72, 213, 216, 217, 221, 230], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 54, 55, 82, 85, 86, 109, 181, 200, 202, 203, 204, 208, 209, 230], "certain": [7, 15, 50, 221, 226, 231, 247], "add_from_packag": [7, 225, 230], "content": [7, 12, 102, 104, 117, 219, 221, 225, 230, 248], "found": [7, 12, 112, 225, 226, 229, 230, 232, 233, 234, 235, 236, 237], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 75, 125, 218, 221, 223, 224, 225, 230, 231], "cfg": [7, 43, 218, 223, 224, 225, 230, 231, 248], "except": [7, 15, 32, 35, 51, 108, 221, 225, 230], "first": [7, 12, 100, 101, 213, 216, 217, 221, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 242, 243, 246, 248], "second": [7, 11, 12, 140, 193, 217, 221, 225, 242, 246], "know": [7, 9, 11, 125, 221, 225, 226, 230], "behavior": [7, 12, 99, 221, 222, 223, 226, 230], "noth": [7, 227, 243], "being": [7, 24, 32, 41, 98, 101, 108, 128, 141, 142, 149, 168, 169, 184, 185, 221, 223, 224, 225, 226, 230, 239], "test_group": [7, 17, 18, 32, 41, 134, 136, 138, 146, 150, 156, 161, 179, 191, 194, 221, 223, 224, 230], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 56, 58, 98, 99, 101, 106, 108, 110, 125, 127, 196, 198, 212, 221, 223, 224, 230, 231, 233, 235, 237, 242], "happen": [7, 10, 12, 14, 108, 221, 223, 230, 243], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 59, 60, 67, 73, 87, 111, 125, 126, 127, 133, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 158, 160, 161, 164, 167, 170, 172, 174, 175, 176, 177, 179, 181, 183, 186, 188, 190, 191, 193, 194, 196, 198, 210, 213, 214, 216, 217, 218, 221, 223, 224, 230], "larg": [7, 15, 221, 223, 230, 232], "those": [7, 12, 15, 41, 107, 108, 122, 223, 224, 225, 226, 229, 230, 243, 247, 250], "configpars": [7, 83, 84, 224], "getinteg": 7, "getfloat": [7, 10, 12, 14, 221, 230], "getboolean": [7, 221, 230], "getlist": [7, 230], "comma": [7, 243], "integ": [7, 11], "boolean": [7, 110, 205], "etc": [7, 12, 103, 106, 218, 221, 223, 242], "getexpress": 7, "tupl": 7, "rang": [7, 110, 230, 243], "numpi": [7, 11, 61, 68, 69, 75, 109, 125, 132, 200, 201, 221, 230], "linspac": [7, 16, 214, 243], "arang": 7, "arrai": [7, 61, 68, 69, 75, 109, 125, 200, 201, 203, 204, 205, 206, 230], "One": [7, 11, 230, 248, 250], "advantag": [7, 12, 122, 225, 230, 236], "track": [7, 19, 221, 223, 226], "associ": [7, 11, 12, 16, 202, 208, 209, 213, 223, 224, 226, 228], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 60, 67, 73, 87, 127, 133, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 158, 160, 161, 164, 167, 170, 172, 174, 176, 177, 179, 183, 186, 188, 190, 191, 193, 194, 196, 198, 218, 221, 223, 224, 225, 230, 250], "command": [8, 13, 30, 32, 38, 83, 84, 86, 94, 221, 225, 226, 228, 229, 230, 233, 236, 237, 248], "while": [8, 14, 16, 212, 213, 221, 224, 227, 228, 230], "meant": [8, 225, 231], "simplifi": 8, "verifi": [8, 222, 231], "io": [8, 221, 223, 225, 229, 230, 231, 240], "remap": [8, 16, 172, 214, 229, 243, 247], "visual": [8, 11, 14, 164, 188, 214, 216, 221, 223, 224, 228, 229, 243, 245, 247], "lot": [9, 125, 221, 225, 230], "o": [9, 10, 102, 104, 117, 225, 226, 230, 231, 248], "relat": [9, 11, 12, 125, 210, 213, 216, 217, 221, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 246, 247, 248], "handl": [9, 10, 223, 226, 230, 236], "intern": [9, 19, 41, 221, 226, 227], "lower": [9, 223, 230, 242], "directli": [9, 11, 12, 14, 32, 219, 221, 225, 228, 229, 230, 233], "aren": [9, 32, 33, 221, 225, 226, 230, 250], "readm": [9, 223], "importlib": [9, 223], "resourc": [9, 12, 29, 36, 39, 52, 82, 83, 84, 128, 140, 141, 168, 184, 193, 213, 216, 221, 223, 230], "import": [9, 10, 11, 12, 14, 16, 218, 221, 223, 224, 225, 226, 228, 230], "files_for_e3sm": [9, 223, 231], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 127, 132, 134, 140, 148, 165, 167, 170, 172, 174, 193, 201, 221, 223, 224, 230], "did": [9, 15, 108, 230], "add_input_fil": [9, 14, 33, 221, 223, 230], "collect": [9, 45, 90, 126, 218, 220, 228, 230], "though": [9, 32, 223, 225, 230], "whenev": [9, 221, 230], "flexibl": [9, 214, 223, 226, 230], "care": [9, 11, 221, 224, 226, 230], "No": [9, 229, 245], "step_dir": 9, "database_root": [9, 221, 231, 232, 233, 234, 235, 236, 237, 248], "download_path": 9, "join": [9, 230], "bathymetry_databas": [9, 221, 231], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 205, 221, 224, 230, 239, 242, 243, 245, 246, 247, 249], "url": [9, 34, 51, 221, 227, 231], "web": [9, 221, 231], "anl": [9, 221, 231], "gov": [9, 221, 227, 231, 233, 237], "mpas_standalonedata": [9, 231, 236], "dest_path": [9, 51], "remot": [9, 34, 226], "bathymetri": [9, 221, 231], "strategi": 10, "stderr": [10, 32, 41, 221], "loggingcontext": 10, "check_cal": [10, 221], "most": [10, 38, 122, 210, 218, 221, 224, 225, 226, 228, 230, 231, 236, 237, 239, 240, 249], "won": [10, 225, 230, 231], "logger": [10, 32, 41, 59, 84, 221, 223, 230], "full": [10, 32, 83, 99, 203, 204, 213, 214, 221, 223, 226, 229, 230, 236, 239, 241, 242, 243, 245, 246, 247, 248], "although": 10, "captur": 10, "insid": [10, 221, 225], "good": [10, 32, 221, 226, 230], "idea": [10, 230], "explicit": [10, 225], "go": [10, 221, 223, 224, 225, 226, 230, 237], "even": [10, 11, 12, 15, 34, 50, 122, 221, 225, 226, 230, 231, 236, 248], "subprocess": [10, 32, 83, 84, 98, 221, 225, 227], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 125, 136, 146, 156, 213, 214, 216, 217, 221, 225, 226, 230, 245, 248], "otherwis": [10, 15, 221, 223, 230, 232, 233, 234, 235, 236, 237, 242], "intent": 10, "desir": [10, 11, 12, 15, 16, 108, 125, 214, 221, 222, 230, 231, 248], "trick": [10, 221], "direct": [10, 11, 12, 72, 181, 213, 216, 223, 230, 237, 242, 245], "snippet": [10, 230], "dome": [10, 59, 221, 223, 224, 228, 248, 249], "setup_mesh": [10, 221], "setupmesh": [10, 221, 223], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 59, 122, 218, 224, 225, 226, 228, 230, 231], "mpas_grid": [10, 221], "landice_grid": [10, 221, 230], "l": [10, 108, 230, 237], "sever": [10, 221, 223, 224, 225, 226, 228, 229, 230, 247, 248, 250], "global": [11, 14, 45, 91, 92, 97, 160, 161, 214, 221, 222, 224, 225, 228, 229, 230, 231, 237, 243, 247, 248, 249], "quasiuniformsphericalmeshstep": [11, 214], "icosahedralmeshstep": [11, 214], "jigsaw": [11, 60, 64, 66, 67, 69, 71, 73, 161, 164, 221], "complex": [11, 15, 68, 223, 225, 230], "build_cell_width_lat_lon": [11, 67], "opt": [11, 73], "make_jigsaw_mesh": [11, 67], "icosahedr": [11, 60, 62, 161, 164, 243], "significantli": [11, 239], "smooth": 11, "cell": [11, 12, 16, 60, 61, 62, 63, 67, 68, 69, 72, 75, 89, 96, 125, 127, 128, 141, 165, 168, 181, 182, 184, 202, 203, 204, 205, 208, 209, 213, 216, 221, 223, 224, 239, 242, 243, 245, 246, 247], "quasi": [11, 67, 231, 243, 247], "hand": [11, 92, 225], "restrict": [11, 230, 247], "resolut": [11, 12, 14, 60, 63, 67, 68, 72, 88, 92, 95, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 161, 164, 165, 167, 177, 183, 186, 188, 191, 193, 194, 196, 213, 214, 216, 217, 219, 221, 223, 224, 231, 242, 243, 245, 246, 247, 249], "subdivis": [11, 60, 61, 62, 63, 64], "icosahedron": [11, 61, 62, 63, 64], "tabl": [11, 226, 236, 248], "approxim": [11, 60, 62, 63, 67, 125, 128, 141, 168, 184, 226, 230], "width": [11, 60, 61, 62, 67, 68, 69, 75, 230, 242], "km": [11, 60, 61, 62, 63, 67, 68, 69, 72, 75, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 167, 183, 186, 193, 194, 196, 213, 214, 216, 230, 231, 242, 243, 245, 246, 247, 249], "5": [11, 62, 125, 150, 213, 214, 221, 222, 223, 225, 227, 230, 231, 242, 243, 247, 248], "240": [11, 62, 214, 231, 243], "6": [11, 62, 221, 230, 240, 242, 246, 248], "120": [11, 62, 222, 243], "7": [11, 62, 230, 237, 243, 248], "60": [11, 12, 62, 214, 239, 243], "8": [11, 62, 213, 223, 226, 230, 231, 242, 243, 245, 248], "30": [11, 62, 224, 230, 237, 242, 243, 246, 247], "9": [11, 16, 62, 214, 230, 243, 248], "15": [11, 12, 62, 213, 230, 242, 243, 246, 247, 248], "10": [11, 15, 62, 210, 213, 216, 223, 224, 230, 231, 236, 239, 242, 245, 246, 249], "11": [11, 62, 230, 248], "3": [11, 62, 213, 221, 222, 224, 226, 227, 230, 231, 236, 237, 239, 242, 243, 245, 247, 248], "12": [11, 62, 230, 233], "13": [11, 62, 230, 242], "94": [11, 62], "spherical_mesh": [11, 68], "cell_width": [11, 60, 61, 62, 63, 67, 68, 69, 75], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 60, 67, 221, 230], "plot": [11, 75, 109, 110, 125, 153, 158, 172, 198, 213, 214, 216, 243, 245, 249], "plot_cell_width": 11, "cell_width_filenam": [11, 75], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 109, 172, 214, 231, 243], "lon": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 109, 172, 214, 231, 243], "sphere": [11, 214, 243], "vtk_lat_lon": 11, "far": [11, 202, 208, 209, 225, 230], "But": [11, 122, 221, 224, 225, 226, 230, 231, 236], "hexagon": [11, 72, 230, 245], "planar_hex": [11, 72, 213, 216, 217, 221, 230], "make_planar_hex_mesh": [11, 72, 213, 216, 217, 221, 230], "x": [11, 16, 61, 68, 69, 72, 75, 91, 97, 110, 132, 181, 221, 223, 230, 242, 245, 246], "y": [11, 12, 16, 72, 91, 97, 110, 181, 213, 216, 221, 223, 230, 237, 242, 245], "nx": [11, 72, 221, 224, 230], "ny": [11, 72, 221, 224, 230], "dc": [11, 221, 224, 230], "distanc": [11, 72, 230, 242], "adjac": [11, 239], "center": [11, 16, 72, 181, 224, 230, 239, 242], "admittedli": 11, "oddli": 11, "period": [11, 212, 213, 216, 221, 230, 242, 245], "nonperiodic_x": [11, 221, 230], "nonperiodic_i": [11, 221, 230], "consider": [11, 202, 208, 209, 212], "compute_planar_hex_nx_ni": [11, 230], "lx": [11, 72, 230, 242, 245, 246], "ly": [11, 72, 230, 242, 246], "explan": 11, "subtleti": 11, "account": [11, 72, 226, 230, 232, 233, 235, 236, 237, 248], "behav": 11, "stagger": [11, 72], "strictli": [11, 225, 230], "physic": [11, 72, 230], "howev": [11, 221, 222, 223, 226, 230], "np": [11, 16, 214, 230, 243], "sqrt": [11, 245], "domain": [11, 19, 26, 72, 110, 125, 127, 132, 212, 224, 230, 242, 243, 245, 246, 247, 249], "extra": [11, 226], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 224, 230], "max": [11, 125, 221, 230, 243], "int": [11, 12, 19, 20, 29, 32, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 83, 84, 87, 110, 127, 128, 140, 141, 161, 164, 165, 167, 168, 177, 183, 184, 188, 193, 221, 230, 246], "ds_mesh": [11, 16, 110, 230], "creation": [11, 221, 231], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 83, 84, 127, 221, 224, 225, 230], "distant": 11, "futur": [11, 38, 221, 225, 228, 229, 230, 231, 246, 248, 249], "descend": [12, 14, 125, 218, 221, 223, 224, 225, 230], "modelstep": [12, 125, 221, 223, 230], "update_pio": [12, 19, 127], "librari": [12, 118, 122, 226, 230, 232, 233, 234, 235, 236, 237, 248], "make_graph": [12, 19, 127], "mpi": [12, 14, 87, 118, 121, 122, 127, 129, 131, 213, 216, 221, 226, 227, 229, 230, 232, 233, 234, 235, 237, 248], "construct": [12, 126, 200, 202, 203, 204, 208, 209, 212, 217, 218, 223, 224, 230, 242], "non": [12, 15, 212, 221, 230, 248], "At": [12, 32, 41, 219, 220, 230], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 84, 127, 140, 156, 183, 193, 213, 221, 222, 228, 230, 231, 233, 237, 242], "openmp_thread": [12, 19, 29, 32, 39, 84, 127, 140, 183, 193, 221, 223, 230], "definit": [12, 230], "prefix": [12, 34, 226, 231], "end": [12, 213, 221, 223, 225, 226, 228, 230, 233, 242, 243, 245, 246], "yml": 12, "reason": [12, 14, 38, 221, 225, 230, 250], "add_namelist_fil": [12, 19, 125, 221, 223], "add_yaml_fil": [12, 19, 221, 223, 230], "add_model_config_opt": [12, 19, 221, 223, 230], "add_streams_fil": [12, 19, 125, 221, 223], "themselv": [12, 225, 229], "question": [12, 221, 231], "constructor": [12, 213, 216, 218, 224, 230], "simpli": [12, 50, 138, 191, 194, 218, 221, 223, 224, 226, 230, 239, 248, 250], "safe": [12, 15, 221, 226, 242], "never": [12, 228], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": [12, 230], "config_run_dur": [12, 223, 230], "0024_00": 12, "00": [12, 15, 223, 230, 237, 248], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 136, 228, 230], "config_block_decomp_file_prefix": [12, 230], "time_integr": [12, 230], "config_time_integr": 12, "rk4": [12, 225, 250], "filename_templ": [12, 230], "restart": [12, 41, 146, 148, 213, 216, 217, 222, 225, 228, 230, 242], "output_interv": [12, 230], "0030_00": 12, "clobber_mod": [12, 230], "truncat": [12, 230], "reference_tim": 12, "0001": [12, 230], "01": [12, 230, 246], "01_00": [12, 230], "tracer": [12, 16, 213, 214, 216, 217, 230, 243, 245, 246], "xtime": [12, 230], "normalveloc": [12, 15, 16, 137, 139, 147, 152, 157, 180, 192, 212, 213, 216, 217, 221, 230, 246], "layerthick": [12, 15, 125, 135, 137, 139, 147, 152, 157, 180, 192, 202, 206, 207, 208, 209, 213, 216, 217, 221, 223, 230], "refzmid": [12, 202, 208, 209, 221, 230], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15, 230], "clariti": [12, 221], "guarante": [12, 210, 226], "uniqu": [12, 223, 230], "global_converg": [12, 210, 215, 230, 240, 241, 244], "cosine_bel": [12, 230, 247], "substitut": 12, "config_write_output_on_startup": [12, 230], "0000_00": [12, 230], "config_use_mom_del2": [12, 230], "config_implicit_bottom_drag_coeff": [12, 230], "0e": [12, 246], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": [12, 230], "config_cvmix_background_viscos": [12, 230], "worri": 12, "sometim": [12, 202, 208, 209, 221, 223, 228, 230], "easier": [12, 221, 225, 226, 231, 248, 250], "togeth": [12, 228, 230, 250], "seem": [12, 230, 233, 237], "overkil": 12, "reli": [12, 221, 230], "differ": [12, 14, 15, 50, 64, 69, 108, 122, 125, 140, 150, 210, 213, 218, 219, 221, 222, 223, 224, 225, 228, 230, 231, 233, 237, 242, 243, 245, 247], "along": [12, 16, 213, 221, 223, 229, 230], "could": [12, 14, 16, 214, 221, 222, 223, 225, 226, 230, 243], "nu": [12, 140, 153, 193, 213, 221, 223, 230], "viscos": [12, 140, 150, 153, 213, 221, 223, 225, 230, 242], "hmix": 12, "config_mom_del2": [12, 213, 221, 230], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 100, 101, 106, 108, 109, 113, 127, 128, 140, 141, 142, 149, 161, 164, 168, 169, 184, 185, 193, 230], "cannot": [12, 15], "known": [12, 32, 33, 214, 221, 230], "beforehand": 12, "particularli": [12, 227, 230, 247], "openmp": [12, 19, 29, 32, 39, 84, 118, 120, 121, 127, 140, 183, 193, 221, 230, 232, 233, 234, 235, 237], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 225, 228, 230, 242, 248], "complic": [12, 224, 225, 226, 230], "xml": [12, 102, 104, 105, 117, 228], "slightli": [12, 15, 226], "sophist": 12, "immutable_stream": [12, 230], "var_struct": 12, "var": [12, 103, 230], "var_arrai": 12, "tag": [12, 229], "taken": [12, 19, 127, 214, 221, 230, 237, 248], "past": 12, "experi": [12, 122, 225, 239], "shown": [12, 219, 223, 246], "featur": [12, 225, 226, 228, 230, 231, 242, 246], "difficult": [12, 122, 236], "synchron": [12, 229], "equival": [12, 226, 230, 232], "try": [12, 53, 225, 226, 227, 230, 231, 233, 237, 248], "template_replac": [12, 22, 23], "treat": [12, 222, 225], "jinja2": [12, 22, 23, 102], "render": [12, 22, 23, 102], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 231], "qu240dynamicadjust": 12, "seri": [12, 125, 153, 158, 198, 214, 216, 230, 241], "dynam": [12, 127, 160, 210, 217, 231, 242, 243, 246, 247], "adjust": [12, 125, 160, 210, 231], "durat": [12, 213, 216, 217, 222, 230], "interv": 12, "spin": 12, "reus": [12, 221, 225, 226, 230, 231, 248], "qualit": [12, 15], "affect": [12, 15, 221, 226, 230], "update_streams_at_runtim": 12, "fairli": [12, 223, 225, 226, 230], "hour": [12, 216, 222, 233, 237, 245, 248], "turn": [12, 32, 49, 221, 227, 230, 246], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 239, 242, 246], "minut": [12, 213, 222, 242, 250], "dai": [12, 150, 213, 214, 217, 223, 230, 242, 243, 246], "03d": 12, "_": [12, 87, 221, 223, 226, 230, 246], "02d": 12, "forgotten": 12, "broken": [12, 221, 225], "immedi": [12, 59, 226, 230], "miss": [12, 15, 221, 230, 231], "detect": [12, 16, 231, 232, 234, 235, 236, 248], "gpmeti": [12, 231], "divid": [12, 239], "partition_graph": [12, 19, 127], "circumst": [12, 15, 32, 33, 221, 230], "wast": 12, "manual": [12, 15, 41, 42, 221, 223, 249], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 36, 39, 54, 82, 83, 84, 122, 127, 221, 222, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 248], "v1": [12, 239], "better": [12, 14, 122, 248], "v2": [12, 231, 239], "littl": [12, 225, 226, 229, 230], "feel": [12, 221, 230], "runtime_setup": [12, 14, 29, 39, 213, 216, 223], "onc": [12, 213, 226, 230, 231, 243, 248], "yourself": [12, 230, 236], "fact": [12, 32], "culler": 12, "cull": [12, 213, 216, 221, 230], "model_step": [12, 221], "make_graph_fil": [12, 221], "field": [12, 15, 75, 77, 110, 172, 202, 208, 209, 212, 213, 216, 217, 230, 242, 243, 245], "weight": [12, 14, 77, 202, 208, 209, 230, 239], "weight_field": [12, 77], "frequent": [14, 210], "observ": [14, 229], "dataset": [14, 110, 181, 202, 208, 209, 221, 230], "region": [14, 16, 229, 231], "pyremap": [14, 93], "interpol": [14, 87, 214, 231], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 221, 226], "mappingfilestep": [14, 16], "woa": 14, "2023": [14, 245], "__init__": [14, 17, 19, 32, 41, 45, 50, 59, 60, 67, 73, 87, 111, 126, 127, 133, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 158, 160, 161, 164, 167, 170, 172, 174, 176, 177, 179, 181, 183, 186, 188, 190, 191, 193, 194, 196, 198, 218, 221, 223, 224, 225, 228, 230], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 239], "bilinear": [14, 87, 214, 243, 247], "filenam": [14, 34, 35, 81, 88, 89, 90, 91, 95, 96, 97, 108, 112, 114, 221, 226, 230], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 231], "destin": [14, 87, 88, 89, 90, 91, 92, 93], "src_from_lon_lat": 14, "lon_var": [14, 88, 90, 95], "lat_var": [14, 88, 90, 95], "dst_from_mpa": 14, "mesh_nam": [14, 88, 89, 90, 91, 92, 95, 96, 97, 165, 167, 170, 172, 174], "qu60": 14, "subclass": [14, 64, 67, 68, 69, 74, 125, 230], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 161, 172, 214], "super": [14, 218, 221, 223, 224, 225, 230], "128": [14, 222, 233, 234, 237], "cosine_bell_viz": [14, 16, 214, 243, 247], "dlon": [14, 92, 214, 243, 247], "dlat": [14, 92, 214, 243, 247], "remap_method": [14, 214, 243, 247], "src_from_mpa": 14, "dst_global_lon_lat": 14, "lon_min": [14, 92], "With": [14, 226], "approach": [14, 221, 224, 225, 226, 227, 230, 239], "perhap": [14, 16, 35, 224], "cover": [14, 230], "nearli": [14, 221, 228, 229, 230], "situat": [14, 25, 130, 230, 248], "workflow": [14, 221, 226], "critic": [15, 230], "compare_vari": [15, 223, 230], "filename1": [15, 108, 223, 230], "filename2": [15, 108, 230], "simpl": [15, 225, 230, 248], "temperatur": [15, 135, 137, 139, 147, 152, 157, 192, 195, 212, 213, 217, 221, 223, 230, 242, 243, 246, 247], "salin": [15, 135, 137, 139, 147, 152, 157, 192, 195, 212, 213, 217, 221, 223, 230, 242, 243, 246, 247], "prognost": [15, 242], "4proc": [15, 137, 230, 242], "8proc": [15, 137, 230, 242], "alter": [15, 203, 204, 221, 223, 229, 230, 239, 242, 243, 245, 246, 247], "skip_if_step_not_run": [15, 108, 223], "possibli": [15, 221, 226, 230], "failur": 15, "valueerror": [15, 223, 224, 225], "quiet": [15, 99, 108, 113], "report": 15, "threshold": [15, 243, 245], "l1": [15, 108], "00000000000000e": 15, "l2": [15, 108], "l_infin": 15, "linf": [15, 108], "home": [15, 226, 230, 231, 233, 236, 237], "xylar": [15, 230, 231, 236], "test_nightly_latest": 15, "10km": [15, 213, 223, 224, 230, 242, 248, 249, 250], "threads_test": [15, 230, 248, 250], "1thread": [15, 157, 213, 242], "2thread": [15, 157, 242], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 221, 223, 230], "disabl": [15, 16, 212, 243, 249], "check_output": [15, 108], "zero": [15, 203, 204, 205, 206, 207, 212, 213, 217, 230, 243, 246], "l1_norm": [15, 108], "l2_norm": [15, 108], "linf_norm": [15, 108], "nonzero": [15, 108], "easiest": [15, 226], "solut": [15, 121, 181, 182, 214, 216, 222, 227, 230, 245], "clobber": 15, "error": [15, 32, 41, 125, 165, 214, 216, 221, 226, 229, 230, 245], "judgment": 15, "enough": [15, 213, 221, 225, 230], "problem": [15, 221, 226, 227, 230], "compare_tim": 15, "integr": [15, 150, 213, 223, 225, 230, 242, 243, 247], "rundir1": [15, 107], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": [16, 230], "often": [16, 32, 221, 222, 223, 224, 225, 226, 228, 230, 231, 249, 250], "analysi": [16, 125, 213, 223, 225, 228, 229, 231, 243, 245, 249], "routin": 16, "viz": [16, 161], "plot_horiz_field": [16, 230], "patch": [16, 110, 230], "style": [16, 125, 229, 230], "edg": [16, 89, 92, 96, 110, 181, 212, 230], "polygon": 16, "character": 16, "accordingli": [16, 85], "d": [16, 110, 181, 202, 208, 209, 212, 221, 230, 246], "final_normalveloc": [16, 230], "t_index": [16, 110, 230], "vmin": [16, 110, 214, 230, 243], "max_veloc": [16, 230], "vmax": [16, 110, 214, 230, 243], "cmap": [16, 110, 230], "cmo": [16, 230], "balanc": [16, 230], "show_patch_edg": [16, 110, 230], "globe": [16, 214, 243], "plot_glob": 16, "plot_land": [16, 109], "contin": [16, 109], "overlain": 16, "usag": [16, 231, 233, 237], "cmocean": [16, 230], "noqa": [16, 59, 164, 167, 170, 188, 230], "f401": [16, 230], "xr": [16, 181, 182, 230], "open_dataset": [16, 221, 230], "tracer1": 16, "isel": 16, "nvertlevel": [16, 110, 202, 208, 209, 221, 230, 239], "out_filenam": [16, 105, 109, 201], "colormap_sect": [16, 109], "titl": [16, 109, 110], "colormap": [16, 109, 110, 214, 230, 243], "cosin": [16, 164, 167, 170, 172, 174, 214, 243, 247], "bell": [16, 164, 167, 170, 172, 174, 214, 243, 247], "converg": [16, 188, 214, 219, 222, 229, 230, 243, 247], "colormap_nam": [16, 109, 214, 243], "viridi": [16, 214, 230, 243], "norm": [16, 108, 109, 214, 243], "norm_typ": [16, 109, 214, 243], "linear": [16, 109, 110, 214, 216, 230, 242, 243, 245], "norm_arg": [16, 109, 214, 243], "colorbar": [16, 109, 110, 214, 243], "tick": [16, 109, 214, 243], "mark": [16, 214, 226, 243], "ll": [16, 214, 225, 230, 237, 243], "colorbar_tick": [16, 109, 214, 243], "matplotlib": [16, 230], "standard": [16, 225, 226, 230, 233, 248], "symlog": [16, 109], "symmetr": 16, "central": [16, 243], "logarithm": [16, 110], "color": [16, 110], "normal": [16, 181, 212, 221, 222, 226, 230, 236], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 221, 248], "dict": [17, 20, 22, 23, 25, 32, 36, 41, 45, 79, 80, 82, 86, 87, 101, 102, 109, 111, 112, 113, 130, 223, 230], "kei": [17, 41, 45, 101, 223], "cach": [17, 19, 32, 34, 100, 101, 127, 229, 231, 236, 241, 248, 250], "testgroup": [18, 32, 41, 224, 225, 230], "max_memori": [19, 29, 32, 39, 127], "mesh_filenam": [19, 77, 127], "graph_filenam": [19, 77, 127], "graph": [19, 26, 28, 38, 77, 127, 213, 216, 221, 230, 231], "make_yaml": 19, "pio": [19, 28, 31, 127, 213, 216], "stride": [19, 31, 127], "consist": [19, 31, 127, 210, 226, 230, 231, 242], "partit": [19, 28, 38, 54, 77, 127, 213, 216, 221, 231, 232, 233, 234, 235, 237, 248], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 83, 84, 87, 125, 127, 140, 183, 193, 221, 224, 225, 229, 230, 231, 249], "accommod": [19, 29, 32, 39, 83, 84, 127], "fewer": [19, 29, 32, 39, 83, 84, 127, 140, 183, 193, 221, 230, 248], "amount": [19, 29, 32, 39, 127, 221, 238, 246], "memori": [19, 29, 32, 39, 127, 221, 231], "mb": [19, 29, 32, 39, 127, 231], "placehold": [19, 29, 32, 39, 127, 221, 248], "at_setup": [24, 125, 128, 141, 142, 149, 168, 169, 184, 185, 230], "overridden": [25, 130, 221, 223, 230], "diverg": [25, 130], "counterpart": [25, 125, 130], "nest": [25, 111, 113, 130], "graph_fil": 26, "parent": [27, 218, 221, 224], "done": [29, 39, 221, 226, 230, 248], "run_as_subprocess": [32, 221], "smallest": [32, 221, 228, 239, 249], "unit": [32, 88, 92, 95, 221, 228, 242, 249], "term": [32, 228, 230, 245], "necessarili": [32, 34, 228], "input_data": 32, "until": [32, 33, 221, 223, 248], "finish": [32, 33, 74, 230], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 55, 86, 111, 221, 222, 223, 227, 230, 231, 248], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 221, 223], "base_work_dir": [32, 41, 221, 223], "log_filenam": [32, 41, 221], "redirect": [32, 221], "extern": [32, 210, 218, 221, 240], "access": [33, 223, 225, 226, 230, 232, 236, 237], "database_compon": [34, 221], "work_dir_target": [34, 221], "come": [34, 221, 226, 230, 232, 233, 234, 235, 236, 237, 240], "root": [34, 165, 210, 214, 216, 218, 221, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 239, 245, 248], "suffix": [34, 101, 221], "_database_root": 34, "append": 34, "available_resourc": [36, 82], "constrain": [36, 128, 141, 168, 184, 213, 216, 221, 230], "cores_per_nod": [36, 82, 85, 231, 232, 233, 234, 235, 236, 237, 248], "everi": [37, 175, 213, 221, 223, 225, 227, 228, 230, 242, 246], "child": [37, 175, 218, 221, 223, 225], "serial": [38, 221, 223, 229, 230, 248], "subtask": 39, "stdout_logg": 41, "goe": [41, 221, 230], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 132, 223, 225, 230, 248], "statu": 41, "run_by_default": [42, 221, 223], "assum": [43, 102, 112, 223, 226, 230, 237, 242], "prior": [43, 221, 223], "greenland": [45, 224, 228, 229, 249], "eismint2": 45, "step_path": 48, "variant": [48, 213, 222, 224, 225, 226, 230, 236, 239, 242, 243], "uncach": 48, "datestamp": 48, "yymmdd": [48, 231], "dry": [48, 222], "meta": 50, "empti": [50, 221, 225, 226, 228, 230], "link_nam": 53, "overwrit": 53, "stackoverflow": [53, 230], "55742015": 53, "7728169": [53, 230], "symbol": [53, 221], "fileexistserror": 53, "unless": [53, 99, 226], "isadirectoryerror": 53, "slurm": [54, 85, 221, 229, 231, 232, 233, 234, 235, 237, 248], "qo": [54, 232, 233, 235, 236, 237, 248], "qualiti": [54, 232, 233, 235, 236, 237, 248], "servic": [54, 232, 233, 235, 236, 237, 248], "constraint": [54, 237, 248], "wall_tim": [54, 248], "wall": [54, 248], "target_cor": 55, "min_cor": 55, "decomposition_test": [59, 224, 248], "decompositiontest": [59, 224], "e501": [59, 164, 167, 170, 188, 230], "turquois": [59, 233], "usr": [59, 233, 248], "climat": [59, 232, 233, 234, 236, 248], "mhoffman": 59, "latitud": [61, 68, 88, 90, 92, 95, 109, 214, 243, 247], "longitud": [61, 68, 69, 75, 88, 90, 92, 95, 109, 214, 243, 247], "ndarrai": [61, 68, 69, 75, 109, 132, 200, 201, 230], "degre": [61, 68, 69, 75, 92, 231, 242], "length": [61, 68, 69, 75], "180": [61, 68, 69, 75, 92, 243], "90": [61, 68, 69, 75, 221, 243], "static": [62, 63], "rule": 62, "thumb": 62, "achiev": [63, 222], "close": [63, 229, 243], "uniform": [67, 72, 167, 213, 214, 216, 224, 230, 231, 242, 243, 245, 246, 247], "natur": 72, "jigsawpi": [73, 221], "jigsaw_jig_t": 73, "meti": 77, "defaults_filenam": 78, "total": [82, 221, 222, 225, 230, 231, 233, 248], "substep": [83, 84], "command_line_arg": 83, "cpus_per_nod": 85, "map_filenam": 87, "src_grid_info": 87, "dst_grid_info": 87, "neareststod": [87, 214, 243, 247], "conserv": [87, 214, 243, 247], "map_": 87, "source_typ": 87, "dest_typ": 87, "1d": [88, 92, 95, 109, 125, 200, 201, 202, 203, 204, 205, 206, 208, 209], "2d": [88, 92, 95, 109], "5x0": [88, 92, 95], "5degre": [88, 92, 95], "coordin": [88, 90, 91, 95, 97, 109, 110, 181, 202, 208, 209, 238, 240, 242, 243, 245, 246, 247], "mesh_typ": [89, 96, 221, 223, 224], "vertex": [89, 96], "x_var": [91, 97], "y_var": [91, 97], "proj_attr": [91, 97], "proj_str": [91, 97], "proj": [91, 97], "left": [92, 125, 230, 239, 243], "remapp": [93, 94], "remap_fil": 93, "step_is_subprocess": 98, "is_test_cas": 99, "steps_to_skip": 99, "progress": 99, "cached_step": 100, "copy_execut": [100, 101, 106, 248], "serv": [100, 101, 106, 224, 230], "_all": [100, 101], "streams_filenam": 102, "lxml": [102, 104, 117], "etre": [102, 104, 117], "new_child": 103, "children": 103, "sub": [103, 230], "new_tre": 104, "rundir2": 107, "infin": 108, "toler": 108, "exclud": [108, 248], "data_arrai": 109, "colorbar_label": 109, "subtitl": 109, "field_nam": 110, "out_file_nam": 110, "ax": 110, "z_index": 110, "cmap_set_und": 110, "cmap_scal": 110, "cmap_titl": 110, "horizont": [110, 125, 194, 212, 213, 216, 217, 242, 245, 246], "planar": [110, 125, 212, 230, 245, 246, 247], "depth": [110, 125, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 230, 231, 239, 242, 243, 245, 246, 247], "slice": 110, "fieldnam": 110, "present": [110, 226, 230], "visibl": 110, "bar": 110, "classmethod": 112, "jinja": 112, "namelist_templ": 116, "polarisyaml": [116, 117], "processed_registry_filenam": 117, "registri": [117, 212], "steam": 117, "load_dev_polaris_0": [118, 119, 120, 121, 122, 123, 230], "alpha": [118, 119, 120, 121, 122, 123, 230], "1_anvil_intel_impi": [118, 122], "sh": [118, 119, 120, 121, 122, 123, 226, 227, 230, 232, 233, 234, 235, 237, 248], "openmpi": [118, 122, 226, 229, 232, 234, 235, 248], "mvapich": [118, 122, 232], "impi": [118, 122, 232, 235], "ifort": [118, 120, 122, 230, 232, 234], "ve": [118, 119, 120, 121, 123, 221, 226, 230], "1_anvil_gnu_openmpi": 118, "gfortran": [118, 120, 121, 122, 226, 232, 234], "load": [119, 122, 123, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237], "1_chicoma": 119, "cpu_gnu_mpich": [119, 123], "crai": [119, 122, 123, 233, 237], "1_chrysalis_intel_openmpi": 120, "1_chrysalis_gnu_openmpi": 120, "yet": [121, 125, 221, 225, 230], "again": [121, 210, 221, 226, 227, 248], "soon": [121, 230, 248], "1_compy_intel_impi": 121, "1_compy_gnu_openmpi": 121, "attempt": [122, 229, 236], "particular": [122, 224, 226, 229, 233, 236, 248], "activ": [122, 236, 237, 248], "load_polaris_env": [122, 226, 230, 248], "were": [122, 140, 193, 221, 225, 228, 230, 231, 235, 239], "job": [122, 226, 229, 230, 232, 233, 234, 235, 237], "right": [122, 125, 223, 226, 230, 231, 239, 243, 248], "therefor": [122, 221, 228, 230], "gnu": [122, 226, 235, 236, 248], "lib": 122, "intel": [122, 236], "chicoma": [122, 236, 248], "mpich": [122, 226, 229, 233, 237, 248], "compi": [122, 235, 248], "pm": [122, 237, 248], "compymcnodefac": [122, 236], "perlmutt": [122, 233, 236, 248], "pretti": [122, 221, 225, 230, 231], "forg": [122, 229, 248], "linux": [122, 226, 236], "configure_polaris_env": [122, 226, 227, 230], "conda_path": [122, 226], "osx": [122, 236], "clang": [122, 226], "had": 122, "1_": 122, "1_pm": 123, "ever": [125, 225], "expand": [125, 239], "oceanmodelstep": [125, 230], "decid": [125, 230], "veri": [125, 218, 221, 225, 226, 230, 246], "earli": [125, 240, 248], "stage": [125, 212, 221, 223, 226, 240, 248], "map_yaml_to_namelist": 125, "count": [125, 222], "heurist": 125, "exact": [125, 181, 182, 214, 216, 225, 245], "algorithm": [125, 140, 193, 213, 216, 221, 230], "200": [125, 216, 223, 230, 242, 245, 246], "round": [125, 243], "cell_count": [125, 128, 141, 168, 184, 230], "goal_cells_per_cor": [125, 230, 243, 245, 247], "pinch": 125, "2000": [125, 224, 230], "max_cells_per_cor": [125, 230, 243, 245, 247], "seciton": 125, "control": [125, 214, 221, 231, 242, 243, 246, 248], "scale": [125, 242, 248], "tri": [125, 225], "apport": 125, "precis": [125, 221, 230], "caviti": [125, 225, 230, 231, 239], "frazil": 125, "flux": [125, 212, 246], "grid_1d": 125, "generate_1d_grid": 125, "vertical_grid": [125, 200, 202, 208, 209, 224, 230, 231, 239, 242, 243, 245, 246, 247], "z": [125, 203, 204, 205, 206, 207, 208, 209, 230, 242, 243, 245, 246, 247, 250], "star": [125, 207, 209, 230, 242, 243, 245, 246, 247, 250], "init_vertical_coord": [125, 230], "minlevelcel": [125, 202, 204, 205, 206, 207, 208, 209, 230], "maxlevelcel": [125, 202, 203, 204, 205, 206, 207, 208, 209, 221, 230], "cellmask": [125, 202, 205, 208, 209, 230], "zmid": [125, 202, 208, 209, 230], "restingthick": [125, 202, 207, 208, 209, 221, 230], "bottomdepth": [125, 202, 203, 205, 206, 207, 208, 209, 221, 230], "entir": [125, 230, 242, 250], "petersen": [125, 226, 230, 242], "et": [125, 230, 239, 242, 243, 245], "al": [125, 230, 239, 242, 243, 245], "2015": [125, 230, 242], "int_": 125, "rho": 125, "dv": 125, "sort": [125, 219, 225, 226], "increas": [125, 225], "compute_rp": [125, 230], "csv": [125, 230], "dynamic_ntask": 127, "available_cor": 129, "estim": [129, 131, 230], "initial_state_file_nam": [132, 230], "output_fil": [132, 221, 230], "rest": [132, 207, 239, 243], "potenti": [132, 150, 221, 223, 230, 242], "energi": [132, 150, 223, 229, 230, 242], "netcdf": [132, 217, 231, 232, 233, 234, 235, 236, 237], "state": [132, 212, 213, 214, 216, 217, 221, 222, 230, 243], "len": [132, 221, 230], "superclass": [134, 213, 221], "run_time_step": [140, 193, 230], "resources_fix": [140, 193], "shouldn": [140, 193, 230], "dt": [140, 193, 230, 242, 243, 245, 247], "btr_dt": [140, 193, 230, 242], "barotrop": [140, 193, 230, 242, 246], "longer": [146, 213, 222, 230, 242, 243, 250], "shorter": [146, 222], "rpe": [150, 153, 158, 198, 223, 230, 242], "20": [150, 213, 222, 223, 230, 242, 246], "include_viz": 161, "less": [161, 164, 221, 239, 246], "globalocean": [161, 218], "cosinebel": [164, 167, 170, 214], "rmsevalu": 165, "squar": [165, 214, 216, 245], "ncell": [165, 221, 230], "viz_map": 172, "inerti": [176, 177, 179, 181, 183, 186, 188, 216, 240, 244], "graviti": [176, 177, 179, 181, 183, 186, 188, 216, 240, 244], "wave": [176, 177, 179, 181, 183, 186, 188, 216, 221, 230, 240, 242, 244], "analys": 177, "inertialgravitywav": [179, 216], "angleedg": 181, "angl": 181, "posit": [181, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 230, 239, 246], "xcell": [181, 221, 230], "ycell": [181, 221, 230], "xedg": [181, 221, 230], "yedg": 181, "f0": 181, "corioli": [181, 216, 230, 242, 243, 246], "eta0": 181, "amplitid": 181, "kx": 181, "ky": 181, "angular": 181, "frequenc": [181, 213], "evalu": 182, "eta": [182, 245], "column": [190, 191, 194, 196, 217, 226, 246, 248], "param": [191, 194, 196, 223, 224], "singlecolumn": [191, 194, 217], "iag": 195, "ideal_ag": [196, 198], "ivar": 196, "layer": [200, 201, 202, 206, 207, 208, 209, 212, 213, 216, 217, 230, 231, 239, 242, 243, 245, 246, 247], "meter": [200, 201], "bottom": [202, 203, 204, 205, 206, 207, 208, 209, 212, 230, 231, 239, 242, 243, 245, 246, 247], "thick": [202, 206, 207, 208, 209, 213, 217, 230, 231, 239, 242, 245], "stretch": [202, 208, 209, 230, 239], "elev": [202, 208, 209, 230, 239], "midpoint": [202, 208, 209, 230], "reftopdepth": [202, 205, 206, 208, 209, 230], "down": [202, 203, 204, 205, 206, 207, 208, 209, 214, 230, 239, 243], "ref": [202, 208, 209, 230], "middl": [202, 208, 209, 230], "refbottomdepth": [202, 203, 204, 205, 206, 208, 209, 221, 230], "refinterfac": [202, 208, 209, 230], "element": [202, 208, 209, 230], "vertcoordmovementweight": [202, 208, 209, 221, 230], "movement": [202, 208, 209, 230], "partial": [203, 204, 230, 239, 242, 243, 245, 246, 247], "seafloor": [203, 205, 206, 207, 239], "unstretch": 207, "shelv": [210, 231, 239], "ssh_adjust": [210, 221, 223, 231], "iter": [210, 231], "compass_branch": 210, "default_input": [210, 218, 230, 231], "ocean_model": [210, 226, 231], "submodul": [210, 218, 226, 230, 248], "latest": [210, 226, 229, 240, 248], "master": 210, "compat": [210, 226, 227, 229], "verison": 210, "maintain": [210, 248], "recurs": [210, 225, 226, 230, 248], "whichev": [210, 239], "inertial_gravity_wav": [210, 215, 245], "single_column": [210, 215, 240, 244], "design": [211, 221, 223, 225, 229, 236, 242], "minim": 212, "fcell": [212, 221, 230, 243], "fedg": [212, 221, 230, 243], "fvertex": [212, 221, 230, 243], "free": [212, 230, 231], "slip": 212, "solid": [212, 242, 243], "tangenti": 212, "enforc": [212, 226], "nonperiod": 212, "drag": 212, "mass": 212, "momentum": [212, 213, 216, 245], "scalar": 212, "rigid": 212, "veloc": [212, 213, 216, 223, 226, 230, 243, 246, 248], "solv": [212, 227, 239], "mid": [212, 242], "vari": [212, 214, 221, 227, 236, 239, 243], "consult": [212, 230], "tidal_forc": 212, "eddi": [213, 242], "addition": [213, 216, 217, 232, 233, 234, 235, 237], "diffus": [213, 216, 217], "50": [213, 216, 224, 230, 242, 245, 246], "prescrib": [213, 216], "decomptest": [213, 230], "restarttest": [213, 224], "threadstest": 213, "thread_test": 213, "rpetest": [213, 223, 230], "intens": 213, "globalconverg": [214, 225, 230], "studi": [214, 243], "advect": [214, 243, 245, 246], "qu": [214, 230, 231, 241, 243], "ico": [214, 230, 241, 243], "fix": [214, 224, 230], "spheric": [214, 243], "24": [214, 243], "shape": [214, 243], "blob": 214, "around": [214, 230, 231, 242, 243], "rate": [214, 216, 230, 243, 245, 246], "cosine_bell_with_viz": [214, 241], "distribut": 214, "dt_per_km": [214, 230, 242, 243, 245, 247], "rmse": [214, 216, 245], "slow": [214, 243], "shallow": [216, 226, 243, 245, 247], "water": [216, 230, 242, 243, 245, 246, 247], "100": [216, 217, 239, 245, 246], "25": [216, 245, 246], "exactsolut": 216, "obtain": [216, 226, 233], "assign": [216, 243], "simul": [216, 221, 228, 230, 241, 242, 245, 247, 248], "fall": [216, 248], "accept": 216, "bound": 216, "calcul": [216, 221, 223], "exercis": [217, 243, 246], "kpp_test": 217, "mixedlayerdepthsoutput": 217, "enabel": 217, "idealagetrac": [217, 246], "dimens": [217, 242, 246], "single_column_forc": [217, 246], "profil": [217, 227, 246], "throughout": [217, 242, 246], "idealag": 217, "encompass": 218, "perspect": 218, "four": 218, "major": [218, 221], "add_test_group": [218, 225, 230], "variou": [218, 221, 226], "univers": 218, "mix": [218, 224, 245, 246], "ice_shelf_2d": [218, 250], "iceshelf2d": 218, "ziso": [218, 239, 249, 250], "landice_model": [218, 226], "organ": [219, 222, 224, 229], "green": 219, "blue": [219, 232, 248], "orang": 219, "red": 219, "repositori": [219, 229, 230, 248], "laid": 219, "fig": 219, "among": [219, 224, 226, 230], "organiz": 219, "concept": [219, 225, 228, 230, 249], "multiprocess": [221, 225, 231], "outsid": [221, 226], "emploi": 221, "prevent": 221, "unwant": 221, "outer": 221, "inner": 221, "variable_resolut": [221, 224, 248], "dome_varres_grid": 221, "signific": [221, 222, 223], "neglig": 221, "convent": [221, 226, 230], "high": [221, 234, 236], "fit": [221, 231], "applic": [221, 225, 226, 247], "meshstep": 221, "getint": 221, "mesh_cpus_per_task": 221, "mesh_min_cpus_per_task": 221, "previous": [221, 230], "processor": [221, 242], "readi": [221, 230, 237], "write_netcdf": [221, 230], "convers": [221, 230], "generate_grid": 221, "dsmesh": 221, "graphinfofilenam": [221, 230], "use_dist": [221, 230, 242], "gradient_width_dist": [221, 230, 242], "gradient_width_frac": [221, 230, 242], "bottom_temperatur": [221, 230, 242], "surface_temperatur": [221, 230, 242, 246], "temperature_differ": [221, 230, 242], "coriolis_paramet": [221, 230, 242, 245, 246], "bottom_depth": [221, 230, 231, 239, 242, 243, 245, 246, 247], "vert_level": [221, 230, 231, 239, 242, 243, 245, 246, 247], "ones_lik": [221, 230], "xmin": 221, "min": [221, 230, 242, 246], "xmax": 221, "ymin": 221, "ymax": 221, "ymid": 221, "xperturbmin": 221, "xperturbmax": 221, "perturbationwidth": 221, "yoffset": 221, "sin": [221, 230, 242, 245], "pi": [221, 230, 239, 242, 243], "temp_vert": [221, 230], "frac": [221, 230, 239, 242, 245], "logical_and": [221, 230], "transpos": [221, 230], "3rd": [221, 230], "crest": [221, 230, 242], "expand_dim": [221, 230], "dim": [221, 230], "axi": [221, 230], "broadcast": [221, 230], "zeros_lik": [221, 230], "nedg": [221, 230], "dtype": [221, 230], "xvertex": [221, 230], "commandlin": 221, "explor": [221, 224, 230, 239], "harm": 221, "likewis": [221, 230], "subsequ": [221, 228, 250], "arisen": 221, "now": [221, 226, 230, 231, 236], "omit": [221, 248], "problemat": 221, "usual": [221, 223, 226, 230, 248], "isn": [221, 225, 230], "forwardstep": 221, "mesh_path": 221, "mesh_step": 221, "with_ice_shelf_cav": [221, 223], "initial_state_target": 221, "adjusted_init": [221, 223], "forcing_data": 221, "entha_analy_result": 221, "mat": 221, "enthalpy_benchmark": 221, "ourselv": 221, "reduc": 221, "firewal": 221, "bedmachineantarctica_v2_and_gebco_2022_0": 221, "05_degree_20220729": 221, "slate": 221, "icepresent_qu60km_polar": 221, "practic": [221, 225, 226], "u": [221, 230, 236, 237, 245], "straightforward": 221, "commonli": [221, 228], "expens": [221, 222], "mechan": 221, "notat": [221, 247], "That": [221, 225, 228, 230, 248], "word": 221, "ff": 221, "quwisc240": [221, 225, 248, 250], "90c": 221, "91c": 221, "92": [221, 239], "91": 221, "sowisc12to60": [221, 248, 250], "performance_test": [221, 250], "effici": [221, 230], "transfer": 221, "feasibl": 221, "nor": [221, 230], "add_depend": 221, "unpickl": 221, "overhead": 221, "philosophi": [222, 225, 230], "context": [222, 230], "namesak": 222, "256": [222, 233, 237], "quicker": 222, "32": [222, 248], "exce": 222, "limit": [222, 226, 242], "offer": 222, "benefit": [222, 229], "catch": 222, "bug": 222, "covereag": 222, "timestep": 222, "exhaust": 222, "recent": [222, 240], "merg": 222, "reach": 222, "steadi": 222, "encount": [222, 227], "wet": 222, "fundament": 223, "incorpor": 223, "deprec": 223, "constrain_resourc": [223, 230], "smoke_test": [223, 224], "smoketest": [223, 224], "velo_solv": 223, "sia": [223, 226], "fo": 223, "add_step": [223, 230], "runmodel": 223, "run_step": 223, "0200": 223, "00_00": [223, 230], "fine": [223, 230, 246], "recip": 223, "rpe_test": [223, 225, 230, 248], "res_param": [223, 224], "144": 223, "36": [223, 232, 236, 246, 248], "4km": [223, 224, 230, 242, 248], "unsupport": [223, 224, 226], "enumer": [223, 230], "rpe_test_": [223, 230], "_nu_": [223, 230], "deliber": 223, "chosen": [223, 246], "demonstr": [223, 230], "clumsi": [223, 225], "rpe_test_1_nu_1": [223, 230, 242], "rpe_test_2_nu_5": [223, 230, 242], "filesfore3sm": 223, "configure_global_ocean": 223, "with_bgc": 223, "po4": 223, "no3": 223, "sio3": 223, "nh4": 223, "fe": [223, 233], "o2": 223, "dic": 223, "dic_alt_co2": 223, "alk": 223, "dofe": 223, "dop": 223, "dopr": 223, "donr": 223, "zooc": 223, "spchl": 223, "spc": 223, "spfe": 223, "spcaco3": 223, "diatchl": 223, "diatc": 223, "diatf": 223, "diatsi": 223, "diazchl": 223, "diazc": 223, "diazf": 223, "phaeochl": 223, "phaeoc": 223, "phaeof": 223, "dm": 223, "dmsp": 223, "prot": 223, "poli": 223, "lip": 223, "conceptu": [224, 225], "realist": [224, 229, 249], "2000m": [224, 248], "34": [224, 248], "halfar": 224, "cism": 224, "dome_typ": 224, "closest": 224, "put_origin_on_a_cel": 224, "hydrologi": 224, "hydro": [224, 249], "dome_viz": 224, "time_slic": 224, "save_imag": 224, "hide": [224, 230], "hide_fig": 224, "add_test_cas": [224, 230], "restart_test": [224, 230, 248, 250], "talk": 224, "16": [224, 231, 246, 248], "10e3": 224, "40": [224, 235], "126": 224, "4e3": 224, "160": [224, 230, 242], "500": [224, 230, 231, 239, 242], "held": 224, "initial_condit": 225, "dig": [225, 231], "infrastructur": [225, 230], "background": 225, "behind": 225, "adher": [225, 230], "pep8": [225, 226], "bot": [225, 239], "violat": 225, "pleas": [225, 226, 230, 248], "consid": 225, "editor": 225, "pycharm": [225, 226, 230], "spyder": 225, "linter": 225, "flake8": [225, 226], "discourag": 225, "reformat": 225, "autopep8": 225, "undesir": 225, "util": 225, "lint": 225, "wildcard": 225, "vim": [225, 230], "plugin": 225, "id": [225, 226], "commit": [225, 226], "why": 225, "sound": 225, "subpackag": 225, "understand": [225, 231], "releas": [225, 229, 236, 240, 248], "our": [225, 230, 248], "downstream": 225, "tutori": [225, 226], "clu": 225, "intro": 225, "docstr": [225, 229, 230], "strip": 225, "mpas_ocean": 225, "hidden": 225, "shortcut": [225, 248], "referenc": [225, 230], "mention": 225, "dot": 225, "charact": 225, "unix": [225, 229], "distinct": 225, "mayb": [225, 230], "machine_config": 225, "endswith": 225, "splitext": 225, "exactli": [225, 226, 230, 239], "move": [225, 226, 230, 247], "renam": 225, "visa": 225, "versa": 225, "comfort": [225, 230], "inherit": [225, 230], "orient": 225, "program": [225, 231], "led": 225, "felt": 225, "contribut": 225, "hesit": 225, "predecessor": [225, 228, 229], "harder": 225, "outcom": 225, "augment": 225, "explain": 225, "hope": 225, "dens": 225, "learn": [225, 230], "curv": 225, "worth": [225, 230], "skill": 225, "broadli": 225, "endeavor": 225, "readabl": 225, "manipul": 225, "get_available_cores_and_nod": 225, "theoret": 225, "dozen": 225, "split": 225, "theori": 225, "biogeochemistri": 225, "bash": [226, 227, 230, 248], "ksh": 226, "mac": [226, 229], "csh": 226, "tcsh": 226, "temporarili": 226, "bin": [226, 237, 248], "recogn": [226, 231, 248], "mambaforg": [226, 230, 236, 248], "permiss": 226, "miniconda3": 226, "unifi": [226, 237], "anyon": 226, "caus": [226, 233, 237, 239], "person": [226, 227], "base_path_to_install_or_update_conda": 226, "with_albani": 226, "with_netlib_lapack": 226, "with_petsc": 226, "flavor": [226, 230], "login": [226, 233, 237], "troubl": [226, 230], "recognit": 226, "trilino": 226, "downsid": 226, "unneed": 226, "laptop": [226, 230, 231], "workstat": 226, "deploy": 226, "hpc": [226, 233, 236], "touch": 226, "update_spack": 226, "reinstal": 226, "scorpio": [226, 236, 248], "esmf": [226, 248], "caution": 226, "deploi": [226, 232, 233, 234, 235, 236, 237], "load_": 226, "encod": 226, "load_dev_polaris_": [226, 230], "env_nam": 226, "dev_polaris_": [226, 227], "workdir": [226, 248], "unexpect": [226, 228, 230], "occur": [226, 227], "safest": 226, "rerun": 226, "echo": 226, "correct": 226, "checkout": [226, 230], "proceed": 226, "notic": 226, "conda_env": [226, 235, 248], "rememb": 226, "recreat": [226, 227], "incorrect": 226, "unus": 226, "session": [226, 230], "pip": 226, "substanti": 226, "risk": [226, 230], "rare": 226, "env_onli": 226, "mpas_make_target": [226, 248], "scientif": [226, 248], "_albani": 226, "instruct": [226, 230], "proce": 226, "es3m": 226, "compli": 226, "memor": 226, "guidelin": 226, "stai": 226, "complianc": 226, "checker": 226, "pre": 226, "isort": 226, "mypi": 226, "77": 226, "e302": 226, "blank": 226, "resolv": 226, "simpler": [226, 230], "mkdir": 226, "fetch": [226, 230], "new_branch_nam": 226, "put": [226, 230], "elsewher": 226, "disk": [226, 231, 233, 237], "respons": 226, "simplest": 226, "your_new_branch": 226, "suggest": 227, "geo": 227, "cartopi": 227, "14": 227, "np110py27_4": 227, "calledprocesserror": 227, "deploy_tmp": 227, "spec": [227, 237], "vpn": 227, "site": 227, "shell": [227, 229], "honor": 227, "wide": 227, "coupl": [227, 229], "spawn": 227, "usernam": [227, 230, 233, 237], "proxy_en": 227, "export": 227, "all_proxi": 227, "proxyout": 227, "8080": 227, "no_proxi": 227, "localhost": [227, 231, 236, 237, 248], "127": 227, "proxy_dis": 227, "unset": 227, "anytim": 227, "fatal": 227, "mpi_init": 227, "stack": 227, "mpir_init_thread": 227, "159": 227, "mpid_init": 227, "164": 227, "mpidi_ch3_init": 227, "95": 227, "mpid_nem_init": 227, "314": 227, "mpid_nem_tcp_init": 227, "173": 227, "mpid_nem_tcp_get_business_card": 227, "395": 227, "getsockinterfaceaddr": 227, "369": 227, "pn2034311": 227, "errno": 227, "host": [227, 231, 236, 248], "mpirun": [227, 231, 232, 233, 234, 235, 236, 237, 248], "srun": [227, 230, 231, 232, 233, 234, 235, 236, 237, 248], "parallel_execut": [227, 231, 232, 233, 234, 235, 236, 237, 248], "plu": 228, "autom": 229, "exascal": 229, "earth": 229, "kept": 229, "sens": [229, 230], "boundari": [229, 242, 249], "expert": 229, "team": 229, "launch": 229, "uncoupl": 229, "evolv": [229, 239, 243, 246], "quick": [229, 230, 240, 250], "queue": 229, "beginn": [229, 230], "worktre": [229, 230], "advanc": [229, 230], "mpas_to_yaml": 229, "troubleshoot": 229, "proxi": 229, "lanl": [229, 231, 233], "gethostbynam": 229, "glossari": 230, "port": [230, 237], "stick": 230, "miniconda": 230, "haven": 230, "3_chrysalis_intel_openmpi": 230, "switch": [230, 231], "strict": 230, "fork": 230, "push": 230, "lowercas": 230, "hyphen": 230, "settl": 230, "desktop": 230, "realli": [230, 237], "nice": [230, 237], "supercomput": 230, "yet_another_channel": 230, "vi": 230, "polaris_head": 230, "yetanotherchannel": 230, "instanc": 230, "repres": [230, 239, 243], "highli": 230, "camelcas": 230, "capit": 230, "letter": 230, "cap": 230, "awkward": 230, "encourag": 230, "enclos": 230, "briefli": 230, "alphabet": 230, "interest": 230, "anyth": 230, "probabl": [230, 236], "suppos": 230, "easili": 230, "tide": 230, "analyz": 230, "hard": [230, 242, 246], "sai": [230, 236], "res_str": 230, "1000": [230, 231, 239, 242, 245], "still": [230, 240, 247, 248], "ti": 230, "loop": 230, "coarsest": [230, 231], "especi": 230, "anticip": 230, "promot": 230, "pattern": 230, "familiar": 230, "seen": 230, "brows": 230, "row": 230, "greater": 230, "disadvantag": 230, "foremost": 230, "magic": 230, "effect": [230, 247], "kind": 230, "pain": 230, "path_to_mpas_ocean": 230, "path_to_working_dir": 230, "sbatch": [230, 236, 248], "job_script": [230, 248], "cat": 230, "slurm_jobid": 230, "_run_test": 230, "gpf": 230, "fs1": 230, "ac": 230, "cbegeman": 230, "successfulli": 230, "x_cell": 230, "y_cell": 230, "grid_typ": [230, 231, 239, 242, 243, 245, 246, 247], "coord_typ": [230, 239, 242, 243, 245, 246, 247], "partial_cell_typ": [230, 239, 242, 243, 245, 246, 247], "min_pc_fract": [230, 239, 242, 243, 245, 246, 247], "everywher": 230, "depress": [230, 239], "x_min": 230, "x_max": 230, "y_min": 230, "y_max": 230, "y_mid": 230, "x_perturb_min": 230, "x_perturb_max": 230, "perturb_width": [230, 242], "y_offset": 230, "normal_veloc": 230, "attr": 230, "mostli": 230, "logic": [230, 242], "northern": [230, 242], "half": [230, 242], "southern": [230, 242], "halv": [230, 242], "gradient": [230, 242, 245, 246], "08": [230, 242], "500km": [230, 242], "40e3": [230, 242], "35": [230, 242, 243, 246, 247, 248], "2e": [230, 242], "initial_temperatur": 230, "initial_normal_veloc": 230, "connect": [230, 237], "match": 230, "decomp_test": [230, 248, 250], "light": 230, "fast": 230, "e3sm_compon": 230, "interact": [230, 233, 236, 237, 248], "interrupt": 230, "pty": 230, "navig": 230, "newli": 230, "bunch": 230, "didn": 230, "mistak": 230, "finger": 230, "cross": 230, "initial_normalveloc": 230, "initial_salin": 230, "btr_dt_per_km": [230, 242], "obvious": 230, "stress": [230, 246], "steem": 230, "bring": 230, "landicemodelstep": 230, "huge": 230, "cp": 230, "config_dt": 230, "05": 230, "split_explicit_t": 230, "config_btr_dt": 230, "hmix_del2": 230, "bottom_drag": 230, "cvmix": 230, "0002": 230, "filename_interv": 230, "0100": 230, "input_interv": 230, "initial_onli": 230, "basicmesh": 230, "dayssincestart": 230, "surfacespe": 230, "lowersurfac": 230, "uppersurfac": 230, "ureconstructx": 230, "ureconstructi": 230, "great": 230, "remain": [230, 243, 246], "load_dataset": 230, "final_temperatur": 230, "ab": 230, "fresh": 230, "decomp": 230, "proc": 230, "area": 230, "markdown": 230, "users_guid": 230, "daunt": 230, "flesh": 230, "bonu": 230, "improv": 230, "introduc": 230, "techniqu": 230, "proport": [230, 239, 242, 243, 245, 247], "1384565": 230, "strftime": 230, "gmtime": 230, "run_second": 230, "twice": 230, "guess": 230, "recomput": 230, "aim": 230, "becam": 230, "mainten": 230, "counter": 230, "thought": 230, "yet_another_channel_test_cas": 230, "yetanotherchanneltestcas": 230, "choic": [230, 243], "spuriou": [230, 242], "dissip": [230, 242], "pop": [230, 242], "mom": [230, 242], "mitgcm": [230, 242], "higher": 230, "heavi": 230, "analogi": 230, "tet": 230, "bear": 230, "me": 230, "late": 230, "_add_step": 230, "startswith": 230, "privat": 230, "break": [230, 242], "unusu": 230, "rpe_test_3_nu_10": 230, "rpe_test_4_nu_20": 230, "rpe_test_5_nu_200": 230, "_setup_step": 230, "20_00": 230, "0000": 230, "dayssincestartofsim": 230, "relativevort": 230, "pyplot": 230, "plt": 230, "output_": 230, "sections_yet_another_channel_": 230, "rpe_t": 230, "init_filenam": 230, "ds_init": 230, "_plot": 230, "compact": 230, "dirti": 230, "adopt": 230, "lesson": 230, "tricki": 230, "commun": 230, "nuanc": 230, "fake": 230, "wasn": 230, "fold": 230, "proper": 230, "third": 230, "extens": 231, "single_nod": [231, 232, 233, 234, 235, 236, 237, 248], "multinod": [231, 248], "hopefulli": 231, "explanatori": 231, "my_machin": 231, "extend": 231, "gitconfig": 231, "enter": 231, "author": 231, "asai": 231, "davi": 231, "email": 231, "pull_request": 231, "28": 231, "address": 231, "metadata": 231, "customize_config_pars": 231, "server_base_url": 231, "inej": 231, "check_siz": 231, "ssl": 231, "certif": 231, "core_path": 231, "partition_execut": 231, "dask": 231, "netcdf4": 231, "netcdf4_class": 231, "netcdf3_64bit": 231, "netcdf3_class": 231, "engin": 231, "scipi": 231, "mesh_databas": 231, "ocean_database_root": 231, "landice_database_root": 231, "mesh_cor": 231, "18": [231, 233], "mesh_min_cor": 231, "mesh_max_memori": 231, "mesh_max_disk": 231, "init_cor": 231, "init_min_cor": 231, "init_max_memori": 231, "init_max_disk": 231, "init_thread": 231, "forward_cor": 231, "forward_min_cor": 231, "forward_thread": 231, "forward_max_memori": 231, "forward_max_disk": 231, "add_metadata": 231, "ec": 231, "wc": 231, "mesh_descript": 231, "autodetect": 231, "bathy_descript": 231, "gebco": 231, "2022": 231, "bedmachin": 231, "antarctica": 231, "init_descript": 231, "e3sm_vers": 231, "increment": 231, "mesh_revis": 231, "finest": 231, "min_r": 231, "max_r": 231, "max_depth": 231, "creation_d": 231, "peopl": 231, "contact": 231, "temperaturemax": 231, "statist": 231, "temperature_max": 231, "33": [231, 248], "diagnost": [231, 232, 233, 235, 236, 237, 248], "enable_ocean_initial_condit": 231, "enable_ocean_graph_partit": 231, "enable_seaice_initial_condit": 231, "scrip": 231, "enable_scrip": 231, "transect": 231, "onlin": 231, "member": 231, "offlin": 231, "enable_diagnostics_fil": 231, "coarser": [231, 243], "finer": 231, "comparisonlatresolut": 231, "comparisonlonresolut": 231, "antarct": 231, "polar": [231, 232, 234, 239], "stereograph": 231, "comparisonantarcticstereowidth": 231, "6000": [231, 239], "comparisonantarcticstereoresolut": 231, "arctic": 231, "comparisonarcticstereowidth": 231, "comparisonarcticstereoresolut": 231, "tanh_dz": 231, "3000": 231, "min_layer_thick": [231, 239], "max_layer_thick": [231, 239], "retain": 231, "ecosystem": 232, "gain": 232, "confluenc": 232, "public_html": [232, 234, 236], "polaris_env": [232, 233, 234, 235, 236, 237], "soft": [232, 234, 236, 248], "mpi_intel": [232, 234, 235, 236], "mpi_gnu": [232, 233, 234, 235, 236, 237], "hdf5": [232, 233, 234, 235, 236, 237], "fortran": [232, 233, 234, 235, 236, 237], "pnetcdf": [232, 233, 234, 235, 236, 237], "use_e3sm_hdf5_netcdf": [232, 233, 234, 235, 236, 237], "cobalt": [232, 233, 234, 235, 236, 237], "condo": [232, 248], "acm": [232, 248], "medium": 232, "acme_high": 232, "load_latest_polaris_intel_impi": [232, 235], "load_latest_polaris_gnu_openmpi": [232, 234, 248], "dst": 233, "calendar": 233, "network": 233, "introduct": 233, "platform": 233, "batch": 233, "wtrw": 233, "ch": 233, "lustr": 233, "scratch4": 233, "scratch5": 233, "sacctmgr": 233, "assoc": 233, "cluster": 233, "45": 233, "my": 233, "sshare": 233, "grep": [233, 248], "sreport": 233, "accountutilizationbyus": 233, "2019": 233, "02": 233, "prioriti": 233, "yellow": 233, "chkhome": 233, "petabyt": 233, "df": 233, "bp": 233, "archiv": [233, 237], "hpss": [233, 237], "front": 233, "tn": 233, "storag": 233, "project_nam": 233, "salloc": [233, 236, 237], "account_nam": 233, "gpu": [233, 237], "hyperthread": [233, 237], "hang": [233, 237], "threads_per_cor": [233, 237], "modules_befor": [233, 237], "modules_aft": [233, 237], "shared_clim": [233, 248], "load_latest_polaris_gnu_mpich": [233, 237], "load_latest_polaris_intel_openmpi": 234, "compyf": 235, "app": [235, 248], "pmi2": 235, "submit": 236, "workload": 236, "squeue": 236, "my_usernam": [236, 237], "scancel": 236, "jobid": 236, "cancel": 236, "emtpi": 236, "three": 236, "mpi_mpich": [236, 248], "mpi_openmpi": [236, 248], "nompi": [236, 248], "p1": 237, "nersc": 237, "iri": 237, "filesystem": 237, "myquota": 237, "prjquota": 237, "projectid": 237, "m1795": 237, "hsi": 237, "htar": 237, "zstash": 237, "cf": [237, 248], "cdir": [237, 248], "premium": 237, "cray_compil": 237, "8844": 237, "monik": 237, "browser": 237, "grab": 237, "logon": 237, "kernel": 237, "myenv": 237, "ipykernel": 237, "kernelspec": 237, "u1": 237, "Be": 237, "interpret": 237, "argv": 237, "env": 237, "ipykernel_launch": 237, "connection_fil": 237, "display_nam": 237, "languag": 237, "2500": 239, "deepest": 239, "stewart": 239, "2017": 239, "z_2": 239, "z_1": 239, "mathrm": 239, "tanh": 239, "rightarrow": 239, "infti": 239, "z_k": 239, "z_0": 239, "z_": [239, 246], "k": 239, "finder": 239, "n_z": 239, "h_": 239, "210": [239, 243], "scienc": 239, "hydrograph": 239, "climatologi": 239, "250": 239, "5500": 239, "renorm": 239, "51": 239, "221": 239, "63": 239, "floor": 239, "flat": [239, 242], "collaps": 239, "adcroft": 239, "campin": 239, "2004": 239, "absenc": 239, "squash": 239, "watercolumn": 239, "press": 239, "batymetri": 239, "stair": 239, "month": 240, "year": 240, "websit": 240, "release_6": 240, "ilicak": 242, "2012": 242, "distinguish": 242, "zonal": [242, 246], "meridion": [242, 246], "psu": [242, 246], "cooler": 242, "north": 242, "sinusoid": 242, "perturb": [242, 243], "t_0": 242, "t_b": 242, "t_": 242, "z_b": 242, "y_": 242, "l_x": 242, "warmer": 242, "ge": [242, 243], "gradient_width_fract": 242, "l_y": 242, "le": [242, 246], "flow": [242, 243], "stationari": [242, 246], "literatur": 242, "mk": 242, "celsiu": 242, "williamson": 243, "1992": 243, "sec": 243, "3a": 243, "skamarock": 243, "gassmann": 243, "bodi": 243, "rotat": [243, 245], "transport": 243, "psi": 243, "proportion": 243, "icosohydr": 243, "480": 243, "150": 243, "nearest": 243, "insensit": [243, 246], "300": [243, 247], "passiv": 243, "psi_0": 243, "co": [243, 245], "radiu": 243, "debug_tracers_1": 243, "equatori": 243, "u_0": 243, "tau": 243, "transit": 243, "equat": [243, 245, 246], "vel_pd": 243, "tendenc": 243, "multipli": 243, "rad": 243, "lat_cent": 243, "lon_cent": 243, "14159265": 243, "2123666": 243, "6667": 243, "hill": 243, "psi0": 243, "qu_conv_thresh": 243, "warn": [243, 245], "qu_conv_max": 243, "icos_conv_thresh": 243, "icos_conv_max": 243, "roughli": 243, "propag": 245, "doubli": 245, "assess": 245, "numer": 245, "accuraci": 245, "discret": 245, "implemen": 245, "bishnu": 245, "friction": 245, "neglect": 245, "nonlinear": 245, "analyt": [245, 249], "k_x": 245, "k_y": 245, "accord": [245, 248], "availi": 245, "10000": 245, "coriloi": 245, "1e": 245, "amplitud": 245, "ssh_amplitud": 245, "wavelength": 245, "n_wavelengths_x": 245, "n_wavelengths_i": 245, "conv_thresh": 245, "conv_max": 245, "span": 246, "arbitrarili": 246, "virtu": 246, "examin": 246, "400": 246, "phi": 246, "phi_0": 246, "dz": 246, "ml": 246, "mld": 246, "surface_x": 246, "x_gradient_mixed_lay": 246, "mixed_layer_depth_x": 246, "x_difference_across_mixed_lay": 246, "x_gradient_interior": 246, "spatial": 246, "degc": 246, "temperature_gradient_mixed_lay": 246, "temperature_difference_across_mixed_lay": 246, "temperature_gradient_interior": 246, "mixed_layer_depth_temperatur": 246, "surface_salin": 246, "salinity_gradient_mixed_lay": 246, "salinity_difference_across_mixed_lay": 246, "salinity_gradient_interior": 246, "mixed_layer_depth_salin": 246, "scheme": 246, "dictat": 246, "kpp": 246, "restor": 246, "piston": 246, "toward": 246, "temperature_surface_restoring_valu": 246, "temperature_piston_veloc": 246, "salinity_surface_restoring_valu": 246, "salinity_piston_veloc": 246, "temperature_interior_restoring_r": 246, "salinity_interior_restoring_r": 246, "net": 246, "latent": 246, "heat": 246, "bulk": 246, "latent_heat_flux": 246, "sensibl": 246, "sensible_heat_flux": 246, "solar": 246, "shortwav": 246, "shortwave_heat_flux": 246, "evapor": 246, "evaporation_flux": 246, "5e": 246, "rain": 246, "rain_flux": 246, "wind": 246, "wind_stress_zon": 246, "wind_stress_meridion": 246, "characterist": 247, "welcom": 247, "icosohedr": 247, "pertain": 247, "inher": 247, "warrant": 247, "investig": 247, "load_latest_polari": 248, "minu": 248, "create_polaris_load_script": 248, "load_polaris_1": 248, "0_mpich": 248, "wiki": 248, "circular_shelf": 248, "sia_smoke_test": 248, "sia_decomposition_test": 248, "sia_restart_test": 248, "fo_smoke_test": 248, "fo_decomposition_test": 248, "fo_restart_test": 248, "37": 248, "38": 248, "17": 248, "210131_test_new_branch": 248, "my_config": 248, "smaller": 248, "previous_workdir": 248, "paper": 248, "recompil": 248, "live": 248, "safer": 248, "preserv": 248, "test_subdir": 248, "whatev": 248, "clock": 248, "j": 248, "exclus": 248, "job_nam": 248, "fo_integr": [248, 250], "full_integr": [248, 250], "sia_integr": [248, 250], "cosine_bell_cached_init": [248, 250], "ec30to60": [248, 250], "ecwisc30to60": [248, 250], "qu240_for_e3sm": [248, 250], "quwisc240_for_e3sm": [248, 250], "wc14": [248, 250], "suitenam": 248, "radial": 249, "form": 249, "identifi": 249, "analysis_test": 250, "5km": 250, "20km": 250, "with_frazil": 250, "prohibit": 250}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.job": [[54, 2, 1, "", "get_slurm_options"], [55, 2, 1, "", "write_job_script"]], "polaris.list": [[56, 2, 1, "", "list_cases"], [57, 2, 1, "", "list_machines"], [58, 2, 1, "", "list_suites"]], "polaris.logging": [[59, 2, 1, "", "log_method_call"]], "polaris.mesh": [[60, 0, 1, "", "IcosahedralMeshStep"], [67, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[60, 1, 1, "", "__init__"], [61, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [62, 1, 1, "", "get_cell_width"], [63, 1, 1, "", "get_subdivisions"], [64, 1, 1, "", "make_jigsaw_mesh"], [65, 1, 1, "", "run"], [66, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_cell_width_lat_lon"], [69, 1, 1, "", "make_jigsaw_mesh"], [70, 1, 1, "", "run"], [71, 1, 1, "", "setup"]], "polaris.mesh.planar": [[72, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[73, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, 1, 1, "", "__init__"], [74, 1, 1, "", "run"], [75, 1, 1, "", "save_and_plot_cell_width"], [76, 1, 1, "", "setup"]], "polaris.model_step": [[77, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[78, 2, 1, "", "ingest"], [79, 2, 1, "", "parse_replacements"], [80, 2, 1, "", "replace"], [81, 2, 1, "", "write"]], "polaris.ocean": [[126, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[126, 1, 1, "", "__init__"]], "polaris.ocean.model": [[127, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "compute_cell_count"], [129, 1, 1, "", "constrain_resources"], [130, 1, 1, "", "map_yaml_to_namelist"], [131, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[132, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[133, 0, 1, "", "BaroclinicChannel"], [134, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[133, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[134, 1, 1, "", "__init__"], [135, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[136, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[138, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[140, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "compute_cell_count"], [142, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[143, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "run"], [145, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[146, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[148, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[150, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "configure"], [152, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[153, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "run"], [155, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[156, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[158, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[160, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[160, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[161, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "configure"], [163, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[164, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "rmse"], [166, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[167, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "compute_cell_count"], [169, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[170, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[172, 0, 1, "", "Viz"], [174, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave": [[176, 0, 1, "", "InertialGravityWave"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[176, 1, 1, "", "__init__"]], "polaris.ocean.tests.inertial_gravity_wave.analysis": [[177, 0, 1, "", "Analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence": [[179, 0, 1, "", "Convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution": [[181, 0, 1, "", "ExactSolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward": [[183, 0, 1, "", "Forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "compute_cell_count"], [185, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state": [[186, 0, 1, "", "InitialState"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.viz": [[188, 0, 1, "", "Viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[188, 1, 1, "", "__init__"], [189, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[190, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[190, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[191, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[193, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[193, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.ideal_age": [[194, 0, 1, "", "IdealAge"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.initial_state": [[196, 0, 1, "", "InitialState"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[198, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[200, 2, 1, "", "generate_1d_grid"], [201, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[202, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[203, 2, 1, "", "alter_bottom_depth"], [204, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[205, 2, 1, "", "compute_min_max_level_cell"], [206, 2, 1, "", "compute_z_level_layer_thickness"], [207, 2, 1, "", "compute_z_level_resting_thickness"], [208, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[209, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[82, 2, 1, "", "get_available_parallel_resources"], [83, 2, 1, "", "get_parallel_command"], [84, 2, 1, "", "run_command"], [85, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[86, 2, 1, "", "write"]], "polaris.remap": [[87, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "dst_from_lon_lat"], [89, 1, 1, "", "dst_from_mpas"], [90, 1, 1, "", "dst_from_points"], [91, 1, 1, "", "dst_from_proj"], [92, 1, 1, "", "dst_global_lon_lat"], [93, 1, 1, "", "get_remapper"], [94, 1, 1, "", "runtime_setup"], [95, 1, 1, "", "src_from_lon_lat"], [96, 1, 1, "", "src_from_mpas"], [97, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[98, 2, 1, "", "run_single_step"], [99, 2, 1, "", "run_tests"]], "polaris.setup": [[100, 2, 1, "", "setup_case"], [101, 2, 1, "", "setup_cases"]], "polaris.streams": [[102, 2, 1, "", "read"], [103, 2, 1, "", "update_defaults"], [104, 2, 1, "", "update_tree"], [105, 2, 1, "", "write"]], "polaris.suite": [[106, 2, 1, "", "setup_suite"]], "polaris.validate": [[107, 2, 1, "", "compare_timers"], [108, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[109, 2, 1, "", "plot_global"]], "polaris.viz": [[110, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[111, 0, 1, "", "PolarisYaml"], [115, 2, 1, "", "main_mpas_to_yaml"], [116, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [117, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "read"], [113, 1, 1, "", "update"], [114, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5, 230], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 125, 226, 230, 232, 233, 234, 235, 236, 237, 242, 243, 245, 246, 247], "same": 1, "implement": 1, "test": [1, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 215, 220, 222, 223, 224, 225, 230, 231, 241, 244, 248, 249, 250], "valid": [1, 2, 15, 44, 107, 108, 135, 137, 139, 147, 152, 157, 163, 180, 192, 195, 223, 230, 248], "api": 2, "refer": [2, 124, 125], "compon": [2, 12, 17, 18, 49, 125, 210, 218, 225, 226, 240, 248], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 225, 226, 229, 248], "framework": [2, 8, 124, 125, 213, 216, 217, 225, 238], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 56, 57, 58], "setup": [2, 4, 6, 30, 40, 66, 71, 76, 100, 101, 131, 145, 155, 221], "suit": [2, 4, 6, 106, 222, 241, 248, 250], "run": [2, 6, 12, 37, 65, 70, 74, 98, 99, 125, 144, 154, 159, 166, 171, 173, 175, 178, 187, 189, 197, 199, 221, 226, 242, 243, 245, 246, 247, 248], "cach": [2, 4, 6, 48, 221], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 225], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 223], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 221, 230, 242, 243, 245, 246, 247], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 125, 230, 231, 232, 233, 234, 235, 236, 237, 242, 243, 245, 246, 247], "io": [2, 9, 51, 52, 53], "job": [2, 54, 55, 236, 248], "log": [2, 10, 59], "mesh": [2, 11, 12, 16, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 214, 230, 242, 243, 245, 246, 247], "model_step": [2, 77], "namelist": [2, 12, 78, 79, 80, 81, 125], "parallel": [2, 82, 83, 84, 85], "proven": [2, 13, 86], "remap": [2, 14, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "stream": [2, 12, 102, 103, 104, 105, 125, 230], "viz": [2, 109, 110, 158, 159, 172, 173, 174, 175, 188, 189, 198, 199, 214, 216, 217, 230], "yaml": [2, 12, 111, 112, 113, 114, 115, 116, 117, 125], "build": [3, 226, 248], "serial": [4, 6, 98, 99], "docstr": 5, "modul": [6, 225, 226], "clean": 6, "file": [7, 12, 125, 221, 230, 231], "comment": 7, "symlink": [9, 53, 221], "download": [9, 51, 221], "spheric": [11, 16, 73, 74, 75, 76], "planar": [11, 16, 72], "uniform": [11, 239], "gener": 11, "model": [12, 125, 127, 128, 129, 130, 131, 211, 230, 248], "an": [12, 125, 230], "e3sm": [12, 125, 226, 248], "ad": [12, 221, 230], "updat": [12, 113, 226], "runtim": 12, "input": [12, 221], "partit": [12, 26], "pio": 12, "make": [12, 230], "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": [16, 230], "horizont": [16, 230], "field": 16, "from": [16, 125, 221, 226, 236], "global": 16, "lat": 16, "lon": 16, "plot": [16, 230], "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 142, 149, 169, 185], "map_yaml_to_namelist": [25, 130], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 94, 221], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 129, 221], "set_resourc": 39, "add_step": 42, "configur": [43, 151, 162, 223, 227], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "get_slurm_opt": 54, "write_job_script": 55, "list_cas": 56, "list_machin": 57, "list_suit": 58, "log_method_cal": 59, "icosahedralmeshstep": [60, 61, 62, 63, 64, 65, 66], "build_subdivisions_cell_width_lat_lon": 61, "get_cell_width": 62, "get_subdivis": 63, "make_jigsaw_mesh": [64, 69], "quasiuniformsphericalmeshstep": [67, 68, 69, 70, 71], "build_cell_width_lat_lon": 68, "compute_planar_hex_nx_ni": 72, "sphericalbasestep": [73, 74, 75, 76], "save_and_plot_cell_width": 75, "make_graph_fil": 77, "ingest": 78, "parse_replac": 79, "replac": 80, "write": [81, 86, 105, 114], "get_available_parallel_resourc": 82, "get_parallel_command": 83, "run_command": 84, "set_cores_per_nod": 85, "mappingfilestep": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "dst_from_lon_lat": 88, "dst_from_mpa": 89, "dst_from_point": 90, "dst_from_proj": 91, "dst_global_lon_lat": 92, "get_remapp": 93, "src_from_lon_lat": 95, "src_from_mpa": 96, "src_from_proj": 97, "run_single_step": 98, "run_test": 99, "setup_cas": [100, 101], "read": [102, 112], "update_default": 103, "update_tre": 104, "setup_suit": 106, "compare_tim": 107, "compare_vari": 108, "globe": 109, "plot_glob": 109, "plot_horiz_field": 110, "polarisyaml": [111, 112, 113, 114], "main_mpas_to_yaml": 115, "mpas_namelist_and_streams_to_yaml": 116, "yaml_to_mpas_stream": 117, "anvil": [118, 232], "intel": [118, 120, 121, 232, 234, 235], "gnu": [118, 119, 120, 121, 123, 232, 233, 234, 237], "chicoma": [119, 233], "cpu": [119, 123, 233, 237], "chrysali": [120, 234], "compymcnodefac": [121, 235], "machin": [122, 226, 236, 248], "support": [122, 211, 226, 236, 248], "other": [122, 221, 230, 236, 248], "perlmutt": [123, 237], "pm": 123, "ocean": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 240], "group": [124, 215, 224, 225, 230, 244], "baroclinic_channel": [124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 213, 242], "inertial_gravity_wav": [124, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 216], "global_converg": [124, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 214, 243], "cosine_bel": [124, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 214, 241, 243], "single_column": [124, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 217, 246], "oceanmodelstep": [124, 127, 128, 129, 130, 131], "potenti": [124, 125], "energi": [124, 125], "rpe": [124, 125, 132], "vertic": [124, 125, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 230, 239, 242, 243, 245, 246, 247], "coordin": [124, 125, 230, 239], "v": 125, "map": 125, "omega": 125, "mpa": [125, 212], "set": [125, 226, 248], "mpi": [125, 236], "resourc": 125, "rest": 125, "compute_cell_count": [128, 141, 168, 184], "compute_rp": 132, "baroclinicchannel": 133, "baroclinicchanneltestcas": [134, 135], "decomp_test": [136, 137, 213, 242], "decomptest": [136, 137], "default": [138, 139, 213, 230, 242], "forward": [140, 141, 142, 167, 168, 169, 183, 184, 185, 193, 213, 214, 216, 217, 230], "initial_st": [143, 144, 145, 186, 187, 196, 197, 213, 216, 217, 230], "initialst": [143, 144, 145, 186, 187, 196, 197], "restart_test": [146, 147, 148, 149, 213, 242], "restarttest": [146, 147], "restart_step": [148, 149], "restartstep": [148, 149], "rpe_test": [150, 151, 152, 153, 154, 155, 213, 242], "rpetest": [150, 151, 152], "analysi": [153, 154, 155, 164, 165, 166, 177, 178, 214, 216, 230], "threads_test": [156, 157, 213], "threadstest": [156, 157], "globalconverg": 160, "cosinebel": [161, 162, 163], "rmse": 165, "init": [170, 171, 214], "vizmap": [174, 175], "inertialgravitywav": 176, "converg": [179, 180, 216, 245], "exact_solut": [181, 182, 216], "exactsolut": [181, 182], "ssh": 182, "singlecolumn": 190, "cvmix": [191, 192, 217, 246], "ideal_ag": [194, 195], "idealag": [194, 195], "grid_1d": [200, 201], "generate_1d_grid": 200, "write_1d_grid": 201, "init_vertical_coord": 202, "partial_cel": [203, 204], "alter_bottom_depth": 203, "alter_ssh": 204, "zlevel": [205, 206, 207, 208], "compute_min_max_level_cel": 205, "compute_z_level_layer_thick": 206, "compute_z_level_resting_thick": 207, "init_z_level_vertical_coord": 208, "zstar": 209, "init_z_star_vertical_coord": 209, "initi": [212, 230, 242, 243, 245, 246, 247], "condit": [212, 230, 242, 243, 245, 246, 247], "boundari": 212, "forc": [212, 242, 243, 245, 246, 247], "baroclinic_channel_test_cas": 213, "type": [214, 239], "ideal": [217, 246], "ag": [217, 246], "directori": 219, "structur": 219, "organ": 220, "attribut": [221, 223], "constructor": [221, 223], "output": [221, 230], "copi": 221, "depend": 221, "pull": 222, "request": 222, "pr": 222, "nightli": 222, "case": [223, 225, 230, 231, 248, 249], "overview": 225, "code": [225, 226, 230], "style": [225, 226], "packag": 225, "share": [225, 230], "within": 225, "quick": [226, 248], "start": [226, 230, 248], "develop": [226, 229, 230], "unix": 226, "shell": 226, "up": [226, 248], "repositori": 226, "beginn": 226, "conda": [226, 227, 236, 248], "environ": [226, 227, 248], "spack": [226, 248], "compil": 226, "system": 226, "albani": 226, "petsc": 226, "netlib": 226, "lapack": 226, "unknown": 226, "what": 226, "script": [226, 248], "doe": 226, "flag": 226, "activ": 226, "switch": 226, "between": [226, 230], "differ": 226, "troubleshoot": [226, 227], "creat": [226, 230], "onli": 226, "repo": 226, "worktre": 226, "advanc": 226, "user": [226, 229, 231, 248], "solver": 227, "error": 227, "when": 227, "proxi": 227, "lanl": 227, "mac": 227, "gethostbynam": 227, "fail": 227, "glossari": [228, 229], "": 229, "guid": 229, "tutori": [229, 230], "compass": 229, "new": 230, "get": 230, "vari": 230, "resolut": 230, "paramet": 230, "thing": 230, "out": 230, "defin": 230, "more": 230, "again": 230, "one": 230, "time": [230, 242, 243, 245, 246, 247], "second": 230, "enhanc": 230, "dynam": 230, "comput": 230, "cell": 230, "count": 230, "superclass": 230, "studi": 230, "how": 230, "pass": 230, "data": [230, 237], "A": 231, "slurm": 236, "queue": 236, "mpich": 236, "openmpi": 236, "No": 236, "forg": 236, "jupyt": 237, "notebook": 237, "remot": 237, "1d": 239, "grid": [239, 242, 243, 245, 246, 247], "tanh_dz": 239, "60layerphc": 239, "100layere3smv1": 239, "3d": 239, "z": 239, "star": 239, "level": 239, "cosine_bell_cached_init": 241, "descript": [242, 243, 245, 246, 247], "durat": [242, 243, 245, 246, 247], "core": [242, 243, 245, 246, 247], "thread_test": 242, "cosine_bell_with_viz": 243, "inerti": 245, "graviti": 245, "wave": 245, "test_group_nam": 247, "test_case_nam": 247, "i": 248, "yet": 248, "load": 248, "standalon": 248}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [218, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [214, "mesh"], [242, "mesh"], [242, "id2"], [242, "id9"], [242, "id17"], [242, "id25"], [242, "id32"], [243, "mesh"], [245, "mesh"], [246, "mesh"], [246, "id3"], [246, "id8"], [247, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [214, "viz"], [216, "viz"], [217, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"], [230, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [238, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [125, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [125, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[54, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[55, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[56, "polaris-list-list-cases"]], "polaris.list.list_machines": [[57, "polaris-list-list-machines"]], "polaris.list.list_suites": [[58, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[59, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[60, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[61, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[62, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[63, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[64, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[65, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[66, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[71, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[72, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[74, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[75, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[76, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[77, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[78, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[79, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[80, "polaris-namelist-replace"]], "polaris.namelist.write": [[81, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[82, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[83, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[84, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[85, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[86, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[87, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[88, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[89, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[90, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[91, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[92, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[93, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[94, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[95, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[96, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[97, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[98, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[99, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[100, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[101, "polaris-setup-setup-cases"]], "polaris.streams.read": [[102, "polaris-streams-read"]], "polaris.streams.update_defaults": [[103, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[104, "polaris-streams-update-tree"]], "polaris.streams.write": [[105, "polaris-streams-write"]], "polaris.suite.setup_suite": [[106, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[107, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[108, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[109, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[110, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[111, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[112, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[113, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[114, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[115, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[116, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[117, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[118, "anvil"], [232, "anvil"]], "intel": [[118, "intel"], [120, "intel"], [121, "intel"]], "gnu": [[118, "gnu"], [120, "gnu"], [121, "gnu"]], "Chicoma": [[119, "chicoma"], [233, "chicoma"]], "chicoma-cpu, gnu": [[119, "chicoma-cpu-gnu"]], "Chrysalis": [[120, "chrysalis"], [234, "chrysalis"]], "CompyMcNodeFace": [[121, "compymcnodeface"], [235, "compymcnodeface"]], "Machines": [[122, "machines"], [236, "machines"]], "Supported Machines": [[122, "supported-machines"], [236, "supported-machines"]], "Other Machines": [[122, "other-machines"], [236, "other-machines"]], "Perlmutter": [[123, "perlmutter"], [237, "perlmutter"]], "pm-cpu, gnu": [[123, "pm-cpu-gnu"]], "ocean": [[124, "ocean"]], "Test Groups": [[124, "test-groups"], [224, "test-groups"]], "baroclinic_channel": [[124, "baroclinic-channel"], [213, "baroclinic-channel"], [242, "baroclinic-channel"]], "inertial_gravity_wave": [[124, "inertial-gravity-wave"], [216, "inertial-gravity-wave"]], "global_convergence": [[124, "global-convergence"], [214, "global-convergence"], [243, "global-convergence"]], "cosine_bell": [[124, "cosine-bell"], [214, "cosine-bell"]], "single_column": [[124, "single-column"], [217, "single-column"], [246, "single-column"]], "Ocean Framework": [[124, "ocean-framework"]], "OceanModelStep": [[124, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[124, "reference-potential-energy-rpe"]], "Vertical coordinates": [[124, "vertical-coordinates"]], "Ocean framework": [[125, "ocean-framework"]], "YAML files vs. namelists and streams": [[125, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[125, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[125, "setting-mpi-resources"]], "Model config options and streams": [[125, "model-config-options-and-streams"]], "Vertical coordinate": [[125, "vertical-coordinate"], [239, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[125, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[126, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[127, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[128, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[129, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[130, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[131, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[132, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[133, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[134, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[135, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[136, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[137, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[138, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[139, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[140, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[141, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[142, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[143, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[144, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[145, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[146, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[147, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[148, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[149, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[150, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[151, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[154, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[155, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[156, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[157, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[158, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[159, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[160, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[161, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[162, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[174, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[175, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[176, "polaris-ocean-tests-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[177, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run": [[178, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[179, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate": [[180, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence-validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[181, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[182, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[183, "polaris-ocean-tests-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count": [[184, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[185, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState": [[186, "polaris-ocean-tests-inertial-gravity-wave-initial-state-initialstate"]], "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run": [[187, "polaris-ocean-tests-inertial-gravity-wave-initial-state-initialstate-run"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[188, "polaris-ocean-tests-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run": [[189, "polaris-ocean-tests-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[190, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[191, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[192, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[193, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[194, "polaris-ocean-tests-single-column-ideal-age-idealage"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate": [[195, "polaris-ocean-tests-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[196, "polaris-ocean-tests-single-column-initial-state-initialstate"]], "polaris.ocean.tests.single_column.initial_state.InitialState.run": [[197, "polaris-ocean-tests-single-column-initial-state-initialstate-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[198, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[199, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[200, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[201, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[202, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[203, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[204, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[205, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[206, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[207, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[208, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[209, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[210, "ocean-component"], [240, "ocean-component"]], "Models": [[211, "models"]], "Supported Models": [[211, "supported-models"]], "MPAS-Ocean": [[212, "mpas-ocean"]], "Initial conditions": [[212, "initial-conditions"]], "Boundary conditions": [[212, "boundary-conditions"]], "Forcing": [[212, "forcing"]], "framework": [[213, "framework"], [216, "framework"], [217, "framework"]], "baroclinic_channel_test_case": [[213, "baroclinic-channel-test-case"]], "initial_state": [[213, "initial-state"], [216, "initial-state"], [217, "initial-state"]], "forward": [[213, "forward"], [214, "forward"], [216, "forward"], [217, "forward"]], "default": [[213, "default"], [242, "default"]], "decomp_test": [[213, "decomp-test"], [242, "decomp-test"]], "restart_test": [[213, "restart-test"], [242, "restart-test"]], "threads_test": [[213, "threads-test"]], "rpe_test": [[213, "rpe-test"], [242, "rpe-test"]], "mesh types": [[214, "mesh-types"]], "init": [[214, "init"]], "analysis": [[214, "analysis"], [216, "analysis"]], "Test groups": [[215, "test-groups"], [244, "test-groups"]], "exact_solution": [[216, "exact-solution"]], "convergence": [[216, "convergence"], [245, "convergence"]], "cvmix": [[217, "cvmix"], [246, "cvmix"]], "ideal age": [[217, "ideal-age"], [246, "ocean-single-column-ideal-age"]], "Directory structure": [[219, "directory-structure"]], "Organization of Tests": [[220, "organization-of-tests"]], "Steps": [[221, "steps"]], "Step attributes": [[221, "step-attributes"]], "constructor": [[221, "constructor"], [223, "constructor"]], "constrain_resources()": [[221, "constrain-resources"]], "setup()": [[221, "setup"]], "runtime_setup()": [[221, "runtime-setup"]], "run()": [[221, "run"]], "inputs and outputs": [[221, "inputs-and-outputs"]], "Input files": [[221, "input-files"]], "Symlinks to input files": [[221, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[221, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[221, "downloading-and-symlinking-input-files"]], "Copying input files": [[221, "copying-input-files"]], "Output files": [[221, "output-files"]], "Cached output files": [[221, "cached-output-files"]], "Adding other steps as dependencies": [[221, "adding-other-steps-as-dependencies"]], "Test Suites": [[222, "test-suites"], [248, "test-suites"], [250, "test-suites"]], "Pull-Request (PR) suite": [[222, "pull-request-pr-suite"]], "Nightly suite": [[222, "nightly-suite"]], "Test cases": [[223, "test-cases"]], "TestCase attributes": [[223, "testcase-attributes"]], "configure()": [[223, "configure"]], "validate()": [[223, "validate"]], "Overview": [[225, "overview"]], "Code Style": [[225, "code-style"]], "Packages and Modules": [[225, "packages-and-modules"]], "Packages": [[225, "packages"]], "Modules": [[225, "modules"]], "Classes": [[225, "classes"]], "Code sharing": [[225, "code-sharing"]], "\u2026in the polaris framework": [[225, "in-the-polaris-framework"]], "\u2026within a component": [[225, "within-a-component"]], "\u2026within a test group": [[225, "within-a-test-group"]], "\u2026within a test case": [[225, "within-a-test-case"]], "Quick Start for Developers": [[226, "quick-start-for-developers"]], "Unix Shell": [[226, "unix-shell"]], "Set up a polaris repository: for beginners": [[226, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[226, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[226, "supported-machines"]], "Environments with Albany": [[226, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[226, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[226, "unknown-machines"]], "What the script does": [[226, "what-the-script-does"]], "Optional flags": [[226, "optional-flags"]], "Activating the environment": [[226, "activating-the-environment"]], "Switching between different polaris environments": [[226, "switching-between-different-polaris-environments"]], "Troubleshooting": [[226, "troubleshooting"], [227, "troubleshooting"]], "Creating/updating only the polaris environment": [[226, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[226, "building-e3sm-components"]], "Running polaris from the repo": [[226, "running-polaris-from-the-repo"]], "Code style for polaris": [[226, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[226, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[227, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[227, "proxy-on-lanl-macs"]], "gethostbyname failed": [[227, "gethostbyname-failed"]], "Glossary": [[228, "glossary"], [229, null]], "Polaris": [[229, "polaris"]], "User's guide": [[229, null]], "Developer's guide": [[229, null]], "Tutorials": [[229, null]], "Compass": [[229, "compass"]], "Developer Tutorial: Adding a new test group": [[230, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[230, "getting-started"]], "Making a new test group": [[230, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[230, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[230, "varying-resolution-and-other-parameters"]], "Adding the initial_state step": [[230, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[230, "creating-a-horizontal-mesh"]], "Adding a config file": [[230, "adding-a-config-file"]], "Adding the step to the test case": [[230, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[230, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[230, "creating-an-initial-condition"]], "Adding plots": [[230, "adding-plots"]], "Adding step outputs": [[230, "adding-step-outputs"]], "Adding validation": [[230, "adding-validation"], [230, "id1"]], "Test things out!": [[230, "test-things-out"]], "Adding the forward step": [[230, "adding-the-forward-step"]], "Defining model config options and streams": [[230, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[230, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[230, "adding-more-validation"]], "Test the test case again!": [[230, "test-the-test-case-again"]], "Adding a visualization step": [[230, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[230, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[230, "test-the-test-case-one-more-time"]], "Adding a second test case": [[230, "adding-a-second-test-case"]], "Enhancements": [[230, "enhancements"]], "Adding model config options in code": [[230, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[230, "adding-dynamic-model-config-options"]], "Computing the cell count": [[230, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[230, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[230, "adding-a-parameter-study"]], "Adding the steps to the test case": [[230, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[230, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[230, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[231, "config-files"]], "A \u201cuser\u201d config file": [[231, "a-user-config-file"]], "Test-case config files": [[231, "test-case-config-files"]], "config options": [[232, "config-options"], [233, "config-options"], [234, "config-options"], [235, "config-options"], [236, "config-options"], [237, "config-options"], [242, "config-options"], [242, "id7"], [242, "id14"], [242, "id22"], [242, "id30"], [242, "id37"], [243, "config-options"], [245, "config-options"], [246, "config-options"], [246, "id1"], [246, "id6"], [246, "id13"], [247, "config-options"]], "Intel on Anvil": [[232, "intel-on-anvil"]], "Gnu on Anvil": [[232, "gnu-on-anvil"]], "Chicoma-CPU": [[233, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[233, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[234, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[234, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[235, "intel-on-compymcnodeface"]], "Slurm job queueing": [[236, "slurm-job-queueing"]], "MPICH": [[236, "mpich"]], "OpenMPI": [[236, "openmpi"]], "No MPI from conda-forge": [[236, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[237, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[237, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[237, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[239, "d-grid-type"]], "uniform": [[239, "uniform"]], "tanh_dz": [[239, "tanh-dz"]], "60layerPHC": [[239, "layerphc"]], "100layerE3SMv1": [[239, "layere3smv1"]], "3D vertical coordinates": [[239, "d-vertical-coordinates"]], "z-star": [[239, "z-star"]], "z-level": [[239, "z-level"]], "Test suites": [[241, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[241, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[242, "description"], [242, "id1"], [242, "id8"], [242, "id16"], [242, "id24"], [245, "description"], [246, "description"], [246, "id2"], [246, "id7"], [247, "description"]], "vertical grid": [[242, "vertical-grid"], [242, "id3"], [242, "id10"], [242, "id18"], [242, "id26"], [242, "id33"], [243, "vertical-grid"], [245, "vertical-grid"], [246, "vertical-grid"], [246, "id4"], [246, "id9"], [247, "vertical-grid"]], "initial conditions": [[242, "initial-conditions"], [242, "id4"], [242, "id11"], [242, "id19"], [242, "id27"], [242, "id34"], [243, "initial-conditions"], [245, "initial-conditions"], [246, "initial-conditions"], [246, "id5"], [246, "id10"], [247, "initial-conditions"]], "forcing": [[242, "forcing"], [242, "id5"], [242, "id12"], [242, "id20"], [242, "id28"], [242, "id35"], [243, "forcing"], [245, "forcing"], [246, "forcing"], [246, "id11"], [247, "forcing"]], "time step and run duration": [[242, "time-step-and-run-duration"], [242, "id6"], [242, "id13"], [242, "id21"], [242, "id29"], [242, "id36"], [243, "time-step-and-run-duration"], [245, "time-step-and-run-duration"], [246, "time-step-and-run-duration"], [246, "id12"], [247, "time-step-and-run-duration"]], "cores": [[242, "cores"], [242, "id15"], [242, "id23"], [242, "id31"], [242, "id38"], [243, "cores"], [245, "cores"], [246, "cores"], [246, "id14"], [247, "cores"]], "thread_test": [[242, "thread-test"]], "cosine_bell and cosine_bell_with_viz": [[243, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[243, "description"]], "inertial gravity wave": [[245, "inertial-gravity-wave"]], "test_group_name": [[247, "test-group-name"]], "test_case_name": [[247, "test-case-name"]], "Quick Start for Users": [[248, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[248, null]], "Loading polaris conda and spack environments": [[248, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[248, "e3sm-supported-machines"]], "Other machines": [[248, "other-machines"]], "Building supported E3SM components as standalone models": [[248, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[248, "setting-up-test-cases"]], "Running a test case": [[248, "running-a-test-case"]], "Running with a job script": [[248, "running-with-a-job-script"]], "Test Cases": [[249, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[54, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[55, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[56, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[57, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[58, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[59, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[60, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[60, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[62, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[63, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[66, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[71, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[72, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[73, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[76, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[77, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[78, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[79, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[80, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[81, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[82, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[83, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[84, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[85, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[86, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[87, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[98, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[99, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[100, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[101, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[102, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[103, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[104, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[105, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[106, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[107, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[108, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[109, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[110, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[111, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[111, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[112, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[114, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[115, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[116, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[117, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[126, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[126, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[127, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[132, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[134, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[134, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[135, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[136, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[136, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[137, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[138, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[138, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[139, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[140, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[140, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[141, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[142, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[143, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[143, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[144, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[145, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[147, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[149, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[154, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[156, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[156, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[157, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[158, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[158, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[159, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[160, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[160, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[175, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tests.inertial_gravity_wave)": [[176, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.inertialgravitywave method)": [[176, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.__init__"]], "analysis (class in polaris.ocean.tests.inertial_gravity_wave.analysis)": [[177, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[177, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[178, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tests.inertial_gravity_wave.convergence)": [[179, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[179, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[180, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tests.inertial_gravity_wave.exact_solution)": [[181, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[181, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "ssh() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[182, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tests.inertial_gravity_wave.forward)": [[183, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[183, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[184, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[185, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.inertial_gravity_wave.initial_state)": [[186, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.initial_state.initialstate method)": [[186, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.initial_state.initialstate method)": [[187, "polaris.ocean.tests.inertial_gravity_wave.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.inertial_gravity_wave.viz)": [[188, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[188, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[189, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[190, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[190, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[191, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[191, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[192, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[193, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[193, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tests.single_column.ideal_age)": [[194, "polaris.ocean.tests.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[194, "polaris.ocean.tests.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[195, "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate"]], "initialstate (class in polaris.ocean.tests.single_column.initial_state)": [[196, "polaris.ocean.tests.single_column.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[196, "polaris.ocean.tests.single_column.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[197, "polaris.ocean.tests.single_column.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[198, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[198, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[199, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[200, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[201, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[202, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[203, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[204, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[205, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[206, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[207, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[208, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[209, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})