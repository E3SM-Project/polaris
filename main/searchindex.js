Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.io.update_permissions", "developers_guide/generated/polaris.job.clean_up_whitespace", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/frontier", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/ice_shelf_2d", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/internal_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/frontier", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/ice_shelf_2d", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/internal_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.io.update_permissions.rst", "developers_guide/generated/polaris.job.clean_up_whitespace.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/frontier.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/ice_shelf_2d.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/internal_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/frontier.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/ice_shelf.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/ice_shelf_2d.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/internal_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.io.update_permissions", "polaris.job.clean_up_whitespace", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.ice_shelf.IceShelfTask", "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "polaris.ocean.ice_shelf.SshAdjustment", "polaris.ocean.ice_shelf.SshAdjustment.run", "polaris.ocean.ice_shelf.SshForward", "polaris.ocean.ice_shelf.SshForward.compute_cell_count", "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "polaris.ocean.tasks.ice_shelf_2d.default.Default", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.ice_shelf_2d.init.Init", "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "polaris.ocean.tasks.internal_wave.default.Default", "polaris.ocean.tasks.internal_wave.forward.Forward", "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.internal_wave.init.Init", "polaris.ocean.tasks.internal_wave.init.Init.run", "polaris.ocean.tasks.internal_wave.rpe.Rpe", "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "polaris.ocean.tasks.internal_wave.viz.Viz", "polaris.ocean.tasks.internal_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "polaris.ocean.vertical.update_layer_thickness", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "ice_shelf_2d", "Tasks", "inertial_gravity_wave", "internal_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "Ice shelf", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "ice shelf 2d", "Tasks", "inertial gravity wave", "internal wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 11, 19, 21, 38, 46, 49, 50, 53, 139, 142, 164, 173, 174, 181, 184, 189, 194, 207, 243, 249, 276, 314, 317, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 334, 336, 338, 340, 353, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 381, 382, 383, 384, 385, 389, 391], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 69, 74, 76, 79, 82, 83, 93, 95, 97, 98, 104, 109, 110, 111, 112, 115, 116, 139, 142, 144, 150, 152, 154, 155, 157, 158, 159, 161, 163, 164, 165, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 201, 202, 203, 205, 206, 207, 210, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 231, 236, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 257, 262, 264, 265, 266, 267, 270, 272, 273, 274, 275, 276, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 344, 345, 346, 348, 349, 353, 355, 356, 358, 365, 368, 390, 391], "templat": [0, 5, 6, 7, 28, 29, 30, 62, 117, 128, 132, 139, 142, 152, 155, 158, 161, 163, 177, 183, 222, 246, 318, 319, 320, 327, 328, 356, 357, 358], "date": [1, 2, 5, 55, 314, 332, 338, 350, 358], "2023": [1, 17, 378, 380], "08": [1, 357, 371], "18": [1, 6, 358, 360], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 139, 357, 358, 364], "asai": [1, 358], "davi": [1, 358], "capabl": [1, 2, 6, 17, 139, 219, 322, 334, 337, 356, 357, 364, 385], "design": [1, 139, 315, 334, 336, 337, 356, 364, 371], "here": [1, 6, 9, 12, 14, 17, 18, 139, 142, 317, 322, 325, 329, 330, 333, 334, 336, 337, 338, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 372, 373, 374, 375, 381, 382, 383, 384, 385, 389, 390], "abil": [1, 7, 372, 381], "across": [1, 6, 7, 9, 14, 19, 142, 317, 330, 334, 335, 336, 337, 338, 355, 357, 367, 371, 372, 373, 374, 381, 382], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 139, 142, 307, 308, 311, 330, 332, 334, 335, 336, 337, 338, 356, 357, 358, 364, 368, 373, 375, 376, 379, 384, 385, 389, 390, 391], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 64, 68, 70, 73, 74, 77, 78, 79, 83, 94, 95, 97, 98, 104, 109, 112, 122, 134, 135, 136, 137, 138, 139, 140, 142, 144, 150, 154, 157, 158, 159, 161, 163, 165, 168, 173, 174, 175, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 193, 194, 197, 201, 203, 206, 207, 210, 215, 217, 219, 220, 222, 224, 228, 229, 231, 239, 241, 243, 244, 246, 248, 249, 250, 252, 253, 254, 255, 257, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 279, 281, 282, 285, 286, 287, 289, 305, 307, 308, 311, 314, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 349, 350, 354, 355, 356, 357, 358, 360, 363, 364, 365, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390], "document": [1, 3, 6, 9, 14, 334, 337, 356, 358, 379, 385], "refer": [1, 7, 14, 38, 171, 184, 249, 292, 295, 298, 301, 303, 334, 337, 338, 355, 356, 357, 368, 371, 375, 379, 385], "ani": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 34, 47, 63, 109, 115, 116, 180, 188, 330, 331, 332, 334, 335, 336, 337, 338, 340, 357, 358, 364, 371, 373, 383, 384, 385, 388, 389], "which": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 87, 98, 100, 107, 115, 116, 117, 121, 125, 128, 139, 142, 144, 145, 146, 147, 148, 149, 151, 158, 159, 161, 165, 168, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 198, 211, 212, 219, 220, 223, 225, 227, 232, 234, 235, 236, 243, 244, 247, 249, 251, 258, 260, 261, 262, 270, 276, 280, 306, 307, 308, 310, 311, 314, 316, 318, 320, 327, 328, 330, 331, 333, 334, 336, 338, 343, 344, 346, 348, 356, 357, 358, 360, 364, 368, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 65, 93, 94, 95, 139, 142, 161, 165, 175, 220, 244, 270, 317, 318, 319, 320, 321, 325, 327, 328, 334, 336, 337, 338, 357, 359, 360, 361, 362, 363, 365, 371, 376, 385, 390], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 134, 136, 137, 139, 142, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 350, 353, 354, 355, 357, 358, 364, 369, 370, 371, 376, 386, 390, 391], "main": [1, 3, 6, 7, 9, 14, 43, 139, 330, 331, 336, 337, 338, 357, 391], "motiv": 1, "behind": [1, 337], "comput": [1, 7, 13, 14, 15, 81, 139, 142, 145, 146, 149, 153, 156, 162, 165, 166, 171, 176, 200, 204, 221, 233, 237, 245, 259, 263, 298, 299, 300, 311, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 334, 338, 360, 361, 364, 365, 371, 372, 373, 374, 375, 378, 380, 381, 382, 385], "expens": [1, 334, 335], "could": [1, 14, 17, 19, 139, 334, 335, 336, 337, 338, 357, 373], "time": [1, 6, 7, 8, 14, 18, 19, 38, 49, 63, 88, 125, 139, 147, 148, 154, 161, 170, 171, 175, 184, 198, 201, 211, 212, 232, 234, 235, 244, 249, 258, 260, 261, 270, 305, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 334, 335, 336, 337, 338, 353, 354, 355, 358, 360, 363, 365, 366, 385, 390], "order": [1, 5, 8, 13, 14, 142, 307, 308, 318, 319, 320, 321, 327, 328, 331, 334, 335, 338, 357, 366, 372, 373, 374, 375, 380, 381, 382, 383, 385], "reflect": [1, 5, 338], "fact": [1, 14, 38, 139], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 137, 139, 142, 146, 147, 148, 169, 198, 211, 212, 232, 258, 280, 317, 322, 325, 329, 330, 333, 334, 336, 337, 338, 353, 356, 357, 358, 360, 362, 363, 364, 365, 368, 373, 375, 376, 385, 390], "present": [1, 50, 125, 338, 357, 366], "new": [1, 2, 5, 20, 26, 38, 49, 57, 60, 69, 76, 82, 98, 118, 119, 142, 152, 155, 161, 175, 182, 199, 213, 220, 233, 236, 244, 259, 262, 270, 283, 292, 295, 301, 303, 334, 336, 337, 338, 351, 354, 355, 356, 385], "success": [1, 2, 8, 48, 59, 314, 331, 350, 357, 358], "insofar": 1, "guarante": [1, 14, 139, 310, 314, 338, 350], "per": [1, 8, 14, 25, 35, 37, 38, 45, 63, 94, 95, 124, 139, 142, 165, 306, 334, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 372, 373, 374, 375, 378, 380, 381, 382, 384, 389], "slurm": [1, 63, 96, 139, 334, 356, 358, 359, 360, 361, 362, 363, 365, 385], "job": [1, 6, 139, 338, 356, 357, 359, 360, 361, 362, 363, 365], "role": 1, "clear": [1, 2, 337, 357], "should": [1, 2, 5, 6, 7, 9, 11, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 64, 77, 115, 116, 123, 125, 134, 135, 136, 137, 138, 139, 140, 142, 144, 149, 168, 180, 188, 272, 274, 307, 308, 314, 330, 331, 332, 334, 335, 336, 338, 350, 351, 354, 355, 357, 358, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 389], "invoc": 1, "serial": [1, 44, 334, 336, 356, 357, 385], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 65, 69, 70, 73, 76, 77, 78, 82, 90, 93, 95, 97, 98, 99, 100, 101, 102, 106, 107, 108, 112, 115, 116, 117, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 139, 142, 144, 152, 155, 157, 159, 161, 168, 170, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 194, 197, 199, 202, 205, 207, 210, 213, 214, 216, 220, 223, 225, 227, 231, 236, 238, 240, 243, 244, 247, 249, 251, 253, 257, 262, 264, 266, 270, 272, 274, 276, 279, 281, 283, 284, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 317, 322, 324, 325, 326, 329, 331, 334, 335, 336, 337, 338, 343, 344, 346, 348, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 388, 389], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 83, 111, 113, 118, 121, 139, 142, 205, 216, 288, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 350, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 371, 372, 373, 374, 375, 378, 380, 381, 382, 384, 385, 386, 389], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 68, 69, 76, 82, 98, 127, 142, 143, 144, 152, 155, 157, 158, 159, 161, 165, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 194, 197, 199, 202, 205, 207, 210, 213, 214, 216, 219, 220, 223, 225, 227, 229, 231, 233, 236, 238, 240, 243, 244, 247, 249, 251, 253, 255, 257, 259, 262, 264, 266, 269, 270, 271, 272, 274, 276, 279, 281, 283, 284, 286, 288, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 334, 336, 341, 343, 344, 346, 347, 348, 350, 353, 357, 366], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 102, 108, 109, 144, 308, 324, 326, 357], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 40, 47, 49, 59, 111, 112, 123, 124, 139, 142, 180, 188, 194, 207, 219, 272, 274, 276, 306, 307, 308, 310, 317, 318, 319, 320, 321, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 354, 355, 356, 357, 358, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391], "relat": [1, 6, 7, 11, 13, 14, 17, 139, 142, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 334, 338, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386], "inform": [1, 5, 6, 7, 8, 38, 98, 122, 133, 233, 259, 334, 336, 338, 358, 360, 369, 385, 386], "belong": [1, 10, 11, 12, 14, 17, 25, 35, 38, 45, 49, 69, 76, 82, 98, 113, 142, 144, 152, 155, 157, 159, 161, 165, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 194, 197, 199, 202, 205, 207, 210, 213, 214, 216, 219, 220, 223, 225, 227, 229, 231, 236, 238, 240, 243, 244, 247, 249, 251, 253, 255, 257, 262, 264, 266, 269, 270, 271, 272, 274, 276, 279, 281, 283, 284, 286, 288, 307, 308, 330, 331, 334, 336, 337, 343, 344, 346, 347, 348, 357, 390], "locat": [1, 5, 6, 9, 11, 14, 19, 38, 50, 115, 116, 121, 142, 314, 322, 334, 336, 338, 350, 355, 357, 358, 360, 364, 368, 371, 373, 376, 379, 385], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 125, 142, 147, 148, 198, 211, 212, 232, 258, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 311, 317, 322, 330, 332, 333, 334, 336, 357, 358, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 389], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 61, 64, 97, 113, 116, 121, 123, 125, 139, 142, 161, 292, 295, 298, 301, 303, 307, 308, 314, 322, 331, 333, 334, 336, 338, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 376, 381, 383, 384, 385, 389, 390], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 94, 95, 97, 116, 122, 139, 142, 143, 146, 147, 158, 161, 165, 175, 198, 211, 220, 232, 244, 258, 270, 280, 292, 295, 301, 303, 314, 317, 325, 330, 331, 332, 334, 335, 336, 337, 338, 341, 350, 355, 356, 357, 358, 364, 366, 368, 369, 371, 372, 373, 374, 375, 376, 381, 382, 384, 385, 386, 389, 391], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 94, 95, 139, 142, 161, 165, 175, 220, 244, 270, 311, 314, 330, 332, 334, 336, 338, 357, 358, 364, 368, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 385], "There": [1, 5, 6, 13, 292, 295, 301, 303, 311, 329, 330, 332, 334, 337, 338, 354, 357, 358, 359, 360, 361, 362, 363, 365, 379, 385], "wai": [1, 5, 7, 13, 14, 38, 73, 78, 139, 142, 334, 336, 337, 338, 354, 356, 357, 364, 368, 375, 383], "list": [1, 2, 6, 7, 9, 11, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 61, 88, 94, 95, 112, 115, 116, 121, 122, 125, 142, 144, 152, 155, 171, 186, 190, 194, 197, 207, 210, 225, 231, 240, 251, 255, 257, 266, 270, 276, 279, 281, 286, 334, 335, 336, 337, 338, 344, 355, 356, 357, 358, 360, 364, 365, 372, 373, 374, 381, 382, 385, 390, 391], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 113, 121, 122, 139, 142, 307, 308, 310, 317, 324, 326, 330, 331, 332, 334, 335, 336, 338, 351, 355, 357, 358, 360, 364, 383, 384, 389], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 65, 71, 72, 81, 110, 116, 133, 139, 142, 144, 149, 190, 191, 194, 207, 219, 226, 276, 292, 293, 294, 295, 298, 299, 300, 301, 303, 306, 307, 308, 310, 311, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 344, 345, 353, 355, 357, 358, 364, 366, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 389, 390], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 122, 123, 139, 142, 292, 295, 301, 303, 306, 307, 308, 311, 314, 322, 324, 326, 329, 330, 331, 332, 334, 336, 337, 338, 357, 358, 364, 365, 366, 368, 373, 375, 378, 379, 380, 384, 385, 389, 391], "find": [1, 6, 7, 15, 59, 72, 96, 139, 307, 308, 309, 314, 336, 337, 338, 354, 357, 358, 385], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 125, 139, 142, 314, 316, 318, 319, 320, 321, 327, 328, 329, 331, 334, 336, 337, 350, 353, 356, 357, 358, 360, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 385, 388], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 104, 109, 110, 118, 139, 142, 322, 330, 331, 332, 334, 335, 336, 337, 338, 355, 357, 358, 359, 373, 385, 391], "would": [1, 2, 5, 9, 11, 14, 18, 19, 25, 35, 38, 45, 50, 94, 95, 98, 139, 142, 161, 165, 175, 220, 244, 270, 317, 332, 334, 336, 337, 338, 354, 356, 357, 364, 368, 385], "ident": [1, 2, 5, 18, 173, 181, 189, 317, 322, 325, 334, 335, 337, 343, 357, 371, 376], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 84, 142, 331, 334, 336, 337, 357, 358], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 90, 93, 99, 100, 101, 102, 106, 107, 108, 117, 124, 125, 127, 142, 144, 152, 155, 157, 158, 161, 171, 292, 295, 296, 297, 301, 302, 303, 304, 305, 307, 308, 311, 331, 332, 333, 334, 337, 338, 340, 350, 351, 355, 357, 358, 364, 369, 384, 385, 386, 389], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 71, 139, 142, 314, 322, 334, 338, 355, 357, 358, 368, 375, 383, 385], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 76, 112, 129, 139, 142, 170, 309, 314, 317, 322, 330, 333, 334, 336, 337, 338, 351, 355, 356, 357, 358, 364, 368, 371, 372, 373, 374, 375, 376, 381, 382, 385], "As": [1, 4, 5, 6, 9, 11, 13, 18, 71, 142, 330, 334, 335, 336, 337, 338, 357, 358, 368, 372, 373, 374, 375, 381, 382, 383, 390], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 139, 142, 154, 158, 163, 177, 183, 201, 222, 246, 317, 324, 325, 326, 329, 336, 337, 338, 355, 356, 357, 358, 372, 373, 374, 375, 381, 382, 385, 391], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 64, 65, 111, 112, 113, 114, 116, 139, 317, 333, 334, 336, 338, 355, 356, 357, 358, 359, 360, 361, 362, 365, 369, 371], "proce": [1, 338], "iter": [1, 158, 159, 314, 322, 358, 366, 376], "through": [1, 2, 116, 142, 227, 253, 337, 338, 351, 357, 379], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 60, 69, 71, 72, 100, 107, 117, 119, 123, 132, 139, 144, 149, 165, 202, 214, 284, 306, 307, 308, 309, 310, 312, 313, 317, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 354, 355, 356, 358, 360, 364, 366, 368, 375, 376, 378, 382, 385, 390, 391], "setup_complet": 1, "ha": [1, 5, 6, 9, 11, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 96, 104, 109, 125, 134, 136, 137, 139, 161, 164, 165, 175, 220, 244, 270, 297, 307, 308, 314, 318, 319, 320, 322, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 350, 351, 354, 355, 357, 358, 368, 371, 373, 376, 378, 379, 383, 385], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 104, 116, 121, 134, 136, 137, 139, 142, 144, 151, 164, 197, 210, 231, 240, 257, 266, 279, 281, 286, 297, 314, 331, 334, 336, 337, 338, 350, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 371, 385], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 142, 164, 170, 172, 180, 188, 196, 209, 218, 219, 230, 242, 256, 268, 278, 292, 295, 301, 303, 330, 331, 336, 338, 342, 351, 356, 359, 360, 361, 362, 363, 365, 385], "initi": [1, 7, 8, 38, 125, 142, 147, 158, 161, 171, 173, 174, 178, 181, 184, 189, 198, 202, 211, 214, 219, 220, 223, 227, 232, 236, 238, 243, 247, 249, 258, 262, 264, 269, 271, 272, 274, 284, 297, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 347, 354, 355, 356, 358, 366, 368, 370, 390, 391], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 65, 67, 111, 112, 116, 121, 122, 125, 139, 142, 165, 219, 220, 272, 274, 305, 306, 316, 330, 334, 336, 351, 357, 358, 360, 362, 363, 365, 371, 379], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 70, 77, 139, 142, 180, 188, 204, 330, 331, 334, 336, 337, 355, 356, 357, 366, 368, 372, 373, 374, 375, 376, 381, 382, 391], "skip": [1, 5, 8, 122, 390], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 60, 61, 122, 123, 124, 125, 129, 134, 135, 136, 137, 138, 139, 140, 142, 165, 220, 271, 306, 308, 316, 330, 334, 338, 357, 358, 359, 360, 361, 363, 364, 365, 371, 385, 391], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 60, 65, 111, 122, 139, 142, 168, 300, 307, 308, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 356, 357, 359, 360, 361, 362, 363, 365, 368, 371, 373, 375, 383, 385, 391], "complet": [1, 5, 8, 27, 28, 29, 109, 357, 385], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 60, 139, 142, 164, 270, 297, 334, 336, 337, 338, 357, 358, 364, 368, 372, 373, 374, 381, 382, 385], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 142, 152, 155, 159, 161, 175, 199, 213, 220, 236, 244, 262, 270, 283, 306, 310, 317, 322, 324, 325, 326, 334, 335, 336, 337, 338, 356, 357, 368], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 139, 165, 334, 337, 338, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 385, 391], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 70, 71, 73, 86, 125, 134, 135, 136, 137, 138, 139, 140, 142, 165, 169, 173, 181, 189, 292, 295, 301, 303, 306, 307, 308, 309, 311, 314, 317, 322, 325, 330, 334, 336, 337, 338, 343, 350, 355, 356, 358, 364, 371, 372, 373, 374, 376, 381, 382, 385, 390], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 60, 61, 68, 85, 86, 89, 90, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 113, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 132, 133, 144, 147, 148, 149, 151, 152, 155, 158, 161, 163, 165, 169, 171, 177, 180, 183, 188, 198, 211, 212, 222, 232, 246, 258, 291, 306, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 335, 336, 337, 338, 344, 350, 351, 353, 354, 355, 356, 360, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 376, 379, 381, 382, 384, 385, 388, 389, 391], "mode": [1, 5, 14, 331, 338, 355, 356, 357, 385], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 139, 142, 173, 181, 189, 314, 317, 322, 334, 337, 338, 343, 350, 355, 357, 358, 364, 365, 371, 372, 373, 374, 376, 381, 382], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 90, 93, 97, 116, 117, 127, 128, 129, 142, 152, 155, 168, 334, 336, 337, 357, 373], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 37, 61, 139, 142, 165, 318, 319, 320, 321, 327, 328, 331, 332, 334, 336, 337, 338, 355, 357, 362, 364, 370, 385, 391], "constructor": [1, 9, 14, 142, 317, 324, 325, 326, 330, 357], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 94, 95, 105, 123, 317, 325, 331, 334, 336, 337, 338, 357, 384, 389, 390], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 60, 90, 117, 128, 129, 139, 142, 152, 155, 158, 161, 163, 168, 177, 183, 222, 246, 336, 337, 357, 358, 385], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 64, 67, 69, 76, 82, 97, 98, 113, 115, 121, 127, 138, 139, 140, 144, 152, 155, 157, 159, 161, 164, 165, 172, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 194, 196, 197, 199, 202, 205, 207, 209, 210, 213, 214, 216, 218, 219, 220, 223, 225, 227, 229, 230, 231, 236, 238, 240, 242, 243, 244, 247, 249, 251, 253, 255, 256, 257, 262, 264, 266, 268, 269, 270, 271, 272, 274, 276, 278, 279, 281, 283, 284, 286, 288, 330, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 346, 347, 348, 351, 355, 356, 357, 358, 364, 367, 370, 390, 391], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 69, 76, 82, 98, 142, 144, 152, 155, 157, 161, 165, 175, 197, 199, 202, 205, 210, 213, 214, 216, 220, 231, 236, 244, 257, 262, 270, 279, 281, 283, 284, 286, 288, 334, 336, 344, 357], "now": [1, 6, 139, 334, 338, 357, 358, 364], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 115, 116, 121, 122, 158, 159, 161, 314, 331, 334, 336, 337, 338, 344, 350, 355, 357, 371, 375, 376, 379, 385, 391], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 139, 142, 317, 334, 338, 354, 357, 368], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 139, 161, 175, 220, 244, 270, 317, 334, 335, 337, 338, 354, 357, 368, 371], "parent": [1, 33, 142, 318, 319, 320, 321, 324, 326, 327, 328, 330, 331, 334], "resid": [1, 5, 9, 40, 142, 144, 197, 210, 231, 257, 279, 281, 286, 332, 334, 336], "insid": [1, 12, 332, 334, 337, 372, 373, 374, 381, 382], "situat": [1, 17, 31, 168, 338, 357, 385], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 38, 39, 40, 122, 160, 220, 314, 317, 322, 325, 330, 332, 334, 336, 337, 338, 355, 357, 358, 371, 376, 385, 390, 391], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 142, 280, 314, 323, 331, 336, 357, 373, 382, 384, 389, 390], "with_viz": [1, 318, 319, 320, 321, 327, 328, 336, 372, 373, 374, 375, 381, 382], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 75, 80, 82, 113, 115, 116, 121, 125, 139, 142, 151, 158, 159, 161, 164, 167, 169, 199, 202, 205, 213, 214, 216, 283, 284, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 311, 314, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 331, 333, 334, 336, 337, 338, 350, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 371, 372, 374, 375, 381, 382, 391], "mesh": [1, 5, 7, 10, 17, 25, 38, 86, 87, 98, 100, 107, 124, 125, 144, 145, 147, 148, 152, 153, 155, 156, 158, 159, 162, 165, 166, 167, 169, 171, 174, 176, 178, 194, 197, 198, 199, 200, 202, 205, 207, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 227, 231, 232, 233, 236, 237, 238, 240, 245, 247, 257, 258, 259, 262, 263, 264, 266, 269, 271, 272, 276, 279, 281, 283, 284, 286, 288, 292, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 346, 347, 355, 356, 358, 368, 370, 385, 390], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 142, 144, 152, 155, 173, 174, 181, 184, 189, 199, 205, 213, 216, 219, 220, 227, 236, 243, 249, 262, 283, 288, 314, 316, 331, 334, 336, 337, 338, 350, 358, 366, 371, 373, 376, 378, 380, 385], "forward": [1, 5, 7, 9, 14, 38, 142, 144, 152, 155, 158, 159, 161, 171, 174, 182, 184, 205, 216, 219, 249, 269, 271, 288, 314, 331, 334, 336, 337, 347, 350, 358, 366, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 389], "resolut": [1, 9, 13, 14, 17, 69, 72, 76, 77, 81, 99, 103, 106, 142, 144, 145, 149, 151, 152, 155, 157, 161, 164, 173, 174, 175, 178, 181, 182, 184, 186, 189, 194, 197, 199, 207, 210, 213, 219, 220, 223, 231, 236, 238, 240, 249, 255, 257, 262, 264, 266, 276, 279, 281, 283, 286, 307, 308, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 358, 366, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 389, 391], "singl": [1, 5, 8, 9, 19, 38, 125, 139, 268, 269, 271, 272, 274, 329, 334, 336, 337, 342, 343, 344, 346, 347, 348, 350, 351, 355, 357, 364, 369, 372, 373, 374, 377, 378, 380, 381, 382, 386, 387], "analysi": [1, 6, 9, 19, 142, 317, 325, 336, 337, 355, 356, 358, 372, 373, 374, 378, 379, 380, 381, 382, 391], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 75, 80, 85, 117, 118, 119, 128, 129, 132, 133, 139, 142, 151, 163, 164, 172, 177, 183, 196, 209, 218, 222, 230, 242, 246, 256, 268, 278, 330, 331, 334, 336, 337, 338, 342, 355, 357, 358, 363, 365, 372, 373, 374, 381, 382], "remap": [1, 10, 19, 325, 356, 373, 375, 379, 384, 389], "visual": [1, 10, 13, 17, 219, 227, 240, 253, 266, 318, 319, 320, 321, 322, 324, 326, 327, 328, 330, 334, 336, 355, 356, 372, 373, 374, 375, 376, 378, 380, 381, 382, 384, 389], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 121, 139, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 337, 338, 355, 356, 357, 358, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 390, 391], "spheric": [1, 5, 152, 305, 318, 319, 320, 321, 327, 328, 336, 372, 373, 374, 381, 382, 390], "qu": [1, 5, 11, 142, 336, 357, 358, 370, 372, 373, 374, 375, 381, 382, 390], "base_mesh": [1, 5, 13, 69, 76, 144, 164, 202, 205, 214, 216, 283, 284, 288, 334, 336, 357, 372, 373, 374, 381, 382], "60km": [1, 5, 336, 372, 373, 374, 381, 382], "90km": [1, 5], "120km": [1, 5, 336], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 11, 164, 336], "map": [1, 8, 17, 20, 31, 76, 77, 98, 123, 124, 125, 168, 336, 338, 358], "viz": [1, 5, 19, 142, 194, 207, 219, 276, 334, 336, 372, 374, 381, 382], "two": [1, 5, 6, 10, 18, 122, 142, 181, 191, 226, 307, 308, 317, 318, 322, 325, 329, 330, 331, 334, 335, 337, 338, 343, 345, 357, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 388], "first": [1, 6, 9, 14, 15, 88, 116, 139, 142, 307, 308, 317, 322, 324, 325, 326, 329, 334, 336, 337, 338, 354, 357, 359, 360, 361, 362, 363, 364, 365, 371, 373, 375, 376, 383, 385], "verbos": [1, 5, 6, 65, 67, 139, 334, 357, 390], "10": [1, 9, 13, 71, 139, 314, 317, 322, 324, 326, 330, 331, 357, 358, 364, 366, 368, 371, 372, 374, 375, 376, 378, 379, 380, 381, 383, 391], "name": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 60, 61, 63, 64, 65, 69, 76, 82, 86, 90, 98, 99, 100, 101, 102, 103, 106, 107, 108, 111, 112, 114, 115, 116, 117, 121, 122, 123, 124, 125, 127, 128, 132, 139, 142, 144, 145, 146, 147, 148, 149, 152, 155, 157, 158, 159, 161, 164, 165, 168, 171, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 198, 199, 202, 205, 211, 212, 213, 214, 216, 219, 220, 223, 232, 236, 243, 244, 247, 249, 251, 258, 262, 270, 276, 279, 280, 281, 283, 284, 286, 288, 291, 306, 330, 331, 334, 336, 337, 338, 344, 346, 348, 355, 357, 358, 365, 371, 385, 390], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 88, 142, 147, 148, 170, 175, 198, 211, 212, 232, 258, 270, 307, 308, 329, 334, 337, 366, 371, 372, 374, 376, 381, 383, 388], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 336, 337, 338, 372, 373, 374, 381, 382], "what": [1, 2, 6, 11, 13, 17, 139, 276, 336, 337, 357, 365, 384, 385, 389], "follow": [1, 4, 5, 7, 9, 11, 13, 14, 19, 68, 139, 144, 292, 295, 301, 303, 314, 316, 334, 335, 336, 338, 350, 351, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 385, 388], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 65, 69, 76, 82, 98, 115, 142, 144, 152, 155, 157, 161, 165, 175, 197, 199, 202, 205, 210, 213, 214, 216, 220, 231, 236, 238, 240, 244, 257, 262, 264, 266, 270, 272, 274, 279, 281, 283, 284, 286, 288, 330, 332, 334, 336, 337, 357, 384, 385, 389, 391], "bold": [1, 336], "elsewher": [1, 338], "tree": [1, 7, 117, 119, 133, 307, 308, 309, 336, 386], "thu": [1, 2, 7, 14, 338, 357, 372, 373, 374, 381, 382], "similar": [1, 2, 5, 9, 12, 13, 14, 135, 138, 139, 140, 142, 330, 332, 337, 338, 357, 358, 368, 372, 374, 381, 382, 385], "had": [1, 139], "maintain": [1, 314, 372, 385], "local": [1, 5, 6, 8, 9, 11, 18, 40, 314, 332, 334, 338, 350, 354, 357, 358, 364, 365, 366, 368], "debug": [1, 8, 134, 135, 136, 137, 138, 139, 140, 357, 360, 361, 365, 372, 381], "easier": [1, 14, 334, 336, 337, 338, 358, 385, 390], "symbol": [1, 60, 334], "link": [1, 2, 7, 9, 11, 14, 17, 40, 46, 53, 60, 139, 330, 334, 336, 338, 357, 363, 364, 369, 385, 386], "were": [1, 48, 61, 139, 270, 312, 313, 334, 337, 355, 357, 358, 362, 368], "even": [1, 6, 12, 13, 14, 40, 57, 139, 334, 337, 338, 357, 358, 364, 385], "compass": [1, 5, 6, 334, 337, 355, 357], "though": [1, 11, 38, 336, 337, 357], "global": [1, 13, 17, 102, 103, 108, 276, 308, 318, 319, 320, 321, 327, 328, 330, 334, 335, 337, 355, 356, 357, 358, 365, 372, 373, 374, 375, 381, 382, 384, 385, 389, 391], "dynamic_adjust": [1, 14, 358], "allow": [1, 2, 6, 8, 17, 18, 25, 35, 38, 45, 57, 122, 139, 142, 165, 307, 308, 334, 355, 357, 358, 364, 368, 372, 373, 374, 381, 382, 383, 391], "one": [1, 2, 5, 6, 7, 10, 11, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 60, 115, 116, 121, 139, 142, 160, 164, 165, 181, 270, 307, 308, 314, 317, 318, 320, 322, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 343, 353, 354, 355, 356, 358, 364, 365, 368, 371, 372, 373, 374, 376, 380, 381, 382, 384, 385, 388, 389, 390, 391], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 86, 142, 151, 158, 180, 188, 311, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 357, 383], "port": [1, 357, 365], "instead": [1, 5, 6, 12, 14, 15, 25, 112, 134, 139, 334, 337, 338, 355, 357, 372, 373, 374, 381, 382, 385, 390], "seri": [1, 14, 142, 186, 192, 251, 319, 321, 324, 353, 357, 366, 370, 376], "indic": [1, 7, 8, 14, 17, 18, 19, 38, 39, 109, 116, 125, 139, 142, 298, 307, 308, 310, 332, 334, 354, 357, 358, 368, 376, 383], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 316, 334, 336, 337, 338, 357, 360, 362, 363, 365, 385], "ran": [1, 110], "ico": [1, 5, 142, 336, 357, 370, 372, 373, 374, 381, 382, 390], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 116, 121, 139, 165, 314, 331, 334, 338, 350, 357, 358, 359, 360, 361, 362, 363, 364, 365, 385], "runtim": [1, 8, 14, 30, 44, 142, 154, 163, 177, 183, 201, 222, 246, 334, 357, 376], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 71, 99, 103, 106, 122, 124, 125, 134, 135, 136, 137, 138, 139, 140, 142, 292, 295, 300, 301, 303, 306, 307, 308, 316, 318, 319, 320, 322, 327, 328, 330, 334, 337, 338, 351, 354, 357, 358, 360, 364, 366, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389], "01": [1, 14, 142, 351, 357, 376, 379, 383, 388], "00": [1, 14, 18, 142, 336, 351, 357, 363, 365, 385], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 385], "02": [1, 360], "59": 1, "icos_map_60km": 1, "20": [1, 184, 249, 317, 322, 325, 335, 357, 371, 379, 383], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 6, 9, 14, 57, 139, 317, 322, 325, 337, 338, 372, 373, 374, 381, 382, 383], "mechan": [1, 334], "prevent": [1, 334], "expect": [1, 2, 12, 17, 139, 142, 331, 334, 338, 357], "affect": [1, 6, 318, 320, 327, 328, 334, 338, 357, 375], "howev": [1, 13, 334, 335, 336, 338, 357], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 69, 122, 139, 142, 152, 155, 161, 174, 175, 180, 184, 188, 199, 213, 219, 220, 236, 244, 249, 262, 269, 270, 271, 283, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 334, 335, 336, 347, 355, 356, 357, 358, 364, 371, 376, 390], "successfulli": [1, 48, 357], "after": [1, 5, 6, 7, 9, 11, 17, 18, 19, 38, 40, 41, 62, 83, 104, 109, 139, 293, 294, 297, 314, 318, 320, 321, 327, 328, 331, 334, 336, 338, 350, 357, 358, 360, 363, 365, 373, 375, 385, 388], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 110, 116, 121, 125, 137, 139, 142, 144, 149, 151, 168, 197, 210, 231, 240, 257, 266, 279, 281, 286, 310, 314, 317, 324, 325, 326, 330, 332, 334, 335, 336, 337, 338, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 381, 382, 385, 390, 391], "remov": [1, 5, 14, 24, 52, 62, 112, 317, 322, 324, 325, 326, 336, 338, 357], "longer": [1, 181, 317, 322, 325, 335, 343, 357, 371, 372, 373, 374, 375, 376, 381, 382], "about": [1, 5, 6, 7, 8, 12, 14, 38, 98, 127, 142, 330, 334, 336, 337, 338, 357, 358, 360, 375, 382], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 50, 57, 77, 139, 142, 163, 177, 183, 222, 246, 314, 318, 319, 320, 321, 327, 328, 331, 334, 336, 337, 338, 350, 351, 354, 356, 357, 358, 359, 364, 365, 368, 371, 372, 373, 374, 381, 382, 385, 390], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 139, 142, 314, 316, 331, 334, 335, 336, 337, 351, 354, 358, 359, 360, 361, 362, 363, 364, 365, 369, 385], "enforc": [1, 316, 338], "framework": [1, 5, 7, 9, 12, 13, 14, 111, 314, 330, 331, 334, 336, 350, 355, 356, 357, 366, 369, 383, 384, 386, 389, 391], "propos": [1, 2], "close": [1, 6, 72, 139, 322, 356, 372, 373, 374, 381, 382], "root": [1, 40, 139, 314, 331, 334, 337, 338, 350, 355, 358, 359, 360, 361, 362, 363, 364, 365, 368, 385], "live": [1, 50, 336, 376, 385], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 70, 77, 78, 81, 84, 98, 104, 122, 142, 165, 181, 190, 225, 233, 259, 292, 295, 301, 303, 306, 307, 308, 311, 313, 318, 319, 320, 321, 327, 328, 331, 332, 334, 336, 337, 343, 344, 364, 366, 368, 371, 372, 375, 376, 378, 379, 380], "think": [1, 5, 357], "condit": [1, 7, 38, 142, 147, 158, 161, 174, 178, 198, 202, 211, 214, 219, 220, 223, 227, 232, 236, 238, 247, 258, 262, 264, 269, 271, 272, 274, 284, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 334, 335, 336, 337, 347, 353, 355, 356, 358, 366, 370, 390, 391], "shown": [1, 14, 19, 139, 332, 366, 383], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 61, 73, 76, 78, 99, 103, 104, 106, 115, 116, 121, 125, 134, 135, 136, 137, 138, 139, 140, 142, 219, 305, 307, 308, 311, 314, 317, 324, 325, 326, 330, 331, 332, 334, 335, 336, 337, 338, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 385, 390, 391], "simpli": [1, 14, 18, 57, 139, 174, 219, 331, 334, 336, 338, 357, 368, 385, 390], "prefer": [1, 2, 139, 334, 335, 357, 358], "convent": [1, 334, 338, 357], "futur": [1, 13, 44, 125, 334, 337, 355, 356, 357, 358, 375, 383, 385, 391], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 122, 139, 142, 165, 314, 329, 331, 334, 337, 338, 340, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 371, 376, 380, 383, 385, 390, 391], "independ": [1, 2, 5, 6, 335, 355], "yyyi": 2, "mm": [2, 142, 170], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 77, 81, 82, 86, 87, 88, 90, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 127, 128, 132, 133, 139, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 170, 173, 174, 175, 176, 178, 180, 181, 182, 184, 186, 188, 189, 190, 192, 194, 197, 198, 199, 200, 202, 205, 207, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 225, 227, 229, 231, 232, 236, 237, 238, 240, 243, 244, 245, 247, 249, 251, 253, 255, 257, 258, 262, 263, 264, 266, 269, 270, 271, 272, 274, 276, 279, 280, 281, 283, 284, 286, 288, 292, 293, 294, 295, 298, 299, 300, 301, 303, 305, 306, 307, 308, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 344, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391], "purpos": [2, 330, 337, 357, 391], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 77, 123, 124, 129, 139, 142, 165, 168, 227, 253, 290, 292, 295, 301, 303, 314, 318, 319, 320, 321, 327, 328, 329, 330, 331, 334, 335, 337, 338, 350, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 389], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 60, 76, 77, 82, 88, 94, 95, 98, 102, 108, 109, 111, 112, 117, 119, 122, 125, 128, 133, 134, 136, 137, 139, 142, 147, 148, 152, 154, 155, 159, 161, 163, 164, 165, 173, 174, 175, 177, 178, 181, 182, 183, 184, 186, 189, 190, 192, 198, 201, 211, 212, 219, 220, 222, 223, 225, 227, 232, 243, 244, 246, 247, 249, 251, 258, 270, 292, 295, 301, 303, 306, 307, 308, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 344, 346, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391], "summar": 2, "process": [2, 6, 8, 14, 33, 94, 95, 133, 334, 337, 338, 350, 355, 356, 357, 376], "It": [2, 5, 6, 9, 14, 17, 38, 44, 123, 142, 318, 319, 320, 321, 322, 324, 326, 327, 328, 330, 334, 335, 336, 337, 338, 355, 357, 358, 364, 373, 378, 380, 381, 382], "code": [2, 5, 7, 9, 12, 14, 38, 142, 314, 330, 331, 334, 335, 336, 340, 350, 355, 356, 358, 367, 371, 376, 383, 385], "do": [2, 5, 9, 11, 14, 17, 18, 128, 139, 142, 330, 334, 336, 338, 354, 355, 356, 357, 364, 372, 373, 374, 375, 381, 382, 385], "doe": [2, 6, 9, 12, 14, 334, 340, 356, 357, 364, 376], "primari": [2, 5, 9, 357, 390], "challeng": 2, "respect": [2, 8, 9, 14, 19, 142, 145, 307, 308, 322, 334, 337, 372, 373, 374, 376, 381, 382, 384, 389], "softwar": [2, 86, 363, 365, 385], "appropri": [2, 5, 6, 14, 15, 26, 81, 87, 139, 142, 314, 317, 322, 324, 325, 326, 329, 331, 332, 334, 338, 350, 356, 357, 358, 364, 384, 385, 389], "final": [2, 5, 6, 7, 8, 139, 158, 307, 308, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 334, 336, 353, 357, 366, 373, 381], "statement": [2, 12, 334, 355], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 76, 122, 142, 180, 188, 236, 262, 290, 314, 316, 317, 322, 324, 325, 326, 329, 331, 334, 338, 350, 356, 357, 358, 364, 372, 373, 374, 375, 378, 380, 381, 382, 385], "regard": 2, "last": [2, 142, 335, 338, 371, 385], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 117, 119, 142, 165, 185, 250, 317, 322, 324, 325, 326, 334, 336, 338, 356, 357, 358, 371, 376, 385], "your": [2, 4, 5, 6, 11, 139, 314, 337, 338, 350, 354, 357, 358, 359, 360, 364, 365, 372, 373, 374, 381, 382, 385], "appear": [2, 139, 334, 357], "under": [2, 17, 38, 39, 139, 142, 316, 334, 335, 338, 356, 368, 376, 391], "head": [2, 316, 360], "correspond": [2, 6, 7, 17, 122, 139, 142, 144, 310, 314, 322, 334, 338, 350, 371], "discuss": [2, 6, 142, 318, 319, 320, 321, 327, 328, 334, 337, 357, 371, 376], "technic": [2, 7], "issu": [2, 6, 334, 335, 338], "focu": [2, 357], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 116, 121, 127, 132, 134, 135, 136, 137, 138, 139, 140, 148, 152, 154, 155, 163, 173, 175, 177, 181, 182, 183, 184, 189, 201, 212, 222, 246, 249, 270, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 334, 335, 337, 338, 343, 350, 354, 355, 356, 358, 364, 371, 376, 378, 380, 384], "To": [2, 5, 6, 12, 17, 18, 122, 138, 139, 140, 142, 314, 334, 337, 338, 350, 351, 357, 359, 360, 364, 368, 372, 373, 374, 381, 382, 385], "extent": [2, 13, 17, 357, 371], "possibl": [2, 8, 11, 72, 142, 316, 318, 319, 320, 321, 322, 327, 328, 334, 335, 336, 337, 356, 357, 368, 375], "other": [2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 38, 39, 41, 49, 57, 109, 125, 134, 191, 226, 312, 313, 318, 319, 320, 321, 327, 328, 329, 330, 331, 332, 336, 337, 338, 345, 354, 355, 356, 358, 371, 372, 373, 374, 381, 382, 391], "clean": [2, 4, 5, 6, 62, 116, 121, 334, 336, 338], "plan": [2, 13, 142, 314, 324, 326, 334, 350, 355, 359, 360, 361, 362, 363, 365, 378, 380, 391], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 116, 134, 139, 142, 146, 147, 198, 211, 232, 258, 280, 316, 317, 322, 324, 325, 326, 329, 334, 337, 338, 357, 358, 366, 369, 372, 373, 374, 375, 378, 380, 381, 382, 385, 386, 391], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 134, 135, 136, 137, 138, 139, 140, 142, 314, 331, 334, 336, 337, 338, 350, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 372, 373, 374, 375, 376, 381, 382, 385, 390, 391], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 98, 102, 108, 122, 128, 139, 142, 161, 165, 170, 175, 220, 244, 270, 307, 308, 314, 317, 322, 324, 325, 326, 329, 330, 331, 332, 334, 335, 336, 337, 338, 350, 353, 354, 355, 356, 357, 358, 364, 366, 369, 373, 376, 381, 384, 385], "intend": [2, 6, 8, 9, 335, 358, 380, 391], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 65, 122, 305, 316, 318, 319, 320, 321, 327, 328, 332, 334, 337, 338, 354, 357, 375, 385], "pde": 2, "solver": [2, 336, 338, 356, 385], "well": [2, 6, 9, 12, 13, 139, 142, 298, 310, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 334, 338, 355, 357, 358, 373, 385, 391], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 60, 86, 90, 95, 99, 100, 101, 102, 103, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 122, 125, 128, 129, 132, 133, 139, 144, 147, 148, 154, 158, 159, 165, 168, 175, 197, 201, 204, 205, 210, 212, 216, 220, 231, 232, 240, 244, 257, 258, 266, 279, 281, 286, 288, 299, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 388, 389, 390, 391], "low": [2, 125, 375], "variabl": [2, 5, 11, 13, 19, 20, 25, 38, 41, 48, 49, 57, 69, 76, 82, 86, 98, 99, 103, 106, 122, 125, 127, 128, 133, 139, 142, 144, 145, 146, 147, 148, 149, 152, 155, 157, 161, 165, 171, 175, 178, 184, 186, 190, 194, 198, 205, 207, 211, 212, 216, 220, 223, 225, 231, 232, 233, 236, 238, 240, 244, 249, 251, 255, 257, 258, 259, 262, 264, 266, 270, 276, 279, 280, 281, 286, 288, 292, 295, 296, 297, 301, 302, 303, 304, 310, 311, 316, 322, 329, 334, 337, 338, 344, 345, 350, 354, 357, 364, 366, 369, 371, 376, 384, 385, 386, 389], "declar": [2, 7], "interfac": [2, 10, 290, 291, 292, 295, 301, 303, 306, 311, 322, 337, 338, 356, 357, 368], "sequenc": [2, 5, 14, 142, 305, 318, 319, 320, 321, 327, 328, 333, 334, 337, 355, 357, 385, 390, 391], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 60, 94, 95, 96, 98, 109, 122, 125, 134, 135, 136, 137, 138, 139, 140, 142, 157, 161, 165, 170, 175, 220, 244, 270, 317, 322, 325, 334, 336, 337, 338, 351, 354, 355, 357, 358, 364, 365, 368, 372, 373, 374, 375, 376, 381, 382, 384, 385, 389], "want": [2, 5, 6, 11, 14, 17, 18, 51, 139, 142, 334, 336, 338, 354, 357, 358, 364, 365, 383, 385, 391], "math": 2, "syntax": [2, 142, 357], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 338, 355, 357, 385], "2": [2, 6, 13, 14, 15, 18, 39, 125, 139, 142, 189, 218, 223, 316, 317, 318, 320, 322, 327, 328, 332, 335, 338, 344, 351, 357, 358, 360, 364, 368, 369, 371, 373, 375, 376, 377, 378, 379, 380, 385], "2ab": 2, "imag": [2, 7, 19, 123, 124, 125, 306, 330, 357, 384, 389], "keep": [2, 5, 6, 9, 14, 25, 57, 318, 319, 320, 321, 327, 328, 330, 331, 334, 336, 338, 357, 384, 389], "mind": [2, 5, 357], "quit": [2, 332, 334, 336, 357, 376], "small": [2, 9, 44, 139, 307, 308, 330, 334, 357, 359, 360, 367, 368, 376, 381, 383, 385], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 61, 81, 94, 95, 98, 111, 112, 113, 116, 125, 129, 139, 142, 144, 161, 165, 170, 175, 220, 244, 270, 292, 295, 298, 301, 303, 305, 307, 308, 309, 311, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 391], "png": [2, 13, 19, 306, 318, 319, 320, 321, 327, 328, 334, 357], "okai": [2, 6, 334, 357], "size": [2, 13, 19, 71, 72, 81, 124, 125, 142, 167, 169, 171, 306, 330, 357, 358, 371, 373, 375, 378, 379, 380, 383, 384, 389], "repo": [2, 5, 6, 139, 314, 350, 356, 357, 386], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 139, 142, 330, 331, 332, 334, 335, 336, 337, 338, 354, 355, 357, 358, 360, 368, 384, 385, 390, 391], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 334, 336, 338, 357], "sourc": [2, 6, 7, 11, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 334, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 357, 358, 364, 365, 385], "project": [2, 5, 6, 7, 68, 102, 108, 314, 337, 338, 350, 351, 357, 358, 359, 360, 364, 385, 386], "manag": [2, 354, 364], "item": [2, 357], "git": [2, 6, 16, 97, 314, 338, 350, 357, 358, 385], "branch": [2, 5, 139, 314, 331, 334, 338, 350, 356, 357, 385], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 334, 338, 364], "block": [2, 336], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 99, 103, 106, 138, 139, 140, 142, 330, 332, 334, 336, 337, 338, 354, 356, 357, 358, 364, 371, 372, 373, 374, 375, 381, 382, 385, 391], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 142, 330, 331, 334, 336, 337, 357], "example_funct": 2, "foo": [2, 337], "return": [2, 7, 15, 31, 48, 56, 59, 62, 63, 70, 71, 72, 77, 81, 87, 88, 90, 93, 94, 104, 113, 114, 116, 117, 119, 122, 125, 128, 132, 133, 142, 145, 146, 147, 148, 153, 156, 158, 162, 164, 166, 168, 170, 171, 176, 198, 200, 204, 211, 212, 221, 232, 234, 235, 237, 245, 258, 260, 261, 263, 280, 290, 293, 294, 298, 299, 300, 305, 307, 308, 309, 310, 311, 312, 313, 336, 337, 357, 373], "how": [2, 5, 6, 12, 14, 76, 142, 333, 334, 336, 337, 338, 358, 364, 365, 376], "show": [2, 7, 13, 61, 305, 306, 334, 357, 364, 365, 371, 372, 373, 374, 375, 381, 382, 384, 389], "met": 2, "regress": [2, 317, 318, 319, 320, 321, 325, 327, 328, 335, 355, 356, 357, 371, 373, 376, 385, 390], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 64, 93, 94, 95, 96, 97, 116, 121, 139, 142, 158, 161, 207, 219, 276, 290, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 334, 337, 338, 356, 357, 358, 360, 363, 364, 365, 368, 376, 378, 380, 384, 385, 389, 391], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 64, 97, 111, 113, 116, 121, 137, 139, 158, 159, 161, 180, 188, 205, 216, 288, 332, 333, 334, 335, 336, 337, 338, 354, 355, 357, 358, 364, 372, 373, 374, 375, 381, 382, 383, 385, 391], "properli": [2, 134, 136, 137, 357, 358, 385], "addit": [2, 6, 7, 9, 18, 38, 142, 311, 312, 313, 322, 329, 330, 331, 332, 334, 336, 337, 338, 357, 375, 376, 379], "modif": [2, 6, 7, 334, 351], "nightli": [2, 338, 385, 390], "might": [2, 6, 11, 14, 17, 19, 139, 142, 309, 330, 334, 338, 357, 358, 364, 385], "made": [2, 5, 17, 38, 41, 49, 122, 334, 336, 337, 338, 351, 353, 355, 357, 391], "continu": [2, 6, 334, 357], "page": [3, 7, 139, 359], "auto": 3, "summari": [3, 360], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 77, 115, 116, 139, 142, 316, 317, 318, 319, 320, 321, 327, 328, 330, 332, 334, 335, 336, 337, 338, 355, 364, 369, 371, 375, 376, 384, 385, 386, 389, 391], "relev": [3, 7, 9, 142, 318, 319, 320, 321, 324, 326, 327, 328, 357, 359, 360, 361, 362, 363, 364, 365, 384, 385, 389], "seaic": [3, 10, 20, 40, 331, 334, 353, 355, 356, 385, 386, 389, 391], "long": [4, 25, 35, 38, 45, 94, 95, 161, 165, 175, 220, 244, 270, 334, 357, 371, 376, 385], "procedur": [4, 139, 338, 357, 365], "conda": [4, 5, 16, 97, 134, 136, 137, 139, 314, 331, 337, 350, 356, 357, 358, 359, 360, 361, 362, 363, 365], "environ": [4, 5, 11, 134, 136, 137, 314, 331, 337, 350, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "spack": [4, 5, 134, 136, 137, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365], "compil": [4, 5, 6, 14, 134, 135, 136, 137, 138, 139, 140, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 385], "system": [4, 5, 6, 25, 35, 38, 45, 94, 95, 96, 134, 136, 137, 139, 161, 165, 175, 220, 244, 270, 334, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 385], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 68, 90, 117, 134, 136, 137, 139, 142, 152, 155, 158, 161, 330, 331, 332, 334, 336, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 385], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 61, 77, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 113, 115, 116, 117, 119, 121, 122, 123, 124, 125, 134, 135, 136, 137, 138, 139, 140, 154, 163, 177, 180, 183, 188, 195, 201, 208, 222, 246, 270, 277, 292, 295, 296, 297, 301, 302, 303, 304, 307, 308, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 336, 337, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 376, 378, 380, 381, 382, 383, 384, 389, 390], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 62, 83, 97, 109, 110, 113, 115, 116, 121, 122, 134, 135, 136, 137, 138, 139, 140, 142, 180, 188, 307, 308, 309, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 333, 334, 336, 337, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 372, 373, 374, 376, 381, 382, 384, 389, 390, 391], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 90, 97, 117, 121, 128, 139, 142, 152, 155, 158, 161, 330, 331, 332, 333, 334, 336, 338, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 385], "Then": [4, 6, 7, 11, 14, 134, 135, 136, 137, 138, 139, 140, 314, 317, 322, 324, 325, 326, 329, 331, 334, 336, 338, 350, 357, 364, 371, 375, 376, 385], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 68, 93, 94, 95, 104, 116, 121, 137, 139, 144, 152, 154, 155, 161, 163, 165, 174, 175, 177, 181, 183, 186, 190, 192, 197, 199, 201, 210, 213, 219, 220, 222, 225, 231, 236, 240, 244, 246, 251, 257, 262, 266, 269, 270, 271, 279, 281, 283, 286, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 332, 333, 335, 336, 337, 343, 344, 347, 350, 353, 354, 355, 356, 357, 358, 364, 366, 370, 390, 391], "script": [4, 5, 6, 11, 12, 19, 54, 64, 135, 138, 139, 140, 337, 355, 356, 357, 360, 364], "doc": [4, 7, 357, 365], "cd": [4, 6, 314, 338, 350, 357, 360, 385], "html": [4, 369], "view": [4, 324, 326, 338, 378, 380], "open": [4, 6, 338, 357, 376], "_build": 4, "index": [4, 15, 18, 88, 142, 144, 145, 147, 148, 149, 198, 211, 212, 232, 258, 292, 293, 294, 295, 298, 299, 300, 301, 303, 305, 307, 308, 310, 311, 330, 357, 368], "act": [5, 337, 368], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 124, 139, 173, 174, 317, 324, 325, 326, 329, 331, 334, 336, 357, 358, 364, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 385], "These": [5, 6, 8, 9, 14, 20, 38, 139, 142, 314, 316, 331, 334, 336, 337, 338, 350, 351, 356, 357, 358, 364, 366, 371, 375, 376, 380, 381, 385, 390, 391], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 64, 97, 139, 142, 151, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 334, 335, 336, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 369, 371, 372, 373, 374, 375, 376, 381, 382, 386], "describ": [5, 7, 14, 17, 19, 97, 117, 119, 133, 142, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 372, 373, 374, 375, 376, 381, 385], "instal": [5, 6, 139, 338, 357, 364, 365, 385], "abov": [5, 7, 14, 18, 19, 139, 311, 330, 332, 334, 335, 336, 337, 338, 357, 358, 372, 373, 374, 375, 381, 383, 385, 390], "off": [5, 6, 338, 354], "http": [5, 7, 11, 14, 60, 334, 337, 354, 356, 357, 358, 365, 369, 379, 385, 386], "github": [5, 6, 7, 337, 338, 356, 357, 358, 369, 385, 386], "com": [5, 6, 7, 14, 60, 337, 338, 356, 357, 358, 385, 386], "e3sm": [5, 7, 10, 11, 38, 127, 139, 314, 331, 334, 335, 337, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 386], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 60, 69, 70, 76, 77, 82, 98, 105, 115, 116, 121, 127, 139, 142, 144, 152, 155, 158, 159, 161, 164, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 194, 197, 199, 202, 205, 207, 210, 213, 214, 216, 219, 220, 223, 225, 227, 229, 231, 233, 236, 238, 240, 243, 244, 247, 249, 251, 253, 255, 257, 259, 262, 264, 266, 269, 270, 271, 272, 274, 276, 279, 281, 283, 284, 286, 288, 292, 295, 301, 303, 318, 319, 320, 321, 322, 327, 328, 329, 330, 334, 335, 336, 337, 343, 344, 346, 347, 348, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 372, 373, 374, 381, 382, 385, 390], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 134, 136, 137, 139, 305, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 334, 338, 354, 357, 358, 364, 369, 370, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386, 388, 390, 391], "mean": [5, 306, 338, 357, 368, 371, 372, 373, 374, 375, 379, 381, 382, 390], "chang": [5, 6, 8, 11, 17, 61, 76, 109, 110, 142, 151, 314, 331, 334, 335, 336, 337, 338, 350, 355, 357, 358, 360, 365, 366, 368, 371, 372, 373, 374, 376, 379, 381, 382, 385, 390], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 68, 104, 111, 125, 139, 142, 307, 308, 309, 312, 313, 317, 324, 325, 326, 329, 331, 334, 335, 336, 337, 338, 354, 355, 356, 357, 358, 364, 365, 385], "tool": [5, 6, 9, 12, 14, 17, 314, 331, 334, 338, 350, 356, 357, 358], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 64, 77, 86, 91, 94, 95, 98, 104, 111, 122, 123, 124, 125, 126, 127, 128, 133, 134, 138, 139, 140, 142, 144, 145, 146, 147, 149, 153, 156, 158, 161, 162, 163, 165, 166, 167, 168, 169, 170, 175, 176, 177, 183, 190, 194, 198, 200, 207, 211, 220, 221, 222, 227, 232, 237, 244, 245, 246, 255, 256, 258, 263, 270, 276, 280, 281, 286, 290, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 344, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 390, 391], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 65, 68, 74, 79, 93, 94, 95, 97, 98, 111, 112, 113, 115, 116, 121, 139, 157, 158, 159, 161, 165, 167, 169, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 338, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 386, 390], "support": [5, 6, 8, 13, 17, 38, 142, 292, 301, 303, 316, 334, 337, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 368, 371, 376, 383, 391], "machin": [5, 8, 9, 11, 38, 40, 63, 64, 97, 115, 116, 121, 314, 334, 337, 350, 356, 357, 358, 359, 360, 361, 362, 363, 365], "option": [5, 7, 9, 11, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 63, 64, 65, 69, 75, 76, 77, 80, 82, 86, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 111, 112, 115, 116, 117, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 139, 145, 147, 148, 151, 152, 154, 155, 157, 158, 159, 161, 163, 165, 168, 170, 175, 177, 183, 185, 195, 198, 201, 208, 211, 212, 219, 220, 222, 227, 232, 233, 243, 244, 246, 249, 250, 258, 259, 270, 272, 274, 277, 290, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 346, 350, 351, 354, 356, 358, 368, 370, 385, 391], "help": [5, 6, 13, 139, 330, 331, 332, 334, 338, 356, 357, 364, 369, 386], "usag": [5, 15, 19, 336, 358, 360, 365], "h": [5, 14, 357, 375], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 133, 139, 142, 144, 149, 234, 235, 260, 261, 270, 318, 319, 320, 321, 327, 328, 334, 336, 337, 338, 354, 357, 358, 360, 362, 363, 364, 370, 371, 372, 374, 378, 380, 381, 385, 390, 391], "n": [5, 6, 70, 77, 78, 84, 334, 357, 360, 364, 365, 371, 373, 375, 376, 378, 379, 380, 384, 385, 389], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 63, 64, 65, 69, 70, 71, 72, 73, 81, 93, 94, 95, 98, 116, 139, 142, 153, 156, 161, 162, 165, 166, 167, 169, 175, 176, 190, 200, 220, 221, 233, 237, 244, 245, 259, 263, 270, 314, 317, 322, 324, 325, 326, 330, 334, 335, 336, 337, 344, 355, 357, 358, 364, 366, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389], "v": [5, 338, 357, 372, 374, 375, 378, 380, 381, 390], "By": [5, 14, 18, 39, 40, 142, 314, 331, 334, 336, 350, 357, 358, 371, 373, 376, 383], "default": [5, 7, 9, 11, 14, 15, 18, 19, 25, 39, 40, 49, 55, 64, 77, 82, 88, 89, 97, 98, 99, 103, 106, 112, 116, 118, 121, 125, 134, 136, 137, 139, 142, 146, 147, 157, 175, 198, 211, 232, 244, 258, 314, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 334, 336, 338, 350, 351, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 372, 373, 374, 381, 382, 383, 384, 385, 389, 391], "planar": [5, 9, 125, 142, 307, 316, 322, 331, 334, 357, 376, 378, 379, 380, 383, 384, 389, 390, 391], "baroclinic_channel": [5, 7, 9, 14, 18, 243, 249, 314, 323, 330, 331, 334, 337, 357, 371, 385, 390, 391], "10km": [5, 18, 317, 357, 371, 385, 390, 391], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 71, 134, 135, 136, 137, 139, 140, 142, 161, 173, 175, 189, 220, 244, 269, 270, 271, 292, 295, 301, 303, 306, 307, 308, 317, 318, 319, 320, 322, 324, 326, 327, 328, 329, 331, 332, 334, 336, 338, 351, 354, 357, 358, 360, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385], "decomp": [5, 331, 357, 385, 390], "displai": [5, 8, 306, 365], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 60, 65, 68, 97, 113, 115, 116, 121, 122, 125, 139, 144, 314, 331, 334, 336, 337, 338, 344, 350, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 385, 391], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 60, 61, 64, 97, 98, 111, 113, 115, 116, 121, 122, 139, 157, 158, 159, 161, 165, 173, 174, 175, 178, 180, 181, 182, 184, 186, 188, 189, 190, 192, 205, 216, 219, 220, 223, 225, 227, 243, 244, 247, 249, 251, 270, 288, 314, 317, 322, 325, 331, 333, 334, 335, 336, 337, 338, 344, 346, 348, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 372, 373, 374, 375, 381, 382, 385, 391], "messag": [5, 8, 139, 334, 354, 365], "task_expr": [5, 65], "flag": [5, 6, 139, 334, 337, 354, 355, 357, 358, 363, 369, 371, 379, 385, 386], "suppli": [5, 6, 7, 15, 18, 125, 133, 139, 334, 338, 357], "substr": [5, 139], "regular": [5, 19, 65, 70, 77, 194, 207, 276, 281, 286, 357, 359, 362, 364, 365, 375, 385], "express": [5, 65], "subset": 5, "search": [5, 65, 360], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 71, 81, 87, 90, 94, 95, 112, 117, 119, 122, 128, 142, 144, 145, 148, 149, 164, 165, 184, 212, 249, 298, 307, 308, 311, 317, 322, 325, 329, 334, 336, 354, 356, 357, 358, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 389, 390], "pass": [5, 8, 9, 12, 13, 14, 18, 81, 122, 123, 142, 330, 331, 334, 336, 337, 338, 355, 385], "similarli": [5, 8, 125, 138, 140, 311, 314, 334, 336, 338, 364, 385], "result": [5, 13, 18, 59, 72, 81, 139, 142, 173, 181, 186, 189, 192, 251, 274, 307, 308, 309, 312, 313, 317, 318, 319, 320, 321, 325, 327, 328, 334, 335, 337, 338, 343, 348, 355, 357, 358, 371, 372, 373, 374, 375, 381, 382, 384, 389, 390], "descript": [5, 7, 357, 358, 369, 386], "short": [5, 174, 219, 269, 271, 334, 335, 336, 337, 347, 357, 371, 376], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 64, 93, 94, 95, 121, 139, 142, 143, 165, 173, 174, 269, 271, 317, 325, 329, 330, 331, 334, 335, 336, 337, 351, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 385, 390], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 121, 123, 124, 125, 139, 142, 144, 165, 316, 334, 336, 338, 357, 368, 375, 391], "built": [5, 6, 14, 116, 121, 139, 314, 331, 338, 350, 356, 358, 364, 385], "standalon": [5, 14, 137, 139, 331, 338, 355, 356, 364, 386], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 38, 40, 68, 86, 100, 107, 117, 119, 121, 124, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 165, 168, 171, 233, 244, 259, 276, 291, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 334, 337, 338, 341, 350, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 371, 375, 378, 383, 384, 385, 386, 389, 390, 391], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 116, 121, 139, 334, 336, 337, 338, 354, 357, 360, 363, 365, 368, 372, 373, 374, 375, 381, 382, 385], "num": 5, "f": [5, 9, 11, 18, 142, 204, 331, 334, 336, 337, 338, 357, 358, 365, 371, 375, 376, 378, 385], "m": [5, 6, 14, 70, 77, 78, 84, 307, 308, 317, 322, 325, 329, 330, 338, 357, 359, 360, 361, 362, 363, 365, 368, 371, 373, 374, 375, 376, 381, 383, 385], "mach": [5, 9, 11, 38, 139, 356, 359, 360, 361, 362, 363, 364, 365, 385], "w": [5, 6, 338, 355, 357, 385], "p": [5, 6, 338, 357, 358, 385], "suite_nam": [5, 8, 112, 114, 116, 121, 385], "copy_execut": [5, 116, 121, 385], "specifi": [5, 6, 14, 17, 18, 19, 40, 139, 142, 316, 334, 338, 353, 357, 358, 363, 365, 371, 372, 373, 374, 376, 381, 382, 384, 385, 389], "sever": [5, 6, 12, 139, 142, 330, 334, 336, 337, 338, 356, 357, 379, 384, 385, 390], "onc": [5, 6, 14, 41, 307, 308, 317, 338, 357, 358, 372, 373, 374, 381, 382, 385], "separ": [5, 7, 9, 14, 17, 18, 19, 144, 334, 335, 355, 357, 372, 373, 374, 381, 382, 385], "space": [5, 6, 7, 9, 13, 139, 324, 326, 334, 338, 357, 360, 364, 368, 375, 385], "altern": [5, 13, 334, 351, 385], "task_numb": 5, "multipl": [5, 9, 14, 139, 315, 335, 336, 337, 338, 357, 364, 371, 385], "test": [5, 7, 8, 9, 19, 49, 50, 55, 64, 93, 94, 95, 114, 122, 139, 143, 144, 150, 152, 155, 157, 159, 172, 174, 175, 181, 182, 184, 185, 186, 187, 189, 194, 195, 196, 197, 199, 202, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 228, 229, 230, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 342, 343, 346, 347, 348, 349, 350, 353, 355, 356, 362, 364, 365, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390], "requir": [5, 6, 8, 14, 17, 25, 35, 38, 39, 45, 98, 142, 161, 165, 175, 220, 244, 270, 314, 330, 331, 334, 335, 336, 337, 338, 350, 351, 354, 356, 357, 358, 363, 364, 368, 369, 384, 385, 386, 389, 391], "few": [5, 13, 14, 25, 35, 38, 45, 94, 95, 139, 165, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 334, 337, 357, 358, 364], "basic": [5, 7, 358, 360, 364, 375, 385], "piec": [5, 330, 331, 357], "abl": [5, 6, 134, 135, 136, 137, 138, 140, 142, 334, 335, 338, 357, 364, 385], "place": [5, 6, 14, 123, 139, 330, 334, 336, 351, 357, 364], "download": [5, 6, 8, 10, 38, 40, 47, 61, 139, 180, 188, 336, 337, 338, 358, 385, 390], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 139, 142, 307, 308, 316, 318, 319, 320, 321, 327, 328, 330, 332, 334, 336, 337, 338, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 371, 376, 385, 386, 390, 391], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 104, 117, 119, 120, 123, 124, 125, 127, 133, 139, 142, 292, 295, 296, 297, 301, 302, 303, 304, 305, 307, 308, 310, 312, 313, 334, 338, 356, 358, 359, 360, 361, 362, 363, 364, 385, 390, 391], "r": [5, 204, 365, 372, 373, 374, 381], "tell": [5, 6, 139, 338], "re": [5, 6, 9, 322, 336, 337, 338, 355, 357, 358, 364, 365, 372, 373, 374, 376, 381, 382], "leav": [5, 19, 358, 373, 376], "unknown": [5, 139, 337, 364], "component_path": [5, 9, 116, 121, 314, 331, 350, 358, 385], "absolut": [5, 9, 38, 40, 57, 116, 121, 314, 331, 334, 338, 350, 385], "landic": [5, 6, 12, 20, 40, 68, 121, 330, 331, 333, 334, 336, 338, 355, 356, 357, 358, 385, 391], "e3sm_submodul": [5, 314, 331, 338, 350, 351, 357], "mali": [5, 139, 331, 334, 338, 355, 357, 358, 385, 391], "dev": [5, 6, 7, 322, 330, 331, 333, 334, 337, 338, 356, 357, 369, 385, 386], "albani": [5, 134, 136, 137, 139, 331, 358, 385], "depend": [5, 14, 17, 19, 38, 39, 47, 109, 110, 139, 142, 144, 180, 188, 197, 210, 231, 257, 279, 281, 286, 336, 338, 355, 356, 357, 358, 364, 365, 368, 372, 373, 374, 376, 381, 382, 385, 391], "whether": [5, 8, 13, 14, 17, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 60, 61, 65, 111, 112, 116, 121, 122, 123, 124, 125, 129, 139, 142, 154, 163, 164, 165, 177, 183, 194, 201, 207, 222, 246, 270, 272, 274, 276, 281, 286, 305, 306, 308, 324, 326, 330, 334, 336, 338, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389], "omega": [5, 31, 127, 165, 168, 233, 259, 314, 331, 337, 338, 355, 357, 369, 375, 378, 380, 385], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 63, 64, 75, 77, 80, 93, 94, 95, 96, 97, 113, 115, 116, 121, 123, 124, 127, 128, 129, 130, 132, 133, 151, 152, 154, 155, 158, 163, 165, 168, 170, 177, 183, 184, 194, 195, 201, 207, 208, 219, 222, 233, 246, 249, 259, 276, 277, 290, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 334, 335, 336, 337, 338, 350, 351, 354, 356, 368, 385, 391], "point": [5, 6, 9, 54, 60, 101, 139, 307, 308, 311, 314, 316, 330, 331, 336, 337, 338, 350, 357, 358, 364, 376, 381, 385], "much": [5, 6, 14, 334, 357, 376], "config_fil": [5, 9, 116, 121], "work_dir": [5, 11, 38, 49, 64, 97, 115, 116, 121, 122, 334, 336, 357], "recommend": [5, 7, 11, 19, 139, 334, 335, 337, 338, 357, 364], "itself": [5, 6, 7, 9, 38, 46, 53, 330, 331, 333, 334, 336, 338, 357, 385], "temp": 5, "scratch": [5, 6, 338, 357, 360, 365, 385], "avoid": [5, 334, 357], "confus": [5, 14, 337, 338, 357], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 85, 86, 95, 98, 111, 112, 122, 124, 142, 144, 148, 149, 152, 155, 165, 171, 180, 188, 190, 191, 197, 205, 210, 212, 216, 225, 226, 231, 240, 257, 266, 279, 281, 286, 288, 291, 311, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 336, 344, 345, 353, 355, 358, 365, 366, 372, 373, 374, 375, 376, 381, 382, 385, 390], "compar": [5, 10, 18, 38, 41, 48, 115, 116, 121, 122, 142, 190, 191, 225, 226, 270, 318, 319, 320, 321, 327, 328, 329, 334, 335, 336, 337, 338, 344, 345, 353, 355, 357, 370, 371, 376, 379, 385, 388, 390], "previou": [5, 125, 191, 226, 334, 338, 345, 357, 370, 385, 390], "same": [5, 6, 7, 9, 14, 18, 38, 39, 40, 48, 122, 124, 139, 142, 146, 147, 198, 211, 232, 258, 280, 317, 325, 329, 330, 332, 334, 335, 336, 337, 338, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 385, 390, 391], "baseline_dir": [5, 38, 115, 116, 121, 334], "mani": [5, 6, 8, 9, 142, 330, 332, 334, 336, 337, 338, 356, 357, 371, 384, 389], "valid": [5, 10, 19, 38, 41, 48, 125, 142, 152, 155, 219, 292, 293, 294, 295, 298, 299, 300, 301, 303, 311, 324, 326, 329, 334, 337, 338, 356, 368, 371, 376], "timer": [5, 18, 38, 334, 335, 337], "both": [5, 6, 7, 8, 13, 14, 30, 125, 139, 142, 163, 170, 177, 183, 222, 246, 306, 317, 322, 330, 331, 333, 334, 338, 356, 357, 358, 370, 373, 376, 378, 380, 383], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 116, 121, 314, 331, 338, 350, 358, 365, 385], "give": [5, 6, 14, 18, 139, 334, 337, 338, 357, 358, 385], "predefin": 5, "so": [5, 6, 7, 9, 11, 12, 13, 14, 18, 19, 25, 37, 61, 109, 139, 142, 165, 292, 301, 303, 314, 317, 322, 324, 325, 326, 330, 331, 334, 336, 337, 338, 350, 355, 357, 358, 363, 364, 365, 368, 371, 372, 373, 374, 375, 376, 381, 382, 383, 385, 390], "case": [5, 6, 7, 8, 9, 11, 14, 19, 28, 29, 49, 50, 55, 64, 93, 94, 95, 117, 122, 139, 142, 143, 150, 157, 159, 174, 181, 182, 184, 185, 186, 187, 189, 195, 196, 197, 199, 202, 205, 206, 208, 210, 213, 214, 216, 217, 219, 228, 229, 231, 233, 236, 238, 239, 240, 241, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 257, 259, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 307, 308, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 338, 341, 343, 346, 347, 349, 355, 356, 357, 364, 365, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389, 390], "pre": [5, 139, 338], "copi": [5, 6, 8, 40, 55, 116, 121, 357, 360, 385], "just": [5, 14, 25, 35, 38, 45, 65, 139, 165, 322, 334, 337, 338, 355, 357, 360, 363, 365], "wish": [5, 7, 14, 50, 307, 308, 334, 338, 357, 385], "again": [5, 6, 14, 137, 142, 314, 334, 336, 338, 354, 385], "later": [5, 8, 18, 25, 35, 38, 45, 57, 139, 165, 334, 357, 358], "anticip": [5, 357], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 110, 123, 139, 151, 307, 308, 314, 316, 330, 334, 335, 336, 338, 350, 351, 354, 355, 357, 358, 365, 366, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 389, 391], "delet": [5, 116, 121, 337, 338, 354, 385], "fresh": [5, 6, 336, 357], "sinc": [5, 6, 14, 88, 110, 133, 142, 317, 334, 336, 337, 338, 357, 371, 372, 373, 374, 375, 378, 380, 381, 382, 384, 389], "rerun": [5, 338], "c": [5, 6, 116, 139, 334, 338, 359, 360, 361, 362, 363, 364, 365, 370, 372, 374, 379, 381, 382, 385, 390], "test_suit": [5, 114, 334], "build": [5, 6, 10, 13, 14, 73, 78, 134, 135, 136, 137, 138, 140, 305, 314, 331, 336, 337, 350, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "mpas_model": [5, 358], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 73, 76, 77, 78, 142, 180, 188, 334, 336, 337, 357, 358, 363, 365, 385], "baselin": [5, 6, 8, 10, 38, 41, 48, 115, 116, 121, 122, 142, 152, 155, 270, 317, 322, 324, 325, 326, 329, 334, 335, 337, 353, 355, 357, 370, 376, 385], "comparison": [5, 8, 18, 38, 48, 122, 334, 357, 358, 376, 381], "against": [5, 10, 41, 48, 122, 142, 152, 155, 317, 322, 324, 325, 326, 329, 334, 353, 357, 370], "oppos": [5, 14, 30, 154, 163, 164, 177, 183, 194, 201, 207, 222, 246, 276, 281, 286, 308, 357], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 111], "wherea": [5, 12, 334, 355, 357, 370, 376, 391], "typic": [5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 38, 50, 112, 139, 142, 306, 307, 308, 330, 331, 332, 334, 336, 338, 355, 357, 358, 364, 366, 368, 383, 385, 391], "clone": [5, 6, 139, 314, 332, 338, 350, 357, 385], "pickl": [5, 8, 109, 110, 334, 357, 385], "latter": [5, 49, 139], "conveni": [5, 9, 17, 292, 295, 301, 303, 330, 334, 357, 358, 372, 373, 374, 381, 382, 385, 391], "tab": [5, 385], "explicitli": [5, 7, 142, 317, 324, 325, 326, 334, 338, 357, 358, 385], "select": [5, 8, 125, 305, 334, 338, 357], "edit": [5, 7, 338, 357, 385], "steps_to_run": [5, 49, 112, 334, 336, 357, 358], "full_run": [5, 18, 353, 371, 388], "restart_run": [5, 18, 353, 371, 388], "Or": [5, 334, 358], "accomplish": [5, 11, 17, 334, 337], "thing": [5, 134, 135, 136, 137, 138, 139, 140, 142, 330, 334, 337, 356, 390], "take": [5, 6, 7, 11, 13, 14, 57, 139, 142, 148, 212, 330, 334, 335, 336, 338, 357, 372, 373, 374, 381, 390], "preced": [5, 57, 142], "over": [5, 9, 14, 57, 98, 123, 124, 306, 334, 337, 356, 357, 368, 371, 376, 379, 383, 385], "intern": [5, 11, 25, 242, 243, 244, 247, 249, 251, 253, 307, 308, 325, 334, 338, 354, 369, 377], "shouldn": [5, 139, 270, 357], "special": [5, 355, 384], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 61, 165, 334, 364], "polaris_cach": [5, 8, 20, 334], "structur": [5, 13, 31, 168, 333, 336, 356, 357, 379], "without": [5, 40, 306, 334, 337, 338, 356, 357, 358, 362, 364, 378, 380, 384, 385], "redund": [5, 292, 295, 301, 303, 317, 330, 357], "stamp": 5, "revis": [5, 358], "older": 5, "ones": [5, 292, 295, 301, 303, 337, 357], "version": [5, 6, 16, 33, 57, 97, 122, 139, 314, 317, 325, 330, 331, 332, 334, 336, 337, 338, 350, 356, 357, 358, 364, 365, 369, 371, 373, 376, 385, 386], "updat": [5, 7, 8, 11, 25, 27, 29, 34, 35, 44, 45, 61, 118, 137, 139, 142, 167, 270, 296, 297, 302, 304, 314, 317, 318, 319, 320, 324, 325, 326, 327, 328, 334, 350, 354, 356, 357, 385], "cached_fil": [5, 20, 334], "json": [5, 8, 20, 55, 334, 365], "anvil": [5, 6, 139, 334, 358, 364, 385], "chrysali": [5, 6, 139, 334, 357, 358, 364, 385], "onto": [5, 338], "lcrc": [5, 6, 8, 11, 55, 334, 337, 358, 359, 361, 364, 385], "server": [5, 8, 40, 55, 334, 337, 358, 365], "d": [5, 19, 125, 218, 223, 233, 259, 292, 295, 296, 297, 301, 302, 303, 304, 316, 318, 320, 327, 328, 334, 357, 369, 376, 377, 383], "whose": [5, 46, 53, 87, 334], "ocean_cached_fil": 5, "pr": [5, 6, 385, 390], "look": [5, 6, 7, 11, 18, 138, 140, 307, 308, 336, 337, 357, 358], "someth": [5, 7, 99, 103, 106, 138, 139, 140, 338, 357], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 98, 142, 144, 152, 155, 317, 322, 325, 334, 337, 357, 366], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 86, 152, 155, 158, 161, 165, 317, 322, 324, 325, 326, 334, 357, 358], "info": [5, 12, 14, 25, 32, 86, 139, 152, 155, 165, 334, 357], "initial_st": [5, 18, 19, 144, 317, 325, 334, 357], "date_str": [5, 55], "let": [5, 334, 338, 355, 357, 358, 365], "string": [5, 9, 15, 40, 102, 108, 139, 142, 157, 158, 161, 170, 276, 306, 338], "choos": [5, 334, 337, 338, 357, 359, 360, 361, 362, 365, 391], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 357], "check": [5, 6, 18, 122, 322, 334, 338, 357, 358, 360, 365, 385, 390], "print": [5, 12, 18, 65, 122, 129, 334, 337, 390], "stdout": [5, 12, 38, 49, 334, 336], "translat": [5, 31, 142, 168], "convert": [5, 9, 13, 14, 142, 170, 334, 357], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 116, 121, 132, 133, 158, 161, 163, 165, 168, 169, 177, 180, 183, 188, 222, 246, 314, 317, 322, 324, 325, 326, 330, 331, 334, 336, 337, 350, 351, 353, 356, 357, 358, 366, 376, 383], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 127, 132, 133, 163, 169, 177, 180, 183, 188, 222, 246, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337, 350, 353, 358, 384, 389], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 139, 152, 155, 158, 161, 163, 165, 168, 169, 177, 183, 222, 246, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 356, 357, 360, 363, 365], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 68, 127, 139, 142, 164, 168, 307, 308, 314, 330, 332, 334, 335, 337, 338, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389, 391], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 68, 127, 139, 142, 164, 168, 307, 308, 314, 330, 332, 334, 335, 337, 338, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 389], "don": [5, 6, 7, 14, 139, 142, 144, 149, 334, 336, 337, 338, 357, 362, 385, 391], "format": [5, 7, 11, 13, 14, 127, 133, 170, 335, 336, 338, 357, 358, 360, 376], "note": [5, 7, 17, 18, 357, 365], "keyword": [5, 7, 14, 18, 19, 334, 373], "top": [5, 19, 125, 292, 293, 294, 295, 298, 299, 300, 301, 303, 306, 316, 322, 332, 357, 368, 379], "ignor": [5, 102, 108], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 63, 71, 87, 93, 104, 111, 139, 142, 146, 147, 148, 165, 198, 211, 212, 232, 258, 280, 330, 333, 334, 336, 337, 338, 355, 358, 359, 360, 361, 362, 363, 365, 368, 385], "pars": [5, 9, 14, 26, 27, 28, 29, 90, 117, 119], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 88, 122, 123, 124, 125, 129, 142, 144, 152, 155, 168, 184, 204, 249, 306, 307, 308, 311, 317, 325, 327, 331, 334, 336, 337, 356, 357, 358, 368, 371, 372, 373, 374, 375, 379, 381, 382, 383], "doesn": [5, 6, 133, 139, 334, 336, 357, 358, 363, 364, 385], "matter": [5, 357], "usabl": 5, "try": [6, 14, 60, 139, 337, 338, 354, 357, 358, 360, 365, 385], "stai": [6, 338], "sync": 6, "mpi": [6, 14, 17, 98, 134, 137, 139, 165, 167, 169, 317, 324, 325, 326, 334, 338, 354, 356, 357, 359, 360, 361, 362, 363, 365, 385], "librari": [6, 14, 134, 139, 338, 357, 359, 360, 361, 362, 363, 364, 365, 385], "netcdf": [6, 139, 144, 149, 171, 329, 358, 359, 360, 361, 362, 363, 364, 365], "fortran": [6, 139, 359, 360, 361, 362, 363, 364, 365], "pnetcdf": [6, 139, 359, 360, 361, 362, 363, 364, 365], "mkl": [6, 139], "linear": [6, 19, 123, 124, 125, 307, 308, 318, 319, 320, 324, 327, 328, 357, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382], "algebra": 6, "lib": [6, 139], "bump": 6, "major": [6, 331, 334], "minor": 6, "esmf": [6, 17, 338, 363, 385], "moab": [6, 17, 338, 363, 385], "scorpio": [6, 338, 364, 385], "meti": [6, 86], "parmeti": 6, "trilino": [6, 338], "u": [6, 11, 334, 357, 364, 365, 372, 374, 375, 378, 380, 381], "sometim": [6, 14, 292, 295, 301, 303, 330, 332, 334, 336, 355, 357, 390], "necessari": [6, 7, 13, 139, 357], "alwai": [6, 7, 9, 12, 57, 139, 142, 147, 198, 211, 232, 258, 310, 314, 331, 334, 336, 337, 338, 350, 355, 357, 358, 376], "correctli": 6, "combin": [6, 38, 40, 49, 57, 64, 97, 127, 158, 161, 334, 335, 336, 354, 357, 358, 385], "experienc": 6, "problem": [6, 334, 338, 354, 357], "intel": [6, 139, 359, 361, 362, 364], "perlmutt": [6, 139, 360, 364, 385], "eigen": 6, "nvidiagpu": 6, "forg": [6, 139, 356, 385], "python": [6, 7, 8, 9, 26, 44, 51, 142, 330, 332, 334, 336, 337, 338, 355, 356, 357, 358, 364, 365, 385], "aren": [6, 11, 38, 39, 139, 334, 337, 338, 357, 390], "constraint": [6, 63, 365, 385], "alpha": [6, 134, 135, 136, 137, 138, 139, 140, 338, 357, 375], "beta": 6, "rc": 6, "remain": [6, 357, 373, 375, 376, 383], "unaffect": 6, "brief": [6, 7, 357], "tour": 6, "out": [6, 8, 9, 13, 57, 92, 96, 125, 139, 152, 155, 306, 332, 334, 337, 338, 358, 368, 385], "login": [6, 139, 338, 360, 363, 365], "node": [6, 14, 25, 37, 38, 42, 45, 63, 93, 94, 95, 139, 165, 307, 308, 310, 311, 313, 334, 335, 337, 338, 357, 358, 359, 360, 361, 362, 363, 364, 365, 385], "bootstrap": 6, "rest": [6, 171, 300, 368, 373], "unifi": [6, 139, 338, 365], "diagnost": [6, 327, 358, 359, 360, 362, 363, 364, 365, 372, 385], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 142, 334, 336, 337, 338, 357], "cach": [6, 20, 25, 38, 40, 115, 116, 165, 356, 358, 364, 370, 385, 390], "own": [6, 7, 8, 9, 11, 12, 19, 38, 139, 142, 334, 336, 337, 338, 355, 357, 358, 372, 373, 374, 381, 382, 385, 391], "config_machin": 6, "xml": [6, 14, 117, 119, 120, 133, 350], "ey": 6, "master": [6, 314, 350, 386], "happen": [6, 9, 12, 17, 110, 334, 357, 372, 373, 374, 381, 382], "me": [6, 357], "fork": [6, 357], "haven": [6, 357], "mkdir": [6, 338], "involv": [6, 14, 311, 334, 355, 357], "coupl": [6, 354, 356], "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 142, 330, 332, 334, 335, 336, 337, 338, 357, 358, 390, 391], "stand": 6, "releas": [6, 139, 337, 356, 364, 369, 385], "omit": [6, 334, 385], "suffix": [6, 40, 116, 334], "spack_for_mache_1": 6, "12": [6, 13, 71, 125, 306, 311, 318, 320, 327, 328, 353, 357, 360, 372, 374, 375, 381, 382, 388], "plu": [6, 355], "discov": 6, "cannot": [6, 357], "uniqu": [6, 7, 14, 139, 336, 357], "worktre": [6, 356, 357], "my": [6, 139, 360], "fetch": [6, 338, 357], "checkout": [6, 338, 357], "miniforge3": [6, 338, 357, 364, 385], "manual": [6, 14, 49, 50, 334, 336, 391], "linux": [6, 139, 338, 364], "x86_64": [6, 139], "our": [6, 139, 337, 357, 385], "found": [6, 9, 14, 128, 139, 307, 308, 337, 338, 356, 357, 359, 360, 361, 362, 363, 364, 365], "exist": [6, 7, 9, 31, 38, 41, 60, 117, 119, 121, 139, 168, 317, 325, 334, 336, 337, 338, 354, 357, 364, 390], "miniconda3": [6, 338], "pleas": [6, 139, 331, 337, 338, 357, 385], "start": [6, 7, 8, 14, 15, 88, 118, 125, 139, 306, 316, 317, 321, 330, 335, 336, 337, 356, 360, 364, 365, 369, 386, 388], "definit": [6, 14, 357], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 76, 102, 108, 115, 116, 121, 139, 142, 196, 209, 230, 256, 278, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 342, 350, 351, 353, 355, 356, 358, 364, 366, 368, 371, 373, 379, 382, 383, 390, 391], "export": [6, 354], "conda_bas": 6, "home": [6, 18, 139, 338, 357, 358, 360, 364, 365], "readi": [6, 357, 365], "configure_polaris_env": [6, 139, 338, 354, 357, 363], "py": [6, 12, 14, 18, 68, 139, 322, 330, 331, 337, 338, 355, 357, 358, 363], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 139, 338], "tmpdir": [6, 139], "group": [6, 7, 11, 61, 244, 322, 330, 356, 359, 361, 364, 365, 379, 384, 385, 391], "spack_temp": 6, "spack_test": 6, "gnu": [6, 139, 338, 359, 360, 361, 362, 363, 364, 365, 385], "openmpi": [6, 134, 139, 338, 356, 359, 361, 362, 385], "impi": [6, 134, 139, 359, 362], "recreat": [6, 336, 338, 354], "request": [6, 7, 14, 15, 25, 32, 34, 139, 142, 152, 155, 165, 293, 294, 334, 336, 337, 338, 354, 357, 358, 372, 373, 374, 381, 382], "twice": [6, 307, 308, 357], "deploy": [6, 338, 359, 360, 361, 362, 363, 365], "prebootstrap": 6, "load": [6, 11, 19, 110, 135, 138, 139, 140, 334, 338, 356, 357, 358, 364], "activ": [6, 19, 139, 364, 365, 385], "differ": [6, 14, 15, 17, 18, 57, 73, 78, 122, 139, 142, 172, 175, 184, 218, 242, 244, 249, 311, 314, 317, 325, 330, 331, 332, 334, 335, 336, 337, 350, 355, 357, 358, 359, 360, 361, 362, 363, 365, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 384, 389], "On": [6, 7, 13, 139, 338, 364], "tmp": [6, 139], "safe": [6, 14, 334, 338, 371], "strictli": [6, 13, 337, 357], "good": [6, 11, 12, 38, 334, 338, 357], "idea": [6, 11, 12, 357], "Be": [6, 365], "awar": [6, 7, 139, 357, 364], "with_petsc": [6, 338], "wa": [6, 8, 48, 59, 122, 139, 334, 336, 337, 338, 354, 355, 357, 358, 368, 376, 385], "limit": [6, 19, 318, 319, 320, 327, 328, 335, 338, 371, 372, 374, 375, 381, 382], "amount": [6, 25, 35, 38, 45, 165, 334, 367, 383], "team": [6, 139, 356], "petsc_support": 6, "txt": [6, 8, 121, 335, 354], "with_albani": [6, 338], "albany_support": 6, "encount": [6, 335, 354], "error": [6, 8, 15, 38, 49, 139, 142, 145, 146, 149, 318, 319, 320, 321, 324, 326, 327, 328, 334, 336, 338, 356, 357, 372, 373, 374, 375, 381, 382], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 154, 163, 177, 183, 201, 222, 246, 334, 336, 337, 338, 357, 358, 385, 390, 391], "attempt": [6, 139, 356, 364], "sh": [6, 134, 135, 136, 137, 138, 139, 140, 338, 354, 357, 385], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 94, 95, 97, 105, 139, 334, 337, 338, 355, 356, 357, 360, 364, 365, 385], "pscratch": 6, "suggest": [6, 139, 354], "seem": [6, 14, 357, 360, 365], "switch": [6, 357, 358], "v0": 6, "19": 6, "submodul": [6, 314, 331, 338, 350, 357, 385], "serv": [6, 115, 116, 121, 142, 330, 357], "kind": [6, 357], "whichev": [6, 314, 350, 368], "load_dev_polaris_0": [6, 134, 135, 136, 137, 138, 139, 140, 357], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 314, 337, 338, 350, 357, 385], "pio": [6, 25, 34, 37, 165, 317, 322, 324, 325, 326], "openmp": [6, 25, 35, 38, 45, 95, 134, 136, 137, 161, 165, 175, 220, 244, 270, 334, 357], "ifort": [6, 134, 136, 139, 357], "ac": [6, 357], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 357, 363, 364, 385], "job_script": [6, 357, 385], "bash": [6, 338, 354, 357, 385], "termin": [6, 8, 139, 334, 338, 357], "isn": [6, 9, 15, 318, 319, 320, 321, 327, 328, 334, 337, 357], "ll": [6, 19, 139, 337, 357, 365, 373], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 134, 136, 137, 139, 338], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 330, 334, 357, 368, 381], "util": [6, 337, 338, 380], "matrix": 6, "automat": [6, 7, 9, 12, 14, 19, 139, 142, 334, 337, 338, 357, 358, 359, 361, 362, 364, 365, 385], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 385], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 137, 139, 142, 334, 337, 357, 363], "integr": [6, 15, 142, 184, 249, 317, 322, 325, 337, 357, 366, 371, 372, 373, 374, 375, 376, 379, 381, 382, 384, 389], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 360, 385], "245": 6, "246": 6, "non": [6, 14, 18, 316, 334, 357, 372, 381, 385], "care": [6, 11, 13, 142, 330, 334, 338, 357], "temporari": [6, 139], "begin": [6, 7, 18, 317, 334, 338, 351, 356, 357, 364, 371, 373, 376, 383], "anymor": 6, "best": [6, 17, 139, 334, 338], "hard": [6, 334, 357, 371, 376, 383], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 64, 123, 124, 125, 152, 155, 334, 336, 357, 388], "myst": [7, 357], "tip": [7, 338], "easi": [7, 9, 40, 337, 357], "pull": [7, 139, 337, 338, 357, 358], "guid": [7, 142, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 335, 337, 357, 359, 360, 361, 362, 363, 364, 365, 369, 386], "baroclin": [7, 9, 14, 172, 173, 174, 175, 178, 181, 184, 186, 189, 190, 192, 220, 270, 317, 331, 334, 357, 369, 377, 391], "channel": [7, 9, 14, 172, 173, 174, 175, 178, 181, 184, 186, 189, 190, 192, 220, 270, 317, 331, 334, 354, 357, 369, 377, 391], "label": [7, 123, 124, 306, 364, 375, 385], "prepend": 7, "categori": [7, 331, 332, 333, 356, 391], "And": [7, 14, 338, 357], "becom": [7, 334, 336, 357], "who": [7, 338, 357, 358, 365], "citat": 7, "basi": [7, 357], "overview": [7, 356, 360, 365], "common": [7, 12, 14, 44, 49, 139, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 334, 335, 336, 337, 354, 355, 357, 358, 364, 365, 366, 384, 385, 389, 390, 391], "characterist": [7, 368, 384, 389], "comment": [7, 335, 358], "appli": [7, 13, 14, 65, 220, 316, 330, 357, 371, 376, 383, 384, 389], "vertic": [7, 15, 19, 87, 125, 147, 148, 198, 211, 212, 232, 243, 244, 249, 258, 269, 305, 306, 307, 308, 310, 311, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 334, 358, 367, 369], "grid": [7, 13, 17, 70, 77, 81, 84, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 142, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 317, 322, 324, 325, 326, 329, 334, 351, 357, 358], "forc": [7, 219, 220, 322, 329, 353, 357, 391], "specif": [7, 9, 14, 19, 51, 139, 142, 314, 330, 331, 332, 334, 350, 351, 356, 357, 358, 360, 364, 371, 376, 379, 384, 385, 389, 390], "public": [7, 11, 334, 357, 358], "api": [7, 12, 356, 357], "underscor": [7, 357], "md": [7, 357], "eval": 7, "rst": [7, 14, 357], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 331, 337], "compute_cell_count": [7, 142, 317, 324, 325, 326, 357], "dynamic_model_config": [7, 14, 317, 325, 357], "ot": [7, 357], "numpydoc": [7, 357], "text": [7, 8, 62, 371, 373, 375, 383], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 19, 142, 161, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 311, 314, 322, 324, 326, 334, 357, 358, 360, 363, 365, 368, 375, 376, 378, 380], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 159, 160, 314, 322, 358, 366, 376, 378, 380], "overli": [7, 357, 376], "ic": [7, 157, 159, 160, 218, 219, 223, 225, 227, 314, 322, 336, 337, 338, 351, 353, 356, 357, 358, 360, 367, 368, 369, 377, 388, 391], "shelf": [7, 157, 159, 218, 219, 223, 225, 227, 322, 330, 337, 357, 358, 367, 368, 369, 377], "draft": [7, 322, 368], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 76, 81, 82, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 130, 132, 133, 142, 144, 145, 146, 147, 148, 149, 152, 154, 155, 157, 158, 159, 161, 163, 164, 165, 168, 170, 171, 173, 174, 175, 177, 178, 181, 182, 183, 184, 186, 189, 190, 192, 194, 197, 198, 199, 201, 202, 204, 205, 207, 210, 211, 212, 213, 214, 216, 219, 220, 222, 223, 225, 227, 229, 231, 232, 233, 234, 235, 236, 238, 240, 243, 244, 246, 247, 249, 251, 253, 255, 257, 258, 259, 260, 261, 262, 264, 266, 270, 272, 274, 276, 279, 280, 281, 283, 284, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 324, 326, 330, 334, 336, 342, 343, 344, 346, 347, 348, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383], "xarrai": [7, 15, 17, 19, 87, 124, 125, 142, 147, 148, 198, 211, 212, 232, 258, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 334, 357], "dataarrai": [7, 87, 124, 125, 147, 148, 198, 211, 212, 232, 233, 234, 235, 258, 259, 260, 261, 293, 294, 298, 299, 300, 305, 306, 307, 308, 311, 312, 313], "sea": [7, 142, 159, 160, 233, 235, 259, 261, 294, 298, 299, 300, 305, 306, 311, 314, 322, 351, 353, 356, 357, 358, 368, 376, 378, 380, 388, 391], "surfac": [7, 142, 159, 160, 233, 235, 259, 261, 294, 298, 299, 300, 305, 306, 311, 314, 316, 322, 329, 353, 357, 358, 368, 371, 376, 378, 379, 380, 383], "height": [7, 125, 142, 159, 160, 233, 235, 259, 261, 294, 298, 299, 300, 306, 311, 314, 322, 357, 358, 368, 376, 378, 380], "mask": [7, 125, 292, 295, 298, 301, 303, 334, 357, 358, 368], "landicepressur": [7, 366, 376], "deviat": 7, "float": [7, 9, 14, 26, 69, 71, 72, 76, 81, 88, 98, 103, 122, 124, 125, 142, 144, 145, 146, 147, 148, 152, 155, 157, 161, 164, 170, 173, 174, 175, 178, 181, 184, 186, 189, 194, 197, 198, 199, 204, 207, 210, 211, 212, 213, 219, 220, 223, 231, 232, 233, 234, 235, 236, 238, 240, 244, 249, 251, 255, 257, 258, 259, 260, 261, 262, 264, 266, 270, 276, 279, 280, 281, 283, 286, 306, 307, 308, 334, 336, 357], "densiti": [7, 13, 142, 357], "seawat": 7, "displac": 7, "land": [7, 142, 160, 314, 322, 336, 356, 357, 358, 366, 368, 376], "landicedraft": 7, "equal": [7, 329, 334, 337, 376, 383], "entri": [7, 54, 88, 91, 116, 125], "line": [7, 10, 36, 38, 62, 94, 95, 105, 125, 139, 334, 335, 337, 338, 356, 385], "type": [7, 14, 17, 18, 19, 26, 100, 107, 133, 139, 142, 145, 204, 269, 271, 306, 318, 319, 320, 327, 328, 330, 334, 336, 337, 338, 350, 354, 355, 357, 358, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 390], "side": 7, "colon": 7, "doubl": [7, 14, 142, 334, 335, 357], "back": [7, 357, 360, 385], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 94, 95, 334], "next": [7, 139, 158, 317, 322, 325, 357, 368, 376, 385], "indent": [7, 334], "obviou": [7, 14, 357], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 64, 65, 67, 69, 76, 82, 86, 88, 97, 98, 99, 102, 103, 106, 108, 112, 116, 117, 121, 122, 123, 124, 125, 128, 129, 132, 142, 144, 145, 146, 147, 148, 149, 152, 153, 155, 156, 157, 158, 159, 161, 162, 165, 166, 170, 175, 176, 198, 200, 211, 212, 220, 221, 232, 237, 244, 245, 258, 259, 263, 270, 280, 298, 306, 308, 334, 336, 346, 357, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 388], "els": [7, 8, 139, 334, 336, 357], "further": [7, 330, 336, 365, 384, 389], "rais": [7, 9, 18, 38, 41, 59, 60, 142, 334, 337, 357, 375], "list_cas": 8, "list_machin": [8, 337], "list_suit": 8, "anywher": [8, 12, 139, 338], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 90, 109, 110, 113, 117, 127, 128, 132, 133, 152, 155, 158, 161, 233, 259, 331, 336, 337, 357], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 61, 89, 90, 127, 142, 316, 334, 336, 357], "properti": [8, 276, 316, 334, 364, 372, 373, 374, 381, 382], "setup_suit": 8, "write": [8, 11, 12, 13, 16, 19, 61, 109, 127, 291, 306, 334, 336, 338, 353, 357], "proven": [8, 10, 57, 356, 358], "save": [8, 19, 59, 84, 139, 306, 317, 318, 319, 320, 321, 327, 328, 330, 334, 336, 357, 364, 370, 371, 376], "target": [8, 11, 17, 18, 25, 40, 60, 64, 88, 98, 139, 142, 165, 317, 324, 325, 326, 334, 336, 357, 372, 373, 374, 381, 382], "minimum": [8, 64, 124, 125, 142, 146, 161, 165, 280, 306, 317, 324, 325, 326, 334, 357, 358, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 389], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 87, 88, 125, 133, 139, 142, 161, 169, 276, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 334, 357, 366, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 389], "maximum": [8, 18, 122, 124, 125, 204, 280, 306, 357, 358, 368], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 94, 95, 98, 142, 161, 165, 175, 220, 244, 270, 334, 336, 357], "cpus_per_task": [8, 14, 38, 42, 45, 94, 95, 334], "quickli": [8, 376], "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 357, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 94, 95, 98, 142, 161, 165, 175, 220, 244, 270, 334, 357], "min_cpus_per_task": [8, 14, 38, 45, 94, 95, 334], "fewest": 8, "least": [8, 13, 331, 338, 371, 375], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 139, 142, 161, 165, 175, 220, 244, 270, 334, 356, 357, 358, 372, 373, 374, 375, 378, 380, 381, 382], "run_task": [8, 334, 336], "run_single_step": 8, "oper": [8, 47, 139, 180, 188, 334, 336, 390], "log": [8, 10, 19, 38, 49, 95, 122, 123, 124, 125, 334, 336, 338, 356, 385], "figur": [8, 19, 124, 125, 306, 324, 326, 329, 330, 332, 334, 358, 372, 374, 381, 382], "cpu": [8, 139, 334, 357, 363, 385], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 68, 69, 73, 76, 77, 78, 82, 83, 98, 104, 127, 142, 143, 144, 146, 147, 152, 154, 155, 157, 159, 161, 163, 165, 168, 173, 174, 175, 177, 178, 181, 182, 183, 184, 186, 189, 190, 192, 194, 197, 198, 199, 201, 202, 205, 207, 210, 211, 213, 214, 216, 219, 220, 222, 223, 225, 227, 229, 231, 232, 233, 236, 238, 240, 243, 244, 246, 247, 249, 251, 253, 255, 256, 257, 258, 259, 262, 264, 266, 269, 270, 271, 272, 274, 276, 279, 281, 283, 284, 286, 288, 306, 324, 326, 331, 334, 336, 337, 341, 343, 344, 346, 347, 348, 357, 366, 373, 384, 389], "retriev": [8, 354], "store": [8, 11, 19, 51, 139, 142, 322, 324, 326, 334, 357, 372, 374, 381, 382, 385], "case_output": [8, 12], "individu": [8, 9, 19, 331, 336, 337, 357, 364, 365, 371, 376, 385, 391], "overal": 8, "whole": [8, 49, 171, 330, 336, 337, 357, 376, 385], "window": 8, "update_cach": 8, "_cached_fil": [8, 334], "origin": [8, 55, 305, 307, 308, 311, 338, 357, 368, 385], "enabl": [8, 19, 329, 334, 354, 358, 365, 378, 380], "consum": [8, 334, 336, 357, 390], "faster": [8, 338], "parser": [9, 46, 53, 57, 184, 194, 207, 249, 276], "mpas_tool": [9, 12, 13, 81, 317, 322, 324, 325, 326, 329, 334, 336, 357], "mpasconfigpars": [9, 334, 336], "polarisconfigpars": [9, 11, 17, 21, 38, 46, 49, 53, 59, 63, 64, 93, 96, 97, 113, 123, 124, 142, 158, 184, 194, 207, 219, 233, 249, 259, 276, 290, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 357], "certain": [9, 18, 57, 139, 334, 338, 358, 384, 389], "filepath": [9, 17, 46, 53, 57, 142], "overridden": [9, 31, 58, 142, 168, 357], "algorithm": [9, 14, 142, 270, 317, 324, 325, 326, 334, 357], "featur": [9, 14, 337, 338, 355, 357, 358, 366, 371, 379, 383], "accommod": [9, 25, 35, 38, 45, 94, 95, 165], "add_from_packag": [9, 11, 17, 142, 334, 336, 337, 357], "content": [9, 14, 116, 117, 119, 121, 133, 142, 330, 332, 334, 337, 353, 357, 385, 388], "inertial_gravity_wav": [9, 314, 323, 326, 331, 336, 378, 390], "inertialgravitywav": [9, 324, 336], "import": [9, 11, 12, 13, 15, 17, 18, 19, 142, 330, 331, 334, 336, 337, 338, 355, 357], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 68, 69, 76, 82, 98, 127, 142, 143, 144, 152, 155, 157, 159, 161, 165, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 194, 197, 199, 202, 205, 207, 210, 213, 214, 216, 219, 220, 223, 225, 227, 229, 231, 233, 236, 238, 240, 243, 244, 247, 249, 251, 253, 255, 257, 259, 262, 264, 266, 269, 270, 271, 272, 274, 276, 279, 281, 283, 284, 286, 288, 330, 331, 334, 336, 337, 341, 343, 344, 346, 347, 348, 355, 357], "super": [9, 14, 17, 18, 142, 331, 334, 336, 337, 357], "cfg": [9, 11, 17, 51, 142, 331, 336, 337, 357, 358, 372, 374, 381, 382, 385], "except": [9, 38, 41, 59, 306, 334, 337, 357, 379, 382], "behavior": [9, 14, 112, 142, 334, 335, 338, 357], "noth": [9, 139, 354, 372, 373, 374, 381, 382], "particular": [9, 139, 305, 330, 338, 356, 360, 364, 385], "fine": [9, 336, 357, 383], "_get_basic_config": 9, "larg": [9, 322, 334, 336, 357, 359, 376, 381], "those": [9, 14, 49, 122, 139, 142, 317, 325, 336, 337, 338, 356, 357, 372, 373, 374, 375, 376, 381, 382, 384, 389, 390], "configpars": [9, 94, 95], "getinteg": 9, "getfloat": [9, 12, 14, 17, 142, 334, 357], "getboolean": [9, 334, 357], "implement": [9, 322, 331, 334, 337, 371, 372, 373, 374, 375, 378, 380, 381, 382], "getlist": [9, 336, 357], "comma": [9, 372, 373, 374, 381, 382], "integ": [9, 13], "boolean": [9, 125, 298], "etc": [9, 14, 118, 121, 331, 334, 371], "getexpress": 9, "tupl": [9, 124, 125, 306], "rang": [9, 19, 125, 357, 379], "numpi": [9, 13, 15, 70, 77, 78, 84, 88, 123, 125, 142, 171, 290, 291, 307, 308, 334, 357], "linspac": [9, 19, 373], "arang": 9, "arrai": [9, 15, 70, 77, 78, 84, 123, 142, 290, 291, 293, 294, 298, 299, 305, 312, 313, 357], "sens": [9, 356, 357], "set_shared_config": [9, 17, 336], "intuit": 9, "resolution_to_subdir": [9, 331], "rpe": [9, 192, 331, 337, 357, 385], "resdir": [9, 331], "config_filenam": [9, 38, 49, 158, 334, 336], "indir": [9, 25, 38, 49, 98, 159, 161, 165, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 219, 220, 223, 225, 227, 243, 244, 247, 249, 251, 253, 270, 272, 274, 331, 334, 344, 346, 348], "add_task": [9, 330, 331], "most": [9, 12, 44, 139, 314, 330, 331, 334, 337, 338, 350, 357, 358, 363, 364, 365, 368, 369, 386, 391], "construct": [9, 14, 143, 157, 290, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 310, 311, 316, 329, 331, 336, 341, 357, 371, 375], "bring": [9, 142, 357, 366], "add_step": [9, 336, 357], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 175, 186, 244, 251, 317, 325, 334, 357], "baroclinic_channel_rp": 9, "viscos": [9, 14, 175, 184, 186, 244, 249, 251, 317, 325, 334, 337, 357, 371, 379], "dtype": [9, 336, 357], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 95, 161, 165, 175, 220, 244, 270, 334, 336, 357], "add_yaml_fil": [9, 14, 25, 142, 334, 336, 357], "One": [9, 13, 357, 385, 390], "advantag": [9, 14, 139, 336, 337, 357, 364], "track": [9, 25, 334, 336, 338], "associ": [9, 13, 14, 15, 19, 142, 292, 295, 301, 303, 307, 308, 317, 318, 320, 325, 327, 328, 334, 336, 338, 355, 376], "while": [10, 17, 19, 316, 317, 334, 354, 357, 376], "meant": [10, 337, 358], "simplifi": [10, 322, 376], "verifi": [10, 335, 358], "io": [10, 334, 336, 337, 356, 357, 358, 369, 386], "lot": [11, 142, 334, 337, 357], "o": [11, 12, 117, 119, 133, 139, 337, 338, 357, 358, 385], "handl": [11, 12, 338, 357, 364, 375], "lower": [11, 19, 336, 357, 371], "directli": [11, 13, 14, 17, 38, 142, 332, 334, 337, 355, 356, 357, 360], "readm": [11, 336], "importlib": 11, "resourc": [11, 14, 35, 38, 42, 45, 93, 94, 95, 153, 156, 162, 166, 176, 200, 221, 237, 245, 263, 270, 317, 324, 325, 326, 334, 336, 357], "global_ocean": [11, 14, 334, 336, 337, 338, 358, 385], "files_for_e3sm": [11, 334, 336, 358], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 69, 76, 82, 86, 88, 90, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 127, 128, 130, 132, 133, 142, 144, 145, 146, 147, 148, 149, 152, 155, 158, 159, 161, 164, 165, 170, 171, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 197, 198, 199, 202, 205, 210, 211, 212, 213, 214, 216, 219, 220, 223, 225, 227, 231, 232, 236, 238, 240, 243, 244, 247, 249, 251, 257, 258, 262, 264, 266, 270, 272, 274, 279, 280, 281, 283, 284, 286, 288, 291, 306, 334, 336, 344, 346, 348, 357], "did": [11, 355, 357], "add_input_fil": [11, 17, 18, 39, 334, 336, 357], "collect": [11, 101, 143, 331, 333, 341, 355, 357], "whenev": [11, 334, 357], "flexibl": [11, 142, 334, 336, 338, 357], "No": [11, 356, 378, 380], "step_dir": 11, "database_root": [11, 139, 334, 358, 359, 360, 361, 362, 363, 364, 365, 385], "download_path": 11, "join": [11, 357], "bathymetry_databas": [11, 334, 358], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 298, 330, 334, 357, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 391], "url": [11, 40, 59, 334, 354, 358], "web": [11, 334, 358], "anl": [11, 334, 358], "gov": [11, 334, 354, 358, 360, 363, 365], "mpas_standalonedata": [11, 139, 358, 364], "dest_path": [11, 59], "remot": [11, 40, 338, 356], "bathymetri": [11, 305, 311, 334, 358], "access": [11, 39, 336, 337, 338, 357, 359, 364, 365], "update_permiss": 11, "along": [11, 14, 19, 139, 306, 307, 308, 317, 322, 325, 334, 356, 357], "151209": 11, "omega_ctest": 11, "readabl": [11, 337], "writabl": 11, "identifi": [11, 115, 139, 331, 350, 391], "e3sm_unifi": 11, "polaris_machin": 11, "base_url": 11, "filenam": [11, 17, 18, 38, 40, 41, 49, 92, 99, 100, 101, 102, 106, 107, 108, 122, 124, 128, 130, 158, 159, 161, 334, 336, 338, 357], "database_path": 11, "download_target": 11, "has_opt": 11, "full_path": 11, "count": [11, 335, 355], "strategi": [12, 359, 360, 361, 362, 363, 365], "stderr": [12, 38, 49, 334, 336], "loggingcontext": 12, "check_cal": [12, 334], "won": [12, 337, 357, 358], "logger": [12, 18, 38, 49, 68, 95, 122, 334, 336, 357], "full": [12, 38, 94, 112, 225, 293, 294, 307, 308, 317, 334, 336, 353, 356, 357, 364, 368, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385], "although": [12, 142], "captur": [12, 379], "explicit": [12, 337], "go": [12, 46, 53, 272, 274, 330, 334, 336, 337, 338, 357, 365], "subprocess": [12, 38, 94, 95, 111, 334, 337, 354], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 142, 149, 158, 159, 173, 181, 189, 220, 227, 311, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 334, 337, 338, 343, 353, 357, 372, 374, 378, 380, 381, 382, 385, 388], "otherwis": [12, 19, 139, 334, 336, 357, 359, 360, 361, 362, 363, 364, 365, 371], "intent": 12, "desir": [12, 13, 14, 18, 19, 122, 142, 334, 335, 336, 357, 358, 385], "trick": [12, 334], "direct": [12, 13, 14, 81, 233, 259, 317, 322, 324, 325, 326, 357, 365, 371, 376, 378, 379, 380], "snippet": [12, 357], "dome": [12, 68, 330, 334, 336, 385, 391], "setup_mesh": [12, 334], "setupmesh": [12, 334, 336], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 334], "landice_grid": [12, 334, 357], "l": [12, 122, 142, 357, 365], "quasiuniformsphericalmeshstep": [13, 142, 336], "icosahedralmeshstep": [13, 142, 336], "jigsaw": [13, 69, 73, 75, 76, 78, 80, 82, 194, 207, 276, 281, 286, 334, 338, 356], "complex": [13, 77, 336, 337, 357], "build_cell_width_lat_lon": [13, 76], "opt": [13, 82], "make_jigsaw_mesh": [13, 76], "icosahedr": [13, 69, 71, 164, 194, 207, 276, 281, 286, 318, 319, 320, 321, 327, 328, 336, 372, 373, 374, 375, 381, 382], "significantli": [13, 368, 375], "smooth": [13, 98, 306], "cell": [13, 14, 15, 19, 69, 70, 71, 72, 76, 77, 78, 81, 84, 87, 98, 100, 107, 125, 142, 153, 156, 162, 165, 166, 176, 200, 221, 233, 235, 237, 245, 259, 261, 263, 292, 293, 294, 295, 298, 301, 303, 305, 306, 307, 308, 310, 311, 312, 313, 317, 324, 325, 326, 330, 351, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 388], "quasi": [13, 76, 318, 319, 320, 321, 327, 328, 336, 358, 372, 373, 374, 375, 376, 381, 382, 384, 389], "hand": [13, 103, 337], "restrict": [13, 357, 379, 384], "subdivis": [13, 69, 70, 71, 72, 73], "icosahedron": [13, 70, 71, 72, 73], "tabl": [13, 338, 364, 385], "approxim": [13, 69, 71, 72, 76, 142, 153, 156, 162, 166, 176, 200, 221, 237, 245, 263, 317, 324, 325, 326, 338, 357], "width": [13, 69, 70, 71, 76, 77, 78, 84, 125, 306, 357, 371, 376, 379], "km": [13, 14, 69, 70, 71, 72, 76, 77, 78, 81, 84, 142, 152, 155, 157, 161, 164, 173, 174, 175, 178, 181, 182, 184, 186, 189, 199, 213, 219, 220, 223, 236, 238, 249, 255, 262, 264, 283, 317, 318, 319, 320, 321, 324, 326, 327, 328, 334, 357, 358, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 389, 391], "5": [13, 14, 71, 124, 139, 142, 184, 249, 317, 321, 334, 335, 337, 354, 357, 358, 371, 372, 373, 374, 375, 376, 379, 381, 382, 384, 385, 389], "240": [13, 71, 142, 318, 319, 320, 321, 327, 328, 358, 372, 373, 374, 381, 382], "6": [13, 71, 306, 307, 308, 334, 357, 366, 369, 371, 372, 381, 383, 385, 386], "120": [13, 71, 142, 335, 372, 373, 374, 375, 381, 382], "7": [13, 71, 139, 357, 365, 372, 373, 376, 382, 385], "60": [13, 71, 142, 318, 319, 320, 321, 327, 328, 368, 372, 373, 374, 376, 381, 382], "8": [13, 71, 124, 139, 317, 338, 357, 358, 371, 373, 378, 380, 382, 385], "30": [13, 14, 71, 142, 330, 357, 363, 365, 371, 376, 383, 384, 389], "9": [13, 19, 71, 139, 357, 372, 373, 374, 381, 382, 385], "15": [13, 14, 71, 317, 322, 357, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 389], "11": [13, 71, 139, 357, 385], "3": [13, 71, 138, 139, 142, 307, 308, 317, 325, 334, 335, 338, 354, 357, 358, 364, 365, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385], "13": [13, 71, 357, 371], "94": [13, 71, 375], "spherical_mesh": [13, 77], "cell_width": [13, 69, 70, 71, 72, 76, 77, 78, 84], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 84, 123, 124, 125, 142, 144, 149, 186, 192, 205, 216, 251, 274, 288, 305, 306, 307, 308, 311, 317, 318, 319, 320, 321, 325, 327, 328, 348, 372, 373, 374, 375, 378, 379, 380, 381, 382, 388, 391], "plot_cell_width": 13, "cell_width_filenam": [13, 84], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 70, 76, 77, 78, 84, 99, 101, 103, 106, 123, 308, 318, 319, 320, 321, 327, 328, 358, 373], "lon": [13, 17, 70, 76, 77, 78, 84, 99, 101, 103, 106, 123, 308, 318, 319, 320, 321, 327, 328, 358, 373], "sphere": [13, 278, 279, 281, 283, 286, 318, 319, 320, 321, 327, 328, 372, 373, 374, 381, 382], "vtk_lat_lon": 13, "far": [13, 139, 292, 301, 303, 337, 357], "But": [13, 139, 330, 334, 337, 338, 357, 358, 364], "hexagon": [13, 81, 357, 378, 380], "planar_hex": [13, 81, 317, 322, 324, 325, 326, 329, 334, 357], "make_planar_hex_mesh": [13, 81, 317, 322, 324, 325, 326, 329, 334, 357], "x": [13, 19, 70, 77, 78, 81, 84, 102, 108, 125, 142, 171, 233, 259, 305, 307, 322, 334, 357, 371, 376, 378, 380, 383], "y": [13, 14, 19, 81, 102, 108, 125, 142, 233, 259, 305, 307, 317, 322, 324, 325, 326, 334, 357, 365, 371, 376, 378, 379, 380], "nx": [13, 81, 330, 334, 357, 383], "ny": [13, 81, 330, 334, 357, 383], "dc": [13, 330, 334, 357], "distanc": [13, 81, 98, 204, 307, 308, 357, 371, 379], "adjac": [13, 310, 368], "center": [13, 19, 81, 124, 204, 233, 259, 306, 307, 308, 309, 310, 330, 357, 368, 371, 379], "admittedli": 13, "oddli": 13, "period": [13, 316, 317, 318, 320, 322, 324, 325, 326, 327, 328, 334, 357, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382], "nonperiodic_x": [13, 334, 357], "nonperiodic_i": [13, 334, 357], "consider": [13, 292, 295, 301, 303, 316, 351], "compute_planar_hex_nx_ni": [13, 334, 357], "lx": [13, 81, 334, 357, 371, 376, 378, 379, 380, 383], "ly": [13, 81, 334, 357, 371, 376, 379, 383], "explan": 13, "subtleti": 13, "account": [13, 81, 338, 357, 359, 360, 362, 363, 364, 365, 385], "behav": 13, "stagger": [13, 81], "physic": [13, 81, 347, 353, 357, 368], "np": [13, 15, 19, 204, 334, 357, 373], "sqrt": [13, 15, 378], "domain": [13, 25, 32, 81, 125, 142, 157, 165, 171, 316, 330, 351, 357, 371, 373, 375, 376, 378, 379, 380, 383, 384, 389, 391], "extra": [13, 62, 338, 363], "factor": [13, 98], "500e3": 13, "160e3": 13, "1e3": [13, 334, 357], "max": [13, 142, 334, 357, 368, 371, 373, 379], "int": [13, 14, 25, 26, 35, 38, 45, 63, 64, 65, 69, 70, 71, 72, 73, 81, 88, 94, 95, 98, 124, 125, 144, 145, 147, 148, 149, 153, 156, 161, 162, 165, 166, 175, 176, 198, 200, 211, 212, 220, 221, 232, 237, 244, 245, 258, 263, 270, 306, 334, 357, 383], "ds_mesh": [13, 15, 19, 87, 125, 307, 308, 310, 334, 357], "creation": [13, 334, 358], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 94, 95, 165, 330, 334, 337, 357], "distant": 13, "descend": [14, 17, 142, 318, 319, 320, 321, 324, 326, 327, 328, 330, 331, 334, 336, 337, 357], "modelstep": [14, 142, 334, 336, 357], "update_pio": [14, 25, 165], "make_graph": [14, 25, 165], "At": [14, 38, 49, 332, 333, 336, 357, 366, 375], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 95, 161, 165, 175, 220, 244, 270, 331, 334, 335, 355, 357, 358, 360, 363, 365, 385, 390], "prefix": [14, 40, 139, 142, 147, 148, 198, 211, 212, 232, 258, 336, 338, 358], "end": [14, 125, 152, 155, 306, 307, 308, 334, 336, 337, 338, 353, 355, 357, 360, 371, 372, 373, 378, 380, 383, 388], "yml": 14, "reason": [14, 17, 44, 139, 334, 337, 357, 390], "add_namelist_fil": [14, 25, 142, 334, 336], "add_model_config_opt": [14, 25, 142, 334, 336, 357], "add_streams_fil": [14, 25, 142, 334, 336], "themselv": [14, 337, 356], "question": [14, 334, 358], "never": [14, 139, 355], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 142, 357], "config_run_dur": [14, 142, 336, 357], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 173, 355, 357], "config_block_decomp_file_prefix": [14, 357], "time_integr": [14, 142, 357, 366, 372, 373, 374, 375, 376, 381, 382], "config_time_integr": [14, 142], "rk4": [14, 142, 322, 337, 372, 373, 374, 375, 376, 381, 382], "filename_templ": [14, 142, 357], "restart": [14, 18, 49, 142, 219, 220, 225, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 335, 337, 343, 344, 353, 355, 357, 376, 385, 390], "output_interv": [14, 142, 357, 366, 372, 373, 374, 375, 376, 381, 382], "0030_00": 14, "clobber_mod": [14, 142, 357], "truncat": [14, 142, 357], "reference_tim": [14, 142], "0001": [14, 142, 357], "01_00": [14, 142, 351, 357], "tracer": [14, 19, 194, 204, 271, 272, 274, 276, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 357, 369, 373, 374, 377, 378, 380, 381, 382, 383], "xtime": [14, 15, 88, 142, 357], "normalveloc": [14, 18, 19, 142, 191, 226, 260, 316, 317, 322, 324, 325, 326, 329, 334, 357, 383], "layerthick": [14, 18, 142, 191, 226, 292, 295, 299, 300, 301, 303, 305, 317, 322, 324, 325, 326, 329, 334, 357], "refzmid": [14, 292, 295, 301, 303, 334, 357], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 357], "clariti": [14, 334], "global_converg": [14, 336, 357, 370], "substitut": 14, "config_write_output_on_startup": [14, 357], "0000_00": [14, 357], "config_use_mom_del2": [14, 357], "config_implicit_bottom_drag_coeff": [14, 357], "0e": [14, 380, 383], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 357], "config_cvmix_background_viscos": [14, 357], "worri": 14, "togeth": [14, 18, 139, 330, 355, 357, 390], "overkil": 14, "reli": [14, 334, 336, 357], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 90, 91, 93, 97, 98, 114, 116, 117, 123, 127, 128, 129, 142, 144, 152, 155, 158, 161, 168, 197, 210, 231, 257, 279, 281, 286, 334, 336, 357], "config_mom_del2": [14, 317, 325, 334, 357], "precis": [14, 142, 334, 357], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 60, 61, 65, 111, 112, 116, 121, 122, 123, 124, 125, 129, 154, 163, 164, 165, 177, 183, 194, 201, 207, 219, 220, 222, 246, 270, 272, 274, 276, 281, 286, 305, 306, 308, 357], "possibli": [14, 38, 49, 312, 313, 331, 334, 336, 338, 357], "at_setup": [14, 30, 154, 163, 177, 183, 201, 222, 246, 357], "being": [14, 30, 38, 49, 111, 113, 116, 122, 139, 142, 154, 163, 177, 183, 201, 222, 246, 306, 322, 334, 336, 337, 357, 368], "dt": [14, 142, 175, 270, 334, 357, 371, 372, 373, 374, 375, 378, 380, 381, 382, 384, 389], "proport": [14, 142, 357, 368, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 384, 389], "dt_per_km": [14, 142, 318, 319, 320, 321, 327, 328, 357, 371, 376, 378, 380, 384, 389], "stackoverflow": [14, 60, 357], "1384565": [14, 357], "7728169": [14, 60, 357], "config_dt": [14, 142, 357], "strftime": [14, 357], "gmtime": [14, 357], "run_time_step": [14, 175, 244, 334, 357], "durat": [14, 142, 317, 324, 325, 326, 329, 335, 357, 366], "run_second": [14, 357], "btr_dt": [14, 142, 175, 270, 334, 357, 371], "btr_dt_per_km": [14, 142, 357, 366, 371, 376], "config_btr_dt": [14, 142, 357], "bit": [14, 139, 337, 355, 357, 371, 376, 385], "complic": [14, 337, 338, 357], "slightli": [14, 338], "sophist": 14, "immutable_stream": [14, 357], "var_struct": [14, 350], "var": [14, 118, 350, 357], "var_arrai": [14, 350], "tag": [14, 356], "taken": [14, 25, 165, 308, 318, 319, 320, 321, 327, 328, 334, 357, 365, 385], "past": 14, "experi": [14, 139, 337, 368], "difficult": [14, 139, 364], "synchron": [14, 356], "out_nam": 14, "equival": [14, 338, 357, 359], "template_replac": [14, 28, 29, 142], "treat": [14, 335, 337], "jinja2": [14, 28, 29, 117, 152, 155], "render": [14, 28, 29, 117], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 334, 337, 338, 358, 385], "qu240dynamicadjust": 14, "adjust": [14, 139, 142, 159, 160, 161, 314, 322, 358, 376], "interv": [14, 15, 170, 366, 372, 373, 374, 375, 376, 381, 382], "spin": 14, "reus": [14, 19, 125, 334, 337, 338, 357, 358, 385], "qualit": 14, "forgotten": 14, "broken": [14, 334, 337], "immedi": [14, 68, 338, 357], "miss": [14, 334, 357, 358], "detect": [14, 19, 358, 359, 361, 362, 364, 375, 385], "gpmeti": [14, 358], "divid": [14, 19, 310, 368], "partition_graph": [14, 25, 165], "circumst": [14, 18, 38, 39, 334, 357], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 354, 357, 376, 384, 389], "v1": [14, 368], "better": [14, 17, 139, 385], "v2": [14, 358, 368], "littl": [14, 337, 338, 356, 357], "feel": [14, 139, 334, 357], "runtime_setup": [14, 17, 35, 45, 317, 322, 324, 325, 326, 336], "yourself": [14, 357, 364], "culler": 14, "cull": [14, 317, 322, 324, 325, 326, 334, 357], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 84, 86, 87, 124, 125, 142, 145, 146, 147, 148, 198, 205, 211, 212, 216, 232, 258, 280, 288, 292, 295, 301, 303, 305, 306, 307, 308, 311, 312, 313, 316, 317, 321, 324, 325, 326, 329, 357, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382], "weight": [14, 15, 17, 86, 159, 292, 295, 301, 303, 307, 308, 310, 311, 357, 368], "weight_field": [14, 86], "helper": [15, 330, 331], "handi": 15, "area_for_field": 15, "right": [15, 138, 139, 140, 142, 306, 336, 338, 357, 358, 368, 371, 373, 385], "edg": [15, 19, 87, 100, 103, 107, 124, 125, 233, 234, 259, 260, 307, 308, 309, 316, 357], "dimens": [15, 19, 87, 125, 142, 144, 149, 198, 211, 305, 312, 313, 329, 371, 376], "statist": [15, 358], "calcul": [15, 324, 334, 336], "xr": [15, 19, 233, 234, 235, 259, 260, 261, 334, 357], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 148, 212], "mesh_filenam": [15, 19, 25, 86, 124, 158, 159, 165, 171], "open_dataset": [15, 19, 334, 357], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 88, 142, 313, 330], "get_output_field": [15, 142], "field_nam": [15, 19, 125, 146, 147, 148, 198, 211, 212, 232, 258, 280], "output_filenam": [15, 142, 152, 155, 171], "ds_out": [15, 307, 308], "time_index": [15, 88], "isel": [15, 19, 305], "frequent": [17, 314, 350], "observ": [17, 307, 308, 311, 356], "dataset": [17, 87, 88, 125, 233, 259, 292, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 334, 357], "region": [17, 19, 356, 358, 376], "pyremap": [17, 104], "interpol": [17, 98, 306, 307, 308, 310, 311, 312, 313, 358], "hood": 17, "esmf_regridweightgen": 17, "mbtempest": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 363, 368], "bilinear": [17, 98, 306, 373, 384, 389], "my_test_cas": 17, "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 358], "destin": [17, 98, 99, 100, 101, 102, 103, 104], "src_from_lon_lat": 17, "lon_var": [17, 99, 101, 106], "lat_var": [17, 99, 101, 106], "dst_from_mpa": 17, "mesh_nam": [17, 99, 100, 101, 102, 103, 106, 107, 108, 145, 147, 148, 164, 198, 205, 211, 212, 216, 232, 258, 288, 336], "qu60": 17, "subclass": [17, 73, 76, 77, 78, 83, 142, 357], "src_": 17, "dst_": 17, "pick": [17, 109, 110], "vizmap": [17, 194, 207, 219, 276, 336], "128": [17, 335, 360, 361, 365], "cosine_bell_viz": [17, 19, 319, 373, 384, 389], "dlon": [17, 103, 373, 384, 389], "dlat": [17, 103, 373, 384, 389], "remap_method": [17, 373, 384, 389], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 103], "map_tool": 17, "perhap": [17, 19, 41, 306, 330, 332], "cover": [17, 351, 357], "nearli": [17, 334, 336, 355, 356, 357], "workflow": [17, 334, 338], "critic": [18, 357], "easiest": [18, 139, 338], "validate_var": [18, 38, 41, 142, 152, 155, 270, 334], "meth": 18, "add_output_fil": [18, 39, 334, 336, 357], "temperatur": [18, 191, 226, 316, 317, 322, 325, 326, 329, 334, 353, 357, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 389], "salin": [18, 191, 226, 316, 317, 322, 325, 329, 334, 357, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 389], "done": [18, 35, 45, 334, 336, 338, 357, 385], "compare_vari": [18, 357], "filename1": [18, 122, 357], "filename2": [18, 122, 357], "compact": [18, 357], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 122], "valueerror": [18, 337], "quiet": [18, 111, 112, 122, 129], "report": 18, "threshold": [18, 142, 327, 372, 373, 374, 375, 378, 380, 381, 382], "l1": [18, 122], "00000000000000e": 18, "l2": [18, 122, 142, 145, 146, 318, 319, 320, 321, 327, 328, 372, 373, 374, 375, 378, 380, 381, 382], "l_infin": 18, "linf": [18, 122], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 317, 371], "2thread": [18, 371], "test_20210616": 18, "further_valid": 18, "zero": [18, 293, 294, 298, 299, 300, 305, 307, 308, 311, 316, 317, 322, 325, 329, 357, 372, 373, 374, 376, 381, 382, 383], "l1_norm": [18, 122], "l2_norm": [18, 122], "linf_norm": [18, 122], "nonzero": [18, 122], "solut": [18, 137, 145, 147, 148, 198, 211, 212, 232, 233, 234, 235, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 319, 321, 324, 326, 335, 354, 357, 369, 375, 377, 378], "aspect": [19, 125, 357], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 139, 160, 165, 314, 338, 357, 358, 371, 379], "plot_horiz_field": [19, 334, 357], "patch": [19, 124, 125, 357], "polygon": 19, "character": [19, 372, 374, 379, 381, 382], "accordingli": [19, 96], "cell_mask": [19, 125], "ds_init": [19, 357], "maxlevelcel": [19, 142, 292, 293, 294, 295, 298, 299, 300, 301, 303, 357], "final_normalveloc": [19, 357], "t_index": [19, 125, 357], "vmin": [19, 125, 306, 357, 373], "max_veloc": [19, 357], "vmax": [19, 125, 306, 357, 373], "cmap": [19, 125, 306, 334, 357], "cmo": [19, 334, 357, 372, 374, 375, 381, 382], "balanc": [19, 207, 321, 322, 334, 357, 372, 374, 375, 381, 382], "show_patch_edg": [19, 125, 334, 357], "water": [19, 321, 324, 357, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384], "column": [19, 268, 269, 271, 272, 274, 321, 329, 338, 342, 343, 344, 346, 347, 348, 350, 351, 353, 368, 369, 375, 376, 377, 385, 386, 387], "increas": [19, 142, 337], "effici": [19, 334, 357], "patch_mask": [19, 125], "subsequ": [19, 142, 334, 390], "ncell": [19, 142, 198, 211, 305, 312, 313, 334, 357], "nedg": [19, 334, 357], "cell_patch": 19, "cell_patch_mask": 19, "out_file_nam": [19, 125], "720": 19, "figsiz": [19, 124, 125, 306], "bottomdepth": [19, 142, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 334, 357, 368, 375], "edge_patch": 19, "edge_patch_mask": 19, "plot_global_mpas_field": 19, "cmocean": [19, 334, 357], "noqa": [19, 68, 334, 357], "f401": [19, 334, 357], "da": [19, 124, 312, 313], "tracer1": [19, 142, 372, 374, 381, 382], "nvertlevel": [19, 125, 142, 144, 149, 292, 295, 301, 303, 305, 312, 313, 334, 357, 368], "out_filenam": [19, 120, 123, 124, 291, 306], "colormap_sect": [19, 123, 124], "titl": [19, 123, 124, 125, 142, 144, 149, 306], "plot_land": [19, 123, 124], "central_longitud": [19, 124], "180": [19, 70, 77, 78, 84, 103, 142, 310, 372, 373, 374, 381, 382], "disabl": [19, 316, 373, 391], "contin": [19, 123, 124], "overlain": 19, "degre": [19, 70, 77, 78, 84, 103, 305, 308, 310, 358, 371, 376, 379], "quantiti": 19, "antimeridian": 19, "colormap": [19, 123, 124, 125, 306, 318, 319, 320, 321, 327, 328, 357, 372, 373, 374, 375, 381, 382], "cosin": [19, 142, 194, 196, 197, 199, 202, 204, 205, 213, 216, 284, 288, 319, 336, 357, 369, 370, 372, 374, 375, 377, 381, 382, 384, 389], "bell": [19, 142, 194, 196, 197, 199, 202, 204, 205, 213, 216, 284, 288, 319, 336, 357, 369, 370, 372, 374, 375, 377, 381, 382, 384, 389], "converg": [19, 194, 198, 207, 211, 212, 229, 230, 232, 255, 256, 258, 280, 318, 319, 320, 321, 324, 326, 327, 328, 332, 335, 356, 357, 372, 373, 374, 375, 378, 381, 382, 384, 389], "colormap_nam": [19, 123, 124, 318, 319, 320, 327, 328, 372, 373, 374, 375, 381, 382], "viridi": [19, 318, 319, 320, 327, 328, 357, 372, 373, 374, 381, 382], "norm": [19, 122, 123, 124, 142, 146, 149, 318, 319, 320, 321, 327, 328, 372, 373, 374, 375, 378, 380, 381, 382], "norm_typ": [19, 123, 124, 318, 319, 320, 327, 328, 372, 373, 374, 375, 381, 382], "colorbar": [19, 123, 124, 125, 306, 318, 319, 320, 327, 328, 372, 373, 374, 375, 381, 382], "colorbar_limit": [19, 124, 318, 319, 320, 327, 328, 372, 374, 375, 381, 382], "standard": [19, 243, 244, 249, 325, 337, 338, 347, 357, 360, 379, 385], "logarithm": [19, 125], "upper": [19, 125], "bound": [19, 311, 324, 326], "plot_global_lat_lon_field": 19, "norm_arg": [19, 123, 373], "tick": [19, 123, 373], "mark": [19, 125, 306, 338, 373], "colorbar_tick": [19, 123, 373], "symlog": [19, 123], "symmetr": 19, "central": [19, 373], "color": [19, 124, 125, 306], "normal": [19, 233, 234, 259, 260, 316, 321, 334, 335, 338, 357, 364, 375], "symlognorm": 19, "lognorm": 19, "hous": [20, 372, 373, 374, 381, 382], "kei": [20, 49, 116, 142, 144, 158, 161, 336], "max_memori": [25, 35, 38, 45, 165, 334], "graph_filenam": [25, 86, 152, 155, 158, 161, 165], "make_yaml": 25, "stride": [25, 37, 165], "partit": [25, 34, 44, 63, 86, 165, 317, 322, 324, 325, 326, 334, 358, 359, 360, 361, 362, 363, 385], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 98, 161, 165, 175, 220, 244, 270, 334], "nor": [25, 38, 49, 98, 161, 165, 175, 220, 244, 270, 334, 357], "append": [25, 38, 40, 49, 98, 159, 161, 165, 173, 174, 175, 178, 181, 182, 184, 186, 189, 190, 192, 220, 223, 225, 227, 243, 244, 247, 249, 251, 270, 334, 344, 346, 348], "ideal": [25, 35, 38, 45, 94, 95, 98, 142, 161, 165, 175, 220, 244, 270, 271, 272, 274, 330, 334, 337, 356, 357, 358, 391], "fewer": [25, 35, 38, 45, 94, 95, 161, 165, 175, 220, 244, 270, 334, 357, 385], "memori": [25, 35, 38, 45, 165, 334, 358], "mb": [25, 35, 38, 45, 165, 334, 358], "placehold": [25, 35, 38, 45, 165, 334, 385], "diverg": [31, 168, 320, 369, 372, 375, 377, 381], "counterpart": [31, 142, 168], "nest": [31, 127, 129, 168], "graph_fil": 32, "run_as_subprocess": [38, 334], "smallest": [38, 334, 355, 368, 391], "unit": [38, 99, 103, 106, 334, 355, 371, 391], "term": [38, 355, 357, 378, 380], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 334, 336, 385], "finish": [38, 39, 83, 334, 357], "known": [38, 39, 139, 319, 334, 357], "suffici": [38, 334, 379], "establish": [38, 39, 334], "has_shared_config": 38, "is_depend": [38, 334], "machine_info": [38, 334], "machineinfo": 38, "base_work_dir": [38, 49, 113, 334, 336], "log_filenam": [38, 49, 334, 336], "redirect": [38, 334], "extern": [38, 139, 314, 331, 334, 336, 350, 369, 386], "turn": [38, 56, 331, 334, 354, 357, 383], "inner": [38, 334], "repres": [38, 357, 368, 373, 376, 381], "database_compon": [40, 334], "work_dir_target": [40, 334], "come": [40, 139, 334, 338, 357, 359, 360, 361, 362, 363, 364, 365, 369], "_database_root": 40, "available_resourc": [42, 93], "constrain": [42, 153, 156, 162, 166, 176, 200, 221, 237, 245, 263, 317, 324, 325, 326, 334, 357], "cores_per_nod": [42, 93, 96, 139, 358, 359, 360, 361, 362, 363, 364, 365, 385], "everi": [43, 317, 334, 336, 337, 353, 354, 355, 357, 371, 376, 383], "child": [43, 142, 331, 334, 336, 337], "subtask": 45, "step_symlink": [49, 336], "outsid": [49, 50, 330, 332, 334, 336, 338], "stdout_logg": [49, 336], "goe": [49, 334, 336, 357], "regardless": [49, 336], "new_step_log_fil": [49, 336], "run_by_default": [50, 336], "assum": [51, 117, 128, 139, 338, 357, 365, 371], "prior": [51, 334], "step_path": 55, "variant": [55, 196, 209, 276, 278, 317, 322, 325, 330, 335, 337, 338, 357, 364, 368, 371, 372, 373, 374, 379, 381, 382], "uncach": 55, "datestamp": 55, "yymmdd": [55, 358], "dry": [55, 335], "meta": 57, "empti": [57, 306, 334, 337, 338, 355, 357], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 112, 338], "isadirectoryerror": 60, "show_progressbar": 61, "fix": [61, 142, 357], "permiss": [61, 338], "everyon": 61, "progress": [61, 111, 112], "bar": [61, 125], "whitespac": 62, "jinja": [62, 128, 142, 318, 319, 320, 327, 328], "blank": [62, 338], "qo": [63, 359, 360, 362, 364, 365, 385], "qualiti": [63, 359, 360, 362, 364, 365, 385], "servic": [63, 359, 360, 362, 364, 365, 385], "gpus_per_nod": 63, "numer": [63, 142, 318, 320, 327, 328, 372, 374, 378, 380, 381, 382], "gpu": [63, 360, 363, 365], "wall_tim": [63, 385], "wall": [63, 385], "target_cor": 64, "min_cor": 64, "decomposition_test": [68, 330, 385], "decompositiontest": [68, 330], "e501": [68, 357], "turquois": [68, 360], "usr": [68, 139, 360, 385], "climat": [68, 359, 360, 361, 364, 385], "mhoffman": 68, "constant": [69, 76, 77, 142, 306, 307, 308, 316, 328, 357, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 389], "latitud": [70, 77, 99, 101, 103, 106, 123, 124, 142, 305, 308, 372, 373, 374, 375, 381, 384, 389], "longitud": [70, 77, 78, 84, 99, 101, 103, 106, 123, 124, 142, 305, 308, 372, 373, 374, 375, 381, 384, 389], "ndarrai": [70, 77, 78, 84, 88, 123, 125, 171, 204, 290, 291, 357], "length": [70, 77, 78, 84, 376, 379], "90": [70, 77, 78, 84, 142, 334, 372, 373, 374, 376, 381, 382], "static": [71, 72], "rule": 71, "thumb": 71, "achiev": [72, 335], "uniform": [76, 81, 152, 155, 199, 213, 283, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 336, 357, 358, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 389], "natur": 81, "jigsawpi": [82, 334], "jigsaw_jig_t": 82, "area": [87, 307, 308, 357], "dt_target": 88, "start_xtim": 88, "char": 88, "defaults_filenam": 89, "total": [93, 334, 335, 337, 357, 358, 360, 385], "substep": [94, 95], "command_line_arg": 94, "cpus_per_nod": 96, "map_filenam": 98, "src_grid_info": 98, "dst_grid_info": 98, "neareststod": [98, 373, 384, 389], "conserv": [98, 373, 384, 389], "expand_dist": 98, "meter": [98, 204, 290, 291, 308, 372, 374, 381], "expand": [98, 142, 368], "expand_factor": 98, "src_mesh_filenam": 98, "scrip": [98, 138, 140, 358], "dst_mesh_filenam": 98, "map_": 98, "source_typ": 98, "_": [98, 139, 334, 336, 338, 357, 379, 383], "dest_typ": 98, "1d": [99, 103, 106, 123, 142, 290, 291, 292, 293, 294, 295, 298, 299, 301, 303, 322], "2d": [99, 103, 106, 123, 159, 219, 225, 311, 322, 369, 377], "5x0": [99, 103, 106], "5degre": [99, 103, 106], "coordin": [99, 101, 102, 106, 108, 123, 125, 233, 259, 292, 295, 296, 297, 301, 302, 303, 304, 305, 307, 308, 310, 311, 322, 367, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 388], "mesh_typ": [100, 107, 330, 334, 336], "vertex": [100, 107], "x_var": [102, 108], "y_var": [102, 108], "proj_attr": [102, 108], "proj_str": [102, 108], "proj": [102, 108, 363], "left": [103, 142, 306, 357, 368, 371, 373], "remapp": [104, 105], "remap_fil": 104, "is_task": 112, "steps_to_skip": 112, "component_nam": 113, "config_filepath": 113, "unpickl": [114, 334], "cached_step": 115, "task_list": 116, "_all": 116, "streams_filenam": 117, "lxml": [117, 119, 133], "etre": [117, 119, 133], "new_child": 118, "children": 118, "sub": [118, 357, 376], "new_tre": 119, "infin": [122, 372, 374, 381, 382], "toler": 122, "data_arrai": 123, "colorbar_label": [123, 124, 306], "subtitl": [123, 124], "dpi": [124, 306], "200": [124, 142, 306, 324, 326, 357, 371, 376, 378, 380, 383], "patch_edge_color": 124, "horizont": [124, 125, 142, 171, 227, 305, 306, 311, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 371, 372, 374, 376, 378, 379, 380, 381, 382, 383], "inch": [124, 125, 306], "dot": [124, 125, 306, 337], "face": 124, "ax": [125, 306], "z_index": 125, "cmap_set_und": 125, "cmap_set_ov": 125, "cmap_scal": 125, "cmap_titl": 125, "vert_dim": 125, "transect_x": 125, "transect_i": 125, "transect_color": 125, "black": [125, 306], "transect_start": 125, "red": [125, 306, 332], "transect_end": 125, "green": [125, 306, 332], "transect_linewidth": 125, "transect_markers": 125, "depth": [125, 142, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 303, 305, 306, 311, 357, 358, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384], "slice": [125, 145], "fieldnam": 125, "matplotlib": [125, 126, 306, 357], "multi": [125, 306], "panel": [125, 306], "visibl": 125, "ratio": 125, "Not": 125, "transect": [125, 142, 305, 306, 358], "marker": 125, "style": [126, 142, 356, 357], "classmethod": 128, "flat": [129, 306, 368, 371, 375], "namelist_templ": 132, "polarisyaml": [132, 133], "processed_registry_filenam": 133, "registri": [133, 316, 350], "steam": 133, "1_anvil_intel_impi": [134, 139], "ve": [134, 135, 136, 137, 138, 140, 338, 357], "1_anvil_gnu_openmpi": 134, "1_chicoma": 135, "cpu_gnu_mpich": [135, 140], "crai": [135, 138, 139, 140, 363, 365], "1_chrysalis_intel_openmpi": 136, "1_chrysalis_gnu_openmpi": 136, "soon": [137, 139, 357, 385], "1_compy_intel_impi": 137, "1_compy_gnu_openmpi": 137, "1_frontier_gnu_mpich": 138, "1_frontier_crayclang_mpich": 138, "load_polaris_env": [139, 338, 357, 385], "therefor": [139, 334, 355, 357], "chicoma": [139, 364, 385], "mpich": [139, 338, 356, 360, 363, 365, 385], "compi": [139, 362, 385], "frontier": [139, 364], "crayclang": [139, 363], "pm": [139, 365, 385], "compymcnodefac": [139, 364], "pretti": [139, 334, 337, 357, 358], "conda_path": [139, 338], "osx": [139, 364], "clang": [139, 338], "1_": 139, "morpheu": 139, "cobalt": [139, 359, 360, 361, 362, 363, 364, 365], "single_nod": [139, 358, 359, 360, 361, 362, 363, 364, 365, 385], "mpirun": [139, 354, 358, 359, 360, 361, 362, 363, 364, 365, 385], "srun": [139, 334, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 385], "parallel_execut": [139, 354, 358, 359, 360, 361, 362, 363, 364, 365, 385], "modules_befor": [139, 360, 363, 365], "modules_aft": [139, 360, 363, 365], "polaris_env": [139, 359, 360, 361, 362, 363, 364, 365], "deploi": [139, 338, 356, 359, 360, 361, 362, 363, 364, 365], "mpi_gnu": [139, 359, 360, 361, 362, 363, 364, 365], "hdf5": [139, 359, 360, 361, 362, 363, 364, 365], "use_e3sm_hdf5_netcdf": [139, 359, 360, 361, 362, 363, 364, 365], "discoveri": 139, "hostnam": 139, "hostname_contain": 139, "queu": 139, "laptop": [139, 338, 357, 358], "workstat": [139, 338], "high": [139, 334, 361, 364], "hpc": [139, 338, 360, 364], "safest": [139, 338], "mpi_": 139, "simpl": [139, 142, 337, 350, 357, 385], "compiler_gnu": 139, "compiler_intel": 139, "hopefulli": [139, 358], "parlanc": 139, "concret": 139, "ubuntu": 139, "spec": [139, 354, 365], "gcc": 139, "curl": 139, "81": 139, "buildabl": 139, "install_missing_compil": 139, "cc": [139, 363], "bin": [139, 338, 365, 385], "cxx": 139, "f77": 139, "fc": 139, "operating_system": 139, "ubuntu22": 139, "04": 139, "extra_rpath": 139, "luck": 139, "catch": [139, 335, 338], "22": 139, "guess": [139, 357], "correct": [139, 338], "potenti": [139, 171, 184, 249, 334, 357, 371, 379], "purg": 139, "perl": 139, "32": [139, 335, 385], "bsnc6lt": 139, "ugetvbp": 139, "sxfyy4k": 139, "2020": 139, "304": 139, "n3b5fye": 139, "j3zxncu": 139, "7ohuiwq": 139, "k2zu3y5": 139, "mirrcz7": 139, "variou": [139, 268, 334, 338, 342], "ask": 139, "gb": 139, "minut": [139, 317, 322, 335, 371, 376, 379, 390], "hour": [139, 142, 324, 326, 335, 353, 360, 365, 366, 372, 373, 374, 375, 376, 378, 380, 381, 382, 385, 388], "zlib": 139, "incompat": 139, "ubuntu20": 139, "readlin": 139, "pkgconf": 139, "spackdir": 139, "env": [139, 365], "arch": 139, "repositori": [139, 332, 356, 357, 385], "x86_64_v4": 139, "free": [139, 316, 357, 358], "touch": [139, 307, 308, 338], "everyth": 139, "1_pm": 140, "cpu_intel_mpich": 140, "ever": [142, 337], "oceanmodelstep": [142, 334, 357], "decid": [142, 357], "veri": [142, 322, 331, 334, 337, 338, 350, 357, 375, 376, 383], "earli": [142, 369, 385], "stage": [142, 316, 334, 336, 338, 346, 353, 369, 385], "map_yaml_to_namelist": 142, "heurist": 142, "round": [142, 372, 373, 374, 381, 382], "cell_count": [142, 153, 156, 162, 166, 176, 200, 221, 237, 245, 263, 357], "goal_cells_per_cor": [142, 357, 372, 373, 374, 378, 379, 380, 381, 382, 384, 389], "pinch": 142, "2000": [142, 330, 351, 353, 357, 376, 388], "max_cells_per_cor": [142, 357, 372, 373, 374, 378, 379, 380, 381, 382, 384, 389], "seciton": 142, "control": [142, 318, 319, 320, 321, 327, 328, 334, 358, 371, 372, 373, 374, 381, 382, 383, 385], "scale": [142, 371, 381, 385], "tri": [142, 337], "apport": 142, "dai": [142, 170, 184, 249, 317, 318, 319, 320, 321, 322, 325, 327, 328, 329, 353, 357, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 388], "form": [142, 325, 379, 391], "dddd_hh": [142, 170], "ss": [142, 170], "get_time_interval_str": 142, "run_dur": [142, 366, 372, 373, 374, 375, 376, 381, 382], "fill": 142, "dt_str": 142, "run_duration_str": 142, "output_interval_str": 142, "yaml_filenam": [142, 152, 155, 158, 161], "caviti": [142, 322, 337, 357, 358, 366, 368, 376], "frazil": [142, 322, 376], "flux": [142, 316, 322, 325, 376, 379, 383], "add_spherical_base_mesh_step": [142, 336], "spherical_converg": [142, 321, 336, 372, 373, 374, 381, 382], "icos_resolut": [142, 372, 373, 374, 381, 382], "480": [142, 372, 373, 374, 381, 382], "qu_resolut": [142, 372, 373, 374, 381, 382], "150": [142, 372, 373, 374, 379, 381, 382], "210": [142, 368, 372, 373, 374, 381, 382], "evalu": [142, 145, 146, 147, 148, 198, 211, 212, 232, 234, 235, 258, 260, 261, 280, 318, 320, 327, 328, 372, 373, 374, 375, 381, 382], "convergence_eval_tim": [142, 372, 373, 374, 375, 381, 382], "24": [142, 319, 373, 388], "convergence_thresh": [142, 373], "error_typ": [142, 145, 146, 372, 373, 374, 375, 381, 382], "convergence_forward": [142, 318, 319, 320, 327, 328, 373, 375], "split_explicit": [142, 366, 372, 373, 374, 375, 376, 381, 382], "rk4_dt_per_km": [142, 366, 372, 373, 374, 375, 376, 381, 382], "split": [142, 337], "split_dt_per_km": [142, 366, 376], "barotrop": [142, 175, 270, 334, 357, 371, 383], "simul": [142, 322, 324, 326, 334, 355, 357, 366, 370, 371, 372, 375, 376, 378, 380, 384, 385, 389], "infti": [142, 368], "inf": [142, 145, 146, 375], "infrastructur": [142, 337, 357], "add_cosine_bell_task": [142, 331], "sphericalconvergenceforward": [142, 318, 319, 320, 321, 327, 328], "invok": 142, "analyz": [142, 144, 197, 210, 279, 281, 286, 357, 372, 373, 374, 381, 382], "split_explicit_t": [142, 357], "convergenceforward": [142, 324, 326], "convergenceanalysi": [142, 318, 319, 320, 321, 324, 326, 327, 328], "convergence_var": [142, 144], "zidx": [142, 144, 145, 147, 148, 149, 198, 211, 212, 232, 258], "exact_solut": 142, "state": [142, 147, 159, 171, 173, 174, 181, 184, 189, 198, 211, 232, 243, 249, 258, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 334, 335, 357, 366, 373, 375], "put": [142, 157, 338, 357], "ice_shelf": [142, 322], "iceshelf": 142, "ice_shelf_2d": [142, 314, 323, 376], "iceshelf2d": [142, 322], "setup_ssh_adjustment_step": 142, "ssh_forward": [142, 158, 161, 322], "ssh_adjust": [142, 157, 158, 159, 314, 322, 334, 358, 366, 376], "sshforward": [142, 158, 322], "sshadjust": [142, 322], "grid_1d": 142, "generate_1d_grid": 142, "vertical_grid": [142, 290, 292, 295, 301, 303, 330, 334, 357, 358, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "z": [142, 144, 145, 147, 148, 149, 198, 211, 212, 232, 258, 293, 294, 298, 299, 300, 301, 302, 303, 304, 322, 357, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "star": [142, 300, 303, 304, 322, 357, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "init_vertical_coord": [142, 334, 357], "minlevelcel": [142, 292, 294, 295, 298, 299, 300, 301, 303, 357], "cellmask": [142, 292, 295, 298, 301, 303, 357], "zmid": [142, 292, 295, 301, 303, 357], "restingthick": [142, 292, 295, 300, 301, 303, 357], "update_layer_thick": 142, "entir": [142, 357, 371, 376, 379, 390], "petersen": [142, 338, 357, 371], "et": [142, 357, 368, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382], "al": [142, 357, 368, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382], "2015": [142, 357, 371], "int_": 142, "rho": 142, "dv": 142, "sort": [142, 331, 332, 337, 338], "compute_rp": [142, 357], "csv": [142, 318, 319, 320, 321, 327, 328, 357], "compute_transect": [142, 306, 322], "plot_transect": [142, 305], "dependencies_dict": 144, "rate": [144, 146, 147, 198, 211, 232, 258, 280, 318, 319, 320, 321, 324, 326, 327, 328, 357, 372, 373, 374, 375, 378, 380, 381, 382, 383], "variable_nam": [145, 149], "exact": [145, 147, 148, 198, 211, 212, 232, 233, 234, 235, 258, 259, 260, 261, 319, 321, 324, 326, 337, 378, 380], "conv_thresh": [146, 280, 378, 380], "deriv": [147, 158, 161, 232, 258], "min_resolut": [157, 161], "sshdir": 157, "shelv": [157, 314, 358, 368, 376], "init_filenam": [158, 161, 357], "forwardstep": [158, 334], "yaml_replac": [158, 161], "shared_step": 158, "match": [159, 322, 338, 357], "dynam": [160, 165, 314, 322, 329, 358, 366, 371, 372, 373, 374, 375, 376, 381, 382, 383, 384], "subdivid": [164, 307, 308, 336], "dynamic_ntask": 165, "available_cor": 167, "estim": [167, 169, 357], "time_str": 170, "initial_state_filenam": 171, "energi": [171, 184, 249, 356, 357, 371, 379], "len": [171, 357], "output_fil": [171, 334, 357], "shorter": [181, 335, 343], "step_subdir": [190, 225, 344], "processor": [190, 334, 344, 371, 376], "include_viz": [194, 207, 219, 276, 336], "advect": [194, 243, 244, 249, 276, 318, 319, 320, 321, 325, 327, 328, 372, 373, 374, 378, 379, 380, 381, 382, 383], "less": [194, 207, 276, 281, 286, 334, 368], "max_valu": 204, "ri": 204, "accord": [204, 375, 378, 380, 385], "radiu": [204, 308, 372, 373, 374, 381, 382], "testcas": [215, 253, 357, 358, 371, 376, 383, 385], "include_restart": 219, "include_tid": 219, "tidal": [219, 220, 322, 376], "do_restart": 220, "tidal_forc": [220, 316], "cross": [227, 253, 357], "plane": 227, "inerti": [229, 230, 231, 233, 236, 238, 240, 324, 336, 369, 377], "graviti": [229, 230, 231, 233, 236, 238, 240, 324, 336, 369, 377], "wave": [229, 230, 231, 233, 236, 238, 240, 242, 243, 244, 247, 249, 251, 253, 259, 324, 325, 334, 336, 357, 369, 371, 377, 380], "analys": [231, 257], "angleedg": [233, 259], "angl": [233, 259, 375], "posit": [233, 259, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 303, 305, 311, 357, 368, 383], "xcell": [233, 259, 334, 357], "ycell": [233, 259, 334, 357], "xedg": [233, 259, 334, 357], "yedg": [233, 259], "f0": 233, "corioli": [233, 324, 326, 357, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383], "eta0": [233, 259], "amplitid": [233, 259], "kx": [233, 259], "ky": [233, 259], "angular": [233, 259], "frequenc": [233, 259, 317], "veloc": [234, 260, 316, 317, 321, 322, 324, 325, 326, 336, 338, 357, 372, 373, 374, 375, 376, 381, 382, 383, 385], "norm_vel": 234, "eta": [235, 261, 378, 380], "taskdir": [238, 240, 264, 266], "vadv_method": [243, 244, 249], "vlr": [243, 244, 249, 325, 379], "test_cas": 253, "manufactur": [255, 256, 257, 259, 262, 264, 266, 326, 369, 377], "mix": [269, 330, 331, 372, 378, 380, 383], "param": [269, 271], "resources_fix": 270, "ag": [271, 272, 274], "evolv": [271, 356, 368, 372, 373, 374, 381, 382, 383], "ideal_ag": [272, 274], "case_nam": [276, 279, 281, 283, 284, 286], "transport": [278, 279, 281, 283, 286, 318, 320, 327, 328, 372, 373, 374, 381, 382], "nondivergent_2d": [278, 314, 323, 381], "divergent_2d": [278, 314, 323, 374], "correlated_tracers_2d": [278, 314, 323, 372], "rotation_2d": [278, 314, 323, 382], "layer": [290, 291, 292, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 311, 316, 317, 318, 320, 322, 324, 325, 326, 327, 328, 329, 357, 358, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "bottom": [292, 293, 294, 295, 298, 299, 300, 301, 303, 316, 357, 358, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384], "thick": [292, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 311, 317, 318, 320, 321, 322, 325, 327, 328, 329, 351, 357, 358, 368, 371, 372, 374, 375, 376, 378, 381, 382, 388], "stretch": [292, 295, 301, 303, 357, 368], "elev": [292, 295, 301, 303, 357, 368], "midpoint": [292, 295, 301, 303, 357], "reftopdepth": [292, 295, 298, 299, 301, 303, 357], "down": [292, 293, 294, 295, 298, 299, 300, 301, 303, 305, 311, 322, 357, 368, 373], "ref": [292, 295, 301, 303, 357], "middl": [292, 295, 301, 303, 306, 357], "refbottomdepth": [292, 293, 294, 295, 298, 299, 301, 303, 334, 357], "refinterfac": [292, 295, 301, 303, 357], "element": [292, 295, 301, 303, 357], "vertcoordmovementweight": [292, 295, 301, 303, 357], "movement": [292, 295, 301, 303, 357], "alter": [293, 294, 334, 336, 356, 357, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384], "partial": [293, 294, 357, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "seafloor": [293, 298, 299, 300, 305, 306, 311, 368], "terrain": [295, 368], "min_vert_level": [298, 368, 376], "min_layer_thick": [298, 358, 368, 376], "unstretch": 300, "ds_horiz_mesh": 305, "layer_thick": [305, 311], "bottom_depth": [305, 311, 334, 357, 358, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384], "min_level_cel": [305, 311], "max_level_cel": [305, 311], "quad": 305, "intersect": [305, 307, 308, 309], "instant": 305, "tidx": 305, "ds_transect": [305, 306, 311, 312, 313], "vert": 305, "find_transect_levels_and_weight": [305, 312, 313], "mpas_field": 306, "outline_color": 306, "ssh_color": 306, "seafloor_color": 306, "interface_color": 306, "cell_boundary_color": 306, "linewidth": 306, "color_start_and_end": 306, "start_color": 306, "end_color": 306, "3d": 306, "outlin": 306, "boundari": [306, 311, 356, 371, 376, 379, 391], "inset": 306, "axi": [306, 334, 357, 382], "plot_start_end": 306, "x_transect": 307, "y_transect": 307, "ds_tri": [307, 308, 309, 310], "subdivision_r": [307, 308], "10000": [307, 308, 378, 380], "triangl": [307, 308, 309, 310, 311], "segment": [307, 308, 309, 311], "mesh_to_triangl": [307, 308, 309], "scipi": [307, 308, 309, 358], "spatial": [307, 308, 309, 383], "ckdtree": [307, 308, 309], "make_triangle_tre": [307, 308], "candid": [307, 308], "enough": [307, 308, 309, 317, 325, 334, 337, 357, 376], "curvatur": [307, 308], "lie": [307, 308], "purposefulli": [307, 308], "repeat": [307, 308], "discontinu": [307, 308, 374, 381, 382], "xnode": [307, 310], "ynode": [307, 310], "dnode": [307, 308], "horiztriangleindic": [307, 308], "horiztrianglenodeindic": [307, 308], "mod": [307, 308], "horizcellindic": [307, 308], "interphorizcellindic": [307, 308], "interphorizcellweight": [307, 308], "averag": [307, 308], "xtransect": 307, "ytransect": 307, "dtransect": [307, 308], "transectindicesonhoriznod": [307, 308], "transectweightsonhoriznod": [307, 308], "nodevalu": [307, 308], "transectvalu": [307, 308], "lon_transect": 308, "lat_transect": 308, "earth_radiu": 308, "radian": [308, 310], "earth": [308, 356], "sphere_radiu": 308, "cartesian": [308, 310, 382], "xcartnod": 308, "ycartnod": 308, "zcartnod": 308, "lonnod": [308, 310], "latnod": [308, 310], "lontransect": 308, "lattransect": 308, "xcarttransect": 308, "ycarttransect": 308, "zcarttransect": 308, "great": [308, 357], "circl": 308, "kd": 309, "connect": [310, 357, 365], "pair": [310, 372, 374, 381, 382, 388], "tricellindic": 310, "nodecellindic": 310, "nodecellweight": 310, "znode": 310, "counterclockwis": 310, "wind": [310, 375, 383], "ds_horiz_transect": 311, "horiz": 311, "find_spherical_transect_cells_and_weight": 311, "find_planar_transect_cells_and_weight": 311, "transectz": 311, "bilinearli": 311, "nsegment": [311, 312], "nhalflevel": [311, 312], "quadrilater": 311, "nhoriznod": [311, 313], "nvertnod": [311, 313], "corner": 311, "validcel": 311, "validnod": 311, "ztransectnod": 311, "zseafloor": 311, "floor": [311, 368, 376], "cellindic": 311, "levelindic": 311, "interpcellindic": 311, "interplevelindic": 311, "nhorizweight": 311, "nvertweight": 311, "interpcellweight": 311, "multipli": [311, 372, 373, 374, 375, 381, 382], "dinterfaceseg": 311, "zinterfaceseg": 311, "dcellboundari": 311, "zcellboundari": 311, "interp_mpas_to_transect_cel": 311, "interp_mpas_to_transect_nod": 311, "among": [312, 313, 330, 332, 338, 357], "da_cel": 312, "whatev": [312, 313, 385], "besid": [312, 313], "linearli": [313, 376], "neighbor": 313, "da_nod": 313, "polaris_branch": [314, 350], "example_compact": [314, 331, 350, 358], "default_input": [314, 331, 350, 357, 358], "ocean_model": [314, 338, 358], "latest": [314, 338, 350, 356, 369, 385], "compat": [314, 338, 350, 354, 356, 376], "verison": 314, "geostroph": [314, 323, 369, 377], "internal_wav": [314, 323, 379], "manufactured_solut": [314, 323, 331, 380], "single_column": [314, 323, 331, 350, 352, 383], "minim": 316, "fcell": [316, 334, 357, 372, 373, 374, 381, 382], "fedg": [316, 334, 357, 372, 373, 374, 381, 382], "fvertex": [316, 334, 357, 372, 373, 374, 381, 382], "slip": 316, "solid": [316, 351, 371, 373, 376, 379], "tangenti": 316, "nonperiod": 316, "drag": [316, 318, 319, 320, 321, 327, 328], "mass": 316, "momentum": [316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 378, 380], "scalar": 316, "rigid": [316, 382], "solv": [316, 354, 368], "mid": [316, 371, 381], "vari": [316, 318, 319, 320, 321, 327, 328, 334, 354, 364, 368, 373, 375, 376], "consult": [316, 357], "eddi": [317, 371], "addition": [317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 334, 359, 360, 361, 362, 363, 365], "diffus": [317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329], "50": [317, 324, 325, 326, 357, 371, 376, 378, 380, 383], "prescrib": [317, 324, 325, 326, 375], "intens": [317, 325], "sphere_transport": [318, 320, 327, 328, 372, 374, 381, 382], "spheretransport": [318, 320, 327, 328], "deform": [318, 327, 381], "flow": [318, 320, 327, 328, 371, 372, 373, 374, 375, 381, 382], "distribut": [318, 319, 320, 327, 328, 372, 374, 381, 382], "scheme": [318, 320, 322, 325, 327, 328, 366, 372, 376, 379, 381, 383], "correl": [318, 369, 377], "differenti": [318, 320, 327, 328], "convergence_": [318, 320, 327, 328], "mixinganalysi": 318, "relationship": [318, 372], "triplot": 318, "fast": [318, 319, 320, 321, 327, 328, 357], "sphere_transport_viz_": [318, 320, 327, 328], "cosinebel": [319, 336], "shape": [319, 373], "blob": 319, "around": [319, 357, 358, 371, 372, 373, 374, 379, 381, 382], "convergence_tracer1": 319, "convergence_h": 321, "convergence_normalveloc": 321, "invari": 322, "inherit": [322, 337, 357], "iceshelftask": [322, 366], "100": [322, 324, 326, 329, 368, 378, 380, 383], "squash": [322, 368], "profil": [322, 329, 354, 383], "land_ice_flux": 322, "prognost": [322, 371, 376], "coord_typ": [322, 357, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "with_restart": [322, 376], "default_tidal_forc": 322, "shallow": [324, 338, 372, 373, 374, 375, 378, 380, 381, 382, 384], "25": [324, 326, 372, 374, 378, 380, 381, 382, 383], "exactsolut": [324, 326], "obtain": [324, 326, 338, 360], "normal_veloc": [324, 326, 334, 357], "assign": [324, 326, 373], "fall": [324, 326, 385], "accept": [324, 326], "5km": [325, 376, 379], "lagrangian": [325, 379], "manufacturedsolut": 326, "nondiverg": [327, 369, 377], "filamentanalysi": 327, "filament": [327, 381], "rotat": [328, 369, 372, 373, 374, 377, 378, 380, 381], "exercis": [329, 353, 372, 373, 374, 375, 381, 382, 383], "kpp_test": 329, "mixedlayerdepthsoutput": 329, "idealagetrac": [329, 383], "single_column_forc": [329, 383], "throughout": [329, 371, 379, 383], "idealag": 329, "enabel": 329, "formal": 330, "organ": [330, 332, 335, 356], "conceptu": [330, 337, 376], "broadli": [330, 331, 337], "realist": [330, 356, 376, 391], "greenland": [330, 356, 391], "2000m": [330, 385], "34": [330, 376, 385], "halfar": 330, "cism": 330, "dome_typ": 330, "put_origin_on_a_cel": 330, "hydrologi": 330, "hydro": [330, 391], "dome_viz": 330, "time_slic": 330, "save_imag": 330, "hide": [330, 357], "hide_fig": 330, "clutter": 330, "smoke_test": [330, 336], "smoketest": [330, 336], "restart_test": 330, "restarttest": 330, "add_dome_task": 330, "variable_resolut": [330, 334, 385], "talk": 330, "reduc": [330, 334, 376], "encompass": 331, "perspect": 331, "four": 331, "broader": 331, "univers": 331, "add_inertial_gravity_wave_task": 331, "add_manufactured_solution_task": 331, "add_single_column_task": 331, "alphabet": [331, 357], "landice_model": [331, 338], "diagram": 332, "blue": [332, 359, 385], "orang": 332, "laid": 332, "fig": 332, "organiz": 332, "concept": [332, 337, 357, 391], "somewher": 334, "multiprocess": [334, 337, 358], "aspir": 334, "emploi": 334, "unwant": 334, "outer": 334, "dome_varres_grid": 334, "signific": [334, 335, 336], "neglig": [334, 376], "culled_graph": [334, 357], "meshstep": 334, "getint": 334, "mesh_cpus_per_task": 334, "mesh_min_cpus_per_task": 334, "fit": [334, 358], "applic": [334, 337, 338, 384, 389], "launch": [334, 356], "write_netcdf": [334, 357], "convers": [334, 357], "greater": [334, 357], "graphinfofilenam": [334, 357], "culled_mesh": [334, 357], "use_dist": [334, 357, 371, 379], "gradient_width_dist": [334, 357, 371], "gradient_width_frac": [334, 357, 371], "bottom_temperatur": [334, 357, 371, 379], "surface_temperatur": [334, 357, 371, 379, 383], "temperature_differ": [334, 357, 371, 379], "coriolis_paramet": [334, 357, 371, 376, 378, 379, 380, 383], "x_cell": [334, 357], "y_cell": [334, 357], "ones_lik": [334, 357], "zeros_lik": [334, 357], "x_min": [334, 357], "min": [334, 357, 368, 371, 376, 379, 383], "x_max": [334, 357], "y_min": [334, 357], "y_max": [334, 357], "y_mid": [334, 357], "x_perturb_min": [334, 357], "x_perturb_max": [334, 357], "perturb_width": [334, 357, 371], "y_offset": [334, 357], "sin": [334, 357, 371, 372, 374, 375, 378, 379, 380, 381], "pi": [334, 357, 368, 371, 372, 373, 374, 375, 381], "temp_vert": [334, 357], "frac": [334, 357, 368, 371, 372, 374, 378, 381], "logical_and": [334, 357], "transpos": [334, 357], "3rd": [334, 357], "crest": [334, 357, 371], "expand_dim": [334, 357], "dim": [334, 357], "broadcast": [334, 357], "xvertex": [334, 357], "attr": [334, 357], "initial_temperatur": [334, 357], "initial_normal_veloc": [334, 357], "superclass": 334, "commandlin": 334, "harm": 334, "likewis": [334, 357], "arisen": 334, "problemat": 334, "add_depend": 334, "usual": [334, 336, 338, 357, 385], "mesh_path": 334, "mesh_step": 334, "with_ice_shelf_cav": 334, "initial_state_target": 334, "adjusted_init": 334, "forcing_data": 334, "init_mode_forcing_data": 334, "entha_analy_result": 334, "mat": 334, "enthalpy_benchmark": 334, "ourselv": 334, "firewal": 334, "bedmachineantarctica_v2_and_gebco_2022_0": 334, "05_degree_20220729": 334, "slate": 334, "icepresent_qu60km_polar": 334, "practic": [334, 337, 338], "straightforward": 334, "commonli": [334, 355], "notat": [334, 384, 389], "phc": [334, 368], "That": [334, 337, 355, 357, 385], "word": 334, "ff": 334, "quwisc240": [334, 337, 385], "90c": 334, "91c": 334, "92": [334, 368], "91": 334, "sowisc12to60": [334, 385], "performance_test": 334, "approach": [334, 337, 338, 354, 357, 368], "transfer": 334, "feasibl": 334, "overhead": 334, "philosophi": [335, 337, 357], "context": [335, 357], "namesak": 335, "256": [335, 360, 365], "quicker": 335, "exce": 335, "offer": 335, "benefit": [335, 356], "bug": 335, "coverag": 335, "exhaust": 335, "recent": [335, 369, 386], "merg": 335, "reach": 335, "steadi": [335, 375], "wet": 335, "fundament": 336, "incorpor": 336, "velo_solv": 336, "sia": [336, 338], "fo": 336, "runmodel": 336, "run_step": 336, "0200": 336, "00_00": [336, 351, 357], "recip": 336, "demonstr": [336, 357], "fairli": [336, 337, 338, 357, 376], "_cosine_bel": 336, "_with_viz": 336, "_setup_step": [336, 357], "_resolut": 336, "remove_step": 336, "analysis_depend": 336, "base_mesh_step": 336, "cos_bell_dir": 336, "_init_": 336, "init_step": 336, "_forward_": 336, "forward_step": 336, "with_viz_dir": 336, "_map_": 336, "viz_map": 336, "_viz_": 336, "rare": [336, 338], "480km": 336, "closer": 336, "imp_r": 336, "joinpath": 336, "initial_condit": 337, "dig": [337, 358], "background": [337, 372, 374, 379, 381, 382], "adher": [337, 357], "pep8": [337, 338], "bot": [337, 368], "violat": 337, "consid": 337, "editor": 337, "pycharm": [337, 338, 357], "spyder": 337, "linter": 337, "flake8": [337, 338], "discourag": [337, 355], "reformat": 337, "autopep8": 337, "undesir": 337, "lint": 337, "wildcard": 337, "vim": [337, 357], "plugin": 337, "id": [337, 338], "commit": [337, 338], "why": 337, "sound": 337, "subpackag": 337, "understand": [337, 358], "downstream": 337, "tutori": [337, 338], "clu": 337, "intro": 337, "docstr": [337, 356, 357], "strip": 337, "mpas_ocean": 337, "hidden": 337, "shortcut": [337, 385], "referenc": [337, 357], "mention": 337, "charact": 337, "unix": [337, 356], "distinct": 337, "mayb": [337, 357], "machine_config": 337, "endswith": 337, "splitext": 337, "exactli": [337, 338, 357, 368], "move": [337, 338, 357, 384, 389], "renam": 337, "visa": 337, "versa": 337, "comfort": [337, 357], "orient": [337, 375], "program": [337, 358], "led": 337, "felt": 337, "contribut": 337, "hesit": 337, "predecessor": [337, 355, 356], "clumsi": 337, "harder": 337, "outcom": 337, "augment": 337, "explain": 337, "hope": 337, "dens": 337, "learn": [337, 357], "curv": 337, "worth": [337, 357], "skill": 337, "endeavor": 337, "manipul": 337, "get_available_cores_and_nod": 337, "theoret": 337, "dozen": 337, "theori": 337, "biogeochemistri": 337, "ksh": 338, "mac": [338, 356], "csh": 338, "tcsh": 338, "temporarili": 338, "recogn": [338, 358, 385], "anyon": 338, "caus": [338, 360, 365, 368], "person": [338, 354], "base_path_to_install_or_update_conda": 338, "with_netlib_lapack": 338, "flavor": [338, 357], "troubl": [338, 357], "recognit": 338, "downsid": 338, "unneed": 338, "reinstal": 338, "caution": 338, "load_": 338, "encod": 338, "load_dev_polaris_": [338, 357], "env_nam": 338, "dev_polaris_": [338, 354], "update_jigsaw": 338, "workdir": [338, 385], "unexpect": [338, 355, 357], "occur": [338, 354, 368], "echo": 338, "proceed": 338, "notic": 338, "conda_env": [338, 385], "load_polaris_test_morpheus_gnu_openmpi": 338, "__version__": 338, "rememb": 338, "incorrect": 338, "unus": 338, "session": [338, 357], "With": 338, "pip": 338, "substanti": 338, "unsupport": 338, "env_onli": 338, "risk": [338, 357, 376], "mpas_make_target": [338, 385], "scientif": [338, 385], "_albani": 338, "instruct": [338, 357], "ctest": 338, "es3m": 338, "compli": 338, "memor": 338, "guidelin": 338, "complianc": 338, "checker": 338, "isort": 338, "flynt": 338, "mypi": 338, "77": 338, "e302": 338, "resolv": 338, "simpler": [338, 357], "new_branch_nam": 338, "disk": [338, 358, 360, 365], "respons": 338, "simplest": [338, 356], "your_new_branch": 338, "restart_filenam": 344, "post": 350, "src": 350, "registry_process": 350, "seaice_model": 350, "1m": [351, 388], "disc": [351, 388], "config_initial_ice_area": 351, "config_initial_ice_volum": 351, "config_atmospheric_forcing_typ": 351, "config_forcing_start_tim": 351, "config_forcing_cycle_start": 351, "config_forcing_cycle_dur": 351, "config_forcing_precipitation_unit": 351, "mm_per_sec": 351, "config_forcing_sst_typ": 351, "ncar": 351, "config_update_ocean_flux": 351, "config_include_pond_freshwater_feedback": 351, "standard_phys": 353, "standardphys": 353, "year": [353, 369, 388], "volum": 353, "snow": 353, "exact_restart": 353, "exactrestart": 353, "geo": 354, "cartopi": 354, "14": 354, "np110py27_4": 354, "calledprocesserror": 354, "deploy_tmp": 354, "vpn": 354, "site": 354, "shell": [354, 356], "honor": 354, "wide": [354, 376], "spawn": 354, "usernam": [354, 357, 360, 363, 365], "proxy_en": 354, "all_proxi": 354, "proxyout": 354, "8080": 354, "no_proxi": 354, "localhost": [354, 358, 364, 365, 385], "127": 354, "proxy_dis": 354, "unset": 354, "anytim": 354, "fatal": 354, "mpi_init": 354, "stack": 354, "mpir_init_thread": 354, "159": 354, "mpid_init": 354, "164": 354, "mpidi_ch3_init": 354, "95": 354, "mpid_nem_init": 354, "314": 354, "mpid_nem_tcp_init": 354, "173": 354, "mpid_nem_tcp_get_business_card": 354, "395": 354, "getsockinterfaceaddr": 354, "369": 354, "pn2034311": 354, "errno": 354, "host": [354, 358, 364, 385], "focus": 355, "autom": 356, "exascal": 356, "kept": 356, "expert": 356, "uncoupl": 356, "extens": [356, 358], "primarili": 356, "darren": 356, "engwirda": 356, "quick": [356, 357, 369, 376, 386], "queue": 356, "beginn": [356, 357], "advanc": [356, 357], "mpas_to_yaml": 356, "troubleshoot": 356, "proxi": 356, "lanl": [356, 358, 360], "gethostbynam": 356, "glossari": 357, "stick": 357, "miniconda": 357, "3_chrysalis_intel_openmpi": 357, "strict": 357, "push": 357, "lowercas": 357, "hyphen": 357, "settl": 357, "desktop": 357, "realli": [357, 365], "nice": [357, 365], "supercomput": 357, "yet_another_channel": 357, "testgroup": 357, "vi": 357, "polaris_head": 357, "yetanotherchannel": 357, "instanc": 357, "highli": 357, "camelcas": 357, "capit": 357, "letter": 357, "cap": 357, "awkward": 357, "encourag": 357, "enclos": 357, "briefli": 357, "baroclinicchannel": 357, "globalconverg": 357, "add_test_group": 357, "interest": 357, "test_group": 357, "add_test_cas": 357, "anyth": 357, "probabl": [357, 364, 375], "suppos": 357, "easili": 357, "tide": 357, "sai": [357, 364], "res_str": 357, "1000": [357, 358, 368, 371, 375, 378, 380], "still": [357, 369, 384, 385, 389], "ti": 357, "loop": 357, "1km": [357, 371, 385], "4km": [357, 371, 385], "coarsest": [357, 358], "especi": 357, "promot": 357, "pattern": 357, "familiar": 357, "seen": 357, "brows": 357, "row": 357, "disadvantag": 357, "foremost": 357, "magic": 357, "effect": [357, 384], "pain": 357, "160": [357, 371], "500": [357, 358, 368, 371, 379], "path_to_mpas_ocean": 357, "path_to_working_dir": 357, "cat": 357, "slurm_jobid": 357, "_run_test": 357, "gpf": 357, "fs1": 357, "cbegeman": 357, "grid_typ": [357, 358, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "vert_level": [357, 358, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "partial_cell_typ": [357, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "min_pc_fract": [357, 368, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384], "everywher": 357, "depress": [357, 368, 376], "mostli": 357, "logic": [357, 371, 379], "northern": [357, 371, 376, 379], "half": [357, 371, 376, 379], "southern": [357, 371], "halv": [357, 371], "gradient": [357, 371, 378, 379, 380, 383], "500km": [357, 371, 379], "40e3": [357, 371], "35": [357, 371, 372, 373, 374, 375, 379, 381, 382, 383, 384, 385, 389], "2e": [357, 371], "light": 357, "e3sm_compon": 357, "interact": [357, 360, 363, 364, 365, 385], "interrupt": 357, "pty": 357, "navig": 357, "newli": 357, "bunch": 357, "didn": 357, "mistak": 357, "finger": 357, "initial_normalveloc": 357, "initial_salin": 357, "obvious": 357, "stress": [357, 383], "landicemodelstep": 357, "huge": 357, "cp": 357, "05": [357, 375], "hmix_del2": 357, "bottom_drag": 357, "cvmix": 357, "0002": 357, "filename_interv": 357, "0100": 357, "input_interv": 357, "initial_onli": 357, "basicmesh": 357, "dayssincestart": 357, "surfacespe": 357, "lowersurfac": 357, "uppersurfac": 357, "ureconstructx": 357, "ureconstructi": 357, "load_dataset": 357, "final_temperatur": 357, "ab": 357, "proc": 357, "4proc": [357, 371], "8proc": [357, 371], "markdown": 357, "developers_guid": 357, "users_guid": 357, "daunt": 357, "flesh": 357, "bonu": 357, "improv": 357, "introduc": 357, "techniqu": 357, "aim": 357, "constrain_resourc": 357, "becam": 357, "mainten": 357, "counter": 357, "thought": 357, "yet_another_channel_test_cas": 357, "yetanotherchanneltestcas": 357, "choic": [357, 372, 373, 374, 375, 381, 382], "spuriou": [357, 371], "dissip": [357, 371], "pop": [357, 371], "mom": [357, 371], "mitgcm": [357, 371], "higher": 357, "heavi": 357, "analogi": 357, "tet": 357, "bear": 357, "late": 357, "_add_step": 357, "startswith": 357, "enumer": 357, "rpe_": 357, "_nu_": 357, "privat": 357, "break": [357, 371], "unusu": 357, "rpe_1_nu_1": [357, 371], "rpe_2_nu_5": [357, 371], "rpe_3_nu_10": 357, "rpe_4_nu_20": 357, "rpe_5_nu_200": 357, "20_00": 357, "0000": 357, "dayssincestartofsim": 357, "relativevort": 357, "pyplot": 357, "plt": 357, "output_": 357, "sections_yet_another_channel_": 357, "rpe_t": 357, "initial_state_file_nam": 357, "_plot": 357, "dirti": 357, "adopt": 357, "lesson": 357, "tricki": 357, "commun": 357, "nuanc": 357, "fake": 357, "wasn": 357, "fold": 357, "proper": 357, "third": 357, "previous": 357, "multinod": [358, 385], "explanatori": 358, "my_machin": 358, "extend": 358, "gitconfig": 358, "enter": 358, "author": 358, "email": 358, "pull_request": 358, "28": [358, 368, 372], "address": [358, 372, 381], "metadata": 358, "customize_config_pars": 358, "server_base_url": 358, "inej": 358, "check_siz": 358, "ssl": 358, "certif": 358, "core_path": 358, "partition_execut": 358, "dask": 358, "netcdf4": 358, "netcdf4_class": 358, "netcdf3_64bit": 358, "netcdf3_class": 358, "engin": 358, "mesh_databas": 358, "ocean_database_root": 358, "landice_database_root": 358, "mesh_cor": 358, "mesh_min_cor": 358, "mesh_max_memori": 358, "mesh_max_disk": 358, "init_cor": 358, "init_min_cor": 358, "init_max_memori": 358, "init_max_disk": 358, "init_thread": 358, "forward_cor": 358, "forward_min_cor": 358, "forward_thread": 358, "forward_max_memori": 358, "forward_max_disk": 358, "add_metadata": 358, "ec": 358, "wc": 358, "mesh_descript": 358, "autodetect": 358, "bathy_descript": 358, "gebco": 358, "2022": 358, "bedmachin": 358, "antarctica": 358, "init_descript": 358, "e3sm_vers": 358, "increment": 358, "mesh_revis": 358, "finest": 358, "min_r": 358, "max_r": 358, "max_depth": 358, "creation_d": 358, "peopl": 358, "contact": 358, "temperaturemax": 358, "temperature_max": 358, "33": [358, 379, 385], "enable_ocean_initial_condit": 358, "enable_ocean_graph_partit": 358, "enable_seaice_initial_condit": 358, "enable_scrip": 358, "onlin": 358, "member": 358, "offlin": 358, "enable_diagnostics_fil": 358, "coarser": [358, 368, 372, 373, 374, 375, 381, 382], "finer": [358, 368], "comparisonlatresolut": 358, "comparisonlonresolut": 358, "antarct": 358, "polar": [358, 359, 361, 368], "stereograph": 358, "comparisonantarcticstereowidth": 358, "6000": [358, 368], "comparisonantarcticstereoresolut": 358, "arctic": [358, 388], "comparisonarcticstereowidth": 358, "comparisonarcticstereoresolut": 358, "tanh_dz": 358, "16": [358, 383, 385], "3000": [358, 375], "max_layer_thick": [358, 368], "retain": 358, "ecosystem": 359, "gain": 359, "confluenc": 359, "public_html": [359, 361, 364], "soft": [359, 361, 364, 385], "mpi_intel": [359, 361, 362, 364], "36": [359, 364, 383, 385], "condo": [359, 385], "acm": [359, 385], "medium": 359, "acme_high": 359, "environo": [359, 360, 361, 362, 363, 365], "dst": 360, "calendar": 360, "network": 360, "introduct": 360, "platform": 360, "batch": [360, 363], "wtrw": 360, "ch": 360, "fe": 360, "lustr": [360, 363], "scratch4": 360, "scratch5": 360, "sacctmgr": 360, "assoc": 360, "cluster": 360, "45": 360, "sshare": 360, "sreport": 360, "accountutilizationbyus": 360, "2019": 360, "prioriti": 360, "yellow": 360, "chkhome": 360, "petabyt": 360, "df": 360, "bp": 360, "archiv": [360, 365], "hpss": [360, 365], "front": [360, 376], "tn": 360, "storag": 360, "project_nam": 360, "salloc": [360, 363, 364, 365], "account_nam": 360, "hyperthread": [360, 363, 365], "hang": [360, 365], "threads_per_cor": [360, 363, 365], "compyf": 362, "app": [362, 385], "pmi2": 362, "40": [362, 375, 376], "olcf": 363, "ornl": 363, "cli115": 363, "poari": 363, "orion": 363, "world": 363, "software_compil": 363, "gnugpu": 363, "mpi_gnugpu": 363, "mpi_crayclang": 363, "crayclanggpu": 363, "mpi_crayclanggpu": 363, "cray_compil": [363, 365], "submit": 364, "workload": 364, "squeue": 364, "my_usernam": [364, 365], "scancel": 364, "jobid": 364, "cancel": 364, "emtpi": 364, "three": [364, 372, 374, 375, 376, 381, 382, 391], "mpi_mpich": [364, 385], "mpi_openmpi": [364, 385], "nompi": [364, 385], "p1": 365, "nersc": 365, "iri": 365, "filesystem": 365, "myquota": 365, "prjquota": 365, "projectid": 365, "m1795": 365, "hsi": 365, "htar": 365, "zstash": 365, "cf": [365, 385], "cdir": [365, 385], "premium": 365, "8844": 365, "monik": 365, "browser": 365, "grab": 365, "logon": 365, "kernel": 365, "myenv": 365, "ipykernel": 365, "kernelspec": 365, "u1": 365, "interpret": 365, "argv": 365, "ipykernel_launch": 365, "connection_fil": 365, "display_nam": 365, "languag": 365, "equilibrium": 366, "tasksthat": 366, "influenc": 366, "phase": [366, 376], "mask_vari": 366, "adjustsshmask": 366, "adjust_vari": [366, 376], "2500": 368, "transit": [368, 372, 373, 374, 381, 382], "transition_level": 368, "deepest": 368, "stewart": 368, "2017": 368, "delta": [368, 371, 375, 383], "z_2": 368, "z_1": 368, "mathrm": 368, "tanh": 368, "rightarrow": 368, "z_k": 368, "z_0": 368, "z_": [368, 383], "k": 368, "finder": 368, "n_z": 368, "h_": 368, "hyperbol": 368, "tangent": 368, "k_0": 368, "v3": 368, "5500": 368, "250": [368, 379], "scienc": 368, "hydrograph": 368, "climatologi": 368, "renorm": 368, "arrm10to60": 368, "80": 368, "146": 368, "5550": 368, "51": 368, "221": 368, "ziso": [368, 391], "63": 368, "collaps": 368, "adcroft": 368, "campin": 368, "2004": 368, "absenc": 368, "press": 368, "batymetri": 368, "stair": 368, "month": 369, "websit": [369, 386], "release_6": 369, "ilicak": [371, 379], "2012": [371, 372, 374, 379, 381, 382], "variat": [371, 375], "distinguish": 371, "zonal": [371, 375, 379, 383], "meridion": [371, 379, 383], "psu": [371, 376, 379, 383], "cooler": 371, "north": 371, "sinusoid": [371, 379], "perturb": [371, 373, 379, 380], "t_0": 371, "t_b": 371, "t_": 371, "z_b": 371, "y_": 371, "l_x": 371, "warmer": 371, "ge": [371, 373], "gradient_width_fract": 371, "l_y": 371, "le": [371, 383], "stationari": [371, 383], "literatur": 371, "mk": 371, "celsiu": [371, 376], "lauritzen": [372, 374, 381, 382], "nonlinear": [372, 375, 378, 380], "mixing_analysi": 372, "icosohydr": [372, 373, 374, 381, 382], "nearest": [372, 373, 374, 381, 382], "insensit": [372, 373, 374, 375, 381, 382, 383], "300": [372, 373, 374, 381, 382, 384], "debugtrac": [372, 374, 381, 382], "tracer2": [372, 374, 381, 382], "tracer3": [372, 374, 381, 382], "nonlinearli": 372, "tau": [372, 373, 374, 381], "lambda": [372, 374, 375, 381], "theta": [372, 374, 375, 381], "co": [372, 373, 374, 375, 378, 380, 381], "equat": [372, 373, 374, 375, 378, 380, 381, 382, 383], "vel_pd": [372, 373, 374, 381, 382], "rung": [372, 373, 374, 375, 381, 382], "kutta": [372, 373, 374, 375, 381, 382], "4th": [372, 373, 374, 375, 381, 382], "spherical_convergence_forward": [372, 374, 381, 382], "globe": [372, 373, 374, 381, 382], "correlated_tracer_2d": 372, "288": [372, 374, 381, 382], "cosine_bells_radiu": [372, 374, 381, 382], "cosine_bells_background": [372, 374, 381, 382], "amplitud": [372, 374, 376, 378, 379, 380, 381, 382], "cosine_bells_amplitud": [372, 374, 381, 382], "slot": [372, 374, 381, 382], "cylind": [372, 374, 381, 382], "slotted_cylinders_radiu": [372, 374, 381, 382], "slotted_cylinders_background": [372, 374, 381, 382], "slotted_cylinders_amplitud": [372, 374, 381, 382], "sphere_transport_viz_trac": [372, 374, 381, 382], "sphere_transport_viz_tracer_diff": [372, 374, 381, 382], "sphere_transport_viz_h": [372, 374, 381, 382], "99": [372, 374, 381, 382], "101": [372, 374, 381, 382], "sphere_transport_viz_h_diff": [372, 374, 381, 382], "vel_amp": [372, 374, 381], "convergence_thresh_tracer1": [372, 374, 381, 382], "convergence_thresh_tracer2": [372, 374, 381, 382], "66": 372, "convergence_thresh_tracer3": [372, 374, 381, 382], "mixing_evaluation_tim": 372, "sphere_transport_viz": [372, 374, 381, 382], "roughli": [372, 373, 374, 381, 382], "studi": [372, 373, 374, 375, 381, 382], "williamson": [373, 375], "1992": [373, 375], "sec": 373, "3a": 373, "skamarock": 373, "gassmann": 373, "bodi": 373, "psi": 373, "proportion": [373, 375], "slow": 373, "passiv": 373, "psi_0": 373, "debug_tracers_1": 373, "equatori": 373, "u_0": [373, 374, 375, 381], "tendenc": [373, 380], "rad": 373, "lat_cent": 373, "lon_cent": 373, "14159265": 373, "2123666": 373, "6667": 373, "hill": 373, "psi0": 373, "576": 373, "circul": 373, "48": 374, "86": 374, "chosen": [375, 383], "h_0": 375, "textrm": 375, "sensit": 375, "l_1": 375, "l_2": 375, "l_": 375, "examin": [375, 383], "vel_period": 375, "gh_0": 375, "94e4": 375, "william": 375, "paper": [375, 385], "arbitrari": 375, "evolut": [375, 379], "unexpectedli": 375, "convergence_thresh_h": 375, "convergence_thresh_normalveloc": 375, "necessit": 375, "geostropnic_viz": 375, "geostrophic_viz_h": 375, "deep": 375, "geostrophic_viz_vel": 375, "geostrophic_viz_diff_h": 375, "geostrophic_viz_diff_vel": 375, "dimension": 376, "strenuou": 376, "transient": 376, "land_ice_pressur": 376, "freshwat": 376, "heat": [376, 383], "44": 376, "piecewis": 376, "y1": 376, "y2": 376, "y3": 376, "dictat": [376, 383], "inflect": 376, "y1_water_column_thick": 376, "y2_water_column_thick": 376, "1040": 376, "rise": 376, "abruptli": 376, "occupi": 376, "75": 376, "melt": 376, "geometri": 376, "parameter": 376, "surface_salin": [376, 383], "bottom_salin": 376, "190": 376, "y0_land_ice_height_above_float": 376, "gl": 376, "1050": 376, "ice_shelf_2d_default": 376, "forward_run_dur": 376, "ten": 376, "ice_shelf_2d_default_tidal_forc": 376, "_tidal_forc": 376, "propag": [378, 379, 380], "doubli": [378, 380], "assess": [378, 380], "accuraci": [378, 380], "discret": [378, 380], "bishnu": [378, 380], "friction": [378, 380], "neglect": [378, 380], "analyt": [378, 391], "k_x": [378, 380], "k_y": [378, 380], "availi": [378, 380], "coriloi": 378, "1e": 378, "ssh_amplitud": [378, 380], "wavelength": [378, 380], "n_wavelengths_x": [378, 380], "n_wavelengths_i": [378, 380], "induc": 379, "doi": 379, "org": 379, "1016": 379, "j": [379, 385], "ocemod": 379, "2011": 379, "003": 379, "stabl": 379, "stratif": 379, "20km": 379, "250km": 379, "inher": [379, 384], "background_salin": 379, "amplitude_width_dist": 379, "amplitude_width_frac": 379, "50e3": 379, "del2": 379, "internal_wave_rp": 379, "plot_tim": 379, "min_temp": 379, "max_temp": 379, "embed": 380, "eta_0": 380, "preserv": [381, 385], "rough": 381, "revers": 381, "filament_analysi": 381, "thhe": 381, "filament_evaluation_tim": 381, "offset": 382, "vector": 382, "rotation_vector": 382, "span": 383, "arbitrarili": 383, "virtu": 383, "400": 383, "phi": 383, "phi_0": 383, "dz": 383, "ml": 383, "mld": 383, "surface_x": 383, "x_gradient_mixed_lay": 383, "mixed_layer_depth_x": 383, "x_difference_across_mixed_lay": 383, "x_gradient_interior": 383, "4x4": 383, "960": 383, "degc": 383, "temperature_gradient_mixed_lay": 383, "temperature_difference_across_mixed_lay": 383, "temperature_gradient_interior": 383, "mixed_layer_depth_temperatur": 383, "salinity_gradient_mixed_lay": 383, "salinity_difference_across_mixed_lay": 383, "salinity_gradient_interior": 383, "mixed_layer_depth_salin": 383, "kpp": 383, "restor": 383, "piston": 383, "toward": 383, "temperature_surface_restoring_valu": 383, "temperature_piston_veloc": 383, "salinity_surface_restoring_valu": 383, "salinity_piston_veloc": 383, "temperature_interior_restoring_r": 383, "salinity_interior_restoring_r": 383, "net": 383, "latent": 383, "bulk": 383, "latent_heat_flux": 383, "sensibl": 383, "sensible_heat_flux": 383, "solar": 383, "shortwav": 383, "shortwave_heat_flux": 383, "evapor": 383, "evaporation_flux": 383, "5e": 383, "rain": 383, "rain_flux": 383, "wind_stress_zon": 383, "wind_stress_meridion": 383, "welcom": [384, 389], "icosohedr": [384, 389], "pertain": [384, 389], "warrant": 384, "investig": 384, "load_latest_polari": 385, "shared_clim": 385, "minu": 385, "load_latest_polaris_gnu_openmpi": 385, "create_polaris_load_script": 385, "load_polaris_1": 385, "0_mpich": 385, "exclud": 385, "wiki": 385, "circular_shelf": 385, "sia_smoke_test": 385, "sia_decomposition_test": 385, "sia_restart_test": 385, "fo_smoke_test": 385, "fo_decomposition_test": 385, "fo_restart_test": 385, "37": 385, "17": 385, "210131_test_new_branch": 385, "my_config": 385, "smaller": 385, "previous_workdir": 385, "recompil": 385, "safer": 385, "test_subdir": 385, "clock": 385, "exclus": 385, "job_nam": 385, "fo_integr": 385, "sia_integr": 385, "cosine_bell_cached_init": [385, 390], "ec30to60": 385, "ecwisc30to60": 385, "qu240_for_e3sm": 385, "quwisc240_for_e3sm": 385, "wc14": 385, "suitenam": 385, "seaice_standalone_framework": 386, "71": 388, "35n": 388, "156": 388, "5w": 388, "atmospher": 388, "timeseri": 388, "prohibit": 390, "speed": 390, "radial": 391}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 2, 1, "", "symlink"], [61, 2, 1, "", "update_permissions"]], "polaris.job": [[62, 2, 1, "", "clean_up_whitespace"], [63, 2, 1, "", "get_slurm_options"], [64, 2, 1, "", "write_job_script"]], "polaris.list": [[65, 2, 1, "", "list_cases"], [66, 2, 1, "", "list_machines"], [67, 2, 1, "", "list_suites"]], "polaris.logging": [[68, 2, 1, "", "log_method_call"]], "polaris.mesh": [[69, 0, 1, "", "IcosahedralMeshStep"], [76, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[69, 1, 1, "", "__init__"], [70, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [71, 1, 1, "", "get_cell_width"], [72, 1, 1, "", "get_subdivisions"], [73, 1, 1, "", "make_jigsaw_mesh"], [74, 1, 1, "", "run"], [75, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[76, 1, 1, "", "__init__"], [77, 1, 1, "", "build_cell_width_lat_lon"], [78, 1, 1, "", "make_jigsaw_mesh"], [79, 1, 1, "", "run"], [80, 1, 1, "", "setup"]], "polaris.mesh.planar": [[81, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[82, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[82, 1, 1, "", "__init__"], [83, 1, 1, "", "run"], [84, 1, 1, "", "save_and_plot_cell_width"], [85, 1, 1, "", "setup"]], "polaris.model_step": [[86, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[87, 2, 1, "", "area_for_field"], [88, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[89, 2, 1, "", "ingest"], [90, 2, 1, "", "parse_replacements"], [91, 2, 1, "", "replace"], [92, 2, 1, "", "write"]], "polaris.ocean": [[143, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[143, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[144, 0, 1, "", "ConvergenceAnalysis"], [152, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[144, 1, 1, "", "__init__"], [145, 1, 1, "", "compute_error"], [146, 1, 1, "", "convergence_parameters"], [147, 1, 1, "", "exact_solution"], [148, 1, 1, "", "get_output_field"], [149, 1, 1, "", "plot_convergence"], [150, 1, 1, "", "run"], [151, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "compute_cell_count"], [154, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[155, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "compute_cell_count"]], "polaris.ocean.ice_shelf": [[157, 0, 1, "", "IceShelfTask"], [159, 0, 1, "", "SshAdjustment"], [161, 0, 1, "", "SshForward"]], "polaris.ocean.ice_shelf.IceShelfTask": [[157, 1, 1, "", "__init__"], [158, 1, 1, "", "setup_ssh_adjustment_steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "run"]], "polaris.ocean.ice_shelf.SshForward": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "compute_cell_count"], [163, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.mesh.spherical": [[164, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[165, 0, 1, "", "OceanModelStep"], [170, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "constrain_resources"], [168, 1, 1, "", "map_yaml_to_namelist"], [169, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[171, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[172, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[173, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[173, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[174, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[174, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[175, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "compute_cell_count"], [177, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[178, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "run"], [180, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[181, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[181, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[182, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[184, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[186, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "run"], [188, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[189, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[189, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[190, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[192, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[194, 0, 1, "", "CosineBell"], [196, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[197, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[199, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "compute_cell_count"], [201, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[202, 0, 1, "", "Init"], [204, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[205, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[207, 0, 1, "", "Geostrophic"], [209, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[210, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "exact_solution"], [212, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[213, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[213, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[214, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[216, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[216, 1, 1, "", "__init__"], [217, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d": [[218, 2, 1, "", "add_ice_shelf_2d_tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default": [[219, 0, 1, "", "Default"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[219, 1, 1, "", "__init__"]], "polaris.ocean.tasks.ice_shelf_2d.forward": [[220, 0, 1, "", "Forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[220, 1, 1, "", "__init__"], [221, 1, 1, "", "compute_cell_count"], [222, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.ice_shelf_2d.init": [[223, 0, 1, "", "Init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[223, 1, 1, "", "__init__"], [224, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.validate": [[225, 0, 1, "", "Validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[225, 1, 1, "", "__init__"], [226, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.viz": [[227, 0, 1, "", "Viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[227, 1, 1, "", "__init__"], [228, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[229, 0, 1, "", "InertialGravityWave"], [230, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[229, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[231, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[231, 1, 1, "", "__init__"], [232, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[233, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "normal_velocity"], [235, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[236, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[238, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[238, 1, 1, "", "__init__"], [239, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[240, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[240, 1, 1, "", "__init__"], [241, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave": [[242, 2, 1, "", "add_internal_wave_tasks"]], "polaris.ocean.tasks.internal_wave.default": [[243, 0, 1, "", "Default"]], "polaris.ocean.tasks.internal_wave.default.Default": [[243, 1, 1, "", "__init__"]], "polaris.ocean.tasks.internal_wave.forward": [[244, 0, 1, "", "Forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[244, 1, 1, "", "__init__"], [245, 1, 1, "", "compute_cell_count"], [246, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.internal_wave.init": [[247, 0, 1, "", "Init"]], "polaris.ocean.tasks.internal_wave.init.Init": [[247, 1, 1, "", "__init__"], [248, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.rpe": [[249, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[249, 1, 1, "", "__init__"], [250, 1, 1, "", "configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis": [[251, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[251, 1, 1, "", "__init__"], [252, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.viz": [[253, 0, 1, "", "Viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[253, 1, 1, "", "__init__"], [254, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[255, 0, 1, "", "ManufacturedSolution"], [256, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[255, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[257, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[257, 1, 1, "", "__init__"], [258, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[259, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[259, 1, 1, "", "__init__"], [260, 1, 1, "", "normal_velocity"], [261, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[262, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[262, 1, 1, "", "__init__"], [263, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[264, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[264, 1, 1, "", "__init__"], [265, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[266, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[266, 1, 1, "", "__init__"], [267, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[268, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[269, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[269, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[270, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[270, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[271, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[271, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[272, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[272, 1, 1, "", "__init__"], [273, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[274, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[274, 1, 1, "", "__init__"], [275, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[276, 0, 1, "", "SphereTransport"], [278, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[279, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[279, 1, 1, "", "__init__"], [280, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[281, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[281, 1, 1, "", "__init__"], [282, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[283, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[283, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[284, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[284, 1, 1, "", "__init__"], [285, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[286, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[286, 1, 1, "", "__init__"], [287, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[288, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[288, 1, 1, "", "__init__"], [289, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[290, 2, 1, "", "generate_1d_grid"], [291, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[292, 2, 1, "", "init_vertical_coord"], [297, 2, 1, "", "update_layer_thickness"]], "polaris.ocean.vertical.partial_cells": [[293, 2, 1, "", "alter_bottom_depth"], [294, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.sigma": [[295, 2, 1, "", "init_sigma_vertical_coord"], [296, 2, 1, "", "update_sigma_layer_thickness"]], "polaris.ocean.vertical.zlevel": [[298, 2, 1, "", "compute_min_max_level_cell"], [299, 2, 1, "", "compute_z_level_layer_thickness"], [300, 2, 1, "", "compute_z_level_resting_thickness"], [301, 2, 1, "", "init_z_level_vertical_coord"], [302, 2, 1, "", "update_z_level_layer_thickness"]], "polaris.ocean.vertical.zstar": [[303, 2, 1, "", "init_z_star_vertical_coord"], [304, 2, 1, "", "update_z_star_layer_thickness"]], "polaris.ocean.viz": [[305, 2, 1, "", "compute_transect"], [306, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[307, 2, 1, "", "find_planar_transect_cells_and_weights"], [308, 2, 1, "", "find_spherical_transect_cells_and_weights"], [309, 2, 1, "", "make_triangle_tree"], [310, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[311, 2, 1, "", "find_transect_levels_and_weights"], [312, 2, 1, "", "interp_mpas_to_transect_cells"], [313, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[93, 2, 1, "", "get_available_parallel_resources"], [94, 2, 1, "", "get_parallel_command"], [95, 2, 1, "", "run_command"], [96, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[97, 2, 1, "", "write"]], "polaris.remap": [[98, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[98, 1, 1, "", "__init__"], [99, 1, 1, "", "dst_from_lon_lat"], [100, 1, 1, "", "dst_from_mpas"], [101, 1, 1, "", "dst_from_points"], [102, 1, 1, "", "dst_from_proj"], [103, 1, 1, "", "dst_global_lon_lat"], [104, 1, 1, "", "get_remapper"], [105, 1, 1, "", "runtime_setup"], [106, 1, 1, "", "src_from_lon_lat"], [107, 1, 1, "", "src_from_mpas"], [108, 1, 1, "", "src_from_proj"]], "polaris.run": [[109, 2, 1, "", "complete_step_run"], [110, 2, 1, "", "load_dependencies"], [113, 2, 1, "", "setup_config"], [114, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[111, 2, 1, "", "run_single_step"], [112, 2, 1, "", "run_tasks"]], "polaris.seaice": [[341, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[341, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[342, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[343, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[343, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[344, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[344, 1, 1, "", "__init__"], [345, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[346, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[346, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[347, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[347, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[348, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[348, 1, 1, "", "__init__"], [349, 1, 1, "", "run"]], "polaris.setup": [[115, 2, 1, "", "setup_task"], [116, 2, 1, "", "setup_tasks"]], "polaris.streams": [[117, 2, 1, "", "read"], [118, 2, 1, "", "update_defaults"], [119, 2, 1, "", "update_tree"], [120, 2, 1, "", "write"]], "polaris.suite": [[121, 2, 1, "", "setup_suite"]], "polaris.validate": [[122, 2, 1, "", "compare_variables"]], "polaris.viz": [[123, 2, 1, "", "plot_global_lat_lon_field"], [124, 2, 1, "", "plot_global_mpas_field"], [125, 2, 1, "", "plot_horiz_field"], [126, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[127, 0, 1, "", "PolarisYaml"], [131, 2, 1, "", "main_mpas_to_yaml"], [132, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [133, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "read"], [129, 1, 1, "", "update"], [130, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 357], "share": [1, 6, 9, 337, 357], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 141, 334, 357, 366, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 389], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 74, 79, 83, 109, 110, 111, 112, 113, 114, 142, 150, 160, 179, 187, 191, 193, 203, 206, 215, 217, 224, 226, 228, 239, 241, 248, 252, 254, 265, 267, 273, 275, 282, 285, 287, 289, 334, 338, 345, 349, 359, 360, 361, 362, 363, 365, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389], "onc": 1, "befor": 1, "depend": [1, 6, 334], "output": [1, 334, 357], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 141, 142, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 323, 330, 333, 336, 337, 339, 342, 343, 344, 345, 346, 347, 348, 349, 352, 357, 377, 379, 384, 385, 387, 389, 391], "work": 1, "directori": [1, 332], "structur": [1, 332], "i": [1, 385], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 338, 356, 358, 385], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 142, 334, 338, 364], "other": [1, 139, 334, 357, 364, 385], "implement": [1, 2], "set": [1, 142, 338, 385], "up": [1, 338, 385], "test": [1, 2, 6, 141, 142, 357, 358, 388], "And": 1, "valid": [1, 2, 3, 18, 122, 190, 191, 225, 226, 317, 322, 325, 344, 345, 357, 385], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 142, 338, 357, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "same": 2, "api": 3, "refer": [3, 141, 142], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 142, 314, 331, 337, 338, 350, 369, 385, 386], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 334, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 359, 360, 361, 362, 363, 365, 385], "framework": [3, 10, 141, 142, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 337, 340, 353, 367], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 65, 66, 67], "setup": [3, 5, 8, 36, 47, 58, 75, 80, 85, 115, 116, 151, 169, 180, 188, 334], "suit": [3, 5, 8, 121, 335, 370, 385, 390], "cach": [3, 5, 8, 55, 334], "mpas_to_yaml": [3, 5], "base": [3, 141], "class": [3, 337], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 139, 142, 331, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "io": [3, 11, 59, 60, 61], "job": [3, 62, 63, 64, 364, 385], "log": [3, 12, 68], "mesh": [3, 13, 14, 19, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 141, 142, 164, 357, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "model_step": [3, 86], "mpa": [3, 6, 15, 19, 87, 88, 142, 316, 351], "namelist": [3, 14, 89, 90, 91, 92, 142], "parallel": [3, 93, 94, 95, 96], "proven": [3, 16, 97], "remap": [3, 17, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "stream": [3, 14, 117, 118, 119, 120, 142, 357], "viz": [3, 123, 124, 125, 126, 192, 193, 205, 206, 216, 217, 227, 228, 240, 241, 253, 254, 266, 267, 274, 275, 288, 289, 305, 306, 307, 308, 309, 310, 311, 312, 313, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 348, 349, 353, 357], "yaml": [3, 14, 127, 128, 129, 130, 131, 132, 133, 142], "build": [4, 139, 338, 385], "serial": [5, 8, 111, 112], "deploi": 6, "new": [6, 139, 357], "spack": [6, 139, 338, 385], "environ": [6, 139, 338, 354, 385], "where": 6, "we": 6, "updat": [6, 14, 129, 338], "mach": 6, "conda": [6, 338, 354, 364, 385], "identifi": 6, "e3sm": [6, 14, 142, 338, 385], "machin": [6, 139, 338, 364, 385], "describ": [6, 139], "modul": [6, 8, 337, 338], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 338, 357], "remot": [6, 365], "branch": 6, "petsc": [6, 338], "netlib": [6, 338], "lapack": [6, 338], "albani": [6, 338], "troubleshoot": [6, 338, 354], "ocean": [6, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 369], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 139, 142, 331, 334, 357, 358], "comment": 9, "symlink": [11, 60, 334], "download": [11, 59, 334], "permiss": 11, "spheric": [13, 19, 82, 83, 84, 85, 141, 142, 155, 156, 164], "planar": [13, 19, 81], "uniform": [13, 142, 368], "gener": 13, "model": [14, 141, 142, 165, 166, 167, 168, 169, 170, 315, 351, 357, 385], "an": [14, 142, 357], "ad": [14, 139, 334, 357], "dynam": [14, 357], "input": [14, 334], "partit": [14, 32], "pio": 14, "make": [14, 357], "graph": 14, "area": 15, "time": [15, 142, 357, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 389], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 141, 142, 357, 388], "common": 19, "matplotlib": 19, "style": [19, 337, 338], "horizont": [19, 357], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 357], "grid": [19, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 154, 163, 177, 183, 201, 222, 246], "map_yaml_to_namelist": [31, 168], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 105, 334], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 167, 334], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 185, 195, 208, 250, 277, 336, 354], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "update_permiss": 61, "clean_up_whitespac": 62, "get_slurm_opt": 63, "write_job_script": 64, "list_cas": 65, "list_machin": 66, "list_suit": 67, "log_method_cal": 68, "icosahedralmeshstep": [69, 70, 71, 72, 73, 74, 75], "build_subdivisions_cell_width_lat_lon": 70, "get_cell_width": 71, "get_subdivis": 72, "make_jigsaw_mesh": [73, 78], "quasiuniformsphericalmeshstep": [76, 77, 78, 79, 80], "build_cell_width_lat_lon": 77, "compute_planar_hex_nx_ni": 81, "sphericalbasestep": [82, 83, 84, 85], "save_and_plot_cell_width": 84, "make_graph_fil": 86, "area_for_field": 87, "time_index_from_xtim": 88, "ingest": 89, "parse_replac": 90, "replac": 91, "write": [92, 97, 120, 130], "get_available_parallel_resourc": 93, "get_parallel_command": 94, "run_command": 95, "set_cores_per_nod": 96, "mappingfilestep": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "dst_from_lon_lat": 99, "dst_from_mpa": 100, "dst_from_point": 101, "dst_from_proj": 102, "dst_global_lon_lat": 103, "get_remapp": 104, "src_from_lon_lat": 106, "src_from_mpa": 107, "src_from_proj": 108, "complete_step_run": 109, "load_depend": 110, "run_single_step": 111, "run_task": 112, "setup_config": 113, "unpickle_suit": 114, "setup_task": [115, 116], "read": [117, 128], "update_default": 118, "update_tre": 119, "setup_suit": 121, "compare_vari": 122, "plot_global_lat_lon_field": 123, "plot_global_mpas_field": 124, "plot_horiz_field": 125, "use_mplstyl": 126, "polarisyaml": [127, 128, 129, 130], "main_mpas_to_yaml": 131, "mpas_namelist_and_streams_to_yaml": 132, "yaml_to_mpas_stream": 133, "anvil": [134, 359], "intel": [134, 136, 137, 140], "gnu": [134, 135, 136, 137, 138, 140], "chicoma": [135, 360], "cpu": [135, 140, 360, 365], "chrysali": [136, 361], "compymcnodefac": [137, 362], "frontier": [138, 363], "crayclang": 138, "support": [139, 315, 338, 351, 364, 385], "perlmutt": [140, 365], "pm": 140, "baroclinic_channel": [141, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 317], "cosine_bel": [141, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 319, 370], "geostroph": [141, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 321, 375], "ice_shelf_2d": [141, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 322], "inertial_gravity_wav": [141, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 324], "internal_wav": [141, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 325], "manufactured_solut": [141, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 326], "single_column": [141, 268, 269, 270, 271, 272, 273, 274, 275, 329, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353], "sphere_transport": [141, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "converg": [141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 380], "ic": [141, 142, 366, 376, 386], "shelf": [141, 142, 366, 376], "potenti": [141, 142], "energi": [141, 142], "rpe": [141, 142, 171, 184, 185, 186, 187, 188, 249, 250, 251, 252, 317, 325, 371, 379], "vertic": [141, 142, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 357, 368, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384], "coordin": [141, 142, 357, 368], "v": 142, "map": 142, "omega": 142, "mpi": [142, 364], "resourc": 142, "interv": 142, "quasi": 142, "icosahedr": 142, "rest": 142, "convergenceanalysi": [144, 145, 146, 147, 148, 149, 150, 151], "compute_error": 145, "convergence_paramet": [146, 280], "exact_solut": [147, 198, 211, 232, 233, 234, 235, 258, 259, 260, 261, 324, 326], "get_output_field": [148, 212], "plot_converg": 149, "convergenceforward": [152, 153, 154], "compute_cell_count": [153, 156, 162, 166, 176, 200, 221, 237, 245, 263], "sphericalconvergenceforward": [155, 156], "ice_shelf": [157, 158, 159, 160, 161, 162, 163], "iceshelftask": [157, 158], "setup_ssh_adjustment_step": 158, "sshadjust": [159, 160], "sshforward": [161, 162, 163], "add_spherical_base_mesh_step": 164, "oceanmodelstep": [165, 166, 167, 168, 169], "get_time_interval_str": 170, "compute_rp": 171, "add_baroclinic_channel_task": 172, "decomp": [173, 317, 371], "default": [174, 219, 243, 317, 322, 325, 357, 371, 376, 379], "forward": [175, 176, 177, 199, 200, 201, 213, 220, 221, 222, 236, 237, 244, 245, 246, 262, 263, 270, 283, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 346, 353, 357], "init": [178, 179, 180, 202, 203, 204, 214, 215, 223, 224, 238, 239, 247, 248, 264, 265, 272, 273, 284, 285, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 357], "restart": [181, 182, 183, 317, 371, 388], "restart_step": [182, 183], "restartstep": [182, 183], "analysi": [186, 187, 188, 197, 198, 210, 211, 212, 231, 232, 251, 252, 257, 258, 279, 280, 318, 319, 320, 321, 324, 326, 327, 328, 357, 375], "thread": [189, 317, 371], "cosinebel": [194, 195], "add_cosine_bell_task": 196, "add_geostrophic_task": 209, "add_ice_shelf_2d_task": 218, "inertialgravitywav": 229, "add_inertial_gravity_wave_task": 230, "exactsolut": [233, 234, 235, 259, 260, 261], "normal_veloc": [234, 260], "ssh": [235, 261, 366], "add_internal_wave_task": 242, "manufacturedsolut": 255, "add_manufactured_solution_task": 256, "add_single_column_task": [268, 342], "cvmix": [269, 329, 383], "ideal_ag": 271, "idealag": 271, "spheretransport": [276, 277], "add_sphere_transport_task": 278, "filament_analysi": [281, 282, 327], "filamentanalysi": [281, 282], "mixing_analysi": [286, 287, 318], "mixinganalysi": [286, 287], "grid_1d": [290, 291], "generate_1d_grid": 290, "write_1d_grid": 291, "init_vertical_coord": 292, "partial_cel": [293, 294], "alter_bottom_depth": 293, "alter_ssh": 294, "sigma": [295, 296, 368], "init_sigma_vertical_coord": 295, "update_sigma_layer_thick": 296, "update_layer_thick": 297, "zlevel": [298, 299, 300, 301, 302], "compute_min_max_level_cel": 298, "compute_z_level_layer_thick": 299, "compute_z_level_resting_thick": 300, "init_z_level_vertical_coord": 301, "update_z_level_layer_thick": 302, "zstar": [303, 304], "init_z_star_vertical_coord": 303, "update_z_star_layer_thick": 304, "compute_transect": 305, "plot_transect": 306, "transect": [307, 308, 309, 310, 311, 312, 313], "horiz": [307, 308, 309, 310], "find_planar_transect_cells_and_weight": 307, "find_spherical_transect_cells_and_weight": 308, "make_triangle_tre": 309, "mesh_to_triangl": 310, "vert": [311, 312, 313], "find_transect_levels_and_weight": 311, "interp_mpas_to_transect_cel": 312, "interp_mpas_to_transect_nod": 313, "initi": [316, 351, 357, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "condit": [316, 351, 357, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "boundari": 316, "forc": [316, 351, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "correlated_tracers_2d": 318, "base_mesh": [318, 319, 320, 321, 327, 328], "divergent_2d": 320, "nondivergent_2d": 327, "rotation_2d": 328, "ideal": [329, 383], "ag": [329, 383], "categori": [330, 384, 389], "constructor": [331, 334, 336], "organ": 333, "attribut": [334, 336], "copi": 334, "pull": 335, "request": 335, "pr": 335, "nightli": 335, "overview": 337, "code": [337, 338, 357], "packag": 337, "within": 337, "group": [337, 357], "relat": 337, "quick": [338, 385], "start": [338, 357, 385], "develop": [338, 356, 357], "unix": 338, "shell": 338, "repositori": 338, "beginn": 338, "compil": 338, "system": 338, "unknown": 338, "what": 338, "script": [338, 385], "doe": 338, "flag": 338, "activ": 338, "switch": 338, "between": [338, 357], "differ": 338, "onli": 338, "repo": 338, "worktre": 338, "advanc": 338, "seaic": [339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351], "exact_restart": [343, 344, 345], "exactrestart": 343, "standard_phys": [347, 348, 349], "standardphys": 347, "standard_physics_test": 353, "exact_restart_test": 353, "solver": 354, "error": 354, "when": 354, "proxi": 354, "lanl": 354, "mac": 354, "gethostbynam": 354, "fail": 354, "glossari": [355, 356], "": 356, "guid": 356, "tutori": [356, 357], "compass": 356, "get": 357, "vari": 357, "resolut": 357, "paramet": 357, "thing": 357, "out": 357, "defin": 357, "more": 357, "again": 357, "one": 357, "second": 357, "enhanc": 357, "comput": 357, "cell": 357, "count": 357, "superclass": 357, "studi": 357, "how": 357, "pass": 357, "data": [357, 365], "A": 358, "case": 358, "load": [359, 360, 361, 362, 363, 365, 385], "slurm": 364, "queue": 364, "mpich": 364, "openmpi": 364, "No": 364, "forg": 364, "jupyt": 365, "notebook": 365, "adjust": 366, "1d": 368, "type": 368, "tanh_dz": 368, "index_tanh_dz": 368, "60layerphc": 368, "80layere3smv1": 368, "100layere3smv1": 368, "3d": 368, "z": 368, "star": 368, "level": 368, "cosine_bell_cached_init": 370, "baroclin": 371, "channel": 371, "descript": [371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "durat": [371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "core": [371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 388, 389], "correl": 372, "tracer": 372, "2": [372, 374, 381, 382], "d": [372, 374, 381, 382], "cosin": 373, "bell": 373, "diverg": 374, "2d": 376, "default_with_restart": 376, "default_tidal_forc": 376, "inerti": 378, "graviti": 378, "wave": [378, 379], "intern": 379, "manufactur": 380, "solut": 380, "nondiverg": 381, "rotat": 382, "singl": [383, 388], "column": [383, 388], "task_nam": [384, 389], "yet": 385, "standalon": 385, "sea": 386, "standard": 388, "physic": 388, "timestep": 388, "exact": 388}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [331, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [371, "mesh"], [371, "id2"], [371, "id9"], [371, "id17"], [371, "id25"], [371, "id32"], [372, "mesh"], [373, "mesh"], [374, "mesh"], [375, "mesh"], [376, "mesh"], [376, "id2"], [376, "id9"], [376, "id17"], [378, "mesh"], [379, "mesh"], [379, "id2"], [380, "mesh"], [381, "mesh"], [382, "mesh"], [383, "mesh"], [383, "id3"], [383, "id8"], [384, "mesh"], [388, "mesh"], [388, "id1"], [388, "id6"], [389, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [317, "validate"], [322, "validate"], [325, "validate"]], "viz": [[3, "viz"], [318, "viz"], [319, "viz"], [320, "viz"], [321, "viz"], [322, "viz"], [324, "viz"], [326, "viz"], [327, "viz"], [328, "viz"], [329, "viz"], [353, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [357, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [367, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Permissions": [[11, "permissions"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [142, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [142, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"], [141, "visualization"], [142, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.io.update_permissions": [[61, "polaris-io-update-permissions"]], "polaris.job.clean_up_whitespace": [[62, "polaris-job-clean-up-whitespace"]], "polaris.job.get_slurm_options": [[63, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[64, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[65, "polaris-list-list-cases"]], "polaris.list.list_machines": [[66, "polaris-list-list-machines"]], "polaris.list.list_suites": [[67, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[68, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[69, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[70, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[71, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[72, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[73, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[74, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[75, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[76, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[79, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[80, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[81, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[82, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[83, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[84, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[85, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[86, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[87, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[88, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[89, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[90, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[91, "polaris-namelist-replace"]], "polaris.namelist.write": [[92, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[93, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[94, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[95, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[96, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[97, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[98, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[99, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[100, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[101, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[102, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[103, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[104, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[105, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[106, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[107, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[108, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[109, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[110, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[111, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[112, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[113, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[114, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[115, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[116, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[117, "polaris-streams-read"]], "polaris.streams.update_defaults": [[118, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[119, "polaris-streams-update-tree"]], "polaris.streams.write": [[120, "polaris-streams-write"]], "polaris.suite.setup_suite": [[121, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[122, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_lat_lon_field": [[123, "polaris-viz-plot-global-lat-lon-field"]], "polaris.viz.plot_global_mpas_field": [[124, "polaris-viz-plot-global-mpas-field"]], "polaris.viz.plot_horiz_field": [[125, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[126, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[127, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[128, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[129, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[130, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[131, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[132, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[133, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[134, "anvil"], [359, "anvil"]], "intel": [[134, "intel"], [136, "intel"], [137, "intel"]], "gnu": [[134, "gnu"], [136, "gnu"], [137, "gnu"]], "Chicoma": [[135, "chicoma"], [360, "chicoma"]], "chicoma-cpu, gnu": [[135, "chicoma-cpu-gnu"]], "Chrysalis": [[136, "chrysalis"], [361, "chrysalis"]], "CompyMcNodeFace": [[137, "compymcnodeface"], [362, "compymcnodeface"]], "Frontier": [[138, "frontier"], [363, "frontier"]], "frontier, gnu": [[138, "frontier-gnu"]], "frontier, crayclang": [[138, "frontier-crayclang"]], "Machines": [[139, "machines"], [364, "machines"]], "Supported Machines": [[139, "supported-machines"], [364, "supported-machines"]], "Other Machines": [[139, "other-machines"], [364, "other-machines"]], "Adding a New Supported Machine": [[139, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[139, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[139, "describing-a-spack-environment"]], "Building the Spack Environment": [[139, "building-the-spack-environment"]], "Perlmutter": [[140, "perlmutter"], [365, "perlmutter"]], "pm-cpu, gnu": [[140, "pm-cpu-gnu"]], "pm-cpu, intel": [[140, "pm-cpu-intel"]], "ocean": [[141, "ocean"]], "Tasks": [[141, "tasks"], [323, "tasks"], [336, "tasks"], [339, "tasks"], [352, "tasks"], [377, "tasks"], [387, "tasks"], [391, "tasks"]], "baroclinic_channel": [[141, "baroclinic-channel"], [317, "baroclinic-channel"]], "cosine_bell": [[141, "cosine-bell"], [319, "cosine-bell"]], "geostrophic": [[141, "geostrophic"], [321, "geostrophic"], [375, "geostrophic"]], "ice_shelf_2d": [[141, "ice-shelf-2d"], [322, "ice-shelf-2d"]], "inertial_gravity_wave": [[141, "inertial-gravity-wave"], [324, "inertial-gravity-wave"]], "internal_wave": [[141, "internal-wave"], [325, "internal-wave"]], "manufactured_solution": [[141, "manufactured-solution"], [326, "manufactured-solution"]], "single_column": [[141, "single-column"], [329, "single-column"], [339, "single-column"], [353, "single-column"]], "sphere_transport": [[141, "sphere-transport"]], "Ocean Framework": [[141, "ocean-framework"]], "Convergence Tests": [[141, "convergence-tests"], [142, "convergence-tests"]], "Spherical Convergence Tests": [[141, "spherical-convergence-tests"]], "Ice Shelf": [[141, "ice-shelf"]], "Ocean Model": [[141, "ocean-model"]], "Spherical Base Mesh Step": [[141, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[141, "reference-potential-energy-rpe"]], "Vertical coordinates": [[141, "vertical-coordinates"]], "Ocean framework": [[142, "ocean-framework"]], "YAML files vs. namelists and streams": [[142, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[142, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[142, "setting-mpi-resources"]], "Setting time intervals in model config options": [[142, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[142, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[142, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Ice Shelf Tasks": [[142, "ice-shelf-tasks"]], "Vertical coordinate": [[142, "vertical-coordinate"], [368, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[142, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[143, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[144, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[145, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[146, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[147, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[148, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[149, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[150, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[151, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[152, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[153, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[154, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[155, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[156, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.ice_shelf.IceShelfTask": [[157, "polaris-ocean-ice-shelf-iceshelftask"]], "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps": [[158, "polaris-ocean-ice-shelf-iceshelftask-setup-ssh-adjustment-steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[159, "polaris-ocean-ice-shelf-sshadjustment"]], "polaris.ocean.ice_shelf.SshAdjustment.run": [[160, "polaris-ocean-ice-shelf-sshadjustment-run"]], "polaris.ocean.ice_shelf.SshForward": [[161, "polaris-ocean-ice-shelf-sshforward"]], "polaris.ocean.ice_shelf.SshForward.compute_cell_count": [[162, "polaris-ocean-ice-shelf-sshforward-compute-cell-count"]], "polaris.ocean.ice_shelf.SshForward.dynamic_model_config": [[163, "polaris-ocean-ice-shelf-sshforward-dynamic-model-config"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[164, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[165, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[166, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[167, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[168, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[169, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[170, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[171, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[172, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[173, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[174, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[175, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[176, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[177, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[178, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[179, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[180, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[181, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[182, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[183, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[184, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[185, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[186, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[187, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[188, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[189, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[190, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[191, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[192, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[193, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[194, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[195, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[196, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[197, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[198, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[199, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[200, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[201, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[202, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[203, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[204, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[205, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[206, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[207, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[208, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[209, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[210, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[211, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[212, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[213, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[214, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[215, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[216, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[217, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks": [[218, "polaris-ocean-tasks-ice-shelf-2d-add-ice-shelf-2d-tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[219, "polaris-ocean-tasks-ice-shelf-2d-default-default"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[220, "polaris-ocean-tasks-ice-shelf-2d-forward-forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count": [[221, "polaris-ocean-tasks-ice-shelf-2d-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config": [[222, "polaris-ocean-tasks-ice-shelf-2d-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[223, "polaris-ocean-tasks-ice-shelf-2d-init-init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init.run": [[224, "polaris-ocean-tasks-ice-shelf-2d-init-init-run"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[225, "polaris-ocean-tasks-ice-shelf-2d-validate-validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run": [[226, "polaris-ocean-tasks-ice-shelf-2d-validate-validate-run"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[227, "polaris-ocean-tasks-ice-shelf-2d-viz-viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run": [[228, "polaris-ocean-tasks-ice-shelf-2d-viz-viz-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[229, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[230, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[231, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[232, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[233, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[234, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[235, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[236, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[237, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[238, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[239, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[240, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[241, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks": [[242, "polaris-ocean-tasks-internal-wave-add-internal-wave-tasks"]], "polaris.ocean.tasks.internal_wave.default.Default": [[243, "polaris-ocean-tasks-internal-wave-default-default"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[244, "polaris-ocean-tasks-internal-wave-forward-forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count": [[245, "polaris-ocean-tasks-internal-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config": [[246, "polaris-ocean-tasks-internal-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.internal_wave.init.Init": [[247, "polaris-ocean-tasks-internal-wave-init-init"]], "polaris.ocean.tasks.internal_wave.init.Init.run": [[248, "polaris-ocean-tasks-internal-wave-init-init-run"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[249, "polaris-ocean-tasks-internal-wave-rpe-rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure": [[250, "polaris-ocean-tasks-internal-wave-rpe-rpe-configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[251, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run": [[252, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[253, "polaris-ocean-tasks-internal-wave-viz-viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz.run": [[254, "polaris-ocean-tasks-internal-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[255, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[256, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[257, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[258, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[259, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[260, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[261, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[262, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[263, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[264, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[265, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[266, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[267, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[268, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[269, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[270, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[271, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[272, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[273, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[274, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[275, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[276, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[277, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[278, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[279, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[280, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[281, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[282, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[283, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[284, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[285, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[286, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[287, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[288, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[289, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[290, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[291, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[292, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[293, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[294, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.sigma.init_sigma_vertical_coord": [[295, "polaris-ocean-vertical-sigma-init-sigma-vertical-coord"]], "polaris.ocean.vertical.sigma.update_sigma_layer_thickness": [[296, "polaris-ocean-vertical-sigma-update-sigma-layer-thickness"]], "polaris.ocean.vertical.update_layer_thickness": [[297, "polaris-ocean-vertical-update-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[298, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[299, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[300, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[301, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness": [[302, "polaris-ocean-vertical-zlevel-update-z-level-layer-thickness"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[303, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "polaris.ocean.vertical.zstar.update_z_star_layer_thickness": [[304, "polaris-ocean-vertical-zstar-update-z-star-layer-thickness"]], "polaris.ocean.viz.compute_transect": [[305, "polaris-ocean-viz-compute-transect"]], "polaris.ocean.viz.plot_transect": [[306, "polaris-ocean-viz-plot-transect"]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[307, "polaris-ocean-viz-transect-horiz-find-planar-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[308, "polaris-ocean-viz-transect-horiz-find-spherical-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[309, "polaris-ocean-viz-transect-horiz-make-triangle-tree"]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[310, "polaris-ocean-viz-transect-horiz-mesh-to-triangles"]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[311, "polaris-ocean-viz-transect-vert-find-transect-levels-and-weights"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[312, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-cells"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[313, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-nodes"]], "Ocean component": [[314, "ocean-component"], [369, "ocean-component"]], "Models": [[315, "models"]], "Supported Models": [[315, "supported-models"]], "MPAS-Ocean": [[316, "mpas-ocean"]], "Initial conditions": [[316, "initial-conditions"], [351, "initial-conditions"]], "Boundary conditions": [[316, "boundary-conditions"]], "Forcing": [[316, "forcing"], [351, "forcing"]], "framework": [[317, "framework"], [318, "framework"], [319, "framework"], [320, "framework"], [321, "framework"], [322, "framework"], [324, "framework"], [325, "framework"], [326, "framework"], [327, "framework"], [328, "framework"], [329, "framework"], [353, "framework"]], "init": [[317, "init"], [318, "init"], [319, "init"], [320, "init"], [321, "init"], [322, "init"], [324, "init"], [325, "init"], [326, "init"], [327, "init"], [328, "init"], [329, "init"]], "forward": [[317, "forward"], [318, "forward"], [319, "forward"], [320, "forward"], [321, "forward"], [322, "forward"], [324, "forward"], [325, "forward"], [326, "forward"], [327, "forward"], [328, "forward"], [329, "forward"], [353, "forward"]], "default": [[317, "default"], [322, "default"], [325, "default"], [371, "default"], [376, "default"]], "decomp": [[317, "decomp"], [371, "decomp"]], "restart": [[317, "restart"], [371, "restart"]], "threads": [[317, "threads"]], "rpe": [[317, "rpe"], [325, "rpe"], [371, "rpe"]], "correlated_tracers_2d": [[318, "correlated-tracers-2d"]], "base_mesh": [[318, "base-mesh"], [319, "base-mesh"], [320, "base-mesh"], [321, "base-mesh"], [327, "base-mesh"], [328, "base-mesh"]], "analysis": [[318, "analysis"], [319, "analysis"], [320, "analysis"], [321, "analysis"], [324, "analysis"], [326, "analysis"], [327, "analysis"], [328, "analysis"], [375, "analysis"]], "mixing_analysis": [[318, "mixing-analysis"]], "divergent_2d": [[320, "divergent-2d"]], "exact_solution": [[324, "exact-solution"], [326, "exact-solution"]], "nondivergent_2d": [[327, "nondivergent-2d"]], "filament_analysis": [[327, "filament-analysis"]], "rotation_2d": [[328, "rotation-2d"]], "cvmix": [[329, "cvmix"], [383, "cvmix"]], "ideal age": [[329, "ideal-age"], [383, "ocean-single-column-ideal-age"]], "Categories of tasks": [[330, "categories-of-tasks"]], "Constructor": [[331, "constructor"]], "Config file": [[331, "config-file"]], "Directory structure": [[332, "directory-structure"]], "Organization of Tasks": [[333, "organization-of-tasks"]], "Steps": [[334, "steps"]], "Step attributes": [[334, "step-attributes"]], "constructor": [[334, "constructor"], [336, "constructor"]], "setup()": [[334, "setup"]], "constrain_resources()": [[334, "constrain-resources"]], "runtime_setup()": [[334, "runtime-setup"]], "run()": [[334, "run"]], "inputs and outputs": [[334, "inputs-and-outputs"]], "Input files": [[334, "input-files"]], "Symlinks to input files": [[334, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[334, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[334, "downloading-and-symlinking-input-files"]], "Copying input files": [[334, "copying-input-files"]], "Output files": [[334, "output-files"]], "Cached output files": [[334, "cached-output-files"]], "Adding other steps as dependencies": [[334, "adding-other-steps-as-dependencies"]], "Suites": [[335, "suites"], [370, "suites"], [385, "suites"], [390, "suites"]], "Pull-Request (PR) suite": [[335, "pull-request-pr-suite"]], "Nightly suite": [[335, "nightly-suite"]], "Task attributes": [[336, "task-attributes"]], "configure()": [[336, "configure"]], "Overview": [[337, "overview"]], "Code Style": [[337, "code-style"]], "Packages and Modules": [[337, "packages-and-modules"]], "Packages": [[337, "packages"]], "Modules": [[337, "modules"]], "Classes": [[337, "classes"]], "Code sharing": [[337, "code-sharing"]], "\u2026in the polaris framework": [[337, "in-the-polaris-framework"]], "\u2026within a component": [[337, "within-a-component"]], "\u2026within a group of related tasks": [[337, "within-a-group-of-related-tasks"]], "\u2026within a task": [[337, "within-a-task"]], "Quick Start for Developers": [[338, "quick-start-for-developers"]], "Unix Shell": [[338, "unix-shell"]], "Set up a polaris repository: for beginners": [[338, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[338, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[338, "supported-machines"]], "Environments with Albany": [[338, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[338, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[338, "unknown-machines"]], "What the script does": [[338, "what-the-script-does"]], "Optional flags": [[338, "optional-flags"]], "Activating the environment": [[338, "activating-the-environment"]], "Switching between different polaris environments": [[338, "switching-between-different-polaris-environments"]], "Troubleshooting": [[338, "troubleshooting"], [354, "troubleshooting"]], "Creating/updating only the polaris environment": [[338, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[338, "building-e3sm-components"]], "Running polaris from the repo": [[338, "running-polaris-from-the-repo"]], "Code style for polaris": [[338, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[338, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[339, "seaice"]], "SeaIce framework": [[340, "seaice-framework"]], "polaris.seaice.SeaIce": [[341, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[342, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[343, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[344, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[345, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[346, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[347, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[348, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[349, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[350, "seaice-component"]], "Supported Model: MPAS-Seaice": [[351, "supported-model-mpas-seaice"]], "standard_physics_test": [[353, "standard-physics-test"]], "exact_restart_test": [[353, "exact-restart-test"]], "Solver errors when configuring conda environment": [[354, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[354, "proxy-on-lanl-macs"]], "gethostbyname failed": [[354, "gethostbyname-failed"]], "Glossary": [[355, "glossary"], [356, null]], "Polaris": [[356, "polaris"]], "User's guide": [[356, null]], "Developer's guide": [[356, null]], "Tutorials": [[356, null]], "Compass": [[356, "compass"]], "Developer Tutorial: Adding a new test group": [[357, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[357, "getting-started"]], "Making a new test group": [[357, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[357, "adding-a-default-task"]], "Varying resolution and other parameters": [[357, "varying-resolution-and-other-parameters"]], "Adding the init step": [[357, "adding-the-init-step"]], "Creating a horizontal mesh": [[357, "creating-a-horizontal-mesh"]], "Adding a config file": [[357, "adding-a-config-file"]], "Adding the step to the task": [[357, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[357, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[357, "creating-an-initial-condition"]], "Adding plots": [[357, "adding-plots"]], "Adding step outputs": [[357, "adding-step-outputs"]], "Adding validation": [[357, "adding-validation"], [357, "id1"]], "Test things out!": [[357, "test-things-out"]], "Adding the forward step": [[357, "adding-the-forward-step"]], "Defining model config options and streams": [[357, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[357, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[357, "adding-more-validation"]], "Test the task again!": [[357, "test-the-task-again"]], "Adding a visualization step": [[357, "adding-a-visualization-step"]], "Adding the viz step to the task": [[357, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[357, "test-the-task-one-more-time"]], "Adding a second task": [[357, "adding-a-second-task"]], "Enhancements": [[357, "enhancements"]], "Adding model config options in code": [[357, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[357, "adding-dynamic-model-config-options"]], "Computing the cell count": [[357, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[357, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[357, "adding-a-parameter-study"]], "Adding the steps to the task": [[357, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[357, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[357, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[358, "config-files"]], "A \u201cuser\u201d config file": [[358, "a-user-config-file"]], "Test-case config files": [[358, "test-case-config-files"]], "config options": [[359, "config-options"], [360, "config-options"], [361, "config-options"], [362, "config-options"], [363, "config-options"], [364, "config-options"], [365, "config-options"], [366, "config-options"], [371, "config-options"], [371, "id7"], [371, "id14"], [371, "id22"], [371, "id30"], [371, "id37"], [372, "config-options"], [373, "config-options"], [374, "config-options"], [375, "config-options"], [376, "config-options"], [376, "id7"], [376, "id14"], [376, "id22"], [378, "config-options"], [379, "config-options"], [379, "id7"], [380, "config-options"], [381, "config-options"], [382, "config-options"], [383, "config-options"], [383, "id1"], [383, "id6"], [383, "id13"], [384, "config-options"], [388, "config-options"], [388, "id5"], [388, "id10"], [389, "config-options"]], "Loading and running Polaris on Anvil": [[359, "loading-and-running-polaris-on-anvil"]], "Chicoma-CPU": [[360, "chicoma-cpu"]], "Loading and running Polaris on Chicoma": [[360, "loading-and-running-polaris-on-chicoma"]], "Loading and running Polaris on Chrysalis": [[361, "loading-and-running-polaris-on-chrysalis"]], "Loading and running Polaris on CompyMcNodeFace": [[362, "loading-and-running-polaris-on-compymcnodeface"]], "Loading and running Polaris on Frontier": [[363, "loading-and-running-polaris-on-frontier"]], "Slurm job queueing": [[364, "slurm-job-queueing"]], "MPICH": [[364, "mpich"]], "OpenMPI": [[364, "openmpi"]], "No MPI from conda-forge": [[364, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[365, "perlmutter-cpu"]], "Loading and running Polaris on Perlmutter": [[365, "loading-and-running-polaris-on-perlmutter"]], "Jupyter notebook on remote data": [[365, "jupyter-notebook-on-remote-data"]], "Ice shelf": [[366, "ice-shelf"]], "SSH adjustment steps": [[366, "ssh-adjustment-steps"]], "1D Grid type": [[368, "d-grid-type"]], "uniform": [[368, "uniform"]], "tanh_dz": [[368, "tanh-dz"]], "index_tanh_dz": [[368, "index-tanh-dz"]], "60layerPHC": [[368, "layerphc"]], "80layerE3SMv1": [[368, "layere3smv1"]], "100layerE3SMv1": [[368, "id1"]], "3D vertical coordinates": [[368, "d-vertical-coordinates"]], "z-star": [[368, "z-star"]], "z-level": [[368, "z-level"]], "sigma": [[368, "sigma"]], "cosine_bell and cosine_bell_cached_init suite": [[370, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[371, "baroclinic-channel"]], "description": [[371, "description"], [371, "id1"], [371, "id8"], [371, "id16"], [371, "id24"], [372, "description"], [373, "description"], [374, "description"], [375, "description"], [376, "description"], [376, "id1"], [376, "id8"], [376, "id16"], [378, "description"], [379, "description"], [379, "id1"], [380, "description"], [381, "description"], [382, "description"], [383, "description"], [383, "id2"], [383, "id7"], [384, "description"], [388, "description"], [389, "description"]], "vertical grid": [[371, "vertical-grid"], [371, "id3"], [371, "id10"], [371, "id18"], [371, "id26"], [371, "id33"], [372, "vertical-grid"], [373, "vertical-grid"], [374, "vertical-grid"], [375, "vertical-grid"], [376, "vertical-grid"], [376, "id3"], [376, "id10"], [376, "id18"], [378, "vertical-grid"], [379, "vertical-grid"], [379, "id3"], [380, "vertical-grid"], [381, "vertical-grid"], [382, "vertical-grid"], [383, "vertical-grid"], [383, "id4"], [383, "id9"], [384, "vertical-grid"]], "initial conditions": [[371, "initial-conditions"], [371, "id4"], [371, "id11"], [371, "id19"], [371, "id27"], [371, "id34"], [372, "initial-conditions"], [373, "initial-conditions"], [374, "initial-conditions"], [375, "initial-conditions"], [376, "initial-conditions"], [376, "id4"], [376, "id11"], [376, "id19"], [378, "initial-conditions"], [379, "initial-conditions"], [379, "id4"], [380, "initial-conditions"], [381, "initial-conditions"], [382, "initial-conditions"], [383, "initial-conditions"], [383, "id5"], [383, "id10"], [384, "initial-conditions"], [388, "initial-conditions"], [388, "id2"], [388, "id7"], [389, "initial-conditions"]], "forcing": [[371, "forcing"], [371, "id5"], [371, "id12"], [371, "id20"], [371, "id28"], [371, "id35"], [372, "forcing"], [373, "forcing"], [374, "forcing"], [375, "forcing"], [376, "forcing"], [376, "id5"], [376, "id12"], [376, "id20"], [378, "forcing"], [379, "forcing"], [379, "id5"], [380, "forcing"], [381, "forcing"], [382, "forcing"], [383, "forcing"], [383, "id11"], [384, "forcing"], [388, "forcing"], [388, "id3"], [388, "id8"], [389, "forcing"]], "time step and run duration": [[371, "time-step-and-run-duration"], [371, "id6"], [371, "id13"], [371, "id21"], [371, "id29"], [371, "id36"], [372, "time-step-and-run-duration"], [373, "time-step-and-run-duration"], [374, "time-step-and-run-duration"], [375, "time-step-and-run-duration"], [376, "time-step-and-run-duration"], [376, "id6"], [376, "id13"], [376, "id21"], [378, "time-step-and-run-duration"], [379, "time-step-and-run-duration"], [379, "id6"], [380, "time-step-and-run-duration"], [381, "time-step-and-run-duration"], [382, "time-step-and-run-duration"], [383, "time-step-and-run-duration"], [383, "id12"], [384, "time-step-and-run-duration"], [389, "time-step-and-run-duration"]], "cores": [[371, "cores"], [371, "id15"], [371, "id23"], [371, "id31"], [371, "id38"], [372, "cores"], [373, "cores"], [374, "cores"], [375, "cores"], [376, "cores"], [376, "id15"], [376, "id23"], [378, "cores"], [379, "cores"], [380, "cores"], [381, "cores"], [382, "cores"], [383, "cores"], [383, "id14"], [384, "cores"], [388, "cores"], [388, "id4"], [388, "id9"], [389, "cores"]], "thread": [[371, "thread"]], "correlated tracers 2-d": [[372, "correlated-tracers-2-d"]], "cosine bell": [[373, "cosine-bell"]], "divergent 2-d": [[374, "divergent-2-d"]], "ice shelf 2d": [[376, "ice-shelf-2d"]], "default_with_restart": [[376, "default-with-restart"]], "default_tidal_forcing": [[376, "default-tidal-forcing"]], "inertial gravity wave": [[378, "inertial-gravity-wave"]], "internal wave": [[379, "internal-wave"]], "default task": [[379, "default-task"]], "RPE task": [[379, "rpe-task"]], "manufactured solution": [[380, "manufactured-solution"]], "convergence": [[380, "convergence"]], "nondivergent 2-d": [[381, "nondivergent-2-d"]], "rotation 2-d": [[382, "rotation-2-d"]], "single column": [[383, "single-column"], [388, "single-column"]], "<Category of task>": [[384, "ocean-category-of-task"], [389, "seaice-category-of-task"]], "task_name": [[384, "task-name"], [389, "task-name"]], "Quick Start for Users": [[385, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[385, null]], "Loading polaris conda and spack environments": [[385, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[385, "e3sm-supported-machines"]], "Other machines": [[385, "other-machines"]], "Building supported E3SM components as standalone models": [[385, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[385, "setting-up-tasks"]], "Running a task": [[385, "running-a-task"]], "Running with a job script": [[385, "running-with-a-job-script"]], "Sea ice component": [[386, "sea-ice-component"]], "standard physics test": [[388, "standard-physics-test"]], "timestep and run duration": [[388, "timestep-and-run-duration"], [388, "id11"]], "visualization": [[388, "visualization"]], "exact restart test": [[388, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "update_permissions() (in module polaris.io)": [[61, "polaris.io.update_permissions"]], "clean_up_whitespace() (in module polaris.job)": [[62, "polaris.job.clean_up_whitespace"]], "get_slurm_options() (in module polaris.job)": [[63, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[64, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[65, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[66, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[67, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[68, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[69, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[69, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[70, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[71, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[72, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[74, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[75, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[80, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[81, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[82, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[85, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[86, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[87, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[88, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[89, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[90, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[91, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[92, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[93, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[94, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[95, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[96, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[97, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[98, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[108, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[109, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[110, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[111, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[112, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[113, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[114, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[115, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[116, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[117, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[118, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[119, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[120, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[121, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[122, "polaris.validate.compare_variables"]], "plot_global_lat_lon_field() (in module polaris.viz)": [[123, "polaris.viz.plot_global_lat_lon_field"]], "plot_global_mpas_field() (in module polaris.viz)": [[124, "polaris.viz.plot_global_mpas_field"]], "plot_horiz_field() (in module polaris.viz)": [[125, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[126, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[127, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[127, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[128, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[129, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[130, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[131, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[132, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[133, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[143, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[143, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[149, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[150, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[151, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[152, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[152, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[153, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[154, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[155, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[155, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[156, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "iceshelftask (class in polaris.ocean.ice_shelf)": [[157, "polaris.ocean.ice_shelf.IceShelfTask"]], "__init__() (polaris.ocean.ice_shelf.iceshelftask method)": [[157, "polaris.ocean.ice_shelf.IceShelfTask.__init__"]], "setup_ssh_adjustment_steps() (polaris.ocean.ice_shelf.iceshelftask method)": [[158, "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps"]], "sshadjustment (class in polaris.ocean.ice_shelf)": [[159, "polaris.ocean.ice_shelf.SshAdjustment"]], "__init__() (polaris.ocean.ice_shelf.sshadjustment method)": [[159, "polaris.ocean.ice_shelf.SshAdjustment.__init__"]], "run() (polaris.ocean.ice_shelf.sshadjustment method)": [[160, "polaris.ocean.ice_shelf.SshAdjustment.run"]], "sshforward (class in polaris.ocean.ice_shelf)": [[161, "polaris.ocean.ice_shelf.SshForward"]], "__init__() (polaris.ocean.ice_shelf.sshforward method)": [[161, "polaris.ocean.ice_shelf.SshForward.__init__"]], "compute_cell_count() (polaris.ocean.ice_shelf.sshforward method)": [[162, "polaris.ocean.ice_shelf.SshForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.ice_shelf.sshforward method)": [[163, "polaris.ocean.ice_shelf.SshForward.dynamic_model_config"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[164, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[165, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[165, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[166, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[167, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[168, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[169, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[170, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[171, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[172, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[173, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[173, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[174, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[174, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[175, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[175, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[176, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[177, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[178, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[178, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[179, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[180, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[181, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[181, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[182, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[182, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[183, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[184, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[184, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[185, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[186, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[186, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[187, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[188, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[189, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[189, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[190, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[190, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[191, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[192, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[192, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[193, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[194, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[194, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[195, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[196, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[197, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[197, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[198, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[199, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[199, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[200, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[201, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[202, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[202, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[203, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[204, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[205, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[205, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[206, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[207, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[207, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[208, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[209, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[210, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[210, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[211, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[212, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[213, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[213, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[214, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[214, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[215, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[216, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[216, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[217, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "add_ice_shelf_2d_tasks() (in module polaris.ocean.tasks.ice_shelf_2d)": [[218, "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks"]], "default (class in polaris.ocean.tasks.ice_shelf_2d.default)": [[219, "polaris.ocean.tasks.ice_shelf_2d.default.Default"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.default.default method)": [[219, "polaris.ocean.tasks.ice_shelf_2d.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.ice_shelf_2d.forward)": [[220, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[220, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[221, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[222, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.ice_shelf_2d.init)": [[223, "polaris.ocean.tasks.ice_shelf_2d.init.Init"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[223, "polaris.ocean.tasks.ice_shelf_2d.init.Init.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[224, "polaris.ocean.tasks.ice_shelf_2d.init.Init.run"]], "validate (class in polaris.ocean.tasks.ice_shelf_2d.validate)": [[225, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[225, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[226, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.ice_shelf_2d.viz)": [[227, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[227, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[228, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[229, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[229, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[230, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[231, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[231, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[232, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[233, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[233, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[234, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[235, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[236, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[236, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[237, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[238, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[238, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[239, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[240, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[240, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[241, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "add_internal_wave_tasks() (in module polaris.ocean.tasks.internal_wave)": [[242, "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks"]], "default (class in polaris.ocean.tasks.internal_wave.default)": [[243, "polaris.ocean.tasks.internal_wave.default.Default"]], "__init__() (polaris.ocean.tasks.internal_wave.default.default method)": [[243, "polaris.ocean.tasks.internal_wave.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.internal_wave.forward)": [[244, "polaris.ocean.tasks.internal_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[244, "polaris.ocean.tasks.internal_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[245, "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[246, "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.internal_wave.init)": [[247, "polaris.ocean.tasks.internal_wave.init.Init"]], "__init__() (polaris.ocean.tasks.internal_wave.init.init method)": [[247, "polaris.ocean.tasks.internal_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.internal_wave.init.init method)": [[248, "polaris.ocean.tasks.internal_wave.init.Init.run"]], "rpe (class in polaris.ocean.tasks.internal_wave.rpe)": [[249, "polaris.ocean.tasks.internal_wave.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[249, "polaris.ocean.tasks.internal_wave.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[250, "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.internal_wave.rpe.analysis)": [[251, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[251, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[252, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run"]], "viz (class in polaris.ocean.tasks.internal_wave.viz)": [[253, "polaris.ocean.tasks.internal_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[253, "polaris.ocean.tasks.internal_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[254, "polaris.ocean.tasks.internal_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[255, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[255, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[256, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[257, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[257, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[258, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[259, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[259, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[260, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[261, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[262, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[262, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[263, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[264, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[264, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[265, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[266, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[266, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[267, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[268, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[269, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[269, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[270, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[270, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[271, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[271, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[272, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[272, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[273, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[274, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[274, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[275, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[276, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[276, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[277, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[278, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[279, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[279, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[280, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[281, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[281, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[282, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[283, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[283, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[284, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[284, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[285, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[286, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[286, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[287, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[288, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[288, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[289, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[290, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[291, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[292, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[293, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[294, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "init_sigma_vertical_coord() (in module polaris.ocean.vertical.sigma)": [[295, "polaris.ocean.vertical.sigma.init_sigma_vertical_coord"]], "update_sigma_layer_thickness() (in module polaris.ocean.vertical.sigma)": [[296, "polaris.ocean.vertical.sigma.update_sigma_layer_thickness"]], "update_layer_thickness() (in module polaris.ocean.vertical)": [[297, "polaris.ocean.vertical.update_layer_thickness"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[298, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[299, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[300, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[301, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "update_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[302, "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[303, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "update_z_star_layer_thickness() (in module polaris.ocean.vertical.zstar)": [[304, "polaris.ocean.vertical.zstar.update_z_star_layer_thickness"]], "compute_transect() (in module polaris.ocean.viz)": [[305, "polaris.ocean.viz.compute_transect"]], "plot_transect() (in module polaris.ocean.viz)": [[306, "polaris.ocean.viz.plot_transect"]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[307, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights"]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[308, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights"]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[309, "polaris.ocean.viz.transect.horiz.make_triangle_tree"]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[310, "polaris.ocean.viz.transect.horiz.mesh_to_triangles"]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[311, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights"]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[312, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells"]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[313, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes"]], "seaice (class in polaris.seaice)": [[341, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[341, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[342, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[343, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[343, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[344, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[344, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[345, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[346, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[346, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[347, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[347, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[348, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[348, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[349, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})