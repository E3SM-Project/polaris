Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_configs", "developers_guide/generated/polaris.ModelStep.map_yaml_options", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.io.update_permissions", "developers_guide/generated/polaris.job.clean_up_whitespace", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/frontier", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_configs", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_options", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/ice_shelf_2d", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/internal_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/frontier", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/ice_shelf", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/ice_shelf_2d", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/internal_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_configs.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_options.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.io.update_permissions.rst", "developers_guide/generated/polaris.job.clean_up_whitespace.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/frontier.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshAdjustment.run.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.ice_shelf.SshForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_configs.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_options.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.init_sigma_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.sigma.update_sigma_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.update_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.update_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.update_z_star_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/ice_shelf_2d.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/internal_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/frontier.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/ice_shelf.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/ice_shelf_2d.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/internal_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_configs", "polaris.ModelStep.map_yaml_options", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.io.update_permissions", "polaris.job.clean_up_whitespace", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.ice_shelf.IceShelfTask", "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps", "polaris.ocean.ice_shelf.SshAdjustment", "polaris.ocean.ice_shelf.SshAdjustment.run", "polaris.ocean.ice_shelf.SshForward", "polaris.ocean.ice_shelf.SshForward.compute_cell_count", "polaris.ocean.ice_shelf.SshForward.dynamic_model_config", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_configs", "polaris.ocean.model.OceanModelStep.map_yaml_options", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks", "polaris.ocean.tasks.ice_shelf_2d.default.Default", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count", "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.ice_shelf_2d.init.Init", "polaris.ocean.tasks.ice_shelf_2d.init.Init.run", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate", "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz", "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "polaris.ocean.tasks.internal_wave.default.Default", "polaris.ocean.tasks.internal_wave.forward.Forward", "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.internal_wave.init.Init", "polaris.ocean.tasks.internal_wave.init.Init.run", "polaris.ocean.tasks.internal_wave.rpe.Rpe", "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "polaris.ocean.tasks.internal_wave.viz.Viz", "polaris.ocean.tasks.internal_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.init.Init.setup", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.sigma.init_sigma_vertical_coord", "polaris.ocean.vertical.sigma.update_sigma_layer_thickness", "polaris.ocean.vertical.update_layer_thickness", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.vertical.zstar.update_z_star_layer_thickness", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "ice_shelf_2d", "Tasks", "inertial_gravity_wave", "internal_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "Ice shelf", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "ice shelf 2d", "Tasks", "inertial gravity wave", "internal wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 11, 19, 21, 25, 40, 48, 51, 52, 55, 141, 144, 166, 176, 177, 184, 187, 192, 197, 210, 246, 252, 280, 318, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 338, 340, 342, 344, 357, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 385, 386, 387, 388, 389, 393, 395], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 37, 51, 52, 54, 57, 71, 76, 78, 81, 84, 85, 95, 97, 99, 100, 106, 111, 112, 113, 114, 117, 118, 141, 144, 146, 152, 154, 156, 157, 159, 160, 161, 163, 165, 166, 167, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 204, 205, 206, 208, 209, 210, 213, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 239, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 260, 265, 267, 268, 269, 270, 271, 274, 276, 277, 278, 279, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 348, 349, 350, 352, 353, 357, 359, 360, 362, 369, 372, 394, 395], "templat": [0, 5, 6, 7, 28, 29, 30, 64, 119, 130, 134, 141, 144, 154, 157, 160, 163, 165, 180, 186, 225, 249, 322, 323, 324, 331, 332, 360, 361, 362], "date": [1, 2, 5, 57, 318, 336, 342, 354, 362], "2023": [1, 17, 382, 384], "08": [1, 361, 375], "18": [1, 6, 362, 364], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 141, 361, 362, 368], "asai": [1, 362], "davi": [1, 362], "capabl": [1, 2, 6, 17, 141, 222, 326, 338, 341, 360, 361, 368, 389], "design": [1, 141, 319, 338, 340, 341, 360, 368, 375], "here": [1, 6, 9, 12, 14, 17, 18, 141, 144, 321, 326, 329, 333, 334, 337, 338, 340, 341, 342, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376, 377, 378, 379, 385, 386, 387, 388, 389, 393, 394], "abil": [1, 7, 376, 385], "across": [1, 6, 7, 9, 14, 19, 144, 321, 334, 338, 339, 340, 341, 342, 359, 361, 371, 375, 376, 377, 378, 385, 386], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 40, 141, 144, 311, 312, 315, 334, 336, 338, 339, 340, 341, 342, 360, 361, 362, 368, 372, 377, 379, 380, 383, 388, 389, 393, 394, 395], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 66, 70, 72, 75, 76, 79, 80, 81, 85, 96, 97, 99, 100, 106, 111, 114, 124, 136, 137, 138, 139, 140, 141, 142, 144, 146, 152, 156, 159, 160, 161, 163, 165, 167, 176, 177, 178, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 196, 197, 200, 204, 206, 209, 210, 213, 218, 220, 222, 223, 225, 227, 231, 232, 234, 242, 244, 246, 247, 249, 251, 252, 253, 255, 256, 257, 258, 260, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 283, 285, 286, 289, 290, 291, 293, 309, 311, 312, 315, 318, 321, 322, 323, 324, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 353, 354, 358, 359, 360, 361, 362, 364, 367, 368, 369, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394], "document": [1, 3, 6, 9, 14, 338, 341, 360, 362, 383, 389], "refer": [1, 7, 14, 40, 174, 187, 252, 296, 299, 302, 305, 307, 338, 341, 342, 359, 360, 361, 372, 375, 379, 383, 389], "ani": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 36, 49, 65, 111, 117, 118, 183, 191, 269, 334, 335, 336, 338, 339, 340, 341, 342, 344, 361, 362, 368, 375, 377, 387, 388, 389, 392, 393], "which": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 32, 33, 40, 42, 51, 58, 89, 100, 102, 109, 117, 118, 119, 123, 127, 130, 141, 144, 146, 147, 148, 149, 150, 151, 153, 160, 161, 163, 167, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 201, 214, 215, 222, 223, 226, 228, 230, 235, 237, 238, 239, 246, 247, 250, 252, 254, 261, 263, 264, 265, 274, 280, 284, 310, 311, 312, 314, 315, 318, 320, 322, 324, 331, 332, 334, 335, 337, 338, 340, 342, 347, 348, 350, 352, 360, 361, 362, 364, 368, 372, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 26, 31, 32, 37, 40, 43, 44, 47, 58, 67, 95, 96, 97, 141, 144, 163, 167, 170, 171, 178, 223, 247, 274, 321, 322, 323, 324, 325, 329, 331, 332, 338, 340, 341, 342, 361, 363, 364, 365, 366, 367, 369, 375, 380, 389, 394], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 136, 138, 139, 141, 144, 318, 319, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 354, 357, 358, 359, 361, 362, 368, 373, 374, 375, 380, 390, 394, 395], "main": [1, 3, 6, 7, 9, 14, 45, 141, 334, 335, 340, 341, 342, 361, 395], "motiv": 1, "behind": [1, 341], "comput": [1, 7, 13, 14, 15, 83, 141, 144, 147, 148, 151, 155, 158, 164, 167, 168, 174, 179, 203, 207, 224, 236, 240, 248, 262, 266, 302, 303, 304, 315, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 338, 342, 364, 365, 368, 369, 375, 376, 377, 378, 379, 382, 384, 385, 386, 389], "expens": [1, 338, 339], "could": [1, 14, 17, 19, 141, 338, 339, 340, 341, 342, 361, 377], "time": [1, 6, 7, 8, 14, 18, 19, 40, 51, 65, 90, 127, 141, 149, 150, 156, 163, 173, 174, 178, 187, 201, 204, 214, 215, 235, 237, 238, 247, 252, 261, 263, 264, 274, 309, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 338, 339, 340, 341, 342, 357, 358, 359, 362, 364, 367, 369, 370, 389, 394], "order": [1, 5, 8, 13, 14, 144, 311, 312, 322, 323, 324, 325, 331, 332, 335, 338, 339, 342, 361, 370, 376, 377, 378, 379, 384, 385, 386, 387, 389], "reflect": [1, 5, 342], "fact": [1, 14, 40, 141], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 139, 141, 144, 148, 149, 150, 172, 201, 214, 215, 235, 261, 284, 321, 326, 329, 333, 334, 337, 338, 340, 341, 342, 357, 360, 361, 362, 364, 366, 367, 368, 369, 372, 377, 379, 380, 389, 394], "present": [1, 52, 127, 144, 342, 361, 370], "new": [1, 2, 5, 20, 26, 40, 51, 59, 62, 71, 78, 84, 100, 120, 121, 144, 154, 157, 163, 178, 185, 202, 216, 223, 236, 239, 247, 262, 265, 274, 287, 296, 299, 305, 307, 338, 340, 341, 342, 355, 358, 359, 360, 389], "success": [1, 2, 8, 50, 61, 318, 335, 354, 361, 362], "insofar": 1, "guarante": [1, 14, 141, 314, 318, 342, 354], "per": [1, 8, 14, 25, 37, 39, 40, 47, 65, 96, 97, 126, 141, 144, 167, 310, 338, 361, 362, 363, 364, 365, 366, 367, 368, 369, 375, 376, 377, 378, 379, 382, 384, 385, 386, 388, 393], "slurm": [1, 65, 98, 141, 338, 360, 362, 363, 364, 365, 366, 367, 369, 389], "job": [1, 6, 141, 342, 360, 361, 363, 364, 365, 366, 367, 369], "role": 1, "clear": [1, 2, 144, 341, 361], "should": [1, 2, 5, 6, 7, 9, 11, 12, 14, 18, 19, 25, 26, 31, 32, 33, 40, 41, 42, 49, 51, 53, 61, 66, 79, 117, 118, 125, 127, 136, 137, 138, 139, 140, 141, 142, 144, 146, 151, 183, 191, 269, 276, 278, 311, 312, 318, 334, 335, 336, 338, 339, 340, 342, 354, 355, 358, 359, 361, 362, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 393], "invoc": 1, "serial": [1, 46, 338, 340, 360, 361, 389], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 32, 33, 40, 41, 42, 43, 44, 48, 51, 52, 55, 58, 59, 60, 67, 71, 72, 75, 78, 79, 80, 84, 92, 95, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 114, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 141, 144, 146, 154, 157, 159, 161, 163, 167, 170, 171, 173, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 197, 200, 202, 205, 208, 210, 213, 216, 217, 219, 223, 226, 228, 230, 234, 239, 241, 243, 246, 247, 250, 252, 254, 256, 260, 265, 267, 270, 274, 276, 278, 280, 283, 285, 287, 288, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 321, 326, 328, 329, 330, 333, 335, 338, 339, 340, 341, 342, 347, 348, 350, 352, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 392, 393], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 40, 42, 43, 48, 51, 52, 53, 55, 57, 59, 85, 113, 115, 120, 123, 141, 144, 208, 219, 292, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 354, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 375, 376, 377, 378, 379, 382, 384, 385, 386, 388, 389, 390, 393], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 35, 40, 45, 51, 59, 70, 71, 78, 84, 100, 129, 144, 145, 146, 154, 157, 159, 160, 161, 163, 167, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 197, 200, 202, 205, 208, 210, 213, 216, 217, 219, 222, 223, 226, 228, 230, 232, 234, 236, 239, 241, 243, 246, 247, 250, 252, 254, 256, 258, 260, 262, 265, 267, 270, 273, 274, 275, 276, 278, 280, 283, 285, 287, 288, 290, 292, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 338, 340, 345, 347, 348, 350, 351, 352, 354, 357, 361, 370], "attribut": [1, 8, 9, 12, 13, 14, 46, 48, 55, 104, 110, 111, 146, 312, 328, 330, 361], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 42, 49, 51, 61, 113, 114, 125, 126, 141, 144, 183, 191, 197, 210, 222, 269, 276, 278, 280, 310, 311, 312, 314, 321, 322, 323, 324, 325, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 358, 359, 360, 361, 362, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395], "relat": [1, 6, 7, 11, 13, 14, 17, 141, 144, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 342, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 390], "inform": [1, 5, 6, 7, 8, 40, 100, 124, 135, 236, 262, 338, 340, 342, 362, 364, 373, 389, 390], "belong": [1, 10, 11, 12, 14, 17, 25, 37, 40, 47, 51, 71, 78, 84, 100, 115, 144, 146, 154, 157, 159, 161, 163, 167, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 197, 200, 202, 205, 208, 210, 213, 216, 217, 219, 222, 223, 226, 228, 230, 232, 234, 239, 241, 243, 246, 247, 250, 252, 254, 256, 258, 260, 265, 267, 270, 273, 274, 275, 276, 278, 280, 283, 285, 287, 288, 290, 292, 311, 312, 334, 335, 338, 340, 341, 347, 348, 350, 351, 352, 361, 394], "locat": [1, 5, 6, 9, 11, 14, 19, 40, 52, 117, 118, 123, 144, 318, 326, 338, 340, 342, 354, 359, 361, 362, 364, 368, 372, 375, 377, 380, 383, 389], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 127, 144, 149, 150, 201, 214, 215, 235, 261, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 315, 321, 326, 334, 336, 337, 338, 340, 361, 362, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393], "where": [1, 5, 7, 9, 14, 18, 40, 42, 51, 59, 61, 63, 66, 99, 115, 118, 123, 125, 127, 141, 144, 163, 296, 299, 302, 305, 307, 311, 312, 318, 326, 335, 337, 338, 340, 342, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 385, 387, 388, 389, 393, 394], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 40, 47, 51, 58, 96, 97, 99, 118, 124, 141, 144, 145, 148, 149, 160, 163, 167, 178, 201, 214, 223, 235, 247, 261, 274, 284, 296, 299, 305, 307, 318, 321, 329, 334, 335, 336, 338, 339, 340, 341, 342, 345, 354, 359, 360, 361, 362, 368, 370, 372, 373, 375, 376, 377, 378, 379, 380, 385, 386, 388, 389, 390, 393, 395], "below": [1, 5, 6, 14, 19, 25, 37, 40, 47, 96, 97, 141, 144, 163, 167, 178, 223, 247, 274, 315, 318, 334, 336, 338, 340, 342, 361, 362, 368, 372, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 389], "There": [1, 5, 6, 13, 19, 296, 299, 305, 307, 315, 333, 334, 336, 338, 341, 342, 358, 361, 362, 363, 364, 365, 366, 367, 369, 383, 389], "wai": [1, 5, 7, 13, 14, 40, 75, 80, 141, 144, 338, 340, 341, 342, 358, 360, 361, 368, 372, 379, 387], "list": [1, 2, 6, 7, 9, 11, 14, 18, 25, 40, 43, 51, 52, 57, 58, 59, 63, 90, 96, 97, 114, 117, 118, 123, 124, 127, 144, 146, 154, 157, 174, 189, 193, 197, 200, 210, 213, 228, 234, 243, 254, 258, 260, 270, 274, 280, 283, 285, 290, 338, 339, 340, 341, 342, 348, 359, 360, 361, 362, 364, 368, 369, 376, 377, 378, 385, 386, 389, 394, 395], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 37, 40, 42, 43, 47, 51, 52, 59, 115, 123, 124, 141, 144, 311, 312, 314, 321, 328, 330, 334, 335, 336, 338, 339, 340, 342, 355, 359, 361, 362, 364, 368, 387, 388, 393], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 40, 46, 51, 67, 73, 74, 83, 112, 118, 135, 141, 144, 146, 151, 154, 157, 193, 194, 197, 210, 222, 229, 280, 296, 297, 298, 299, 302, 303, 304, 305, 307, 310, 311, 312, 314, 315, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 348, 349, 357, 359, 361, 362, 368, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 393, 394], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 35, 46, 59, 124, 125, 141, 144, 296, 299, 305, 307, 310, 311, 312, 315, 318, 326, 328, 330, 333, 334, 335, 336, 338, 340, 341, 342, 361, 362, 368, 369, 370, 372, 377, 379, 382, 383, 384, 388, 389, 393, 395], "find": [1, 6, 7, 15, 61, 74, 98, 141, 311, 312, 313, 318, 340, 341, 342, 358, 361, 362, 389], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 51, 127, 141, 144, 318, 320, 322, 323, 324, 325, 331, 332, 333, 335, 338, 340, 341, 354, 357, 360, 361, 362, 364, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 40, 53, 106, 111, 112, 120, 141, 144, 326, 334, 335, 336, 338, 339, 340, 341, 342, 359, 361, 362, 363, 377, 389, 395], "would": [1, 2, 5, 9, 11, 14, 18, 19, 25, 37, 40, 47, 52, 96, 97, 100, 141, 144, 163, 167, 178, 223, 247, 274, 321, 336, 338, 340, 341, 342, 358, 360, 361, 368, 372, 389], "ident": [1, 2, 5, 18, 176, 184, 192, 321, 326, 329, 338, 339, 341, 347, 361, 375, 380], "self": [1, 9, 11, 12, 14, 17, 18, 19, 53, 86, 144, 335, 338, 340, 341, 361, 362], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 44, 58, 92, 95, 101, 102, 103, 104, 108, 109, 110, 119, 126, 127, 129, 144, 146, 154, 157, 159, 160, 163, 174, 296, 299, 300, 301, 305, 306, 307, 308, 309, 311, 312, 315, 335, 336, 337, 338, 341, 342, 344, 354, 355, 359, 361, 362, 368, 373, 388, 389, 390, 393], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 19, 73, 141, 144, 318, 326, 338, 342, 359, 361, 362, 372, 379, 387, 389], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 40, 41, 42, 53, 59, 78, 114, 131, 141, 144, 173, 313, 318, 321, 326, 334, 337, 338, 340, 341, 342, 355, 359, 360, 361, 362, 368, 372, 375, 376, 377, 378, 379, 380, 385, 386, 389], "As": [1, 4, 5, 6, 9, 11, 13, 18, 73, 144, 334, 338, 339, 340, 341, 342, 361, 362, 372, 376, 377, 378, 379, 385, 386, 387, 394], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 37, 40, 41, 47, 51, 141, 144, 156, 160, 165, 180, 186, 204, 225, 249, 321, 328, 329, 330, 333, 340, 341, 342, 359, 360, 361, 362, 376, 377, 378, 379, 385, 386, 389, 395], "suit": [1, 2, 6, 7, 12, 18, 40, 51, 66, 67, 113, 114, 115, 116, 118, 141, 321, 337, 338, 340, 342, 359, 360, 361, 362, 363, 364, 365, 366, 369, 373, 375], "proce": 1, "iter": [1, 160, 161, 318, 326, 362, 370, 380], "through": [1, 2, 118, 144, 230, 256, 341, 342, 355, 361, 383], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 35, 40, 41, 42, 43, 62, 71, 73, 74, 102, 109, 119, 121, 125, 134, 141, 146, 151, 167, 205, 217, 288, 310, 311, 312, 313, 314, 316, 317, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 358, 359, 360, 362, 364, 368, 370, 372, 379, 380, 382, 386, 389, 394, 395], "setup_complet": 1, "ha": [1, 5, 6, 9, 11, 14, 15, 25, 37, 40, 41, 43, 47, 52, 53, 98, 106, 111, 127, 136, 138, 139, 141, 144, 163, 166, 167, 178, 223, 247, 274, 301, 311, 312, 318, 322, 323, 324, 326, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 354, 355, 358, 359, 361, 362, 372, 375, 377, 380, 382, 383, 387, 389], "been": [1, 5, 6, 14, 40, 43, 48, 52, 53, 55, 106, 118, 123, 136, 138, 139, 141, 144, 146, 153, 166, 200, 213, 234, 243, 260, 270, 283, 285, 290, 301, 318, 335, 338, 340, 341, 342, 354, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374, 375, 389], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 41, 42, 49, 52, 53, 54, 59, 144, 166, 173, 175, 183, 191, 199, 212, 221, 222, 233, 245, 259, 269, 272, 282, 296, 299, 305, 307, 334, 335, 340, 342, 346, 355, 360, 363, 364, 365, 366, 367, 369, 389], "initi": [1, 7, 8, 40, 127, 144, 149, 160, 163, 174, 176, 177, 181, 184, 185, 187, 192, 201, 205, 214, 217, 222, 223, 226, 230, 235, 239, 241, 246, 247, 250, 252, 261, 265, 267, 273, 275, 276, 278, 288, 301, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 351, 358, 359, 360, 362, 370, 372, 374, 394, 395], "fals": [1, 9, 13, 14, 18, 19, 25, 40, 42, 52, 57, 67, 69, 113, 114, 118, 123, 124, 127, 141, 144, 167, 222, 223, 276, 278, 309, 310, 320, 334, 338, 340, 355, 361, 362, 364, 366, 367, 369, 375, 383], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 49, 72, 79, 141, 144, 183, 191, 207, 269, 334, 335, 338, 340, 341, 359, 360, 361, 370, 372, 376, 377, 378, 379, 380, 385, 386, 395], "skip": [1, 5, 8, 124, 342, 394], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 52, 61, 62, 63, 124, 125, 126, 127, 131, 136, 137, 138, 139, 140, 141, 142, 144, 167, 223, 275, 310, 312, 320, 334, 338, 342, 361, 362, 363, 364, 365, 367, 368, 369, 375, 389, 395], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 32, 33, 40, 41, 46, 51, 52, 59, 61, 62, 67, 113, 124, 141, 144, 304, 311, 312, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 360, 361, 363, 364, 365, 366, 367, 369, 372, 375, 377, 379, 387, 389, 395], "complet": [1, 5, 8, 27, 28, 29, 111, 361, 389], "alreadi": [1, 4, 5, 6, 11, 14, 52, 53, 62, 141, 144, 166, 274, 301, 338, 340, 341, 342, 361, 362, 368, 372, 376, 377, 378, 385, 386, 389], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 40, 51, 144, 154, 157, 161, 163, 178, 202, 216, 223, 239, 247, 265, 274, 287, 310, 314, 321, 326, 328, 329, 330, 338, 339, 340, 341, 342, 360, 361, 372], "parallel": [1, 5, 17, 25, 37, 40, 46, 47, 141, 167, 338, 341, 342, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389, 395], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 36, 42, 59, 72, 73, 75, 88, 127, 136, 137, 138, 139, 140, 141, 142, 144, 167, 172, 176, 184, 192, 296, 299, 305, 307, 310, 311, 312, 313, 315, 318, 321, 326, 329, 334, 338, 340, 341, 342, 347, 354, 359, 360, 362, 368, 375, 376, 377, 378, 380, 385, 386, 389, 394], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 34, 35, 36, 40, 41, 42, 43, 46, 48, 49, 50, 51, 53, 55, 57, 61, 62, 63, 70, 87, 88, 91, 92, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 146, 149, 150, 151, 153, 154, 157, 160, 163, 165, 167, 172, 174, 178, 180, 183, 186, 191, 201, 214, 215, 225, 235, 249, 261, 269, 295, 310, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 339, 340, 341, 342, 348, 354, 355, 357, 358, 359, 360, 364, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 383, 385, 386, 388, 389, 392, 393, 395], "mode": [1, 5, 14, 335, 342, 359, 360, 361, 389], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 141, 144, 176, 184, 192, 318, 321, 326, 338, 341, 342, 347, 354, 359, 361, 362, 368, 369, 375, 376, 377, 378, 380, 385, 386], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 32, 33, 40, 41, 44, 51, 59, 92, 95, 99, 118, 119, 129, 130, 131, 144, 154, 157, 167, 170, 171, 338, 340, 341, 361, 377], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 39, 63, 141, 144, 167, 322, 323, 324, 325, 331, 332, 335, 336, 338, 340, 341, 342, 359, 361, 366, 368, 374, 389, 395], "constructor": [1, 9, 14, 144, 321, 328, 329, 330, 334, 361], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 38, 40, 96, 97, 107, 125, 321, 329, 335, 338, 340, 341, 342, 361, 388, 393, 394], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 32, 33, 48, 51, 55, 62, 92, 119, 130, 131, 141, 144, 154, 157, 160, 163, 165, 170, 171, 180, 186, 225, 249, 340, 341, 361, 362, 389], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 40, 42, 51, 52, 54, 59, 66, 69, 71, 78, 84, 99, 100, 115, 117, 123, 129, 140, 141, 142, 146, 154, 157, 159, 161, 163, 166, 167, 175, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 197, 199, 200, 202, 205, 208, 210, 212, 213, 216, 217, 219, 221, 222, 223, 226, 228, 230, 232, 233, 234, 239, 241, 243, 245, 246, 247, 250, 252, 254, 256, 258, 259, 260, 265, 267, 270, 272, 273, 274, 275, 276, 278, 280, 282, 283, 285, 287, 288, 290, 292, 334, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 350, 351, 352, 355, 359, 360, 361, 362, 368, 371, 374, 394, 395], "subdir": [1, 5, 9, 17, 25, 40, 51, 52, 71, 78, 84, 100, 144, 146, 154, 157, 159, 163, 167, 178, 200, 202, 205, 208, 213, 216, 217, 219, 223, 234, 239, 247, 260, 265, 274, 283, 285, 287, 288, 290, 292, 338, 340, 348, 361], "now": [1, 6, 141, 338, 342, 361, 362, 368], "rel": [1, 2, 5, 9, 17, 18, 42, 43, 52, 57, 59, 117, 118, 123, 124, 154, 157, 160, 161, 163, 167, 178, 318, 335, 338, 340, 341, 342, 348, 354, 359, 361, 375, 379, 380, 383, 389, 395], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 40, 42, 59, 141, 144, 321, 338, 342, 358, 361, 372], "than": [1, 5, 6, 8, 9, 11, 13, 14, 40, 42, 47, 59, 141, 144, 163, 178, 223, 247, 274, 321, 338, 339, 341, 342, 358, 361, 372, 375], "parent": [1, 35, 144, 322, 323, 324, 325, 328, 330, 331, 332, 334, 335, 338], "resid": [1, 5, 9, 42, 144, 146, 200, 213, 234, 260, 283, 285, 290, 336, 338, 340], "insid": [1, 12, 336, 338, 341, 376, 377, 378, 385, 386], "situat": [1, 17, 31, 32, 33, 342, 361, 389], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 31, 32, 40, 41, 42, 124, 162, 223, 318, 321, 326, 329, 334, 336, 338, 340, 341, 342, 359, 361, 362, 375, 380, 389, 394, 395], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 144, 284, 318, 327, 335, 340, 361, 377, 386, 388, 393, 394], "with_viz": [1, 322, 323, 324, 325, 331, 332, 340, 376, 377, 378, 379, 385, 386], "base": [1, 5, 8, 13, 14, 16, 18, 20, 40, 42, 44, 51, 57, 77, 82, 84, 115, 117, 118, 123, 127, 141, 144, 153, 154, 157, 160, 161, 163, 166, 167, 169, 172, 178, 202, 205, 208, 216, 217, 219, 287, 288, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 315, 318, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 335, 337, 338, 340, 341, 342, 354, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 376, 378, 379, 385, 386, 395], "mesh": [1, 5, 7, 10, 17, 25, 40, 88, 89, 100, 102, 109, 126, 127, 146, 147, 149, 150, 154, 155, 157, 158, 160, 161, 164, 167, 168, 169, 172, 174, 177, 179, 181, 197, 200, 201, 202, 203, 205, 208, 210, 213, 214, 215, 216, 217, 219, 222, 223, 224, 226, 230, 234, 235, 236, 239, 240, 241, 243, 248, 250, 260, 261, 262, 265, 266, 267, 270, 273, 275, 276, 280, 283, 285, 287, 288, 290, 292, 296, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 350, 351, 359, 360, 362, 372, 374, 389, 394], "init": [1, 5, 6, 7, 9, 14, 18, 19, 37, 47, 144, 146, 154, 157, 176, 177, 184, 185, 187, 192, 202, 208, 216, 219, 222, 223, 230, 239, 246, 247, 252, 265, 287, 292, 318, 320, 335, 338, 340, 341, 342, 354, 362, 370, 375, 377, 380, 382, 384, 389], "forward": [1, 5, 7, 9, 14, 40, 144, 146, 154, 157, 160, 161, 163, 174, 177, 185, 187, 208, 219, 222, 252, 273, 275, 292, 318, 335, 338, 340, 341, 351, 354, 362, 370, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 393], "resolut": [1, 9, 13, 14, 17, 71, 74, 78, 79, 83, 101, 105, 108, 144, 146, 147, 151, 153, 154, 157, 159, 163, 166, 176, 177, 178, 181, 184, 185, 187, 189, 192, 197, 200, 202, 210, 213, 216, 222, 223, 226, 234, 239, 241, 243, 252, 258, 260, 265, 267, 270, 280, 283, 285, 287, 290, 311, 312, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 362, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393, 395], "singl": [1, 5, 8, 9, 19, 40, 127, 141, 272, 273, 275, 276, 278, 333, 338, 340, 341, 346, 347, 348, 350, 351, 352, 354, 355, 359, 361, 368, 373, 376, 377, 378, 381, 382, 384, 385, 386, 390, 391], "analysi": [1, 6, 9, 19, 144, 321, 329, 340, 341, 359, 360, 362, 376, 377, 378, 382, 383, 384, 385, 386, 395], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 41, 42, 43, 52, 53, 54, 60, 77, 82, 87, 119, 120, 121, 130, 131, 134, 135, 141, 144, 153, 165, 166, 175, 180, 186, 199, 212, 221, 225, 233, 245, 249, 259, 272, 282, 334, 335, 338, 340, 341, 342, 346, 359, 361, 362, 367, 369, 376, 377, 378, 385, 386], "remap": [1, 10, 19, 329, 360, 377, 379, 383, 388, 393], "visual": [1, 10, 13, 17, 222, 230, 243, 256, 270, 322, 323, 324, 325, 326, 328, 330, 331, 332, 334, 338, 340, 359, 360, 376, 377, 378, 379, 380, 382, 384, 385, 386, 388, 393], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 25, 31, 32, 33, 42, 123, 141, 319, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 359, 360, 361, 362, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395], "spheric": [1, 5, 154, 309, 322, 323, 324, 325, 331, 332, 340, 376, 377, 378, 385, 386, 394], "qu": [1, 5, 11, 144, 340, 361, 362, 374, 376, 377, 378, 379, 385, 386, 394], "base_mesh": [1, 5, 13, 71, 78, 146, 166, 205, 208, 217, 219, 287, 288, 292, 338, 340, 361, 376, 377, 378, 385, 386], "60km": [1, 5, 340, 376, 377, 378, 385, 386], "90km": [1, 5], "120km": [1, 5, 340], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 11, 166, 340], "map": [1, 8, 17, 20, 31, 32, 33, 78, 79, 100, 125, 126, 127, 167, 170, 171, 340, 342, 362], "viz": [1, 5, 19, 144, 197, 210, 222, 280, 338, 340, 376, 378, 385, 386], "two": [1, 5, 6, 10, 18, 19, 124, 144, 184, 194, 229, 311, 312, 321, 322, 326, 329, 333, 334, 335, 338, 339, 341, 342, 347, 349, 361, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 392], "first": [1, 6, 9, 14, 15, 90, 118, 141, 144, 311, 312, 321, 326, 328, 329, 330, 333, 338, 340, 341, 342, 358, 361, 363, 364, 365, 366, 367, 368, 369, 375, 377, 379, 380, 387, 389], "verbos": [1, 5, 6, 67, 69, 141, 338, 361, 394], "10": [1, 9, 13, 73, 141, 318, 321, 326, 328, 330, 334, 335, 361, 362, 368, 370, 372, 375, 376, 378, 379, 380, 382, 383, 384, 385, 387, 395], "name": [1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 43, 51, 53, 61, 62, 63, 65, 66, 67, 71, 78, 84, 88, 92, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 134, 141, 144, 146, 147, 148, 149, 150, 151, 154, 157, 159, 160, 161, 163, 166, 167, 174, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 201, 202, 205, 208, 214, 215, 216, 217, 219, 222, 223, 226, 235, 239, 246, 247, 250, 252, 254, 261, 265, 274, 280, 283, 284, 285, 287, 288, 290, 292, 295, 310, 334, 335, 338, 340, 341, 342, 348, 350, 352, 359, 361, 362, 369, 375, 389, 394], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 90, 144, 149, 150, 173, 178, 201, 214, 215, 235, 261, 274, 311, 312, 333, 338, 341, 370, 375, 376, 378, 380, 385, 387, 392], "symlink": [1, 5, 8, 9, 14, 18, 40, 42, 51, 52, 340, 341, 342, 376, 377, 378, 385, 386], "what": [1, 2, 6, 11, 13, 17, 141, 280, 340, 341, 361, 369, 388, 389, 393], "follow": [1, 4, 5, 7, 9, 11, 13, 14, 19, 70, 141, 144, 146, 296, 299, 305, 307, 318, 320, 338, 339, 340, 342, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 392], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 40, 42, 51, 52, 54, 67, 71, 78, 84, 100, 117, 144, 146, 154, 157, 159, 163, 167, 178, 200, 202, 205, 208, 213, 216, 217, 219, 223, 234, 239, 241, 243, 247, 260, 265, 267, 270, 274, 276, 278, 283, 285, 287, 288, 290, 292, 334, 336, 338, 340, 341, 361, 388, 389, 393, 395], "bold": [1, 340], "elsewher": [1, 342], "tree": [1, 7, 119, 121, 135, 311, 312, 313, 340, 390], "thu": [1, 2, 7, 14, 342, 361, 376, 377, 378, 385, 386], "similar": [1, 2, 5, 9, 12, 13, 14, 137, 140, 141, 142, 144, 334, 336, 341, 342, 361, 362, 372, 376, 378, 385, 386, 388, 389], "had": [1, 141], "maintain": [1, 318, 376, 389], "local": [1, 5, 6, 8, 9, 11, 18, 42, 318, 336, 338, 342, 354, 358, 361, 362, 368, 369, 370, 372], "debug": [1, 8, 136, 137, 138, 139, 140, 141, 142, 144, 342, 361, 364, 365, 369, 376, 385], "easier": [1, 14, 338, 340, 341, 342, 362, 389, 394], "symbol": [1, 62, 338], "link": [1, 2, 7, 9, 11, 14, 17, 42, 48, 55, 62, 141, 167, 334, 338, 340, 342, 361, 367, 368, 373, 389, 390], "were": [1, 50, 63, 141, 274, 316, 317, 338, 341, 359, 361, 362, 366, 372], "even": [1, 6, 12, 13, 14, 42, 59, 141, 338, 341, 342, 361, 362, 368, 389], "compass": [1, 5, 6, 338, 341, 359, 361], "though": [1, 11, 40, 340, 341, 361], "global": [1, 13, 17, 104, 105, 110, 280, 312, 322, 323, 324, 325, 331, 332, 334, 338, 339, 341, 359, 360, 361, 362, 369, 376, 377, 378, 379, 385, 386, 388, 389, 393, 395], "dynamic_adjust": [1, 14, 362], "allow": [1, 2, 6, 8, 17, 18, 25, 37, 40, 47, 59, 124, 141, 144, 167, 311, 312, 338, 359, 361, 362, 368, 372, 376, 377, 378, 385, 386, 387, 395], "one": [1, 2, 5, 6, 7, 10, 11, 14, 17, 18, 19, 25, 39, 40, 42, 43, 50, 51, 57, 62, 117, 118, 123, 141, 144, 162, 166, 167, 184, 274, 311, 312, 318, 321, 322, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 340, 341, 342, 347, 357, 358, 359, 360, 362, 368, 369, 372, 375, 376, 377, 378, 380, 384, 385, 386, 388, 389, 392, 393, 394, 395], "input": [1, 5, 8, 10, 11, 17, 35, 40, 41, 42, 43, 49, 88, 144, 153, 160, 183, 191, 269, 315, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 361, 387], "port": [1, 361, 369], "instead": [1, 5, 6, 12, 14, 15, 25, 114, 136, 141, 338, 341, 342, 359, 361, 376, 377, 378, 385, 386, 389, 394], "seri": [1, 14, 144, 189, 195, 254, 323, 325, 328, 357, 361, 370, 374, 380], "indic": [1, 7, 8, 14, 17, 18, 19, 40, 41, 111, 118, 127, 141, 144, 302, 311, 312, 314, 336, 338, 358, 361, 362, 372, 380, 387], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 40, 41, 320, 338, 340, 341, 342, 361, 364, 366, 367, 369, 389], "ran": [1, 112], "ico": [1, 5, 144, 340, 361, 374, 376, 377, 378, 385, 386, 394], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 118, 123, 141, 167, 318, 335, 338, 342, 354, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389], "runtim": [1, 8, 14, 30, 46, 144, 156, 165, 180, 186, 204, 225, 249, 338, 361, 380], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 73, 101, 105, 108, 124, 126, 127, 136, 137, 138, 139, 140, 141, 142, 144, 296, 299, 304, 305, 307, 310, 311, 312, 320, 322, 323, 324, 326, 331, 332, 334, 338, 341, 342, 355, 358, 361, 362, 364, 368, 370, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393], "01": [1, 14, 144, 355, 361, 380, 383, 387, 392], "00": [1, 14, 18, 144, 340, 355, 361, 367, 369, 389], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 389], "02": [1, 364], "59": 1, "icos_map_60km": 1, "20": [1, 187, 252, 321, 326, 329, 339, 361, 375, 383, 387], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 6, 9, 14, 59, 141, 321, 326, 329, 341, 342, 376, 377, 378, 385, 386, 387], "mechan": [1, 338], "prevent": [1, 338], "expect": [1, 2, 12, 17, 141, 144, 335, 338, 342, 361], "affect": [1, 6, 322, 324, 331, 332, 338, 342, 361, 379], "howev": [1, 13, 338, 339, 340, 342, 361], "perform": [1, 2, 5, 8, 14, 17, 18, 40, 45, 46, 49, 50, 71, 124, 141, 144, 154, 157, 163, 177, 178, 183, 187, 191, 202, 216, 222, 223, 239, 247, 252, 265, 269, 273, 274, 275, 287, 315, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 338, 339, 340, 351, 359, 360, 361, 362, 368, 375, 380, 394], "successfulli": [1, 50, 361], "after": [1, 5, 6, 7, 9, 11, 17, 18, 19, 40, 42, 43, 64, 85, 106, 111, 141, 297, 298, 301, 318, 322, 324, 325, 331, 332, 335, 338, 340, 342, 354, 361, 362, 364, 367, 369, 377, 379, 389, 392], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 32, 33, 40, 41, 48, 55, 112, 118, 123, 127, 130, 139, 141, 144, 146, 151, 153, 200, 213, 234, 243, 260, 270, 283, 285, 290, 314, 318, 321, 328, 329, 330, 334, 336, 338, 339, 340, 341, 342, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374, 375, 376, 377, 378, 379, 380, 385, 386, 388, 389, 394, 395], "remov": [1, 5, 14, 24, 54, 64, 114, 321, 326, 328, 329, 330, 340, 342, 361], "longer": [1, 184, 321, 326, 329, 339, 347, 361, 375, 376, 377, 378, 379, 380, 385, 386], "about": [1, 5, 6, 7, 8, 12, 14, 40, 100, 129, 144, 334, 338, 340, 341, 342, 361, 362, 364, 379, 386], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 52, 59, 79, 141, 144, 165, 180, 186, 225, 249, 318, 322, 323, 324, 325, 331, 332, 335, 338, 340, 341, 342, 354, 355, 358, 360, 361, 362, 363, 368, 369, 372, 375, 376, 377, 378, 385, 386, 389, 394], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 141, 144, 318, 320, 335, 338, 339, 340, 341, 355, 358, 362, 363, 364, 365, 366, 367, 368, 369, 373, 389], "enforc": [1, 320, 342], "framework": [1, 5, 7, 9, 12, 13, 14, 113, 318, 334, 335, 338, 340, 354, 359, 360, 361, 370, 373, 387, 388, 390, 393, 395], "propos": [1, 2], "close": [1, 6, 74, 141, 326, 360, 376, 377, 378, 385, 386], "root": [1, 42, 141, 144, 318, 335, 338, 341, 342, 354, 359, 362, 363, 364, 365, 366, 367, 368, 369, 372, 389], "live": [1, 52, 340, 380, 389], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 31, 32, 39, 42, 50, 72, 79, 80, 83, 86, 100, 106, 124, 144, 167, 170, 171, 184, 193, 228, 236, 262, 296, 299, 305, 307, 310, 311, 312, 315, 317, 322, 323, 324, 325, 331, 332, 335, 336, 338, 340, 341, 347, 348, 368, 370, 372, 375, 376, 379, 380, 382, 383, 384], "think": [1, 5, 361], "condit": [1, 7, 40, 144, 149, 160, 163, 177, 181, 201, 205, 214, 217, 222, 223, 226, 230, 235, 239, 241, 250, 261, 265, 267, 273, 275, 276, 278, 288, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 351, 357, 359, 360, 362, 370, 374, 394, 395], "shown": [1, 14, 19, 141, 336, 370, 387], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 37, 40, 41, 42, 43, 47, 51, 60, 63, 75, 78, 80, 101, 105, 106, 108, 117, 118, 123, 127, 136, 137, 138, 139, 140, 141, 142, 144, 222, 309, 311, 312, 315, 318, 321, 328, 329, 330, 334, 335, 336, 338, 339, 340, 341, 342, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 389, 394, 395], "simpli": [1, 14, 18, 59, 141, 177, 222, 335, 338, 340, 342, 361, 372, 389, 394], "prefer": [1, 2, 141, 338, 339, 361, 362], "convent": [1, 144, 338, 342, 361], "futur": [1, 13, 46, 127, 338, 341, 359, 360, 361, 362, 379, 387, 389, 395], "current": [1, 2, 5, 6, 8, 11, 25, 37, 40, 47, 124, 141, 144, 167, 318, 333, 335, 338, 341, 342, 344, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 380, 384, 387, 389, 394, 395], "independ": [1, 2, 5, 6, 339, 359], "yyyi": 2, "mm": [2, 144, 173], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 40, 41, 42, 43, 46, 49, 51, 52, 54, 57, 59, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 83, 84, 88, 89, 90, 92, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 134, 135, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 173, 176, 177, 178, 179, 181, 183, 184, 185, 187, 189, 191, 192, 193, 195, 197, 200, 201, 202, 203, 205, 208, 210, 213, 214, 215, 216, 217, 219, 222, 223, 224, 226, 228, 230, 232, 234, 235, 239, 240, 241, 243, 246, 247, 248, 250, 252, 254, 256, 258, 260, 261, 265, 266, 267, 269, 270, 273, 274, 275, 276, 278, 280, 283, 284, 285, 287, 288, 290, 292, 296, 297, 298, 299, 302, 303, 304, 305, 307, 309, 310, 311, 312, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 348, 350, 351, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395], "purpos": [2, 334, 341, 361, 395], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 33, 79, 125, 126, 131, 141, 144, 167, 170, 230, 256, 294, 296, 299, 305, 307, 318, 322, 323, 324, 325, 331, 332, 333, 334, 335, 338, 339, 341, 342, 354, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 393], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 37, 40, 41, 42, 43, 46, 47, 51, 52, 57, 61, 62, 78, 79, 84, 90, 96, 97, 100, 104, 110, 111, 113, 114, 119, 121, 124, 127, 130, 135, 136, 138, 139, 141, 144, 149, 150, 154, 156, 157, 161, 163, 165, 166, 167, 176, 177, 178, 180, 181, 184, 185, 186, 187, 189, 192, 193, 195, 201, 204, 214, 215, 222, 223, 225, 226, 228, 230, 235, 246, 247, 249, 250, 252, 254, 261, 274, 296, 299, 305, 307, 310, 311, 312, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395], "summar": 2, "process": [2, 6, 8, 14, 35, 96, 97, 135, 338, 341, 342, 354, 359, 360, 361, 380], "It": [2, 5, 6, 9, 14, 17, 40, 46, 125, 144, 322, 323, 324, 325, 326, 328, 330, 331, 332, 334, 338, 339, 340, 341, 342, 359, 361, 362, 368, 377, 382, 384, 385, 386], "code": [2, 5, 7, 9, 12, 14, 40, 144, 318, 334, 335, 338, 339, 340, 344, 354, 359, 360, 362, 371, 375, 380, 387, 389], "do": [2, 5, 9, 11, 14, 17, 18, 130, 141, 144, 334, 338, 340, 342, 358, 359, 360, 361, 368, 376, 377, 378, 379, 385, 386, 389], "doe": [2, 6, 9, 12, 14, 338, 344, 360, 361, 368, 380], "primari": [2, 5, 9, 361, 394], "challeng": 2, "respect": [2, 8, 9, 14, 19, 144, 147, 311, 312, 326, 338, 341, 376, 377, 378, 380, 385, 386, 388, 393], "softwar": [2, 88, 367, 369, 389], "appropri": [2, 5, 6, 14, 15, 26, 83, 89, 141, 144, 318, 321, 326, 328, 329, 330, 333, 335, 336, 338, 342, 354, 360, 361, 362, 368, 388, 389, 393], "final": [2, 5, 6, 7, 8, 141, 160, 311, 312, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 338, 340, 357, 361, 370, 377, 385], "statement": [2, 12, 338, 359], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 25, 26, 27, 28, 29, 35, 49, 78, 124, 144, 183, 191, 239, 265, 269, 294, 318, 320, 321, 326, 328, 329, 330, 333, 335, 338, 342, 354, 360, 361, 362, 368, 376, 377, 378, 379, 382, 384, 385, 386, 389], "regard": 2, "last": [2, 144, 339, 342, 375, 389], "modifi": [2, 8, 9, 13, 14, 25, 39, 53, 119, 121, 144, 167, 188, 253, 321, 326, 328, 329, 330, 338, 340, 342, 360, 361, 362, 375, 380, 389], "your": [2, 4, 5, 6, 11, 141, 318, 341, 342, 354, 358, 361, 362, 363, 364, 368, 369, 376, 377, 378, 385, 386, 389], "appear": [2, 141, 338, 361], "under": [2, 17, 40, 41, 141, 144, 320, 338, 339, 342, 360, 372, 380, 395], "head": [2, 320, 364], "correspond": [2, 6, 7, 17, 124, 141, 144, 146, 314, 318, 326, 338, 342, 354, 375], "discuss": [2, 6, 144, 322, 323, 324, 325, 331, 332, 338, 341, 361, 375, 380], "technic": [2, 7], "issu": [2, 6, 338, 339, 342], "focu": [2, 361], "model": [2, 5, 10, 25, 26, 30, 31, 32, 33, 35, 40, 42, 117, 118, 123, 129, 130, 134, 136, 137, 138, 139, 140, 141, 142, 150, 154, 156, 157, 165, 176, 178, 180, 184, 185, 186, 187, 192, 204, 215, 225, 249, 252, 274, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 338, 339, 341, 342, 347, 354, 358, 359, 360, 362, 368], "To": [2, 5, 6, 12, 17, 18, 124, 140, 141, 142, 144, 318, 338, 341, 342, 354, 355, 361, 363, 364, 368, 372, 376, 377, 378, 385, 386, 389], "extent": [2, 13, 17, 361, 375], "possibl": [2, 8, 11, 74, 320, 322, 323, 324, 325, 326, 331, 332, 338, 339, 340, 341, 360, 361, 372, 379], "other": [2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 40, 41, 43, 51, 59, 111, 127, 136, 194, 229, 316, 317, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 340, 341, 342, 349, 358, 359, 360, 362, 375, 376, 377, 378, 385, 386, 395], "clean": [2, 4, 5, 6, 64, 118, 123, 338, 340, 342], "plan": [2, 13, 144, 318, 328, 330, 338, 354, 359, 363, 364, 365, 366, 367, 369, 382, 384, 395], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 25, 118, 136, 141, 144, 148, 149, 201, 214, 235, 261, 284, 320, 321, 326, 328, 329, 330, 333, 338, 341, 342, 361, 362, 370, 373, 376, 377, 378, 379, 382, 384, 385, 386, 389, 390, 395], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 136, 137, 138, 139, 140, 141, 142, 144, 318, 335, 338, 340, 341, 342, 354, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 376, 377, 378, 379, 380, 385, 386, 389, 394, 395], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 40, 42, 43, 48, 50, 51, 55, 100, 104, 110, 124, 130, 141, 144, 163, 167, 173, 178, 223, 247, 274, 311, 312, 318, 321, 326, 328, 329, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 354, 357, 358, 359, 360, 361, 362, 368, 370, 373, 377, 380, 385, 388, 389], "intend": [2, 6, 8, 9, 339, 362, 384, 395], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 67, 124, 309, 320, 322, 323, 324, 325, 331, 332, 336, 338, 341, 342, 358, 361, 379, 389], "pde": 2, "solver": [2, 340, 342, 360, 389], "well": [2, 6, 9, 12, 13, 141, 144, 302, 314, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 338, 342, 359, 361, 362, 377, 389, 395], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 26, 27, 28, 31, 32, 33, 40, 41, 42, 50, 51, 53, 54, 57, 61, 62, 88, 92, 97, 101, 102, 103, 104, 105, 108, 109, 110, 112, 114, 115, 118, 119, 120, 121, 124, 127, 130, 131, 134, 135, 141, 146, 149, 150, 156, 160, 161, 167, 170, 171, 178, 200, 204, 207, 208, 213, 215, 219, 223, 234, 235, 243, 247, 260, 261, 270, 283, 285, 290, 292, 303, 310, 311, 312, 313, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 340, 341, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 392, 393, 394, 395], "low": [2, 127, 379], "variabl": [2, 5, 11, 13, 19, 20, 25, 40, 43, 50, 51, 59, 71, 78, 84, 88, 100, 101, 105, 108, 124, 127, 129, 130, 135, 141, 144, 146, 147, 148, 149, 150, 151, 154, 157, 159, 163, 167, 174, 178, 181, 187, 189, 193, 197, 201, 208, 210, 214, 215, 219, 223, 226, 228, 234, 235, 236, 239, 241, 243, 247, 252, 254, 258, 260, 261, 262, 265, 267, 270, 274, 280, 283, 284, 285, 290, 292, 296, 299, 300, 301, 305, 306, 307, 308, 314, 315, 320, 326, 333, 338, 341, 342, 348, 349, 354, 358, 361, 368, 370, 373, 375, 380, 388, 389, 390, 393], "declar": [2, 7], "interfac": [2, 10, 294, 295, 296, 299, 305, 307, 310, 315, 326, 341, 342, 360, 361, 372], "sequenc": [2, 5, 14, 144, 309, 322, 323, 324, 325, 331, 332, 337, 338, 341, 359, 361, 389, 394, 395], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 26, 31, 32, 37, 40, 42, 47, 48, 51, 52, 53, 55, 62, 96, 97, 98, 100, 111, 124, 127, 136, 137, 138, 139, 140, 141, 142, 144, 154, 157, 159, 163, 167, 170, 171, 173, 178, 223, 247, 274, 321, 326, 329, 338, 340, 341, 342, 355, 358, 359, 361, 362, 368, 369, 372, 376, 377, 378, 379, 380, 385, 386, 388, 389, 393], "want": [2, 5, 6, 11, 14, 17, 18, 53, 141, 144, 338, 340, 342, 358, 361, 362, 368, 369, 387, 389, 395], "math": 2, "syntax": [2, 144, 361], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 342, 359, 361, 389], "2": [2, 6, 13, 14, 15, 18, 41, 127, 141, 144, 192, 221, 226, 320, 321, 322, 324, 326, 331, 332, 336, 339, 342, 348, 355, 361, 362, 364, 368, 372, 373, 375, 377, 379, 380, 381, 382, 383, 384, 389], "2ab": 2, "imag": [2, 7, 19, 125, 126, 127, 310, 334, 361, 388, 393], "keep": [2, 5, 6, 9, 14, 25, 59, 322, 323, 324, 325, 331, 332, 334, 335, 338, 340, 342, 361, 388, 393], "mind": [2, 5, 361], "quit": [2, 336, 338, 340, 361, 380], "small": [2, 9, 46, 141, 311, 312, 334, 338, 361, 363, 364, 371, 372, 380, 385, 387, 389], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 26, 31, 32, 36, 37, 40, 42, 46, 47, 51, 59, 63, 83, 96, 97, 100, 113, 114, 115, 118, 127, 131, 141, 144, 146, 163, 167, 170, 171, 173, 178, 223, 247, 274, 296, 299, 302, 305, 307, 309, 311, 312, 313, 315, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395], "png": [2, 13, 19, 310, 322, 323, 324, 325, 331, 332, 338, 361], "okai": [2, 6, 338, 361], "size": [2, 13, 19, 73, 74, 83, 126, 127, 144, 169, 172, 174, 310, 334, 361, 362, 375, 377, 379, 382, 383, 384, 387, 388, 393], "repo": [2, 5, 6, 141, 318, 354, 360, 361, 390], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 141, 144, 334, 335, 336, 338, 339, 340, 341, 342, 358, 359, 361, 362, 364, 372, 388, 389, 394, 395], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 338, 340, 342, 361], "sourc": [2, 6, 7, 11, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 361, 362, 368, 369, 389], "project": [2, 5, 6, 7, 70, 104, 110, 318, 341, 342, 354, 355, 361, 362, 363, 364, 368, 389, 390], "manag": [2, 358, 368], "item": [2, 361], "git": [2, 6, 16, 99, 318, 342, 354, 361, 362, 389], "branch": [2, 5, 141, 318, 335, 338, 342, 354, 360, 361, 389], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 338, 342, 368], "block": [2, 340], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 101, 105, 108, 140, 141, 142, 144, 334, 336, 338, 340, 341, 342, 358, 360, 361, 362, 368, 375, 376, 377, 378, 379, 385, 386, 389, 395], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 144, 334, 335, 338, 340, 341, 361], "example_funct": 2, "foo": [2, 341], "return": [2, 7, 15, 31, 32, 33, 50, 58, 61, 64, 65, 72, 73, 74, 79, 83, 89, 90, 92, 95, 96, 106, 115, 116, 118, 119, 121, 124, 127, 130, 134, 135, 144, 147, 148, 149, 150, 155, 158, 160, 164, 166, 168, 170, 171, 173, 174, 179, 201, 203, 207, 214, 215, 224, 235, 237, 238, 240, 248, 261, 263, 264, 266, 284, 294, 297, 298, 302, 303, 304, 309, 311, 312, 313, 314, 315, 316, 317, 340, 341, 361, 377], "how": [2, 5, 6, 12, 14, 78, 144, 337, 338, 340, 341, 342, 362, 368, 369, 380], "show": [2, 7, 13, 63, 309, 310, 338, 361, 368, 369, 375, 376, 377, 378, 379, 385, 386, 388, 393], "met": 2, "regress": [2, 321, 322, 323, 324, 325, 329, 331, 332, 339, 359, 360, 361, 375, 377, 380, 389, 394], "configur": [2, 5, 6, 11, 14, 17, 37, 40, 47, 51, 61, 66, 95, 96, 97, 98, 99, 118, 123, 141, 144, 160, 163, 210, 222, 280, 294, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 338, 341, 342, 360, 361, 362, 364, 367, 368, 369, 372, 380, 382, 384, 388, 389, 393, 395], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 40, 42, 43, 45, 48, 49, 51, 52, 55, 57, 59, 66, 99, 113, 115, 118, 123, 139, 141, 154, 157, 160, 161, 163, 167, 178, 183, 191, 208, 219, 269, 292, 336, 337, 338, 339, 340, 341, 342, 358, 359, 361, 362, 368, 376, 377, 378, 379, 385, 386, 387, 389, 395], "properli": [2, 136, 138, 139, 361, 362, 389], "addit": [2, 6, 7, 9, 18, 40, 144, 315, 316, 317, 326, 333, 334, 335, 336, 338, 340, 341, 342, 361, 379, 380, 383], "modif": [2, 6, 7, 338, 355], "nightli": [2, 342, 389, 394], "might": [2, 6, 11, 14, 17, 19, 130, 141, 144, 313, 334, 338, 342, 361, 362, 368, 389], "made": [2, 5, 17, 40, 43, 51, 124, 338, 340, 341, 342, 355, 357, 359, 361, 395], "continu": [2, 6, 338, 361], "page": [3, 7, 141, 363], "auto": 3, "summari": [3, 364], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 40, 51, 57, 79, 117, 118, 141, 144, 320, 321, 322, 323, 324, 325, 331, 332, 334, 336, 338, 339, 340, 341, 342, 359, 368, 373, 375, 379, 380, 388, 389, 390, 393, 395], "relev": [3, 7, 9, 144, 322, 323, 324, 325, 328, 330, 331, 332, 361, 363, 364, 365, 366, 367, 368, 369, 388, 389, 393], "seaic": [3, 10, 20, 42, 335, 338, 357, 359, 360, 389, 390, 393, 395], "long": [4, 25, 37, 40, 47, 96, 97, 163, 167, 178, 223, 247, 274, 338, 361, 375, 380, 389], "procedur": [4, 141, 342, 361, 369], "conda": [4, 5, 16, 99, 136, 138, 139, 141, 318, 335, 341, 354, 360, 361, 362, 363, 364, 365, 366, 367, 369], "environ": [4, 5, 11, 136, 138, 139, 318, 335, 341, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "spack": [4, 5, 136, 138, 139, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369], "compil": [4, 5, 6, 14, 136, 137, 138, 139, 140, 141, 142, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 389], "system": [4, 5, 6, 25, 37, 40, 47, 96, 97, 98, 136, 138, 139, 141, 163, 167, 178, 223, 247, 274, 338, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 70, 92, 119, 136, 138, 139, 141, 144, 154, 157, 160, 163, 334, 335, 336, 338, 340, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 389], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 40, 42, 48, 49, 55, 59, 63, 79, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 156, 165, 180, 183, 186, 191, 198, 204, 211, 225, 249, 269, 274, 281, 296, 299, 300, 301, 305, 306, 307, 308, 311, 312, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 380, 382, 384, 385, 386, 387, 388, 393, 394], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 40, 49, 51, 64, 85, 99, 111, 112, 115, 117, 118, 123, 124, 136, 137, 138, 139, 140, 141, 142, 144, 183, 191, 269, 311, 312, 313, 315, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 337, 338, 340, 341, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 376, 377, 378, 380, 385, 386, 388, 393, 394, 395], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 42, 53, 92, 99, 119, 123, 130, 141, 144, 154, 157, 160, 163, 334, 335, 336, 337, 338, 340, 342, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 389], "Then": [4, 6, 7, 11, 14, 136, 137, 138, 139, 140, 141, 142, 318, 321, 326, 328, 329, 330, 333, 335, 338, 340, 342, 354, 361, 368, 375, 379, 380, 389], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 37, 40, 41, 43, 46, 47, 50, 51, 52, 57, 70, 95, 96, 97, 106, 117, 118, 123, 139, 141, 146, 154, 156, 157, 163, 165, 167, 177, 178, 180, 184, 186, 189, 193, 195, 200, 202, 204, 213, 216, 222, 223, 225, 228, 234, 239, 243, 247, 249, 254, 260, 265, 270, 273, 274, 275, 283, 285, 287, 290, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 347, 348, 351, 354, 357, 358, 359, 360, 361, 362, 368, 370, 374, 394, 395], "script": [4, 5, 6, 11, 12, 19, 56, 66, 137, 140, 141, 142, 341, 359, 360, 361, 364, 368], "doc": [4, 7, 361, 369], "cd": [4, 6, 318, 342, 354, 361, 364, 389], "html": [4, 373], "view": [4, 328, 330, 342, 382, 384], "open": [4, 6, 342, 361, 380], "_build": 4, "index": [4, 15, 18, 90, 144, 146, 147, 149, 150, 151, 201, 214, 215, 235, 261, 296, 297, 298, 299, 302, 303, 304, 305, 307, 309, 311, 312, 314, 315, 334, 361, 372], "act": [5, 341, 372], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 126, 141, 176, 177, 321, 328, 329, 330, 333, 335, 338, 340, 361, 362, 368, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 389], "These": [5, 6, 8, 9, 14, 20, 40, 141, 144, 318, 320, 335, 338, 340, 341, 342, 354, 355, 360, 361, 362, 368, 370, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395], "user": [5, 6, 7, 8, 9, 11, 14, 17, 40, 51, 52, 59, 66, 99, 141, 144, 153, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 338, 339, 340, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 373, 375, 376, 377, 378, 379, 380, 385, 386, 390], "describ": [5, 7, 14, 17, 19, 99, 119, 121, 135, 144, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 376, 377, 378, 379, 380, 385, 389], "instal": [5, 6, 141, 342, 361, 368, 369, 389], "abov": [5, 7, 14, 18, 19, 141, 315, 334, 336, 338, 339, 340, 341, 342, 361, 362, 376, 377, 378, 379, 385, 387, 389, 394], "off": [5, 6, 342, 358], "http": [5, 7, 11, 14, 62, 338, 341, 358, 360, 361, 362, 369, 373, 383, 389, 390], "github": [5, 6, 7, 341, 342, 360, 361, 362, 373, 389, 390], "com": [5, 6, 7, 14, 62, 341, 342, 360, 361, 362, 389, 390], "e3sm": [5, 7, 10, 11, 40, 129, 141, 318, 335, 338, 339, 341, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 390], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 40, 42, 46, 51, 62, 71, 72, 78, 79, 84, 100, 107, 117, 118, 123, 129, 141, 144, 146, 154, 157, 160, 161, 163, 166, 167, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 197, 200, 202, 205, 208, 210, 213, 216, 217, 219, 222, 223, 226, 228, 230, 232, 234, 236, 239, 241, 243, 246, 247, 250, 252, 254, 256, 258, 260, 262, 265, 267, 270, 273, 274, 275, 276, 278, 280, 283, 285, 287, 288, 290, 292, 296, 299, 305, 307, 322, 323, 324, 325, 326, 331, 332, 333, 334, 338, 339, 340, 341, 347, 348, 350, 351, 352, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 376, 377, 378, 385, 386, 389, 394], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 136, 138, 139, 141, 309, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 338, 342, 358, 361, 362, 368, 373, 374, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395], "mean": [5, 310, 342, 361, 372, 375, 376, 377, 378, 379, 383, 385, 386, 394], "chang": [5, 6, 8, 11, 17, 63, 78, 111, 112, 144, 153, 318, 335, 338, 339, 340, 341, 342, 354, 359, 361, 362, 364, 369, 370, 372, 375, 376, 377, 378, 380, 383, 385, 386, 389, 394], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 35, 40, 46, 51, 52, 53, 70, 106, 113, 127, 141, 144, 311, 312, 313, 316, 317, 321, 328, 329, 330, 333, 335, 338, 339, 340, 341, 342, 358, 359, 360, 361, 362, 368, 369, 389], "tool": [5, 6, 9, 12, 14, 17, 318, 335, 338, 342, 354, 360, 361, 362], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 32, 33, 37, 40, 41, 42, 46, 47, 51, 52, 57, 59, 61, 66, 79, 88, 93, 96, 97, 100, 106, 113, 124, 125, 126, 127, 128, 129, 130, 135, 136, 140, 141, 142, 144, 146, 147, 148, 149, 151, 155, 158, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 186, 193, 197, 201, 203, 210, 214, 223, 224, 225, 230, 235, 240, 247, 248, 249, 258, 259, 261, 266, 274, 280, 284, 285, 290, 294, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 348, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 34, 37, 39, 40, 43, 44, 46, 47, 49, 58, 59, 67, 70, 76, 81, 95, 96, 97, 99, 100, 113, 114, 115, 117, 118, 123, 141, 159, 160, 161, 163, 167, 169, 172, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 342, 354, 355, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 390, 394], "support": [5, 6, 8, 13, 17, 40, 144, 296, 305, 307, 320, 338, 341, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 395], "machin": [5, 8, 9, 11, 40, 42, 65, 66, 99, 117, 118, 123, 318, 338, 341, 354, 360, 361, 362, 363, 364, 365, 366, 367, 369], "option": [5, 7, 9, 11, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 47, 48, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 71, 77, 78, 79, 82, 84, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 141, 147, 149, 150, 153, 154, 156, 157, 159, 160, 161, 163, 165, 167, 170, 171, 173, 178, 180, 186, 188, 198, 201, 204, 211, 214, 215, 222, 223, 225, 230, 235, 236, 246, 247, 249, 252, 253, 261, 262, 274, 276, 278, 281, 294, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 350, 354, 355, 358, 360, 362, 372, 374, 389, 395], "help": [5, 6, 13, 141, 334, 335, 336, 338, 342, 360, 361, 368, 373, 390], "usag": [5, 15, 19, 340, 362, 364, 369], "h": [5, 14, 361, 379], "t": [5, 6, 7, 9, 11, 12, 14, 15, 40, 41, 135, 141, 144, 146, 151, 237, 238, 263, 264, 274, 322, 323, 324, 325, 331, 332, 338, 340, 341, 342, 358, 361, 362, 364, 366, 367, 368, 374, 375, 376, 378, 382, 384, 385, 389, 394, 395], "n": [5, 6, 72, 79, 80, 86, 338, 361, 364, 368, 369, 375, 377, 379, 380, 382, 383, 384, 388, 389, 393], "number": [5, 6, 8, 13, 14, 25, 34, 37, 39, 40, 44, 46, 47, 65, 66, 67, 71, 72, 73, 74, 75, 83, 95, 96, 97, 100, 118, 141, 144, 155, 158, 163, 164, 167, 168, 169, 172, 178, 179, 193, 203, 223, 224, 236, 240, 247, 248, 262, 266, 274, 318, 321, 326, 328, 329, 330, 334, 338, 339, 340, 341, 348, 359, 361, 362, 368, 370, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 393], "v": [5, 342, 361, 376, 378, 379, 382, 384, 385, 394], "By": [5, 14, 18, 41, 42, 144, 318, 335, 338, 340, 354, 361, 362, 375, 377, 380, 387], "default": [5, 7, 9, 11, 14, 15, 18, 19, 25, 41, 42, 51, 57, 66, 79, 84, 90, 91, 99, 100, 101, 105, 108, 114, 118, 120, 123, 127, 136, 138, 139, 141, 144, 148, 149, 159, 178, 201, 214, 235, 247, 261, 318, 322, 323, 324, 325, 328, 330, 331, 332, 333, 334, 335, 338, 340, 342, 354, 355, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 376, 377, 378, 385, 386, 387, 388, 389, 393, 395], "planar": [5, 9, 127, 144, 311, 320, 326, 335, 338, 361, 380, 382, 383, 384, 387, 388, 393, 394, 395], "baroclinic_channel": [5, 7, 9, 14, 18, 246, 252, 318, 327, 334, 335, 338, 341, 361, 375, 389, 394, 395], "10km": [5, 18, 321, 361, 375, 389, 394, 395], "1": [5, 7, 9, 13, 14, 17, 18, 19, 40, 73, 136, 137, 138, 139, 141, 142, 144, 163, 176, 178, 192, 223, 247, 273, 274, 275, 296, 299, 305, 307, 310, 311, 312, 321, 322, 323, 324, 326, 328, 330, 331, 332, 333, 335, 336, 338, 340, 342, 355, 358, 361, 362, 364, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389], "decomp": [5, 335, 361, 389, 394], "displai": [5, 8, 310, 369], "path": [5, 6, 9, 11, 14, 18, 40, 42, 43, 51, 52, 57, 59, 61, 62, 67, 70, 99, 115, 117, 118, 123, 124, 127, 141, 146, 318, 335, 338, 340, 341, 342, 348, 354, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389, 395], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 40, 42, 43, 48, 49, 51, 52, 55, 57, 59, 62, 63, 66, 99, 100, 113, 115, 117, 118, 123, 124, 141, 154, 157, 159, 160, 161, 163, 167, 176, 177, 178, 181, 183, 184, 185, 187, 189, 191, 192, 193, 195, 208, 219, 222, 223, 226, 228, 230, 246, 247, 250, 252, 254, 269, 274, 292, 318, 321, 326, 329, 335, 337, 338, 339, 340, 341, 342, 348, 350, 352, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 376, 377, 378, 379, 385, 386, 389, 395], "messag": [5, 8, 141, 338, 358, 369], "task_expr": [5, 67], "flag": [5, 6, 141, 338, 341, 358, 359, 361, 362, 367, 373, 375, 383, 389, 390], "suppli": [5, 6, 7, 15, 18, 127, 135, 141, 338, 342, 361], "substr": [5, 141], "regular": [5, 19, 67, 72, 79, 197, 210, 280, 285, 290, 361, 363, 366, 368, 369, 379, 389], "express": [5, 67], "subset": 5, "search": [5, 67, 364], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 54, 61, 73, 83, 89, 92, 96, 97, 114, 119, 121, 124, 130, 144, 146, 147, 150, 151, 166, 167, 187, 215, 252, 302, 311, 312, 315, 321, 326, 329, 333, 338, 340, 358, 360, 361, 362, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 393, 394], "pass": [5, 8, 9, 12, 13, 14, 18, 83, 124, 125, 144, 334, 335, 338, 340, 341, 342, 359, 389], "similarli": [5, 8, 127, 140, 142, 315, 318, 338, 340, 342, 368, 389], "result": [5, 13, 18, 61, 74, 83, 141, 144, 176, 184, 189, 192, 195, 254, 278, 311, 312, 313, 316, 317, 321, 322, 323, 324, 325, 329, 331, 332, 338, 339, 341, 342, 347, 352, 359, 361, 362, 375, 376, 377, 378, 379, 385, 386, 388, 393, 394], "descript": [5, 7, 361, 362, 373, 390], "short": [5, 177, 222, 273, 275, 338, 339, 340, 341, 351, 361, 375, 380], "core": [5, 7, 8, 14, 25, 37, 39, 40, 42, 44, 46, 47, 66, 95, 96, 97, 123, 141, 144, 145, 167, 176, 177, 273, 275, 321, 329, 333, 334, 335, 338, 339, 340, 341, 355, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389, 394], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 40, 43, 45, 48, 55, 123, 125, 126, 127, 141, 144, 146, 167, 320, 338, 340, 342, 361, 372, 379, 395], "built": [5, 6, 14, 118, 123, 141, 318, 335, 342, 354, 360, 362, 368, 389], "standalon": [5, 14, 139, 141, 335, 342, 359, 360, 368, 390], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 32, 33, 40, 42, 70, 88, 102, 109, 119, 121, 123, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 167, 170, 171, 174, 236, 247, 262, 280, 295, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 338, 341, 345, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395], "befor": [5, 6, 8, 9, 14, 17, 19, 46, 118, 123, 141, 338, 340, 341, 342, 358, 361, 364, 367, 369, 372, 376, 377, 378, 379, 385, 386, 389], "num": 5, "f": [5, 9, 11, 18, 144, 207, 335, 338, 340, 341, 342, 361, 362, 369, 375, 379, 380, 382, 389], "m": [5, 6, 14, 72, 79, 80, 86, 311, 312, 321, 326, 329, 333, 334, 342, 361, 363, 364, 365, 366, 367, 369, 372, 375, 377, 378, 379, 380, 385, 387, 389], "mach": [5, 9, 11, 40, 141, 360, 363, 364, 365, 366, 367, 368, 369, 389], "w": [5, 6, 342, 359, 361, 389], "p": [5, 6, 342, 361, 362, 389], "suite_nam": [5, 8, 114, 116, 118, 123, 389], "copy_execut": [5, 118, 123, 389], "specifi": [5, 6, 14, 17, 18, 19, 42, 141, 144, 320, 338, 342, 357, 361, 362, 367, 369, 375, 376, 377, 378, 380, 385, 386, 388, 389, 393], "sever": [5, 6, 12, 141, 144, 334, 338, 340, 341, 342, 360, 361, 383, 388, 389, 394], "onc": [5, 6, 14, 43, 311, 312, 321, 342, 361, 362, 376, 377, 378, 385, 386, 389], "separ": [5, 7, 9, 14, 17, 18, 19, 146, 338, 339, 359, 361, 376, 377, 378, 385, 386, 389], "space": [5, 6, 7, 9, 13, 141, 328, 330, 338, 342, 361, 364, 368, 372, 379, 389], "altern": [5, 13, 338, 355, 389], "task_numb": 5, "multipl": [5, 9, 14, 25, 26, 31, 32, 130, 141, 170, 171, 319, 339, 340, 341, 342, 361, 368, 375, 389], "test": [5, 7, 8, 9, 19, 51, 52, 57, 66, 95, 96, 97, 116, 124, 141, 145, 146, 152, 154, 157, 159, 161, 175, 177, 178, 184, 185, 187, 188, 189, 190, 192, 197, 198, 199, 200, 202, 205, 208, 209, 210, 211, 212, 213, 216, 217, 219, 220, 221, 222, 231, 232, 233, 234, 236, 239, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 347, 350, 351, 352, 353, 354, 357, 359, 360, 366, 368, 369, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394], "requir": [5, 6, 8, 14, 17, 25, 37, 40, 41, 47, 100, 144, 163, 167, 178, 223, 247, 274, 318, 334, 335, 338, 339, 340, 341, 342, 354, 355, 358, 360, 361, 362, 367, 368, 372, 373, 388, 389, 390, 393, 395], "few": [5, 13, 14, 25, 37, 40, 47, 96, 97, 141, 167, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 338, 341, 361, 362, 368], "basic": [5, 7, 362, 364, 368, 379, 389], "piec": [5, 334, 335, 361], "abl": [5, 6, 136, 137, 138, 139, 140, 142, 144, 338, 339, 342, 361, 368, 389], "place": [5, 6, 14, 125, 141, 334, 338, 340, 355, 361, 368], "download": [5, 6, 8, 10, 40, 42, 49, 63, 141, 183, 191, 269, 340, 341, 342, 362, 389, 394], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 51, 141, 144, 311, 312, 320, 322, 323, 324, 325, 331, 332, 334, 336, 338, 340, 341, 342, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 375, 380, 389, 390, 394, 395], "data": [5, 10, 13, 17, 18, 19, 26, 40, 41, 42, 106, 119, 121, 122, 125, 126, 127, 129, 135, 141, 144, 296, 299, 300, 301, 305, 306, 307, 308, 309, 311, 312, 314, 316, 317, 338, 342, 360, 362, 363, 364, 365, 366, 367, 368, 389, 394, 395], "r": [5, 207, 369, 376, 377, 378, 385], "tell": [5, 6, 141, 342], "re": [5, 6, 9, 326, 340, 341, 342, 359, 361, 362, 368, 369, 376, 377, 378, 380, 385, 386], "leav": [5, 19, 362, 377, 380], "unknown": [5, 141, 341, 368], "component_path": [5, 9, 118, 123, 318, 335, 354, 362, 389], "absolut": [5, 9, 40, 42, 59, 118, 123, 318, 335, 338, 342, 354, 389], "landic": [5, 6, 12, 20, 42, 70, 123, 334, 335, 337, 338, 340, 342, 359, 360, 361, 362, 389, 395], "e3sm_submodul": [5, 318, 335, 342, 354, 355, 361], "mali": [5, 141, 335, 338, 359, 361, 362, 389, 395], "dev": [5, 6, 7, 326, 334, 335, 337, 338, 341, 342, 360, 361, 373, 389, 390], "albani": [5, 136, 138, 139, 141, 335, 362, 389], "depend": [5, 14, 17, 19, 40, 41, 49, 111, 112, 141, 144, 146, 183, 191, 200, 213, 234, 260, 269, 283, 285, 290, 340, 342, 359, 360, 361, 362, 368, 369, 372, 376, 377, 378, 380, 385, 386, 389, 395], "whether": [5, 8, 13, 14, 17, 19, 25, 30, 40, 42, 50, 51, 52, 57, 61, 62, 63, 67, 113, 114, 118, 123, 124, 125, 126, 127, 131, 141, 156, 165, 166, 167, 180, 186, 197, 204, 210, 225, 249, 274, 276, 278, 280, 285, 290, 309, 310, 312, 328, 330, 334, 338, 340, 342, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 393], "omega": [5, 25, 31, 32, 33, 129, 167, 170, 171, 236, 262, 318, 335, 341, 359, 361, 373, 379, 382, 384, 388, 389], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 32, 33, 40, 41, 42, 48, 51, 53, 55, 61, 65, 66, 77, 79, 82, 95, 96, 97, 98, 99, 115, 117, 118, 123, 125, 126, 129, 130, 131, 132, 134, 135, 153, 154, 156, 157, 160, 165, 167, 170, 171, 173, 180, 186, 187, 197, 198, 204, 210, 211, 222, 225, 236, 249, 252, 262, 280, 281, 294, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 354, 355, 358, 360, 372, 389, 395], "point": [5, 6, 9, 56, 62, 103, 141, 311, 312, 315, 318, 320, 334, 335, 340, 341, 342, 354, 361, 362, 368, 380, 385, 389], "much": [5, 6, 14, 338, 361, 380], "config_fil": [5, 9, 118, 123], "work_dir": [5, 11, 40, 51, 66, 99, 117, 118, 123, 124, 338, 340, 361], "recommend": [5, 7, 11, 19, 141, 338, 339, 341, 342, 361, 368], "itself": [5, 6, 7, 9, 40, 48, 55, 334, 335, 337, 338, 340, 342, 361, 389], "temp": 5, "scratch": [5, 6, 342, 361, 364, 369, 389], "avoid": [5, 338, 361], "confus": [5, 14, 341, 342, 361], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 40, 41, 43, 49, 50, 51, 57, 87, 88, 97, 100, 113, 114, 124, 126, 144, 146, 150, 151, 154, 157, 167, 174, 183, 191, 193, 194, 200, 208, 213, 215, 219, 228, 229, 234, 243, 260, 269, 270, 283, 285, 290, 292, 295, 315, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 340, 348, 349, 357, 359, 362, 369, 370, 376, 377, 378, 379, 380, 385, 386, 389, 394], "compar": [5, 10, 18, 40, 43, 50, 117, 118, 123, 124, 144, 193, 194, 228, 229, 274, 322, 323, 324, 325, 331, 332, 333, 338, 339, 340, 341, 342, 348, 349, 357, 359, 361, 374, 375, 380, 383, 389, 392, 394], "previou": [5, 127, 194, 229, 338, 342, 349, 361, 374, 389, 394], "same": [5, 6, 7, 9, 14, 18, 40, 41, 42, 50, 124, 126, 141, 144, 148, 149, 201, 214, 235, 261, 284, 321, 329, 333, 334, 336, 338, 339, 340, 341, 342, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374, 375, 376, 377, 378, 379, 380, 385, 386, 387, 389, 394, 395], "baseline_dir": [5, 40, 117, 118, 123, 338], "mani": [5, 6, 8, 9, 144, 334, 336, 338, 340, 341, 342, 360, 361, 375, 388, 393], "valid": [5, 10, 19, 25, 40, 43, 50, 127, 144, 154, 157, 222, 296, 297, 298, 299, 302, 303, 304, 305, 307, 315, 328, 330, 333, 338, 341, 342, 360, 372, 375, 380], "timer": [5, 18, 40, 338, 339, 341], "both": [5, 6, 7, 8, 13, 14, 25, 30, 127, 141, 144, 165, 173, 180, 186, 225, 249, 310, 321, 326, 334, 335, 337, 338, 342, 360, 361, 362, 374, 377, 380, 382, 384, 387, 388], "custom": [5, 6, 8, 13, 17, 19, 59, 61, 118, 123, 318, 335, 342, 354, 362, 369, 389], "give": [5, 6, 14, 18, 141, 338, 341, 342, 361, 362, 389], "predefin": 5, "so": [5, 6, 7, 9, 11, 12, 13, 14, 18, 19, 25, 39, 63, 111, 141, 144, 167, 296, 305, 307, 318, 321, 326, 328, 329, 330, 334, 335, 338, 340, 341, 342, 354, 359, 361, 362, 367, 368, 369, 372, 375, 376, 377, 378, 379, 380, 385, 386, 387, 389, 394], "case": [5, 6, 7, 8, 9, 11, 14, 19, 28, 29, 51, 52, 57, 66, 95, 96, 97, 119, 124, 141, 144, 145, 152, 159, 161, 177, 184, 185, 187, 188, 189, 190, 192, 198, 199, 200, 202, 205, 208, 209, 211, 213, 216, 217, 219, 220, 222, 231, 232, 234, 236, 239, 241, 242, 243, 244, 246, 247, 250, 251, 252, 253, 255, 256, 257, 258, 260, 262, 265, 267, 268, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 311, 312, 321, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 342, 345, 347, 350, 351, 353, 359, 360, 361, 368, 369, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394], "pre": [5, 141, 342], "copi": [5, 6, 8, 42, 57, 118, 123, 361, 364, 389], "just": [5, 14, 25, 37, 40, 47, 67, 141, 144, 167, 326, 338, 341, 342, 359, 361, 364, 367, 369], "wish": [5, 7, 14, 52, 311, 312, 338, 342, 361, 389], "again": [5, 6, 14, 139, 144, 318, 338, 340, 342, 358, 389], "later": [5, 8, 18, 25, 37, 40, 47, 59, 141, 167, 338, 361, 362], "anticip": [5, 361], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 41, 43, 46, 112, 125, 141, 153, 311, 312, 318, 320, 334, 338, 339, 340, 342, 354, 355, 358, 359, 361, 362, 369, 370, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 393, 395], "delet": [5, 118, 123, 341, 342, 358, 389], "fresh": [5, 6, 340, 361], "sinc": [5, 6, 14, 25, 90, 112, 135, 144, 321, 338, 340, 341, 342, 361, 375, 376, 377, 378, 379, 382, 384, 385, 386, 388, 393], "rerun": [5, 342], "c": [5, 6, 118, 141, 338, 342, 363, 364, 365, 366, 367, 368, 369, 374, 376, 378, 383, 385, 386, 389, 394], "test_suit": [5, 116, 338], "build": [5, 6, 10, 13, 14, 75, 80, 136, 137, 138, 139, 140, 142, 309, 318, 335, 340, 341, 354, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "mpas_model": [5, 362], "overrid": [5, 13, 14, 45, 46, 49, 53, 59, 75, 78, 79, 80, 144, 183, 191, 269, 338, 340, 341, 361, 362, 367, 369, 389], "baselin": [5, 6, 8, 10, 40, 43, 50, 117, 118, 123, 124, 144, 154, 157, 274, 321, 326, 328, 329, 330, 333, 338, 339, 341, 357, 359, 361, 374, 380, 389], "comparison": [5, 8, 18, 40, 50, 124, 338, 361, 362, 380, 385], "against": [5, 10, 43, 50, 124, 144, 154, 157, 321, 326, 328, 329, 330, 333, 338, 357, 361, 374], "oppos": [5, 14, 30, 156, 165, 166, 180, 186, 197, 204, 210, 225, 249, 280, 285, 290, 312, 361], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 113], "wherea": [5, 12, 338, 359, 361, 374, 380, 395], "typic": [5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 40, 52, 114, 141, 144, 310, 311, 312, 334, 335, 336, 338, 340, 342, 359, 361, 362, 368, 370, 372, 387, 389, 395], "clone": [5, 6, 141, 318, 336, 342, 354, 361, 389], "pickl": [5, 8, 111, 112, 338, 361, 389], "latter": [5, 51, 141], "conveni": [5, 9, 17, 296, 299, 305, 307, 334, 338, 361, 362, 376, 377, 378, 385, 386, 389, 395], "tab": [5, 389], "explicitli": [5, 7, 144, 321, 328, 329, 330, 338, 342, 361, 362, 389], "select": [5, 8, 127, 309, 338, 342, 361], "edit": [5, 7, 342, 361, 389], "steps_to_run": [5, 51, 114, 338, 340, 361, 362], "full_run": [5, 18, 357, 375, 392], "restart_run": [5, 18, 357, 375, 392], "Or": [5, 338, 362], "accomplish": [5, 11, 17, 338, 341], "thing": [5, 136, 137, 138, 139, 140, 141, 142, 144, 334, 338, 341, 360, 394], "take": [5, 6, 7, 11, 13, 14, 59, 141, 144, 150, 215, 334, 338, 339, 340, 342, 361, 376, 377, 378, 385, 394], "preced": [5, 59, 144], "over": [5, 9, 14, 59, 100, 125, 126, 310, 338, 341, 360, 361, 372, 375, 380, 383, 387, 389], "intern": [5, 11, 25, 245, 246, 247, 250, 252, 254, 256, 311, 312, 329, 338, 342, 358, 373, 381], "shouldn": [5, 141, 274, 361], "special": [5, 359, 388], "databas": [5, 6, 8, 11, 17, 20, 25, 40, 42, 63, 167, 338, 368], "polaris_cach": [5, 8, 20, 338], "structur": [5, 13, 31, 32, 33, 337, 340, 360, 361, 383], "without": [5, 42, 144, 310, 338, 341, 342, 360, 361, 362, 366, 368, 382, 384, 388, 389], "redund": [5, 296, 299, 305, 307, 321, 334, 361], "stamp": 5, "revis": [5, 31, 32, 170, 171, 362], "older": 5, "ones": [5, 296, 299, 305, 307, 341, 361], "version": [5, 6, 16, 35, 59, 99, 124, 141, 318, 321, 329, 334, 335, 336, 338, 340, 341, 342, 354, 360, 361, 362, 368, 369, 373, 375, 377, 380, 389, 390], "updat": [5, 7, 8, 11, 25, 27, 29, 36, 37, 46, 47, 63, 120, 139, 141, 144, 169, 274, 300, 301, 306, 308, 318, 321, 322, 323, 324, 328, 329, 330, 331, 332, 338, 354, 358, 360, 361, 389], "cached_fil": [5, 20, 338], "json": [5, 8, 20, 57, 338, 369], "anvil": [5, 6, 141, 338, 362, 368, 389], "chrysali": [5, 6, 141, 338, 361, 362, 368, 389], "onto": [5, 342], "lcrc": [5, 6, 8, 11, 57, 338, 341, 362, 363, 365, 368, 389], "server": [5, 8, 42, 57, 338, 341, 362, 369], "d": [5, 19, 127, 221, 226, 236, 262, 296, 299, 300, 301, 305, 306, 307, 308, 320, 322, 324, 331, 332, 338, 361, 373, 380, 381, 387], "whose": [5, 48, 55, 89, 338], "ocean_cached_fil": 5, "pr": [5, 6, 389, 394], "look": [5, 6, 7, 11, 18, 140, 142, 311, 312, 340, 341, 361, 362], "someth": [5, 7, 101, 105, 108, 140, 141, 142, 342, 361], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 100, 144, 146, 154, 157, 321, 326, 329, 338, 341, 361, 370], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 34, 36, 46, 88, 154, 157, 160, 163, 167, 178, 321, 326, 328, 329, 330, 361, 362], "info": [5, 12, 14, 25, 34, 88, 141, 178, 338, 361], "initial_st": [5, 18, 19, 146, 321, 329, 338, 361], "date_str": [5, 57], "let": [5, 338, 342, 359, 361, 362, 369], "string": [5, 9, 15, 42, 104, 110, 141, 144, 159, 160, 163, 173, 280, 310, 342], "choos": [5, 338, 341, 342, 361, 363, 364, 365, 366, 369, 395], "todai": [5, 57], "dry_run": [5, 57], "saniti": [5, 361], "check": [5, 6, 18, 124, 326, 338, 342, 361, 362, 364, 369, 389, 394], "print": [5, 12, 18, 67, 124, 131, 338, 341, 394], "stdout": [5, 12, 40, 51, 338, 340], "translat": [5, 31, 32, 33], "convert": [5, 9, 13, 14, 144, 173, 338, 361], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 32, 33, 35, 36, 39, 49, 118, 123, 134, 135, 160, 163, 165, 167, 172, 180, 183, 186, 191, 225, 249, 269, 318, 321, 326, 328, 329, 330, 334, 335, 338, 340, 341, 354, 355, 357, 360, 361, 362, 370, 380, 387], "stream": [5, 7, 8, 10, 25, 28, 30, 35, 49, 129, 134, 135, 165, 172, 180, 183, 186, 191, 225, 249, 269, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 341, 354, 357, 362, 388, 393], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 32, 33, 141, 154, 157, 160, 163, 165, 167, 170, 171, 172, 180, 186, 225, 249, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 360, 361, 364, 367, 369], "e": [5, 6, 7, 9, 11, 14, 15, 31, 32, 33, 40, 41, 53, 70, 129, 141, 144, 166, 311, 312, 318, 334, 336, 338, 339, 341, 342, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 393, 395], "g": [5, 6, 7, 9, 11, 14, 15, 31, 32, 33, 40, 41, 53, 70, 129, 141, 144, 166, 311, 312, 318, 334, 336, 338, 339, 341, 342, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 393], "don": [5, 6, 7, 14, 141, 144, 146, 151, 338, 340, 341, 342, 361, 366, 389, 395], "format": [5, 7, 11, 13, 14, 129, 135, 173, 339, 340, 342, 361, 362, 364, 380], "note": [5, 7, 17, 18, 144, 361, 369], "keyword": [5, 7, 14, 18, 19, 338, 377], "top": [5, 19, 127, 296, 297, 298, 299, 302, 303, 304, 305, 307, 310, 320, 326, 336, 361, 372, 383], "ignor": [5, 104, 110], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 40, 51, 52, 58, 65, 73, 89, 95, 106, 113, 141, 144, 148, 149, 150, 167, 201, 214, 215, 235, 261, 284, 334, 337, 338, 340, 341, 342, 359, 362, 363, 364, 365, 366, 367, 369, 372, 389], "pars": [5, 9, 14, 26, 27, 28, 29, 92, 119, 121, 130], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 32, 33, 90, 124, 125, 126, 127, 131, 144, 146, 154, 157, 170, 171, 187, 207, 252, 310, 311, 312, 315, 321, 329, 331, 335, 338, 340, 341, 360, 361, 362, 372, 375, 376, 377, 378, 379, 383, 385, 386, 387], "doesn": [5, 6, 135, 141, 338, 340, 361, 362, 367, 368, 389], "matter": [5, 361], "usabl": 5, "try": [6, 14, 62, 141, 341, 342, 358, 361, 362, 364, 369, 389], "stai": [6, 342], "sync": 6, "mpi": [6, 14, 17, 100, 136, 139, 141, 167, 169, 172, 321, 328, 329, 330, 338, 342, 358, 360, 361, 363, 364, 365, 366, 367, 369, 389], "librari": [6, 14, 136, 141, 342, 361, 363, 364, 365, 366, 367, 368, 369, 389], "netcdf": [6, 141, 146, 151, 174, 333, 362, 363, 364, 365, 366, 367, 368, 369], "fortran": [6, 141, 363, 364, 365, 366, 367, 368, 369], "pnetcdf": [6, 141, 363, 364, 365, 366, 367, 368, 369], "mkl": [6, 141], "linear": [6, 19, 125, 126, 127, 311, 312, 322, 323, 324, 328, 331, 332, 361, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386], "algebra": 6, "lib": [6, 141], "bump": 6, "major": [6, 335, 338], "minor": 6, "esmf": [6, 17, 342, 367, 389], "moab": [6, 17, 342, 367, 389], "scorpio": [6, 342, 368, 389], "meti": [6, 88], "parmeti": 6, "trilino": [6, 342], "u": [6, 11, 338, 361, 368, 369, 376, 378, 379, 382, 384, 385], "sometim": [6, 14, 296, 299, 305, 307, 334, 336, 338, 340, 359, 361, 394], "necessari": [6, 7, 13, 141, 361], "alwai": [6, 7, 9, 12, 59, 141, 149, 201, 214, 235, 261, 314, 318, 335, 338, 340, 341, 342, 354, 359, 361, 362, 380], "correctli": 6, "combin": [6, 40, 42, 51, 59, 66, 99, 129, 160, 163, 338, 339, 340, 358, 361, 362, 389], "experienc": 6, "problem": [6, 338, 342, 358, 361], "intel": [6, 141, 363, 365, 366, 368], "perlmutt": [6, 141, 364, 368, 389], "eigen": 6, "nvidiagpu": 6, "forg": [6, 141, 360, 389], "python": [6, 7, 8, 9, 26, 46, 53, 144, 334, 336, 338, 340, 341, 342, 359, 360, 361, 362, 368, 369, 389], "aren": [6, 11, 40, 41, 141, 338, 341, 342, 361, 394], "constraint": [6, 65, 369, 389], "alpha": [6, 136, 137, 138, 139, 140, 141, 142, 342, 361, 379], "beta": 6, "rc": 6, "remain": [6, 361, 377, 379, 380, 387], "unaffect": 6, "brief": [6, 7, 361], "tour": 6, "out": [6, 8, 9, 13, 59, 94, 98, 127, 141, 154, 157, 310, 336, 338, 341, 342, 362, 372, 389], "login": [6, 141, 342, 364, 367, 369], "node": [6, 14, 25, 39, 40, 44, 47, 65, 95, 96, 97, 141, 167, 311, 312, 314, 315, 317, 338, 339, 341, 342, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389], "bootstrap": 6, "rest": [6, 174, 304, 372, 377], "unifi": [6, 141, 342, 369], "diagnost": [6, 331, 362, 363, 364, 366, 367, 368, 369, 376, 389], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 338, 340, 341, 342, 361], "cach": [6, 20, 25, 40, 42, 117, 118, 167, 360, 362, 368, 374, 389, 394], "own": [6, 7, 8, 9, 11, 12, 19, 40, 141, 144, 338, 340, 341, 342, 359, 361, 362, 376, 377, 378, 385, 386, 389, 395], "config_machin": 6, "xml": [6, 14, 119, 121, 122, 135, 354], "ey": 6, "master": [6, 318, 354, 390], "happen": [6, 9, 12, 17, 112, 338, 361, 376, 377, 378, 385, 386], "me": [6, 361], "fork": [6, 361], "haven": [6, 361], "mkdir": [6, 342], "involv": [6, 14, 315, 338, 359, 361], "coupl": [6, 358, 360], "simplify_local_mach": 6, "often": [6, 9, 18, 19, 40, 144, 334, 336, 338, 339, 340, 341, 342, 361, 362, 394, 395], "stand": 6, "releas": [6, 141, 341, 342, 360, 368, 373, 389], "omit": [6, 338, 389], "suffix": [6, 42, 118, 338], "spack_for_mache_1": 6, "12": [6, 13, 73, 127, 310, 315, 322, 324, 331, 332, 357, 361, 364, 376, 378, 379, 385, 386, 389, 392], "plu": [6, 359], "discov": 6, "cannot": [6, 361], "uniqu": [6, 7, 14, 141, 340, 361], "worktre": [6, 360, 361], "my": [6, 141, 364], "fetch": [6, 342, 361], "checkout": [6, 342, 361], "miniforge3": [6, 342, 361, 368, 389], "manual": [6, 14, 51, 52, 338, 340, 395], "linux": [6, 141, 342, 368], "x86_64": [6, 141], "our": [6, 141, 341, 361, 389], "found": [6, 9, 14, 130, 141, 311, 312, 341, 342, 360, 361, 363, 364, 365, 366, 367, 368, 369], "exist": [6, 7, 9, 31, 32, 33, 40, 43, 62, 119, 121, 123, 141, 144, 170, 171, 321, 329, 338, 340, 341, 342, 358, 361, 368, 394], "miniconda3": [6, 342], "pleas": [6, 141, 335, 341, 342, 361, 389], "start": [6, 7, 8, 14, 15, 90, 120, 127, 141, 310, 320, 321, 325, 334, 339, 340, 341, 360, 364, 368, 369, 373, 390, 392], "definit": [6, 14, 361], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 40, 51, 78, 104, 110, 117, 118, 123, 141, 144, 199, 212, 233, 259, 282, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 346, 354, 355, 357, 359, 360, 362, 368, 370, 372, 375, 377, 383, 386, 387, 394, 395], "export": [6, 358], "conda_bas": 6, "home": [6, 18, 141, 342, 361, 362, 364, 368, 369], "readi": [6, 361, 369], "configure_polaris_env": [6, 141, 342, 358, 361, 367], "py": [6, 12, 14, 18, 70, 141, 326, 334, 335, 341, 342, 359, 361, 362, 367], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 141, 342], "tmpdir": [6, 141], "group": [6, 7, 11, 63, 247, 326, 334, 360, 363, 365, 368, 369, 383, 388, 389, 395], "spack_temp": 6, "spack_test": 6, "gnu": [6, 141, 342, 363, 364, 365, 366, 367, 368, 369, 389], "openmpi": [6, 136, 141, 342, 360, 363, 365, 366, 389], "impi": [6, 136, 141, 363, 366], "recreat": [6, 340, 342, 358], "request": [6, 7, 14, 15, 25, 34, 36, 141, 144, 154, 157, 167, 297, 298, 338, 340, 341, 342, 358, 361, 362, 376, 377, 378, 385, 386], "twice": [6, 311, 312, 361], "deploy": [6, 342, 363, 364, 365, 366, 367, 369], "prebootstrap": 6, "load": [6, 11, 19, 112, 137, 140, 141, 142, 338, 342, 360, 361, 362, 368], "activ": [6, 19, 141, 368, 369, 389], "differ": [6, 14, 15, 17, 18, 31, 32, 59, 75, 80, 124, 141, 144, 175, 178, 187, 221, 245, 247, 252, 315, 318, 321, 329, 334, 335, 336, 338, 339, 340, 341, 354, 359, 361, 362, 363, 364, 365, 366, 367, 369, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 388, 393], "On": [6, 7, 13, 141, 342, 368], "tmp": [6, 141], "safe": [6, 14, 338, 342, 375], "strictli": [6, 13, 341, 361], "good": [6, 11, 12, 40, 338, 342, 361], "idea": [6, 11, 12, 361], "Be": [6, 369], "awar": [6, 7, 141, 361, 368], "with_petsc": [6, 342], "wa": [6, 8, 50, 61, 124, 141, 338, 340, 341, 342, 358, 359, 361, 362, 372, 380, 389], "limit": [6, 19, 322, 323, 324, 331, 332, 339, 342, 375, 376, 378, 379, 385, 386], "amount": [6, 25, 37, 40, 47, 167, 338, 371, 387], "team": [6, 141, 360], "petsc_support": 6, "txt": [6, 8, 123, 339, 358], "with_albani": [6, 342], "albany_support": 6, "encount": [6, 339, 358], "error": [6, 8, 15, 40, 51, 141, 144, 147, 148, 151, 322, 323, 324, 325, 328, 330, 331, 332, 338, 340, 342, 360, 361, 376, 377, 378, 379, 385, 386], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 40, 51, 60, 156, 165, 180, 186, 204, 225, 249, 338, 340, 341, 342, 361, 362, 389, 394, 395], "attempt": [6, 141, 360, 368], "sh": [6, 136, 137, 138, 139, 140, 141, 142, 342, 358, 361, 389], "build_": 6, "command": [6, 10, 16, 38, 40, 46, 96, 97, 99, 107, 141, 338, 341, 342, 359, 360, 361, 364, 368, 369, 389], "pscratch": 6, "suggest": [6, 141, 358], "seem": [6, 14, 361, 364, 369], "switch": [6, 361, 362], "v0": 6, "19": 6, "submodul": [6, 318, 335, 342, 354, 361, 389], "serv": [6, 117, 118, 123, 144, 334, 361], "kind": [6, 361], "whichev": [6, 318, 342, 354, 372], "load_dev_polaris_0": [6, 136, 137, 138, 139, 140, 141, 142, 361], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 318, 341, 342, 354, 361, 389], "pio": [6, 25, 36, 39, 167, 321, 326, 328, 329, 330], "openmp": [6, 25, 37, 40, 47, 97, 136, 138, 139, 163, 167, 178, 223, 247, 274, 338, 361], "ifort": [6, 136, 138, 141, 361], "ac": [6, 361], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 361, 367, 368, 389], "job_script": [6, 361, 389], "bash": [6, 342, 358, 361, 389], "termin": [6, 8, 141, 338, 342, 361], "isn": [6, 9, 15, 322, 323, 324, 325, 331, 332, 338, 341, 361], "ll": [6, 19, 141, 341, 361, 369, 377], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 136, 138, 139, 141, 342], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 334, 338, 361, 372, 385], "util": [6, 341, 342, 384], "matrix": 6, "automat": [6, 7, 9, 12, 14, 19, 141, 144, 338, 341, 342, 361, 362, 363, 365, 366, 368, 369, 389], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 389], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 139, 141, 338, 341, 361, 367], "integr": [6, 15, 144, 187, 252, 321, 326, 329, 341, 361, 370, 375, 376, 377, 378, 379, 380, 383, 385, 386, 388, 393], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 364, 389], "245": 6, "246": 6, "non": [6, 14, 18, 320, 338, 361, 376, 385, 389], "care": [6, 11, 13, 144, 334, 338, 342, 361], "temporari": [6, 141], "begin": [6, 7, 18, 321, 338, 342, 355, 360, 361, 368, 375, 377, 380, 387], "anymor": 6, "best": [6, 17, 141, 338, 342], "hard": [6, 338, 361, 375, 380, 387], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 40, 51, 59, 66, 125, 126, 127, 154, 157, 338, 340, 361, 392], "myst": [7, 361], "tip": [7, 342], "easi": [7, 9, 42, 341, 361], "pull": [7, 141, 341, 342, 361, 362], "guid": [7, 144, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 339, 341, 361, 363, 364, 365, 366, 367, 368, 369, 373, 390], "baroclin": [7, 9, 14, 175, 176, 177, 178, 181, 184, 187, 189, 192, 193, 195, 223, 274, 321, 335, 338, 361, 373, 381, 395], "channel": [7, 9, 14, 175, 176, 177, 178, 181, 184, 187, 189, 192, 193, 195, 223, 274, 321, 335, 338, 358, 361, 373, 381, 395], "label": [7, 125, 126, 310, 368, 379, 389], "prepend": 7, "categori": [7, 144, 335, 336, 337, 360, 395], "And": [7, 14, 342, 361], "becom": [7, 338, 340, 361], "who": [7, 342, 361, 362, 369], "citat": 7, "basi": [7, 361], "overview": [7, 360, 364, 369], "common": [7, 12, 14, 46, 51, 141, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 358, 359, 361, 362, 368, 369, 370, 388, 389, 393, 394, 395], "characterist": [7, 372, 388, 393], "comment": [7, 339, 362], "appli": [7, 13, 14, 67, 144, 223, 320, 334, 361, 375, 380, 387, 388, 393], "vertic": [7, 15, 19, 89, 127, 149, 150, 201, 214, 215, 235, 246, 247, 252, 261, 273, 309, 310, 311, 312, 314, 315, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 338, 362, 371, 373], "grid": [7, 13, 17, 72, 79, 83, 86, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 144, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 321, 326, 328, 329, 330, 333, 338, 355, 361, 362], "forc": [7, 222, 223, 326, 333, 357, 361, 395], "specif": [7, 9, 14, 19, 53, 141, 144, 318, 334, 335, 336, 338, 354, 355, 360, 361, 362, 364, 368, 375, 380, 383, 388, 389, 393, 394], "public": [7, 11, 338, 361, 362], "api": [7, 12, 360, 361], "underscor": [7, 361], "md": [7, 361], "eval": 7, "rst": [7, 14, 361], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 335, 341], "compute_cell_count": [7, 144, 321, 328, 329, 330, 361], "dynamic_model_config": [7, 14, 321, 329, 361], "ot": [7, 361], "numpydoc": [7, 361], "text": [7, 8, 64, 375, 377, 379, 387], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 19, 144, 163, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 315, 318, 326, 328, 330, 338, 361, 362, 364, 367, 369, 372, 379, 380, 382, 384], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 161, 162, 318, 326, 362, 370, 380, 382, 384], "overli": [7, 361, 380], "ic": [7, 159, 161, 162, 221, 222, 226, 228, 230, 318, 326, 340, 341, 342, 355, 357, 360, 361, 362, 364, 371, 372, 373, 381, 392, 395], "shelf": [7, 159, 161, 221, 222, 226, 228, 230, 326, 334, 341, 361, 362, 371, 372, 373, 381], "draft": [7, 326, 372], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 47, 48, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 78, 83, 84, 86, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 132, 134, 135, 144, 146, 147, 148, 149, 150, 151, 154, 156, 157, 159, 160, 161, 163, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 180, 181, 184, 185, 186, 187, 189, 192, 193, 195, 197, 200, 201, 202, 204, 205, 207, 208, 210, 213, 214, 215, 216, 217, 219, 222, 223, 225, 226, 228, 230, 232, 234, 235, 236, 237, 238, 239, 241, 243, 246, 247, 249, 250, 252, 254, 256, 258, 260, 261, 262, 263, 264, 265, 267, 270, 274, 276, 278, 280, 283, 284, 285, 287, 288, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 328, 330, 334, 338, 340, 346, 347, 348, 350, 351, 352, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387], "xarrai": [7, 15, 17, 19, 89, 126, 127, 144, 149, 150, 201, 214, 215, 235, 261, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 361], "dataarrai": [7, 89, 126, 127, 149, 150, 201, 214, 215, 235, 236, 237, 238, 261, 262, 263, 264, 297, 298, 302, 303, 304, 309, 310, 311, 312, 315, 316, 317], "sea": [7, 144, 161, 162, 236, 238, 262, 264, 298, 302, 303, 304, 309, 310, 315, 318, 326, 355, 357, 360, 361, 362, 372, 380, 382, 384, 392, 395], "surfac": [7, 144, 161, 162, 236, 238, 262, 264, 298, 302, 303, 304, 309, 310, 315, 318, 320, 326, 333, 357, 361, 362, 372, 375, 380, 382, 383, 384, 387], "height": [7, 127, 144, 161, 162, 236, 238, 262, 264, 298, 302, 303, 304, 310, 315, 318, 326, 361, 362, 372, 380, 382, 384], "mask": [7, 127, 296, 299, 302, 305, 307, 338, 361, 362, 372], "landicepressur": [7, 370, 380], "deviat": 7, "float": [7, 9, 14, 26, 71, 73, 74, 78, 83, 90, 100, 105, 124, 126, 127, 144, 146, 147, 148, 149, 150, 154, 157, 159, 163, 166, 173, 176, 177, 178, 181, 184, 187, 189, 192, 197, 200, 201, 202, 207, 210, 213, 214, 215, 216, 222, 223, 226, 234, 235, 236, 237, 238, 239, 241, 243, 247, 252, 254, 258, 260, 261, 262, 263, 264, 265, 267, 270, 274, 280, 283, 284, 285, 287, 290, 310, 311, 312, 338, 340, 361], "densiti": [7, 13, 144, 361], "seawat": 7, "displac": 7, "land": [7, 144, 162, 318, 326, 340, 360, 361, 362, 370, 372, 380], "landicedraft": 7, "equal": [7, 333, 338, 341, 380, 387], "entri": [7, 56, 90, 93, 118, 127], "line": [7, 10, 38, 40, 64, 96, 97, 107, 127, 141, 338, 339, 341, 342, 360, 388, 389], "type": [7, 14, 17, 18, 19, 26, 102, 109, 135, 141, 144, 147, 207, 273, 275, 310, 322, 323, 324, 331, 332, 334, 338, 340, 341, 342, 354, 358, 359, 361, 362, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 394], "side": 7, "colon": 7, "doubl": [7, 14, 144, 338, 339, 361], "back": [7, 361, 364, 389], "quot": 7, "interfer": 7, "arg": [7, 12, 40, 96, 97, 338], "next": [7, 141, 160, 321, 326, 329, 361, 372, 380, 389], "indent": [7, 338], "obviou": [7, 14, 361], "none": [7, 9, 14, 18, 25, 26, 28, 29, 31, 32, 37, 40, 41, 42, 43, 47, 48, 51, 52, 55, 57, 59, 61, 66, 67, 69, 71, 78, 84, 88, 90, 99, 100, 101, 104, 105, 108, 110, 114, 118, 119, 123, 124, 125, 126, 127, 130, 131, 134, 144, 146, 147, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 161, 163, 164, 167, 168, 170, 171, 173, 178, 179, 201, 203, 214, 215, 223, 224, 235, 240, 247, 248, 261, 262, 266, 274, 284, 302, 310, 312, 338, 340, 350, 361, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 392], "els": [7, 8, 141, 338, 340, 361], "further": [7, 144, 334, 340, 369, 388, 393], "rais": [7, 9, 18, 40, 43, 61, 62, 144, 338, 341, 361, 379], "list_cas": 8, "list_machin": [8, 341], "list_suit": 8, "anywher": [8, 12, 141, 342], "object": [8, 12, 17, 24, 27, 28, 29, 52, 54, 92, 111, 112, 115, 119, 129, 130, 134, 135, 154, 157, 160, 163, 236, 262, 335, 340, 341, 361], "contrast": 8, "read": [8, 20, 27, 28, 29, 40, 41, 51, 63, 91, 92, 129, 144, 320, 338, 340, 361], "properti": [8, 280, 320, 338, 368, 376, 377, 378, 385, 386], "setup_suit": 8, "write": [8, 11, 12, 13, 16, 19, 63, 111, 129, 295, 310, 338, 340, 342, 357, 361], "proven": [8, 10, 59, 360, 362], "save": [8, 19, 61, 86, 141, 310, 321, 322, 323, 324, 325, 331, 332, 334, 338, 340, 361, 368, 374, 375, 380], "target": [8, 11, 17, 18, 25, 42, 62, 66, 90, 100, 141, 144, 167, 321, 328, 329, 330, 338, 340, 361, 376, 377, 378, 385, 386], "minimum": [8, 66, 126, 127, 144, 148, 163, 167, 284, 310, 321, 328, 329, 330, 338, 361, 362, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393], "determin": [8, 9, 13, 14, 15, 19, 42, 46, 89, 90, 127, 135, 141, 144, 163, 172, 280, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 338, 361, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 393], "maximum": [8, 18, 124, 126, 127, 207, 284, 310, 361, 362, 372], "product": 8, "ntask": [8, 9, 14, 17, 25, 37, 40, 44, 47, 96, 97, 100, 144, 163, 167, 178, 223, 247, 274, 338, 340, 361], "cpus_per_task": [8, 14, 40, 44, 47, 96, 97, 338], "quickli": [8, 380], "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 361, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "min_task": [8, 9, 14, 17, 25, 37, 40, 47, 96, 97, 100, 144, 163, 167, 178, 223, 247, 274, 338, 361], "min_cpus_per_task": [8, 14, 40, 47, 96, 97, 338], "fewest": 8, "least": [8, 13, 335, 342, 375, 379], "fail": [8, 14, 18, 25, 37, 40, 47, 61, 141, 144, 163, 167, 178, 223, 247, 274, 338, 360, 361, 362, 376, 377, 378, 379, 382, 384, 385, 386], "run_task": [8, 338, 340], "run_single_step": 8, "oper": [8, 49, 141, 183, 191, 269, 338, 340, 394], "log": [8, 10, 19, 40, 51, 97, 124, 125, 126, 127, 338, 340, 342, 360, 389], "figur": [8, 19, 126, 127, 310, 328, 330, 333, 334, 336, 338, 362, 376, 378, 385, 386], "cpu": [8, 141, 338, 361, 367, 389], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 32, 33, 40, 41, 45, 46, 51, 52, 53, 59, 60, 70, 71, 75, 78, 79, 80, 84, 85, 100, 106, 129, 144, 145, 146, 148, 149, 154, 156, 157, 159, 161, 163, 165, 167, 176, 177, 178, 180, 181, 184, 185, 186, 187, 189, 192, 193, 195, 197, 200, 201, 202, 204, 205, 208, 210, 213, 214, 216, 217, 219, 222, 223, 225, 226, 228, 230, 232, 234, 235, 236, 239, 241, 243, 246, 247, 249, 250, 252, 254, 256, 258, 259, 260, 261, 262, 265, 267, 270, 273, 274, 275, 276, 278, 280, 283, 285, 287, 288, 290, 292, 310, 328, 330, 335, 338, 340, 341, 345, 347, 348, 350, 351, 352, 361, 370, 377, 388, 393], "retriev": [8, 358], "store": [8, 11, 19, 53, 141, 144, 326, 328, 330, 338, 361, 376, 378, 385, 386, 389], "case_output": [8, 12], "individu": [8, 9, 19, 335, 340, 341, 361, 368, 369, 375, 380, 388, 389, 395], "overal": 8, "whole": [8, 51, 174, 334, 340, 341, 361, 380, 389], "window": 8, "update_cach": 8, "_cached_fil": [8, 338], "origin": [8, 57, 309, 311, 312, 315, 342, 361, 372, 389], "enabl": [8, 19, 333, 338, 358, 362, 369, 382, 384], "consum": [8, 338, 340, 361, 394], "faster": [8, 342], "parser": [9, 48, 55, 59, 187, 197, 210, 252, 280], "mpas_tool": [9, 12, 13, 83, 321, 326, 328, 329, 330, 333, 338, 340, 361], "mpasconfigpars": [9, 338, 340], "polarisconfigpars": [9, 11, 17, 21, 40, 48, 51, 55, 61, 65, 66, 95, 98, 99, 115, 125, 126, 144, 160, 187, 197, 210, 222, 236, 252, 262, 280, 294, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 361], "certain": [9, 18, 59, 141, 338, 342, 362, 388, 393], "filepath": [9, 17, 48, 55, 59, 144], "overridden": [9, 31, 32, 33, 60, 144, 361], "algorithm": [9, 14, 144, 274, 321, 328, 329, 330, 338, 361], "featur": [9, 14, 341, 342, 359, 361, 362, 370, 375, 383, 387], "accommod": [9, 25, 37, 40, 47, 96, 97, 167], "add_from_packag": [9, 11, 17, 144, 338, 340, 341, 361], "content": [9, 14, 118, 119, 121, 123, 135, 144, 334, 336, 338, 341, 357, 361, 389, 392], "inertial_gravity_wav": [9, 318, 327, 330, 335, 340, 382, 394], "inertialgravitywav": [9, 328, 340], "import": [9, 11, 12, 13, 15, 17, 18, 19, 144, 334, 335, 338, 340, 341, 342, 359, 361], "__init__": [9, 14, 17, 18, 20, 25, 40, 51, 59, 70, 71, 78, 84, 100, 129, 144, 145, 146, 154, 157, 159, 161, 163, 167, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 197, 200, 202, 205, 208, 210, 213, 216, 217, 219, 222, 223, 226, 228, 230, 232, 234, 236, 239, 241, 243, 246, 247, 250, 252, 254, 256, 258, 260, 262, 265, 267, 270, 273, 274, 275, 276, 278, 280, 283, 285, 287, 288, 290, 292, 334, 335, 338, 340, 341, 345, 347, 348, 350, 351, 352, 359, 361], "super": [9, 14, 17, 18, 144, 335, 338, 340, 341, 361], "cfg": [9, 11, 17, 53, 144, 335, 340, 341, 361, 362, 376, 378, 385, 386, 389], "except": [9, 40, 43, 61, 310, 338, 341, 361, 383, 386], "behavior": [9, 14, 114, 144, 338, 339, 342, 361], "noth": [9, 141, 358, 376, 377, 378, 385, 386], "particular": [9, 141, 309, 334, 342, 360, 364, 368, 389], "fine": [9, 340, 361, 387], "_get_basic_config": 9, "larg": [9, 326, 338, 340, 361, 363, 380, 385], "those": [9, 14, 51, 124, 141, 144, 321, 329, 340, 341, 342, 360, 361, 376, 377, 378, 379, 380, 385, 386, 388, 393, 394], "configpars": [9, 96, 97], "getinteg": 9, "getfloat": [9, 12, 14, 17, 144, 338, 361], "getboolean": [9, 338, 361], "implement": [9, 144, 326, 335, 338, 341, 375, 376, 377, 378, 379, 382, 384, 385, 386], "getlist": [9, 340, 361], "comma": [9, 376, 377, 378, 385, 386], "integ": [9, 13], "boolean": [9, 127, 302], "etc": [9, 14, 120, 123, 335, 338, 375], "getexpress": 9, "tupl": [9, 126, 127, 310], "rang": [9, 19, 127, 361, 383], "numpi": [9, 13, 15, 72, 79, 80, 86, 90, 125, 127, 144, 174, 294, 295, 311, 312, 338, 361], "linspac": [9, 19, 377], "arang": 9, "arrai": [9, 15, 72, 79, 80, 86, 125, 144, 294, 295, 297, 298, 302, 303, 309, 316, 317, 361], "sens": [9, 360, 361], "set_shared_config": [9, 17, 340], "intuit": 9, "resolution_to_subdir": [9, 335], "rpe": [9, 195, 335, 341, 361, 389], "resdir": [9, 335], "config_filenam": [9, 40, 51, 160, 338, 340], "indir": [9, 25, 40, 51, 100, 161, 163, 167, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 222, 223, 226, 228, 230, 246, 247, 250, 252, 254, 256, 274, 276, 278, 335, 338, 348, 350, 352], "add_task": [9, 334, 335], "most": [9, 12, 46, 141, 318, 334, 335, 338, 341, 342, 354, 361, 362, 367, 368, 369, 372, 373, 390, 395], "construct": [9, 14, 145, 159, 294, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 314, 315, 320, 333, 335, 340, 345, 361, 375, 379], "bring": [9, 144, 361, 370], "add_step": [9, 340, 361], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 144, 178, 189, 247, 254, 321, 329, 338, 361], "baroclinic_channel_rp": 9, "viscos": [9, 14, 178, 187, 189, 247, 252, 254, 321, 329, 338, 341, 361, 375, 383], "dtype": [9, 340, 361], "nu_": 9, "openmp_thread": [9, 14, 25, 37, 40, 47, 97, 163, 167, 178, 223, 247, 274, 338, 340, 361], "add_yaml_fil": [9, 14, 25, 144, 338, 340, 361], "One": [9, 13, 361, 389, 394], "advantag": [9, 14, 141, 340, 341, 361, 368], "track": [9, 25, 338, 340, 342], "associ": [9, 13, 14, 15, 19, 144, 296, 299, 305, 307, 311, 312, 321, 322, 324, 329, 331, 332, 338, 340, 342, 359, 380], "while": [10, 17, 19, 320, 321, 338, 358, 361, 380], "meant": [10, 341, 362], "simplifi": [10, 326, 380], "verifi": [10, 339, 362], "io": [10, 338, 340, 341, 360, 361, 362, 373, 390], "lot": [11, 144, 338, 341, 361], "o": [11, 12, 119, 121, 135, 141, 341, 342, 361, 362, 389], "handl": [11, 12, 342, 361, 368, 379], "lower": [11, 19, 340, 361, 375], "directli": [11, 13, 14, 17, 40, 144, 336, 338, 341, 359, 360, 361, 364], "readm": [11, 340], "importlib": 11, "resourc": [11, 14, 37, 40, 44, 47, 95, 96, 97, 155, 158, 164, 168, 179, 203, 224, 240, 248, 266, 274, 321, 328, 329, 330, 338, 340, 361], "global_ocean": [11, 14, 338, 340, 341, 342, 362, 389], "files_for_e3sm": [11, 338, 340, 362], "str": [11, 14, 20, 25, 26, 27, 28, 29, 31, 32, 34, 40, 41, 42, 43, 48, 51, 52, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 71, 78, 84, 88, 90, 92, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 144, 146, 147, 148, 149, 150, 151, 154, 157, 160, 161, 163, 166, 167, 170, 171, 173, 174, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 200, 201, 202, 205, 208, 213, 214, 215, 216, 217, 219, 222, 223, 226, 228, 230, 234, 235, 239, 241, 243, 246, 247, 250, 252, 254, 260, 261, 265, 267, 270, 274, 276, 278, 283, 284, 285, 287, 288, 290, 292, 295, 310, 338, 340, 348, 350, 352, 361], "did": [11, 359, 361], "add_input_fil": [11, 17, 18, 41, 338, 340, 361], "collect": [11, 103, 145, 335, 337, 345, 359, 361], "whenev": [11, 338, 361], "flexibl": [11, 144, 338, 340, 342, 361], "No": [11, 360, 382, 384], "step_dir": 11, "database_root": [11, 141, 338, 362, 363, 364, 365, 366, 367, 368, 369, 389], "download_path": 11, "join": [11, 361], "bathymetry_databas": [11, 338, 362], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 302, 334, 338, 361, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 395], "url": [11, 42, 61, 338, 358, 362], "web": [11, 338, 362], "anl": [11, 338, 362], "gov": [11, 338, 358, 362, 364, 367, 369], "mpas_standalonedata": [11, 141, 362, 368], "dest_path": [11, 61], "remot": [11, 42, 342, 360], "bathymetri": [11, 309, 315, 338, 362], "access": [11, 41, 340, 341, 342, 361, 363, 368, 369], "update_permiss": 11, "along": [11, 14, 19, 141, 310, 311, 312, 321, 326, 329, 338, 360, 361], "151209": 11, "omega_ctest": 11, "readabl": [11, 341], "writabl": 11, "identifi": [11, 117, 141, 335, 354, 395], "e3sm_unifi": 11, "polaris_machin": [11, 342], "base_url": 11, "filenam": [11, 17, 18, 40, 42, 43, 51, 94, 101, 102, 103, 104, 108, 109, 110, 124, 126, 130, 132, 160, 161, 163, 338, 340, 342, 361], "database_path": 11, "download_target": 11, "has_opt": 11, "full_path": 11, "count": [11, 339, 359], "strategi": [12, 363, 364, 365, 366, 367, 369], "stderr": [12, 40, 51, 338, 340], "loggingcontext": 12, "check_cal": [12, 338], "won": [12, 341, 361, 362], "logger": [12, 18, 40, 51, 70, 97, 124, 338, 340, 361], "full": [12, 40, 96, 114, 228, 297, 298, 311, 312, 321, 338, 340, 357, 360, 361, 368, 372, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389], "although": [12, 144], "captur": [12, 383], "explicit": [12, 341], "go": [12, 48, 55, 276, 278, 334, 338, 340, 341, 342, 361, 369], "subprocess": [12, 40, 96, 97, 113, 338, 341, 358], "produc": [12, 14, 17, 19, 40, 41, 43, 57, 144, 151, 160, 161, 176, 184, 192, 223, 230, 315, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 338, 341, 342, 347, 357, 361, 376, 378, 382, 384, 385, 386, 389, 392], "otherwis": [12, 19, 141, 338, 340, 342, 361, 363, 364, 365, 366, 367, 368, 369, 375], "intent": 12, "desir": [12, 13, 14, 18, 19, 124, 144, 338, 339, 340, 361, 362, 389], "trick": [12, 338], "direct": [12, 13, 14, 83, 236, 262, 321, 326, 328, 329, 330, 361, 369, 375, 380, 382, 383, 384], "snippet": [12, 361], "dome": [12, 70, 334, 338, 340, 389, 395], "setup_mesh": [12, 338], "setupmesh": [12, 338, 340], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 338], "landice_grid": [12, 338, 361], "l": [12, 124, 144, 361, 369], "quasiuniformsphericalmeshstep": [13, 144, 340], "icosahedralmeshstep": [13, 144, 340], "jigsaw": [13, 71, 75, 77, 78, 80, 82, 84, 197, 210, 280, 285, 290, 338, 342, 360], "complex": [13, 79, 340, 341, 361], "build_cell_width_lat_lon": [13, 78], "opt": [13, 84], "make_jigsaw_mesh": [13, 78], "icosahedr": [13, 71, 73, 166, 197, 210, 280, 285, 290, 322, 323, 324, 325, 331, 332, 340, 376, 377, 378, 379, 385, 386], "significantli": [13, 372, 379], "smooth": [13, 100, 310], "cell": [13, 14, 15, 19, 71, 72, 73, 74, 78, 79, 80, 83, 86, 89, 100, 102, 109, 127, 144, 155, 158, 164, 167, 168, 179, 203, 224, 236, 238, 240, 248, 262, 264, 266, 296, 297, 298, 299, 302, 305, 307, 309, 310, 311, 312, 314, 315, 316, 317, 321, 328, 329, 330, 334, 355, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 392], "quasi": [13, 78, 322, 323, 324, 325, 331, 332, 340, 362, 376, 377, 378, 379, 380, 385, 386, 388, 393], "hand": [13, 105, 341], "restrict": [13, 361, 383, 388], "subdivis": [13, 71, 72, 73, 74, 75], "icosahedron": [13, 72, 73, 74, 75], "tabl": [13, 342, 368, 389], "approxim": [13, 71, 73, 74, 78, 144, 155, 158, 164, 168, 179, 203, 224, 240, 248, 266, 321, 328, 329, 330, 342, 361], "width": [13, 71, 72, 73, 78, 79, 80, 86, 127, 310, 361, 375, 380, 383], "km": [13, 14, 71, 72, 73, 74, 78, 79, 80, 83, 86, 144, 154, 157, 159, 163, 166, 176, 177, 178, 181, 184, 185, 187, 189, 192, 202, 216, 222, 223, 226, 239, 241, 252, 258, 265, 267, 287, 321, 322, 323, 324, 325, 328, 330, 331, 332, 338, 361, 362, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393, 395], "5": [13, 14, 73, 126, 141, 144, 187, 252, 321, 325, 338, 339, 341, 358, 361, 362, 375, 376, 377, 378, 379, 380, 383, 385, 386, 388, 389, 393], "240": [13, 73, 144, 322, 323, 324, 325, 331, 332, 362, 376, 377, 378, 385, 386], "6": [13, 73, 310, 311, 312, 338, 361, 370, 373, 375, 376, 385, 387, 389, 390], "120": [13, 73, 144, 339, 376, 377, 378, 379, 385, 386], "7": [13, 73, 141, 361, 369, 376, 377, 380, 386, 389], "60": [13, 73, 144, 322, 323, 324, 325, 331, 332, 372, 376, 377, 378, 380, 385, 386], "8": [13, 73, 126, 141, 321, 342, 361, 362, 375, 377, 382, 384, 386, 389], "30": [13, 14, 73, 144, 334, 361, 367, 369, 375, 380, 387, 388, 393], "9": [13, 19, 73, 141, 361, 376, 377, 378, 385, 386, 389], "15": [13, 14, 73, 321, 326, 361, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 389, 393], "11": [13, 73, 141, 361], "3": [13, 73, 140, 141, 144, 311, 312, 321, 329, 338, 339, 342, 358, 361, 362, 368, 369, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389], "13": [13, 73, 361, 375], "94": [13, 73, 379], "spherical_mesh": [13, 79], "cell_width": [13, 71, 72, 73, 74, 78, 79, 80, 86], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 86, 125, 126, 127, 144, 146, 151, 189, 195, 208, 219, 254, 278, 292, 309, 310, 311, 312, 315, 321, 322, 323, 324, 325, 329, 331, 332, 352, 376, 377, 378, 379, 382, 383, 384, 385, 386, 392, 395], "plot_cell_width": 13, "cell_width_filenam": [13, 86], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 72, 78, 79, 80, 86, 101, 103, 105, 108, 125, 312, 322, 323, 324, 325, 331, 332, 362, 377], "lon": [13, 17, 72, 78, 79, 80, 86, 101, 103, 105, 108, 125, 312, 322, 323, 324, 325, 331, 332, 362, 377], "sphere": [13, 282, 283, 285, 287, 290, 322, 323, 324, 325, 331, 332, 376, 377, 378, 385, 386], "vtk_lat_lon": 13, "far": [13, 141, 144, 296, 305, 307, 341, 361], "But": [13, 141, 334, 338, 341, 342, 361, 362, 368], "hexagon": [13, 83, 361, 382, 384], "planar_hex": [13, 83, 321, 326, 328, 329, 330, 333, 338, 361], "make_planar_hex_mesh": [13, 83, 321, 326, 328, 329, 330, 333, 338, 361], "x": [13, 19, 72, 79, 80, 83, 86, 104, 110, 127, 144, 174, 236, 262, 309, 311, 326, 338, 361, 375, 380, 382, 384, 387], "y": [13, 14, 19, 83, 104, 110, 127, 144, 236, 262, 309, 311, 321, 326, 328, 329, 330, 338, 361, 369, 375, 380, 382, 383, 384], "nx": [13, 83, 334, 338, 361, 387], "ny": [13, 83, 334, 338, 361, 387], "dc": [13, 334, 338, 361], "distanc": [13, 83, 100, 207, 311, 312, 361, 375, 383], "adjac": [13, 314, 372], "center": [13, 19, 83, 126, 207, 236, 262, 310, 311, 312, 313, 314, 334, 361, 372, 375, 383], "admittedli": 13, "oddli": 13, "period": [13, 320, 321, 322, 324, 326, 328, 329, 330, 331, 332, 338, 361, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386], "nonperiodic_x": [13, 338, 361], "nonperiodic_i": [13, 338, 361], "consider": [13, 296, 299, 305, 307, 320, 355], "compute_planar_hex_nx_ni": [13, 338, 361], "lx": [13, 83, 338, 361, 375, 380, 382, 383, 384, 387], "ly": [13, 83, 338, 361, 375, 380, 383, 387], "explan": 13, "subtleti": 13, "account": [13, 83, 342, 361, 363, 364, 366, 367, 368, 369, 389], "behav": 13, "stagger": [13, 83], "physic": [13, 83, 351, 357, 361, 372], "np": [13, 15, 19, 207, 338, 361, 377], "sqrt": [13, 15, 382], "domain": [13, 25, 34, 83, 127, 144, 159, 167, 174, 320, 334, 355, 361, 375, 377, 379, 380, 382, 383, 384, 387, 388, 393, 395], "extra": [13, 64, 342, 367], "factor": [13, 100], "500e3": 13, "160e3": 13, "1e3": [13, 338, 361], "max": [13, 144, 338, 361, 372, 375, 377, 383], "int": [13, 14, 25, 26, 37, 40, 47, 65, 66, 67, 71, 72, 73, 74, 75, 83, 90, 96, 97, 100, 126, 127, 146, 147, 149, 150, 151, 155, 158, 163, 164, 167, 168, 178, 179, 201, 203, 214, 215, 223, 224, 235, 240, 247, 248, 261, 266, 274, 310, 338, 361, 387], "ds_mesh": [13, 15, 19, 89, 127, 311, 312, 314, 338, 361], "creation": [13, 338, 362], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 37, 40, 47, 96, 97, 167, 334, 338, 341, 361], "distant": 13, "descend": [14, 17, 144, 322, 323, 324, 325, 328, 330, 331, 332, 334, 335, 338, 340, 341, 361], "modelstep": [14, 144, 338, 340, 361], "update_pio": [14, 25, 167], "make_graph": [14, 25, 167], "At": [14, 40, 51, 336, 337, 340, 361, 370, 379], "set_model_resourc": 14, "thread": [14, 25, 37, 40, 46, 47, 51, 97, 163, 167, 178, 223, 247, 274, 335, 338, 339, 359, 361, 362, 364, 367, 369, 389, 394], "prior": [14, 53, 338], "graph_target": [14, 154, 157, 160, 163, 167, 178], "oceanmodelstep": [14, 144, 338, 361], "prefix": [14, 42, 141, 144, 149, 150, 201, 214, 215, 235, 261, 340, 342, 362], "end": [14, 19, 127, 154, 157, 310, 311, 312, 338, 340, 341, 342, 357, 359, 361, 364, 375, 376, 377, 382, 384, 387, 392], "yml": 14, "reason": [14, 17, 46, 141, 338, 341, 361, 394], "add_namelist_fil": [14, 25, 144, 338, 340], "add_model_config_opt": [14, 25, 144, 338, 340, 361], "add_streams_fil": [14, 25, 144, 338, 340], "themselv": [14, 341, 360], "question": [14, 338, 362], "never": [14, 141, 359], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 144, 361], "config_run_dur": [14, 144, 340, 361], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 51, 176, 359, 361], "config_block_decomp_file_prefix": [14, 361], "time_integr": [14, 144, 361, 370, 376, 377, 378, 379, 380, 385, 386], "config_time_integr": [14, 144], "rk4": [14, 144, 326, 341, 376, 377, 378, 379, 380, 385, 386], "filename_templ": [14, 144, 361], "restart": [14, 18, 51, 144, 222, 223, 228, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 339, 341, 347, 348, 357, 359, 361, 380, 389, 394], "output_interv": [14, 144, 361, 370, 376, 377, 378, 379, 380, 385, 386], "0030_00": 14, "clobber_mod": [14, 144, 361], "truncat": [14, 144, 361], "reference_tim": [14, 144], "0001": [14, 144, 361], "01_00": [14, 144, 355, 361], "tracer": [14, 19, 197, 207, 275, 276, 278, 280, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 361, 373, 377, 378, 381, 382, 384, 385, 386, 387], "xtime": [14, 15, 90, 144, 361], "normalveloc": [14, 18, 19, 144, 194, 229, 263, 320, 321, 326, 328, 329, 330, 333, 338, 361, 387], "layerthick": [14, 18, 144, 194, 229, 296, 299, 303, 304, 305, 307, 309, 321, 326, 328, 329, 330, 333, 338, 361], "refzmid": [14, 296, 299, 305, 307, 338, 361], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 361], "clariti": [14, 338], "global_converg": [14, 340, 361, 374], "substitut": 14, "config_write_output_on_startup": [14, 361], "0000_00": [14, 361], "config_use_mom_del2": [14, 361], "config_implicit_bottom_drag_coeff": [14, 361], "0e": [14, 384, 387], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 361], "config_cvmix_background_viscos": [14, 361], "worri": 14, "togeth": [14, 18, 141, 334, 359, 361, 394], "overkil": 14, "reli": [14, 338, 340, 361], "dict": [14, 20, 26, 28, 29, 31, 32, 33, 40, 44, 51, 92, 93, 95, 99, 100, 116, 118, 119, 125, 129, 130, 131, 144, 146, 154, 157, 160, 163, 167, 170, 171, 200, 213, 234, 260, 283, 285, 290, 338, 340, 361], "config_mom_del2": [14, 144, 321, 329, 338, 361], "precis": [14, 144, 338, 361], "bool": [14, 25, 26, 30, 40, 42, 50, 51, 52, 57, 61, 62, 63, 67, 113, 114, 118, 123, 124, 125, 126, 127, 131, 156, 165, 166, 167, 180, 186, 197, 204, 210, 222, 223, 225, 249, 274, 276, 278, 280, 285, 290, 309, 310, 312, 361], "possibli": [14, 40, 51, 316, 317, 335, 338, 340, 342, 361], "at_setup": [14, 30, 156, 165, 180, 186, 204, 225, 249, 361], "being": [14, 30, 40, 51, 113, 115, 118, 124, 141, 144, 156, 165, 180, 186, 204, 225, 249, 310, 326, 338, 340, 341, 361, 372], "dt": [14, 144, 178, 274, 338, 361, 375, 376, 377, 378, 379, 382, 384, 385, 386, 388, 393], "proport": [14, 144, 361, 372, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 388, 393], "dt_per_km": [14, 144, 322, 323, 324, 325, 331, 332, 361, 375, 380, 382, 384, 388, 393], "stackoverflow": [14, 62, 361], "1384565": [14, 361], "7728169": [14, 62, 361], "config_dt": [14, 144, 361], "strftime": [14, 361], "gmtime": [14, 361], "run_time_step": [14, 178, 247, 338, 361], "durat": [14, 144, 321, 328, 329, 330, 333, 339, 361, 370], "run_second": [14, 361], "btr_dt": [14, 144, 178, 274, 338, 361, 375], "btr_dt_per_km": [14, 144, 361, 370, 375, 380], "config_btr_dt": [14, 144, 361], "bit": [14, 141, 341, 359, 361, 375, 380, 389], "complic": [14, 144, 341, 342, 361], "slightli": [14, 342], "sophist": 14, "immutable_stream": [14, 361], "var_struct": [14, 354], "var": [14, 120, 354, 361], "var_arrai": [14, 354], "tag": [14, 360], "taken": [14, 25, 167, 312, 322, 323, 324, 325, 331, 332, 338, 361, 369, 389], "past": 14, "experi": [14, 141, 341, 372], "difficult": [14, 141, 368], "synchron": [14, 360], "out_nam": 14, "equival": [14, 342, 361, 363], "template_replac": [14, 28, 29, 144], "treat": [14, 339, 341], "jinja2": [14, 28, 29, 119, 154, 157], "render": [14, 28, 29, 119], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 338, 341, 342, 362, 389], "qu240dynamicadjust": 14, "adjust": [14, 141, 144, 161, 162, 163, 318, 326, 362, 380], "interv": [14, 15, 173, 370, 376, 377, 378, 379, 380, 385, 386], "spin": 14, "reus": [14, 19, 127, 338, 341, 342, 361, 362, 389], "qualit": 14, "forgotten": 14, "broken": [14, 338, 341], "immedi": [14, 70, 342, 361], "miss": [14, 338, 361, 362], "detect": [14, 19, 362, 363, 365, 366, 368, 379, 389], "gpmeti": [14, 362], "divid": [14, 19, 314, 372], "partition_graph": [14, 25, 167], "circumst": [14, 18, 40, 41, 338, 361], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 358, 361, 380, 388, 393], "v1": [14, 372], "better": [14, 17, 141, 389], "v2": [14, 362, 372], "littl": [14, 341, 342, 360, 361], "feel": [14, 141, 338, 361], "runtime_setup": [14, 17, 37, 47, 321, 326, 328, 329, 330, 340], "yourself": [14, 361, 368], "culler": 14, "cull": [14, 321, 326, 328, 329, 330, 338, 361], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 86, 88, 89, 126, 127, 144, 147, 148, 149, 150, 201, 208, 214, 215, 219, 235, 261, 284, 292, 296, 299, 305, 307, 309, 310, 311, 312, 315, 316, 317, 320, 321, 325, 328, 329, 330, 333, 361, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386], "weight": [14, 15, 17, 88, 161, 296, 299, 305, 307, 311, 312, 314, 315, 361, 372], "weight_field": [14, 88], "helper": [15, 334, 335], "handi": 15, "area_for_field": 15, "right": [15, 140, 141, 142, 144, 310, 340, 342, 361, 362, 372, 375, 377, 389], "edg": [15, 19, 89, 102, 105, 109, 126, 127, 236, 237, 262, 263, 311, 312, 313, 320, 361], "dimens": [15, 19, 89, 127, 144, 146, 151, 201, 214, 309, 316, 317, 333, 375, 380], "statist": [15, 362], "calcul": [15, 328, 338, 340], "xr": [15, 19, 236, 237, 238, 262, 263, 264, 338, 361], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 150, 215], "mesh_filenam": [15, 19, 25, 88, 126, 160, 161, 167, 174], "open_dataset": [15, 19, 338, 361], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 90, 144, 317, 334], "get_output_field": [15, 144], "field_nam": [15, 19, 127, 148, 149, 150, 201, 214, 215, 235, 261, 284], "output_filenam": [15, 144, 154, 157, 174], "ds_out": [15, 311, 312], "time_index": [15, 90], "isel": [15, 19, 309], "frequent": [17, 318, 354], "observ": [17, 311, 312, 315, 360], "dataset": [17, 89, 90, 127, 236, 262, 296, 299, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 361], "region": [17, 19, 360, 362, 380], "pyremap": [17, 106], "interpol": [17, 100, 310, 311, 312, 314, 315, 316, 317, 362], "hood": 17, "esmf_regridweightgen": 17, "mbtempest": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 367, 372], "bilinear": [17, 100, 310, 377, 388, 393], "my_test_cas": 17, "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 362], "destin": [17, 100, 101, 102, 103, 104, 105, 106], "src_from_lon_lat": 17, "lon_var": [17, 101, 103, 108], "lat_var": [17, 101, 103, 108], "dst_from_mpa": 17, "mesh_nam": [17, 101, 102, 103, 104, 105, 108, 109, 110, 147, 149, 150, 166, 201, 208, 214, 215, 219, 235, 261, 292, 340], "qu60": 17, "subclass": [17, 75, 78, 79, 80, 85, 144, 361], "src_": 17, "dst_": 17, "pick": [17, 111, 112], "vizmap": [17, 197, 210, 222, 280, 340], "128": [17, 339, 364, 365, 369], "cosine_bell_viz": [17, 19, 323, 377, 388, 393], "dlon": [17, 105, 377, 388, 393], "dlat": [17, 105, 377, 388, 393], "remap_method": [17, 377, 388, 393], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 105], "map_tool": 17, "perhap": [17, 19, 43, 310, 334, 336], "cover": [17, 355, 361], "nearli": [17, 338, 340, 359, 360, 361], "workflow": [17, 338, 342], "critic": [18, 361], "easiest": [18, 141, 342], "validate_var": [18, 40, 43, 144, 154, 157, 274, 338], "meth": 18, "add_output_fil": [18, 41, 338, 340, 361], "temperatur": [18, 194, 229, 320, 321, 326, 329, 330, 333, 338, 357, 361, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 393], "salin": [18, 194, 229, 320, 321, 326, 329, 333, 338, 361, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 388, 393], "done": [18, 37, 47, 338, 340, 342, 361, 389], "compare_vari": [18, 361], "filename1": [18, 124, 361], "filename2": [18, 124, 361], "compact": [18, 361], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 124], "valueerror": [18, 341], "quiet": [18, 113, 114, 124, 131], "report": 18, "threshold": [18, 144, 331, 376, 377, 378, 379, 382, 384, 385, 386], "l1": [18, 124], "00000000000000e": 18, "l2": [18, 124, 144, 147, 148, 322, 323, 324, 325, 331, 332, 376, 377, 378, 379, 382, 384, 385, 386], "l_infin": 18, "linf": [18, 124], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 321, 375], "2thread": [18, 375], "test_20210616": 18, "further_valid": 18, "zero": [18, 297, 298, 302, 303, 304, 309, 311, 312, 315, 320, 321, 326, 329, 333, 361, 376, 377, 378, 380, 385, 386, 387], "l1_norm": [18, 124], "l2_norm": [18, 124], "linf_norm": [18, 124], "nonzero": [18, 124], "solut": [18, 139, 147, 149, 150, 201, 214, 215, 235, 236, 237, 238, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 323, 325, 328, 330, 339, 358, 361, 373, 379, 381, 382], "aspect": [19, 127, 361], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 39, 141, 162, 167, 318, 342, 361, 362, 375, 383], "plot_horiz_field": [19, 338, 361], "patch": [19, 126, 127, 361], "polygon": 19, "character": [19, 376, 378, 383, 385, 386], "accordingli": [19, 98], "cell_mask": [19, 127], "ds_init": [19, 361], "maxlevelcel": [19, 144, 296, 297, 298, 299, 302, 303, 304, 305, 307, 361], "final_normalveloc": [19, 361], "t_index": [19, 127, 361], "vmin": [19, 127, 310, 361, 377], "max_veloc": [19, 361], "vmax": [19, 127, 310, 361, 377], "cmap": [19, 127, 310, 338, 361], "cmo": [19, 338, 361, 376, 378, 379, 385, 386], "balanc": [19, 210, 325, 326, 338, 361, 376, 378, 379, 385, 386], "show_patch_edg": [19, 127, 338, 361], "water": [19, 325, 328, 361, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388], "column": [19, 272, 273, 275, 276, 278, 325, 333, 342, 346, 347, 348, 350, 351, 352, 354, 355, 357, 372, 373, 379, 380, 381, 389, 390, 391], "increas": [19, 144, 341], "effici": [19, 338, 361], "patch_mask": [19, 127], "subsequ": [19, 144, 338, 394], "ncell": [19, 144, 201, 214, 309, 316, 317, 338, 361], "nedg": [19, 338, 361], "cell_patch": 19, "cell_patch_mask": 19, "out_file_nam": [19, 127], "720": 19, "figsiz": [19, 126, 127, 310], "bottomdepth": [19, 144, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 338, 361, 372, 379], "edge_patch": 19, "edge_patch_mask": 19, "plot_global_mpas_field": 19, "cmocean": [19, 338, 361], "noqa": [19, 70, 338, 361], "f401": [19, 338, 361], "da": [19, 126, 316, 317], "tracer1": [19, 144, 376, 378, 385, 386], "nvertlevel": [19, 127, 144, 146, 151, 296, 299, 305, 307, 309, 316, 317, 338, 361, 372], "out_filenam": [19, 122, 125, 126, 295, 310], "colormap_sect": [19, 125, 126], "titl": [19, 125, 126, 127, 144, 146, 151, 310], "plot_land": [19, 125, 126], "central_longitud": [19, 126], "180": [19, 72, 79, 80, 86, 105, 144, 314, 376, 377, 378, 385, 386], "disabl": [19, 320, 377, 395], "contin": [19, 125, 126], "overlain": 19, "degre": [19, 72, 79, 80, 86, 105, 309, 312, 314, 362, 375, 380, 383], "quantiti": 19, "antimeridian": 19, "colormap": [19, 125, 126, 127, 310, 322, 323, 324, 325, 331, 332, 361, 376, 377, 378, 379, 385, 386], "cosin": [19, 144, 197, 199, 200, 202, 205, 207, 208, 216, 219, 288, 292, 323, 340, 361, 373, 374, 376, 378, 379, 381, 385, 386, 388, 393], "bell": [19, 144, 197, 199, 200, 202, 205, 207, 208, 216, 219, 288, 292, 323, 340, 361, 373, 374, 376, 378, 379, 381, 385, 386, 388, 393], "converg": [19, 197, 201, 210, 214, 215, 232, 233, 235, 258, 259, 261, 284, 322, 323, 324, 325, 328, 330, 331, 332, 336, 339, 360, 361, 376, 377, 378, 379, 382, 385, 386, 388, 393], "colormap_nam": [19, 125, 126, 322, 323, 324, 331, 332, 376, 377, 378, 379, 385, 386], "viridi": [19, 322, 323, 324, 331, 332, 361, 376, 377, 378, 385, 386], "norm": [19, 124, 125, 126, 144, 148, 151, 322, 323, 324, 325, 331, 332, 376, 377, 378, 379, 382, 384, 385, 386], "norm_typ": [19, 125, 126, 322, 323, 324, 331, 332, 376, 377, 378, 379, 385, 386], "colorbar": [19, 125, 126, 127, 310, 322, 323, 324, 331, 332, 376, 377, 378, 379, 385, 386], "colorbar_limit": [19, 126, 322, 323, 324, 331, 332, 376, 378, 379, 385, 386], "standard": [19, 246, 247, 252, 329, 341, 342, 351, 361, 364, 383, 389], "logarithm": [19, 127], "upper": [19, 127], "bound": [19, 315, 328, 330], "color": [19, 126, 127, 310], "set_und": [19, 322, 324, 331, 332], "set_ov": [19, 322, 324, 331, 332], "under_color": [19, 322, 324, 331, 332], "k": [19, 322, 324, 331, 332, 372], "over_color": [19, 322, 324, 331, 332], "orang": [19, 322, 324, 331, 332, 336], "plot_global_lat_lon_field": 19, "norm_arg": [19, 125, 377], "tick": [19, 125, 377], "mark": [19, 127, 310, 342, 377], "colorbar_tick": [19, 125, 377], "symlog": [19, 125], "symmetr": 19, "central": [19, 377], "normal": [19, 236, 237, 262, 263, 320, 325, 338, 339, 342, 361, 368, 379], "symlognorm": 19, "lognorm": 19, "hous": [20, 376, 377, 378, 385, 386], "kei": [20, 51, 118, 144, 146, 160, 163, 340], "max_memori": [25, 37, 40, 47, 167, 338], "graph_filenam": [25, 88], "make_yaml": 25, "config_model": [25, 26, 31, 32, 144, 154, 157, 170, 171], "stride": [25, 39, 167], "partit": [25, 36, 46, 65, 88, 167, 321, 326, 328, 329, 330, 338, 362, 363, 364, 365, 366, 367, 389], "model_config_data": 25, "streams_data": 25, "neither": [25, 40, 51, 100, 163, 167, 178, 223, 247, 274, 338], "nor": [25, 40, 51, 100, 163, 167, 178, 223, 247, 274, 338, 361], "append": [25, 40, 42, 51, 100, 161, 163, 167, 176, 177, 178, 181, 184, 185, 187, 189, 192, 193, 195, 223, 226, 228, 230, 246, 247, 250, 252, 254, 274, 338, 348, 350, 352], "ideal": [25, 37, 40, 47, 96, 97, 100, 144, 163, 167, 178, 223, 247, 274, 275, 276, 278, 334, 338, 341, 360, 361, 362, 395], "fewer": [25, 37, 40, 47, 96, 97, 144, 163, 167, 178, 223, 247, 274, 338, 361, 389], "memori": [25, 37, 40, 47, 167, 338, 362], "mb": [25, 37, 40, 47, 167, 338, 362], "placehold": [25, 37, 40, 47, 167, 338, 389], "diverg": [31, 32, 33, 324, 373, 376, 379, 381, 385], "counterpart": [31, 32, 33], "nest": [31, 33, 129, 131, 154, 157, 167, 170], "graph_fil": 34, "run_as_subprocess": [40, 338], "smallest": [40, 338, 359, 372, 395], "unit": [40, 101, 105, 108, 338, 359, 375, 395], "term": [40, 359, 361, 382, 384], "necessarili": [40, 42], "input_data": 40, "until": [40, 41, 338, 340, 389], "finish": [40, 41, 85, 338, 361], "known": [40, 41, 141, 323, 338, 361], "suffici": [40, 338, 383], "establish": [40, 41, 338], "has_shared_config": 40, "is_depend": [40, 338], "machine_info": [40, 338], "machineinfo": 40, "base_work_dir": [40, 51, 115, 338, 340], "log_filenam": [40, 51, 338, 340], "redirect": [40, 338], "extern": [40, 141, 318, 335, 338, 340, 342, 354, 373, 390], "turn": [40, 58, 335, 338, 358, 361, 387], "inner": [40, 338], "repres": [40, 361, 372, 377, 380, 385], "database_compon": [42, 338], "work_dir_target": [42, 338], "come": [42, 141, 338, 342, 361, 363, 364, 365, 366, 367, 368, 369, 373], "_database_root": 42, "available_resourc": [44, 95], "constrain": [44, 155, 158, 164, 168, 179, 203, 224, 240, 248, 266, 321, 328, 329, 330, 338, 361], "cores_per_nod": [44, 95, 98, 141, 362, 363, 364, 365, 366, 367, 368, 369, 389], "everi": [45, 321, 338, 340, 341, 357, 358, 359, 361, 375, 380, 387], "child": [45, 144, 335, 338, 340, 341], "subtask": 47, "step_symlink": [51, 340], "outsid": [51, 52, 334, 336, 338, 340, 342], "stdout_logg": [51, 340], "goe": [51, 338, 340, 361], "regardless": [51, 340], "new_step_log_fil": [51, 340], "run_by_default": [52, 340], "assum": [53, 119, 130, 141, 342, 361, 369, 375], "step_path": 57, "variant": [57, 199, 212, 280, 282, 321, 326, 329, 334, 339, 341, 342, 361, 368, 372, 375, 376, 377, 378, 383, 385, 386], "uncach": 57, "datestamp": 57, "yymmdd": [57, 362], "dry": [57, 339], "meta": 59, "empti": [59, 310, 338, 341, 342, 359, 361], "link_nam": 62, "overwrit": 62, "55742015": 62, "fileexistserror": 62, "unless": [62, 114, 342], "isadirectoryerror": 62, "show_progressbar": 63, "fix": [63, 144, 361], "permiss": [63, 342], "everyon": 63, "progress": [63, 113, 114], "bar": [63, 127], "whitespac": 64, "jinja": [64, 130, 144, 322, 323, 324, 331, 332], "blank": [64, 342], "qo": [65, 363, 364, 366, 368, 369, 389], "qualiti": [65, 363, 364, 366, 368, 369, 389], "servic": [65, 363, 364, 366, 368, 369, 389], "gpus_per_nod": 65, "numer": [65, 144, 322, 324, 331, 332, 376, 378, 382, 384, 385, 386], "gpu": [65, 364, 367, 369], "wall_tim": [65, 389], "wall": [65, 389], "target_cor": 66, "min_cor": 66, "decomposition_test": [70, 334, 389], "decompositiontest": [70, 334], "e501": [70, 361], "turquois": [70, 364], "usr": [70, 141, 364, 389], "climat": [70, 363, 364, 365, 368, 389], "mhoffman": 70, "constant": [71, 78, 79, 144, 310, 311, 312, 320, 332, 361, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386, 387, 388, 393], "latitud": [72, 79, 101, 103, 105, 108, 125, 126, 144, 309, 312, 376, 377, 378, 379, 385, 388, 393], "longitud": [72, 79, 80, 86, 101, 103, 105, 108, 125, 126, 144, 309, 312, 376, 377, 378, 379, 385, 388, 393], "ndarrai": [72, 79, 80, 86, 90, 125, 127, 174, 207, 294, 295, 361], "length": [72, 79, 80, 86, 380, 383], "90": [72, 79, 80, 86, 144, 338, 376, 377, 378, 380, 385, 386], "static": [73, 74], "rule": 73, "thumb": 73, "achiev": [74, 339], "uniform": [78, 83, 154, 157, 202, 216, 287, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 340, 361, 362, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393], "natur": 83, "jigsawpi": [84, 338], "jigsaw_jig_t": 84, "area": [89, 311, 312, 361], "dt_target": 90, "start_xtim": 90, "char": 90, "defaults_filenam": 91, "total": [95, 338, 339, 341, 361, 362, 364, 389], "substep": [96, 97], "command_line_arg": 96, "cpus_per_nod": 98, "map_filenam": 100, "src_grid_info": 100, "dst_grid_info": 100, "neareststod": [100, 377, 388, 393], "conserv": [100, 377, 388, 393], "expand_dist": 100, "meter": [100, 207, 294, 295, 312, 376, 378, 385], "expand": [100, 144, 372], "expand_factor": 100, "src_mesh_filenam": 100, "scrip": [100, 140, 142, 362], "dst_mesh_filenam": 100, "map_": 100, "source_typ": 100, "_": [100, 141, 338, 340, 342, 361, 383, 387], "dest_typ": 100, "1d": [101, 105, 108, 125, 144, 294, 295, 296, 297, 298, 299, 302, 303, 305, 307, 326], "2d": [101, 105, 108, 125, 161, 222, 228, 315, 326, 373, 381], "5x0": [101, 105, 108], "5degre": [101, 105, 108], "coordin": [101, 103, 104, 108, 110, 125, 127, 236, 262, 296, 299, 300, 301, 305, 306, 307, 308, 309, 311, 312, 314, 315, 326, 371, 373, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 392], "mesh_typ": [102, 109, 334, 338, 340], "vertex": [102, 109], "x_var": [104, 110], "y_var": [104, 110], "proj_attr": [104, 110], "proj_str": [104, 110], "proj": [104, 110, 367], "left": [105, 144, 310, 361, 372, 375, 377], "remapp": [106, 107], "remap_fil": 106, "is_task": 114, "steps_to_skip": 114, "component_nam": 115, "config_filepath": 115, "unpickl": [116, 338], "cached_step": 117, "task_list": 118, "_all": 118, "streams_filenam": 119, "lxml": [119, 121, 135], "etre": [119, 121, 135], "new_child": 120, "children": 120, "sub": [120, 361, 380], "new_tre": 121, "infin": [124, 376, 378, 385, 386], "toler": 124, "data_arrai": 125, "colorbar_label": [125, 126, 310], "subtitl": [125, 126], "dpi": [126, 310], "200": [126, 144, 310, 328, 330, 361, 375, 380, 382, 384, 387], "patch_edge_color": 126, "horizont": [126, 127, 144, 174, 230, 309, 310, 315, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 375, 376, 378, 380, 382, 383, 384, 385, 386, 387], "inch": [126, 127, 310], "dot": [126, 127, 310, 341], "face": 126, "ax": [127, 310], "z_index": 127, "cmap_set_und": 127, "cmap_set_ov": 127, "cmap_scal": 127, "cmap_titl": 127, "vert_dim": 127, "transect_x": 127, "transect_i": 127, "transect_color": 127, "black": [127, 310], "transect_start": 127, "red": [127, 310, 336], "transect_end": 127, "green": [127, 310, 336], "transect_linewidth": 127, "transect_markers": 127, "depth": [127, 144, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 307, 309, 310, 315, 361, 362, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388], "slice": [127, 147], "fieldnam": 127, "matplotlib": [127, 128, 310, 361], "multi": [127, 310], "panel": [127, 310], "visibl": 127, "ratio": 127, "Not": 127, "transect": [127, 144, 309, 310, 362], "marker": 127, "style": [128, 144, 360, 361], "classmethod": 130, "flat": [131, 310, 372, 375, 379], "namelist_templ": 134, "polarisyaml": [134, 135], "processed_registry_filenam": 135, "registri": [135, 320, 354], "steam": 135, "1_anvil_intel_impi": [136, 141], "ve": [136, 137, 138, 139, 140, 142, 342, 361], "1_anvil_gnu_openmpi": 136, "1_chicoma": 137, "cpu_gnu_mpich": [137, 142], "crai": [137, 140, 141, 142, 367, 369], "1_chrysalis_intel_openmpi": 138, "1_chrysalis_gnu_openmpi": 138, "soon": [139, 141, 361, 389], "1_compy_intel_impi": 139, "1_compy_gnu_openmpi": 139, "1_frontier_gnu_mpich": 140, "1_frontier_crayclang_mpich": 140, "load_polaris_env": [141, 342, 361, 389], "therefor": [141, 338, 359, 361], "chicoma": [141, 368, 389], "mpich": [141, 342, 360, 364, 367, 369, 389], "compi": [141, 366, 389], "frontier": [141, 368], "crayclang": [141, 367], "pm": [141, 369, 389], "compymcnodefac": [141, 368], "pretti": [141, 338, 341, 361, 362], "conda_path": [141, 342], "osx": [141, 368], "clang": [141, 342], "1_": 141, "morpheu": 141, "cobalt": [141, 363, 364, 365, 366, 367, 368, 369], "single_nod": [141, 362, 363, 364, 365, 366, 367, 368, 369, 389], "mpirun": [141, 358, 362, 363, 364, 365, 366, 367, 368, 369, 389], "srun": [141, 338, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389], "parallel_execut": [141, 358, 362, 363, 364, 365, 366, 367, 368, 369, 389], "modules_befor": [141, 364, 367, 369], "modules_aft": [141, 364, 367, 369], "polaris_env": [141, 363, 364, 365, 366, 367, 368, 369], "deploi": [141, 342, 360, 363, 364, 365, 366, 367, 368, 369], "mpi_gnu": [141, 363, 364, 365, 366, 367, 368, 369], "hdf5": [141, 363, 364, 365, 366, 367, 368, 369], "use_e3sm_hdf5_netcdf": [141, 363, 364, 365, 366, 367, 368, 369], "discoveri": 141, "hostnam": 141, "hostname_contain": 141, "queu": 141, "laptop": [141, 342, 361, 362], "workstat": [141, 342], "high": [141, 338, 365, 368], "hpc": [141, 342, 364, 368], "safest": [141, 342], "mpi_": 141, "simpl": [141, 144, 341, 354, 361, 389], "compiler_gnu": 141, "compiler_intel": 141, "hopefulli": [141, 362], "parlanc": 141, "concret": 141, "ubuntu": 141, "spec": [141, 358, 369], "gcc": 141, "curl": 141, "81": 141, "buildabl": 141, "install_missing_compil": 141, "cc": [141, 367], "bin": [141, 342, 369, 389], "cxx": 141, "f77": 141, "fc": 141, "operating_system": 141, "ubuntu22": 141, "04": 141, "extra_rpath": 141, "luck": 141, "catch": [141, 339, 342], "22": 141, "guess": [141, 361], "correct": [141, 342], "potenti": [141, 174, 187, 252, 338, 361, 375, 383], "purg": 141, "perl": 141, "32": [141, 339, 389], "bsnc6lt": 141, "ugetvbp": 141, "sxfyy4k": 141, "2020": 141, "304": 141, "n3b5fye": 141, "j3zxncu": 141, "7ohuiwq": 141, "k2zu3y5": 141, "mirrcz7": 141, "variou": [141, 272, 338, 342, 346], "ask": 141, "gb": 141, "minut": [141, 321, 326, 339, 375, 380, 383, 394], "hour": [141, 144, 328, 330, 339, 357, 364, 369, 370, 376, 377, 378, 379, 380, 382, 384, 385, 386, 389, 392], "zlib": 141, "incompat": 141, "ubuntu20": 141, "readlin": 141, "pkgconf": 141, "spackdir": 141, "env": [141, 369], "arch": 141, "repositori": [141, 336, 360, 361, 389], "x86_64_v4": 141, "free": [141, 320, 361, 362], "touch": [141, 311, 312, 342], "everyth": 141, "1_pm": 142, "cpu_intel_mpich": 142, "ever": [144, 341], "decid": [144, 361], "veri": [144, 326, 335, 338, 341, 342, 354, 361, 379, 380, 387], "earli": [144, 373, 389], "stage": [144, 320, 338, 340, 342, 350, 357, 373, 389], "clearli": 144, "three": [144, 368, 376, 378, 379, 380, 385, 386, 395], "run_dur": [144, 370, 376, 377, 378, 379, 380, 385, 386], "bottom_drag": [144, 361], "config_bottom_drag_mod": 144, "implicit": 144, "config_implicit_bottom_drag_typ": 144, "config_implicit_constant_bottom_drag_coeff": 144, "manufactured_solut": [144, 318, 327, 335, 384], "config_use_manufactured_solut": 144, "config_disable_vel_hmix": 144, "tendenc": [144, 377, 384], "veldifftendencyen": 144, "velhyperdifftendencyen": 144, "map_yaml_opt": 144, "map_yaml_config": 144, "mpaso_to_omega": 144, "capit": [144, 361], "heurist": 144, "round": [144, 376, 377, 378, 385, 386], "cell_count": [144, 155, 158, 164, 168, 179, 203, 224, 240, 248, 266, 361], "goal_cells_per_cor": [144, 361, 376, 377, 378, 382, 383, 384, 385, 386, 388, 393], "pinch": 144, "2000": [144, 334, 355, 357, 361, 380, 392], "max_cells_per_cor": [144, 361, 376, 377, 378, 382, 383, 384, 385, 386, 388, 393], "seciton": 144, "control": [144, 322, 323, 324, 325, 331, 332, 338, 362, 375, 376, 377, 378, 385, 386, 387, 389], "scale": [144, 375, 385, 389], "tri": [144, 341], "apport": 144, "dai": [144, 173, 187, 252, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 357, 361, 375, 376, 377, 378, 379, 380, 383, 385, 386, 387, 392], "form": [144, 329, 383, 395], "dddd_hh": [144, 173], "ss": [144, 173], "get_time_interval_str": 144, "fill": 144, "dt_str": 144, "run_duration_str": 144, "output_interval_str": 144, "yaml_filenam": [144, 154, 157, 160, 163], "caviti": [144, 326, 341, 361, 362, 370, 372, 380], "frazil": [144, 326, 380], "flux": [144, 320, 326, 329, 380, 383, 387], "add_spherical_base_mesh_step": [144, 340], "spherical_converg": [144, 325, 340, 376, 377, 378, 385, 386], "icos_resolut": [144, 376, 377, 378, 385, 386], "480": [144, 376, 377, 378, 385, 386], "qu_resolut": [144, 376, 377, 378, 385, 386], "150": [144, 376, 377, 378, 383, 385, 386], "210": [144, 372, 376, 377, 378, 385, 386], "evalu": [144, 147, 148, 149, 150, 201, 214, 215, 235, 237, 238, 261, 263, 264, 284, 322, 324, 331, 332, 376, 377, 378, 379, 385, 386], "convergence_eval_tim": [144, 376, 377, 378, 379, 385, 386], "24": [144, 323, 377, 392], "convergence_thresh": [144, 377], "error_typ": [144, 147, 148, 376, 377, 378, 379, 385, 386], "convergence_forward": [144, 322, 323, 324, 331, 332, 377, 379], "split_explicit": [144, 370, 376, 377, 378, 379, 380, 385, 386], "rk4_dt_per_km": [144, 370, 376, 377, 378, 379, 380, 385, 386], "split": [144, 341], "split_dt_per_km": [144, 370, 380], "barotrop": [144, 178, 274, 338, 361, 375, 387], "simul": [144, 326, 328, 330, 338, 359, 361, 370, 374, 375, 376, 379, 380, 382, 384, 388, 389, 393], "infti": [144, 372], "inf": [144, 147, 148, 379], "infrastructur": [144, 341, 361], "add_cosine_bell_task": [144, 335], "sphericalconvergenceforward": [144, 322, 323, 324, 325, 331, 332], "invok": 144, "analyz": [144, 146, 200, 213, 283, 285, 290, 361, 376, 377, 378, 385, 386], "split_explicit_t": [144, 361], "convergenceforward": [144, 328, 330], "convergenceanalysi": [144, 322, 323, 324, 325, 328, 330, 331, 332], "convergence_var": [144, 146], "zidx": [144, 146, 147, 149, 150, 151, 201, 214, 215, 235, 261], "exact_solut": 144, "state": [144, 149, 161, 174, 176, 177, 184, 185, 187, 192, 201, 214, 235, 246, 247, 252, 261, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 338, 339, 361, 370, 377, 379], "put": [144, 159, 342, 361], "ice_shelf": [144, 326], "iceshelf": 144, "ice_shelf_2d": [144, 318, 327, 380], "iceshelf2d": [144, 326], "setup_ssh_adjustment_step": 144, "ssh_forward": [144, 160, 163, 326], "ssh_adjust": [144, 159, 160, 161, 318, 326, 338, 362, 370, 380], "sshforward": [144, 160, 326], "sshadjust": [144, 326], "grid_1d": 144, "generate_1d_grid": 144, "vertical_grid": [144, 294, 296, 299, 305, 307, 334, 338, 361, 362, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "z": [144, 146, 147, 149, 150, 151, 201, 214, 215, 235, 261, 297, 298, 302, 303, 304, 305, 306, 307, 308, 326, 361, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "star": [144, 304, 307, 308, 326, 361, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "init_vertical_coord": [144, 338, 361], "minlevelcel": [144, 296, 298, 299, 302, 303, 304, 305, 307, 361], "cellmask": [144, 296, 299, 302, 305, 307, 361], "zmid": [144, 296, 299, 305, 307, 361], "restingthick": [144, 296, 299, 304, 305, 307, 361], "update_layer_thick": 144, "entir": [144, 361, 375, 380, 383, 394], "petersen": [144, 342, 361, 375], "et": [144, 361, 372, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386], "al": [144, 361, 372, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386], "2015": [144, 361, 375], "int_": 144, "rho": 144, "dv": 144, "sort": [144, 335, 336, 341, 342], "compute_rp": [144, 361], "csv": [144, 322, 323, 324, 325, 331, 332, 361], "compute_transect": [144, 310, 326], "plot_transect": [144, 309], "dependencies_dict": 146, "rate": [146, 148, 149, 201, 214, 235, 261, 284, 322, 323, 324, 325, 328, 330, 331, 332, 361, 376, 377, 378, 379, 382, 384, 385, 386, 387], "variable_nam": [147, 151], "exact": [147, 149, 150, 201, 214, 215, 235, 236, 237, 238, 261, 262, 263, 264, 323, 325, 328, 330, 341, 382, 384], "conv_thresh": [148, 284, 382, 384], "deriv": [149, 160, 163, 235, 261], "min_resolut": [159, 163], "sshdir": 159, "shelv": [159, 318, 362, 372, 380], "init_filenam": [160, 163, 361], "forwardstep": [160, 338], "yaml_replac": [160, 163], "shared_step": 160, "match": [161, 326, 342, 361], "dynam": [162, 167, 318, 326, 333, 362, 370, 375, 376, 377, 378, 379, 380, 385, 386, 387, 388], "subdivid": [166, 311, 312, 340], "dynamic_ntask": 167, "available_cor": 169, "estim": [169, 172, 361], "time_str": 173, "initial_state_filenam": 174, "energi": [174, 187, 252, 360, 361, 375, 383], "len": [174, 361], "output_fil": [174, 338, 361], "shorter": [184, 339, 347], "step_subdir": [193, 228, 348], "processor": [193, 338, 348, 375, 380], "include_viz": [197, 210, 222, 280, 340], "advect": [197, 246, 247, 252, 280, 322, 323, 324, 325, 329, 331, 332, 376, 377, 378, 382, 383, 384, 385, 386, 387], "less": [197, 210, 280, 285, 290, 338, 372], "max_valu": 207, "ri": 207, "accord": [207, 379, 382, 384, 389], "radiu": [207, 312, 376, 377, 378, 385, 386], "testcas": [218, 256, 361, 362, 375, 380, 387, 389], "include_restart": 222, "include_tid": 222, "tidal": [222, 223, 326, 380], "do_restart": 223, "tidal_forc": [223, 320], "cross": [230, 256, 361], "plane": 230, "inerti": [232, 233, 234, 236, 239, 241, 243, 328, 340, 373, 381], "graviti": [232, 233, 234, 236, 239, 241, 243, 328, 340, 373, 381], "wave": [232, 233, 234, 236, 239, 241, 243, 245, 246, 247, 250, 252, 254, 256, 262, 328, 329, 338, 340, 361, 373, 375, 381, 384], "analys": [234, 260], "angleedg": [236, 262], "angl": [236, 262, 379], "posit": [236, 262, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 307, 309, 315, 361, 372, 387], "xcell": [236, 262, 338, 361], "ycell": [236, 262, 338, 361], "xedg": [236, 262, 338, 361], "yedg": [236, 262], "f0": 236, "corioli": [236, 328, 330, 361, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387], "eta0": [236, 262], "amplitid": [236, 262], "kx": [236, 262], "ky": [236, 262], "angular": [236, 262], "frequenc": [236, 262, 321], "veloc": [237, 263, 320, 321, 325, 326, 328, 329, 330, 340, 342, 361, 376, 377, 378, 379, 380, 385, 386, 387, 389], "norm_vel": 237, "eta": [238, 264, 382, 384], "taskdir": [241, 243, 267, 270], "vadv_method": [246, 247, 252], "vlr": [246, 247, 252, 329, 383], "test_cas": 256, "manufactur": [258, 259, 260, 262, 265, 267, 270, 330, 373, 381], "mix": [273, 334, 335, 376, 382, 384, 387], "param": [273, 275], "resources_fix": 274, "ag": [275, 276, 278], "evolv": [275, 360, 372, 376, 377, 378, 385, 386, 387], "ideal_ag": [276, 278], "case_nam": [280, 283, 285, 287, 288, 290], "transport": [282, 283, 285, 287, 290, 322, 324, 331, 332, 376, 377, 378, 385, 386], "nondivergent_2d": [282, 318, 327, 385], "divergent_2d": [282, 318, 327, 378], "correlated_tracers_2d": [282, 318, 327, 376], "rotation_2d": [282, 318, 327, 386], "layer": [294, 295, 296, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 315, 320, 321, 322, 324, 326, 328, 329, 330, 331, 332, 333, 361, 362, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "bottom": [296, 297, 298, 299, 302, 303, 304, 305, 307, 320, 361, 362, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388], "thick": [296, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 315, 321, 322, 324, 325, 326, 329, 331, 332, 333, 355, 361, 362, 372, 375, 376, 378, 379, 380, 382, 385, 386, 392], "stretch": [296, 299, 305, 307, 361, 372], "elev": [296, 299, 305, 307, 361, 372], "midpoint": [296, 299, 305, 307, 361], "reftopdepth": [296, 299, 302, 303, 305, 307, 361], "down": [296, 297, 298, 299, 302, 303, 304, 305, 307, 309, 315, 326, 361, 372, 377], "ref": [296, 299, 305, 307, 361], "middl": [296, 299, 305, 307, 310, 361], "refbottomdepth": [296, 297, 298, 299, 302, 303, 305, 307, 338, 361], "refinterfac": [296, 299, 305, 307, 361], "element": [296, 299, 305, 307, 361], "vertcoordmovementweight": [296, 299, 305, 307, 361], "movement": [296, 299, 305, 307, 361], "alter": [297, 298, 338, 340, 342, 360, 361, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388], "partial": [297, 298, 361, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "seafloor": [297, 302, 303, 304, 309, 310, 315, 372], "terrain": [299, 372], "min_vert_level": [302, 372, 380], "min_layer_thick": [302, 362, 372, 380], "unstretch": 304, "ds_horiz_mesh": 309, "layer_thick": [309, 315], "bottom_depth": [309, 315, 338, 361, 362, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388], "min_level_cel": [309, 315], "max_level_cel": [309, 315], "quad": 309, "intersect": [309, 311, 312, 313], "instant": 309, "tidx": 309, "ds_transect": [309, 310, 315, 316, 317], "vert": 309, "find_transect_levels_and_weight": [309, 316, 317], "mpas_field": 310, "outline_color": 310, "ssh_color": 310, "seafloor_color": 310, "interface_color": 310, "cell_boundary_color": 310, "linewidth": 310, "color_start_and_end": 310, "start_color": 310, "end_color": 310, "3d": 310, "outlin": 310, "boundari": [310, 315, 360, 375, 380, 383, 395], "inset": 310, "axi": [310, 338, 361, 386], "plot_start_end": 310, "x_transect": 311, "y_transect": 311, "ds_tri": [311, 312, 313, 314], "subdivision_r": [311, 312], "10000": [311, 312, 382, 384], "triangl": [311, 312, 313, 314, 315], "segment": [311, 312, 313, 315], "mesh_to_triangl": [311, 312, 313], "scipi": [311, 312, 313, 362], "spatial": [311, 312, 313, 387], "ckdtree": [311, 312, 313], "make_triangle_tre": [311, 312], "candid": [311, 312], "enough": [311, 312, 313, 321, 329, 338, 341, 361, 380], "curvatur": [311, 312], "lie": [311, 312], "purposefulli": [311, 312], "repeat": [311, 312], "discontinu": [311, 312, 378, 385, 386], "xnode": [311, 314], "ynode": [311, 314], "dnode": [311, 312], "horiztriangleindic": [311, 312], "horiztrianglenodeindic": [311, 312], "mod": [311, 312], "horizcellindic": [311, 312], "interphorizcellindic": [311, 312], "interphorizcellweight": [311, 312], "averag": [311, 312], "xtransect": 311, "ytransect": 311, "dtransect": [311, 312], "transectindicesonhoriznod": [311, 312], "transectweightsonhoriznod": [311, 312], "nodevalu": [311, 312], "transectvalu": [311, 312], "lon_transect": 312, "lat_transect": 312, "earth_radiu": 312, "radian": [312, 314], "earth": [312, 360], "sphere_radiu": 312, "cartesian": [312, 314, 386], "xcartnod": 312, "ycartnod": 312, "zcartnod": 312, "lonnod": [312, 314], "latnod": [312, 314], "lontransect": 312, "lattransect": 312, "xcarttransect": 312, "ycarttransect": 312, "zcarttransect": 312, "great": [312, 361], "circl": 312, "kd": 313, "connect": [314, 361, 369], "pair": [314, 376, 378, 385, 386, 392], "tricellindic": 314, "nodecellindic": 314, "nodecellweight": 314, "znode": 314, "counterclockwis": 314, "wind": [314, 379, 387], "ds_horiz_transect": 315, "horiz": 315, "find_spherical_transect_cells_and_weight": 315, "find_planar_transect_cells_and_weight": 315, "transectz": 315, "bilinearli": 315, "nsegment": [315, 316], "nhalflevel": [315, 316], "quadrilater": 315, "nhoriznod": [315, 317], "nvertnod": [315, 317], "corner": 315, "validcel": 315, "validnod": 315, "ztransectnod": 315, "zseafloor": 315, "floor": [315, 372, 380], "cellindic": 315, "levelindic": 315, "interpcellindic": 315, "interplevelindic": 315, "nhorizweight": 315, "nvertweight": 315, "interpcellweight": 315, "multipli": [315, 376, 377, 378, 379, 385, 386], "dinterfaceseg": 315, "zinterfaceseg": 315, "dcellboundari": 315, "zcellboundari": 315, "interp_mpas_to_transect_cel": 315, "interp_mpas_to_transect_nod": 315, "among": [316, 317, 334, 336, 342, 361], "da_cel": 316, "whatev": [316, 317, 342, 389], "besid": [316, 317], "linearli": [317, 380], "neighbor": 317, "da_nod": 317, "polaris_branch": [318, 354], "example_compact": [318, 335, 354, 362], "default_input": [318, 335, 354, 361, 362], "ocean_model": [318, 342, 362], "latest": [318, 342, 354, 360, 373, 389], "compat": [318, 342, 354, 358, 360, 380], "verison": 318, "geostroph": [318, 327, 373, 381], "internal_wav": [318, 327, 383], "single_column": [318, 327, 335, 354, 356, 387], "minim": 320, "fcell": [320, 338, 361, 376, 377, 378, 385, 386], "fedg": [320, 338, 361, 376, 377, 378, 385, 386], "fvertex": [320, 338, 361, 376, 377, 378, 385, 386], "slip": 320, "solid": [320, 355, 375, 377, 380, 383], "tangenti": 320, "nonperiod": 320, "drag": [320, 322, 323, 324, 325, 331, 332], "mass": 320, "momentum": [320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 382, 384], "scalar": 320, "rigid": [320, 386], "solv": [320, 358, 372], "mid": [320, 375, 385], "vari": [320, 322, 323, 324, 325, 331, 332, 338, 358, 368, 372, 377, 379, 380], "consult": [320, 361], "eddi": [321, 375], "addition": [321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 338, 363, 364, 365, 366, 367, 369], "diffus": [321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333], "50": [321, 328, 329, 330, 361, 375, 380, 382, 384, 387], "prescrib": [321, 328, 329, 330, 379], "intens": [321, 329], "sphere_transport": [322, 324, 331, 332, 376, 378, 385, 386], "spheretransport": [322, 324, 331, 332], "deform": [322, 331, 385], "flow": [322, 324, 331, 332, 375, 376, 377, 378, 379, 385, 386], "distribut": [322, 323, 324, 331, 332, 376, 378, 385, 386], "scheme": [322, 324, 326, 329, 331, 332, 370, 376, 380, 383, 385, 387], "correl": [322, 373, 381], "differenti": [322, 324, 331, 332], "convergence_": [322, 324, 331, 332], "mixinganalysi": 322, "relationship": [322, 376], "triplot": 322, "fast": [322, 323, 324, 325, 331, 332, 361], "sphere_transport_viz_": [322, 324, 331, 332], "cosinebel": [323, 340], "shape": [323, 377], "blob": 323, "around": [323, 361, 362, 375, 376, 377, 378, 383, 385, 386], "convergence_tracer1": 323, "convergence_h": 325, "convergence_normalveloc": 325, "invari": 326, "inherit": [326, 341, 361], "iceshelftask": [326, 370], "100": [326, 328, 330, 333, 372, 382, 384, 387], "squash": [326, 372], "profil": [326, 333, 358, 387], "land_ice_flux": 326, "prognost": [326, 375, 380], "coord_typ": [326, 361, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "with_restart": [326, 380], "default_tidal_forc": 326, "shallow": [328, 342, 376, 377, 378, 379, 382, 384, 385, 386, 388], "25": [328, 330, 376, 378, 382, 384, 385, 386, 387], "exactsolut": [328, 330], "obtain": [328, 330, 342, 364], "normal_veloc": [328, 330, 338, 361], "assign": [328, 330, 377], "fall": [328, 330, 389], "accept": [328, 330], "5km": [329, 380, 383], "lagrangian": [329, 383], "manufacturedsolut": 330, "nondiverg": [331, 373, 381], "filamentanalysi": 331, "filament": [331, 385], "rotat": [332, 373, 376, 377, 378, 381, 382, 384, 385], "exercis": [333, 357, 376, 377, 378, 379, 385, 386, 387], "kpp_test": 333, "mixedlayerdepthsoutput": 333, "idealagetrac": [333, 387], "single_column_forc": [333, 387], "throughout": [333, 375, 383, 387], "idealag": 333, "enabel": 333, "formal": 334, "organ": [334, 336, 339, 360], "conceptu": [334, 341, 380], "broadli": [334, 335, 341], "realist": [334, 360, 380, 395], "greenland": [334, 360, 395], "2000m": [334, 389], "34": [334, 380, 389], "halfar": 334, "cism": 334, "dome_typ": 334, "put_origin_on_a_cel": 334, "hydrologi": 334, "hydro": [334, 395], "dome_viz": 334, "time_slic": 334, "save_imag": 334, "hide": [334, 361], "hide_fig": 334, "clutter": 334, "smoke_test": [334, 340], "smoketest": [334, 340], "restart_test": 334, "restarttest": 334, "add_dome_task": 334, "variable_resolut": [334, 338, 389], "talk": 334, "reduc": [334, 338, 380], "encompass": 335, "perspect": 335, "four": 335, "broader": 335, "univers": 335, "add_inertial_gravity_wave_task": 335, "add_manufactured_solution_task": 335, "add_single_column_task": 335, "alphabet": [335, 361], "landice_model": [335, 342], "diagram": 336, "blue": [336, 363, 389], "laid": 336, "fig": 336, "organiz": 336, "concept": [336, 341, 361, 395], "somewher": 338, "multiprocess": [338, 341, 362], "aspir": 338, "emploi": 338, "unwant": 338, "outer": 338, "dome_varres_grid": 338, "signific": [338, 339, 340], "neglig": [338, 380], "meshstep": 338, "getint": 338, "mesh_cpus_per_task": 338, "mesh_min_cpus_per_task": 338, "fit": [338, 362], "applic": [338, 341, 342, 388, 393], "launch": [338, 360], "write_netcdf": [338, 361], "convers": [338, 361], "greater": [338, 361], "graphinfofilenam": [338, 361], "culled_graph": [338, 361], "culled_mesh": [338, 361], "use_dist": [338, 361, 375, 383], "gradient_width_dist": [338, 361, 375], "gradient_width_frac": [338, 361, 375], "bottom_temperatur": [338, 361, 375, 383], "surface_temperatur": [338, 361, 375, 383, 387], "temperature_differ": [338, 361, 375, 383], "coriolis_paramet": [338, 361, 375, 380, 382, 383, 384, 387], "x_cell": [338, 361], "y_cell": [338, 361], "ones_lik": [338, 361], "zeros_lik": [338, 361], "x_min": [338, 361], "min": [338, 361, 372, 375, 380, 383, 387], "x_max": [338, 361], "y_min": [338, 361], "y_max": [338, 361], "y_mid": [338, 361], "x_perturb_min": [338, 361], "x_perturb_max": [338, 361], "perturb_width": [338, 361, 375], "y_offset": [338, 361], "sin": [338, 361, 375, 376, 378, 379, 382, 383, 384, 385], "pi": [338, 361, 372, 375, 376, 377, 378, 379, 385], "temp_vert": [338, 361], "frac": [338, 361, 372, 375, 376, 378, 382, 385], "logical_and": [338, 361], "transpos": [338, 361], "3rd": [338, 361], "crest": [338, 361, 375], "expand_dim": [338, 361], "dim": [338, 361], "broadcast": [338, 361], "xvertex": [338, 361], "attr": [338, 361], "initial_temperatur": [338, 361], "initial_normal_veloc": [338, 361], "superclass": 338, "commandlin": 338, "harm": 338, "likewis": [338, 361], "arisen": 338, "problemat": 338, "add_depend": 338, "usual": [338, 340, 342, 361, 389], "mesh_path": 338, "mesh_step": 338, "with_ice_shelf_cav": 338, "initial_state_target": 338, "adjusted_init": 338, "forcing_data": 338, "init_mode_forcing_data": 338, "entha_analy_result": 338, "mat": 338, "enthalpy_benchmark": 338, "ourselv": 338, "firewal": 338, "bedmachineantarctica_v2_and_gebco_2022_0": 338, "05_degree_20220729": 338, "slate": 338, "icepresent_qu60km_polar": 338, "practic": [338, 341, 342], "straightforward": 338, "commonli": [338, 359], "notat": [338, 388, 393], "phc": [338, 372], "That": [338, 341, 359, 361, 389], "word": 338, "ff": 338, "quwisc240": [338, 341, 389], "90c": 338, "91c": 338, "92": [338, 372], "91": 338, "sowisc12to60": [338, 389], "performance_test": 338, "approach": [338, 341, 342, 358, 361, 372], "transfer": 338, "feasibl": 338, "overhead": 338, "philosophi": [339, 341, 361], "context": [339, 361], "namesak": 339, "256": [339, 364, 369], "quicker": 339, "exce": 339, "offer": 339, "benefit": [339, 360], "bug": 339, "coverag": 339, "exhaust": 339, "recent": [339, 373, 390], "merg": 339, "reach": 339, "steadi": [339, 379], "wet": 339, "fundament": 340, "incorpor": 340, "velo_solv": 340, "sia": [340, 342], "fo": 340, "runmodel": 340, "run_step": 340, "0200": 340, "00_00": [340, 355, 361], "recip": 340, "demonstr": [340, 361], "fairli": [340, 341, 342, 361, 380], "_cosine_bel": 340, "_with_viz": 340, "_setup_step": [340, 361], "_resolut": 340, "remove_step": 340, "analysis_depend": 340, "base_mesh_step": 340, "cos_bell_dir": 340, "_init_": 340, "init_step": 340, "_forward_": 340, "forward_step": 340, "with_viz_dir": 340, "_map_": 340, "viz_map": 340, "_viz_": 340, "rare": [340, 342], "480km": 340, "closer": 340, "imp_r": 340, "joinpath": 340, "initial_condit": 341, "dig": [341, 362], "background": [341, 376, 378, 383, 385, 386], "adher": [341, 361], "pep8": [341, 342], "bot": [341, 372], "violat": 341, "consid": 341, "editor": 341, "pycharm": [341, 342, 361], "spyder": 341, "linter": 341, "flake8": [341, 342], "discourag": [341, 359], "reformat": 341, "autopep8": 341, "undesir": 341, "lint": 341, "wildcard": 341, "vim": [341, 361], "plugin": 341, "id": [341, 342], "commit": [341, 342], "why": 341, "sound": 341, "subpackag": 341, "understand": [341, 362], "downstream": 341, "tutori": [341, 342], "clu": 341, "intro": 341, "docstr": [341, 360, 361], "strip": 341, "mpas_ocean": 341, "hidden": 341, "shortcut": [341, 389], "referenc": [341, 361], "mention": 341, "charact": 341, "unix": [341, 360], "distinct": 341, "mayb": [341, 361], "machine_config": 341, "endswith": 341, "splitext": 341, "exactli": [341, 342, 361, 372], "move": [341, 342, 361, 388, 393], "renam": 341, "visa": 341, "versa": 341, "comfort": [341, 361], "orient": [341, 379], "program": [341, 362], "led": 341, "felt": 341, "contribut": 341, "hesit": 341, "predecessor": [341, 359, 360], "clumsi": 341, "harder": 341, "outcom": 341, "augment": 341, "explain": 341, "hope": 341, "dens": 341, "learn": [341, 361], "curv": 341, "worth": [341, 361], "skill": 341, "endeavor": 341, "manipul": 341, "get_available_cores_and_nod": 341, "theoret": 341, "dozen": 341, "theori": 341, "biogeochemistri": 341, "ksh": 342, "mac": [342, 360], "csh": 342, "tcsh": 342, "temporarili": 342, "recogn": [342, 362, 389], "anyon": 342, "caus": [342, 364, 369, 372], "person": [342, 358], "base_path_to_install_or_update_conda": 342, "with_netlib_lapack": 342, "flavor": [342, 361], "troubl": [342, 361], "recognit": 342, "downsid": 342, "unneed": 342, "reinstal": 342, "caution": 342, "load_": 342, "encod": 342, "load_dev_polaris_": [342, 361], "env_nam": 342, "dev_polaris_": [342, 358], "update_jigsaw": 342, "workdir": [342, 389], "unexpect": [342, 359, 361], "occur": [342, 358, 372], "echo": 342, "proceed": 342, "notic": 342, "conda_env": [342, 389], "load_polaris_test_morpheus_gnu_openmpi": 342, "__version__": 342, "rememb": 342, "incorrect": 342, "unus": 342, "session": [342, 361], "With": 342, "pip": 342, "dep": 342, "isol": 342, "substanti": 342, "unsupport": 342, "env_onli": 342, "risk": [342, 361, 380], "mpas_make_target": [342, 389], "scientif": [342, 389], "_albani": 342, "ctest": 342, "yakl": 342, "ekat": 342, "cime": 342, "cmake": 342, "domega_build_typ": 342, "domega_cime_compil": 342, "polaris_compil": 342, "domega_cime_machin": 342, "domega_metis_root": 342, "metis_root": 342, "domega_parmetis_root": 342, "parmetis_root": 342, "domega_build_test": 342, "ON": 342, "wno": 342, "omega_build": 342, "es3m": 342, "compli": 342, "memor": 342, "guidelin": 342, "complianc": 342, "checker": 342, "isort": 342, "flynt": 342, "mypi": 342, "77": 342, "e302": 342, "resolv": 342, "simpler": [342, 361], "new_branch_nam": 342, "disk": [342, 362, 364, 369], "respons": 342, "simplest": [342, 360], "your_new_branch": 342, "restart_filenam": 348, "post": 354, "src": 354, "registry_process": 354, "seaice_model": 354, "1m": [355, 392], "disc": [355, 392], "config_initial_ice_area": 355, "config_initial_ice_volum": 355, "config_atmospheric_forcing_typ": 355, "config_forcing_start_tim": 355, "config_forcing_cycle_start": 355, "config_forcing_cycle_dur": 355, "config_forcing_precipitation_unit": 355, "mm_per_sec": 355, "config_forcing_sst_typ": 355, "ncar": 355, "config_update_ocean_flux": 355, "config_include_pond_freshwater_feedback": 355, "standard_phys": 357, "standardphys": 357, "year": [357, 373, 392], "volum": 357, "snow": 357, "exact_restart": 357, "exactrestart": 357, "geo": 358, "cartopi": 358, "14": 358, "np110py27_4": 358, "calledprocesserror": 358, "deploy_tmp": 358, "vpn": 358, "site": 358, "shell": [358, 360], "honor": 358, "wide": [358, 380], "spawn": 358, "usernam": [358, 361, 364, 367, 369], "proxy_en": 358, "all_proxi": 358, "proxyout": 358, "8080": 358, "no_proxi": 358, "localhost": [358, 362, 368, 369, 389], "127": 358, "proxy_dis": 358, "unset": 358, "anytim": 358, "fatal": 358, "mpi_init": 358, "stack": 358, "mpir_init_thread": 358, "159": 358, "mpid_init": 358, "164": 358, "mpidi_ch3_init": 358, "95": 358, "mpid_nem_init": 358, "314": 358, "mpid_nem_tcp_init": 358, "173": 358, "mpid_nem_tcp_get_business_card": 358, "395": 358, "getsockinterfaceaddr": 358, "369": 358, "pn2034311": 358, "errno": 358, "host": [358, 362, 368, 389], "focus": 359, "autom": 360, "exascal": 360, "kept": 360, "expert": 360, "uncoupl": 360, "extens": [360, 362], "primarili": 360, "darren": 360, "engwirda": 360, "quick": [360, 361, 373, 380, 390], "queue": 360, "beginn": [360, 361], "advanc": [360, 361], "mpas_to_yaml": 360, "troubleshoot": 360, "proxi": 360, "lanl": [360, 362, 364], "gethostbynam": 360, "glossari": 361, "stick": 361, "miniconda": 361, "3_chrysalis_intel_openmpi": 361, "strict": 361, "push": 361, "lowercas": 361, "hyphen": 361, "settl": 361, "desktop": 361, "realli": [361, 369], "nice": [361, 369], "supercomput": 361, "yet_another_channel": 361, "testgroup": 361, "vi": 361, "polaris_head": 361, "yetanotherchannel": 361, "instanc": 361, "highli": 361, "instruct": 361, "camelcas": 361, "letter": 361, "cap": 361, "awkward": 361, "encourag": 361, "enclos": 361, "briefli": 361, "baroclinicchannel": 361, "globalconverg": 361, "add_test_group": 361, "interest": 361, "test_group": 361, "add_test_cas": 361, "anyth": 361, "probabl": [361, 368, 379], "suppos": 361, "easili": 361, "tide": 361, "sai": [361, 368], "res_str": 361, "1000": [361, 362, 372, 375, 379, 382, 384], "still": [361, 373, 388, 389, 393], "ti": 361, "loop": 361, "1km": [361, 375, 389], "4km": [361, 375, 389], "coarsest": [361, 362], "especi": 361, "promot": 361, "pattern": 361, "familiar": 361, "seen": 361, "brows": 361, "row": 361, "disadvantag": 361, "foremost": 361, "magic": 361, "effect": [361, 388], "pain": 361, "160": [361, 375], "500": [361, 362, 372, 375, 383], "path_to_mpas_ocean": 361, "path_to_working_dir": 361, "cat": 361, "slurm_jobid": 361, "_run_test": 361, "gpf": 361, "fs1": 361, "cbegeman": 361, "grid_typ": [361, 362, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "vert_level": [361, 362, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "partial_cell_typ": [361, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "min_pc_fract": [361, 372, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388], "everywher": 361, "depress": [361, 372, 380], "mostli": 361, "logic": [361, 375, 383], "northern": [361, 375, 380, 383], "half": [361, 375, 380, 383], "southern": [361, 375], "halv": [361, 375], "gradient": [361, 375, 382, 383, 384, 387], "500km": [361, 375, 383], "40e3": [361, 375], "35": [361, 375, 376, 377, 378, 379, 383, 385, 386, 387, 388, 389, 393], "2e": [361, 375], "light": 361, "e3sm_compon": 361, "interact": [361, 364, 367, 368, 369, 389], "interrupt": 361, "pty": 361, "navig": 361, "newli": 361, "bunch": 361, "didn": 361, "mistak": 361, "finger": 361, "initial_normalveloc": 361, "initial_salin": 361, "obvious": 361, "stress": [361, 387], "landicemodelstep": 361, "huge": 361, "cp": 361, "05": [361, 379], "hmix_del2": 361, "cvmix": 361, "0002": 361, "filename_interv": 361, "0100": 361, "input_interv": 361, "initial_onli": 361, "basicmesh": 361, "dayssincestart": 361, "surfacespe": 361, "lowersurfac": 361, "uppersurfac": 361, "ureconstructx": 361, "ureconstructi": 361, "load_dataset": 361, "final_temperatur": 361, "ab": 361, "proc": 361, "4proc": [361, 375], "8proc": [361, 375], "markdown": 361, "developers_guid": 361, "users_guid": 361, "daunt": 361, "flesh": 361, "bonu": 361, "improv": 361, "introduc": 361, "techniqu": 361, "aim": 361, "constrain_resourc": 361, "becam": 361, "mainten": 361, "counter": 361, "thought": 361, "yet_another_channel_test_cas": 361, "yetanotherchanneltestcas": 361, "choic": [361, 376, 377, 378, 379, 385, 386], "spuriou": [361, 375], "dissip": [361, 375], "pop": [361, 375], "mom": [361, 375], "mitgcm": [361, 375], "higher": 361, "heavi": 361, "analogi": 361, "tet": 361, "bear": 361, "late": 361, "_add_step": 361, "startswith": 361, "enumer": 361, "rpe_": 361, "_nu_": 361, "privat": 361, "break": [361, 375], "unusu": 361, "rpe_1_nu_1": [361, 375], "rpe_2_nu_5": [361, 375], "rpe_3_nu_10": 361, "rpe_4_nu_20": 361, "rpe_5_nu_200": 361, "20_00": 361, "0000": 361, "dayssincestartofsim": 361, "relativevort": 361, "pyplot": 361, "plt": 361, "output_": 361, "sections_yet_another_channel_": 361, "rpe_t": 361, "initial_state_file_nam": 361, "_plot": 361, "dirti": 361, "adopt": 361, "lesson": 361, "tricki": 361, "commun": 361, "nuanc": 361, "fake": 361, "wasn": 361, "fold": 361, "proper": 361, "third": 361, "previous": 361, "multinod": [362, 389], "explanatori": 362, "my_machin": 362, "extend": 362, "gitconfig": 362, "enter": 362, "author": 362, "email": 362, "pull_request": 362, "28": [362, 372, 376], "address": [362, 376, 385], "metadata": 362, "customize_config_pars": 362, "server_base_url": 362, "inej": 362, "check_siz": 362, "ssl": 362, "certif": 362, "core_path": 362, "partition_execut": 362, "dask": 362, "netcdf4": 362, "netcdf4_class": 362, "netcdf3_64bit": 362, "netcdf3_class": 362, "engin": 362, "mesh_databas": 362, "ocean_database_root": 362, "landice_database_root": 362, "mesh_cor": 362, "mesh_min_cor": 362, "mesh_max_memori": 362, "mesh_max_disk": 362, "init_cor": 362, "init_min_cor": 362, "init_max_memori": 362, "init_max_disk": 362, "init_thread": 362, "forward_cor": 362, "forward_min_cor": 362, "forward_thread": 362, "forward_max_memori": 362, "forward_max_disk": 362, "add_metadata": 362, "ec": 362, "wc": 362, "mesh_descript": 362, "autodetect": 362, "bathy_descript": 362, "gebco": 362, "2022": 362, "bedmachin": 362, "antarctica": 362, "init_descript": 362, "e3sm_vers": 362, "increment": 362, "mesh_revis": 362, "finest": 362, "min_r": 362, "max_r": 362, "max_depth": 362, "creation_d": 362, "peopl": 362, "contact": 362, "temperaturemax": 362, "temperature_max": 362, "33": [362, 383, 389], "enable_ocean_initial_condit": 362, "enable_ocean_graph_partit": 362, "enable_seaice_initial_condit": 362, "enable_scrip": 362, "onlin": 362, "member": 362, "offlin": 362, "enable_diagnostics_fil": 362, "coarser": [362, 372, 376, 377, 378, 379, 385, 386], "finer": [362, 372], "comparisonlatresolut": 362, "comparisonlonresolut": 362, "antarct": 362, "polar": [362, 363, 365, 372], "stereograph": 362, "comparisonantarcticstereowidth": 362, "6000": [362, 372], "comparisonantarcticstereoresolut": 362, "arctic": [362, 392], "comparisonarcticstereowidth": 362, "comparisonarcticstereoresolut": 362, "tanh_dz": 362, "16": [362, 387, 389], "3000": [362, 379], "max_layer_thick": [362, 372], "retain": 362, "ecosystem": 363, "gain": 363, "confluenc": 363, "public_html": [363, 365, 368], "soft": [363, 365, 368, 389], "mpi_intel": [363, 365, 366, 368], "36": [363, 368, 387, 389], "condo": [363, 389], "acm": [363, 389], "medium": 363, "acme_high": 363, "environo": [363, 364, 365, 366, 367, 369], "dst": 364, "calendar": 364, "network": 364, "introduct": 364, "platform": 364, "batch": [364, 367], "wtrw": 364, "ch": 364, "fe": 364, "lustr": [364, 367], "scratch4": 364, "scratch5": 364, "sacctmgr": 364, "assoc": 364, "cluster": 364, "45": 364, "sshare": 364, "sreport": 364, "accountutilizationbyus": 364, "2019": 364, "prioriti": 364, "yellow": 364, "chkhome": 364, "petabyt": 364, "df": 364, "bp": 364, "archiv": [364, 369], "hpss": [364, 369], "front": [364, 380], "tn": 364, "storag": 364, "project_nam": 364, "salloc": [364, 367, 368, 369], "account_nam": 364, "hyperthread": [364, 367, 369], "hang": [364, 369], "threads_per_cor": [364, 367, 369], "compyf": 366, "app": [366, 389], "pmi2": 366, "40": [366, 379, 380], "olcf": 367, "ornl": 367, "cli115": 367, "poari": 367, "orion": 367, "world": 367, "software_compil": 367, "gnugpu": 367, "mpi_gnugpu": 367, "mpi_crayclang": 367, "crayclanggpu": 367, "mpi_crayclanggpu": 367, "cray_compil": [367, 369], "submit": 368, "workload": 368, "squeue": 368, "my_usernam": [368, 369], "scancel": 368, "jobid": 368, "cancel": 368, "emtpi": 368, "mpi_mpich": [368, 389], "mpi_openmpi": [368, 389], "nompi": [368, 389], "p1": 369, "nersc": 369, "iri": 369, "filesystem": 369, "myquota": 369, "prjquota": 369, "projectid": 369, "m1795": 369, "hsi": 369, "htar": 369, "zstash": 369, "cf": [369, 389], "cdir": [369, 389], "premium": 369, "8844": 369, "monik": 369, "browser": 369, "grab": 369, "logon": 369, "kernel": 369, "myenv": 369, "ipykernel": 369, "kernelspec": 369, "u1": 369, "interpret": 369, "argv": 369, "ipykernel_launch": 369, "connection_fil": 369, "display_nam": 369, "languag": 369, "equilibrium": 370, "tasksthat": 370, "influenc": 370, "phase": [370, 380], "mask_vari": 370, "adjustsshmask": 370, "adjust_vari": [370, 380], "2500": 372, "transit": [372, 376, 377, 378, 385, 386], "transition_level": 372, "deepest": 372, "stewart": 372, "2017": 372, "delta": [372, 375, 379, 387], "z_2": 372, "z_1": 372, "mathrm": 372, "tanh": 372, "rightarrow": 372, "z_k": 372, "z_0": 372, "z_": [372, 387], "finder": 372, "n_z": 372, "h_": 372, "hyperbol": 372, "tangent": 372, "k_0": 372, "v3": 372, "5500": 372, "250": [372, 383], "scienc": 372, "hydrograph": 372, "climatologi": 372, "renorm": 372, "arrm10to60": 372, "80": 372, "146": 372, "5550": 372, "51": 372, "221": 372, "ziso": [372, 395], "63": 372, "collaps": 372, "adcroft": 372, "campin": 372, "2004": 372, "absenc": 372, "press": 372, "batymetri": 372, "stair": 372, "month": 373, "websit": [373, 390], "release_6": 373, "ilicak": [375, 383], "2012": [375, 376, 378, 383, 385, 386], "variat": [375, 379], "distinguish": 375, "zonal": [375, 379, 383, 387], "meridion": [375, 383, 387], "psu": [375, 380, 383, 387], "cooler": 375, "north": 375, "sinusoid": [375, 383], "perturb": [375, 377, 383, 384], "t_0": 375, "t_b": 375, "t_": 375, "z_b": 375, "y_": 375, "l_x": 375, "warmer": 375, "ge": [375, 377], "gradient_width_fract": 375, "l_y": 375, "le": [375, 387], "stationari": [375, 387], "literatur": 375, "mk": 375, "celsiu": [375, 380], "lauritzen": [376, 378, 385, 386], "nonlinear": [376, 379, 382, 384], "mixing_analysi": 376, "icosohydr": [376, 377, 378, 385, 386], "nearest": [376, 377, 378, 385, 386], "insensit": [376, 377, 378, 379, 385, 386, 387], "300": [376, 377, 378, 385, 386, 388], "debugtrac": [376, 378, 385, 386], "tracer2": [376, 378, 385, 386], "tracer3": [376, 378, 385, 386], "nonlinearli": 376, "tau": [376, 377, 378, 385], "lambda": [376, 378, 379, 385], "theta": [376, 378, 379, 385], "co": [376, 377, 378, 379, 382, 384, 385], "equat": [376, 377, 378, 379, 382, 384, 385, 386, 387], "vel_pd": [376, 377, 378, 385, 386], "rung": [376, 377, 378, 379, 385, 386], "kutta": [376, 377, 378, 379, 385, 386], "4th": [376, 377, 378, 379, 385, 386], "spherical_convergence_forward": [376, 378, 385, 386], "globe": [376, 377, 378, 385, 386], "correlated_tracer_2d": 376, "288": [376, 378, 385, 386], "cosine_bells_radiu": [376, 378, 385, 386], "cosine_bells_background": [376, 378, 385, 386], "amplitud": [376, 378, 380, 382, 383, 384, 385, 386], "cosine_bells_amplitud": [376, 378, 385, 386], "slot": [376, 378, 385, 386], "cylind": [376, 378, 385, 386], "slotted_cylinders_radiu": [376, 378, 385, 386], "slotted_cylinders_background": [376, 378, 385, 386], "slotted_cylinders_amplitud": [376, 378, 385, 386], "sphere_transport_viz_trac": [376, 378, 385, 386], "sphere_transport_viz_tracer_diff": [376, 378, 385, 386], "sphere_transport_viz_h": [376, 378, 385, 386], "99": [376, 378, 385, 386], "101": [376, 378, 385, 386], "sphere_transport_viz_h_diff": [376, 378, 385, 386], "vel_amp": [376, 378, 385], "convergence_thresh_tracer1": [376, 378, 385, 386], "convergence_thresh_tracer2": [376, 378, 385, 386], "66": 376, "convergence_thresh_tracer3": [376, 378, 385, 386], "mixing_evaluation_tim": 376, "sphere_transport_viz": [376, 378, 385, 386], "roughli": [376, 377, 378, 385, 386], "studi": [376, 377, 378, 379, 385, 386], "williamson": [377, 379], "1992": [377, 379], "sec": 377, "3a": 377, "skamarock": 377, "gassmann": 377, "bodi": 377, "psi": 377, "proportion": [377, 379], "slow": 377, "passiv": 377, "psi_0": 377, "debug_tracers_1": 377, "equatori": 377, "u_0": [377, 378, 379, 385], "rad": 377, "lat_cent": 377, "lon_cent": 377, "14159265": 377, "2123666": 377, "6667": 377, "hill": 377, "psi0": 377, "576": 377, "circul": 377, "48": 378, "86": 378, "chosen": [379, 387], "h_0": 379, "textrm": 379, "sensit": 379, "l_1": 379, "l_2": 379, "l_": 379, "examin": [379, 387], "vel_period": 379, "gh_0": 379, "94e4": 379, "william": 379, "paper": [379, 389], "arbitrari": 379, "evolut": [379, 383], "unexpectedli": 379, "convergence_thresh_h": 379, "convergence_thresh_normalveloc": 379, "necessit": 379, "geostropnic_viz": 379, "geostrophic_viz_h": 379, "deep": 379, "geostrophic_viz_vel": 379, "geostrophic_viz_diff_h": 379, "geostrophic_viz_diff_vel": 379, "dimension": 380, "strenuou": 380, "transient": 380, "land_ice_pressur": 380, "freshwat": 380, "heat": [380, 387], "44": 380, "piecewis": 380, "y1": 380, "y2": 380, "y3": 380, "dictat": [380, 387], "inflect": 380, "y1_water_column_thick": 380, "y2_water_column_thick": 380, "1040": 380, "rise": 380, "abruptli": 380, "occupi": 380, "75": 380, "melt": 380, "geometri": 380, "parameter": 380, "surface_salin": [380, 387], "bottom_salin": 380, "190": 380, "y0_land_ice_height_above_float": 380, "gl": 380, "1050": 380, "ice_shelf_2d_default": 380, "forward_run_dur": 380, "ten": 380, "ice_shelf_2d_default_tidal_forc": 380, "_tidal_forc": 380, "propag": [382, 383, 384], "doubli": [382, 384], "assess": [382, 384], "accuraci": [382, 384], "discret": [382, 384], "bishnu": [382, 384], "friction": [382, 384], "neglect": [382, 384], "analyt": [382, 395], "k_x": [382, 384], "k_y": [382, 384], "availi": [382, 384], "coriloi": 382, "1e": 382, "ssh_amplitud": [382, 384], "wavelength": [382, 384], "n_wavelengths_x": [382, 384], "n_wavelengths_i": [382, 384], "induc": 383, "doi": 383, "org": 383, "1016": 383, "j": [383, 389], "ocemod": 383, "2011": 383, "003": 383, "stabl": 383, "stratif": 383, "20km": 383, "250km": 383, "inher": [383, 388], "background_salin": 383, "amplitude_width_dist": 383, "amplitude_width_frac": 383, "50e3": 383, "del2": 383, "internal_wave_rp": 383, "plot_tim": 383, "min_temp": 383, "max_temp": 383, "embed": 384, "eta_0": 384, "preserv": [385, 389], "rough": 385, "revers": 385, "filament_analysi": 385, "thhe": 385, "filament_evaluation_tim": 385, "offset": 386, "vector": 386, "rotation_vector": 386, "span": 387, "arbitrarili": 387, "virtu": 387, "400": 387, "phi": 387, "phi_0": 387, "dz": 387, "ml": 387, "mld": 387, "surface_x": 387, "x_gradient_mixed_lay": 387, "mixed_layer_depth_x": 387, "x_difference_across_mixed_lay": 387, "x_gradient_interior": 387, "4x4": 387, "960": 387, "degc": 387, "temperature_gradient_mixed_lay": 387, "temperature_difference_across_mixed_lay": 387, "temperature_gradient_interior": 387, "mixed_layer_depth_temperatur": 387, "salinity_gradient_mixed_lay": 387, "salinity_difference_across_mixed_lay": 387, "salinity_gradient_interior": 387, "mixed_layer_depth_salin": 387, "kpp": 387, "restor": 387, "piston": 387, "toward": 387, "temperature_surface_restoring_valu": 387, "temperature_piston_veloc": 387, "salinity_surface_restoring_valu": 387, "salinity_piston_veloc": 387, "temperature_interior_restoring_r": 387, "salinity_interior_restoring_r": 387, "net": 387, "latent": 387, "bulk": 387, "latent_heat_flux": 387, "sensibl": 387, "sensible_heat_flux": 387, "solar": 387, "shortwav": 387, "shortwave_heat_flux": 387, "evapor": 387, "evaporation_flux": 387, "5e": 387, "rain": 387, "rain_flux": 387, "wind_stress_zon": 387, "wind_stress_meridion": 387, "welcom": [388, 393], "icosohedr": [388, 393], "pertain": [388, 393], "warrant": 388, "investig": 388, "load_latest_polari": 389, "shared_clim": 389, "minu": 389, "load_latest_polaris_gnu_openmpi": 389, "create_polaris_load_script": 389, "load_polaris_1": 389, "0_mpich": 389, "exclud": 389, "wiki": 389, "circular_shelf": 389, "sia_smoke_test": 389, "sia_decomposition_test": 389, "sia_restart_test": 389, "fo_smoke_test": 389, "fo_decomposition_test": 389, "fo_restart_test": 389, "37": 389, "17": 389, "210131_test_new_branch": 389, "my_config": 389, "smaller": 389, "previous_workdir": 389, "recompil": 389, "safer": 389, "test_subdir": 389, "clock": 389, "exclus": 389, "job_nam": 389, "fo_integr": 389, "sia_integr": 389, "cosine_bell_cached_init": [389, 394], "ec30to60": 389, "ecwisc30to60": 389, "qu240_for_e3sm": 389, "quwisc240_for_e3sm": 389, "wc14": 389, "suitenam": 389, "seaice_standalone_framework": 390, "71": 392, "35n": 392, "156": 392, "5w": 392, "atmospher": 392, "timeseri": 392, "prohibit": 394, "speed": 394, "radial": 395}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [40, 0, 1, "", "Step"], [51, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_configs"], [32, 1, 1, "", "map_yaml_options"], [33, 1, 1, "", "map_yaml_to_namelist"], [34, 1, 1, "", "partition"], [35, 1, 1, "", "process_inputs_and_outputs"], [36, 1, 1, "", "runtime_setup"], [37, 1, 1, "", "set_model_resources"], [38, 1, 1, "", "setup"], [39, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[40, 1, 1, "", "__init__"], [41, 1, 1, "", "add_dependency"], [42, 1, 1, "", "add_input_file"], [43, 1, 1, "", "add_output_file"], [44, 1, 1, "", "constrain_resources"], [45, 1, 1, "", "run"], [46, 1, 1, "", "runtime_setup"], [47, 1, 1, "", "set_resources"], [48, 1, 1, "", "set_shared_config"], [49, 1, 1, "", "setup"], [50, 1, 1, "", "validate_baselines"]], "polaris.Task": [[51, 1, 1, "", "__init__"], [52, 1, 1, "", "add_step"], [53, 1, 1, "", "configure"], [54, 1, 1, "", "remove_step"], [55, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[56, 2, 1, "", "main"]], "polaris.cache": [[57, 2, 1, "", "update_cache"]], "polaris.components": [[58, 2, 1, "", "get_components"]], "polaris.config": [[59, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[59, 1, 1, "", "__init__"], [60, 1, 1, "", "setup"]], "polaris.io": [[61, 2, 1, "", "download"], [62, 2, 1, "", "symlink"], [63, 2, 1, "", "update_permissions"]], "polaris.job": [[64, 2, 1, "", "clean_up_whitespace"], [65, 2, 1, "", "get_slurm_options"], [66, 2, 1, "", "write_job_script"]], "polaris.list": [[67, 2, 1, "", "list_cases"], [68, 2, 1, "", "list_machines"], [69, 2, 1, "", "list_suites"]], "polaris.logging": [[70, 2, 1, "", "log_method_call"]], "polaris.mesh": [[71, 0, 1, "", "IcosahedralMeshStep"], [78, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [73, 1, 1, "", "get_cell_width"], [74, 1, 1, "", "get_subdivisions"], [75, 1, 1, "", "make_jigsaw_mesh"], [76, 1, 1, "", "run"], [77, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[78, 1, 1, "", "__init__"], [79, 1, 1, "", "build_cell_width_lat_lon"], [80, 1, 1, "", "make_jigsaw_mesh"], [81, 1, 1, "", "run"], [82, 1, 1, "", "setup"]], "polaris.mesh.planar": [[83, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[84, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[84, 1, 1, "", "__init__"], [85, 1, 1, "", "run"], [86, 1, 1, "", "save_and_plot_cell_width"], [87, 1, 1, "", "setup"]], "polaris.model_step": [[88, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[89, 2, 1, "", "area_for_field"], [90, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[91, 2, 1, "", "ingest"], [92, 2, 1, "", "parse_replacements"], [93, 2, 1, "", "replace"], [94, 2, 1, "", "write"]], "polaris.ocean": [[145, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[145, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[146, 0, 1, "", "ConvergenceAnalysis"], [154, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "compute_error"], [148, 1, 1, "", "convergence_parameters"], [149, 1, 1, "", "exact_solution"], [150, 1, 1, "", "get_output_field"], [151, 1, 1, "", "plot_convergence"], [152, 1, 1, "", "run"], [153, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "compute_cell_count"], [156, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[157, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[157, 1, 1, "", "__init__"], [158, 1, 1, "", "compute_cell_count"]], "polaris.ocean.ice_shelf": [[159, 0, 1, "", "IceShelfTask"], [161, 0, 1, "", "SshAdjustment"], [163, 0, 1, "", "SshForward"]], "polaris.ocean.ice_shelf.IceShelfTask": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "setup_ssh_adjustment_steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "run"]], "polaris.ocean.ice_shelf.SshForward": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "compute_cell_count"], [165, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.mesh.spherical": [[166, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[167, 0, 1, "", "OceanModelStep"], [173, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "compute_cell_count"], [169, 1, 1, "", "constrain_resources"], [170, 1, 1, "", "map_yaml_configs"], [171, 1, 1, "", "map_yaml_options"], [172, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[174, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[175, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[176, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[176, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[177, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[177, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[178, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "compute_cell_count"], [180, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[181, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "run"], [183, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[184, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[184, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[185, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[187, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[189, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "run"], [191, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[192, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[192, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[193, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[195, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[197, 0, 1, "", "CosineBell"], [199, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[200, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[200, 1, 1, "", "__init__"], [201, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[202, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[202, 1, 1, "", "__init__"], [203, 1, 1, "", "compute_cell_count"], [204, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[205, 0, 1, "", "Init"], [207, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[208, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[208, 1, 1, "", "__init__"], [209, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[210, 0, 1, "", "Geostrophic"], [212, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[213, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "exact_solution"], [215, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[216, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[216, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[217, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[217, 1, 1, "", "__init__"], [218, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[219, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d": [[221, 2, 1, "", "add_ice_shelf_2d_tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default": [[222, 0, 1, "", "Default"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[222, 1, 1, "", "__init__"]], "polaris.ocean.tasks.ice_shelf_2d.forward": [[223, 0, 1, "", "Forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[223, 1, 1, "", "__init__"], [224, 1, 1, "", "compute_cell_count"], [225, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.ice_shelf_2d.init": [[226, 0, 1, "", "Init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.validate": [[228, 0, 1, "", "Validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "run"]], "polaris.ocean.tasks.ice_shelf_2d.viz": [[230, 0, 1, "", "Viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[232, 0, 1, "", "InertialGravityWave"], [233, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[232, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[234, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[234, 1, 1, "", "__init__"], [235, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[236, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "normal_velocity"], [238, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[239, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[241, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[241, 1, 1, "", "__init__"], [242, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[243, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[243, 1, 1, "", "__init__"], [244, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave": [[245, 2, 1, "", "add_internal_wave_tasks"]], "polaris.ocean.tasks.internal_wave.default": [[246, 0, 1, "", "Default"]], "polaris.ocean.tasks.internal_wave.default.Default": [[246, 1, 1, "", "__init__"]], "polaris.ocean.tasks.internal_wave.forward": [[247, 0, 1, "", "Forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[247, 1, 1, "", "__init__"], [248, 1, 1, "", "compute_cell_count"], [249, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.internal_wave.init": [[250, 0, 1, "", "Init"]], "polaris.ocean.tasks.internal_wave.init.Init": [[250, 1, 1, "", "__init__"], [251, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.rpe": [[252, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[252, 1, 1, "", "__init__"], [253, 1, 1, "", "configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis": [[254, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.viz": [[256, 0, 1, "", "Viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[258, 0, 1, "", "ManufacturedSolution"], [259, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[258, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[260, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[260, 1, 1, "", "__init__"], [261, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[262, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[262, 1, 1, "", "__init__"], [263, 1, 1, "", "normal_velocity"], [264, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[265, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[265, 1, 1, "", "__init__"], [266, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[267, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[267, 1, 1, "", "__init__"], [268, 1, 1, "", "run"], [269, 1, 1, "", "setup"]], "polaris.ocean.tasks.manufactured_solution.viz": [[270, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[270, 1, 1, "", "__init__"], [271, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[272, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[273, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[273, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[274, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[274, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[275, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[275, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[276, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[278, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[278, 1, 1, "", "__init__"], [279, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[280, 0, 1, "", "SphereTransport"], [282, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[280, 1, 1, "", "__init__"], [281, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[283, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[283, 1, 1, "", "__init__"], [284, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[285, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[285, 1, 1, "", "__init__"], [286, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[287, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[287, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[288, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[288, 1, 1, "", "__init__"], [289, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[290, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[290, 1, 1, "", "__init__"], [291, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[292, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[292, 1, 1, "", "__init__"], [293, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[294, 2, 1, "", "generate_1d_grid"], [295, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[296, 2, 1, "", "init_vertical_coord"], [301, 2, 1, "", "update_layer_thickness"]], "polaris.ocean.vertical.partial_cells": [[297, 2, 1, "", "alter_bottom_depth"], [298, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.sigma": [[299, 2, 1, "", "init_sigma_vertical_coord"], [300, 2, 1, "", "update_sigma_layer_thickness"]], "polaris.ocean.vertical.zlevel": [[302, 2, 1, "", "compute_min_max_level_cell"], [303, 2, 1, "", "compute_z_level_layer_thickness"], [304, 2, 1, "", "compute_z_level_resting_thickness"], [305, 2, 1, "", "init_z_level_vertical_coord"], [306, 2, 1, "", "update_z_level_layer_thickness"]], "polaris.ocean.vertical.zstar": [[307, 2, 1, "", "init_z_star_vertical_coord"], [308, 2, 1, "", "update_z_star_layer_thickness"]], "polaris.ocean.viz": [[309, 2, 1, "", "compute_transect"], [310, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[311, 2, 1, "", "find_planar_transect_cells_and_weights"], [312, 2, 1, "", "find_spherical_transect_cells_and_weights"], [313, 2, 1, "", "make_triangle_tree"], [314, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[315, 2, 1, "", "find_transect_levels_and_weights"], [316, 2, 1, "", "interp_mpas_to_transect_cells"], [317, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[95, 2, 1, "", "get_available_parallel_resources"], [96, 2, 1, "", "get_parallel_command"], [97, 2, 1, "", "run_command"], [98, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[99, 2, 1, "", "write"]], "polaris.remap": [[100, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[100, 1, 1, "", "__init__"], [101, 1, 1, "", "dst_from_lon_lat"], [102, 1, 1, "", "dst_from_mpas"], [103, 1, 1, "", "dst_from_points"], [104, 1, 1, "", "dst_from_proj"], [105, 1, 1, "", "dst_global_lon_lat"], [106, 1, 1, "", "get_remapper"], [107, 1, 1, "", "runtime_setup"], [108, 1, 1, "", "src_from_lon_lat"], [109, 1, 1, "", "src_from_mpas"], [110, 1, 1, "", "src_from_proj"]], "polaris.run": [[111, 2, 1, "", "complete_step_run"], [112, 2, 1, "", "load_dependencies"], [115, 2, 1, "", "setup_config"], [116, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[113, 2, 1, "", "run_single_step"], [114, 2, 1, "", "run_tasks"]], "polaris.seaice": [[345, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[345, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[346, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[347, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[347, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[348, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[348, 1, 1, "", "__init__"], [349, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[350, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[350, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[351, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[351, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[352, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[352, 1, 1, "", "__init__"], [353, 1, 1, "", "run"]], "polaris.setup": [[117, 2, 1, "", "setup_task"], [118, 2, 1, "", "setup_tasks"]], "polaris.streams": [[119, 2, 1, "", "read"], [120, 2, 1, "", "update_defaults"], [121, 2, 1, "", "update_tree"], [122, 2, 1, "", "write"]], "polaris.suite": [[123, 2, 1, "", "setup_suite"]], "polaris.validate": [[124, 2, 1, "", "compare_variables"]], "polaris.viz": [[125, 2, 1, "", "plot_global_lat_lon_field"], [126, 2, 1, "", "plot_global_mpas_field"], [127, 2, 1, "", "plot_horiz_field"], [128, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[129, 0, 1, "", "PolarisYaml"], [133, 2, 1, "", "main_mpas_to_yaml"], [134, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [135, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "read"], [131, 1, 1, "", "update"], [132, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 361], "share": [1, 6, 9, 341, 361], "step": [1, 3, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 143, 338, 361, 370, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 45, 76, 81, 85, 111, 112, 113, 114, 115, 116, 144, 152, 162, 182, 190, 194, 196, 206, 209, 218, 220, 227, 229, 231, 242, 244, 251, 255, 257, 268, 271, 277, 279, 286, 289, 291, 293, 338, 342, 349, 353, 363, 364, 365, 366, 367, 369, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393], "onc": 1, "befor": 1, "depend": [1, 6, 338], "output": [1, 338, 361], "daughter": 1, "task": [1, 3, 51, 52, 53, 54, 55, 143, 144, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 327, 334, 337, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 356, 361, 381, 383, 388, 389, 391, 393, 395], "work": 1, "directori": [1, 336], "structur": [1, 336], "i": [1, 389], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 342, 360, 362, 389], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 144, 338, 342, 368], "other": [1, 141, 338, 361, 368, 389], "implement": [1, 2], "set": [1, 144, 342, 389], "up": [1, 342, 389], "test": [1, 2, 6, 143, 144, 361, 362, 392], "And": 1, "valid": [1, 2, 3, 18, 124, 193, 194, 228, 229, 321, 326, 329, 348, 349, 361, 389], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 144, 342, 361, 363, 364, 365, 366, 367, 368, 369, 370, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "same": 2, "api": 3, "refer": [3, 143, 144], "compon": [3, 14, 20, 21, 22, 23, 24, 58, 144, 318, 335, 341, 342, 354, 373, 389, 390], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 338, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 360, 363, 364, 365, 366, 367, 369, 389], "framework": [3, 10, 143, 144, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 341, 344, 357, 371], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 67, 68, 69], "setup": [3, 5, 8, 38, 49, 60, 77, 82, 87, 117, 118, 153, 172, 183, 191, 269, 338], "suit": [3, 5, 8, 123, 339, 374, 389, 394], "cach": [3, 5, 8, 57, 338], "mpas_to_yaml": [3, 5], "base": [3, 143], "class": [3, 341], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "config": [3, 6, 9, 14, 59, 60, 141, 144, 335, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "io": [3, 11, 61, 62, 63], "job": [3, 64, 65, 66, 368, 389], "log": [3, 12, 70], "mesh": [3, 13, 14, 19, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 143, 144, 166, 361, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "model_step": [3, 88], "mpa": [3, 6, 15, 19, 89, 90, 144, 320, 342, 355], "namelist": [3, 14, 91, 92, 93, 94, 144], "parallel": [3, 95, 96, 97, 98], "proven": [3, 16, 99], "remap": [3, 17, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "stream": [3, 14, 119, 120, 121, 122, 144, 361], "viz": [3, 125, 126, 127, 128, 195, 196, 208, 209, 219, 220, 230, 231, 243, 244, 256, 257, 270, 271, 278, 279, 292, 293, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 352, 353, 357, 361], "yaml": [3, 14, 129, 130, 131, 132, 133, 134, 135, 144], "build": [4, 141, 342, 389], "serial": [5, 8, 113, 114], "deploi": 6, "new": [6, 141, 361], "spack": [6, 141, 342, 389], "environ": [6, 141, 342, 358, 389], "where": 6, "we": 6, "updat": [6, 14, 131, 342], "mach": 6, "conda": [6, 342, 358, 368, 389], "identifi": 6, "e3sm": [6, 14, 144, 342, 389], "machin": [6, 141, 342, 368, 389], "describ": [6, 141], "modul": [6, 8, 341, 342], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 342, 361], "remot": [6, 369], "branch": 6, "petsc": [6, 342], "netlib": [6, 342], "lapack": [6, 342], "albani": [6, 342], "troubleshoot": [6, 342, 358], "ocean": [6, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 342, 373], "without": 6, "mali": [6, 342], "docstr": 7, "file": [9, 14, 141, 144, 335, 338, 361, 362], "comment": 9, "symlink": [11, 62, 338], "download": [11, 61, 338], "permiss": 11, "spheric": [13, 19, 84, 85, 86, 87, 143, 144, 157, 158, 166], "planar": [13, 19, 83], "uniform": [13, 144, 372], "gener": 13, "model": [14, 143, 144, 167, 168, 169, 170, 171, 172, 173, 319, 355, 361, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389], "an": [14, 144, 361], "ad": [14, 141, 338, 361], "dynam": [14, 361], "input": [14, 338], "partit": [14, 34], "pio": 14, "make": [14, 361], "graph": 14, "area": 15, "time": [15, 144, 361, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 393], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 143, 144, 361, 392], "common": 19, "matplotlib": 19, "style": [19, 341, 342], "horizont": [19, 361], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 361], "grid": [19, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388], "add_config": 21, "add_step": [22, 52], "add_task": 23, "remove_step": [24, 54], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 156, 165, 180, 186, 204, 225, 249], "map_yaml_config": [31, 170], "map_yaml_opt": [32, 171], "map_yaml_to_namelist": 33, "process_inputs_and_output": 35, "runtime_setup": [36, 46, 107, 338], "set_model_resourc": 37, "update_namelist_pio": 39, "add_depend": 41, "add_input_fil": 42, "add_output_fil": 43, "constrain_resourc": [44, 169, 338], "set_resourc": 47, "set_shared_config": [48, 55], "validate_baselin": 50, "configur": [53, 188, 198, 211, 253, 281, 340, 358], "__main__": 56, "main": 56, "update_cach": 57, "get_compon": 58, "polarisconfigpars": [59, 60], "update_permiss": 63, "clean_up_whitespac": 64, "get_slurm_opt": 65, "write_job_script": 66, "list_cas": 67, "list_machin": 68, "list_suit": 69, "log_method_cal": 70, "icosahedralmeshstep": [71, 72, 73, 74, 75, 76, 77], "build_subdivisions_cell_width_lat_lon": 72, "get_cell_width": 73, "get_subdivis": 74, "make_jigsaw_mesh": [75, 80], "quasiuniformsphericalmeshstep": [78, 79, 80, 81, 82], "build_cell_width_lat_lon": 79, "compute_planar_hex_nx_ni": 83, "sphericalbasestep": [84, 85, 86, 87], "save_and_plot_cell_width": 86, "make_graph_fil": 88, "area_for_field": 89, "time_index_from_xtim": 90, "ingest": 91, "parse_replac": 92, "replac": 93, "write": [94, 99, 122, 132], "get_available_parallel_resourc": 95, "get_parallel_command": 96, "run_command": 97, "set_cores_per_nod": 98, "mappingfilestep": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "dst_from_lon_lat": 101, "dst_from_mpa": 102, "dst_from_point": 103, "dst_from_proj": 104, "dst_global_lon_lat": 105, "get_remapp": 106, "src_from_lon_lat": 108, "src_from_mpa": 109, "src_from_proj": 110, "complete_step_run": 111, "load_depend": 112, "run_single_step": 113, "run_task": 114, "setup_config": 115, "unpickle_suit": 116, "setup_task": [117, 118], "read": [119, 130], "update_default": 120, "update_tre": 121, "setup_suit": 123, "compare_vari": 124, "plot_global_lat_lon_field": 125, "plot_global_mpas_field": 126, "plot_horiz_field": 127, "use_mplstyl": 128, "polarisyaml": [129, 130, 131, 132], "main_mpas_to_yaml": 133, "mpas_namelist_and_streams_to_yaml": 134, "yaml_to_mpas_stream": 135, "anvil": [136, 363], "intel": [136, 138, 139, 142], "gnu": [136, 137, 138, 139, 140, 142], "chicoma": [137, 364], "cpu": [137, 142, 364, 369], "chrysali": [138, 365], "compymcnodefac": [139, 366], "frontier": [140, 367], "crayclang": 140, "support": [141, 319, 342, 355, 368, 389], "perlmutt": [142, 369], "pm": 142, "baroclinic_channel": [143, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 321], "cosine_bel": [143, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 323, 374], "geostroph": [143, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 325, 379], "ice_shelf_2d": [143, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 326], "inertial_gravity_wav": [143, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 328], "internal_wav": [143, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 329], "manufactured_solut": [143, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 330], "single_column": [143, 272, 273, 274, 275, 276, 277, 278, 279, 333, 343, 346, 347, 348, 349, 350, 351, 352, 353, 357], "sphere_transport": [143, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "converg": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 384], "ic": [143, 144, 370, 380, 390], "shelf": [143, 144, 370, 380], "potenti": [143, 144], "energi": [143, 144], "rpe": [143, 144, 174, 187, 188, 189, 190, 191, 252, 253, 254, 255, 321, 329, 375, 383], "vertic": [143, 144, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 361, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388], "coordin": [143, 144, 361, 372], "v": 144, "map": 144, "omega": [144, 342], "mpi": [144, 368], "resourc": 144, "interv": 144, "quasi": 144, "icosahedr": 144, "rest": 144, "convergenceanalysi": [146, 147, 148, 149, 150, 151, 152, 153], "compute_error": 147, "convergence_paramet": [148, 284], "exact_solut": [149, 201, 214, 235, 236, 237, 238, 261, 262, 263, 264, 328, 330], "get_output_field": [150, 215], "plot_converg": 151, "convergenceforward": [154, 155, 156], "compute_cell_count": [155, 158, 164, 168, 179, 203, 224, 240, 248, 266], "sphericalconvergenceforward": [157, 158], "ice_shelf": [159, 160, 161, 162, 163, 164, 165], "iceshelftask": [159, 160], "setup_ssh_adjustment_step": 160, "sshadjust": [161, 162], "sshforward": [163, 164, 165], "add_spherical_base_mesh_step": 166, "oceanmodelstep": [167, 168, 169, 170, 171, 172], "get_time_interval_str": 173, "compute_rp": 174, "add_baroclinic_channel_task": 175, "decomp": [176, 321, 375], "default": [177, 222, 246, 321, 326, 329, 361, 375, 380, 383], "forward": [178, 179, 180, 202, 203, 204, 216, 223, 224, 225, 239, 240, 247, 248, 249, 265, 266, 274, 287, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 350, 357, 361], "init": [181, 182, 183, 205, 206, 207, 217, 218, 226, 227, 241, 242, 250, 251, 267, 268, 269, 276, 277, 288, 289, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 361], "restart": [184, 185, 186, 321, 375, 392], "restart_step": [185, 186], "restartstep": [185, 186], "analysi": [189, 190, 191, 200, 201, 213, 214, 215, 234, 235, 254, 255, 260, 261, 283, 284, 322, 323, 324, 325, 328, 330, 331, 332, 361, 379], "thread": [192, 321, 375], "cosinebel": [197, 198], "add_cosine_bell_task": 199, "add_geostrophic_task": 212, "add_ice_shelf_2d_task": 221, "inertialgravitywav": 232, "add_inertial_gravity_wave_task": 233, "exactsolut": [236, 237, 238, 262, 263, 264], "normal_veloc": [237, 263], "ssh": [238, 264, 370], "add_internal_wave_task": 245, "manufacturedsolut": 258, "add_manufactured_solution_task": 259, "add_single_column_task": [272, 346], "cvmix": [273, 333, 387], "ideal_ag": 275, "idealag": 275, "spheretransport": [280, 281], "add_sphere_transport_task": 282, "filament_analysi": [285, 286, 331], "filamentanalysi": [285, 286], "mixing_analysi": [290, 291, 322], "mixinganalysi": [290, 291], "grid_1d": [294, 295], "generate_1d_grid": 294, "write_1d_grid": 295, "init_vertical_coord": 296, "partial_cel": [297, 298], "alter_bottom_depth": 297, "alter_ssh": 298, "sigma": [299, 300, 372], "init_sigma_vertical_coord": 299, "update_sigma_layer_thick": 300, "update_layer_thick": 301, "zlevel": [302, 303, 304, 305, 306], "compute_min_max_level_cel": 302, "compute_z_level_layer_thick": 303, "compute_z_level_resting_thick": 304, "init_z_level_vertical_coord": 305, "update_z_level_layer_thick": 306, "zstar": [307, 308], "init_z_star_vertical_coord": 307, "update_z_star_layer_thick": 308, "compute_transect": 309, "plot_transect": 310, "transect": [311, 312, 313, 314, 315, 316, 317], "horiz": [311, 312, 313, 314], "find_planar_transect_cells_and_weight": 311, "find_spherical_transect_cells_and_weight": 312, "make_triangle_tre": 313, "mesh_to_triangl": 314, "vert": [315, 316, 317], "find_transect_levels_and_weight": 315, "interp_mpas_to_transect_cel": 316, "interp_mpas_to_transect_nod": 317, "initi": [320, 355, 361, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "condit": [320, 355, 361, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "boundari": 320, "forc": [320, 355, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "correlated_tracers_2d": 322, "base_mesh": [322, 323, 324, 325, 331, 332], "divergent_2d": 324, "nondivergent_2d": 331, "rotation_2d": 332, "ideal": [333, 387], "ag": [333, 387], "categori": [334, 388, 393], "constructor": [335, 338, 340], "organ": 337, "attribut": [338, 340], "copi": 338, "pull": 339, "request": 339, "pr": 339, "nightli": 339, "overview": 341, "code": [341, 342, 361], "packag": 341, "within": 341, "group": [341, 361], "relat": 341, "quick": [342, 389], "start": [342, 361, 389], "develop": [342, 360, 361], "unix": 342, "shell": 342, "repositori": 342, "beginn": 342, "compil": 342, "system": 342, "unknown": 342, "what": 342, "script": [342, 389], "doe": 342, "flag": 342, "activ": 342, "switch": 342, "between": [342, 361], "differ": 342, "onli": 342, "repo": 342, "worktre": 342, "advanc": 342, "seaic": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "exact_restart": [347, 348, 349], "exactrestart": 347, "standard_phys": [351, 352, 353], "standardphys": 351, "standard_physics_test": 357, "exact_restart_test": 357, "solver": 358, "error": 358, "when": 358, "proxi": 358, "lanl": 358, "mac": 358, "gethostbynam": 358, "fail": 358, "glossari": [359, 360], "": 360, "guid": 360, "tutori": [360, 361], "compass": 360, "get": 361, "vari": 361, "resolut": 361, "paramet": 361, "thing": 361, "out": 361, "defin": 361, "more": 361, "again": 361, "one": 361, "second": 361, "enhanc": 361, "comput": 361, "cell": 361, "count": 361, "superclass": 361, "studi": 361, "how": 361, "pass": 361, "data": [361, 369], "A": 362, "case": 362, "load": [363, 364, 365, 366, 367, 369, 389], "slurm": 368, "queue": 368, "mpich": 368, "openmpi": 368, "No": 368, "forg": 368, "jupyt": 369, "notebook": 369, "adjust": 370, "1d": 372, "type": 372, "tanh_dz": 372, "index_tanh_dz": 372, "60layerphc": 372, "80layere3smv1": 372, "100layere3smv1": 372, "3d": 372, "z": 372, "star": 372, "level": 372, "cosine_bell_cached_init": 374, "baroclin": 375, "channel": 375, "descript": [375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "suppport": [375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388], "durat": [375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "core": [375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 392, 393], "correl": 376, "tracer": 376, "2": [376, 378, 385, 386], "d": [376, 378, 385, 386], "cosin": 377, "bell": 377, "diverg": 378, "2d": 380, "default_with_restart": 380, "default_tidal_forc": 380, "inerti": 382, "graviti": 382, "wave": [382, 383], "intern": 383, "manufactur": 384, "solut": 384, "nondiverg": 385, "rotat": 386, "singl": [387, 392], "column": [387, 392], "task_nam": [388, 393], "yet": 389, "standalon": 389, "sea": 390, "standard": 392, "physic": 392, "timestep": 392, "exact": 392}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [335, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [375, "mesh"], [375, "id2"], [375, "id9"], [375, "id17"], [375, "id25"], [375, "id32"], [376, "mesh"], [377, "mesh"], [378, "mesh"], [379, "mesh"], [380, "mesh"], [380, "id2"], [380, "id9"], [380, "id17"], [382, "mesh"], [383, "mesh"], [383, "id2"], [384, "mesh"], [385, "mesh"], [386, "mesh"], [387, "mesh"], [387, "id3"], [387, "id8"], [388, "mesh"], [392, "mesh"], [392, "id1"], [392, "id6"], [393, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [321, "validate"], [326, "validate"], [329, "validate"]], "viz": [[3, "viz"], [322, "viz"], [323, "viz"], [324, "viz"], [325, "viz"], [326, "viz"], [328, "viz"], [330, "viz"], [331, "viz"], [332, "viz"], [333, "viz"], [357, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [361, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [371, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Permissions": [[11, "permissions"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [144, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [144, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"], [143, "visualization"], [144, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_configs": [[31, "polaris-modelstep-map-yaml-configs"]], "polaris.ModelStep.map_yaml_options": [[32, "polaris-modelstep-map-yaml-options"]], "polaris.ModelStep.map_yaml_to_namelist": [[33, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[34, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[35, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[36, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[37, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[38, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[39, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[40, "polaris-step"]], "polaris.Step.add_dependency": [[41, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[42, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[43, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[44, "polaris-step-constrain-resources"]], "polaris.Step.run": [[45, "polaris-step-run"]], "polaris.Step.runtime_setup": [[46, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[47, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[48, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[49, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[50, "polaris-step-validate-baselines"]], "polaris.Task": [[51, "polaris-task"]], "polaris.Task.add_step": [[52, "polaris-task-add-step"]], "polaris.Task.configure": [[53, "polaris-task-configure"]], "polaris.Task.remove_step": [[54, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[55, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[56, "polaris-main-main"]], "polaris.cache.update_cache": [[57, "polaris-cache-update-cache"]], "polaris.components.get_components": [[58, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[59, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[60, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[61, "polaris-io-download"]], "polaris.io.symlink": [[62, "polaris-io-symlink"]], "polaris.io.update_permissions": [[63, "polaris-io-update-permissions"]], "polaris.job.clean_up_whitespace": [[64, "polaris-job-clean-up-whitespace"]], "polaris.job.get_slurm_options": [[65, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[66, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[67, "polaris-list-list-cases"]], "polaris.list.list_machines": [[68, "polaris-list-list-machines"]], "polaris.list.list_suites": [[69, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[70, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[71, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[72, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[73, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[74, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[75, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[76, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[77, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[78, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[79, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[80, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[81, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[82, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[83, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[84, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[85, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[86, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[87, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[88, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[89, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[90, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[91, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[92, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[93, "polaris-namelist-replace"]], "polaris.namelist.write": [[94, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[95, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[96, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[97, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[98, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[99, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[100, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[101, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[102, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[103, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[104, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[105, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[106, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[107, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[108, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[109, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[110, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[111, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[112, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[113, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[114, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[115, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[116, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[117, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[118, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[119, "polaris-streams-read"]], "polaris.streams.update_defaults": [[120, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[121, "polaris-streams-update-tree"]], "polaris.streams.write": [[122, "polaris-streams-write"]], "polaris.suite.setup_suite": [[123, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[124, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_lat_lon_field": [[125, "polaris-viz-plot-global-lat-lon-field"]], "polaris.viz.plot_global_mpas_field": [[126, "polaris-viz-plot-global-mpas-field"]], "polaris.viz.plot_horiz_field": [[127, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[128, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[129, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[130, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[131, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[132, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[133, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[134, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[135, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[136, "anvil"], [363, "anvil"]], "intel": [[136, "intel"], [138, "intel"], [139, "intel"]], "gnu": [[136, "gnu"], [138, "gnu"], [139, "gnu"]], "Chicoma": [[137, "chicoma"], [364, "chicoma"]], "chicoma-cpu, gnu": [[137, "chicoma-cpu-gnu"]], "Chrysalis": [[138, "chrysalis"], [365, "chrysalis"]], "CompyMcNodeFace": [[139, "compymcnodeface"], [366, "compymcnodeface"]], "Frontier": [[140, "frontier"], [367, "frontier"]], "frontier, gnu": [[140, "frontier-gnu"]], "frontier, crayclang": [[140, "frontier-crayclang"]], "Machines": [[141, "machines"], [368, "machines"]], "Supported Machines": [[141, "supported-machines"], [368, "supported-machines"]], "Other Machines": [[141, "other-machines"], [368, "other-machines"]], "Adding a New Supported Machine": [[141, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[141, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[141, "describing-a-spack-environment"]], "Building the Spack Environment": [[141, "building-the-spack-environment"]], "Perlmutter": [[142, "perlmutter"], [369, "perlmutter"]], "pm-cpu, gnu": [[142, "pm-cpu-gnu"]], "pm-cpu, intel": [[142, "pm-cpu-intel"]], "ocean": [[143, "ocean"]], "Tasks": [[143, "tasks"], [327, "tasks"], [340, "tasks"], [343, "tasks"], [356, "tasks"], [381, "tasks"], [391, "tasks"], [395, "tasks"]], "baroclinic_channel": [[143, "baroclinic-channel"], [321, "baroclinic-channel"]], "cosine_bell": [[143, "cosine-bell"], [323, "cosine-bell"]], "geostrophic": [[143, "geostrophic"], [325, "geostrophic"], [379, "geostrophic"]], "ice_shelf_2d": [[143, "ice-shelf-2d"], [326, "ice-shelf-2d"]], "inertial_gravity_wave": [[143, "inertial-gravity-wave"], [328, "inertial-gravity-wave"]], "internal_wave": [[143, "internal-wave"], [329, "internal-wave"]], "manufactured_solution": [[143, "manufactured-solution"], [330, "manufactured-solution"]], "single_column": [[143, "single-column"], [333, "single-column"], [343, "single-column"], [357, "single-column"]], "sphere_transport": [[143, "sphere-transport"]], "Ocean Framework": [[143, "ocean-framework"]], "Convergence Tests": [[143, "convergence-tests"], [144, "convergence-tests"]], "Spherical Convergence Tests": [[143, "spherical-convergence-tests"]], "Ice Shelf": [[143, "ice-shelf"]], "Ocean Model": [[143, "ocean-model"]], "Spherical Base Mesh Step": [[143, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[143, "reference-potential-energy-rpe"]], "Vertical coordinates": [[143, "vertical-coordinates"]], "Ocean framework": [[144, "ocean-framework"]], "YAML files vs. namelists and streams": [[144, "yaml-files-vs-namelists-and-streams"]], "Mapping from MPAS-Ocean to Omega config options": [[144, "mapping-from-mpas-ocean-to-omega-config-options"]], "Setting MPI resources": [[144, "setting-mpi-resources"]], "Setting time intervals in model config options": [[144, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[144, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[144, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Ice Shelf Tasks": [[144, "ice-shelf-tasks"]], "Vertical coordinate": [[144, "vertical-coordinate"], [372, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[144, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[145, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[146, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[147, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[148, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[149, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[150, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[151, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[152, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[153, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[154, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[155, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[156, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[157, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[158, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.ice_shelf.IceShelfTask": [[159, "polaris-ocean-ice-shelf-iceshelftask"]], "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps": [[160, "polaris-ocean-ice-shelf-iceshelftask-setup-ssh-adjustment-steps"]], "polaris.ocean.ice_shelf.SshAdjustment": [[161, "polaris-ocean-ice-shelf-sshadjustment"]], "polaris.ocean.ice_shelf.SshAdjustment.run": [[162, "polaris-ocean-ice-shelf-sshadjustment-run"]], "polaris.ocean.ice_shelf.SshForward": [[163, "polaris-ocean-ice-shelf-sshforward"]], "polaris.ocean.ice_shelf.SshForward.compute_cell_count": [[164, "polaris-ocean-ice-shelf-sshforward-compute-cell-count"]], "polaris.ocean.ice_shelf.SshForward.dynamic_model_config": [[165, "polaris-ocean-ice-shelf-sshforward-dynamic-model-config"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[166, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[167, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[168, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[169, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_configs": [[170, "polaris-ocean-model-oceanmodelstep-map-yaml-configs"]], "polaris.ocean.model.OceanModelStep.map_yaml_options": [[171, "polaris-ocean-model-oceanmodelstep-map-yaml-options"]], "polaris.ocean.model.OceanModelStep.setup": [[172, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[173, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[174, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[175, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[176, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[177, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[178, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[179, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[180, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[181, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[182, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[183, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[184, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[185, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[186, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[187, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[188, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[189, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[190, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[191, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[192, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[193, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[194, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[195, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[196, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[197, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[198, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[199, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[200, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[201, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[202, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[203, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[204, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[205, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[206, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[207, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[208, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[209, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[210, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[211, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[212, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[213, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[214, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[215, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[216, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[217, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[218, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[219, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[220, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks": [[221, "polaris-ocean-tasks-ice-shelf-2d-add-ice-shelf-2d-tasks"]], "polaris.ocean.tasks.ice_shelf_2d.default.Default": [[222, "polaris-ocean-tasks-ice-shelf-2d-default-default"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward": [[223, "polaris-ocean-tasks-ice-shelf-2d-forward-forward"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count": [[224, "polaris-ocean-tasks-ice-shelf-2d-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config": [[225, "polaris-ocean-tasks-ice-shelf-2d-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init": [[226, "polaris-ocean-tasks-ice-shelf-2d-init-init"]], "polaris.ocean.tasks.ice_shelf_2d.init.Init.run": [[227, "polaris-ocean-tasks-ice-shelf-2d-init-init-run"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate": [[228, "polaris-ocean-tasks-ice-shelf-2d-validate-validate"]], "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run": [[229, "polaris-ocean-tasks-ice-shelf-2d-validate-validate-run"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz": [[230, "polaris-ocean-tasks-ice-shelf-2d-viz-viz"]], "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run": [[231, "polaris-ocean-tasks-ice-shelf-2d-viz-viz-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[232, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[233, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[234, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[235, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[236, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[237, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[238, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[239, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[240, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[241, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[242, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[243, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[244, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks": [[245, "polaris-ocean-tasks-internal-wave-add-internal-wave-tasks"]], "polaris.ocean.tasks.internal_wave.default.Default": [[246, "polaris-ocean-tasks-internal-wave-default-default"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[247, "polaris-ocean-tasks-internal-wave-forward-forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count": [[248, "polaris-ocean-tasks-internal-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config": [[249, "polaris-ocean-tasks-internal-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.internal_wave.init.Init": [[250, "polaris-ocean-tasks-internal-wave-init-init"]], "polaris.ocean.tasks.internal_wave.init.Init.run": [[251, "polaris-ocean-tasks-internal-wave-init-init-run"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[252, "polaris-ocean-tasks-internal-wave-rpe-rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure": [[253, "polaris-ocean-tasks-internal-wave-rpe-rpe-configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[254, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run": [[255, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[256, "polaris-ocean-tasks-internal-wave-viz-viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz.run": [[257, "polaris-ocean-tasks-internal-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[258, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[259, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[260, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[261, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[262, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[263, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[264, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[265, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[266, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[267, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[268, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.init.Init.setup": [[269, "polaris-ocean-tasks-manufactured-solution-init-init-setup"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[270, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[271, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[272, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[273, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[274, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[275, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[276, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[277, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[278, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[279, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[280, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[281, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[282, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[283, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[284, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[285, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[286, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[287, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[288, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[289, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[290, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[291, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[292, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[293, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[294, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[295, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[296, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[297, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[298, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.sigma.init_sigma_vertical_coord": [[299, "polaris-ocean-vertical-sigma-init-sigma-vertical-coord"]], "polaris.ocean.vertical.sigma.update_sigma_layer_thickness": [[300, "polaris-ocean-vertical-sigma-update-sigma-layer-thickness"]], "polaris.ocean.vertical.update_layer_thickness": [[301, "polaris-ocean-vertical-update-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[302, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[303, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[304, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[305, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness": [[306, "polaris-ocean-vertical-zlevel-update-z-level-layer-thickness"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[307, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "polaris.ocean.vertical.zstar.update_z_star_layer_thickness": [[308, "polaris-ocean-vertical-zstar-update-z-star-layer-thickness"]], "polaris.ocean.viz.compute_transect": [[309, "polaris-ocean-viz-compute-transect"]], "polaris.ocean.viz.plot_transect": [[310, "polaris-ocean-viz-plot-transect"]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[311, "polaris-ocean-viz-transect-horiz-find-planar-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[312, "polaris-ocean-viz-transect-horiz-find-spherical-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[313, "polaris-ocean-viz-transect-horiz-make-triangle-tree"]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[314, "polaris-ocean-viz-transect-horiz-mesh-to-triangles"]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[315, "polaris-ocean-viz-transect-vert-find-transect-levels-and-weights"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[316, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-cells"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[317, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-nodes"]], "Ocean component": [[318, "ocean-component"], [373, "ocean-component"]], "Models": [[319, "models"]], "Supported Models": [[319, "supported-models"]], "MPAS-Ocean": [[320, "mpas-ocean"], [342, "mpas-ocean"]], "Initial conditions": [[320, "initial-conditions"], [355, "initial-conditions"]], "Boundary conditions": [[320, "boundary-conditions"]], "Forcing": [[320, "forcing"], [355, "forcing"]], "framework": [[321, "framework"], [322, "framework"], [323, "framework"], [324, "framework"], [325, "framework"], [326, "framework"], [328, "framework"], [329, "framework"], [330, "framework"], [331, "framework"], [332, "framework"], [333, "framework"], [357, "framework"]], "init": [[321, "init"], [322, "init"], [323, "init"], [324, "init"], [325, "init"], [326, "init"], [328, "init"], [329, "init"], [330, "init"], [331, "init"], [332, "init"], [333, "init"]], "forward": [[321, "forward"], [322, "forward"], [323, "forward"], [324, "forward"], [325, "forward"], [326, "forward"], [328, "forward"], [329, "forward"], [330, "forward"], [331, "forward"], [332, "forward"], [333, "forward"], [357, "forward"]], "default": [[321, "default"], [326, "default"], [329, "default"], [375, "default"], [380, "default"]], "decomp": [[321, "decomp"], [375, "decomp"]], "restart": [[321, "restart"], [375, "restart"]], "threads": [[321, "threads"]], "rpe": [[321, "rpe"], [329, "rpe"], [375, "rpe"]], "correlated_tracers_2d": [[322, "correlated-tracers-2d"]], "base_mesh": [[322, "base-mesh"], [323, "base-mesh"], [324, "base-mesh"], [325, "base-mesh"], [331, "base-mesh"], [332, "base-mesh"]], "analysis": [[322, "analysis"], [323, "analysis"], [324, "analysis"], [325, "analysis"], [328, "analysis"], [330, "analysis"], [331, "analysis"], [332, "analysis"], [379, "analysis"]], "mixing_analysis": [[322, "mixing-analysis"]], "divergent_2d": [[324, "divergent-2d"]], "exact_solution": [[328, "exact-solution"], [330, "exact-solution"]], "nondivergent_2d": [[331, "nondivergent-2d"]], "filament_analysis": [[331, "filament-analysis"]], "rotation_2d": [[332, "rotation-2d"]], "cvmix": [[333, "cvmix"], [387, "cvmix"]], "ideal age": [[333, "ideal-age"], [387, "ocean-single-column-ideal-age"]], "Categories of tasks": [[334, "categories-of-tasks"]], "Constructor": [[335, "constructor"]], "Config file": [[335, "config-file"]], "Directory structure": [[336, "directory-structure"]], "Organization of Tasks": [[337, "organization-of-tasks"]], "Steps": [[338, "steps"]], "Step attributes": [[338, "step-attributes"]], "constructor": [[338, "constructor"], [340, "constructor"]], "setup()": [[338, "setup"]], "constrain_resources()": [[338, "constrain-resources"]], "runtime_setup()": [[338, "runtime-setup"]], "run()": [[338, "run"]], "inputs and outputs": [[338, "inputs-and-outputs"]], "Input files": [[338, "input-files"]], "Symlinks to input files": [[338, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[338, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[338, "downloading-and-symlinking-input-files"]], "Copying input files": [[338, "copying-input-files"]], "Output files": [[338, "output-files"]], "Cached output files": [[338, "cached-output-files"]], "Adding other steps as dependencies": [[338, "adding-other-steps-as-dependencies"]], "Suites": [[339, "suites"], [374, "suites"], [389, "suites"], [394, "suites"]], "Pull-Request (PR) suite": [[339, "pull-request-pr-suite"]], "Nightly suite": [[339, "nightly-suite"]], "Task attributes": [[340, "task-attributes"]], "configure()": [[340, "configure"]], "Overview": [[341, "overview"]], "Code Style": [[341, "code-style"]], "Packages and Modules": [[341, "packages-and-modules"]], "Packages": [[341, "packages"]], "Modules": [[341, "modules"]], "Classes": [[341, "classes"]], "Code sharing": [[341, "code-sharing"]], "\u2026in the polaris framework": [[341, "in-the-polaris-framework"]], "\u2026within a component": [[341, "within-a-component"]], "\u2026within a group of related tasks": [[341, "within-a-group-of-related-tasks"]], "\u2026within a task": [[341, "within-a-task"]], "Quick Start for Developers": [[342, "quick-start-for-developers"]], "Unix Shell": [[342, "unix-shell"]], "Set up a polaris repository: for beginners": [[342, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[342, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[342, "supported-machines"]], "Environments with Albany": [[342, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[342, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[342, "unknown-machines"]], "What the script does": [[342, "what-the-script-does"]], "Optional flags": [[342, "optional-flags"]], "Activating the environment": [[342, "activating-the-environment"]], "Switching between different polaris environments": [[342, "switching-between-different-polaris-environments"]], "Troubleshooting": [[342, "troubleshooting"], [358, "troubleshooting"]], "Creating/updating only the polaris environment": [[342, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[342, "building-e3sm-components"]], "MALI": [[342, "mali"]], "Omega": [[342, "omega"]], "Running polaris from the repo": [[342, "running-polaris-from-the-repo"]], "Code style for polaris": [[342, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[342, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[343, "seaice"]], "SeaIce framework": [[344, "seaice-framework"]], "polaris.seaice.SeaIce": [[345, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[346, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[347, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[348, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[349, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[350, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[351, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[352, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[353, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[354, "seaice-component"]], "Supported Model: MPAS-Seaice": [[355, "supported-model-mpas-seaice"]], "standard_physics_test": [[357, "standard-physics-test"]], "exact_restart_test": [[357, "exact-restart-test"]], "Solver errors when configuring conda environment": [[358, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[358, "proxy-on-lanl-macs"]], "gethostbyname failed": [[358, "gethostbyname-failed"]], "Glossary": [[359, "glossary"], [360, null]], "Polaris": [[360, "polaris"]], "User's guide": [[360, null]], "Developer's guide": [[360, null]], "Tutorials": [[360, null]], "Compass": [[360, "compass"]], "Developer Tutorial: Adding a new test group": [[361, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[361, "getting-started"]], "Making a new test group": [[361, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[361, "adding-a-default-task"]], "Varying resolution and other parameters": [[361, "varying-resolution-and-other-parameters"]], "Adding the init step": [[361, "adding-the-init-step"]], "Creating a horizontal mesh": [[361, "creating-a-horizontal-mesh"]], "Adding a config file": [[361, "adding-a-config-file"]], "Adding the step to the task": [[361, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[361, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[361, "creating-an-initial-condition"]], "Adding plots": [[361, "adding-plots"]], "Adding step outputs": [[361, "adding-step-outputs"]], "Adding validation": [[361, "adding-validation"], [361, "id1"]], "Test things out!": [[361, "test-things-out"]], "Adding the forward step": [[361, "adding-the-forward-step"]], "Defining model config options and streams": [[361, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[361, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[361, "adding-more-validation"]], "Test the task again!": [[361, "test-the-task-again"]], "Adding a visualization step": [[361, "adding-a-visualization-step"]], "Adding the viz step to the task": [[361, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[361, "test-the-task-one-more-time"]], "Adding a second task": [[361, "adding-a-second-task"]], "Enhancements": [[361, "enhancements"]], "Adding model config options in code": [[361, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[361, "adding-dynamic-model-config-options"]], "Computing the cell count": [[361, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[361, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[361, "adding-a-parameter-study"]], "Adding the steps to the task": [[361, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[361, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[361, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[362, "config-files"]], "A \u201cuser\u201d config file": [[362, "a-user-config-file"]], "Test-case config files": [[362, "test-case-config-files"]], "config options": [[363, "config-options"], [364, "config-options"], [365, "config-options"], [366, "config-options"], [367, "config-options"], [368, "config-options"], [369, "config-options"], [370, "config-options"], [375, "config-options"], [375, "id7"], [375, "id14"], [375, "id22"], [375, "id30"], [375, "id37"], [376, "config-options"], [377, "config-options"], [378, "config-options"], [379, "config-options"], [380, "config-options"], [380, "id7"], [380, "id14"], [380, "id22"], [382, "config-options"], [383, "config-options"], [383, "id7"], [384, "config-options"], [385, "config-options"], [386, "config-options"], [387, "config-options"], [387, "id1"], [387, "id6"], [387, "id13"], [388, "config-options"], [392, "config-options"], [392, "id5"], [392, "id10"], [393, "config-options"]], "Loading and running Polaris on Anvil": [[363, "loading-and-running-polaris-on-anvil"]], "Chicoma-CPU": [[364, "chicoma-cpu"]], "Loading and running Polaris on Chicoma": [[364, "loading-and-running-polaris-on-chicoma"]], "Loading and running Polaris on Chrysalis": [[365, "loading-and-running-polaris-on-chrysalis"]], "Loading and running Polaris on CompyMcNodeFace": [[366, "loading-and-running-polaris-on-compymcnodeface"]], "Loading and running Polaris on Frontier": [[367, "loading-and-running-polaris-on-frontier"]], "Slurm job queueing": [[368, "slurm-job-queueing"]], "MPICH": [[368, "mpich"]], "OpenMPI": [[368, "openmpi"]], "No MPI from conda-forge": [[368, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[369, "perlmutter-cpu"]], "Loading and running Polaris on Perlmutter": [[369, "loading-and-running-polaris-on-perlmutter"]], "Jupyter notebook on remote data": [[369, "jupyter-notebook-on-remote-data"]], "Ice shelf": [[370, "ice-shelf"]], "SSH adjustment steps": [[370, "ssh-adjustment-steps"]], "1D Grid type": [[372, "d-grid-type"]], "uniform": [[372, "uniform"]], "tanh_dz": [[372, "tanh-dz"]], "index_tanh_dz": [[372, "index-tanh-dz"]], "60layerPHC": [[372, "layerphc"]], "80layerE3SMv1": [[372, "layere3smv1"]], "100layerE3SMv1": [[372, "id1"]], "3D vertical coordinates": [[372, "d-vertical-coordinates"]], "z-star": [[372, "z-star"]], "z-level": [[372, "z-level"]], "sigma": [[372, "sigma"]], "cosine_bell and cosine_bell_cached_init suite": [[374, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[375, "baroclinic-channel"]], "description": [[375, "description"], [375, "id1"], [375, "id8"], [375, "id16"], [375, "id24"], [376, "description"], [377, "description"], [378, "description"], [379, "description"], [380, "description"], [380, "id1"], [380, "id8"], [380, "id16"], [382, "description"], [383, "description"], [383, "id1"], [384, "description"], [385, "description"], [386, "description"], [387, "description"], [387, "id2"], [387, "id7"], [388, "description"], [392, "description"], [393, "description"]], "suppported models": [[375, "suppported-models"], [376, "suppported-models"], [377, "suppported-models"], [378, "suppported-models"], [379, "suppported-models"], [380, "suppported-models"], [382, "suppported-models"], [383, "suppported-models"], [384, "suppported-models"], [385, "suppported-models"], [386, "suppported-models"], [387, "suppported-models"], [388, "suppported-models"]], "vertical grid": [[375, "vertical-grid"], [375, "id3"], [375, "id10"], [375, "id18"], [375, "id26"], [375, "id33"], [376, "vertical-grid"], [377, "vertical-grid"], [378, "vertical-grid"], [379, "vertical-grid"], [380, "vertical-grid"], [380, "id3"], [380, "id10"], [380, "id18"], [382, "vertical-grid"], [383, "vertical-grid"], [383, "id3"], [384, "vertical-grid"], [385, "vertical-grid"], [386, "vertical-grid"], [387, "vertical-grid"], [387, "id4"], [387, "id9"], [388, "vertical-grid"]], "initial conditions": [[375, "initial-conditions"], [375, "id4"], [375, "id11"], [375, "id19"], [375, "id27"], [375, "id34"], [376, "initial-conditions"], [377, "initial-conditions"], [378, "initial-conditions"], [379, "initial-conditions"], [380, "initial-conditions"], [380, "id4"], [380, "id11"], [380, "id19"], [382, "initial-conditions"], [383, "initial-conditions"], [383, "id4"], [384, "initial-conditions"], [385, "initial-conditions"], [386, "initial-conditions"], [387, "initial-conditions"], [387, "id5"], [387, "id10"], [388, "initial-conditions"], [392, "initial-conditions"], [392, "id2"], [392, "id7"], [393, "initial-conditions"]], "forcing": [[375, "forcing"], [375, "id5"], [375, "id12"], [375, "id20"], [375, "id28"], [375, "id35"], [376, "forcing"], [377, "forcing"], [378, "forcing"], [379, "forcing"], [380, "forcing"], [380, "id5"], [380, "id12"], [380, "id20"], [382, "forcing"], [383, "forcing"], [383, "id5"], [384, "forcing"], [385, "forcing"], [386, "forcing"], [387, "forcing"], [387, "id11"], [388, "forcing"], [392, "forcing"], [392, "id3"], [392, "id8"], [393, "forcing"]], "time step and run duration": [[375, "time-step-and-run-duration"], [375, "id6"], [375, "id13"], [375, "id21"], [375, "id29"], [375, "id36"], [376, "time-step-and-run-duration"], [377, "time-step-and-run-duration"], [378, "time-step-and-run-duration"], [379, "time-step-and-run-duration"], [380, "time-step-and-run-duration"], [380, "id6"], [380, "id13"], [380, "id21"], [382, "time-step-and-run-duration"], [383, "time-step-and-run-duration"], [383, "id6"], [384, "time-step-and-run-duration"], [385, "time-step-and-run-duration"], [386, "time-step-and-run-duration"], [387, "time-step-and-run-duration"], [387, "id12"], [388, "time-step-and-run-duration"], [393, "time-step-and-run-duration"]], "cores": [[375, "cores"], [375, "id15"], [375, "id23"], [375, "id31"], [375, "id38"], [376, "cores"], [377, "cores"], [378, "cores"], [379, "cores"], [380, "cores"], [380, "id15"], [380, "id23"], [382, "cores"], [383, "cores"], [384, "cores"], [385, "cores"], [386, "cores"], [387, "cores"], [387, "id14"], [388, "cores"], [392, "cores"], [392, "id4"], [392, "id9"], [393, "cores"]], "thread": [[375, "thread"]], "correlated tracers 2-d": [[376, "correlated-tracers-2-d"]], "cosine bell": [[377, "cosine-bell"]], "divergent 2-d": [[378, "divergent-2-d"]], "ice shelf 2d": [[380, "ice-shelf-2d"]], "default_with_restart": [[380, "default-with-restart"]], "default_tidal_forcing": [[380, "default-tidal-forcing"]], "inertial gravity wave": [[382, "inertial-gravity-wave"]], "internal wave": [[383, "internal-wave"]], "default task": [[383, "default-task"]], "RPE task": [[383, "rpe-task"]], "manufactured solution": [[384, "manufactured-solution"]], "convergence": [[384, "convergence"]], "nondivergent 2-d": [[385, "nondivergent-2-d"]], "rotation 2-d": [[386, "rotation-2-d"]], "single column": [[387, "single-column"], [392, "single-column"]], "<Category of task>": [[388, "ocean-category-of-task"], [393, "seaice-category-of-task"]], "task_name": [[388, "task-name"], [393, "task-name"]], "Quick Start for Users": [[389, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[389, null]], "Loading polaris conda and spack environments": [[389, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[389, "e3sm-supported-machines"]], "Other machines": [[389, "other-machines"]], "Building supported E3SM components as standalone models": [[389, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[389, "setting-up-tasks"]], "Running a task": [[389, "running-a-task"]], "Running with a job script": [[389, "running-with-a-job-script"]], "Sea ice component": [[390, "sea-ice-component"]], "standard physics test": [[392, "standard-physics-test"]], "timestep and run duration": [[392, "timestep-and-run-duration"], [392, "id11"]], "visualization": [[392, "visualization"]], "exact restart test": [[392, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_configs() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_configs"]], "map_yaml_options() (polaris.modelstep method)": [[32, "polaris.ModelStep.map_yaml_options"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[33, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[34, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[35, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[37, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[38, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[39, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[40, "polaris.Step"]], "__init__() (polaris.step method)": [[40, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[41, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[42, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[43, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[44, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[45, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[46, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[47, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[48, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[49, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[50, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[51, "polaris.Task"]], "__init__() (polaris.task method)": [[51, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[52, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[53, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[54, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[55, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[56, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[57, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[58, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[59, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[59, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[60, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[61, "polaris.io.download"]], "symlink() (in module polaris.io)": [[62, "polaris.io.symlink"]], "update_permissions() (in module polaris.io)": [[63, "polaris.io.update_permissions"]], "clean_up_whitespace() (in module polaris.job)": [[64, "polaris.job.clean_up_whitespace"]], "get_slurm_options() (in module polaris.job)": [[65, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[66, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[67, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[68, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[69, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[70, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[71, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[73, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[74, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[75, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[76, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[77, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[80, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[81, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[82, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[83, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[84, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[85, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[86, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[87, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[88, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[89, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[90, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[91, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[92, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[93, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[94, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[95, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[96, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[97, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[98, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[99, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[100, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[108, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[109, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[110, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[111, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[112, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[113, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[114, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[115, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[116, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[117, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[118, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[119, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[120, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[121, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[122, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[123, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[124, "polaris.validate.compare_variables"]], "plot_global_lat_lon_field() (in module polaris.viz)": [[125, "polaris.viz.plot_global_lat_lon_field"]], "plot_global_mpas_field() (in module polaris.viz)": [[126, "polaris.viz.plot_global_mpas_field"]], "plot_horiz_field() (in module polaris.viz)": [[127, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[128, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[129, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[129, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[130, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[131, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[132, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[133, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[134, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[135, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[145, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[145, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[149, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[150, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[151, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[152, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[153, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[154, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[154, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[155, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[156, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[157, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[157, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[158, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "iceshelftask (class in polaris.ocean.ice_shelf)": [[159, "polaris.ocean.ice_shelf.IceShelfTask"]], "__init__() (polaris.ocean.ice_shelf.iceshelftask method)": [[159, "polaris.ocean.ice_shelf.IceShelfTask.__init__"]], "setup_ssh_adjustment_steps() (polaris.ocean.ice_shelf.iceshelftask method)": [[160, "polaris.ocean.ice_shelf.IceShelfTask.setup_ssh_adjustment_steps"]], "sshadjustment (class in polaris.ocean.ice_shelf)": [[161, "polaris.ocean.ice_shelf.SshAdjustment"]], "__init__() (polaris.ocean.ice_shelf.sshadjustment method)": [[161, "polaris.ocean.ice_shelf.SshAdjustment.__init__"]], "run() (polaris.ocean.ice_shelf.sshadjustment method)": [[162, "polaris.ocean.ice_shelf.SshAdjustment.run"]], "sshforward (class in polaris.ocean.ice_shelf)": [[163, "polaris.ocean.ice_shelf.SshForward"]], "__init__() (polaris.ocean.ice_shelf.sshforward method)": [[163, "polaris.ocean.ice_shelf.SshForward.__init__"]], "compute_cell_count() (polaris.ocean.ice_shelf.sshforward method)": [[164, "polaris.ocean.ice_shelf.SshForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.ice_shelf.sshforward method)": [[165, "polaris.ocean.ice_shelf.SshForward.dynamic_model_config"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[166, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[167, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[167, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[168, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[169, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_configs() (polaris.ocean.model.oceanmodelstep method)": [[170, "polaris.ocean.model.OceanModelStep.map_yaml_configs"]], "map_yaml_options() (polaris.ocean.model.oceanmodelstep method)": [[171, "polaris.ocean.model.OceanModelStep.map_yaml_options"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[172, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[173, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[174, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[175, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[176, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[176, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[177, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[177, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[178, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[178, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[179, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[180, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[181, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[181, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[182, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[183, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[184, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[184, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[185, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[185, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[186, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[187, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[187, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[188, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[189, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[189, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[190, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[191, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[192, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[192, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[193, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[193, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[194, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[195, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[195, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[196, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[197, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[197, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[198, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[199, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[200, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[200, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[201, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[202, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[202, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[203, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[204, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[205, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[205, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[206, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[207, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[208, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[208, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[209, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[210, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[210, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[211, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[212, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[213, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[213, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[214, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[215, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[216, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[216, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[217, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[217, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[218, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[219, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[219, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[220, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "add_ice_shelf_2d_tasks() (in module polaris.ocean.tasks.ice_shelf_2d)": [[221, "polaris.ocean.tasks.ice_shelf_2d.add_ice_shelf_2d_tasks"]], "default (class in polaris.ocean.tasks.ice_shelf_2d.default)": [[222, "polaris.ocean.tasks.ice_shelf_2d.default.Default"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.default.default method)": [[222, "polaris.ocean.tasks.ice_shelf_2d.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.ice_shelf_2d.forward)": [[223, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[223, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[224, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.ice_shelf_2d.forward.forward method)": [[225, "polaris.ocean.tasks.ice_shelf_2d.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.ice_shelf_2d.init)": [[226, "polaris.ocean.tasks.ice_shelf_2d.init.Init"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[226, "polaris.ocean.tasks.ice_shelf_2d.init.Init.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.init.init method)": [[227, "polaris.ocean.tasks.ice_shelf_2d.init.Init.run"]], "validate (class in polaris.ocean.tasks.ice_shelf_2d.validate)": [[228, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[228, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.validate.validate method)": [[229, "polaris.ocean.tasks.ice_shelf_2d.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.ice_shelf_2d.viz)": [[230, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz"]], "__init__() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[230, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.ice_shelf_2d.viz.viz method)": [[231, "polaris.ocean.tasks.ice_shelf_2d.viz.Viz.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[232, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[232, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[233, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[234, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[234, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[235, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[236, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[236, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[237, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[238, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[239, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[239, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[240, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[241, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[241, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[242, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[243, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[243, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[244, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "add_internal_wave_tasks() (in module polaris.ocean.tasks.internal_wave)": [[245, "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks"]], "default (class in polaris.ocean.tasks.internal_wave.default)": [[246, "polaris.ocean.tasks.internal_wave.default.Default"]], "__init__() (polaris.ocean.tasks.internal_wave.default.default method)": [[246, "polaris.ocean.tasks.internal_wave.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.internal_wave.forward)": [[247, "polaris.ocean.tasks.internal_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[247, "polaris.ocean.tasks.internal_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[248, "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[249, "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.internal_wave.init)": [[250, "polaris.ocean.tasks.internal_wave.init.Init"]], "__init__() (polaris.ocean.tasks.internal_wave.init.init method)": [[250, "polaris.ocean.tasks.internal_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.internal_wave.init.init method)": [[251, "polaris.ocean.tasks.internal_wave.init.Init.run"]], "rpe (class in polaris.ocean.tasks.internal_wave.rpe)": [[252, "polaris.ocean.tasks.internal_wave.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[252, "polaris.ocean.tasks.internal_wave.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[253, "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.internal_wave.rpe.analysis)": [[254, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[254, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[255, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run"]], "viz (class in polaris.ocean.tasks.internal_wave.viz)": [[256, "polaris.ocean.tasks.internal_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[256, "polaris.ocean.tasks.internal_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[257, "polaris.ocean.tasks.internal_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[258, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[258, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[259, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[260, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[260, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[261, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[262, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[262, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[263, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[264, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[265, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[265, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[266, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[267, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[267, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[268, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "setup() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[269, "polaris.ocean.tasks.manufactured_solution.init.Init.setup"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[270, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[270, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[271, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[272, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[273, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[273, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[274, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[274, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[275, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[275, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[276, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[276, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[277, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[278, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[278, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[279, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[280, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[280, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[281, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[282, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[283, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[283, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[284, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[285, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[285, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[286, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[287, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[287, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[288, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[288, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[289, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[290, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[290, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[291, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[292, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[292, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[293, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[294, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[295, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[296, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[297, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[298, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "init_sigma_vertical_coord() (in module polaris.ocean.vertical.sigma)": [[299, "polaris.ocean.vertical.sigma.init_sigma_vertical_coord"]], "update_sigma_layer_thickness() (in module polaris.ocean.vertical.sigma)": [[300, "polaris.ocean.vertical.sigma.update_sigma_layer_thickness"]], "update_layer_thickness() (in module polaris.ocean.vertical)": [[301, "polaris.ocean.vertical.update_layer_thickness"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[302, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[303, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[304, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[305, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "update_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[306, "polaris.ocean.vertical.zlevel.update_z_level_layer_thickness"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[307, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "update_z_star_layer_thickness() (in module polaris.ocean.vertical.zstar)": [[308, "polaris.ocean.vertical.zstar.update_z_star_layer_thickness"]], "compute_transect() (in module polaris.ocean.viz)": [[309, "polaris.ocean.viz.compute_transect"]], "plot_transect() (in module polaris.ocean.viz)": [[310, "polaris.ocean.viz.plot_transect"]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[311, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights"]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[312, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights"]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[313, "polaris.ocean.viz.transect.horiz.make_triangle_tree"]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[314, "polaris.ocean.viz.transect.horiz.mesh_to_triangles"]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[315, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights"]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[316, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells"]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[317, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes"]], "seaice (class in polaris.seaice)": [[345, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[345, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[346, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[347, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[347, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[348, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[348, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[349, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[350, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[350, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[351, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[351, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[352, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[352, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[353, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})