Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/organization", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/organization.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Framework", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.get_available_cores_and_nodes", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "Organization of Tests", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 12, 13, 14, 77, 86, 90, 117, 124, 166, 167], "date": [1, 4, 37, 155, 163, 167], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 22, 23, 24, 25, 27, 29, 30, 31, 34, 35, 37, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 59, 63, 65, 69, 70, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 90, 91, 96, 99, 100, 101, 102, 108, 111, 113, 115, 116, 118, 120, 121, 123, 125, 128, 130, 131, 134, 137, 138, 140, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182], "purpos": [1, 34, 161, 162, 165, 182], "thi": [1, 2, 4, 5, 6, 9, 14, 15, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 46, 47, 48, 51, 52, 54, 55, 56, 57, 59, 60, 68, 70, 72, 74, 82, 83, 92, 93, 94, 95, 96, 97, 99, 101, 102, 104, 107, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 137, 139, 140, 141, 142, 143, 144, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 175, 178, 179, 181, 183], "section": [1, 2, 4, 5, 6, 9, 15, 55, 87, 99, 101, 104, 145, 147, 153, 154, 155, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 179, 181], "i": [1, 4, 5, 6, 9, 14, 19, 22, 23, 27, 28, 30, 37, 40, 42, 54, 55, 59, 70, 73, 74, 75, 77, 79, 82, 83, 84, 86, 91, 92, 94, 95, 96, 99, 101, 102, 115, 116, 117, 124, 141, 142, 147, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 182, 183], "summar": 1, "what": [1, 6, 96, 162, 173, 181], "capabl": [1, 96, 161, 162, 172, 181], "ad": [1, 4, 5, 6, 23, 29, 32, 39, 83, 108, 120, 130, 147, 153, 154, 163, 166, 168, 169, 170, 171, 173, 181], "polari": [1, 3, 5, 6, 92, 94, 95, 96, 99, 155, 156, 158, 159, 164, 165, 167, 168, 169, 170, 171, 172, 173, 176, 177, 182, 183], "through": [1, 76, 162], "process": [1, 6, 17, 70, 91, 161, 162, 163, 165, 166], "It": [1, 4, 22, 27, 158, 161, 162, 163, 165, 167, 172], "should": [1, 4, 5, 6, 10, 15, 23, 29, 30, 32, 40, 55, 75, 76, 83, 84, 92, 93, 94, 95, 96, 97, 99, 104, 120, 130, 155, 161, 163, 164, 167, 178, 181], "clear": [1, 162], "new": [1, 4, 7, 10, 22, 30, 34, 39, 42, 47, 54, 59, 78, 79, 115, 123, 140, 147, 153, 154, 161, 162, 163, 164, 165, 166, 181], "code": [1, 4, 5, 6, 22, 99, 155, 161, 165, 166, 167, 174, 178, 181], "do": [1, 4, 6, 86, 161, 163, 164, 165, 172, 181], "current": [1, 4, 6, 9, 19, 22, 28, 82, 83, 96, 101, 155, 159, 161, 162, 163, 165, 166, 167, 172, 175, 178, 179, 181, 182, 183], "doe": [1, 6, 161, 166, 172], "primari": [1, 4, 6, 183], "challeng": 1, "respect": [1, 6, 99, 161, 162], "softwar": [1, 63, 173, 181], "also": [1, 4, 5, 6, 17, 27, 39, 82, 83, 99, 147, 153, 154, 155, 161, 162, 163, 167, 172, 173, 175, 178, 181, 182], "appropri": [1, 4, 6, 10, 68, 96, 155, 158, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 181], "final": [1, 5, 158, 161], "statement": [1, 6, 161, 165], "contain": [1, 4, 5, 6, 7, 11, 12, 13, 38, 41, 65, 77, 84, 85, 99, 106, 147, 153, 154, 161, 162, 163, 165, 167, 172, 176, 181], "gener": [1, 2, 3, 5, 6, 10, 11, 12, 13, 17, 29, 54, 83, 99, 120, 130, 145, 155, 157, 158, 159, 161, 163, 167, 172, 179, 181], "regard": 1, "success": [1, 40, 155, 161, 167], "last": [1, 161, 163, 179, 181], "modifi": [1, 6, 9, 21, 32, 77, 79, 101, 109, 126, 158, 161, 163, 166, 167, 178, 181], "add": [1, 4, 5, 6, 8, 10, 11, 12, 13, 14, 23, 24, 31, 32, 35, 53, 58, 62, 77, 78, 79, 86, 87, 90, 91, 117, 124, 158, 161, 162, 163, 165, 167, 173, 179], "your": [1, 3, 4, 6, 96, 155, 162, 163, 164, 167, 168, 169, 172, 173, 179, 181], "list": [1, 5, 9, 22, 30, 31, 37, 38, 70, 74, 75, 76, 81, 82, 83, 106, 128, 134, 137, 161, 162, 163, 165, 166, 167, 169, 172, 173, 179, 181, 182, 183], "appear": [1, 96, 161], "each": [1, 4, 5, 6, 27, 30, 43, 49, 50, 76, 91, 96, 99, 112, 122, 132, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 165, 167, 172, 175, 178, 179, 181, 183], "under": [1, 82, 96, 99, 157, 161, 163, 166, 175, 182], "head": [1, 157, 169], "one": [1, 4, 5, 6, 9, 21, 23, 30, 37, 42, 75, 76, 81, 83, 99, 101, 110, 112, 114, 121, 122, 127, 132, 155, 158, 161, 162, 163, 164, 165, 166, 167, 172, 173, 175, 179, 181, 182, 183], "correspond": [1, 5, 6, 82, 83, 99, 155, 161, 163], "between": [1, 4, 6, 9, 21, 23, 48, 55, 56, 61, 82, 83, 101, 121, 147, 153, 154, 159, 161, 162, 163, 172, 175, 178], "propos": 1, "discuss": [1, 99, 161, 162, 179], "technic": [1, 5], "issu": [1, 161, 163, 179], "rather": [1, 6, 22, 23, 39, 96, 158, 161, 163, 164, 175], "focu": 1, "model": [1, 4, 9, 10, 14, 15, 17, 22, 23, 75, 76, 81, 85, 90, 92, 93, 94, 95, 96, 97, 111, 115, 117, 121, 123, 124, 125, 131, 142, 155, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178], "To": [1, 4, 6, 83, 96, 99, 155, 161, 162, 163, 168, 169, 170, 171, 172, 173, 175, 179, 181], "extent": 1, "possibl": [1, 6, 50, 99, 157, 161, 162, 175], "rel": [1, 4, 6, 23, 24, 37, 39, 75, 76, 81, 82, 83, 155, 161, 162, 163, 165, 178, 181, 182], "independ": [1, 4, 161, 165], "other": [1, 4, 5, 6, 22, 24, 39, 92, 112, 122, 132, 159, 161, 162, 163, 164, 165, 166, 167, 168, 178, 182], "thu": [1, 5, 161], "allow": [1, 6, 9, 19, 22, 28, 39, 83, 99, 101, 161, 165, 167, 172, 175, 178, 179, 182], "clean": [1, 161, 163], "plan": [1, 155, 161, 165, 182], "For": [1, 2, 4, 5, 6, 68, 76, 92, 157, 158, 161, 162, 163, 165, 167, 168, 176, 179, 181, 182], "you": [1, 3, 4, 5, 6, 92, 93, 94, 95, 96, 97, 155, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 178, 179, 181, 182, 183], "can": [1, 3, 4, 5, 6, 19, 22, 23, 28, 30, 33, 51, 54, 56, 75, 76, 81, 83, 92, 93, 94, 95, 96, 97, 99, 155, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 183], "provid": [1, 2, 4, 6, 23, 82, 83, 86, 99, 110, 112, 114, 122, 127, 132, 155, 158, 161, 162, 163, 164, 165, 166, 167, 172, 176, 181], "an": [1, 2, 4, 5, 9, 17, 22, 23, 24, 42, 47, 49, 50, 68, 77, 79, 82, 83, 90, 96, 101, 143, 158, 162, 163, 164, 165, 166, 167, 169, 172, 175, 181, 182, 183], "intend": [1, 6, 161, 167, 182], "meet": 1, "includ": [1, 4, 5, 6, 23, 29, 30, 40, 74, 96, 99, 108, 120, 130, 158, 161, 162, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 179, 181, 182, 183], "detail": [1, 2, 4, 5, 6, 43, 83, 157, 159, 161, 162, 163, 164, 181], "pde": 1, "solver": [1, 161, 163, 166, 181], "similar": [1, 4, 6, 93, 96, 97, 161, 162, 163, 181], "well": [1, 6, 99, 150, 158, 161, 163, 165, 167, 181, 182], "perform": [1, 4, 6, 26, 27, 29, 33, 47, 82, 83, 113, 115, 120, 125, 130, 133, 140, 155, 158, 159, 161, 165, 166, 167, 172, 178, 183], "In": [1, 5, 6, 22, 99, 159, 161, 162, 163, 166, 167, 172, 175, 181, 182, 183], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 11, 12, 15, 22, 23, 30, 32, 37, 40, 42, 63, 65, 70, 74, 76, 77, 78, 79, 82, 83, 84, 86, 87, 90, 91, 96, 101, 104, 110, 115, 137, 142, 151, 155, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 177, 178, 179, 181, 182, 183], "low": [1, 84], "level": [1, 6, 99, 147, 148, 149, 150, 151, 152, 153, 154, 158, 161, 167, 178, 183], "variabl": [1, 4, 7, 9, 22, 30, 33, 34, 47, 54, 59, 63, 68, 82, 83, 84, 85, 86, 91, 96, 99, 101, 108, 115, 118, 128, 134, 136, 137, 140, 147, 153, 154, 157, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 176, 178, 181], "declar": [1, 5], "interfac": [1, 6, 145, 146, 147, 153, 154, 161, 162, 163, 166, 175], "sequenc": [1, 4, 161, 162, 165, 181, 182, 183], "If": [1, 4, 5, 6, 9, 19, 22, 23, 28, 31, 32, 42, 68, 70, 71, 75, 82, 83, 84, 92, 93, 94, 95, 96, 97, 101, 115, 158, 161, 162, 163, 164, 165, 167, 172, 173, 175, 178, 179, 181], "want": [1, 4, 6, 32, 99, 161, 163, 164, 167, 172, 173, 181, 182], "math": 1, "syntax": 1, "almost": [1, 6], "ident": [1, 4, 6, 111, 121, 131, 158, 161, 162, 178], "latex": 1, "b": [1, 4, 163, 165, 181], "2": [1, 6, 131, 157, 158, 161, 163, 167, 169, 172, 175, 178, 179, 181], "2ab": 1, "imag": [1, 5, 6, 84, 161], "keep": [1, 4, 6, 9, 39, 161, 163], "mind": [1, 4], "quit": [1, 161], "small": [1, 6, 27, 161, 168, 169, 174, 175, 181], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 9, 18, 19, 22, 23, 27, 28, 30, 34, 39, 68, 70, 74, 76, 83, 87, 96, 99, 101, 115, 147, 150, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 181, 182, 183], "prefer": [1, 161, 167], "png": [1, 6, 159], "okai": [1, 161], "size": [1, 6, 49, 50, 99, 103, 105, 106, 158, 161, 167, 179], "repo": [1, 4, 155, 166], "exampl": [1, 2, 4, 5, 6, 161, 162, 163, 164, 165, 167, 169, 175, 181, 182, 183], "centric": 1, "pseudo": 1, "link": [1, 5, 6, 23, 42, 96, 161, 163, 172, 176, 181], "actual": [1, 4, 6, 161, 163], "sourc": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 163, 167, 168, 169, 170, 171, 172, 173, 181], "project": [1, 4, 5, 46, 155, 162, 163, 167, 168, 169, 172, 181], "manag": [1, 164, 172], "item": 1, "git": [1, 6, 72, 155, 163, 167, 181], "branch": [1, 4, 96, 155, 161, 163, 181], "timelin": 1, "staf": 1, "via": [1, 4, 161, 172], "block": [1, 161], "like": [1, 4, 5, 6, 99, 161, 162, 163, 164, 166, 167, 172, 178, 179, 181, 182], "def": [1, 5, 6, 161, 162], "example_funct": 1, "foo": [1, 162], "return": [1, 5, 15, 38, 40, 48, 49, 50, 55, 65, 69, 76, 77, 79, 86, 90, 91, 99, 102, 104, 106, 116, 138, 141, 145, 148, 149, 150, 151, 152, 162, 179], "0": [1, 4, 5, 6, 49, 83, 92, 93, 94, 95, 96, 97, 99, 147, 152, 153, 154, 157, 161, 162, 164, 167, 169, 172, 175, 176, 178, 179, 181], "how": [1, 4, 6, 54, 99, 161, 162, 167, 172, 173, 178, 179], "show": [1, 5, 6, 161, 172, 173, 178, 179], "we": [1, 4, 5, 6, 68, 95, 96, 99, 105, 158, 161, 162, 163, 167, 169, 171, 172, 173, 175, 181, 183], "have": [1, 3, 4, 5, 6, 15, 68, 75, 76, 81, 95, 96, 99, 104, 137, 155, 158, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183], "met": 1, "which": [1, 4, 5, 6, 12, 13, 15, 23, 34, 38, 75, 76, 77, 81, 83, 84, 86, 99, 104, 111, 121, 131, 155, 157, 161, 162, 163, 167, 169, 172, 175, 178, 179, 181, 182, 183], "regress": [1, 133, 158, 161, 165, 166, 178, 181, 183], "suit": [1, 5, 22, 30, 43, 73, 74, 76, 96, 158, 163, 165, 166, 167, 168, 169, 170, 171, 173, 176], "would": [1, 4, 6, 9, 19, 22, 28, 31, 70, 83, 99, 101, 115, 158, 161, 162, 163, 164, 172, 175, 181], "thei": [1, 4, 5, 6, 23, 32, 39, 54, 74, 87, 99, 155, 158, 161, 162, 163, 165, 166, 167, 172, 175, 178, 179, 181, 183], "need": [1, 3, 4, 5, 6, 14, 31, 39, 55, 68, 99, 117, 124, 155, 161, 162, 163, 164, 166, 167, 168, 172, 173, 175, 179, 181, 183], "configur": [1, 4, 6, 19, 22, 28, 30, 40, 68, 69, 70, 71, 72, 75, 76, 81, 96, 99, 145, 147, 148, 149, 153, 154, 158, 162, 166, 167, 169, 172, 173, 175, 181, 182], "work": [1, 4, 6, 22, 23, 24, 26, 29, 30, 37, 72, 73, 75, 76, 81, 95, 96, 120, 130, 161, 162, 163, 164, 165, 167, 172, 179, 181, 182], "properli": [1, 92, 94, 95, 167, 181], "addit": [1, 5, 6, 22, 161, 162, 163], "modif": [1, 5, 161], "nightli": [1, 163, 181, 183], "anoth": [1, 5, 6, 23, 82, 83, 155, 161, 162, 163, 165, 167, 178, 181, 182, 183], "might": [1, 6, 161, 163, 167, 172, 181], "made": [1, 4, 22, 24, 30, 83, 161, 162, 165, 182], "ensur": [1, 6, 39, 158, 161, 162, 163], "continu": [1, 161], "expect": [1, 6, 161, 163], "page": [2, 5, 168], "auto": 2, "summari": [2, 169], "more": [2, 4, 6, 30, 37, 55, 75, 76, 99, 157, 158, 159, 161, 162, 163, 165, 172, 176, 178, 181, 182], "relev": [2, 5, 6, 99, 168, 169, 170, 171, 172, 173, 181], "main": [2, 5, 6, 26, 96, 161, 162, 163, 182], "part": [2, 4, 5, 6, 22, 30, 115, 140, 158, 161, 162, 163, 166, 175], "document": [2, 6, 161, 162, 166, 167, 181], "ocean": [2, 4, 5, 6, 7, 15, 23, 34, 81, 156, 158, 159, 161, 162, 163, 165, 166, 167, 172, 174, 175, 177, 178, 181, 182, 183], "As": [3, 4, 6, 49, 99, 161, 162, 163, 167, 175, 183], "long": [3, 9, 19, 22, 28, 70, 101, 115, 161, 181], "follow": [3, 4, 5, 6, 46, 96, 147, 153, 154, 155, 157, 158, 161, 163, 164, 167, 172, 173, 175, 177, 179, 181], "procedur": [3, 96, 163, 173], "conda": [3, 4, 6, 72, 92, 94, 95, 96, 155, 161, 162, 166, 167, 168, 169, 170, 171, 173], "environ": [3, 4, 68, 92, 94, 95, 96, 155, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173], "spack": [3, 4, 92, 94, 95, 96, 164, 166, 168, 169, 170, 171, 172, 173], "compil": [3, 4, 92, 93, 94, 95, 96, 97, 161, 164, 166, 168, 169, 170, 171, 172, 173, 181], "system": [3, 4, 9, 19, 22, 28, 68, 70, 71, 92, 94, 95, 96, 101, 115, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 181], "modul": [3, 4, 11, 12, 13, 46, 65, 77, 92, 94, 95, 96, 99, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 181], "set": [3, 4, 5, 6, 10, 11, 12, 13, 14, 22, 23, 29, 55, 71, 72, 75, 76, 77, 79, 81, 82, 83, 84, 92, 93, 94, 95, 96, 97, 115, 117, 120, 124, 130, 133, 135, 142, 147, 153, 154, 155, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 183], "up": [3, 4, 5, 6, 10, 11, 12, 13, 22, 29, 30, 60, 72, 75, 76, 81, 82, 83, 92, 93, 94, 95, 96, 97, 99, 120, 130, 133, 155, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 179, 182], "alreadi": [3, 6, 32, 42, 99, 115, 161, 162, 163, 167, 172, 175, 179, 181], "packag": [3, 4, 5, 6, 11, 12, 13, 23, 32, 41, 65, 72, 77, 81, 86, 96, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 181], "avail": [3, 4, 6, 9, 19, 22, 24, 25, 28, 38, 43, 69, 70, 101, 115, 161, 162, 163, 168, 169, 170, 171, 173, 178, 179, 181, 183], "Then": [3, 5, 6, 92, 93, 94, 95, 96, 97, 99, 155, 158, 161, 163, 172, 178, 181], "run": [3, 4, 5, 9, 14, 19, 22, 24, 27, 28, 30, 31, 37, 46, 69, 70, 75, 76, 81, 83, 95, 96, 101, 102, 113, 115, 116, 117, 121, 124, 128, 137, 140, 141, 142, 155, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 182, 183], "script": [3, 4, 6, 36, 93, 96, 97, 162, 165, 166, 169, 172], "doc": [3, 5, 161, 173], "cd": [3, 155, 163, 169, 181], "rm": 3, "rf": 3, "developers_guid": 3, "_build": 3, "make": [3, 4, 9, 18, 23, 39, 48, 49, 51, 63, 83, 92, 93, 94, 95, 96, 97, 101, 105, 111, 121, 131, 147, 153, 154, 155, 158, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 178, 179, 181, 183], "html": [3, 176], "view": [3, 163], "open": [3, 163], "index": [3, 6, 147, 148, 149, 150, 151, 152, 153, 154, 161], "act": [4, 162, 175], "essenti": [4, 161], "4": [4, 5, 6, 111, 113, 158, 161, 167, 172, 178, 179, 181], "These": [4, 6, 7, 22, 99, 155, 157, 161, 162, 163, 166, 167, 172, 181, 182, 183], "user": [4, 5, 6, 22, 30, 31, 39, 72, 83, 96, 99, 158, 161, 164, 165, 169, 172, 173, 176, 178, 179], "describ": [4, 5, 72, 77, 79, 82, 83, 91, 96, 99, 158, 159, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 179, 181], "below": [4, 9, 19, 22, 28, 70, 96, 101, 115, 155, 161, 163, 167, 172, 175, 179, 181], "when": [4, 6, 10, 11, 12, 13, 15, 27, 30, 31, 39, 40, 42, 43, 73, 82, 83, 96, 99, 104, 152, 158, 161, 162, 163, 166, 168, 169, 170, 171, 173, 175, 181, 182], "instal": [4, 163, 172, 173, 181], "abov": [4, 5, 6, 161, 162, 163, 167, 179, 181, 183], "develop": [4, 5, 6, 96, 99, 155, 157, 161, 162, 164, 167, 172, 176, 181], "local": [4, 6, 22, 23, 30, 155, 161, 163, 164, 167, 172, 173, 175], "off": [4, 163, 164], "http": [4, 5, 6, 42, 161, 162, 164, 166, 167, 173, 176, 181], "github": [4, 5, 162, 163, 166, 167, 176, 181], "com": [4, 5, 42, 162, 163, 166, 167, 181], "e3sm": [4, 5, 22, 85, 155, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176], "creat": [4, 6, 7, 9, 22, 23, 27, 30, 34, 42, 47, 48, 54, 55, 59, 75, 76, 81, 85, 96, 99, 108, 111, 113, 115, 118, 121, 123, 125, 128, 131, 134, 137, 140, 143, 147, 153, 154, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 181], "see": [4, 5, 6, 92, 94, 95, 158, 159, 161, 163, 164, 167, 172, 176, 177, 179, 181, 182, 183], "mode": [4, 161, 163, 165, 166, 181], "mean": [4, 6, 68, 138, 159, 163, 175, 178, 183], "chang": [4, 6, 54, 155, 161, 162, 163, 165, 167, 169, 173, 175, 178, 181, 183], "reflect": [4, 163], "call": [4, 6, 9, 17, 22, 27, 30, 31, 32, 46, 73, 96, 99, 158, 161, 162, 163, 164, 165, 166, 167, 172, 173, 181], "tool": [4, 6, 155, 161, 163, 166, 167], "us": [4, 5, 6, 9, 14, 15, 19, 22, 23, 27, 28, 30, 37, 40, 55, 63, 66, 68, 70, 73, 83, 84, 85, 86, 91, 92, 96, 99, 101, 102, 103, 104, 105, 115, 116, 117, 124, 134, 137, 141, 145, 147, 148, 149, 153, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183], "test": [4, 5, 6, 7, 8, 9, 19, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 43, 46, 47, 52, 54, 57, 59, 69, 70, 72, 73, 74, 75, 76, 81, 82, 83, 96, 99, 100, 101, 145, 155, 157, 158, 159, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179], "case": [4, 5, 6, 7, 9, 12, 13, 19, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 43, 47, 52, 54, 57, 59, 69, 70, 72, 73, 74, 75, 76, 77, 81, 82, 83, 96, 99, 100, 101, 107, 108, 109, 111, 113, 115, 118, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 134, 135, 137, 139, 140, 143, 145, 155, 157, 158, 159, 163, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 183], "support": [4, 6, 22, 99, 147, 153, 154, 157, 159, 161, 162, 166, 167, 169, 173, 175, 178, 182], "machin": [4, 6, 22, 23, 30, 72, 75, 76, 81, 155, 161, 162, 166, 167, 168, 169, 170, 171, 173], "option": [4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 28, 30, 31, 32, 37, 39, 40, 42, 43, 47, 53, 54, 55, 58, 59, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 101, 104, 109, 115, 117, 124, 126, 135, 142, 145, 147, 148, 149, 153, 154, 155, 158, 159, 162, 164, 166, 167, 175, 177, 181, 182], "h": [4, 161], "t": [4, 5, 6, 91, 99, 115, 161, 162, 163, 164, 167, 169, 171, 172, 177, 178, 179, 181, 182, 183], "n": [4, 48, 55, 56, 61, 161, 169, 172, 173, 181], "number": [4, 6, 9, 16, 19, 21, 22, 25, 27, 28, 43, 47, 48, 49, 50, 51, 69, 70, 76, 99, 101, 102, 103, 105, 115, 116, 138, 141, 155, 158, 161, 162, 165, 167, 172, 175, 177, 178, 179, 181], "v": [4, 163, 183], "By": [4, 6, 23, 99, 155, 161, 167, 178, 179], "default": [4, 5, 6, 9, 22, 23, 30, 37, 55, 59, 64, 72, 74, 75, 76, 78, 81, 92, 94, 95, 99, 101, 115, 155, 159, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 181, 182, 183], "all": [4, 5, 6, 7, 9, 22, 28, 30, 38, 70, 72, 75, 76, 99, 100, 101, 108, 115, 147, 153, 154, 155, 158, 161, 162, 163, 165, 166, 167, 172, 175, 176, 178, 181, 182], "testcas": [4, 6, 9, 22, 35, 47, 54, 59, 75, 76, 82, 83, 101, 115, 118, 123, 128, 144, 162, 167, 178, 181], "example_compact": [4, 155, 161, 167], "1km": [4, 161, 178, 181], "test1": 4, "1": [4, 5, 6, 22, 49, 92, 93, 94, 95, 96, 97, 99, 111, 115, 131, 147, 153, 154, 158, 161, 163, 164, 167, 169, 172, 173, 175, 178, 179, 181], "test2": 4, "displai": [4, 6, 173], "path": [4, 6, 22, 23, 24, 30, 37, 39, 40, 42, 43, 46, 72, 75, 76, 81, 82, 83, 84, 155, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 181, 182], "directori": [4, 6, 22, 23, 24, 29, 30, 37, 42, 72, 73, 75, 76, 81, 82, 83, 96, 120, 130, 155, 158, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 181, 182], "help": [4, 161, 163, 166, 172, 176], "messag": [4, 6, 161, 164, 173], "test_expr": [4, 43], "flag": [4, 161, 162, 164, 165, 167, 176, 178, 181], "suppli": [4, 5, 6, 91, 161, 163], "substr": 4, "regular": [4, 43, 48, 55, 134, 137, 168, 171, 172, 173, 181], "express": [4, 43], "subset": 4, "think": 4, "search": [4, 43, 169], "within": [4, 5, 6, 19, 22, 23, 24, 28, 30, 41, 81, 82, 83, 158, 161, 163, 165, 167, 169, 172], "name": [4, 5, 6, 7, 9, 11, 12, 13, 15, 16, 22, 23, 30, 32, 34, 40, 42, 43, 47, 54, 59, 63, 65, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 90, 99, 101, 104, 106, 108, 115, 123, 138, 140, 143, 146, 161, 162, 163, 165, 167, 173, 178, 181, 183], "singl": [4, 6, 84, 161, 162, 165, 172, 179], "given": [4, 5, 6, 7, 9, 40, 49, 65, 68, 70, 74, 77, 79, 82, 83, 86, 99, 101, 125, 138, 150, 158, 161, 164, 166, 167, 178, 181, 183], "instead": [4, 6, 9, 74, 92, 96, 161, 162, 163, 168, 181, 183], "pass": [4, 6, 30, 83, 161, 162, 163, 165, 181], "similarli": [4, 6, 155, 161, 163, 172, 181], "compon": [4, 5, 9, 22, 23, 30, 34, 45, 72, 81, 85, 101, 107, 115, 133, 140, 165, 166, 167, 172, 174, 177, 182], "result": [4, 6, 40, 50, 82, 83, 96, 99, 111, 121, 128, 131, 158, 159, 161, 162, 163, 165, 167, 178, 179, 183], "verbos": [4, 43, 45, 161, 183], "about": [4, 5, 6, 22, 85, 99, 161, 162, 163, 167, 169, 178], "its": [4, 5, 6, 22, 32, 78, 161, 162, 163, 165, 167, 168, 179, 181, 182], "descript": [4, 5, 167, 176], "short": [4, 113, 161, 162, 178], "core": [4, 6, 9, 19, 21, 22, 23, 25, 27, 28, 30, 69, 70, 81, 99, 100, 101, 111, 113, 158, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 178, 181, 183], "subdirectori": [4, 6, 9, 22, 23, 30, 43, 47, 54, 59, 101, 115, 158, 161, 162, 181, 182], "step": [4, 5, 6, 9, 10, 11, 12, 13, 14, 19, 30, 31, 37, 47, 52, 54, 57, 59, 60, 69, 70, 72, 73, 74, 75, 76, 83, 99, 101, 102, 106, 108, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 132, 137, 139, 140, 141, 142, 143, 144, 157, 158, 159, 162, 165, 166, 167, 173, 175, 178, 182, 183], "tempat": 4, "subdir": [4, 9, 22, 30, 47, 54, 59, 101, 115, 161], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 30, 73, 83, 155, 161, 165, 166, 176], "must": [4, 5, 6, 9, 12, 13, 22, 24, 26, 81, 84, 99, 101, 157, 161, 163, 175, 182], "built": [4, 75, 76, 81, 155, 161, 163, 166, 167, 172, 181], "execut": [4, 6, 9, 75, 76, 81, 101, 155, 161, 163, 167, 168, 169, 170, 171, 172, 173, 181], "standalon": [4, 6, 95, 161, 163, 165, 166, 172], "mpa": [4, 6, 9, 15, 22, 23, 46, 63, 77, 79, 81, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 104, 133, 134, 146, 155, 156, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 181, 182, 183], "befor": [4, 6, 27, 161, 162, 163, 164, 169, 173, 175, 179, 181], "w": [4, 163, 165, 181], "num": 4, "f": [4, 6, 161, 162, 163, 167, 173, 181], "file": [4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 22, 23, 24, 27, 29, 30, 32, 37, 40, 42, 46, 62, 63, 64, 65, 72, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 88, 90, 91, 96, 101, 105, 106, 117, 120, 124, 130, 146, 155, 158, 162, 163, 164, 165, 166, 169, 172, 173, 175, 178, 179, 181, 182], "m": [4, 48, 55, 56, 61, 158, 161, 163, 168, 169, 170, 171, 173, 175, 178, 179, 181], "mach": [4, 22, 168, 169, 170, 171, 172, 173, 181], "p": [4, 163, 167, 181], "suite_nam": [4, 6, 74, 76, 81, 181], "specifi": [4, 6, 23, 157, 161, 163, 167, 173, 179, 181], "either": [4, 5, 6, 49, 99, 155, 161, 163, 165, 167, 175, 181], "onli": [4, 5, 6, 30, 96, 155, 157, 159, 161, 162, 166, 167, 169, 172, 173, 175, 177, 178, 179, 181], "time": [4, 5, 6, 22, 30, 84, 99, 106, 115, 125, 142, 157, 158, 159, 161, 162, 163, 164, 165, 167, 169, 173, 178, 181, 183], "wai": [4, 5, 22, 51, 56, 96, 99, 161, 162, 163, 164, 166, 172, 175], "altern": [4, 6, 181], "ani": [4, 5, 6, 18, 29, 75, 76, 120, 130, 161, 162, 163, 167, 172, 178, 181], "case_numb": 4, "multipl": [4, 5, 6, 156, 161, 162, 172, 178, 181], "separ": [4, 5, 6, 161, 165, 179, 181], "space": [4, 5, 6, 161, 163, 169, 172, 181], "requir": [4, 6, 9, 19, 22, 28, 101, 115, 155, 161, 162, 163, 164, 166, 167, 172, 175, 176, 181, 182], "few": [4, 9, 19, 22, 28, 70, 96, 101, 158, 161, 162, 167, 172, 178, 179], "basic": [4, 5, 167, 169, 172, 181], "piec": [4, 161], "inform": [4, 5, 6, 22, 83, 91, 161, 163, 167, 169, 176, 181], "abl": [4, 92, 93, 94, 95, 97, 99, 161, 163, 172, 181], "place": [4, 6, 161, 172, 179], "download": [4, 22, 23, 29, 120, 130, 162, 163, 167, 181, 183], "some": [4, 6, 30, 157, 158, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 176, 181, 182, 183], "data": [4, 6, 10, 23, 77, 79, 80, 84, 85, 91, 96, 147, 153, 154, 161, 163, 166, 167, 168, 169, 170, 171, 172, 181, 182, 183], "locat": [4, 6, 30, 75, 76, 81, 155, 161, 163, 165, 167, 169, 172, 175, 178, 179, 181], "where": [4, 5, 6, 22, 23, 30, 40, 72, 75, 76, 81, 99, 147, 150, 153, 154, 155, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 179, 181, 183], "There": [4, 147, 153, 154, 161, 162, 163, 164, 167, 181], "r": [4, 173, 179], "tell": [4, 163], "re": [4, 161, 162, 163, 165, 167, 172, 173, 179], "leav": [4, 161, 167], "unknown": [4, 96, 162, 172], "component_path": [4, 75, 76, 81, 155, 161, 167, 181], "absolut": [4, 6, 22, 23, 39, 75, 76, 81, 155, 161, 163, 181], "landic": [4, 6, 7, 23, 46, 81, 161, 163, 165, 166, 167, 181, 182, 183], "e3sm_submodul": [4, 155, 161, 163], "mali": [4, 96, 161, 163, 165, 167, 181, 182], "dev": [4, 5, 161, 162, 163, 166, 176, 181], "albani": [4, 92, 94, 95, 96, 161, 167, 168, 169, 170, 173, 181], "depend": [4, 6, 29, 120, 130, 159, 161, 163, 165, 167, 172, 173, 175, 179, 181, 182], "whether": [4, 6, 9, 14, 22, 23, 30, 31, 37, 40, 42, 43, 68, 73, 74, 75, 76, 81, 83, 84, 87, 99, 101, 102, 115, 116, 117, 124, 134, 137, 141, 142, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 178, 181], "omega": [4, 15, 85, 101, 104, 155, 161, 162, 163, 165, 176, 181], "config": [4, 5, 9, 10, 13, 14, 15, 22, 23, 30, 32, 40, 53, 55, 58, 68, 69, 70, 71, 72, 75, 76, 81, 83, 85, 86, 87, 88, 90, 91, 96, 101, 104, 117, 124, 135, 142, 145, 147, 148, 149, 153, 154, 155, 158, 159, 162, 163, 164, 166, 175, 181, 182], "point": [4, 36, 42, 155, 157, 161, 162, 163, 167, 172, 181], "much": [4, 6, 161], "config_fil": [4, 75, 76, 81], "work_dir": [4, 6, 22, 30, 72, 75, 76, 81, 82, 83, 161], "base": [4, 6, 7, 22, 23, 25, 30, 34, 37, 53, 58, 59, 75, 76, 81, 96, 103, 105, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 182], "": [4, 5, 6, 22, 23, 24, 30, 32, 37, 60, 73, 78, 81, 83, 99, 155, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 181], "recommend": [4, 5, 6, 161, 162, 163, 172, 178], "itself": [4, 5, 6, 22, 161, 163, 181], "temp": 4, "scratch": [4, 163, 169, 173, 181], "avoid": [4, 161], "confus": [4, 161, 162, 163], "output": [4, 5, 6, 7, 9, 22, 24, 29, 30, 37, 62, 63, 70, 74, 83, 99, 101, 106, 120, 130, 137, 146, 158, 165, 167, 173, 181, 183], "compar": [4, 6, 30, 75, 76, 81, 82, 83, 110, 112, 114, 122, 127, 132, 159, 161, 162, 165, 177, 178, 181, 183], "previou": [4, 6, 161, 177, 181, 183], "same": [4, 5, 6, 23, 30, 82, 83, 99, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 181, 182, 183], "baseline_dir": [4, 30, 75, 76, 81], "mani": [4, 6, 99, 161, 162, 163, 165, 166, 178, 179], "valid": [4, 30, 147, 148, 149, 150, 151, 152, 153, 154, 158, 162, 163, 166, 175, 178], "sure": [4, 6, 83, 96, 111, 121, 131, 155, 158, 161, 162, 163, 165, 167, 172, 173, 178, 179], "timer": [4, 30, 33, 82, 161, 162], "ha": [4, 6, 9, 19, 22, 24, 28, 30, 32, 71, 83, 92, 94, 95, 101, 115, 155, 158, 161, 162, 163, 164, 165, 167, 175, 178, 179, 181], "both": [4, 5, 6, 14, 83, 99, 117, 124, 158, 161, 163, 166, 167, 177], "custom": [4, 6, 39, 40, 75, 76, 81, 155, 161, 167, 173, 181], "order": [4, 6, 99, 161, 163, 181], "give": [4, 6, 161, 162, 163, 167, 181], "predefin": 4, "so": [4, 5, 6, 9, 21, 96, 99, 101, 147, 153, 154, 155, 158, 161, 162, 163, 165, 167, 172, 173, 175, 178, 179, 181, 183], "after": [4, 5, 22, 23, 24, 60, 96, 148, 149, 155, 161, 163, 167, 169, 173, 181], "c": [4, 76, 96, 161, 163, 168, 169, 170, 171, 172, 173, 177, 181, 183], "argument": [4, 5, 6, 20, 22, 70, 158, 161, 162, 163, 183], "resid": [4, 23], "test_suit": [4, 161], "build": [4, 6, 51, 56, 92, 93, 94, 95, 96, 97, 155, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173], "mpas_model": [4, 167], "overrid": [4, 6, 26, 27, 29, 32, 33, 39, 51, 54, 55, 56, 99, 120, 130, 161, 162, 167, 173, 178, 181], "mai": [4, 5, 6, 24, 27, 96, 99, 155, 157, 161, 163, 164, 165, 167, 173, 181, 182], "baselin": [4, 6, 30, 75, 76, 81, 82, 83, 110, 112, 114, 122, 127, 132, 136, 158, 161, 162, 165, 177, 181], "comparison": [4, 6, 30, 82, 83, 161, 167], "against": [4, 6, 83, 136, 158, 161, 177], "oppos": [4, 14, 102, 116, 117, 124, 134, 137, 141, 142], "task": [4, 6, 9, 16, 19, 21, 22, 27, 28, 70, 99, 101, 103, 105, 115, 158, 161, 162, 165, 166, 168, 169, 170, 171, 172, 173, 178], "parallel": [4, 9, 19, 22, 27, 28, 101, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 181, 182], "been": [4, 6, 22, 30, 32, 75, 76, 81, 92, 94, 95, 99, 137, 155, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 181], "no_step": 4, "wherea": [4, 6, 161, 177, 182], "typic": [4, 5, 6, 22, 74, 99, 161, 163, 165, 167, 172, 175, 181, 182], "clone": [4, 155, 161, 163, 181], "than": [4, 6, 22, 23, 28, 39, 96, 115, 158, 161, 162, 163, 164, 175, 178, 183], "just": [4, 9, 19, 22, 28, 43, 96, 101, 161, 162, 163, 165, 169, 173], "pickl": [4, 6, 181], "latter": [4, 30, 96], "conveni": [4, 147, 153, 154, 161, 165, 167, 181], "tab": [4, 181], "complet": [4, 6, 11, 12, 13, 181], "explicitli": [4, 5, 6, 99, 158, 161, 167, 181], "select": [4, 6, 84, 161, 163], "two": [4, 6, 121, 158, 159, 161, 162, 163, 178, 182], "edit": [4, 5, 83, 163, 181], "steps_to_run": [4, 6, 30, 74, 83, 161, 167], "test_cas": [4, 6, 9, 22, 34, 35, 47, 54, 59, 72, 75, 76, 82, 83, 101, 115, 118, 123, 128, 137, 140, 143, 161, 167, 181], "initial_st": [4, 6, 108, 157, 159, 161, 162, 167, 178], "full_run": [4, 122, 178], "restart_run": [4, 122, 178], "Or": [4, 167], "accomplish": [4, 162], "thing": [4, 92, 93, 94, 95, 96, 97, 99, 161, 162, 166], "skip": [4, 6, 83, 161, 183], "take": [4, 5, 6, 39, 161, 163, 183], "preced": [4, 39], "over": [4, 6, 39, 161, 162, 166, 175, 178, 181], "special": [4, 165], "databas": [4, 6, 7, 9, 22, 23, 101, 161, 172], "polaris_cach": [4, 6, 7, 161], "symlink": [4, 22, 23, 162, 163], "input": [4, 6, 17, 22, 23, 24, 29, 63, 120, 130, 158], "structur": [4, 6, 15, 104, 166], "without": [4, 6, 23, 161, 162, 163, 167, 171, 172, 181], "redund": [4, 147, 153, 154, 158], "stamp": 4, "revis": [4, 167], "remov": [4, 6, 74, 158, 161], "older": 4, "ones": [4, 147, 153, 154, 162], "version": [4, 6, 17, 39, 72, 82, 83, 155, 158, 161, 162, 163, 166, 167, 172, 173, 176, 178, 181], "A": [4, 5, 6, 7, 10, 12, 13, 15, 22, 23, 30, 34, 38, 39, 43, 47, 48, 51, 54, 55, 56, 59, 65, 70, 72, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 104, 107, 111, 115, 118, 121, 123, 128, 131, 133, 134, 137, 140, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 158, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 178, 179, 181], "aid": 4, "updat": [4, 5, 9, 11, 13, 18, 19, 27, 28, 78, 95, 103, 115, 155, 158, 164, 166, 181], "cached_fil": [4, 7, 161], "json": [4, 6, 7, 37, 161, 173], "anvil": [4, 96, 161, 167, 172, 181], "chrysali": [4, 96, 161, 167, 172, 181], "sinc": [4, 6, 91, 99, 158, 161, 162, 163, 178, 179], "copi": [4, 6, 23, 37, 75, 76, 81, 169, 181], "onto": [4, 163], "lcrc": [4, 6, 37, 161, 162, 167, 168, 170, 172, 181], "server": [4, 6, 23, 37, 161, 162, 167, 173], "whose": [4, 161], "global_ocean": [4, 6, 161, 162, 163, 167, 181, 183], "qu240": [4, 161, 162, 163, 167, 181, 183], "mesh": [4, 9, 22, 63, 84, 99, 101, 102, 103, 105, 113, 116, 118, 134, 137, 138, 140, 141, 143, 147, 153, 154, 157, 158, 161, 162, 163, 165, 166, 167, 175, 177, 178, 179, 181, 183], "phc": [4, 161, 175, 183], "init": [4, 19, 28, 155, 161, 162, 163, 167, 181, 183], "ocean_cached_fil": 4, "pr": [4, 181, 183], "look": [4, 5, 6, 161, 162, 167], "someth": [4, 5, 163], "culled_mesh": [4, 161], "nc": [4, 6, 161, 162], "210803": 4, "culled_graph": [4, 161], "info": [4, 6, 9, 16, 63, 101, 161], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 161], "date_str": [4, 37], "let": [4, 161, 163, 165, 167, 173], "string": [4, 6, 23, 161], "choos": [4, 161, 162, 168, 169, 170, 171, 173, 182], "todai": [4, 37], "dry_run": [4, 37], "saniti": 4, "check": [4, 6, 68, 83, 163, 165, 167, 169, 173, 181, 183], "print": [4, 6, 43, 83, 87, 161, 162, 183], "stdout": [4, 6, 22, 30, 161], "translat": [4, 15, 99, 104], "compass": [4, 46, 155, 161, 162, 165], "convert": [4, 6, 99, 161], "namelist": [4, 5, 9, 10, 11, 14, 15, 17, 18, 21, 29, 75, 76, 81, 90, 91, 101, 104, 105, 117, 120, 124, 130, 155, 158, 159, 162, 166, 167], "stream": [4, 5, 6, 9, 12, 14, 17, 29, 85, 90, 91, 105, 117, 120, 124, 130, 155, 157, 158, 162, 167], "yaml": [4, 9, 10, 13, 14, 15, 101, 104, 105, 117, 124, 158, 166, 169, 173], "e": [4, 5, 6, 15, 22, 32, 34, 46, 85, 96, 99, 104, 155, 161, 162, 163, 164, 165, 166, 167, 173, 175, 178, 181, 182, 183], "g": [4, 5, 6, 15, 22, 32, 34, 46, 85, 96, 99, 104, 155, 161, 162, 163, 164, 165, 166, 167, 175, 178, 181, 183], "forward": [4, 6, 22, 106, 113, 114, 123, 125, 127, 155, 161, 162, 167, 178, 179], "becaus": [4, 5, 6, 157, 161, 162, 163, 169, 171, 173, 181], "don": [4, 5, 6, 99, 161, 162, 163, 171, 181, 182], "format": [4, 5, 6, 85, 91, 161, 163, 167, 169], "note": [4, 5, 6, 173], "keyword": [4, 5, 6, 161], "top": [4, 6, 147, 148, 149, 150, 151, 152, 153, 154, 157, 161, 175], "ignor": 4, "get": [4, 5, 6, 9, 10, 11, 12, 13, 22, 30, 31, 38, 49, 69, 73, 96, 99, 101, 161, 162, 163, 165, 167, 175, 181], "pars": [4, 6, 10, 11, 12, 13, 65, 77, 79, 161], "valu": [4, 5, 6, 10, 15, 83, 84, 87, 104, 125, 158, 161, 162, 166, 167, 175, 178], "doesn": [4, 6, 91, 161, 167, 172, 181], "matter": 4, "usabl": 4, "sphinx": 5, "written": [5, 6, 22, 30, 84, 161], "myst": 5, "tip": [5, 163], "easi": [5, 23, 162], "start": [5, 6, 78, 157, 158, 161, 162, 166, 169, 172, 173, 176], "exist": [5, 6, 15, 22, 24, 42, 77, 79, 81, 104, 158, 161, 162, 163, 164, 172, 183], "tree": [5, 77, 79, 91], "group": [5, 6, 7, 8, 22, 30, 34, 35, 38, 107, 108, 111, 113, 115, 121, 125, 128, 131, 133, 134, 155, 158, 159, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183], "pull": [5, 162, 163, 167], "request": [5, 9, 16, 18, 101, 148, 149, 162, 163, 164, 167, 179], "guid": [5, 99, 158, 161, 162, 169, 172, 176], "baroclinic_channel": [5, 6, 155, 160, 161, 162, 165, 176, 180, 181, 182, 183], "label": [5, 172, 181], "prepend": 5, "them": [5, 6, 9, 21, 96, 101, 159, 161, 162, 163, 165, 171, 172, 177, 181, 182], "baroclin": [5, 34, 107, 108, 111, 113, 115, 118, 121, 125, 128, 131, 158, 161, 178], "channel": [5, 34, 107, 108, 111, 113, 115, 118, 121, 125, 128, 131, 158, 161, 164, 178], "And": [5, 161, 163], "becom": [5, 161], "who": [5, 163, 167, 173], "citat": 5, "defin": [5, 6, 22, 30, 54, 75, 76, 81, 96, 155, 157, 158, 159, 161, 162, 163, 165, 166, 167, 172, 175, 178, 179, 182, 183], "brief": 5, "overview": [5, 166, 169, 173], "comment": [5, 161, 167], "appli": [5, 6, 43, 157, 161], "common": [5, 6, 27, 30, 34, 158, 161, 162, 164, 165, 167, 172, 173, 181, 182, 183], "refer": [5, 22, 106, 125, 147, 150, 153, 154, 161, 162, 163, 165, 166, 175, 178, 181], "awar": [5, 96, 161, 172], "wish": [5, 6, 161, 163, 181, 183], "specif": [5, 6, 32, 96, 155, 161, 166, 167, 169, 172, 181, 183], "share": [5, 6, 99, 108, 155, 158, 161, 163, 166, 168, 169, 170, 171, 172, 173, 174, 178, 181], "function": [5, 6, 29, 48, 55, 96, 99, 108, 120, 130, 161, 162, 166, 179, 182], "public": [5, 6, 161, 167], "api": [5, 6, 166], "underscor": 5, "md": 5, "across": [5, 6, 158, 161, 162, 165, 174, 178], "ot": 5, "automat": [5, 6, 99, 161, 162, 163, 167, 168, 170, 171, 172, 173, 181], "python": [5, 6, 10, 27, 32, 161, 162, 163, 165, 166, 167, 172, 173, 181], "begin": [5, 6, 158, 161, 163, 166, 172, 179], "numpydoc": 5, "text": [5, 6, 179], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 99, 147, 149, 150, 151, 152, 153, 154, 155, 161, 167, 169, 173], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 68, 96, 99, 101, 102, 106, 116, 138, 141, 150, 151, 152, 158, 159, 161, 163, 169, 170, 172, 173, 181], "pressur": [5, 155, 167], "overli": 5, "ic": [5, 99, 155, 162, 163, 166, 167, 169, 175, 182], "shelf": [5, 99, 161, 162, 167, 175], "draft": [5, 175], "paramet": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25, 28, 30, 31, 34, 35, 37, 40, 42, 43, 46, 47, 49, 50, 51, 54, 59, 61, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 91, 99, 101, 102, 104, 106, 108, 111, 113, 115, 116, 117, 118, 121, 123, 124, 125, 128, 131, 134, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 178], "xarrai": [5, 84, 147, 148, 149, 150, 151, 152, 153, 154, 161], "dataarrai": [5, 148, 149, 150, 151, 152, 161], "sea": [5, 99, 149, 150, 151, 152, 155, 167, 175], "surfac": [5, 99, 149, 150, 151, 152, 155, 157, 167, 175, 178], "height": [5, 99, 149, 150, 151, 152, 155, 167, 175], "mask": [5, 147, 150, 153, 154, 161, 167, 175], "landicepressur": [5, 161], "deviat": 5, "float": [5, 6, 10, 47, 49, 50, 54, 83, 84, 108, 111, 113, 115, 118, 121, 125, 128, 131, 138, 161], "densiti": [5, 6, 99], "seawat": 5, "displac": 5, "land": [5, 99, 155, 166, 167, 175, 182], "landicedraft": 5, "equal": [5, 162], "initi": [5, 6, 22, 106, 110, 113, 118, 133, 143, 158, 159, 161, 162, 164, 165, 166, 167, 175, 177, 178, 179, 182], "entri": [5, 36, 66, 75, 76], "alwai": [5, 6, 39, 99, 155, 161, 162, 163, 167], "own": [5, 6, 22, 161, 162, 163, 165, 167, 179, 181, 182], "line": [5, 6, 20, 22, 70, 161, 162, 163, 166, 181], "type": [5, 10, 91, 161, 162, 163, 164, 165, 167, 178, 179, 183], "side": 5, "colon": 5, "doubl": [5, 99, 161], "back": [5, 169, 181], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 40, 50, 71, 155, 162, 163, 164, 167, 181], "arg": [5, 6, 22, 70, 161], "indic": [5, 6, 76, 83, 84, 150, 161, 164, 167, 175, 178], "On": [5, 6, 163, 172], "next": [5, 161, 175, 181], "indent": [5, 161], "obviou": [5, 161], "none": [5, 6, 9, 12, 13, 19, 22, 23, 28, 30, 37, 40, 43, 45, 47, 54, 59, 63, 72, 74, 76, 77, 81, 82, 83, 84, 86, 90, 101, 102, 115, 116, 141, 161, 175, 178], "replac": [5, 6, 10, 11, 12, 13, 14, 15, 30, 42, 65, 77, 86, 87, 104, 117, 124, 161, 162, 167, 181], "els": [5, 6, 161], "true": [5, 6, 9, 31, 40, 42, 83, 84, 87, 92, 93, 94, 95, 97, 99, 101, 157, 161, 163, 167, 168, 169, 170, 171, 172, 173, 181, 182], "further": [5, 161, 173], "necessari": [5, 161], "rais": [5, 6, 22, 24, 40, 42, 68, 83, 99, 161, 162], "belong": [6, 9, 19, 22, 28, 30, 34, 47, 54, 59, 101, 107, 108, 111, 113, 115, 118, 121, 123, 125, 128, 131, 133, 134, 137, 140, 143, 161, 162, 183], "command": [6, 20, 22, 27, 70, 72, 161, 162, 163, 165, 166, 169, 172, 173, 181], "while": [6, 157, 158, 161, 164, 165, 178], "meant": [6, 162, 167], "simplifi": 6, "verifi": [6, 161, 167], "list_cas": 6, "list_machin": [6, 162], "list_suit": 6, "anywher": [6, 163], "setup_cas": 6, "object": [6, 11, 12, 13, 65, 77, 82, 83, 85, 86, 90, 91, 161, 162], "later": [6, 9, 19, 22, 28, 39, 83, 101, 161, 167], "contrast": 6, "read": [6, 7, 11, 12, 13, 22, 30, 41, 64, 65, 85, 99, 157, 161], "properti": [6, 157, 161, 172, 179], "clean_cas": 6, "delet": [6, 162, 163, 164, 181], "constant": [6, 47, 54, 55, 99, 157, 178, 179], "setup_suit": 6, "clean_suit": 6, "write": [6, 85, 146, 161, 163], "out": [6, 67, 71, 84, 161, 162, 163, 167, 175, 181], "save": [6, 40, 61, 158, 161, 172, 177, 178], "dictionari": [6, 7, 10, 12, 13, 15, 30, 34, 39, 65, 72, 76, 77, 83, 85, 86, 87, 104, 161, 162], "target": [6, 9, 23, 42, 96, 99, 101, 158, 161], "minimum": [6, 84, 99, 101, 158, 161, 167, 175, 178, 179], "determin": [6, 23, 27, 30, 68, 91, 99, 105, 158, 159, 161, 175, 178, 179, 181], "maximum": [6, 83, 84, 167, 175, 178, 179], "product": 6, "ntask": [6, 9, 19, 22, 25, 28, 70, 99, 101, 115, 161], "cpus_per_task": [6, 22, 25, 28, 70, 161], "attribut": [6, 27], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 175, 178], "runtim": [6, 14, 27, 99, 102, 116, 117, 124, 141, 142], "min_task": [6, 9, 19, 22, 28, 70, 99, 101, 115, 161], "min_cpus_per_task": [6, 22, 28, 70, 161], "fewest": 6, "least": [6, 161, 163], "fail": [6, 9, 19, 22, 28, 30, 40, 83, 101, 115, 161, 166, 167, 178, 179], "run_test": [6, 161], "run_single_step": 6, "oper": [6, 29, 120, 130, 161, 183], "figur": [6, 161, 167], "cpu": [6, 96, 161, 181], "per": [6, 9, 19, 21, 22, 28, 70, 99, 101, 161, 167, 168, 169, 170, 171, 172, 173, 178, 179], "method": [6, 7, 9, 14, 15, 22, 26, 27, 30, 31, 32, 33, 34, 39, 46, 47, 51, 54, 55, 56, 59, 60, 85, 99, 100, 101, 102, 104, 107, 108, 111, 113, 115, 116, 117, 118, 121, 123, 124, 125, 128, 131, 133, 134, 137, 140, 141, 142, 143, 158, 161, 162], "wa": [6, 40, 82, 83, 96, 110, 112, 114, 122, 127, 132, 161, 162, 163, 164, 167, 175, 181], "retriev": [6, 164], "store": [6, 32, 99, 161, 181], "dure": [6, 14, 22, 30, 99, 102, 116, 117, 124, 141, 142, 161, 162, 167, 181, 182, 183], "txt": [6, 81, 161, 164], "case_output": 6, "individu": [6, 83, 161, 162, 172, 173, 181, 182], "involv": [6, 83, 161, 165], "implement": [6, 158, 159, 162, 178, 179], "termin": [6, 161, 163], "window": 6, "update_cach": 6, "_cached_fil": [6, 161], "map": [6, 7, 15, 54, 55, 84, 104, 163, 167], "origin": [6, 37, 163, 181], "enabl": [6, 161, 164, 167, 173], "consum": [6, 161, 183], "faster": [6, 163], "debug": [6, 92, 93, 94, 95, 97, 168, 169, 170, 171, 173], "parser": [6, 39], "here": [6, 158, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 181, 183], "mpas_tool": [6, 158, 161], "mpasconfigpars": 6, "polarisconfigpars": [6, 22, 30, 40, 68, 69, 71, 72, 145, 147, 148, 149, 153, 154], "certain": [6, 39, 161, 163, 167], "add_from_packag": [6, 162], "content": [6, 77, 79, 91, 161, 162, 181], "found": [6, 86, 162, 163, 166, 168, 169, 170, 171, 172, 173], "make_diagnostics_fil": 6, "makediagnosticsfil": 6, "self": [6, 32, 61, 99, 161, 162, 167], "cfg": [6, 32, 161, 162, 167, 181], "except": [6, 22, 24, 40, 83, 161, 162], "first": [6, 75, 76, 158, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 179, 181], "second": [6, 115, 161, 162, 178], "know": [6, 99, 161, 162, 163], "behavior": [6, 74, 161], "noth": [6, 164, 179], "being": [6, 14, 22, 30, 73, 76, 83, 102, 116, 117, 124, 141, 142, 161, 162, 163, 175], "test_group": [6, 7, 8, 22, 30, 108, 111, 113, 121, 125, 131, 134, 161], "fals": [6, 9, 22, 23, 31, 37, 43, 45, 73, 74, 76, 81, 83, 84, 99, 101, 157, 161, 167, 169, 171, 173, 178], "happen": [6, 83, 161, 179], "class": [6, 7, 9, 17, 22, 26, 30, 34, 39, 46, 47, 54, 59, 85, 99, 100, 101, 107, 108, 111, 113, 115, 118, 121, 123, 125, 128, 131, 133, 134, 137, 140, 143, 155, 158, 159, 161], "larg": [6, 161, 168], "those": [6, 30, 82, 83, 96, 161, 162, 163, 166, 179, 183], "configpars": [6, 70, 161], "getinteg": 6, "getfloat": [6, 161], "getboolean": [6, 161], "getlist": 6, "comma": [6, 179], "integ": 6, "boolean": [6, 84, 150], "etc": [6, 78, 81, 161, 178], "getexpress": 6, "tupl": 6, "rang": [6, 84], "numpi": [6, 48, 55, 56, 61, 99, 106, 145, 146, 161], "linspac": 6, "arang": 6, "arrai": [6, 48, 55, 56, 61, 99, 145, 146, 148, 149, 150, 151], "One": [6, 181, 183], "advantag": [6, 96, 162, 172], "track": [6, 9, 161, 163], "associ": [6, 147, 153, 154, 158, 161, 165], "strategi": 6, "stderr": [6, 22, 30, 161], "loggingcontext": 6, "check_cal": [6, 161], "most": [6, 27, 96, 155, 161, 162, 163, 165, 167, 172, 173, 175, 176, 182], "handl": [6, 161, 172, 179], "won": [6, 162, 167], "logger": [6, 22, 30, 46, 70, 161], "full": [6, 22, 74, 148, 149, 158, 159, 161, 163, 166, 172, 175, 177, 178, 179, 181], "although": 6, "captur": 6, "insid": [6, 161, 162], "good": [6, 22, 161, 163], "idea": 6, "explicit": [6, 162], "go": [6, 161, 162, 163, 173], "even": [6, 23, 39, 96, 161, 162, 163, 167, 172, 181], "import": [6, 161, 162, 163, 165], "subprocess": [6, 22, 70, 73, 161, 162, 164], "produc": [6, 22, 24, 37, 99, 111, 121, 131, 158, 159, 161, 162, 163, 181], "otherwis": [6, 161, 168, 169, 170, 171, 172, 173], "intent": 6, "desir": [6, 83, 99, 161, 167, 181], "trick": [6, 161], "direct": [6, 158, 161, 173, 178], "snippet": 6, "dome": [6, 46, 161, 165, 181, 182], "setup_mesh": [6, 161], "setupmesh": [6, 161], "create_landice_grid_from_generic_mpas_grid": 6, "py": [6, 46, 96, 161, 162, 163, 165, 167], "mpas_grid": [6, 161], "o": [6, 77, 79, 91, 162, 163, 167, 181], "landice_grid": [6, 161], "l": [6, 83, 173], "sever": [6, 161, 162, 163, 165, 166, 181, 183], "lot": [6, 99, 161, 162], "relat": [6, 99, 155, 158, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181], "intern": [6, 9, 30, 161, 163, 164], "lower": [6, 161, 178], "directli": [6, 22, 161, 162, 165, 166, 169], "aren": [6, 161, 162, 163, 178, 179, 183], "readm": [6, 161], "importlib": [6, 161], "resourc": [6, 19, 28, 41, 70, 102, 115, 116, 141, 158, 161, 178], "files_for_e3sm": [6, 161, 167], "str": [6, 7, 9, 10, 11, 12, 13, 16, 22, 23, 24, 30, 34, 37, 40, 42, 43, 47, 54, 59, 63, 65, 70, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 88, 90, 91, 101, 106, 108, 115, 123, 138, 140, 143, 146, 161], "did": [6, 83], "add_input_fil": [6, 161], "collect": [6, 34, 100, 161, 165], "though": [6, 22, 161, 162], "whenev": [6, 161], "flexibl": [6, 159, 161, 163], "care": [6, 161, 163], "No": [6, 166], "step_dir": 6, "database_root": [6, 161, 167, 168, 169, 170, 171, 172, 173, 181], "download_path": 6, "join": 6, "bathymetry_databas": [6, 161, 167], "remote_filenam": 6, "bedmachineantarctica_and_gebco_2019_0": 6, "05_degre": 6, "200128": 6, "local_filenam": 6, "topographi": [6, 150, 161, 175, 178, 182], "url": [6, 23, 40, 161, 164, 167], "web": [6, 161, 167], "anl": [6, 161, 167], "gov": [6, 161, 164, 167, 169, 173], "mpas_standalonedata": [6, 167, 172], "dest_path": [6, 40], "remot": [6, 23, 163], "bathymetri": [6, 161, 167], "global": [6, 34, 133, 134, 159, 161, 162, 165, 166, 167, 173, 181, 182], "quasiuniformsphericalmeshstep": [6, 159], "icosahedralmeshstep": [6, 159], "jigsaw": [6, 47, 51, 53, 54, 56, 58, 59, 134, 137, 161], "complex": [6, 55, 161, 162], "build_cell_width_lat_lon": [6, 54], "opt": [6, 59], "make_jigsaw_mesh": [6, 54], "icosahedr": [6, 47, 49, 134, 137, 179], "significantli": [6, 175], "uniform": [6, 54, 140, 158, 159, 161, 167, 178], "smooth": 6, "cell": [6, 47, 48, 49, 50, 54, 55, 56, 61, 99, 101, 102, 116, 138, 141, 147, 148, 149, 150, 153, 154, 158, 161, 175, 178, 179], "quasi": [6, 54, 167], "hand": [6, 162], "restrict": 6, "resolut": [6, 47, 50, 54, 55, 108, 111, 113, 115, 118, 121, 123, 125, 128, 131, 134, 137, 138, 140, 158, 159, 161, 167, 178, 182], "subdivis": [6, 47, 48, 49, 50, 51], "icosahedron": [6, 48, 49, 50, 51], "tabl": [6, 163, 172, 181], "approxim": [6, 47, 49, 50, 54, 99, 102, 116, 141, 163, 178, 179], "width": [6, 47, 48, 49, 54, 55, 56, 61, 178], "km": [6, 47, 48, 49, 50, 54, 55, 56, 61, 108, 111, 113, 115, 118, 121, 123, 125, 128, 131, 140, 158, 159, 167, 178, 179, 182], "5": [6, 49, 99, 125, 158, 161, 162, 164, 167, 178, 181], "240": [6, 49, 159, 167, 179], "6": [6, 49, 161, 176, 181], "120": [6, 49, 161, 179], "7": [6, 49, 173, 179, 181], "60": [6, 49, 159, 161, 175, 179], "8": [6, 49, 158, 161, 163, 167, 178, 179, 181], "30": [6, 49, 161, 173, 178, 179], "9": [6, 49, 181], "15": [6, 49, 158, 161, 178, 179, 181], "10": [6, 49, 155, 158, 161, 167, 172, 175, 178, 182], "11": [6, 49, 181], "3": [6, 49, 158, 161, 163, 164, 167, 172, 173, 175, 178, 179, 181], "12": [6, 49, 169], "13": [6, 49, 178], "94": [6, 49], "spherical_mesh": [6, 55], "cell_width": [6, 47, 48, 49, 50, 54, 55, 56, 61], "icosahedral_method": 6, "jigsaw_mesh_filenam": 6, "msh": 6, "jigsaw_geom_filenam": 6, "geom": 6, "jigsaw_jcfg_filenam": 6, "jig": 6, "jigsaw_hfun_filenam": 6, "spac": 6, "triangles_filenam": 6, "mesh_triangl": 6, "mpas_mesh_filenam": 6, "base_mesh": [6, 47, 54, 161], "plot": [6, 61, 84, 99, 128, 158, 159, 179, 182], "plot_cell_width": 6, "cell_width_filenam": [6, 61], "cellwidthvslatlon": 6, "cell_width_image_filenam": 6, "cellwidthglob": 6, "cell_width_colormap": 6, "3wbgy5": 6, "add_mesh_dens": 6, "vtk": 6, "convert_to_vtk": 6, "vtk_dir": 6, "base_mesh_vtk": 6, "extract": 6, "lat": [6, 48, 54, 55, 56, 61, 167], "lon": [6, 48, 54, 55, 56, 61, 167], "sphere": [6, 159, 179], "vtk_lat_lon": 6, "descend": [6, 99, 161, 162], "modelstep": [6, 99, 161], "update_pio": [6, 9, 101], "librari": [6, 92, 96, 163, 168, 169, 170, 171, 172, 173, 181], "make_graph": [6, 9, 101], "mpi": [6, 92, 95, 96, 101, 103, 105, 158, 161, 163, 164, 166, 168, 169, 170, 171, 173, 178, 181], "construct": [6, 100, 145, 147, 148, 149, 153, 154, 157, 161], "non": [6, 157, 181], "At": [6, 22, 30, 161], "set_model_resourc": 6, "thread": [6, 9, 19, 22, 27, 28, 30, 70, 101, 115, 131, 158, 161, 165, 167, 169, 173, 178], "openmp_thread": [6, 9, 19, 22, 28, 70, 101, 115, 161], "gpmeti": [6, 167], "divid": [6, 175], "partition_graph": [6, 9, 101], "circumst": 6, "wast": 6, "manual": [6, 30, 31, 161, 182], "update_namelist_pio": 6, "config_pio_num_iotask": [6, 161], "config_pio_strid": [6, 161], "node": [6, 9, 21, 22, 28, 68, 69, 70, 96, 101, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 181], "particularli": [6, 161, 164], "v1": [6, 175], "better": [6, 96, 181], "v2": [6, 167, 175], "littl": [6, 162, 163, 166], "differ": [6, 39, 51, 56, 83, 96, 99, 115, 125, 155, 158, 161, 162, 163, 165, 167, 169, 173, 178, 179], "feel": [6, 161], "safe": [6, 161, 163, 178], "runtime_setup": [6, 19, 28], "onc": [6, 158, 163, 167, 179, 181], "yourself": [6, 172], "simpli": [6, 39, 113, 161, 163, 175, 181, 183], "fact": [6, 22], "culler": 6, "cull": [6, 158, 161], "model_step": [6, 161], "make_graph_fil": [6, 161], "field": [6, 61, 63, 84, 147, 153, 154, 157, 158, 178, 179], "weight": [6, 63, 147, 153, 154, 175], "weight_field": [6, 63], "aspect": 6, "often": [6, 22, 161, 162, 165, 167, 182, 183], "analysi": [6, 99, 158, 161, 162, 165, 166, 167, 179, 182], "routin": 6, "viz": 6, "plot_horiz_field": 6, "patch": [6, 84], "style": [6, 99, 166], "x": [6, 48, 55, 56, 61, 84, 106, 161, 178], "y": [6, 84, 158, 161, 173, 178], "vertic": [6, 157, 158, 161, 167, 174, 176, 178], "detect": [6, 161, 167, 168, 170, 171, 172, 181], "center": [6, 161, 175, 178], "edg": [6, 84, 157], "polygon": 6, "character": 6, "accordingli": [6, 71], "d": [6, 84, 147, 153, 154, 157, 161], "ds_mesh": [6, 84], "normalveloc": [6, 112, 114, 122, 127, 132, 157, 158, 161], "final_normalveloc": 6, "t_index": [6, 84], "vmin": [6, 84], "max_veloc": 6, "vmax": [6, 84], "cmap": [6, 84], "cmo": 6, "balanc": 6, "show_patch_edg": [6, 84], "critic": 6, "compare_vari": [6, 161], "filename1": [6, 83, 161], "filename2": [6, 83], "simpl": [6, 162, 181], "temperatur": [6, 110, 112, 114, 122, 127, 132, 157, 158, 161, 178, 179], "salin": [6, 110, 112, 114, 122, 127, 132, 157, 158, 161, 178, 179], "layerthick": [6, 99, 110, 112, 114, 122, 127, 132, 147, 151, 152, 153, 154, 158, 161], "prognost": [6, 178], "slightli": [6, 161], "4proc": [6, 112, 178], "8proc": [6, 112, 178], "cannot": [6, 161], "alter": [6, 148, 149, 161, 166, 175, 178, 179], "miss": [6, 161, 167], "skip_if_step_not_run": [6, 83, 161], "forc": [6, 182], "possibli": [6, 161, 163], "failur": 6, "valueerror": [6, 68, 161, 162], "quiet": [6, 74, 83, 87], "report": 6, "threshold": [6, 179], "l1": [6, 83], "00000000000000e": 6, "00": [6, 161, 173, 181], "l2": [6, 83], "l_infin": 6, "linf": [6, 83], "home": [6, 163, 167, 169, 172, 173], "xylar": [6, 167, 172], "test_nightly_latest": 6, "10km": [6, 158, 161, 178, 181, 182, 183], "threads_test": [6, 181, 183], "1thread": [6, 132, 158, 178], "2thread": [6, 132, 178], "test_20210616": 6, "further_valid": 6, "add_output_fil": [6, 161], "disabl": [6, 157, 182], "check_output": [6, 83], "unlik": [6, 161], "zero": [6, 148, 149, 150, 151, 152, 157, 158], "l1_norm": [6, 83], "l2_norm": [6, 83], "linf_norm": [6, 83], "affect": [6, 161, 163], "nonzero": [6, 83], "easiest": [6, 163], "solut": [6, 95, 159, 161, 164], "clobber": 6, "qualit": [6, 161], "error": [6, 22, 30, 99, 138, 159, 161, 163, 166], "judgment": 6, "enough": [6, 158, 161, 162, 178, 179], "problem": [6, 161, 163, 164], "compare_tim": 6, "integr": [6, 125, 158, 161, 162, 178, 179], "rundir1": [6, 82], "92264": 6, "82317": 6, "percent": 6, "781019682649793": 6, "speedup": 6, "1208377370409515": 6, "hous": 7, "seaic": [7, 23, 161, 181], "dict": [7, 10, 12, 13, 15, 22, 30, 34, 65, 66, 72, 76, 77, 85, 86, 87, 104, 161], "kei": [7, 30, 34, 76, 161], "cach": [7, 9, 22, 23, 75, 76, 101, 166, 167, 172, 177, 181, 183], "__init__": [7, 9, 22, 30, 34, 39, 46, 47, 54, 59, 85, 100, 101, 107, 108, 111, 113, 115, 118, 121, 123, 125, 128, 131, 133, 134, 137, 140, 143, 161, 162, 165], "testgroup": [8, 22, 30, 161, 162], "max_memori": [9, 19, 22, 28, 101], "mesh_filenam": [9, 63, 101], "graph_filenam": [9, 63, 101], "graph": [9, 16, 18, 27, 63, 101, 158, 161, 167], "make_yaml": 9, "bool": [9, 10, 14, 22, 23, 30, 31, 37, 40, 42, 43, 73, 74, 75, 76, 81, 83, 87, 101, 102, 115, 116, 117, 124, 134, 137, 141, 142, 161], "pio": [9, 18, 21, 101, 158], "stride": [9, 21, 101], "consist": [9, 21, 101, 155, 163, 167, 178], "partit": [9, 18, 27, 63, 101, 158, 161, 167, 168, 169, 170, 171, 173, 181], "domain": [9, 16, 84, 99, 101, 106, 157, 161, 178, 179, 182], "taken": [9, 101, 159, 161, 173, 181], "model_config_data": 9, "add_yaml_fil": [9, 161], "add_namelist_fil": [9, 99, 161], "add_model_config_opt": [9, 161], "streams_data": 9, "add_streams_fil": [9, 99, 161], "int": [9, 10, 19, 22, 25, 28, 43, 47, 48, 49, 50, 51, 69, 70, 84, 101, 102, 115, 116, 134, 137, 138, 140, 141, 161], "ideal": [9, 19, 22, 28, 70, 99, 101, 115, 161, 162, 166, 167, 182], "too": [9, 19, 22, 28, 70, 101, 161, 162, 178, 179], "accommod": [9, 19, 22, 28, 70, 101], "fewer": [9, 19, 22, 28, 70, 101, 115, 161, 178, 181], "openmp": [9, 19, 22, 28, 70, 92, 94, 95, 101, 115, 161, 168, 169, 170, 171, 173], "amount": [9, 19, 22, 28, 101, 161, 174], "memori": [9, 19, 22, 28, 101, 161, 167], "mb": [9, 19, 22, 28, 101, 167], "placehold": [9, 19, 22, 28, 101, 161, 181], "template_replac": [12, 13, 161], "jinja2": [12, 13, 77, 161], "render": [12, 13, 77, 161], "at_setup": [14, 99, 102, 116, 117, 124, 141, 142], "setup": [14, 19, 22, 28, 30, 99, 102, 116, 117, 124, 141, 142, 158, 162, 163, 165, 166, 167, 179, 181, 182], "overridden": [15, 104, 161], "situat": [15, 104, 181], "diverg": [15, 104], "counterpart": [15, 99, 104], "nest": [15, 85, 87, 104], "graph_fil": 16, "parent": [17, 161], "done": [19, 28, 161, 181], "run_as_subprocess": [22, 161], "condit": [22, 110, 113, 118, 133, 143, 158, 159, 161, 162, 165, 166, 167, 177, 178, 182], "smallest": [22, 161, 165, 175, 182], "unit": [22, 161, 165, 178, 182], "term": [22, 165], "necessarili": [22, 23, 165], "input_data": 22, "combin": [22, 23, 30, 39, 72, 85, 161, 164, 167, 181], "machine_info": 22, "machineinfo": 22, "config_filenam": [22, 30, 161], "base_work_dir": [22, 30, 161], "log": [22, 30, 70, 83, 84, 161, 163, 166, 181], "log_filenam": [22, 30, 161], "redirect": [22, 161], "extern": [22, 155, 161, 176], "turn": [22, 38, 161, 164], "filenam": [23, 24, 67, 83, 86, 88, 161, 163], "database_compon": [23, 161], "work_dir_target": [23, 161], "come": [23, 161, 163, 168, 169, 170, 171, 172, 173, 176], "prefix": [23, 161, 163, 167], "root": [23, 138, 155, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 181], "suffix": [23, 76, 161], "_database_root": 23, "append": 23, "perhap": [24, 161], "available_cor": [25, 103], "constrain": [25, 102, 116, 141, 158], "total": [25, 69, 161, 162, 167, 169, 181], "everi": [26, 158, 161, 162, 164, 165, 178], "child": [26, 161, 162], "reason": [27, 161, 162, 183], "futur": [27, 161, 162, 165, 166, 167, 181, 182], "serial": [27, 161, 166, 181], "subtask": 28, "decomposit": [30, 111, 161, 165, 178], "restart": [30, 121, 123, 158, 161, 162, 165, 178], "stdout_logg": 30, "goe": [30, 161], "regardless": 30, "new_step_log_fil": 30, "whole": [30, 106, 161, 162, 181], "statu": 30, "run_by_default": [31, 161], "assum": [32, 77, 86, 161, 173, 178], "prior": [32, 161], "greenland": [34, 161, 165, 166, 182], "eismint2": 34, "step_path": 37, "variant": [37, 158, 161, 162, 163, 172, 175, 178, 179], "uncach": 37, "datestamp": 37, "yymmdd": [37, 167], "dry": [37, 161], "meta": 39, "proven": [39, 166, 167], "empti": [39, 161, 162, 163, 165], "link_nam": 42, "overwrit": 42, "stackoverflow": 42, "55742015": 42, "7728169": 42, "symbol": [42, 161], "fileexistserror": 42, "unless": [42, 74, 163], "try": [42, 161, 162, 163, 164, 167, 169, 173, 181], "isadirectoryerror": 42, "decomposition_test": [46, 161, 181], "decompositiontest": [46, 161], "noqa": [46, 137, 140, 143], "e501": [46, 137, 140, 143], "turquois": [46, 169], "usr": [46, 169, 181], "climat": [46, 168, 169, 170, 172, 181], "mhoffman": 46, "immedi": [46, 161, 163], "latitud": [48, 55, 179], "longitud": [48, 55, 56, 61, 179], "grid": [48, 55, 61, 99, 145, 146, 147, 148, 149, 150, 153, 154, 158, 161, 167, 178, 179], "ndarrai": [48, 55, 56, 61, 106, 145, 146], "degre": [48, 55, 56, 61, 167, 178], "length": [48, 55, 56, 61], "180": [48, 55, 56, 61, 179], "90": [48, 55, 56, 61, 161, 179], "static": [49, 50], "rule": 49, "thumb": 49, "achiev": [50, 161], "close": [50, 166, 179], "subclass": [51, 54, 55, 56, 60, 99], "jigsawpi": [59, 161], "jigsaw_jig_t": 59, "finish": 60, "meti": 63, "defaults_filenam": 64, "state": [68, 106, 157, 158, 159, 161], "queu": 68, "slurm": [68, 71, 166, 167, 168, 169, 170, 171, 173, 181], "interact": [68, 169, 172, 173, 181], "batch": [68, 169], "job": [68, 96, 163, 166, 168, 169, 170, 171, 173], "slurm_job_id": 68, "substep": 70, "cpus_per_nod": 71, "step_is_subprocess": 73, "is_test_cas": 74, "steps_not_to_run": 74, "progress": 74, "cached_step": 75, "copy_execut": [75, 76, 81, 181], "serv": [75, 76, 81, 161], "_all": [75, 76], "streams_filenam": 77, "lxml": [77, 79, 91], "etre": [77, 79, 91], "xml": [77, 79, 80, 91, 161, 165], "new_child": 78, "children": 78, "sub": 78, "var": [78, 161], "new_tre": 79, "out_filenam": [80, 146], "rundir2": 82, "norm": 83, "infin": 83, "toler": 83, "exclud": [83, 181], "field_nam": 84, "out_file_nam": 84, "titl": 84, "z_index": 84, "cmap_set_und": 84, "cmap_scal": 84, "linear": [84, 178], "horizont": [84, 99, 157, 158, 178], "planar": [84, 99, 157], "coordin": [84, 147, 153, 154, 174, 176, 178], "depth": [84, 99, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 167, 175, 178], "slice": 84, "dataset": [84, 147, 153, 154, 161], "fieldnam": 84, "present": [84, 163], "colorbar": 84, "visibl": 84, "nvertlevel": [84, 147, 153, 154, 161, 175], "ax": 84, "colormap": 84, "color": 84, "logarithm": 84, "classmethod": 86, "jinja": 86, "namelist_templ": 90, "polarisyaml": [90, 91], "processed_registry_filenam": 91, "registri": [91, 157], "steam": 91, "load_dev_polaris_0": [92, 93, 94, 95, 96, 97], "alpha": [92, 93, 94, 95, 96, 97], "1_anvil_intel_impi": [92, 96], "sh": [92, 93, 94, 95, 96, 97, 163, 164, 168, 169, 170, 171, 173, 181], "openmpi": [92, 96, 163, 166, 168, 170, 171, 181], "mvapich": [92, 96, 168], "impi": [92, 96, 168, 171], "ifort": [92, 94, 96, 168, 170], "ve": [92, 93, 94, 95, 97, 161, 163], "1_anvil_gnu_openmpi": 92, "gfortran": [92, 94, 95, 96, 163, 168, 170], "load": [93, 96, 97, 163, 166, 167, 168, 169, 170, 171, 172, 173], "1_chicoma": 93, "cpu_gnu_mpich": [93, 97], "crai": [93, 96, 97, 169, 173], "1_chrysalis_intel_openmpi": 94, "1_chrysalis_gnu_openmpi": 94, "yet": [95, 99, 161, 162], "again": [95, 155, 161, 163, 164, 181], "soon": [95, 181], "1_compy_intel_impi": 95, "1_compy_gnu_openmpi": 95, "attempt": [96, 166, 172], "particular": [96, 161, 163, 166, 169, 172, 181], "But": [96, 161, 162, 167, 172], "difficult": [96, 161, 172], "activ": [96, 172, 173, 181], "load_polaris_env": [96, 163, 181], "were": [96, 115, 161, 162, 165, 167, 171, 175], "right": [96, 99, 161, 163, 167, 175, 179, 181], "therefor": [96, 161, 165, 179], "gnu": [96, 163, 171, 172, 181], "lib": 96, "intel": [96, 172], "chicoma": [96, 172, 181], "mpich": [96, 163, 166, 169, 173, 181], "compi": [96, 171, 181], "pm": [96, 173, 181], "compymcnodefac": [96, 172], "perlmutt": [96, 169, 172, 181], "pretti": [96, 161, 162, 167], "forg": [96, 166, 181], "linux": [96, 163, 172], "configure_polaris_env": [96, 163, 164], "conda_path": [96, 163], "osx": [96, 172], "clang": [96, 163], "had": 96, "experi": [96, 161, 162, 175], "1_": 96, "1_pm": 97, "ever": [99, 162], "expand": [99, 175], "oceanmodelstep": 99, "decid": 99, "veri": [99, 161, 162, 163], "earli": [99, 176, 181], "stage": [99, 157, 161, 163, 176, 181], "map_yaml_to_namelist": 99, "compute_cell_count": [99, 158], "count": [99, 161], "heurist": 99, "exact": [99, 159, 162], "algorithm": [99, 115, 158, 161], "200": [99, 161, 178], "max": [99, 161, 179], "round": [99, 179], "cell_count": [99, 102, 116, 141], "goal_cells_per_cor": [99, 178, 179], "pinch": 99, "2000": [99, 161, 178], "max_cells_per_cor": [99, 178, 179], "seciton": 99, "control": [99, 161, 167, 178, 179, 181], "scale": [99, 181], "tri": [99, 162], "apport": 99, "precis": [99, 161], "adjust": [99, 133, 155, 161, 167], "caviti": [99, 162, 167, 175], "frazil": 99, "flux": [99, 157], "grid_1d": 99, "1d": [99, 145, 146, 147, 148, 149, 150, 151, 153, 154], "generate_1d_grid": 99, "vertical_grid": [99, 145, 147, 153, 154, 161, 167, 175, 178], "z": [99, 148, 149, 150, 151, 152, 153, 154, 178, 183], "star": [99, 152, 154, 178, 183], "init_vertical_coord": 99, "minlevelcel": [99, 147, 149, 150, 151, 152, 153, 154], "maxlevelcel": [99, 147, 148, 149, 150, 151, 152, 153, 154, 161], "cellmask": [99, 147, 150, 153, 154], "zmid": [99, 147, 153, 154], "restingthick": [99, 147, 152, 153, 154, 161], "bottomdepth": [99, 147, 148, 150, 151, 152, 153, 154, 161], "entir": [99, 178, 183], "petersen": [99, 163, 178], "et": [99, 175, 178, 179], "al": [99, 175, 178, 179], "2015": [99, 178], "int_": 99, "rho": 99, "left": [99, 175, 179], "dv": 99, "sort": [99, 161, 162, 163], "increas": [99, 162], "compute_rp": 99, "seri": [99, 128, 159, 161, 177], "csv": 99, "dynamic_ntask": 101, "dynam": [101, 133, 155, 161, 167], "estim": [103, 105], "initial_state_file_nam": 106, "output_fil": [106, 161], "rest": [106, 152, 175], "potenti": [106, 125, 161, 178], "energi": [106, 125, 161, 166, 178], "netcdf": [106, 167, 168, 169, 170, 171, 172, 173], "len": [106, 161], "superclass": [108, 158, 161], "baroclinicchannel": [108, 111, 113, 121, 125, 131, 158, 161], "nu": [115, 128, 158, 161], "run_time_step": 115, "resources_fix": 115, "shouldn": 115, "dt": [115, 178, 179], "btr_dt": [115, 178], "barotrop": [115, 178], "viscos": [115, 125, 128, 158, 161, 162, 178], "longer": [121, 158, 161, 178, 179, 183], "shorter": [121, 161], "rpe": [125, 128, 161, 178], "20": [125, 158, 161, 178], "dai": [125, 158, 159, 161, 178, 179], "less": [134, 137, 161, 175], "globalocean": [134, 161], "visual": [137, 161, 165, 166], "cosin": [137, 140, 143, 159, 179], "bell": [137, 140, 143, 159, 179], "cosinebel": [137, 140, 143, 159], "mesh_nam": [138, 140, 143], "rmsevalu": 138, "squar": [138, 159], "ncell": [138, 161], "posit": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 175], "layer": [145, 146, 147, 151, 152, 153, 154, 157, 158, 167, 175, 178], "meter": [145, 146], "bottom": [147, 148, 149, 150, 151, 152, 153, 154, 157, 167, 175, 178], "thick": [147, 151, 152, 153, 154, 158, 167, 175, 178], "stretch": [147, 153, 154, 175], "elev": [147, 153, 154, 175], "midpoint": [147, 153, 154], "far": [147, 153, 154, 162], "reftopdepth": [147, 150, 151, 153, 154], "down": [147, 148, 149, 150, 151, 152, 153, 154, 175], "ref": [147, 153, 154], "refzmid": [147, 153, 154, 161], "middl": [147, 153, 154], "refbottomdepth": [147, 148, 149, 150, 151, 153, 154, 161], "refinterfac": [147, 153, 154], "element": [147, 153, 154], "vertcoordmovementweight": [147, 153, 154, 161], "movement": [147, 153, 154], "consider": [147, 153, 154, 157], "sometim": [147, 153, 154, 161, 165], "partial": [148, 149, 175, 178], "seafloor": [148, 150, 151, 152, 175], "unstretch": 152, "shelv": [155, 167, 175], "ssh_adjust": [155, 161, 167], "iter": [155, 167], "compass_branch": 155, "default_input": [155, 161, 167], "ocean_model": [155, 163, 167], "submodul": [155, 161, 163, 181], "latest": [155, 163, 166, 176, 181], "master": 155, "frequent": 155, "guarante": [155, 161, 163], "compat": [155, 163, 164, 166], "verison": 155, "maintain": [155, 181], "recurs": [155, 162, 163, 181], "whichev": [155, 175], "global_converg": [155, 160, 161, 176, 177, 180], "design": [156, 161, 162, 166, 172], "minim": 157, "fcell": [157, 161], "fedg": [157, 161], "fvertex": [157, 161], "period": [157, 158, 161, 178], "free": [157, 167], "slip": 157, "solid": [157, 178, 179], "tangenti": 157, "enforc": [157, 163], "nonperiod": 157, "drag": 157, "mass": 157, "momentum": [157, 158], "scalar": 157, "rigid": 157, "veloc": [157, 158, 161, 163, 179, 181], "normal": [157, 161, 163, 172], "solv": [157, 164, 175], "mid": 157, "vari": [157, 159, 161, 164, 172, 175, 179], "consult": 157, "tidal_forc": 157, "eddi": [158, 178], "addition": [158, 168, 169, 170, 171, 173], "durat": [158, 161], "tracer": [158, 159, 161, 179], "diffus": 158, "baroclinicchanneltestcas": 158, "initialst": [158, 161], "planar_hex": [158, 161], "make_planar_hex_mesh": [158, 161], "50": [158, 161, 178], "along": [158, 161, 166], "constructor": 158, "config_mom_del2": [158, 161], "dynamic_model_config": 158, "prescrib": 158, "runtime_steup": 158, "minut": [158, 161, 178, 183], "decomptest": 158, "end": [158, 161, 162, 163, 165, 169, 179], "restarttest": [158, 161], "frequenc": 158, "threadstest": 158, "thread_test": 158, "rpetest": [158, 161], "intens": 158, "globalconverg": [159, 162], "converg": [159, 161, 166, 179], "studi": [159, 179], "globe": [159, 179], "advect": [159, 179], "qu": [159, 167, 177, 179], "ico": [159, 177, 179], "fix": [159, 161], "spheric": [159, 179], "24": [159, 179], "shape": [159, 179], "blob": 159, "around": [159, 167, 178, 179], "known": [159, 161], "rate": [159, 179], "distribut": 159, "dt_per_km": [159, 178, 179], "rmse": 159, "green": 161, "blue": [161, 168, 181], "orang": 161, "red": 161, "repositori": [161, 166, 181], "laid": 161, "shown": 161, "fig": 161, "among": [161, 163], "organiz": 161, "concept": [161, 162, 165, 182], "encompass": 161, "perspect": 161, "four": 161, "major": 161, "add_test_group": [161, 162], "variou": [161, 163], "univers": 161, "mix": 161, "super": [161, 162], "ice_shelf_2d": [161, 183], "iceshelf2d": 161, "ziso": [161, 175, 182, 183], "landice_model": [161, 163], "conceptu": [161, 162], "realist": [161, 166, 182], "2000m": [161, 181], "nx": [161, 178], "ny": [161, 178], "34": [161, 181], "dc": [161, 178], "halfar": 161, "cism": 161, "dome_typ": 161, "closest": 161, "put_origin_on_a_cel": 161, "hydrologi": 161, "hydro": [161, 182], "dome_viz": 161, "time_slic": 161, "save_imag": 161, "hide": 161, "hide_fig": 161, "add_test_cas": 161, "smoke_test": 161, "smoketest": 161, "restart_test": [161, 181, 183], "mesh_typ": 161, "variable_resolut": [161, 181], "explor": [161, 175], "talk": 161, "complic": [161, 162, 163], "res_param": 161, "16": [161, 167, 181], "10e3": 161, "4km": [161, 178, 181], "40": [161, 171], "126": 161, "4e3": 161, "160": 161, "500": [161, 167, 175], "1e3": 161, "unsupport": 161, "param": 161, "approach": [161, 162, 163, 164, 175], "held": 161, "fundament": 161, "usual": [161, 163, 181], "incorpor": 161, "deprec": 161, "until": [161, 181], "access": [161, 162, 163, 168, 172, 173], "velo_solv": 161, "sia": [161, 163], "fo": 161, "_": [161, 163], "add_step": 161, "runmodel": 161, "run_step": 161, "config_run_dur": 161, "0200": 161, "00_00": 161, "calcul": 161, "signific": 161, "howev": 161, "fine": 161, "recip": 161, "rpe_test": [161, 162, 181], "144": 161, "36": [161, 168, 172, 181], "enumer": 161, "rpe_test_": 161, "_nu_": 161, "deliber": 161, "chosen": 161, "fairli": [161, 162, 163], "demonstr": 161, "uniqu": 161, "clumsi": [161, 162], "rpe_test_1_nu_1": [161, 178], "rpe_test_2_nu_5": [161, 178], "could": [161, 162, 163], "filesfore3sm": 161, "configure_global_ocean": 161, "io": [161, 162, 166, 167, 176], "move": [161, 162], "now": [161, 163, 167, 172], "explain": [161, 162], "with_bgc": 161, "po4": 161, "no3": 161, "sio3": 161, "nh4": 161, "fe": [161, 169], "o2": 161, "dic": 161, "dic_alt_co2": 161, "alk": 161, "dofe": 161, "dop": 161, "dopr": 161, "donr": 161, "zooc": 161, "spchl": 161, "spc": 161, "spfe": 161, "spcaco3": 161, "diatchl": 161, "diatc": 161, "diatf": 161, "diatsi": 161, "diazchl": 161, "diazc": 161, "diazf": 161, "phaeochl": 161, "phaeoc": 161, "phaeof": 161, "dm": 161, "dmsp": 161, "prot": 161, "poli": 161, "lip": 161, "with_ice_shelf_cav": 161, "adjusted_init": 161, "simul": [161, 165, 177, 178, 181], "multiprocess": [161, 162, 167], "outsid": 161, "emploi": 161, "prevent": 161, "unwant": 161, "outer": 161, "inner": 161, "reli": 161, "dome_varres_grid": 161, "question": [161, 167], "neglig": 161, "meshstep": 161, "getint": 161, "mesh_cpus_per_task": 161, "mesh_min_cpus_per_task": 161, "previous": 161, "processor": [161, 178, 179], "readi": [161, 173], "write_netcdf": 161, "convers": 161, "generate_grid": 161, "dsmesh": 161, "nonperiodic_x": 161, "nonperiodic_i": 161, "graphinfofilenam": 161, "use_dist": [161, 178], "gradient_width_dist": [161, 178], "gradient_width_frac": [161, 178], "bottom_temperatur": [161, 178], "surface_temperatur": [161, 178], "temperature_differ": [161, 178], "coriolis_paramet": [161, 178], "bottom_depth": [161, 167, 175, 178], "vert_level": [161, 167, 175, 178], "ones_lik": 161, "xcell": 161, "ycell": 161, "xmin": 161, "min": [161, 178], "xmax": 161, "ymin": 161, "ymax": 161, "ymid": 161, "xperturbmin": 161, "xperturbmax": 161, "perturbationwidth": 161, "yoffset": 161, "sin": [161, 178], "pi": [161, 175, 179], "temp_vert": 161, "frac": [161, 175], "logical_and": 161, "transpos": 161, "3rd": 161, "crest": 161, "wave": [161, 178], "expand_dim": 161, "dim": 161, "axi": 161, "broadcast": 161, "zeros_lik": 161, "xedg": 161, "nedg": 161, "dtype": 161, "xvertex": 161, "commandlin": 161, "best": [161, 163], "harm": 161, "likewis": 161, "subsequ": [161, 165, 183], "arisen": 161, "omit": [161, 181], "problemat": 161, "easier": [161, 162, 163, 167, 181, 183], "broken": [161, 162], "open_dataset": 161, "isn": [161, 162, 178], "forwardstep": 161, "mesh_path": 161, "mesh_step": 161, "initial_state_target": 161, "forcing_data": 161, "entha_analy_result": 161, "mat": 161, "enthalpy_benchmark": 161, "ourselv": 161, "reduc": 161, "firewal": 161, "reus": [161, 162, 167, 181], "bedmachineantarctica_v2_and_gebco_2022_0": 161, "05_degree_20220729": 161, "slate": 161, "icepresent_qu60km_polar": 161, "practic": [161, 162, 163], "nearli": [161, 165, 166], "u": [161, 172, 173], "straightforward": 161, "commonli": [161, 165], "expens": 161, "workflow": [161, 163], "mechan": 161, "notat": 161, "That": [161, 162, 165, 181], "word": 161, "clariti": 161, "ff": 161, "quwisc240": [161, 162, 181, 183], "90c": 161, "91c": 161, "92": [161, 175], "91": 161, "sowisc12to60": [161, 181, 183], "performance_test": [161, 183], "effici": 161, "transfer": 161, "definit": 161, "yml": 161, "themselv": [161, 162, 166], "never": [161, 165], "hierarch": 161, "run_mod": 161, "config_ocean_run_mod": 161, "time_manag": 161, "0024_00": 161, "ale_vertical_grid": 161, "config_vert_coord_mov": 161, "impermeable_interfac": 161, "config_block_decomp_file_prefix": 161, "time_integr": 161, "config_time_integr": 161, "rk4": [161, 162, 183], "filename_templ": 161, "output_interv": 161, "0030_00": 161, "clobber_mod": 161, "truncat": 161, "reference_tim": 161, "0001": 161, "01": 161, "01_00": 161, "xtime": 161, "reflayerthick": 161, "kineticenergycel": 161, "relativevorticitycel": 161, "cosine_bel": 161, "substitut": 161, "config_write_output_on_startup": 161, "0000_00": 161, "config_use_mom_del2": 161, "config_implicit_bottom_drag_coeff": 161, "0e": 161, "config_use_cvmix_background": 161, "config_cvmix_background_diffus": 161, "config_cvmix_background_viscos": 161, "worri": 161, "togeth": [161, 165, 183], "seem": [161, 169, 173], "overkil": 161, "hmix": 161, "beforehand": 161, "update_namelist_at_runtim": 161, "update_yaml_at_runtim": 161, "pio_num_iotask": 161, "pio_strid": 161, "out_nam": 161, "bit": [161, 162, 165, 178, 181], "sophist": 161, "immutable_stream": 161, "var_struct": 161, "var_arrai": 161, "tag": [161, 166], "past": 161, "featur": [161, 162, 163, 165, 167, 178], "synchron": [161, 166], "equival": [161, 163, 168], "treat": [161, 162], "rst": 161, "d_": 161, "restart_interv": 161, "stream_replac": 161, "dynamic_adjust": [161, 167], "qu240dynamicadjust": 161, "interv": 161, "spin": 161, "update_streams_at_runtim": 161, "hour": [161, 169, 173, 181], "datetim": 161, "timedelta": 161, "3600": 161, "planar_converg": 161, "delta": [161, 175], "03d": 161, "02d": 161, "forgotten": 161, "philosophi": [161, 162], "context": 161, "namesak": 161, "256": [161, 169, 173], "128": [161, 169, 170, 173], "quicker": 161, "32": [161, 181], "exce": 161, "limit": [161, 163], "offer": 161, "benefit": [161, 166], "catch": 161, "bug": 161, "covereag": 161, "timestep": 161, "exhaust": 161, "recent": [161, 176], "merg": 161, "reach": 161, "steadi": 161, "encount": [161, 164], "wet": 161, "initial_condit": 162, "dig": [162, 167], "infrastructur": 162, "background": [162, 179], "behind": 162, "adher": 162, "strictli": 162, "pep8": [162, 163], "bot": [162, 175], "violat": 162, "pleas": [162, 163, 181], "consid": 162, "editor": 162, "pycharm": [162, 163], "spyder": 162, "linter": 162, "flake8": [162, 163], "discourag": 162, "reformat": 162, "autopep8": 162, "undesir": 162, "util": 162, "lint": 162, "standard": [162, 163, 169, 181], "wildcard": 162, "vim": 162, "plugin": 162, "id": [162, 163], "commit": [162, 163], "why": 162, "sound": 162, "subpackag": 162, "understand": [162, 167], "releas": [162, 166, 172, 176, 181], "our": [162, 181], "downstream": 162, "tutori": [162, 163], "clu": 162, "intro": 162, "docstr": [162, 166], "strip": 162, "mpas_ocean": 162, "hidden": 162, "shortcut": [162, 181], "referenc": 162, "ll": [162, 173], "mention": 162, "dot": 162, "charact": 162, "unix": [162, 166], "distinct": 162, "mayb": 162, "machine_config": 162, "endswith": 162, "splitext": 162, "exactli": [162, 163, 175], "renam": 162, "visa": 162, "versa": 162, "comfort": 162, "inherit": 162, "orient": 162, "program": [162, 167], "led": 162, "felt": 162, "contribut": 162, "hesit": 162, "predecessor": [162, 165, 166], "harder": 162, "outcom": 162, "augment": 162, "hope": 162, "dens": 162, "learn": 162, "curv": 162, "worth": 162, "skill": 162, "broadli": 162, "applic": [162, 163], "endeavor": 162, "readabl": 162, "manipul": 162, "get_available_cores_and_nod": 162, "theoret": 162, "dozen": 162, "split": 162, "theori": 162, "biogeochemistri": 162, "bash": [163, 164, 181], "ksh": 163, "mac": [163, 166], "csh": 163, "tcsh": 163, "temporarili": 163, "switch": [163, 167], "bin": [163, 173, 181], "obtain": [163, 169], "recogn": [163, 167, 181], "mambaforg": [163, 172, 181], "permiss": 163, "miniconda3": 163, "unifi": [163, 173], "anyon": 163, "caus": [163, 169, 173, 175], "person": [163, 164], "base_path_to_install_or_update_conda": 163, "with_albani": 163, "with_netlib_lapack": 163, "with_petsc": 163, "flavor": 163, "login": [163, 169, 173], "troubl": 163, "recognit": 163, "trilino": 163, "downsid": 163, "unneed": 163, "laptop": [163, 167], "workstat": 163, "deploy": 163, "shallow": 163, "hpc": [163, 169, 172], "touch": 163, "update_spack": 163, "reinstal": 163, "scorpio": [163, 172, 181], "esmf": [163, 181], "caution": 163, "deploi": [163, 168, 169, 170, 171, 172, 173], "load_": 163, "encod": 163, "load_dev_polaris_": 163, "env_nam": 163, "dev_polaris_": [163, 164], "safest": 163, "rerun": 163, "load_dev_polari": 163, "echo": 163, "rememb": 163, "recreat": [163, 164], "incorrect": 163, "unus": 163, "session": 163, "With": 163, "pip": 163, "substanti": 163, "risk": 163, "rare": 163, "correct": 163, "extra": 163, "wih": 163, "env_onli": 163, "mpas_make_target": [163, 181], "scientif": [163, 181], "_albani": 163, "column": [163, 181], "instruct": 163, "proce": 163, "workdir": [163, 181], "es3m": 163, "compli": 163, "convent": 163, "memor": 163, "guidelin": 163, "stai": 163, "complianc": 163, "checker": 163, "pre": 163, "isort": 163, "mypi": 163, "77": 163, "e302": 163, "blank": 163, "resolv": 163, "simpler": 163, "mkdir": 163, "mark": 163, "fetch": 163, "new_branch_nam": 163, "put": 163, "elsewher": 163, "disk": [163, 167, 169, 173], "respons": 163, "simplest": 163, "your_new_branch": 163, "checkout": 163, "suggest": 164, "geo": 164, "cartopi": 164, "14": 164, "np110py27_4": 164, "calledprocesserror": 164, "deploy_tmp": 164, "spec": [164, 173], "vpn": 164, "occur": 164, "site": 164, "shell": [164, 166], "honor": 164, "wide": 164, "coupl": [164, 166], "profil": 164, "spawn": 164, "usernam": [164, 169, 173], "proxy_en": 164, "export": 164, "all_proxi": 164, "proxyout": 164, "8080": 164, "no_proxi": 164, "localhost": [164, 167, 172, 173, 181], "127": 164, "proxy_dis": 164, "unset": 164, "anytim": 164, "fatal": 164, "mpi_init": 164, "stack": 164, "mpir_init_thread": 164, "159": 164, "mpid_init": 164, "164": 164, "mpidi_ch3_init": 164, "95": 164, "mpid_nem_init": 164, "314": 164, "mpid_nem_tcp_init": 164, "173": 164, "mpid_nem_tcp_get_business_card": 164, "395": 164, "getsockinterfaceaddr": 164, "369": 164, "pn2034311": 164, "errno": 164, "host": [164, 167, 172, 181], "mpirun": [164, 167, 168, 169, 170, 171, 172, 173, 181], "srun": [164, 167, 168, 169, 170, 171, 172, 173, 181], "parallel_execut": [164, 167, 168, 169, 170, 171, 172, 173, 181], "unexpect": 165, "plu": 165, "autom": 166, "exascal": 166, "earth": 166, "kept": 166, "sens": 166, "observ": 166, "region": [166, 167], "boundari": [166, 178, 182], "expert": 166, "team": 166, "launch": 166, "uncoupl": 166, "evolv": [166, 175], "quick": [166, 176, 183], "queue": 166, "beginn": 166, "worktre": 166, "advanc": 166, "mpas_to_yaml": 166, "organ": 166, "troubleshoot": 166, "proxi": 166, "lanl": [166, 167, 169], "gethostbynam": 166, "extens": 167, "single_nod": [167, 168, 169, 170, 171, 172, 173, 181], "multinod": [167, 181], "cores_per_nod": [167, 168, 169, 170, 171, 172, 173, 181], "hopefulli": 167, "explanatori": 167, "my_machin": 167, "fit": 167, "extend": 167, "interpol": 167, "gitconfig": 167, "enter": 167, "author": 167, "asai": 167, "davi": 167, "email": 167, "pull_request": 167, "28": 167, "address": 167, "metadata": 167, "customize_config_pars": 167, "server_base_url": 167, "inej": 167, "check_siz": 167, "ssl": 167, "certif": 167, "core_path": 167, "partition_execut": 167, "dask": 167, "netcdf4": 167, "netcdf4_class": 167, "netcdf3_64bit": 167, "netcdf3_class": 167, "engin": 167, "scipi": 167, "mesh_databas": 167, "initial_condition_databas": 167, "ocean_database_root": 167, "landice_database_root": 167, "mesh_cor": 167, "18": [167, 169], "mesh_min_cor": 167, "usag": [167, 169, 173], "mesh_max_memori": 167, "1000": [167, 175, 178], "mesh_max_disk": 167, "init_cor": 167, "init_min_cor": 167, "init_max_memori": 167, "init_max_disk": 167, "init_thread": 167, "forward_cor": 167, "forward_min_cor": 167, "forward_thread": 167, "forward_max_memori": 167, "forward_max_disk": 167, "add_metadata": 167, "ec": 167, "wc": 167, "mesh_descript": 167, "autodetect": 167, "bathy_descript": 167, "gebco": 167, "2022": 167, "bedmachin": 167, "antarctica": 167, "init_descript": 167, "e3sm_vers": 167, "increment": 167, "mesh_revis": 167, "finest": [167, 179], "min_r": 167, "coarsest": 167, "max_r": 167, "max_depth": 167, "creation_d": 167, "peopl": 167, "contact": 167, "creation": 167, "temperaturemax": 167, "statist": 167, "temperature_max": 167, "33": [167, 181], "diagnost": [167, 168, 169, 171, 172, 173, 181], "enable_ocean_initial_condit": 167, "enable_ocean_graph_partit": 167, "enable_seaice_initial_condit": 167, "scrip": 167, "enable_scrip": 167, "transect": 167, "onlin": 167, "member": 167, "offlin": 167, "enable_diagnostics_fil": 167, "coarser": [167, 179], "finer": 167, "comparisonlatresolut": 167, "comparisonlonresolut": 167, "antarct": 167, "polar": [167, 168, 170, 175], "stereograph": 167, "comparisonantarcticstereowidth": 167, "6000": [167, 175], "comparisonantarcticstereoresolut": 167, "arctic": 167, "comparisonarcticstereowidth": 167, "comparisonarcticstereoresolut": 167, "grid_typ": [167, 175, 178], "tanh_dz": 167, "3000": [167, 179], "min_layer_thick": [167, 175], "max_layer_thick": [167, 175], "retain": 167, "ecosystem": 168, "gain": 168, "confluenc": 168, "public_html": [168, 170, 172], "polaris_env": [168, 169, 170, 171, 172, 173], "soft": [168, 170, 172, 181], "mpi_intel": [168, 170, 171, 172], "mpi_gnu": [168, 169, 170, 171, 172, 173], "hdf5": [168, 169, 170, 171, 172, 173], "fortran": [168, 169, 170, 171, 172, 173], "pnetcdf": [168, 169, 170, 171, 172, 173], "use_e3sm_hdf5_netcdf": [168, 169, 170, 171, 172, 173], "cobalt": [168, 169, 170, 171, 172, 173], "account": [168, 169, 171, 172, 173, 181], "condo": [168, 181], "acm": [168, 181], "medium": 168, "qualiti": [168, 169, 171, 172, 173, 181], "servic": [168, 169, 171, 172, 173, 181], "qo": [168, 169, 171, 172, 173, 181], "acme_high": 168, "load_latest_polaris_intel_impi": [168, 171], "load_latest_polaris_gnu_openmpi": [168, 170, 181], "dst": 169, "calendar": 169, "network": 169, "introduct": 169, "platform": 169, "wtrw": 169, "ch": 169, "lustr": 169, "scratch4": 169, "scratch5": 169, "sacctmgr": 169, "assoc": 169, "cluster": 169, "45": 169, "my": 169, "sshare": 169, "grep": [169, 181], "sreport": 169, "accountutilizationbyus": 169, "2019": 169, "02": 169, "prioriti": 169, "yellow": 169, "chkhome": 169, "petabyt": 169, "df": 169, "bp": 169, "archiv": [169, 173], "hpss": [169, 173], "front": 169, "tn": 169, "storag": 169, "project_nam": 169, "salloc": [169, 172, 173], "account_nam": 169, "gpu": [169, 173], "hyperthread": [169, 173], "hang": [169, 173], "threads_per_cor": [169, 173], "modules_befor": [169, 173], "modules_aft": [169, 173], "shared_clim": [169, 181], "load_latest_polaris_gnu_mpich": [169, 173], "high": [170, 172], "load_latest_polaris_intel_openmpi": 170, "compyf": 171, "app": [171, 181], "pmi2": 171, "conda_env": [171, 181], "sai": 172, "submit": 172, "workload": 172, "sbatch": [172, 181], "squeue": 172, "my_usernam": [172, 173], "scancel": 172, "jobid": 172, "cancel": 172, "emtpi": 172, "probabl": 172, "three": 172, "mpi_mpich": [172, 181], "mpi_openmpi": [172, 181], "nompi": [172, 181], "p1": 173, "nersc": 173, "iri": 173, "filesystem": 173, "myquota": 173, "prjquota": 173, "projectid": 173, "m1795": 173, "hsi": 173, "htar": 173, "zstash": 173, "cf": [173, 181], "cdir": [173, 181], "constraint": [173, 181], "premium": 173, "cray_compil": 173, "8844": 173, "monik": 173, "browser": 173, "port": 173, "realli": 173, "nice": 173, "grab": 173, "logon": 173, "kernel": 173, "connect": 173, "myenv": 173, "ipykernel": 173, "kernelspec": 173, "u1": 173, "Be": 173, "interpret": 173, "argv": 173, "env": 173, "ipykernel_launch": 173, "connection_fil": 173, "display_nam": 173, "languag": 173, "100": 175, "2500": 175, "coord_typ": [175, 178], "partial_cell_typ": [175, 178], "min_pc_fract": [175, 178], "deepest": 175, "stewart": 175, "2017": 175, "z_2": 175, "z_1": 175, "mathrm": 175, "tanh": 175, "rightarrow": 175, "infti": 175, "z_k": 175, "z_0": 175, "z_": 175, "k": 175, "finder": 175, "n_z": 175, "h_": 175, "64": 175, "210": [175, 179], "scienc": 175, "hydrograph": 175, "climatologi": 175, "250": 175, "5500": 175, "renorm": 175, "51": 175, "221": 175, "63": 175, "floor": 175, "adjac": [175, 178], "flat": 175, "collaps": 175, "adcroft": 175, "campin": 175, "2004": 175, "absenc": 175, "squash": 175, "proport": [175, 178, 179], "watercolumn": 175, "press": 175, "depress": 175, "batymetri": 175, "repres": [175, 179], "stair": 175, "still": [176, 181], "month": 176, "year": 176, "websit": 176, "release_6": 176, "ilicak": 178, "2012": 178, "zonal": 178, "northern": 178, "southern": 178, "throughout": 178, "35": [178, 179, 181], "psu": 178, "cooler": 178, "half": 178, "north": 178, "gradient": 178, "halv": 178, "sinusoid": 178, "perturb": [178, 179], "meridion": 178, "warmer": 178, "distinguish": 178, "distanc": 178, "aim": [178, 179], "btr_dt_per_km": 178, "logic": 178, "08": 178, "500km": 178, "40e3": 178, "water": 178, "corioli": 178, "2e": 178, "hard": 178, "decompos": 178, "goal": 178, "break": 178, "mk": 178, "celsiu": 178, "spuriou": 178, "dissip": 178, "pop": 178, "mom": 178, "mitgcm": 178, "williamson": 179, "1992": 179, "sec": 179, "3a": 179, "skamarock": 179, "gassmann": 179, "flow": 179, "bodi": 179, "rotat": 179, "transport": 179, "psi": 179, "psi_0": 179, "co": 179, "ge": 179, "radiu": 179, "equatori": 179, "u_0": 179, "300": 179, "central": 179, "rad": 179, "lat_cent": 179, "lon_cent": 179, "14159265": 179, "2123666": 179, "6667": 179, "hill": 179, "psi0": 179, "transit": 179, "equat": 179, "vel_pd": 179, "qu_conv_thresh": 179, "warn": 179, "qu_conv_max": 179, "icos_conv_thresh": 179, "icos_conv_max": 179, "480": 179, "150": 179, "nearest": 179, "multipli": 179, "roughli": 179, "alloc": 179, "load_latest_polari": 181, "minu": 181, "create_polaris_load_script": 181, "load_polaris_1": 181, "0_mpich": 181, "wiki": 181, "circular_shelf": 181, "sia_smoke_test": 181, "sia_decomposition_test": 181, "sia_restart_test": 181, "fo_smoke_test": 181, "fo_decomposition_test": 181, "fo_restart_test": 181, "decomp_test": [181, 183], "37": 181, "38": 181, "17": 181, "210131_test_new_branch": 181, "fall": 181, "my_config": 181, "smaller": 181, "previous_workdir": 181, "paper": 181, "recompil": 181, "live": 181, "safer": 181, "preserv": 181, "test_subdir": 181, "whatev": 181, "job_script": 181, "wall": 181, "clock": 181, "accord": 181, "j": 181, "exclus": 181, "job_nam": 181, "wall_tim": 181, "fo_integr": [181, 183], "full_integr": [181, 183], "sia_integr": [181, 183], "cosine_bell_cached_init": [181, 183], "ec30to60": [181, 183], "ecwisc30to60": [181, 183], "qu240_for_e3sm": [181, 183], "quwisc240_for_e3sm": [181, 183], "wc14": [181, 183], "suitenam": 181, "radial": 182, "analyt": 182, "form": 182, "identifi": 182, "analysis_test": 183, "5km": 183, "20km": 183, "with_frazil": 183, "prohibit": 183}, "objects": {"polaris": [[7, 0, 1, "", "Component"], [9, 0, 1, "", "ModelStep"], [22, 0, 1, "", "Step"], [30, 0, 1, "", "TestCase"], [34, 0, 1, "", "TestGroup"]], "polaris.Component": [[7, 1, 1, "", "__init__"], [8, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "add_model_config_options"], [11, 1, 1, "", "add_namelist_file"], [12, 1, 1, "", "add_streams_file"], [13, 1, 1, "", "add_yaml_file"], [14, 1, 1, "", "dynamic_model_config"], [15, 1, 1, "", "map_yaml_to_namelist"], [16, 1, 1, "", "partition"], [17, 1, 1, "", "process_inputs_and_outputs"], [18, 1, 1, "", "runtime_setup"], [19, 1, 1, "", "set_model_resources"], [20, 1, 1, "", "setup"], [21, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[22, 1, 1, "", "__init__"], [23, 1, 1, "", "add_input_file"], [24, 1, 1, "", "add_output_file"], [25, 1, 1, "", "constrain_resources"], [26, 1, 1, "", "run"], [27, 1, 1, "", "runtime_setup"], [28, 1, 1, "", "set_resources"], [29, 1, 1, "", "setup"]], "polaris.TestCase": [[30, 1, 1, "", "__init__"], [31, 1, 1, "", "add_step"], [32, 1, 1, "", "configure"], [33, 1, 1, "", "validate"]], "polaris.TestGroup": [[34, 1, 1, "", "__init__"], [35, 1, 1, "", "add_test_case"]], "polaris.__main__": [[36, 2, 1, "", "main"]], "polaris.cache": [[37, 2, 1, "", "update_cache"]], "polaris.components": [[38, 2, 1, "", "get_components"]], "polaris.config": [[39, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[39, 1, 1, "", "__init__"]], "polaris.io": [[40, 2, 1, "", "download"], [41, 3, 0, "-", "imp_res"], [42, 2, 1, "", "symlink"]], "polaris.list": [[43, 2, 1, "", "list_cases"], [44, 2, 1, "", "list_machines"], [45, 2, 1, "", "list_suites"]], "polaris.logging": [[46, 2, 1, "", "log_method_call"]], "polaris.mesh": [[47, 0, 1, "", "IcosahedralMeshStep"], [54, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[47, 1, 1, "", "__init__"], [48, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [49, 1, 1, "", "get_cell_width"], [50, 1, 1, "", "get_subdivisions"], [51, 1, 1, "", "make_jigsaw_mesh"], [52, 1, 1, "", "run"], [53, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[54, 1, 1, "", "__init__"], [55, 1, 1, "", "build_cell_width_lat_lon"], [56, 1, 1, "", "make_jigsaw_mesh"], [57, 1, 1, "", "run"], [58, 1, 1, "", "setup"]], "polaris.mesh.spherical": [[59, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[59, 1, 1, "", "__init__"], [60, 1, 1, "", "run"], [61, 1, 1, "", "save_and_plot_cell_width"], [62, 1, 1, "", "setup"]], "polaris.model_step": [[63, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[64, 2, 1, "", "ingest"], [65, 2, 1, "", "parse_replacements"], [66, 2, 1, "", "replace"], [67, 2, 1, "", "write"]], "polaris.ocean": [[100, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[100, 1, 1, "", "__init__"]], "polaris.ocean.model": [[101, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[101, 1, 1, "", "__init__"], [102, 1, 1, "", "compute_cell_count"], [103, 1, 1, "", "constrain_resources"], [104, 1, 1, "", "map_yaml_to_namelist"], [105, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[106, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[107, 0, 1, "", "BaroclinicChannel"], [108, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[107, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[108, 1, 1, "", "__init__"], [109, 1, 1, "", "configure"], [110, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[111, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[113, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[115, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[115, 1, 1, "", "__init__"], [116, 1, 1, "", "compute_cell_count"], [117, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[118, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[118, 1, 1, "", "__init__"], [119, 1, 1, "", "run"], [120, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[121, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[123, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[123, 1, 1, "", "__init__"], [124, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[125, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "configure"], [127, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[128, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[128, 1, 1, "", "__init__"], [129, 1, 1, "", "run"], [130, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[131, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[131, 1, 1, "", "__init__"], [132, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence": [[133, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[133, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[134, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[134, 1, 1, "", "__init__"], [135, 1, 1, "", "configure"], [136, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[137, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "rmse"], [139, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[140, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "compute_cell_count"], [142, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[143, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[145, 2, 1, "", "generate_1d_grid"], [146, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[147, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[148, 2, 1, "", "alter_bottom_depth"], [149, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[150, 2, 1, "", "compute_min_max_level_cell"], [151, 2, 1, "", "compute_z_level_layer_thickness"], [152, 2, 1, "", "compute_z_level_resting_thickness"], [153, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[154, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[68, 2, 1, "", "check_parallel_system"], [69, 2, 1, "", "get_available_cores_and_nodes"], [70, 2, 1, "", "run_command"], [71, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[72, 2, 1, "", "write"]], "polaris.run.serial": [[73, 2, 1, "", "run_single_step"], [74, 2, 1, "", "run_tests"]], "polaris.setup": [[75, 2, 1, "", "setup_case"], [76, 2, 1, "", "setup_cases"]], "polaris.streams": [[77, 2, 1, "", "read"], [78, 2, 1, "", "update_defaults"], [79, 2, 1, "", "update_tree"], [80, 2, 1, "", "write"]], "polaris.suite": [[81, 2, 1, "", "setup_suite"]], "polaris.validate": [[82, 2, 1, "", "compare_timers"], [83, 2, 1, "", "compare_variables"]], "polaris.viz": [[84, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[85, 0, 1, "", "PolarisYaml"], [89, 2, 1, "", "main_mpas_to_yaml"], [90, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [91, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "read"], [87, 1, 1, "", "update"], [88, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5], "templat": [1, 161], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 6, 99, 161, 163, 168, 169, 170, 171, 172, 173, 178, 179], "same": 1, "implement": 1, "test": [1, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 167, 177, 180, 181, 182, 183], "valid": [1, 2, 6, 33, 82, 83, 110, 112, 114, 122, 127, 132, 136, 161, 181], "api": 2, "refer": [2, 98, 99], "compon": [2, 6, 7, 8, 38, 99, 155, 161, 162, 163, 176, 181], "polari": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 163, 166, 181], "framework": [2, 6, 98, 99, 158, 162, 174], "command": [2, 4], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 43, 44, 45], "setup": [2, 4, 6, 20, 29, 53, 58, 62, 75, 76, 105, 120, 130, 161], "suit": [2, 4, 6, 81, 161, 177, 181, 183], "run": [2, 6, 26, 52, 57, 60, 73, 74, 99, 119, 129, 139, 144, 161, 163, 181], "cach": [2, 4, 6, 37, 161], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 162], "testgroup": [2, 34, 35], "testcas": [2, 30, 31, 32, 33, 161], "step": [2, 22, 23, 24, 25, 26, 27, 28, 29, 161, 179], "modelstep": [2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "config": [2, 6, 39, 99, 161, 167, 168, 169, 170, 171, 172, 173, 178, 179], "io": [2, 6, 40, 41, 42], "log": [2, 6, 46], "mesh": [2, 6, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 159], "model_step": [2, 63], "namelist": [2, 6, 64, 65, 66, 67, 99, 161], "parallel": [2, 68, 69, 70, 71], "proven": [2, 6, 72], "stream": [2, 77, 78, 79, 80, 99, 161], "viz": [2, 84], "yaml": [2, 85, 86, 87, 88, 89, 90, 91, 99, 161], "build": [3, 163, 181], "serial": [4, 6, 73, 74], "docstr": 5, "modul": [6, 162, 163], "clean": 6, "file": [6, 99, 161, 167], "comment": 6, "symlink": [6, 42, 161], "download": [6, 40, 161], "spheric": [6, 59, 60, 61, 62], "model": [6, 99, 101, 102, 103, 104, 105, 156, 161, 181], "an": [6, 99, 161], "e3sm": [6, 99, 161, 163, 181], "partit": [6, 16], "updat": [6, 87, 161, 163], "pio": 6, "make": 6, "graph": 6, "visual": 6, "variabl": 6, "norm": 6, "timer": 6, "add_test_group": 8, "add_model_config_opt": 10, "add_namelist_fil": 11, "add_streams_fil": 12, "add_yaml_fil": 13, "dynamic_model_config": [14, 117, 124, 142], "map_yaml_to_namelist": [15, 104], "process_inputs_and_output": 17, "runtime_setup": [18, 27, 161], "set_model_resourc": 19, "update_namelist_pio": 21, "add_input_fil": 23, "add_output_fil": 24, "constrain_resourc": [25, 103, 161], "set_resourc": 28, "add_step": 31, "configur": [32, 109, 126, 135, 161, 164], "add_test_cas": 35, "__main__": 36, "main": 36, "update_cach": 37, "get_compon": 38, "polarisconfigpars": 39, "imp_r": 41, "list_cas": 43, "list_machin": 44, "list_suit": 45, "log_method_cal": 46, "icosahedralmeshstep": [47, 48, 49, 50, 51, 52, 53], "build_subdivisions_cell_width_lat_lon": 48, "get_cell_width": 49, "get_subdivis": 50, "make_jigsaw_mesh": [51, 56], "quasiuniformsphericalmeshstep": [54, 55, 56, 57, 58], "build_cell_width_lat_lon": 55, "sphericalbasestep": [59, 60, 61, 62], "save_and_plot_cell_width": 61, "make_graph_fil": 63, "ingest": 64, "parse_replac": 65, "replac": 66, "write": [67, 72, 80, 88], "check_parallel_system": 68, "get_available_cores_and_nod": 69, "run_command": 70, "set_cores_per_nod": 71, "run_single_step": 73, "run_test": 74, "setup_cas": [75, 76], "read": [77, 86], "update_default": 78, "update_tre": 79, "setup_suit": 81, "compare_tim": 82, "compare_vari": 83, "plot_horiz_field": 84, "polarisyaml": [85, 86, 87, 88], "main_mpas_to_yaml": 89, "mpas_namelist_and_streams_to_yaml": 90, "yaml_to_mpas_stream": 91, "anvil": [92, 168], "intel": [92, 94, 95, 168, 170, 171], "gnu": [92, 93, 94, 95, 97, 168, 169, 170, 173], "chicoma": [93, 169], "cpu": [93, 97, 169, 173], "chrysali": [94, 170], "compymcnodefac": [95, 171], "machin": [96, 163, 172, 181], "support": [96, 156, 163, 172, 181], "other": [96, 172, 181], "perlmutt": [97, 173], "pm": 97, "ocean": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 176], "group": [98, 160, 161, 162, 180], "baroclinic_channel": [98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 158, 178], "global_converg": [98, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 159, 179], "cosine_bel": [98, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 159, 177, 179], "oceanmodelstep": [98, 101, 102, 103, 104, 105], "potenti": [98, 99], "energi": [98, 99], "rpe": [98, 99, 106], "vertic": [98, 99, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 175], "coordin": [98, 99, 175], "v": 99, "map": 99, "from": [99, 161, 163, 172], "omega": 99, "mpa": [99, 157], "set": [99, 163, 181], "mpi": [99, 172], "resourc": 99, "rest": 99, "compute_cell_count": [102, 116, 141], "compute_rp": 106, "baroclinicchannel": 107, "baroclinicchanneltestcas": [108, 109, 110], "decomp_test": [111, 112, 158, 178], "decomptest": [111, 112], "default": [113, 114, 158, 178], "forward": [115, 116, 117, 140, 141, 142, 158, 159], "initial_st": [118, 119, 120, 158], "initialst": [118, 119, 120], "restart_test": [121, 122, 123, 124, 158, 178], "restarttest": [121, 122], "restart_step": [123, 124], "restartstep": [123, 124], "rpe_test": [125, 126, 127, 128, 129, 130, 158, 178], "rpetest": [125, 126, 127], "analysi": [128, 129, 130, 137, 138, 139, 159], "threads_test": [131, 132, 158], "threadstest": [131, 132], "globalconverg": 133, "cosinebel": [134, 135, 136], "rmse": 138, "init": [143, 144, 159], "grid_1d": [145, 146], "generate_1d_grid": 145, "write_1d_grid": 146, "init_vertical_coord": 147, "partial_cel": [148, 149], "alter_bottom_depth": 148, "alter_ssh": 149, "zlevel": [150, 151, 152, 153], "compute_min_max_level_cel": 150, "compute_z_level_layer_thick": 151, "compute_z_level_resting_thick": 152, "init_z_level_vertical_coord": 153, "zstar": 154, "init_z_star_vertical_coord": 154, "initi": 157, "condit": 157, "boundari": 157, "forc": 157, "baroclinic_channel_test_cas": 158, "type": [159, 175], "organ": 161, "directori": 161, "structur": 161, "case": [161, 162, 167, 181, 182], "attribut": 161, "constructor": 161, "input": 161, "output": 161, "copi": 161, "ad": 161, "runtim": 161, "pull": 161, "request": 161, "pr": 161, "nightli": 161, "overview": 162, "code": [162, 163], "style": [162, 163], "packag": 162, "share": 162, "within": 162, "quick": [163, 181], "start": [163, 181], "develop": [163, 166], "unix": 163, "shell": 163, "up": [163, 181], "repositori": 163, "beginn": 163, "conda": [163, 164, 172, 181], "environ": [163, 164, 181], "spack": [163, 181], "compil": 163, "system": 163, "albani": 163, "petsc": 163, "netlib": 163, "lapack": 163, "unknown": 163, "what": 163, "script": [163, 181], "doe": 163, "flag": 163, "activ": 163, "troubleshoot": [163, 164], "creat": 163, "onli": 163, "repo": 163, "worktre": 163, "advanc": 163, "user": [163, 166, 167, 181], "solver": 164, "error": 164, "when": 164, "proxi": 164, "lanl": 164, "mac": 164, "gethostbynam": 164, "fail": 164, "glossari": [165, 166], "": 166, "guid": 166, "compass": 166, "A": 167, "slurm": 172, "job": [172, 181], "queue": 172, "mpich": 172, "openmpi": 172, "No": 172, "forg": 172, "jupyt": 173, "notebook": 173, "remot": 173, "data": 173, "1d": 175, "grid": 175, "uniform": 175, "tanh_dz": 175, "60layerphc": 175, "100layere3smv1": 175, "3d": 175, "z": 175, "star": 175, "level": 175, "cosine_bell_cached_init": 177, "thread_test": 178, "resolut": 179, "time": 179, "core": 179, "i": 181, "yet": 181, "load": 181, "standalon": 181}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [161, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [159, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"]], "Docstrings": [[5, "docstrings"]], "Framework": [[6, "framework"], [174, "framework"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[6, "config-files"]], "Comments in config files": [[6, "comments-in-config-files"]], "Logging": [[6, "logging"]], "IO": [[6, "io"]], "Symlinks": [[6, "symlinks"]], "Download": [[6, "download"]], "Mesh": [[6, "mesh"]], "Spherical Meshes": [[6, "spherical-meshes"]], "Model": [[6, "model"], [99, "model"]], "Running an E3SM component": [[6, "running-an-e3sm-component"], [99, "running-an-e3sm-component"]], "Partitioning the mesh": [[6, "partitioning-the-mesh"]], "Updating PIO namelist options": [[6, "updating-pio-namelist-options"]], "Making a graph file": [[6, "making-a-graph-file"]], "Visualization": [[6, "visualization"]], "Validation": [[6, "validation"]], "Validating variables": [[6, "validating-variables"]], "Norms": [[6, "norms"]], "Validating timers": [[6, "validating-timers"]], "Provenance": [[6, "provenance"]], "polaris.Component": [[7, "polaris-component"]], "polaris.Component.add_test_group": [[8, "polaris-component-add-test-group"]], "polaris.ModelStep": [[9, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[10, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[11, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[12, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[13, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[14, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[15, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[16, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[17, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[18, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[19, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[20, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[21, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[22, "polaris-step"]], "polaris.Step.add_input_file": [[23, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[24, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[25, "polaris-step-constrain-resources"]], "polaris.Step.run": [[26, "polaris-step-run"]], "polaris.Step.runtime_setup": [[27, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[28, "polaris-step-set-resources"]], "polaris.Step.setup": [[29, "polaris-step-setup"]], "polaris.TestCase": [[30, "polaris-testcase"]], "polaris.TestCase.add_step": [[31, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[32, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[33, "polaris-testcase-validate"]], "polaris.TestGroup": [[34, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[35, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[36, "polaris-main-main"]], "polaris.cache.update_cache": [[37, "polaris-cache-update-cache"]], "polaris.components.get_components": [[38, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[39, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[40, "polaris-io-download"]], "polaris.io.imp_res": [[41, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[42, "polaris-io-symlink"]], "polaris.list.list_cases": [[43, "polaris-list-list-cases"]], "polaris.list.list_machines": [[44, "polaris-list-list-machines"]], "polaris.list.list_suites": [[45, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[46, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[47, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[48, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[49, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[50, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[51, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[52, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[53, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[54, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[55, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[56, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[57, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[58, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.spherical.SphericalBaseStep": [[59, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[60, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[61, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[62, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[63, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[64, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[65, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[66, "polaris-namelist-replace"]], "polaris.namelist.write": [[67, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[68, "polaris-parallel-check-parallel-system"]], "polaris.parallel.get_available_cores_and_nodes": [[69, "polaris-parallel-get-available-cores-and-nodes"]], "polaris.parallel.run_command": [[70, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[71, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[72, "polaris-provenance-write"]], "polaris.run.serial.run_single_step": [[73, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[74, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[75, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[76, "polaris-setup-setup-cases"]], "polaris.streams.read": [[77, "polaris-streams-read"]], "polaris.streams.update_defaults": [[78, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[79, "polaris-streams-update-tree"]], "polaris.streams.write": [[80, "polaris-streams-write"]], "polaris.suite.setup_suite": [[81, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[82, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[83, "polaris-validate-compare-variables"]], "polaris.viz.plot_horiz_field": [[84, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[85, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[86, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[87, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[88, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[89, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[90, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[91, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[92, "anvil"], [168, "anvil"]], "intel": [[92, "intel"], [94, "intel"], [95, "intel"]], "gnu": [[92, "gnu"], [94, "gnu"], [95, "gnu"]], "Chicoma": [[93, "chicoma"], [169, "chicoma"]], "chicoma-cpu, gnu": [[93, "chicoma-cpu-gnu"]], "Chrysalis": [[94, "chrysalis"], [170, "chrysalis"]], "CompyMcNodeFace": [[95, "compymcnodeface"], [171, "compymcnodeface"]], "Machines": [[96, "machines"], [172, "machines"]], "Supported Machines": [[96, "supported-machines"], [172, "supported-machines"]], "Other Machines": [[96, "other-machines"], [172, "other-machines"]], "Perlmutter": [[97, "perlmutter"], [173, "perlmutter"]], "pm-cpu, gnu": [[97, "pm-cpu-gnu"]], "ocean": [[98, "ocean"]], "Test Groups": [[98, "test-groups"], [161, "test-groups"]], "baroclinic_channel": [[98, "baroclinic-channel"], [158, "baroclinic-channel"], [178, "baroclinic-channel"]], "global_convergence": [[98, "global-convergence"], [159, "global-convergence"], [179, "global-convergence"]], "cosine_bell": [[98, "cosine-bell"], [159, "cosine-bell"], [179, "cosine-bell"]], "Ocean Framework": [[98, "ocean-framework"]], "OceanModelStep": [[98, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[98, "reference-potential-energy-rpe"]], "Vertical coordinates": [[98, "vertical-coordinates"]], "Ocean framework": [[99, "ocean-framework"]], "YAML files vs. namelists and streams": [[99, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[99, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[99, "setting-mpi-resources"]], "Model config options and streams": [[99, "model-config-options-and-streams"]], "Vertical coordinate": [[99, "vertical-coordinate"], [175, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[99, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[100, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[101, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[102, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[103, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[104, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[105, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[106, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[107, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[108, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure": [[109, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-configure"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[110, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[111, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[112, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[113, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[114, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[115, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[116, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[117, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[118, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[119, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[120, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[121, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[122, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[123, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[124, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[125, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[126, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[127, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[128, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[129, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[130, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[131, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[132, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[133, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[134, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[135, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[136, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[137, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[138, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[139, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[140, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[141, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[142, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[143, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[144, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[145, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[146, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[147, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[148, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[149, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[150, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[151, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[152, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[153, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[154, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[155, "ocean-component"], [176, "ocean-component"]], "Models": [[156, "models"]], "Supported Models": [[156, "supported-models"]], "MPAS-Ocean": [[157, "mpas-ocean"]], "Initial conditions": [[157, "initial-conditions"]], "Boundary conditions": [[157, "boundary-conditions"]], "Forcing": [[157, "forcing"]], "framework": [[158, "framework"]], "baroclinic_channel_test_case": [[158, "baroclinic-channel-test-case"]], "initial_state": [[158, "initial-state"]], "forward": [[158, "forward"], [159, "forward"]], "default": [[158, "default"], [178, "default"]], "decomp_test": [[158, "decomp-test"], [178, "decomp-test"]], "restart_test": [[158, "restart-test"], [178, "restart-test"]], "threads_test": [[158, "threads-test"]], "rpe_test": [[158, "rpe-test"], [178, "rpe-test"]], "mesh types": [[159, "mesh-types"]], "init": [[159, "init"]], "analysis": [[159, "analysis"]], "Test groups": [[160, "test-groups"], [180, "test-groups"]], "Organization of Tests": [[161, "organization-of-tests"]], "Directory structure": [[161, "directory-structure"]], "Test cases": [[161, "test-cases"]], "TestCase attributes": [[161, "testcase-attributes"]], "constructor": [[161, "constructor"], [161, "dev-step-init"]], "configure()": [[161, "configure"]], "run()": [[161, "run"], [161, "dev-step-run"]], "validate()": [[161, "validate"]], "Steps": [[161, "steps"]], "Step attributes": [[161, "step-attributes"]], "constrain_resources()": [[161, "constrain-resources"]], "setup()": [[161, "setup"]], "runtime_setup()": [[161, "runtime-setup"]], "inputs and outputs": [[161, "inputs-and-outputs"]], "Input files": [[161, "input-files"]], "Symlinks to input files": [[161, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[161, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[161, "downloading-and-symlinking-input-files"]], "Copying input files": [[161, "copying-input-files"]], "Output files": [[161, "output-files"]], "Cached output files": [[161, "cached-output-files"]], "Adding yaml, namelist and streams files": [[161, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[161, "adding-a-yaml-file"]], "Adding a namelist file": [[161, "adding-a-namelist-file"]], "Adding model config options": [[161, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[161, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[161, "adding-a-streams-file"]], "Adding a template streams file": [[161, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[161, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[161, "adding-e3sm-component-as-an-input"]], "Test Suites": [[161, "test-suites"], [181, "test-suites"], [183, "test-suites"]], "Pull-Request (PR) suite": [[161, "pull-request-pr-suite"]], "Nightly suite": [[161, "nightly-suite"]], "Overview": [[162, "overview"]], "Code Style": [[162, "code-style"]], "Packages and Modules": [[162, "packages-and-modules"]], "Packages": [[162, "packages"]], "Modules": [[162, "modules"]], "Classes": [[162, "classes"]], "Code sharing": [[162, "code-sharing"]], "\u2026in the polaris framework": [[162, "in-the-polaris-framework"]], "\u2026within a component": [[162, "within-a-component"]], "\u2026within a test group": [[162, "within-a-test-group"]], "\u2026within a test case": [[162, "within-a-test-case"]], "Quick Start for Developers": [[163, "quick-start-for-developers"]], "Unix Shell": [[163, "unix-shell"]], "Set up a polaris repository: for beginners": [[163, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[163, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[163, "supported-machines"]], "Environments with Albany": [[163, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[163, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[163, "unknown-machines"]], "What the script does": [[163, "what-the-script-does"]], "Optional flags": [[163, "optional-flags"]], "Activating the environment": [[163, "activating-the-environment"]], "Troubleshooting": [[163, "troubleshooting"], [164, "troubleshooting"]], "Creating/updating only the polaris environment": [[163, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[163, "building-e3sm-components"]], "Running polaris from the repo": [[163, "running-polaris-from-the-repo"]], "Code style for polaris": [[163, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[163, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[164, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[164, "proxy-on-lanl-macs"]], "gethostbyname failed": [[164, "gethostbyname-failed"]], "Glossary": [[165, "glossary"], [166, null]], "Polaris": [[166, "polaris"]], "User's guide": [[166, null]], "Developer's guide": [[166, null]], "Compass": [[166, "compass"]], "Config Files": [[167, "config-files"]], "A \u201cuser\u201d config file": [[167, "a-user-config-file"]], "Test-case config files": [[167, "test-case-config-files"]], "config options": [[168, "config-options"], [169, "config-options"], [170, "config-options"], [171, "config-options"], [172, "config-options"], [173, "config-options"], [178, "config-options"], [179, "config-options"]], "Intel on Anvil": [[168, "intel-on-anvil"]], "Gnu on Anvil": [[168, "gnu-on-anvil"]], "Chicoma-CPU": [[169, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[169, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[170, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[170, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[171, "intel-on-compymcnodeface"]], "Slurm job queueing": [[172, "slurm-job-queueing"]], "MPICH": [[172, "mpich"]], "OpenMPI": [[172, "openmpi"]], "No MPI from conda-forge": [[172, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[173, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[173, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[173, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[175, "d-grid-type"]], "uniform": [[175, "uniform"]], "tanh_dz": [[175, "tanh-dz"]], "60layerPHC": [[175, "layerphc"]], "100layerE3SMv1": [[175, "layere3smv1"]], "3D vertical coordinates": [[175, "d-vertical-coordinates"]], "z-star": [[175, "z-star"]], "z-level": [[175, "z-level"]], "Test suites": [[177, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[177, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "thread_test": [[178, "thread-test"]], "resolutions": [[179, "resolutions"]], "time step": [[179, "time-step"]], "cores": [[179, "cores"]], "Quick Start for Users": [[181, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[181, null]], "Loading polaris conda and spack environments": [[181, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[181, "e3sm-supported-machines"]], "Other machines": [[181, "other-machines"]], "Building supported E3SM components as standalone models": [[181, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[181, "setting-up-test-cases"]], "Running a test case": [[181, "running-a-test-case"]], "Running with a job script": [[181, "running-with-a-job-script"]], "Test Cases": [[182, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[7, "polaris.Component"]], "__init__() (polaris.component method)": [[7, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[8, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[9, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[9, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[10, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[11, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[12, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[13, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[14, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[15, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[16, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[17, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[18, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[19, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[20, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[21, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[22, "polaris.Step"]], "__init__() (polaris.step method)": [[22, "polaris.Step.__init__"]], "add_input_file() (polaris.step method)": [[23, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[24, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[25, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[26, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[27, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[28, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[29, "polaris.Step.setup"]], "testcase (class in polaris)": [[30, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[30, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[31, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[32, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[33, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[34, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[34, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[35, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[36, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[37, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[38, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[39, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[39, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[40, "polaris.io.download"]], "module": [[41, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[41, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[42, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[43, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[44, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[45, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[46, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[47, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[47, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[48, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[49, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[50, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[51, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[52, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[53, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[54, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[54, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[55, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[56, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[57, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[58, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[59, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[59, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[60, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[61, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[62, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[63, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[64, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[65, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[66, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[67, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[68, "polaris.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module polaris.parallel)": [[69, "polaris.parallel.get_available_cores_and_nodes"]], "run_command() (in module polaris.parallel)": [[70, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[71, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[72, "polaris.provenance.write"]], "run_single_step() (in module polaris.run.serial)": [[73, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[74, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[75, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[76, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[77, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[78, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[79, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[80, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[81, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[82, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[83, "polaris.validate.compare_variables"]], "plot_horiz_field() (in module polaris.viz)": [[84, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[85, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[85, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[86, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[87, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[88, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[89, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[90, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[91, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[100, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[100, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[101, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[101, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[102, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[103, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[104, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[105, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[106, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[107, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[107, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[108, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[108, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[109, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[110, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[111, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[111, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[112, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[113, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[113, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[114, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[115, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[115, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[116, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[117, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[118, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[118, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[119, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[120, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[121, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[121, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[122, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[123, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[123, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[124, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[125, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[125, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[126, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[127, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[128, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[128, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[129, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[130, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[131, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[131, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[132, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[133, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[133, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[134, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[134, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[135, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[136, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[137, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[137, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[138, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[139, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[140, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[140, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[141, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[142, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[143, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[143, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[144, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[145, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[146, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[147, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[148, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[149, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[150, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[151, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[152, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[153, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[154, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})