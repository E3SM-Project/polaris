Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/frontier", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/internal_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/frontier", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/internal_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/frontier.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.add_internal_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.internal_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/internal_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/frontier.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/internal_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks", "polaris.ocean.tasks.internal_wave.default.Default", "polaris.ocean.tasks.internal_wave.forward.Forward", "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.internal_wave.init.Init", "polaris.ocean.tasks.internal_wave.init.Init.run", "polaris.ocean.tasks.internal_wave.rpe.Rpe", "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis", "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run", "polaris.ocean.tasks.internal_wave.viz.Viz", "polaris.ocean.tasks.internal_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "Tasks", "inertial_gravity_wave", "internal_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Frontier", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "Tasks", "inertial gravity wave", "internal wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 19, 21, 38, 46, 49, 50, 53, 137, 140, 155, 164, 165, 172, 175, 180, 185, 198, 223, 229, 256, 289, 292, 293, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 308, 310, 312, 314, 327, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 353, 354, 355, 356, 357, 361, 363], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 67, 72, 74, 77, 80, 81, 91, 93, 95, 96, 102, 107, 108, 109, 110, 113, 114, 137, 140, 142, 148, 150, 152, 153, 155, 156, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 192, 193, 194, 196, 197, 198, 201, 204, 205, 206, 207, 208, 211, 216, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 237, 242, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 318, 319, 320, 322, 323, 327, 329, 330, 332, 339, 341, 362, 363], "templat": [0, 5, 6, 7, 28, 29, 30, 115, 126, 130, 137, 140, 150, 153, 168, 174, 226, 293, 294, 295, 301, 302, 330, 331, 332], "date": [1, 2, 5, 55, 289, 306, 312, 324, 332], "2023": [1, 17, 350, 352], "08": [1, 331, 344], "18": [1, 6, 332, 334], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 137, 331, 332, 338], "asai": [1, 332], "davi": [1, 332], "capabl": [1, 2, 6, 17, 137, 308, 311, 330, 331, 338, 357], "design": [1, 137, 290, 308, 310, 311, 330, 338, 344], "here": [1, 6, 9, 12, 14, 17, 18, 137, 140, 292, 299, 303, 304, 307, 308, 310, 311, 312, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 353, 354, 355, 356, 357, 361, 362], "abil": [1, 7, 345, 353], "across": [1, 6, 7, 9, 14, 19, 140, 292, 304, 308, 309, 310, 311, 312, 329, 331, 340, 344, 345, 346, 347, 353, 354], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 137, 140, 282, 283, 286, 304, 306, 308, 309, 310, 311, 312, 330, 331, 332, 338, 341, 346, 348, 351, 356, 357, 361, 362, 363], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 62, 66, 68, 71, 72, 75, 76, 77, 81, 92, 93, 95, 96, 102, 107, 110, 120, 132, 133, 134, 135, 136, 137, 138, 140, 142, 148, 152, 156, 159, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 184, 185, 188, 192, 194, 197, 198, 201, 206, 208, 209, 211, 219, 221, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 237, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 265, 266, 267, 269, 280, 282, 283, 286, 289, 292, 293, 294, 295, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 312, 323, 324, 328, 329, 330, 331, 332, 334, 337, 338, 339, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362], "document": [1, 3, 9, 14, 308, 311, 330, 332, 351, 357], "refer": [1, 7, 14, 38, 162, 175, 229, 272, 275, 278, 279, 308, 311, 312, 329, 330, 331, 341, 344, 348, 351, 357], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 34, 47, 107, 113, 114, 171, 179, 304, 305, 306, 308, 309, 310, 311, 312, 314, 331, 332, 338, 344, 346, 355, 356, 357, 360, 361], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 85, 96, 98, 105, 113, 114, 115, 119, 123, 126, 137, 140, 142, 143, 144, 145, 146, 147, 149, 156, 159, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 189, 202, 203, 212, 214, 215, 216, 223, 224, 227, 229, 231, 238, 240, 241, 242, 250, 256, 260, 281, 282, 283, 285, 286, 289, 291, 293, 295, 301, 302, 304, 305, 307, 308, 310, 312, 317, 318, 320, 322, 330, 331, 332, 334, 338, 341, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 63, 91, 92, 93, 137, 140, 156, 166, 224, 250, 292, 293, 294, 295, 296, 299, 301, 302, 308, 310, 311, 312, 331, 333, 334, 335, 336, 337, 339, 344, 357, 362], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 132, 134, 135, 137, 140, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 324, 327, 328, 329, 331, 332, 338, 342, 343, 344, 358, 362, 363], "main": [1, 3, 6, 7, 9, 14, 43, 137, 304, 305, 310, 311, 312, 331, 363], "motiv": 1, "behind": [1, 311], "comput": [1, 7, 13, 14, 15, 79, 137, 140, 143, 144, 147, 151, 154, 156, 157, 162, 167, 191, 195, 213, 217, 225, 239, 243, 275, 276, 277, 286, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 312, 334, 335, 338, 339, 344, 345, 346, 347, 348, 350, 352, 353, 354, 357], "expens": [1, 308, 309], "could": [1, 14, 17, 19, 137, 308, 309, 310, 311, 312, 331, 346], "time": [1, 6, 7, 8, 14, 18, 19, 38, 49, 61, 86, 123, 137, 145, 146, 152, 161, 162, 166, 175, 189, 192, 202, 203, 212, 214, 215, 224, 229, 238, 240, 241, 250, 280, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 308, 309, 310, 311, 312, 327, 328, 329, 332, 334, 337, 339, 357, 362], "order": [1, 5, 8, 13, 14, 140, 282, 283, 293, 294, 295, 296, 301, 302, 305, 308, 309, 312, 331, 345, 346, 347, 348, 352, 353, 354, 355, 357], "reflect": [1, 5, 312], "fact": [1, 14, 38, 137], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 135, 137, 140, 144, 145, 146, 160, 189, 202, 203, 212, 238, 260, 292, 299, 303, 304, 307, 308, 310, 311, 312, 327, 330, 331, 332, 334, 336, 337, 338, 339, 341, 346, 348, 357, 362], "present": [1, 50, 123, 312, 331], "new": [1, 2, 5, 20, 26, 38, 49, 57, 60, 67, 74, 80, 96, 116, 117, 140, 150, 153, 166, 173, 190, 204, 213, 216, 224, 239, 242, 250, 263, 272, 278, 279, 308, 310, 311, 312, 325, 328, 329, 330, 357], "success": [1, 2, 8, 48, 59, 289, 305, 324, 331, 332], "insofar": 1, "guarante": [1, 14, 137, 285, 289, 312, 324], "per": [1, 8, 14, 25, 35, 37, 38, 45, 92, 93, 122, 137, 140, 156, 281, 308, 331, 332, 333, 334, 335, 336, 337, 338, 339, 344, 345, 346, 347, 348, 350, 352, 353, 354, 356, 361], "slurm": [1, 61, 94, 137, 308, 330, 332, 333, 334, 335, 336, 337, 339, 357], "job": [1, 6, 137, 312, 330, 331, 333, 334, 335, 336, 337, 339], "role": 1, "clear": [1, 2, 311, 331], "should": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 62, 75, 113, 114, 121, 123, 132, 133, 134, 135, 136, 137, 138, 140, 142, 147, 159, 171, 179, 252, 254, 282, 283, 289, 304, 305, 306, 308, 309, 310, 312, 324, 325, 328, 329, 331, 332, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 361], "invoc": 1, "serial": [1, 44, 308, 310, 330, 331, 357], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 63, 67, 68, 71, 74, 75, 76, 80, 88, 91, 93, 95, 96, 97, 98, 99, 100, 104, 105, 106, 110, 113, 114, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 137, 140, 142, 150, 153, 159, 161, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 185, 188, 190, 193, 196, 198, 201, 204, 205, 207, 211, 216, 218, 220, 223, 224, 227, 229, 231, 233, 237, 242, 244, 246, 250, 252, 254, 256, 259, 261, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 292, 298, 299, 300, 303, 305, 308, 309, 310, 311, 312, 317, 318, 320, 322, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357, 360, 361], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 81, 109, 111, 116, 119, 137, 140, 196, 207, 268, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 324, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 350, 352, 353, 354, 356, 357, 358, 361], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 66, 67, 74, 80, 96, 125, 140, 141, 142, 150, 153, 156, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 185, 188, 190, 193, 196, 198, 201, 204, 205, 207, 209, 211, 213, 216, 218, 220, 223, 224, 227, 229, 231, 233, 235, 237, 239, 242, 244, 246, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 266, 268, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 306, 308, 310, 315, 317, 318, 320, 321, 322, 324, 327, 331], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 100, 106, 107, 142, 283, 298, 300, 331], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 40, 47, 49, 59, 109, 110, 121, 122, 137, 140, 171, 179, 185, 198, 252, 254, 256, 281, 282, 283, 285, 292, 293, 294, 295, 296, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 328, 329, 330, 331, 332, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363], "relat": [1, 6, 7, 11, 13, 14, 137, 140, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 308, 312, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 358], "inform": [1, 5, 7, 8, 38, 96, 120, 131, 213, 239, 308, 310, 312, 332, 334, 342, 357, 358], "belong": [1, 10, 12, 14, 25, 35, 38, 45, 49, 67, 74, 80, 96, 111, 140, 142, 150, 153, 156, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 185, 188, 190, 193, 196, 198, 201, 204, 205, 207, 209, 211, 216, 218, 220, 223, 224, 227, 229, 231, 233, 235, 237, 242, 244, 246, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 266, 268, 282, 283, 304, 305, 308, 310, 311, 317, 318, 320, 321, 322, 331, 362], "locat": [1, 5, 6, 9, 14, 19, 38, 50, 113, 114, 119, 140, 289, 308, 310, 312, 324, 329, 331, 332, 334, 338, 341, 344, 346, 351, 357], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 123, 140, 145, 146, 189, 202, 203, 212, 238, 272, 273, 274, 275, 276, 277, 278, 279, 286, 292, 304, 306, 307, 308, 310, 331, 332, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 361], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 62, 95, 111, 114, 119, 121, 123, 137, 140, 272, 275, 278, 279, 282, 283, 289, 305, 307, 308, 310, 312, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 353, 355, 356, 357, 361, 362], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 92, 93, 95, 114, 120, 137, 140, 141, 144, 145, 156, 166, 189, 202, 212, 224, 238, 250, 260, 272, 278, 279, 289, 292, 299, 304, 305, 306, 308, 309, 310, 311, 312, 315, 324, 329, 330, 331, 332, 338, 341, 342, 344, 345, 346, 347, 348, 353, 354, 356, 357, 358, 361, 363], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 92, 93, 137, 140, 156, 166, 224, 250, 286, 289, 304, 306, 308, 310, 312, 331, 332, 338, 341, 345, 346, 347, 348, 350, 352, 353, 354, 355, 357], "There": [1, 5, 6, 13, 272, 278, 279, 286, 303, 304, 306, 308, 311, 312, 328, 331, 332, 333, 334, 335, 336, 337, 339, 351, 357], "wai": [1, 5, 7, 13, 14, 38, 71, 76, 137, 140, 308, 310, 311, 312, 328, 330, 331, 338, 341, 348, 355], "list": [1, 2, 6, 7, 9, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 86, 92, 93, 110, 113, 114, 119, 120, 123, 140, 142, 150, 153, 162, 177, 181, 185, 188, 198, 201, 211, 220, 231, 235, 237, 246, 250, 256, 259, 261, 266, 308, 309, 310, 311, 312, 318, 329, 330, 331, 332, 334, 338, 339, 345, 346, 347, 353, 354, 357, 362, 363], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 111, 119, 120, 137, 140, 282, 283, 285, 292, 298, 300, 304, 305, 306, 308, 309, 310, 312, 325, 329, 331, 332, 334, 338, 355, 356, 361], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 63, 69, 70, 79, 108, 114, 131, 137, 140, 142, 147, 181, 182, 185, 198, 256, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 286, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 318, 319, 327, 329, 331, 332, 338, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357, 361, 362], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 120, 121, 137, 140, 272, 278, 279, 281, 282, 283, 286, 289, 298, 300, 303, 304, 305, 306, 308, 310, 311, 312, 331, 332, 338, 339, 341, 346, 348, 350, 351, 352, 356, 357, 361, 363], "find": [1, 6, 7, 15, 59, 70, 94, 137, 282, 283, 284, 289, 310, 311, 312, 328, 331, 332, 357], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 123, 137, 140, 289, 291, 293, 294, 295, 296, 301, 302, 303, 305, 308, 310, 311, 324, 327, 330, 331, 332, 334, 338, 339, 341, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 360], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 102, 107, 108, 116, 137, 140, 304, 305, 306, 308, 309, 310, 311, 312, 329, 331, 332, 333, 346, 357, 363], "would": [1, 2, 5, 9, 14, 18, 19, 25, 35, 38, 45, 50, 92, 93, 96, 137, 140, 156, 166, 224, 250, 292, 306, 308, 310, 311, 312, 328, 330, 331, 338, 341, 357], "ident": [1, 2, 5, 18, 164, 172, 180, 292, 299, 308, 309, 311, 317, 331, 344], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 82, 140, 305, 308, 310, 311, 331, 332], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 88, 91, 97, 98, 99, 100, 104, 105, 106, 115, 122, 123, 125, 140, 142, 150, 153, 162, 272, 278, 279, 280, 282, 283, 286, 305, 306, 307, 308, 311, 312, 314, 324, 325, 329, 331, 332, 338, 342, 356, 357, 358, 361], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 69, 137, 140, 289, 308, 312, 329, 331, 332, 341, 348, 355, 357], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 74, 110, 127, 137, 140, 161, 284, 289, 292, 304, 307, 308, 310, 311, 312, 325, 329, 330, 331, 332, 338, 341, 344, 345, 346, 347, 348, 353, 354, 357], "As": [1, 4, 5, 6, 9, 13, 18, 69, 140, 304, 308, 309, 310, 311, 312, 331, 332, 341, 345, 346, 347, 348, 353, 354, 355, 362], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 137, 140, 152, 168, 174, 192, 226, 292, 298, 299, 300, 303, 310, 311, 312, 329, 330, 331, 332, 345, 346, 347, 348, 353, 354, 357, 363], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 62, 63, 109, 110, 111, 112, 114, 137, 292, 307, 308, 310, 312, 329, 330, 331, 332, 333, 334, 335, 336, 339, 342, 344], "proce": [1, 312], "iter": [1, 289, 332], "through": [1, 2, 114, 140, 233, 311, 312, 325, 331, 351], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 60, 67, 69, 70, 98, 105, 115, 117, 121, 130, 137, 142, 147, 156, 193, 205, 264, 281, 282, 283, 284, 285, 287, 288, 292, 293, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 328, 329, 330, 332, 334, 338, 341, 348, 350, 354, 357, 362, 363], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 94, 102, 107, 123, 132, 134, 135, 137, 155, 156, 166, 224, 250, 282, 283, 289, 293, 294, 295, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 328, 329, 331, 332, 341, 344, 346, 350, 351, 355, 357], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 102, 114, 119, 132, 134, 135, 137, 140, 142, 149, 155, 188, 201, 211, 220, 237, 246, 259, 261, 266, 289, 305, 308, 310, 311, 312, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 357], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 140, 155, 161, 163, 171, 179, 187, 200, 210, 222, 236, 248, 258, 272, 278, 279, 304, 305, 310, 312, 316, 325, 330, 333, 334, 335, 336, 337, 339, 357], "initi": [1, 7, 8, 38, 123, 140, 145, 162, 164, 165, 169, 172, 175, 180, 189, 193, 202, 205, 212, 216, 218, 223, 227, 229, 238, 242, 244, 249, 251, 252, 254, 264, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 308, 310, 311, 321, 328, 329, 330, 332, 341, 343, 362, 363], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 63, 65, 109, 110, 114, 119, 120, 123, 137, 140, 156, 252, 254, 280, 281, 291, 304, 308, 310, 325, 331, 332, 334, 336, 337, 339, 344, 351], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 68, 75, 137, 140, 171, 179, 195, 304, 305, 308, 310, 311, 329, 330, 331, 341, 345, 346, 347, 348, 353, 354, 363], "skip": [1, 5, 8, 120, 362], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 60, 120, 121, 122, 123, 127, 132, 133, 134, 135, 136, 137, 138, 140, 156, 251, 281, 283, 291, 304, 308, 312, 331, 332, 333, 334, 335, 337, 338, 339, 344, 357, 363], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 60, 63, 109, 120, 137, 140, 159, 277, 282, 283, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 308, 310, 311, 312, 330, 331, 333, 334, 335, 336, 337, 339, 341, 344, 346, 348, 355, 357, 363], "complet": [1, 5, 8, 27, 28, 29, 107, 331, 357], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 60, 137, 140, 155, 250, 308, 310, 311, 312, 331, 332, 338, 341, 345, 346, 347, 353, 354, 357], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 140, 150, 153, 166, 190, 204, 216, 224, 242, 250, 263, 281, 285, 292, 298, 299, 300, 308, 309, 310, 311, 312, 330, 331, 341], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 137, 156, 308, 311, 312, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 357, 363], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 68, 69, 71, 84, 123, 132, 133, 134, 135, 136, 137, 138, 140, 156, 160, 164, 172, 180, 272, 278, 279, 281, 282, 283, 284, 286, 289, 292, 299, 304, 308, 310, 311, 312, 317, 324, 329, 330, 332, 338, 344, 345, 346, 347, 353, 354, 357, 362], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 60, 66, 83, 84, 87, 88, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 142, 145, 146, 147, 149, 150, 153, 156, 160, 162, 168, 171, 174, 179, 189, 202, 203, 212, 226, 238, 271, 281, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 309, 310, 311, 312, 318, 324, 325, 327, 328, 329, 330, 334, 337, 338, 339, 341, 344, 345, 346, 347, 348, 351, 353, 354, 356, 357, 360, 361, 363], "mode": [1, 5, 14, 305, 312, 329, 330, 331, 357], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 137, 140, 164, 172, 180, 289, 292, 308, 311, 312, 317, 324, 329, 331, 332, 338, 339, 344, 345, 346, 347, 353, 354], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 88, 91, 95, 114, 115, 125, 126, 127, 140, 150, 153, 159, 308, 310, 311, 331, 346], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 37, 137, 140, 156, 293, 294, 295, 296, 301, 302, 305, 306, 308, 310, 311, 312, 329, 331, 336, 338, 343, 357, 363], "constructor": [1, 9, 14, 140, 292, 298, 299, 300, 304, 331], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 92, 93, 103, 121, 292, 299, 305, 308, 310, 311, 312, 331, 356, 361, 362], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 60, 88, 115, 126, 127, 137, 140, 150, 153, 159, 168, 174, 226, 310, 311, 331, 332, 357], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 62, 65, 67, 74, 80, 95, 96, 111, 113, 119, 125, 136, 137, 138, 142, 150, 153, 155, 156, 163, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 185, 187, 188, 190, 193, 196, 198, 200, 201, 204, 205, 207, 209, 210, 211, 216, 218, 220, 222, 223, 224, 227, 229, 231, 233, 235, 236, 237, 242, 244, 246, 248, 249, 250, 251, 252, 254, 256, 258, 259, 261, 263, 264, 266, 268, 304, 306, 307, 308, 309, 310, 314, 315, 316, 317, 318, 320, 321, 322, 325, 329, 330, 331, 332, 338, 340, 343, 362, 363], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 67, 74, 80, 96, 140, 142, 150, 153, 156, 166, 188, 190, 193, 196, 201, 204, 205, 207, 211, 216, 224, 237, 242, 250, 259, 261, 263, 264, 266, 268, 308, 310, 318, 331], "now": [1, 6, 137, 308, 312, 331, 332, 338], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 113, 114, 119, 120, 289, 305, 308, 310, 311, 312, 318, 324, 329, 331, 344, 348, 351, 357, 363], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 137, 140, 292, 308, 312, 328, 331, 341], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 137, 166, 224, 250, 292, 308, 309, 311, 312, 328, 331, 341, 344], "parent": [1, 33, 140, 293, 294, 295, 296, 298, 300, 301, 302, 304, 305, 308], "resid": [1, 5, 9, 40, 140, 142, 188, 201, 211, 237, 259, 261, 266, 306, 308, 310], "insid": [1, 12, 306, 308, 311, 345, 346, 347, 353, 354], "situat": [1, 17, 31, 159, 312, 331, 357], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 38, 39, 40, 120, 289, 292, 299, 304, 306, 308, 310, 311, 312, 329, 331, 332, 344, 357, 362, 363], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 140, 260, 289, 297, 305, 310, 331, 346, 354, 356, 361, 362], "with_viz": [1, 293, 294, 295, 296, 301, 302, 310, 345, 346, 347, 348, 353, 354], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 73, 78, 80, 111, 113, 114, 119, 123, 137, 140, 149, 155, 158, 160, 190, 193, 196, 204, 205, 207, 263, 264, 268, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 307, 308, 310, 311, 312, 324, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 347, 348, 353, 354, 363], "mesh": [1, 5, 7, 10, 17, 25, 38, 84, 85, 96, 98, 105, 122, 123, 142, 143, 145, 146, 150, 151, 153, 154, 156, 157, 158, 160, 162, 165, 167, 169, 185, 188, 189, 190, 191, 193, 196, 198, 201, 202, 203, 204, 205, 207, 211, 212, 213, 216, 217, 218, 220, 225, 227, 237, 238, 239, 242, 243, 244, 246, 249, 251, 252, 256, 259, 261, 263, 264, 266, 268, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 308, 310, 311, 312, 320, 321, 329, 330, 332, 341, 343, 357, 362], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 140, 142, 150, 153, 164, 165, 172, 175, 180, 190, 196, 204, 207, 216, 223, 229, 242, 263, 268, 289, 291, 305, 308, 310, 311, 312, 324, 332, 344, 346, 350, 352, 357], "forward": [1, 5, 7, 9, 14, 38, 140, 142, 150, 153, 162, 165, 173, 175, 196, 207, 229, 249, 251, 268, 289, 305, 308, 310, 311, 321, 324, 332, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 361], "resolut": [1, 9, 13, 14, 17, 67, 70, 74, 75, 79, 97, 101, 104, 140, 142, 143, 147, 149, 150, 153, 155, 164, 165, 166, 169, 172, 173, 175, 177, 180, 185, 188, 190, 198, 201, 204, 211, 216, 218, 220, 229, 235, 237, 242, 244, 246, 256, 259, 261, 263, 266, 282, 283, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 332, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 361, 363], "singl": [1, 5, 8, 9, 19, 123, 137, 248, 249, 251, 252, 254, 303, 308, 310, 311, 316, 317, 318, 320, 321, 322, 324, 325, 329, 331, 338, 342, 345, 346, 347, 349, 350, 352, 353, 354, 358, 359], "analysi": [1, 6, 9, 19, 140, 292, 299, 310, 311, 329, 330, 332, 345, 346, 347, 350, 351, 352, 353, 354, 363], "add": [1, 2, 5, 6, 7, 9, 13, 14, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 73, 78, 83, 115, 116, 117, 126, 127, 130, 131, 137, 140, 149, 155, 163, 168, 174, 187, 200, 210, 222, 226, 236, 248, 258, 304, 305, 308, 310, 311, 312, 316, 329, 331, 332, 337, 339, 345, 346, 347, 353, 354], "remap": [1, 10, 19, 299, 330, 346, 348, 351, 356, 361], "visual": [1, 10, 13, 17, 220, 233, 246, 293, 294, 295, 296, 298, 300, 301, 302, 304, 308, 310, 329, 330, 345, 346, 347, 348, 350, 352, 353, 354, 356, 361], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 119, 137, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 329, 330, 331, 332, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 362, 363], "spheric": [1, 5, 150, 280, 293, 294, 295, 296, 301, 302, 310, 345, 346, 347, 353, 354, 362], "qu": [1, 5, 140, 310, 331, 332, 343, 345, 346, 347, 348, 353, 354, 362], "base_mesh": [1, 5, 13, 67, 74, 142, 155, 193, 196, 205, 207, 263, 264, 268, 308, 310, 331, 345, 346, 347, 353, 354], "60km": [1, 5, 310, 345, 346, 347, 353, 354], "90km": [1, 5], "120km": [1, 5, 310], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 155, 310], "map": [1, 8, 17, 20, 31, 74, 75, 96, 121, 122, 123, 159, 310, 312, 332], "viz": [1, 5, 19, 140, 185, 198, 256, 308, 310, 345, 347, 353, 354], "two": [1, 5, 6, 10, 18, 120, 140, 172, 182, 282, 283, 292, 293, 299, 303, 304, 305, 308, 309, 311, 312, 317, 319, 331, 344, 345, 346, 347, 350, 351, 352, 353, 354, 360], "first": [1, 6, 9, 14, 15, 86, 114, 137, 140, 282, 283, 292, 298, 299, 300, 303, 308, 310, 311, 312, 328, 331, 333, 334, 335, 336, 337, 338, 339, 344, 346, 348, 355, 357], "verbos": [1, 5, 6, 63, 65, 137, 308, 331, 362], "10": [1, 9, 13, 69, 137, 289, 292, 298, 300, 304, 305, 331, 332, 338, 341, 344, 345, 347, 348, 350, 351, 352, 353, 355, 363], "name": [1, 5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 60, 61, 62, 63, 67, 74, 80, 84, 88, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 130, 137, 140, 142, 143, 144, 145, 146, 147, 150, 153, 155, 156, 159, 162, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 189, 190, 193, 196, 202, 203, 204, 205, 207, 212, 216, 223, 224, 227, 229, 231, 238, 242, 250, 256, 259, 260, 261, 263, 264, 266, 268, 271, 281, 304, 305, 308, 310, 311, 312, 318, 320, 322, 329, 331, 332, 339, 344, 357, 362], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 86, 140, 145, 146, 161, 166, 189, 202, 203, 212, 238, 250, 282, 283, 303, 308, 311, 344, 345, 347, 353, 355, 360], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 310, 311, 312, 345, 346, 347, 353, 354], "what": [1, 2, 6, 11, 13, 17, 137, 256, 310, 311, 331, 339, 356, 357, 361], "follow": [1, 4, 5, 7, 9, 13, 14, 19, 66, 137, 142, 272, 278, 279, 289, 291, 308, 309, 310, 312, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 360], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 63, 67, 74, 80, 96, 113, 140, 142, 150, 153, 156, 166, 188, 190, 193, 196, 201, 204, 205, 207, 211, 216, 218, 220, 224, 237, 242, 244, 246, 250, 252, 254, 259, 261, 263, 264, 266, 268, 304, 306, 308, 310, 311, 331, 356, 357, 361, 363], "bold": [1, 310], "elsewher": [1, 312], "tree": [1, 7, 115, 117, 131, 282, 283, 284, 310, 358], "thu": [1, 2, 7, 14, 312, 331, 345, 346, 347, 353, 354], "similar": [1, 2, 5, 9, 12, 13, 14, 133, 136, 137, 138, 140, 304, 306, 311, 312, 331, 332, 341, 345, 347, 353, 354, 357], "had": [1, 137], "maintain": [1, 289, 345, 357], "local": [1, 5, 6, 8, 9, 11, 18, 40, 289, 306, 308, 312, 324, 328, 331, 332, 338, 339, 341], "debug": [1, 8, 132, 133, 134, 135, 136, 137, 138, 331, 334, 335, 339, 345, 353], "easier": [1, 14, 308, 310, 311, 312, 332, 357, 362], "symbol": [1, 60, 308], "link": [1, 2, 7, 9, 11, 14, 40, 46, 53, 60, 137, 304, 308, 310, 312, 331, 337, 338, 342, 357, 358], "were": [1, 48, 137, 250, 287, 288, 308, 311, 329, 331, 332, 336, 341], "even": [1, 6, 12, 13, 14, 40, 57, 137, 308, 311, 312, 331, 332, 338, 357], "compass": [1, 5, 6, 233, 289, 308, 310, 311, 312, 329, 331], "though": [1, 11, 38, 310, 311, 331], "global": [1, 13, 17, 100, 101, 106, 256, 283, 293, 294, 295, 296, 301, 302, 304, 308, 309, 311, 329, 330, 331, 332, 339, 345, 346, 347, 348, 353, 354, 356, 357, 361, 363], "dynamic_adjust": [1, 14, 332], "allow": [1, 2, 6, 8, 17, 18, 25, 35, 38, 45, 57, 120, 137, 140, 156, 282, 283, 308, 329, 331, 332, 338, 341, 345, 346, 347, 353, 354, 355, 363], "one": [1, 2, 5, 6, 7, 10, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 60, 113, 114, 119, 137, 140, 155, 156, 172, 250, 282, 283, 289, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 306, 308, 310, 311, 312, 317, 327, 328, 329, 330, 332, 338, 339, 341, 344, 345, 346, 347, 352, 353, 354, 356, 357, 360, 361, 362, 363], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 84, 140, 149, 171, 179, 286, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 331, 355], "port": [1, 331, 339], "instead": [1, 5, 6, 12, 14, 15, 25, 110, 132, 137, 308, 311, 312, 329, 331, 345, 346, 347, 353, 354, 357, 362], "seri": [1, 14, 140, 177, 183, 231, 294, 296, 298, 327, 331, 343], "indic": [1, 7, 8, 14, 17, 18, 19, 38, 39, 107, 114, 123, 137, 140, 275, 282, 283, 285, 306, 308, 328, 331, 332, 341, 355], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 291, 308, 310, 311, 312, 331, 334, 336, 337, 339, 357], "ran": [1, 108], "ico": [1, 5, 140, 310, 331, 343, 345, 346, 347, 353, 354, 362], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 114, 119, 137, 156, 289, 305, 308, 312, 324, 331, 332, 333, 334, 335, 336, 337, 338, 339, 357], "runtim": [1, 8, 14, 30, 44, 140, 152, 168, 174, 192, 226, 308, 331], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 69, 97, 101, 104, 120, 122, 123, 132, 133, 134, 135, 136, 137, 138, 140, 272, 277, 278, 279, 281, 282, 283, 291, 293, 294, 295, 301, 302, 304, 308, 311, 312, 325, 328, 331, 332, 334, 338, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361], "01": [1, 14, 140, 325, 331, 351, 355, 360], "00": [1, 14, 18, 140, 310, 325, 331, 337, 339, 357], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 357], "02": [1, 334], "59": 1, "icos_map_60km": 1, "20": [1, 175, 229, 292, 299, 309, 331, 344, 351, 355], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 6, 9, 14, 57, 137, 292, 299, 311, 312, 345, 346, 347, 353, 354, 355], "mechan": [1, 308], "prevent": [1, 308], "expect": [1, 2, 12, 17, 137, 140, 305, 308, 312, 331], "affect": [1, 6, 293, 295, 301, 302, 308, 312, 331, 348], "howev": [1, 13, 308, 309, 310, 312, 331], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 67, 120, 137, 140, 150, 153, 165, 166, 171, 175, 179, 190, 204, 216, 224, 229, 242, 249, 250, 251, 263, 286, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 309, 310, 321, 329, 330, 331, 332, 338, 344, 362], "successfulli": [1, 48, 331], "after": [1, 5, 6, 7, 9, 17, 18, 19, 38, 40, 41, 81, 102, 107, 137, 273, 274, 289, 293, 295, 296, 301, 302, 305, 308, 310, 312, 324, 331, 332, 334, 337, 339, 346, 348, 357, 360], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 108, 114, 119, 123, 135, 137, 140, 142, 147, 149, 159, 188, 201, 211, 220, 237, 246, 259, 261, 266, 285, 289, 292, 298, 299, 300, 304, 306, 308, 309, 310, 311, 312, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 353, 354, 357, 362, 363], "remov": [1, 5, 14, 24, 52, 110, 292, 298, 299, 300, 310, 312, 331], "longer": [1, 172, 292, 299, 309, 317, 331, 344, 345, 346, 347, 348, 353, 354], "about": [1, 5, 6, 7, 8, 12, 14, 38, 96, 125, 140, 304, 308, 310, 311, 312, 331, 332, 334, 348, 354], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 50, 57, 75, 137, 140, 168, 174, 226, 289, 293, 294, 295, 296, 301, 302, 305, 308, 310, 311, 312, 324, 325, 328, 330, 331, 332, 333, 338, 339, 341, 344, 345, 346, 347, 353, 354, 357, 362], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 137, 140, 289, 291, 305, 308, 309, 310, 311, 325, 328, 332, 333, 334, 335, 336, 337, 338, 339, 342, 357], "enforc": [1, 291, 312], "framework": [1, 5, 7, 9, 12, 13, 14, 109, 289, 304, 305, 308, 310, 324, 329, 330, 331, 342, 355, 356, 358, 361, 363], "propos": [1, 2], "close": [1, 6, 70, 137, 330, 345, 346, 347, 353, 354], "root": [1, 40, 137, 289, 305, 308, 311, 312, 324, 329, 332, 333, 334, 335, 336, 337, 338, 339, 341, 357], "live": [1, 50, 310, 357], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 68, 75, 76, 79, 82, 96, 102, 120, 140, 156, 172, 181, 213, 239, 272, 278, 279, 281, 282, 283, 286, 288, 293, 294, 295, 296, 301, 302, 305, 306, 308, 310, 311, 317, 318, 338, 341, 344, 345, 348, 350, 351, 352], "think": [1, 5, 331], "condit": [1, 7, 38, 140, 145, 165, 169, 189, 193, 202, 205, 212, 216, 218, 227, 238, 242, 244, 249, 251, 252, 254, 264, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 308, 309, 310, 311, 321, 327, 329, 330, 332, 343, 362, 363], "shown": [1, 14, 19, 137, 306, 355], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 71, 74, 76, 97, 101, 102, 104, 113, 114, 119, 123, 132, 133, 134, 135, 136, 137, 138, 140, 280, 282, 283, 286, 289, 292, 298, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 352, 353, 354, 357, 362, 363], "simpli": [1, 14, 18, 57, 137, 165, 305, 308, 310, 312, 331, 341, 357, 362], "prefer": [1, 2, 137, 308, 309, 331, 332], "convent": [1, 308, 312, 331], "futur": [1, 13, 44, 123, 308, 311, 329, 330, 331, 332, 348, 355, 357, 363], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 120, 137, 140, 156, 289, 303, 305, 308, 311, 312, 314, 324, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 352, 355, 357, 362, 363], "independ": [1, 2, 5, 6, 309, 329], "yyyi": 2, "mm": [2, 140, 161], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 84, 85, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 130, 131, 137, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 153, 154, 155, 156, 157, 161, 164, 165, 166, 167, 169, 171, 172, 173, 175, 177, 179, 180, 181, 183, 185, 188, 189, 190, 191, 193, 196, 198, 201, 202, 203, 204, 205, 207, 209, 211, 212, 216, 217, 218, 220, 223, 224, 225, 227, 229, 231, 233, 235, 237, 238, 242, 243, 244, 246, 249, 250, 251, 252, 254, 256, 259, 260, 261, 263, 264, 266, 268, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 318, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363], "purpos": [2, 304, 311, 331, 363], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 75, 121, 122, 127, 137, 140, 156, 159, 233, 270, 272, 278, 279, 289, 293, 294, 295, 296, 301, 302, 303, 304, 305, 308, 309, 311, 312, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 361], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 60, 74, 75, 80, 86, 92, 93, 96, 100, 106, 107, 109, 110, 115, 117, 120, 123, 126, 131, 132, 134, 135, 137, 140, 145, 146, 150, 152, 153, 155, 156, 164, 165, 166, 168, 169, 172, 173, 174, 175, 177, 180, 181, 183, 189, 192, 202, 203, 212, 223, 224, 226, 227, 229, 231, 238, 250, 272, 278, 279, 281, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 318, 320, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363], "summar": 2, "process": [2, 6, 8, 14, 33, 92, 93, 131, 308, 311, 312, 324, 329, 330, 331], "It": [2, 5, 6, 9, 14, 17, 38, 44, 121, 140, 293, 294, 295, 296, 298, 300, 301, 302, 304, 308, 309, 310, 311, 312, 329, 331, 332, 338, 346, 350, 352, 353, 354], "code": [2, 5, 7, 9, 12, 14, 38, 140, 289, 304, 305, 308, 309, 310, 314, 324, 329, 330, 332, 340, 344, 355, 357], "do": [2, 5, 9, 11, 14, 17, 18, 126, 137, 140, 304, 308, 310, 312, 328, 329, 330, 331, 338, 345, 346, 347, 348, 353, 354, 357], "doe": [2, 6, 9, 12, 14, 308, 314, 330, 331, 338], "primari": [2, 5, 9, 331, 362], "challeng": 2, "respect": [2, 8, 9, 14, 19, 140, 143, 282, 283, 308, 311, 345, 346, 347, 353, 354, 356, 361], "softwar": [2, 84, 337, 339, 357], "appropri": [2, 5, 6, 14, 15, 26, 79, 85, 137, 140, 289, 292, 298, 299, 300, 303, 305, 306, 308, 312, 324, 330, 331, 332, 338, 356, 357, 361], "final": [2, 5, 6, 7, 8, 137, 282, 283, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 310, 327, 331, 346, 353], "statement": [2, 12, 308, 329], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 74, 120, 140, 171, 179, 216, 242, 270, 289, 291, 292, 298, 299, 300, 303, 305, 308, 312, 324, 330, 331, 332, 338, 345, 346, 347, 348, 350, 352, 353, 354, 357], "regard": 2, "last": [2, 309, 312, 344, 357], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 115, 117, 140, 156, 176, 230, 292, 298, 299, 300, 308, 310, 312, 330, 331, 332, 344, 357], "your": [2, 4, 5, 6, 11, 137, 289, 311, 312, 324, 328, 331, 332, 333, 334, 338, 339, 345, 346, 347, 353, 354, 357], "appear": [2, 137, 308, 331], "under": [2, 17, 38, 39, 137, 140, 291, 308, 309, 312, 330, 341, 363], "head": [2, 291, 334], "correspond": [2, 6, 7, 120, 137, 140, 142, 285, 289, 308, 312, 324, 344], "discuss": [2, 6, 140, 293, 294, 295, 296, 301, 302, 308, 311, 331, 344], "technic": [2, 7], "issu": [2, 6, 308, 309, 312], "focu": [2, 331], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 114, 119, 125, 130, 132, 133, 134, 135, 136, 137, 138, 146, 150, 152, 153, 164, 166, 168, 172, 173, 174, 175, 180, 192, 203, 226, 229, 250, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 308, 309, 311, 312, 317, 324, 328, 329, 330, 332, 338, 344, 350, 352, 356], "To": [2, 5, 6, 12, 17, 18, 120, 136, 137, 138, 140, 289, 308, 311, 312, 324, 325, 331, 333, 334, 338, 341, 345, 346, 347, 353, 354, 357], "extent": [2, 13, 17, 331, 344], "possibl": [2, 8, 11, 70, 140, 291, 293, 294, 295, 296, 301, 302, 308, 309, 310, 311, 330, 331, 341, 348], "other": [2, 5, 6, 7, 8, 9, 10, 13, 15, 17, 19, 38, 39, 41, 49, 57, 107, 123, 132, 182, 287, 288, 293, 294, 295, 296, 301, 302, 303, 304, 305, 306, 310, 311, 312, 319, 328, 329, 330, 332, 344, 345, 346, 347, 353, 354, 363], "clean": [2, 4, 5, 6, 114, 119, 308, 310, 312], "plan": [2, 13, 140, 289, 298, 300, 308, 324, 329, 333, 334, 335, 336, 337, 339, 350, 352, 363], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 114, 132, 137, 140, 144, 145, 189, 202, 212, 238, 260, 291, 292, 298, 299, 300, 303, 308, 311, 312, 331, 332, 342, 345, 346, 347, 348, 350, 352, 353, 354, 357, 358, 363], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 132, 133, 134, 135, 136, 137, 138, 140, 289, 305, 308, 310, 311, 312, 324, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 353, 354, 357, 362, 363], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 96, 100, 106, 120, 126, 137, 140, 156, 161, 166, 224, 250, 282, 283, 289, 292, 298, 299, 300, 303, 304, 305, 306, 308, 309, 310, 311, 312, 324, 327, 328, 329, 330, 331, 332, 338, 342, 346, 353, 356, 357], "intend": [2, 6, 8, 9, 309, 332, 352, 363], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 63, 120, 280, 291, 293, 294, 295, 296, 301, 302, 306, 308, 311, 312, 328, 331, 348, 357], "pde": 2, "solver": [2, 310, 312, 330, 357], "well": [2, 6, 9, 12, 13, 137, 140, 275, 285, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 312, 329, 331, 332, 346, 357, 363], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 60, 84, 88, 93, 97, 98, 99, 100, 101, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 120, 123, 126, 127, 130, 131, 137, 142, 145, 146, 152, 156, 159, 166, 188, 192, 195, 196, 201, 203, 207, 211, 212, 220, 224, 237, 238, 246, 259, 261, 266, 268, 276, 281, 282, 283, 284, 285, 286, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 310, 311, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363], "low": [2, 123, 348], "variabl": [2, 5, 13, 19, 20, 25, 38, 41, 48, 49, 57, 67, 74, 80, 84, 96, 97, 101, 104, 120, 123, 125, 126, 131, 137, 140, 142, 143, 144, 145, 146, 147, 150, 153, 156, 162, 166, 169, 175, 177, 181, 185, 189, 196, 198, 202, 203, 207, 211, 212, 213, 216, 218, 220, 224, 229, 231, 235, 237, 238, 239, 242, 244, 246, 250, 256, 259, 260, 261, 266, 268, 272, 278, 279, 285, 286, 291, 303, 308, 311, 312, 318, 319, 324, 328, 331, 338, 342, 344, 356, 357, 358, 361], "declar": [2, 7], "interfac": [2, 10, 270, 271, 272, 278, 279, 281, 286, 311, 312, 330, 331, 341], "sequenc": [2, 5, 14, 140, 280, 293, 294, 295, 296, 301, 302, 307, 308, 311, 329, 331, 357, 362, 363], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 60, 92, 93, 94, 96, 107, 120, 123, 132, 133, 134, 135, 136, 137, 138, 140, 156, 161, 166, 224, 250, 292, 299, 308, 310, 311, 312, 325, 328, 329, 331, 332, 338, 339, 341, 345, 346, 347, 348, 353, 354, 356, 357, 361], "want": [2, 5, 6, 11, 14, 17, 18, 51, 137, 140, 308, 310, 312, 328, 331, 332, 338, 339, 355, 357, 363], "math": 2, "syntax": [2, 140, 331], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 312, 329, 331, 357], "2": [2, 6, 13, 14, 15, 18, 39, 123, 137, 140, 180, 291, 292, 295, 301, 302, 306, 309, 312, 318, 325, 331, 332, 334, 338, 341, 342, 344, 346, 348, 349, 350, 351, 352, 357], "2ab": 2, "imag": [2, 7, 19, 121, 122, 123, 281, 304, 331, 356, 361], "keep": [2, 5, 6, 9, 14, 25, 57, 293, 294, 295, 296, 301, 302, 304, 305, 308, 310, 312, 331, 356, 361], "mind": [2, 5, 331], "quit": [2, 306, 308, 310, 331], "small": [2, 9, 44, 137, 282, 283, 304, 308, 331, 333, 334, 340, 341, 353, 355, 357], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 79, 92, 93, 96, 109, 110, 111, 114, 123, 127, 137, 140, 142, 156, 161, 166, 224, 250, 272, 275, 278, 279, 280, 282, 283, 284, 286, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363], "png": [2, 13, 19, 281, 293, 294, 295, 296, 301, 302, 308, 331], "okai": [2, 6, 308, 331], "size": [2, 13, 19, 69, 70, 79, 122, 123, 140, 158, 160, 162, 281, 304, 331, 332, 344, 346, 348, 350, 351, 352, 355, 356, 361], "repo": [2, 5, 6, 137, 289, 324, 330, 331, 358], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 137, 140, 304, 305, 306, 308, 309, 310, 311, 312, 328, 329, 331, 332, 334, 341, 356, 357, 362, 363], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 308, 310, 312, 331], "sourc": [2, 6, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 308, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 331, 332, 338, 339, 357], "project": [2, 5, 6, 7, 66, 100, 106, 289, 311, 312, 324, 325, 331, 332, 333, 334, 338, 357, 358], "manag": [2, 328, 338], "item": [2, 331], "git": [2, 6, 16, 95, 289, 312, 324, 331, 332, 357], "branch": [2, 5, 137, 289, 305, 308, 312, 324, 330, 331, 357], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 308, 312, 338], "block": [2, 310], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 97, 101, 104, 136, 137, 138, 140, 304, 306, 308, 310, 311, 312, 328, 330, 331, 332, 338, 344, 345, 346, 347, 348, 353, 354, 357, 363], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 140, 304, 305, 308, 310, 311, 331], "example_funct": 2, "foo": [2, 311], "return": [2, 7, 15, 31, 48, 56, 59, 61, 68, 69, 70, 75, 79, 85, 86, 88, 91, 92, 102, 111, 112, 114, 115, 117, 120, 123, 126, 130, 131, 140, 143, 144, 145, 146, 151, 154, 155, 157, 159, 161, 162, 167, 189, 191, 195, 202, 203, 212, 214, 215, 217, 225, 238, 240, 241, 243, 260, 270, 273, 274, 275, 276, 277, 280, 282, 283, 284, 285, 286, 287, 288, 310, 311, 331, 346], "how": [2, 5, 6, 12, 14, 74, 140, 307, 308, 310, 311, 312, 332, 338, 339], "show": [2, 7, 13, 280, 281, 308, 331, 338, 339, 344, 345, 346, 347, 348, 353, 354, 356, 361], "met": 2, "regress": [2, 292, 293, 294, 295, 296, 299, 301, 302, 309, 329, 330, 331, 344, 346, 357, 362], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 62, 91, 92, 93, 94, 95, 114, 119, 137, 140, 198, 256, 270, 272, 273, 274, 278, 279, 308, 311, 312, 330, 331, 332, 334, 337, 338, 339, 341, 350, 352, 356, 357, 361, 363], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 62, 95, 109, 111, 114, 119, 135, 137, 171, 179, 196, 207, 268, 306, 307, 308, 309, 310, 311, 312, 328, 329, 331, 332, 338, 345, 346, 347, 348, 353, 354, 355, 357, 363], "properli": [2, 132, 134, 135, 331, 332, 357], "addit": [2, 7, 9, 18, 38, 140, 286, 287, 288, 303, 304, 305, 306, 308, 310, 311, 312, 331, 348, 351], "modif": [2, 6, 7, 308, 325], "nightli": [2, 312, 357, 362], "might": [2, 6, 11, 14, 17, 19, 137, 140, 284, 304, 308, 312, 331, 332, 338, 357], "made": [2, 5, 17, 38, 41, 49, 120, 308, 310, 311, 312, 325, 327, 329, 331, 363], "continu": [2, 6, 308, 331], "page": [3, 7, 137, 333], "auto": 3, "summari": [3, 334], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 75, 113, 114, 137, 140, 291, 292, 293, 294, 295, 296, 301, 302, 304, 306, 308, 309, 310, 311, 312, 329, 338, 342, 344, 348, 356, 357, 358, 361, 363], "relev": [3, 7, 9, 140, 293, 294, 295, 296, 298, 300, 301, 302, 331, 333, 334, 335, 336, 337, 338, 339, 356, 357, 361], "seaic": [3, 10, 20, 40, 305, 308, 327, 329, 330, 357, 358, 361, 363], "long": [4, 25, 35, 38, 45, 92, 93, 156, 166, 224, 250, 308, 331, 344, 357], "procedur": [4, 137, 312, 331, 339], "conda": [4, 5, 16, 95, 132, 134, 135, 137, 289, 305, 311, 324, 330, 331, 332, 333, 334, 335, 336, 337, 339], "environ": [4, 5, 132, 134, 135, 289, 305, 311, 324, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "spack": [4, 5, 132, 134, 135, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339], "compil": [4, 5, 6, 14, 132, 133, 134, 135, 136, 137, 138, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 357], "system": [4, 5, 6, 25, 35, 38, 45, 92, 93, 94, 132, 134, 135, 137, 156, 166, 224, 250, 308, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 357], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 66, 88, 115, 132, 134, 135, 137, 140, 150, 153, 304, 305, 306, 308, 310, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 357], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 75, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 111, 113, 114, 115, 117, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 137, 138, 152, 168, 171, 174, 179, 186, 192, 199, 226, 250, 257, 272, 278, 279, 282, 283, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 307, 308, 310, 311, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 350, 352, 353, 354, 355, 356, 361, 362], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 81, 95, 107, 108, 111, 113, 114, 119, 120, 132, 133, 134, 135, 136, 137, 138, 140, 171, 179, 282, 283, 284, 286, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 307, 308, 310, 311, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 345, 346, 347, 353, 354, 356, 361, 362, 363], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 88, 95, 115, 119, 126, 137, 140, 150, 153, 304, 305, 306, 307, 308, 310, 312, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 357], "Then": [4, 6, 7, 11, 14, 132, 133, 134, 135, 136, 137, 138, 289, 292, 298, 299, 300, 303, 305, 308, 310, 312, 324, 331, 338, 344, 348, 357], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 66, 91, 92, 93, 102, 114, 119, 135, 137, 142, 150, 152, 153, 156, 165, 166, 168, 172, 174, 177, 181, 183, 188, 190, 192, 201, 204, 211, 216, 220, 224, 226, 231, 237, 242, 246, 249, 250, 251, 259, 261, 263, 266, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 306, 307, 309, 310, 311, 317, 318, 321, 324, 327, 328, 329, 330, 331, 332, 338, 343, 362, 363], "script": [4, 5, 6, 12, 19, 54, 62, 133, 136, 137, 138, 311, 329, 330, 331, 334, 338], "doc": [4, 7, 331, 339], "cd": [4, 6, 289, 312, 324, 331, 334, 357], "html": [4, 342], "view": [4, 298, 300, 312, 350, 352], "open": [4, 6, 312, 331], "_build": 4, "index": [4, 15, 18, 86, 140, 142, 143, 145, 146, 147, 189, 202, 203, 212, 238, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 285, 286, 304, 331, 341], "act": [5, 311, 341], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 122, 137, 164, 165, 292, 298, 299, 300, 303, 305, 308, 310, 331, 332, 338, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 357], "These": [5, 6, 8, 9, 14, 20, 38, 137, 140, 289, 291, 305, 308, 310, 311, 312, 324, 325, 330, 331, 332, 338, 344, 348, 352, 353, 357, 362, 363], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 62, 95, 137, 140, 149, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 309, 310, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 353, 354, 358], "describ": [5, 7, 14, 17, 19, 95, 115, 117, 131, 140, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 345, 346, 347, 348, 353, 357], "instal": [5, 6, 137, 312, 331, 338, 339, 357], "abov": [5, 7, 14, 18, 19, 137, 286, 304, 306, 308, 309, 310, 311, 312, 331, 332, 345, 346, 347, 348, 353, 355, 357, 362], "off": [5, 6, 312, 328], "http": [5, 7, 11, 14, 60, 308, 311, 328, 330, 331, 332, 339, 342, 351, 357, 358], "github": [5, 6, 7, 311, 312, 330, 331, 332, 342, 357, 358], "com": [5, 6, 7, 14, 60, 311, 312, 330, 331, 332, 357, 358], "e3sm": [5, 7, 10, 11, 38, 125, 137, 289, 305, 308, 309, 311, 324, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 358], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 60, 67, 68, 74, 75, 80, 96, 103, 113, 114, 119, 125, 137, 140, 142, 150, 153, 155, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 185, 188, 190, 193, 196, 198, 201, 204, 205, 207, 209, 211, 213, 216, 218, 220, 223, 224, 227, 229, 231, 233, 235, 237, 239, 242, 244, 246, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 266, 268, 272, 278, 279, 293, 294, 295, 296, 301, 302, 303, 304, 308, 309, 310, 311, 317, 318, 320, 321, 322, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 353, 354, 357, 362], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 132, 134, 135, 137, 280, 292, 293, 294, 295, 296, 299, 300, 301, 302, 308, 312, 328, 331, 332, 338, 342, 343, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 358, 360, 362, 363], "mean": [5, 281, 312, 331, 341, 344, 345, 346, 347, 348, 351, 353, 354, 362], "chang": [5, 6, 8, 17, 74, 107, 108, 140, 149, 289, 305, 308, 309, 310, 311, 312, 324, 329, 331, 332, 334, 339, 341, 344, 345, 346, 347, 351, 353, 354, 357, 362], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 66, 102, 109, 123, 137, 140, 282, 283, 284, 287, 288, 292, 298, 299, 300, 303, 305, 308, 309, 310, 311, 312, 328, 329, 330, 331, 332, 338, 339, 357], "tool": [5, 6, 9, 12, 14, 17, 289, 305, 308, 312, 324, 330, 331, 332], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 62, 75, 84, 89, 92, 93, 96, 102, 109, 120, 121, 122, 123, 124, 125, 126, 131, 132, 136, 137, 138, 140, 142, 143, 144, 145, 147, 151, 154, 156, 157, 158, 159, 160, 161, 166, 167, 168, 174, 181, 185, 189, 191, 198, 202, 212, 217, 224, 225, 226, 235, 236, 238, 243, 250, 256, 260, 261, 266, 270, 272, 273, 274, 278, 279, 280, 281, 282, 283, 285, 286, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 318, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 360, 362, 363], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 63, 66, 72, 77, 91, 92, 93, 95, 96, 109, 110, 111, 113, 114, 119, 137, 140, 156, 158, 160, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 312, 324, 325, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 358, 362], "support": [5, 6, 8, 13, 17, 38, 140, 272, 278, 279, 291, 308, 311, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 344, 355, 363], "machin": [5, 8, 9, 38, 40, 61, 62, 95, 113, 114, 119, 289, 308, 311, 324, 330, 331, 332, 333, 334, 335, 336, 337, 339], "option": [5, 7, 9, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 67, 73, 74, 75, 78, 80, 84, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 110, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 137, 143, 145, 146, 149, 150, 152, 153, 156, 159, 161, 166, 168, 174, 176, 186, 189, 192, 199, 202, 203, 212, 213, 223, 224, 226, 229, 230, 238, 239, 250, 252, 254, 257, 270, 272, 273, 274, 278, 279, 280, 281, 282, 283, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 320, 324, 325, 328, 330, 332, 341, 343, 357, 363], "help": [5, 6, 13, 137, 304, 305, 306, 308, 312, 330, 331, 338, 342, 358], "usag": [5, 15, 19, 310, 332, 334, 339], "h": [5, 14, 331, 348], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 131, 137, 140, 142, 147, 214, 215, 240, 241, 250, 293, 294, 295, 296, 301, 302, 308, 310, 311, 312, 328, 331, 332, 334, 336, 337, 338, 343, 344, 345, 347, 350, 352, 353, 357, 362, 363], "n": [5, 6, 68, 75, 76, 82, 308, 331, 334, 338, 339, 344, 346, 348, 350, 351, 352, 356, 357, 361], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 61, 62, 63, 67, 68, 69, 70, 71, 79, 91, 92, 93, 96, 114, 137, 140, 151, 154, 156, 157, 158, 160, 166, 167, 181, 191, 213, 217, 224, 225, 239, 243, 250, 289, 292, 298, 299, 300, 304, 308, 309, 310, 311, 318, 329, 331, 332, 338, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 361], "v": [5, 312, 331, 345, 347, 348, 350, 352, 353, 362], "By": [5, 14, 18, 39, 40, 140, 289, 305, 308, 310, 324, 331, 332, 344, 346, 355], "default": [5, 7, 9, 14, 15, 18, 19, 25, 39, 40, 49, 55, 62, 75, 80, 86, 87, 95, 96, 97, 101, 104, 110, 114, 116, 119, 123, 132, 134, 135, 137, 140, 144, 145, 166, 189, 202, 212, 224, 238, 289, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 308, 310, 312, 324, 325, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 345, 346, 347, 353, 354, 355, 356, 357, 361, 363], "planar": [5, 9, 123, 140, 282, 291, 305, 308, 331, 350, 351, 352, 355, 356, 361, 362, 363], "baroclinic_channel": [5, 7, 9, 14, 18, 223, 229, 289, 297, 304, 305, 308, 311, 331, 344, 357, 362, 363], "10km": [5, 18, 292, 331, 344, 357, 362, 363], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 69, 132, 133, 134, 135, 137, 138, 140, 164, 166, 180, 224, 249, 250, 251, 272, 278, 279, 281, 282, 283, 292, 293, 294, 295, 298, 300, 301, 302, 303, 305, 306, 308, 310, 312, 325, 328, 331, 332, 334, 337, 338, 339, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357], "decomp": [5, 305, 331, 357, 362], "displai": [5, 8, 281, 339], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 60, 63, 66, 95, 111, 113, 114, 119, 120, 123, 137, 142, 289, 305, 308, 310, 311, 312, 318, 324, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 357, 363], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 60, 62, 95, 96, 109, 111, 113, 114, 119, 120, 137, 156, 164, 165, 166, 169, 171, 172, 173, 175, 177, 179, 180, 181, 183, 196, 207, 223, 224, 227, 229, 231, 250, 268, 289, 292, 299, 305, 307, 308, 309, 310, 311, 312, 318, 320, 322, 324, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 353, 354, 357, 363], "messag": [5, 8, 137, 308, 328, 339], "task_expr": [5, 63], "flag": [5, 6, 137, 308, 311, 328, 329, 331, 332, 337, 342, 344, 351, 357, 358], "suppli": [5, 6, 7, 15, 18, 123, 131, 137, 308, 312, 331], "substr": [5, 137], "regular": [5, 19, 63, 68, 75, 185, 198, 256, 261, 266, 331, 333, 336, 338, 339, 348, 357], "express": [5, 63], "subset": 5, "search": [5, 63, 334], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 69, 79, 85, 88, 92, 93, 110, 115, 117, 120, 126, 140, 142, 143, 146, 147, 155, 156, 175, 203, 229, 275, 282, 283, 286, 292, 299, 303, 308, 310, 328, 330, 331, 332, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 361, 362], "pass": [5, 8, 9, 12, 13, 14, 18, 79, 120, 121, 140, 304, 305, 308, 310, 311, 312, 329, 357], "similarli": [5, 8, 123, 136, 138, 286, 289, 308, 310, 312, 338, 357], "result": [5, 13, 18, 59, 70, 79, 137, 140, 164, 172, 177, 180, 183, 231, 254, 282, 283, 284, 287, 288, 292, 293, 294, 295, 296, 299, 301, 302, 308, 309, 311, 312, 317, 322, 329, 331, 332, 344, 345, 346, 347, 348, 353, 354, 356, 361, 362], "descript": [5, 7, 331, 332, 342, 358], "short": [5, 165, 249, 251, 308, 309, 310, 311, 321, 331, 344], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 62, 91, 92, 93, 119, 137, 140, 141, 156, 164, 165, 249, 251, 292, 299, 303, 304, 305, 308, 309, 310, 311, 325, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 357, 362], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 119, 121, 122, 123, 137, 140, 142, 156, 291, 308, 310, 312, 331, 341, 348, 363], "built": [5, 6, 14, 114, 119, 137, 289, 305, 312, 324, 330, 332, 338, 357], "standalon": [5, 14, 135, 137, 305, 312, 329, 330, 338, 358], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 38, 40, 66, 84, 98, 105, 115, 117, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 156, 159, 162, 213, 224, 239, 256, 271, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 308, 311, 312, 315, 324, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 348, 350, 355, 356, 357, 358, 361, 362, 363], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 114, 119, 137, 308, 310, 311, 312, 328, 331, 334, 337, 339, 341, 345, 346, 347, 348, 353, 354, 357], "num": 5, "f": [5, 9, 11, 18, 140, 195, 305, 308, 310, 311, 312, 331, 332, 339, 344, 348, 350, 357], "m": [5, 6, 14, 68, 75, 76, 82, 282, 283, 292, 299, 303, 304, 312, 331, 333, 334, 335, 336, 337, 339, 341, 344, 346, 347, 348, 353, 355, 357], "mach": [5, 9, 38, 137, 330, 333, 334, 335, 336, 337, 338, 339, 357], "w": [5, 6, 312, 329, 331, 357], "p": [5, 6, 312, 331, 332, 357], "suite_nam": [5, 8, 110, 112, 114, 119, 357], "copy_execut": [5, 114, 119, 357], "specifi": [5, 6, 14, 17, 18, 19, 40, 137, 140, 291, 308, 312, 327, 331, 332, 337, 339, 344, 345, 346, 347, 353, 354, 356, 357, 361], "sever": [5, 6, 12, 137, 140, 304, 308, 310, 311, 312, 330, 331, 351, 356, 357, 362], "onc": [5, 6, 14, 41, 282, 283, 292, 312, 331, 332, 345, 346, 347, 353, 354, 357], "separ": [5, 7, 9, 14, 17, 18, 19, 142, 308, 309, 329, 331, 345, 346, 347, 353, 354, 357], "space": [5, 6, 7, 9, 13, 137, 298, 300, 308, 312, 331, 334, 338, 341, 348, 357], "altern": [5, 13, 308, 325, 357], "task_numb": 5, "multipl": [5, 9, 14, 137, 290, 309, 310, 311, 312, 331, 338, 344, 357], "test": [5, 7, 8, 9, 19, 49, 50, 55, 62, 91, 92, 93, 112, 120, 137, 141, 142, 148, 150, 153, 163, 165, 166, 172, 173, 175, 176, 177, 178, 180, 185, 186, 187, 188, 190, 193, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 213, 216, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 316, 317, 320, 321, 322, 323, 324, 327, 329, 330, 336, 338, 339, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362], "requir": [5, 6, 8, 14, 25, 35, 38, 39, 45, 96, 140, 156, 166, 224, 250, 289, 304, 305, 308, 309, 310, 311, 312, 324, 325, 328, 330, 331, 332, 337, 338, 341, 342, 356, 357, 358, 361, 363], "few": [5, 13, 14, 25, 35, 38, 45, 92, 93, 137, 156, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 311, 331, 332, 338], "basic": [5, 7, 332, 334, 338, 348, 357], "piec": [5, 304, 305, 331], "abl": [5, 6, 132, 133, 134, 135, 136, 138, 140, 308, 309, 312, 331, 338, 357], "place": [5, 6, 14, 121, 137, 304, 308, 310, 325, 331, 338], "download": [5, 6, 8, 10, 38, 40, 47, 137, 171, 179, 310, 311, 312, 332, 357, 362], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 137, 140, 282, 283, 291, 293, 294, 295, 296, 301, 302, 304, 306, 308, 310, 311, 312, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 357, 358, 362, 363], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 102, 115, 117, 118, 121, 122, 123, 125, 131, 137, 140, 272, 278, 279, 280, 282, 283, 285, 287, 288, 308, 312, 330, 332, 333, 334, 335, 336, 337, 338, 357, 362, 363], "r": [5, 195, 339, 345, 346, 347, 353], "tell": [5, 6, 137, 312], "re": [5, 6, 9, 310, 311, 312, 329, 331, 332, 338, 339, 345, 346, 347, 353, 354], "leav": [5, 19, 332, 346], "unknown": [5, 137, 311, 338], "component_path": [5, 9, 114, 119, 289, 305, 324, 332, 357], "absolut": [5, 9, 38, 40, 57, 114, 119, 289, 305, 308, 312, 324, 357], "landic": [5, 6, 12, 20, 40, 66, 119, 304, 305, 307, 308, 310, 312, 329, 330, 331, 332, 357, 363], "e3sm_submodul": [5, 289, 305, 312, 324, 325, 331], "mali": [5, 137, 305, 308, 312, 329, 331, 332, 357, 363], "dev": [5, 6, 7, 293, 295, 296, 301, 302, 304, 305, 307, 308, 311, 312, 330, 331, 342, 357, 358], "albani": [5, 132, 134, 135, 137, 305, 332, 357], "depend": [5, 14, 17, 19, 38, 39, 47, 107, 108, 137, 140, 142, 171, 179, 188, 201, 211, 237, 259, 261, 266, 310, 312, 329, 330, 331, 332, 338, 339, 341, 345, 346, 347, 353, 354, 357, 363], "whether": [5, 8, 13, 14, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 60, 63, 109, 110, 114, 119, 120, 121, 122, 123, 127, 137, 140, 152, 155, 156, 168, 174, 185, 192, 198, 226, 250, 252, 254, 256, 261, 266, 280, 281, 283, 298, 300, 304, 308, 310, 312, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 361], "omega": [5, 31, 125, 156, 159, 213, 239, 289, 305, 311, 312, 329, 331, 342, 348, 350, 352, 357], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 61, 62, 73, 75, 78, 91, 92, 93, 94, 95, 111, 113, 114, 119, 121, 122, 125, 126, 127, 128, 130, 131, 149, 150, 152, 153, 156, 159, 161, 168, 174, 175, 185, 186, 192, 198, 199, 213, 226, 229, 239, 256, 257, 270, 272, 273, 274, 278, 279, 289, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 308, 309, 310, 311, 312, 324, 325, 328, 330, 341, 357, 363], "point": [5, 6, 9, 54, 60, 99, 137, 282, 283, 286, 289, 291, 304, 305, 310, 311, 312, 324, 331, 332, 338, 353, 357], "much": [5, 6, 14, 308, 331], "config_fil": [5, 9, 114, 119], "work_dir": [5, 11, 38, 49, 62, 95, 113, 114, 119, 120, 308, 310, 331], "recommend": [5, 7, 11, 19, 137, 308, 309, 311, 312, 331, 338], "itself": [5, 6, 7, 9, 38, 46, 53, 304, 305, 307, 308, 310, 312, 331, 357], "temp": 5, "scratch": [5, 6, 312, 331, 334, 339, 357], "avoid": [5, 308, 331], "confus": [5, 14, 311, 312, 331], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 83, 84, 93, 96, 109, 110, 120, 122, 140, 142, 146, 147, 150, 153, 156, 162, 171, 179, 181, 182, 188, 196, 201, 203, 207, 211, 220, 237, 246, 259, 261, 266, 268, 271, 286, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 310, 318, 319, 327, 329, 332, 339, 345, 346, 347, 348, 353, 354, 357, 362], "compar": [5, 10, 18, 38, 41, 48, 113, 114, 119, 120, 140, 181, 182, 250, 293, 294, 295, 296, 301, 302, 303, 308, 309, 310, 311, 312, 318, 319, 327, 329, 331, 343, 344, 351, 357, 360, 362], "previou": [5, 123, 182, 308, 312, 319, 331, 343, 357, 362], "same": [5, 6, 7, 9, 14, 18, 38, 39, 40, 48, 120, 122, 137, 140, 144, 145, 189, 202, 212, 238, 260, 292, 299, 303, 304, 306, 308, 309, 310, 311, 312, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 353, 354, 355, 357, 362, 363], "baseline_dir": [5, 38, 113, 114, 119, 308], "mani": [5, 6, 8, 9, 140, 304, 306, 308, 310, 311, 312, 330, 331, 344, 356, 361], "valid": [5, 10, 19, 38, 41, 48, 123, 140, 150, 153, 272, 273, 274, 275, 276, 277, 278, 279, 286, 298, 300, 303, 308, 311, 312, 330, 341, 344], "timer": [5, 18, 38, 308, 309, 311], "both": [5, 6, 7, 8, 13, 14, 30, 123, 137, 140, 161, 168, 174, 226, 281, 292, 304, 305, 307, 308, 312, 330, 331, 332, 343, 346, 350, 352, 355], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 114, 119, 289, 305, 312, 324, 332, 339, 357], "give": [5, 6, 14, 18, 137, 308, 311, 312, 331, 332, 357], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 18, 19, 25, 37, 107, 137, 140, 156, 272, 278, 279, 289, 292, 298, 299, 300, 304, 305, 308, 310, 311, 312, 324, 329, 331, 332, 337, 338, 339, 341, 344, 345, 346, 347, 348, 353, 354, 355, 357, 362], "case": [5, 6, 7, 8, 9, 14, 19, 28, 29, 49, 50, 55, 62, 91, 92, 93, 115, 120, 137, 140, 141, 148, 165, 172, 173, 175, 176, 177, 178, 180, 186, 187, 188, 190, 193, 196, 197, 199, 201, 204, 205, 207, 208, 209, 211, 213, 216, 218, 219, 220, 221, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 237, 239, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 282, 283, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 312, 315, 317, 320, 321, 323, 329, 330, 331, 338, 339, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362], "pre": [5, 137, 312], "copi": [5, 6, 8, 40, 55, 114, 119, 331, 334, 357], "just": [5, 14, 25, 35, 38, 45, 63, 137, 156, 308, 311, 312, 329, 331, 334, 337, 339], "wish": [5, 7, 14, 50, 282, 283, 308, 312, 331, 357], "again": [5, 6, 14, 135, 140, 289, 308, 310, 312, 328, 357], "later": [5, 8, 18, 25, 35, 38, 45, 57, 137, 156, 308, 331, 332], "anticip": [5, 331], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 108, 121, 137, 149, 282, 283, 289, 291, 304, 308, 309, 310, 312, 324, 325, 328, 329, 331, 332, 339, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 361, 363], "delet": [5, 114, 119, 311, 312, 328, 357], "fresh": [5, 6, 310, 331], "sinc": [5, 6, 14, 86, 108, 131, 140, 292, 308, 310, 311, 312, 331, 344, 345, 346, 347, 348, 350, 352, 353, 354, 356, 361], "rerun": [5, 312], "c": [5, 6, 114, 137, 308, 312, 333, 334, 335, 336, 337, 338, 339, 343, 345, 347, 351, 353, 354, 357, 362], "test_suit": [5, 112, 308], "build": [5, 6, 10, 13, 14, 71, 76, 132, 133, 134, 135, 136, 138, 280, 289, 305, 310, 311, 324, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "mpas_model": [5, 332], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 71, 74, 75, 76, 140, 171, 179, 308, 310, 311, 331, 332, 337, 339, 357], "baselin": [5, 6, 8, 10, 38, 41, 48, 113, 114, 119, 120, 140, 150, 153, 250, 292, 298, 299, 300, 303, 308, 309, 311, 327, 329, 331, 343, 357], "comparison": [5, 8, 18, 38, 48, 120, 308, 331, 332, 353], "against": [5, 10, 41, 48, 120, 140, 150, 153, 292, 298, 299, 300, 303, 308, 327, 331, 343], "oppos": [5, 14, 30, 152, 155, 168, 174, 185, 192, 198, 226, 256, 261, 266, 283, 331], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 109], "wherea": [5, 12, 308, 329, 331, 343, 363], "typic": [5, 6, 7, 9, 13, 14, 17, 18, 19, 38, 50, 110, 137, 140, 281, 282, 283, 304, 305, 306, 308, 310, 312, 329, 331, 332, 338, 341, 355, 357, 363], "clone": [5, 6, 137, 289, 306, 312, 324, 331, 357], "pickl": [5, 8, 107, 108, 308, 331, 357], "latter": [5, 49, 137], "conveni": [5, 9, 17, 272, 278, 279, 304, 308, 331, 332, 345, 346, 347, 353, 354, 357, 363], "tab": [5, 357], "explicitli": [5, 7, 140, 292, 298, 299, 300, 308, 312, 331, 332, 357], "select": [5, 8, 123, 280, 308, 312, 331], "edit": [5, 7, 312, 331, 357], "steps_to_run": [5, 49, 110, 308, 310, 331, 332], "full_run": [5, 18, 327, 344, 360], "restart_run": [5, 18, 327, 344, 360], "Or": [5, 308, 332], "accomplish": [5, 308, 311], "thing": [5, 132, 133, 134, 135, 136, 137, 138, 140, 304, 308, 311, 330, 362], "take": [5, 6, 7, 11, 13, 14, 57, 137, 140, 146, 203, 304, 308, 309, 310, 312, 331, 345, 346, 347, 353, 362], "preced": [5, 57, 140], "over": [5, 9, 14, 57, 96, 121, 122, 281, 308, 311, 330, 331, 341, 344, 351, 355, 357], "intern": [5, 11, 25, 222, 223, 224, 227, 229, 231, 233, 282, 283, 299, 308, 312, 328, 342, 349], "shouldn": [5, 137, 250, 331], "special": [5, 329, 356], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 156, 308, 338], "polaris_cach": [5, 8, 20, 308], "structur": [5, 13, 31, 159, 307, 310, 330, 331, 351], "without": [5, 40, 281, 308, 311, 312, 330, 331, 332, 336, 338, 350, 352, 356, 357], "redund": [5, 272, 278, 279, 292, 304, 331], "stamp": 5, "revis": [5, 332], "older": 5, "ones": [5, 272, 278, 279, 311, 331], "version": [5, 6, 16, 33, 57, 95, 120, 137, 289, 292, 299, 304, 305, 306, 308, 310, 311, 312, 324, 330, 331, 332, 338, 339, 342, 344, 346, 357, 358], "updat": [5, 7, 8, 25, 27, 29, 34, 35, 44, 45, 116, 135, 137, 158, 250, 289, 292, 293, 294, 295, 298, 299, 300, 301, 302, 308, 324, 328, 330, 331, 357], "cached_fil": [5, 20, 308], "json": [5, 8, 20, 55, 308, 339], "anvil": [5, 6, 137, 308, 332, 338, 357], "chrysali": [5, 6, 137, 308, 331, 332, 338, 357], "onto": [5, 312], "lcrc": [5, 6, 8, 11, 55, 308, 311, 332, 333, 335, 338, 357], "server": [5, 8, 40, 55, 308, 311, 332, 339], "d": [5, 19, 123, 213, 239, 272, 278, 279, 291, 295, 301, 302, 308, 331, 342, 349, 355], "whose": [5, 46, 53, 85, 308], "ocean_cached_fil": 5, "pr": [5, 6, 357, 362], "look": [5, 6, 7, 11, 18, 136, 138, 282, 283, 310, 311, 331, 332], "someth": [5, 7, 97, 101, 104, 136, 137, 138, 312, 331], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 96, 140, 142, 150, 153, 292, 299, 308, 311, 331], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 84, 150, 153, 156, 292, 298, 299, 300, 308, 331, 332], "info": [5, 12, 14, 25, 32, 84, 137, 150, 153, 156, 308, 331], "initial_st": [5, 18, 19, 142, 292, 299, 308, 331], "date_str": [5, 55], "let": [5, 308, 312, 329, 331, 332, 339], "string": [5, 9, 15, 40, 100, 106, 137, 140, 161, 256, 281, 312], "choos": [5, 308, 311, 312, 331, 333, 334, 335, 336, 339, 363], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 331], "check": [5, 6, 18, 120, 308, 312, 331, 332, 334, 339, 357, 362], "print": [5, 12, 18, 63, 120, 127, 308, 311, 362], "stdout": [5, 12, 38, 49, 308, 310], "translat": [5, 31, 140, 159], "convert": [5, 9, 13, 14, 140, 161, 308, 331], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 114, 119, 130, 131, 156, 159, 160, 168, 171, 174, 179, 226, 289, 292, 298, 299, 300, 304, 305, 308, 310, 311, 324, 325, 327, 330, 331, 332, 355], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 125, 130, 131, 160, 168, 171, 174, 179, 226, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 308, 310, 311, 324, 327, 332, 356, 361], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 137, 150, 153, 156, 159, 160, 168, 174, 226, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 308, 310, 330, 331, 334, 337, 339], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 66, 125, 137, 140, 155, 159, 282, 283, 289, 304, 306, 308, 309, 311, 312, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 361, 363], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 66, 125, 137, 140, 155, 159, 282, 283, 289, 304, 306, 308, 309, 311, 312, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 361], "don": [5, 6, 7, 14, 137, 140, 142, 147, 308, 310, 311, 312, 331, 336, 357, 363], "format": [5, 7, 11, 13, 14, 125, 131, 161, 309, 310, 312, 331, 332, 334], "note": [5, 7, 17, 18, 331, 339], "keyword": [5, 7, 14, 18, 19, 308, 346], "top": [5, 19, 123, 272, 273, 274, 275, 276, 277, 278, 279, 281, 291, 306, 331, 341, 351], "ignor": [5, 100, 106], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 61, 69, 85, 91, 102, 109, 137, 140, 144, 145, 146, 156, 189, 202, 203, 212, 238, 260, 304, 307, 308, 310, 311, 312, 329, 332, 333, 334, 335, 336, 337, 339, 341, 357], "pars": [5, 9, 14, 26, 27, 28, 29, 88, 115, 117], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 86, 120, 121, 122, 123, 127, 140, 142, 150, 153, 159, 175, 195, 229, 281, 282, 283, 286, 292, 299, 301, 305, 308, 310, 311, 330, 331, 332, 341, 344, 345, 346, 347, 348, 351, 353, 354, 355], "doesn": [5, 6, 131, 137, 308, 310, 331, 332, 337, 338, 357], "matter": [5, 331], "usabl": 5, "try": [6, 14, 60, 137, 311, 312, 328, 331, 332, 334, 339, 357], "stai": [6, 312], "sync": 6, "mpi": [6, 14, 17, 96, 132, 135, 137, 156, 158, 160, 292, 298, 299, 300, 308, 312, 328, 330, 331, 333, 334, 335, 336, 337, 339, 357], "librari": [6, 14, 132, 137, 312, 331, 333, 334, 335, 336, 337, 338, 339, 357], "netcdf": [6, 137, 142, 147, 162, 303, 332, 333, 334, 335, 336, 337, 338, 339], "fortran": [6, 137, 333, 334, 335, 336, 337, 338, 339], "pnetcdf": [6, 137, 333, 334, 335, 336, 337, 338, 339], "mkl": [6, 137], "linear": [6, 19, 121, 122, 123, 282, 283, 293, 294, 295, 298, 301, 302, 331, 344, 345, 346, 347, 348, 350, 351, 353, 354], "algebra": 6, "lib": [6, 137], "bump": 6, "major": [6, 305, 308], "minor": 6, "esmf": [6, 312, 337, 357], "moab": [6, 337], "scorpio": [6, 312, 338, 357], "meti": [6, 84], "parmeti": 6, "trilino": [6, 312], "u": [6, 308, 331, 338, 339, 345, 347, 348, 350, 352, 353], "adn": 6, "sometim": [6, 14, 272, 278, 279, 304, 306, 308, 310, 329, 331, 362], "necessari": [6, 7, 13, 137, 331], "alwai": [6, 7, 9, 12, 57, 137, 140, 145, 189, 202, 212, 238, 285, 289, 305, 308, 310, 311, 312, 324, 329, 331, 332], "correctli": 6, "combin": [6, 38, 40, 49, 57, 62, 95, 125, 308, 309, 310, 328, 331, 332, 357], "experienc": 6, "problem": [6, 308, 312, 328, 331], "intel": [6, 137, 333, 335, 336, 338], "perlmutt": [6, 137, 334, 338, 357], "eigen": 6, "nvidiagpu": 6, "forg": [6, 137, 330, 357], "python": [6, 7, 8, 9, 26, 44, 51, 140, 304, 306, 308, 310, 311, 312, 329, 330, 331, 332, 338, 339, 357], "aren": [6, 11, 38, 39, 137, 308, 311, 312, 331, 362], "constraint": [6, 61, 339, 357], "alpha": [6, 132, 133, 134, 135, 136, 137, 138, 312, 331, 348], "beta": 6, "rc": 6, "remain": [6, 331, 346, 348, 355], "unaffect": 6, "brief": [6, 7, 331], "tour": 6, "login": [6, 137, 312, 334, 337, 339], "node": [6, 14, 25, 37, 38, 42, 45, 61, 91, 92, 93, 137, 156, 282, 283, 285, 286, 288, 308, 309, 311, 312, 331, 332, 333, 334, 335, 336, 337, 338, 339, 357], "bootstrap": 6, "rest": [6, 162, 277, 341, 346], "unifi": [6, 137, 312, 339], "diagnost": [6, 301, 332, 333, 334, 336, 337, 338, 339, 345, 357], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 140, 308, 310, 311, 312, 331], "cach": [6, 20, 25, 38, 40, 113, 114, 156, 330, 332, 338, 343, 357, 362], "own": [6, 7, 8, 9, 11, 12, 19, 38, 137, 140, 308, 310, 311, 312, 329, 331, 332, 345, 346, 347, 353, 354, 357, 363], "config_machin": 6, "xml": [6, 14, 115, 117, 118, 131, 324], "ey": 6, "master": [6, 289, 324, 358], "happen": [6, 9, 12, 17, 108, 308, 331, 345, 346, 347, 353, 354], "me": [6, 331], "dev_quick_start": 6, "fork": [6, 331], "haven": [6, 331], "mkdir": [6, 312], "involv": [6, 14, 286, 308, 329, 331], "coupl": [6, 328, 330], "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 140, 304, 306, 308, 309, 310, 311, 312, 331, 332, 362, 363], "stand": 6, "uupdat": 6, "releas": [6, 137, 311, 330, 338, 342, 357], "omit": [6, 308, 357], "suffix": [6, 40, 114, 308], "spack_for_mache_1": 6, "12": [6, 13, 69, 123, 281, 286, 293, 295, 301, 302, 327, 331, 334, 345, 347, 348, 353, 354, 360], "plu": [6, 329], "discov": 6, "cannot": [6, 331], "uniqu": [6, 7, 14, 137, 310, 331], "worktre": [6, 330, 331], "my": [6, 137, 334], "fetch": [6, 312, 331], "out": [6, 8, 9, 13, 57, 90, 94, 123, 137, 150, 153, 281, 306, 308, 311, 312, 332, 341, 357], "checkout": [6, 312, 331], "miniforge3": [6, 312, 331, 338, 357], "manual": [6, 14, 49, 50, 308, 310, 363], "linux": [6, 137, 312, 338], "x86_64": [6, 137], "our": [6, 137, 311, 331, 357], "found": [6, 9, 14, 126, 137, 282, 283, 311, 312, 330, 331, 333, 334, 335, 336, 337, 338, 339], "exist": [6, 7, 9, 31, 38, 41, 60, 115, 117, 119, 137, 159, 292, 299, 308, 310, 311, 312, 328, 331, 338, 362], "miniconda3": [6, 312], "pleas": [6, 137, 305, 311, 312, 331, 357], "start": [6, 7, 8, 14, 15, 86, 116, 123, 137, 281, 291, 292, 296, 304, 309, 310, 311, 330, 334, 338, 339, 342, 358, 360], "definit": [6, 14, 331], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 74, 100, 106, 113, 114, 119, 137, 140, 187, 200, 210, 236, 258, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 316, 324, 325, 327, 329, 330, 332, 338, 341, 344, 346, 351, 354, 355, 362, 363], "export": [6, 328], "conda_bas": 6, "home": [6, 18, 137, 312, 331, 332, 334, 338, 339], "readi": [6, 331, 339], "configure_polaris_env": [6, 137, 312, 328, 331, 337], "py": [6, 12, 14, 18, 66, 137, 304, 305, 311, 312, 329, 331, 332, 337], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 137, 312], "tmpdir": [6, 137], "group": [6, 7, 224, 304, 330, 333, 335, 338, 339, 351, 356, 357, 363], "spack_temp": 6, "spack_test": 6, "gnu": [6, 137, 312, 333, 334, 335, 336, 337, 338, 339, 357], "openmpi": [6, 132, 137, 312, 330, 333, 335, 336, 357], "impi": [6, 132, 137, 333, 336], "recreat": [6, 310, 312, 328], "request": [6, 7, 14, 15, 25, 32, 34, 137, 140, 150, 153, 156, 273, 274, 308, 310, 311, 312, 328, 331, 332, 345, 346, 347, 353, 354], "twice": [6, 282, 283, 331], "deploy": [6, 312, 333, 334, 335, 336, 337, 339], "prebootstrap": 6, "load": [6, 19, 108, 133, 136, 137, 138, 308, 312, 330, 331, 332, 338], "activ": [6, 19, 137, 338, 339, 357], "differ": [6, 14, 15, 17, 18, 57, 71, 76, 120, 137, 140, 163, 166, 175, 222, 224, 229, 286, 289, 292, 299, 304, 305, 306, 308, 309, 310, 311, 324, 329, 331, 332, 333, 334, 335, 336, 337, 339, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 361], "On": [6, 7, 13, 137, 312, 338], "tmp": [6, 137], "safe": [6, 14, 308, 312, 344], "strictli": [6, 13, 311, 331], "good": [6, 12, 38, 308, 312, 331], "idea": [6, 12, 331], "Be": [6, 339], "awar": [6, 7, 137, 331, 338], "with_petsc": [6, 312], "wa": [6, 8, 48, 59, 120, 137, 308, 310, 311, 312, 328, 329, 331, 332, 341, 357], "limit": [6, 19, 293, 294, 295, 301, 302, 309, 312, 344, 345, 347, 348, 353, 354], "amount": [6, 25, 35, 38, 45, 156, 308, 340, 355], "team": [6, 137, 330], "petsc_support": 6, "txt": [6, 8, 119, 309, 328], "with_albani": [6, 312], "albany_support": 6, "encount": [6, 309, 328], "error": [6, 8, 15, 38, 49, 137, 140, 143, 144, 147, 293, 294, 295, 296, 298, 300, 301, 302, 308, 310, 312, 330, 331, 345, 346, 347, 348, 353, 354], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 152, 168, 174, 192, 226, 308, 310, 311, 312, 331, 332, 357, 362, 363], "attempt": [6, 137, 330, 338], "sh": [6, 132, 133, 134, 135, 136, 137, 138, 312, 328, 331, 357], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 92, 93, 95, 103, 137, 308, 311, 312, 329, 330, 331, 334, 338, 339, 357], "pscratch": 6, "suggest": [6, 137, 328], "seem": [6, 14, 331, 334, 339], "switch": [6, 331, 332], "v0": 6, "19": 6, "submodul": [6, 289, 305, 312, 324, 331, 357], "serv": [6, 113, 114, 119, 140, 304, 331], "kind": [6, 331], "whichev": [6, 289, 324, 341], "load_dev_polaris_0": [6, 132, 133, 134, 135, 136, 137, 138, 331], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 289, 311, 312, 324, 331, 357], "pio": [6, 25, 34, 37, 156, 292, 298, 299, 300], "openmp": [6, 25, 35, 38, 45, 93, 132, 134, 135, 156, 166, 224, 250, 308, 331], "ifort": [6, 132, 134, 137, 331], "ac": [6, 331], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 331, 337, 338, 357], "job_script": [6, 331, 357], "bash": [6, 312, 328, 331, 357], "termin": [6, 8, 137, 308, 312, 331], "isn": [6, 9, 15, 293, 294, 295, 296, 301, 302, 308, 311, 331], "ll": [6, 19, 137, 311, 331, 339, 346], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 132, 134, 135, 137, 312], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 304, 308, 331, 341, 353], "util": [6, 311, 352], "matrix": 6, "automat": [6, 7, 9, 12, 14, 19, 137, 140, 308, 311, 312, 331, 332, 333, 335, 336, 338, 339, 357], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 357], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 135, 137, 140, 308, 311, 331, 337], "integr": [6, 15, 140, 175, 229, 292, 299, 311, 331, 344, 345, 346, 347, 348, 351, 353, 354, 356, 361], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 334, 357], "245": 6, "246": 6, "non": [6, 14, 18, 291, 308, 331, 345, 353, 357], "care": [6, 11, 13, 140, 304, 308, 312, 331], "temporari": [6, 137], "begin": [6, 7, 18, 292, 308, 312, 325, 330, 331, 338, 344, 346, 355], "anymor": 6, "best": [6, 17, 137, 308, 312], "hard": [6, 308, 331, 344, 355], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 62, 121, 122, 123, 150, 153, 308, 310, 331, 360], "myst": [7, 331], "tip": [7, 312], "easi": [7, 9, 40, 311, 331], "pull": [7, 137, 311, 312, 331, 332], "guid": [7, 140, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 309, 311, 331, 333, 334, 335, 336, 337, 338, 339, 342, 358], "baroclin": [7, 9, 14, 163, 164, 165, 166, 169, 172, 175, 177, 180, 181, 183, 250, 292, 305, 308, 331, 342, 349, 363], "channel": [7, 9, 14, 163, 164, 165, 166, 169, 172, 175, 177, 180, 181, 183, 250, 292, 305, 308, 328, 331, 342, 349, 363], "label": [7, 121, 122, 281, 338, 348, 357], "prepend": 7, "categori": [7, 305, 306, 307, 330, 363], "And": [7, 14, 312, 331], "becom": [7, 308, 310, 331], "who": [7, 312, 331, 332, 339], "citat": 7, "basi": [7, 331], "overview": [7, 330, 334, 339], "common": [7, 12, 14, 44, 49, 137, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 308, 309, 310, 311, 328, 329, 331, 332, 338, 339, 356, 357, 361, 362, 363], "characterist": [7, 341, 356, 361], "comment": [7, 309, 332], "appli": [7, 13, 14, 63, 291, 304, 331, 344, 355, 356, 361], "vertic": [7, 15, 19, 85, 123, 145, 146, 189, 202, 203, 212, 223, 224, 229, 238, 249, 280, 281, 282, 283, 285, 286, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 332, 340, 342], "grid": [7, 13, 17, 68, 75, 79, 82, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 140, 270, 271, 272, 273, 274, 275, 278, 279, 292, 298, 299, 300, 303, 308, 325, 331, 332], "forc": [7, 303, 327, 331, 363], "specif": [7, 9, 14, 19, 51, 137, 140, 289, 304, 305, 306, 308, 324, 325, 330, 331, 332, 334, 338, 344, 351, 356, 357, 361, 362], "public": [7, 11, 308, 331, 332], "api": [7, 12, 330, 331], "underscor": [7, 331], "md": [7, 331], "eval": 7, "rst": [7, 14, 331], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 305, 311], "compute_cell_count": [7, 140, 292, 298, 299, 300, 331], "dynamic_model_config": [7, 14, 292, 299, 331], "ot": [7, 331], "numpydoc": [7, 331], "text": [7, 8, 344, 346, 348, 355], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 19, 140, 272, 274, 275, 276, 277, 278, 279, 281, 286, 289, 298, 300, 308, 331, 332, 334, 337, 339, 341, 348, 350, 352], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 289, 332, 350, 352], "overli": [7, 331], "ic": [7, 140, 289, 310, 311, 312, 325, 327, 330, 331, 332, 334, 341, 360, 363], "shelf": [7, 140, 304, 311, 331, 332, 341], "draft": [7, 341], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 79, 80, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 140, 142, 143, 144, 145, 146, 147, 150, 152, 153, 155, 156, 159, 161, 162, 164, 165, 166, 168, 169, 172, 173, 174, 175, 177, 180, 181, 183, 185, 188, 189, 190, 192, 193, 195, 196, 198, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 218, 220, 223, 224, 226, 227, 229, 231, 233, 235, 237, 238, 239, 240, 241, 242, 244, 246, 250, 252, 254, 256, 259, 260, 261, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 298, 300, 304, 308, 310, 316, 317, 318, 320, 321, 322, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355], "xarrai": [7, 15, 17, 19, 85, 122, 123, 140, 145, 146, 189, 202, 203, 212, 238, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 308, 331], "dataarrai": [7, 85, 122, 123, 145, 146, 189, 202, 203, 212, 213, 214, 215, 238, 239, 240, 241, 273, 274, 275, 276, 277, 280, 281, 282, 283, 286, 287, 288], "sea": [7, 140, 213, 215, 239, 241, 274, 275, 276, 277, 280, 281, 286, 289, 325, 327, 330, 331, 332, 341, 350, 352, 360, 363], "surfac": [7, 140, 213, 215, 239, 241, 274, 275, 276, 277, 280, 281, 286, 289, 291, 303, 327, 331, 332, 341, 344, 350, 351, 352, 355], "height": [7, 123, 140, 213, 215, 239, 241, 274, 275, 276, 277, 281, 286, 289, 331, 332, 341, 350, 352], "mask": [7, 123, 272, 275, 278, 279, 308, 331, 332, 341], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 26, 67, 69, 70, 74, 79, 86, 96, 101, 120, 122, 123, 140, 142, 143, 144, 145, 146, 150, 153, 155, 161, 164, 165, 166, 169, 172, 175, 177, 180, 185, 188, 189, 190, 195, 198, 201, 202, 203, 204, 211, 212, 213, 214, 215, 216, 218, 220, 224, 229, 231, 235, 237, 238, 239, 240, 241, 242, 244, 246, 250, 256, 259, 260, 261, 263, 266, 281, 282, 283, 308, 310, 331], "densiti": [7, 13, 140, 331], "seawat": 7, "displac": 7, "land": [7, 140, 289, 310, 330, 331, 332, 341], "landicedraft": 7, "equal": [7, 303, 308, 311, 355], "entri": [7, 54, 86, 89, 114, 123], "line": [7, 10, 36, 38, 92, 93, 103, 123, 137, 308, 309, 311, 312, 330, 357], "type": [7, 14, 17, 18, 19, 26, 98, 105, 131, 137, 140, 143, 195, 249, 251, 281, 293, 294, 295, 301, 302, 304, 308, 310, 311, 312, 324, 328, 329, 331, 332, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 362], "side": 7, "colon": 7, "doubl": [7, 14, 140, 308, 309, 331], "back": [7, 331, 334, 357], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 92, 93, 308], "next": [7, 137, 292, 299, 331, 341, 357], "indent": [7, 308], "obviou": [7, 14, 331], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 62, 63, 65, 67, 74, 80, 84, 86, 95, 96, 97, 100, 101, 104, 106, 110, 114, 115, 119, 120, 121, 122, 123, 126, 130, 140, 142, 143, 144, 145, 146, 147, 150, 151, 153, 154, 156, 157, 161, 166, 167, 189, 191, 202, 203, 212, 217, 224, 225, 238, 239, 243, 250, 260, 275, 281, 283, 308, 310, 320, 331, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 360], "els": [7, 8, 137, 308, 310, 331], "further": [7, 304, 310, 339, 356, 361], "rais": [7, 9, 18, 38, 41, 59, 60, 140, 308, 311, 331, 348], "list_cas": 8, "list_machin": [8, 311], "list_suit": 8, "anywher": [8, 12, 137, 312], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 88, 107, 108, 111, 115, 125, 126, 130, 131, 150, 153, 213, 239, 305, 310, 311, 331], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 87, 88, 125, 140, 291, 308, 310, 331], "properti": [8, 256, 291, 308, 338, 345, 346, 347, 353, 354], "setup_suit": 8, "write": [8, 12, 13, 16, 19, 107, 125, 271, 281, 308, 310, 312, 327, 331], "proven": [8, 10, 57, 330, 332], "save": [8, 19, 59, 82, 137, 281, 292, 293, 294, 295, 296, 301, 302, 304, 308, 310, 331, 338, 343, 344], "target": [8, 11, 17, 18, 25, 40, 60, 62, 86, 96, 137, 140, 156, 292, 298, 299, 300, 308, 310, 331, 345, 346, 347, 353, 354], "minimum": [8, 62, 122, 123, 140, 144, 156, 260, 281, 292, 298, 299, 300, 308, 331, 332, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 361], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 85, 86, 123, 131, 137, 140, 160, 256, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 308, 331, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357, 361], "maximum": [8, 18, 120, 122, 123, 195, 260, 281, 331, 332, 341], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 92, 93, 96, 140, 156, 166, 224, 250, 308, 310, 331], "cpus_per_task": [8, 14, 38, 42, 45, 92, 93, 308], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 331, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 92, 93, 96, 140, 156, 166, 224, 250, 308, 331], "min_cpus_per_task": [8, 14, 38, 45, 92, 93, 308], "fewest": 8, "least": [8, 13, 305, 312, 344, 348], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 137, 140, 156, 166, 224, 250, 308, 330, 331, 332, 345, 346, 347, 348, 350, 352, 353, 354], "run_task": [8, 308, 310], "run_single_step": 8, "oper": [8, 47, 137, 171, 179, 308, 310, 362], "log": [8, 10, 19, 38, 49, 93, 120, 121, 122, 123, 308, 310, 312, 330, 357], "figur": [8, 19, 122, 123, 281, 298, 300, 303, 304, 306, 308, 332, 345, 347, 353, 354], "cpu": [8, 137, 308, 331, 337, 357], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 66, 67, 71, 74, 75, 76, 80, 81, 96, 102, 125, 140, 141, 142, 144, 145, 150, 152, 153, 156, 159, 164, 165, 166, 168, 169, 172, 173, 174, 175, 177, 180, 181, 183, 185, 188, 189, 190, 192, 193, 196, 198, 201, 202, 204, 205, 207, 209, 211, 212, 213, 216, 218, 220, 223, 224, 226, 227, 229, 231, 233, 235, 236, 237, 238, 239, 242, 244, 246, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 266, 268, 281, 298, 300, 305, 308, 310, 311, 315, 317, 318, 320, 321, 322, 331, 346, 356, 361], "retriev": [8, 328], "store": [8, 19, 51, 137, 140, 298, 300, 308, 331, 345, 347, 353, 354, 357], "case_output": [8, 12], "individu": [8, 9, 19, 305, 310, 311, 331, 338, 339, 344, 357, 363], "overal": 8, "whole": [8, 49, 162, 304, 310, 311, 331, 357], "window": 8, "update_cach": 8, "_cached_fil": [8, 308], "origin": [8, 55, 280, 282, 283, 286, 312, 331, 341, 357], "enabl": [8, 19, 303, 308, 328, 332, 339, 350, 352], "consum": [8, 308, 310, 331, 362], "faster": [8, 312], "parser": [9, 46, 53, 57, 175, 185, 198, 229, 256], "mpas_tool": [9, 12, 13, 79, 292, 298, 299, 300, 303, 308, 310, 331], "mpasconfigpars": [9, 308, 310], "polarisconfigpars": [9, 21, 38, 46, 49, 53, 59, 61, 62, 91, 94, 95, 111, 121, 122, 140, 175, 185, 198, 213, 229, 239, 256, 270, 272, 273, 274, 278, 279, 331], "certain": [9, 18, 57, 137, 308, 312, 332, 356, 361], "filepath": [9, 46, 53, 57, 140], "overridden": [9, 31, 58, 140, 159, 331], "algorithm": [9, 14, 140, 250, 292, 298, 299, 300, 308, 331], "featur": [9, 14, 311, 312, 329, 331, 332, 344, 351, 355], "accommod": [9, 25, 35, 38, 45, 92, 93, 156], "add_from_packag": [9, 140, 308, 310, 311, 331], "content": [9, 14, 114, 115, 117, 119, 131, 140, 304, 306, 308, 311, 327, 331, 357, 360], "inertial_gravity_wav": [9, 289, 297, 300, 305, 310, 350, 362], "inertialgravitywav": [9, 298, 310], "import": [9, 11, 12, 13, 15, 17, 18, 19, 140, 304, 305, 308, 310, 311, 312, 329, 331], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 66, 67, 74, 80, 96, 125, 140, 141, 142, 150, 153, 156, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 185, 188, 190, 193, 196, 198, 201, 204, 205, 207, 209, 211, 213, 216, 218, 220, 223, 224, 227, 229, 231, 233, 235, 237, 239, 242, 244, 246, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 266, 268, 304, 305, 308, 310, 311, 315, 317, 318, 320, 321, 322, 329, 331], "super": [9, 14, 17, 18, 140, 305, 308, 310, 311, 331], "cfg": [9, 51, 140, 305, 310, 311, 331, 332, 345, 347, 353, 354, 357], "except": [9, 38, 41, 59, 281, 308, 311, 331, 351, 354], "behavior": [9, 14, 110, 140, 308, 309, 312, 331], "noth": [9, 137, 328, 345, 346, 347, 353, 354], "particular": [9, 137, 280, 304, 312, 330, 334, 338, 357], "fine": [9, 310, 331, 355], "_get_basic_config": 9, "larg": [9, 308, 310, 331, 333, 353], "those": [9, 14, 49, 120, 137, 140, 292, 299, 310, 311, 312, 330, 331, 345, 346, 347, 348, 353, 354, 356, 361, 362], "configpars": [9, 92, 93], "getinteg": 9, "getfloat": [9, 12, 14, 17, 140, 308, 331], "getboolean": [9, 308, 331], "implement": [9, 305, 308, 311, 344, 345, 346, 347, 348, 350, 352, 353, 354], "getlist": [9, 310, 331], "comma": [9, 345, 346, 347, 353, 354], "integ": [9, 13], "boolean": [9, 123, 275], "etc": [9, 14, 116, 119, 305, 308, 344], "getexpress": 9, "tupl": [9, 122, 123, 281], "rang": [9, 19, 123, 331, 351], "numpi": [9, 13, 15, 68, 75, 76, 82, 86, 121, 123, 140, 162, 270, 271, 282, 283, 308, 331], "linspac": [9, 19, 346], "arang": 9, "arrai": [9, 15, 68, 75, 76, 82, 121, 140, 270, 271, 273, 274, 275, 276, 280, 287, 288, 331], "sens": [9, 330, 331], "set_shared_config": [9, 310], "intuit": 9, "resolution_to_subdir": [9, 305], "rpe": [9, 183, 305, 311, 331, 357], "resdir": [9, 305], "config_filenam": [9, 38, 49, 308, 310], "indir": [9, 25, 38, 49, 96, 156, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 223, 224, 227, 229, 231, 233, 250, 252, 254, 305, 308, 318, 320, 322], "add_task": [9, 304, 305], "most": [9, 12, 44, 137, 289, 304, 305, 308, 311, 312, 324, 331, 332, 337, 338, 339, 341, 342, 358, 363], "construct": [9, 14, 141, 270, 272, 273, 274, 278, 279, 285, 286, 291, 303, 305, 310, 315, 331, 344, 348], "bring": [9, 140, 331], "add_step": [9, 310, 331], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 166, 177, 224, 231, 292, 299, 308, 331], "baroclinic_channel_rp": 9, "viscos": [9, 14, 166, 175, 177, 224, 229, 231, 292, 299, 308, 311, 331, 344, 351], "dtype": [9, 310, 331], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 93, 156, 166, 224, 250, 308, 310, 331], "add_yaml_fil": [9, 14, 25, 140, 308, 310, 331], "One": [9, 13, 331, 357, 362], "advantag": [9, 14, 137, 310, 311, 331, 338], "track": [9, 25, 308, 310, 312], "associ": [9, 13, 14, 15, 19, 140, 272, 278, 279, 282, 283, 292, 293, 295, 299, 301, 302, 308, 310, 312, 329], "while": [10, 17, 19, 291, 292, 308, 328, 331], "meant": [10, 311, 332], "simplifi": 10, "verifi": [10, 309, 332], "io": [10, 308, 310, 311, 330, 331, 332, 342, 358], "lot": [11, 140, 308, 311, 331], "o": [11, 12, 115, 117, 131, 137, 311, 312, 331, 332, 357], "handl": [11, 12, 312, 331, 338, 348], "lower": [11, 19, 310, 331, 344], "directli": [11, 13, 14, 17, 38, 140, 306, 308, 311, 329, 330, 331, 334], "readm": [11, 310], "importlib": 11, "resourc": [11, 14, 35, 42, 45, 91, 92, 93, 151, 154, 157, 167, 191, 217, 225, 243, 250, 292, 298, 299, 300, 308, 310, 331], "global_ocean": [11, 14, 308, 310, 311, 312, 332, 357], "files_for_e3sm": [11, 308, 310, 332], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 60, 61, 62, 63, 67, 74, 80, 84, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 140, 142, 143, 144, 145, 146, 147, 150, 153, 155, 156, 161, 162, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 188, 189, 190, 193, 196, 201, 202, 203, 204, 205, 207, 211, 212, 216, 218, 220, 223, 224, 227, 229, 231, 237, 238, 242, 244, 246, 250, 252, 254, 259, 260, 261, 263, 264, 266, 268, 271, 281, 308, 310, 318, 320, 322, 331], "did": [11, 329, 331], "add_input_fil": [11, 17, 18, 39, 308, 310, 331], "collect": [11, 99, 141, 305, 307, 315, 329, 331], "whenev": [11, 308, 331], "flexibl": [11, 140, 308, 310, 312, 331], "No": [11, 330, 350, 352], "step_dir": 11, "database_root": [11, 137, 308, 332, 333, 334, 335, 336, 337, 338, 339, 357], "download_path": 11, "join": [11, 331], "bathymetry_databas": [11, 308, 332], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 275, 304, 308, 331, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 363], "url": [11, 40, 59, 308, 328, 332], "web": [11, 308, 332], "anl": [11, 308, 332], "gov": [11, 308, 328, 332, 334, 337, 339], "mpas_standalonedata": [11, 137, 332, 338], "dest_path": [11, 59], "remot": [11, 40, 312, 330], "bathymetri": [11, 280, 286, 308, 332], "strategi": [12, 333, 334, 335, 336, 337, 339], "stderr": [12, 38, 49, 308, 310], "loggingcontext": 12, "check_cal": [12, 308], "won": [12, 311, 331, 332], "logger": [12, 18, 38, 49, 66, 93, 120, 308, 310, 331], "full": [12, 38, 92, 110, 273, 274, 282, 283, 292, 308, 310, 327, 330, 331, 338, 341, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357], "although": [12, 140], "captur": [12, 351], "explicit": [12, 311], "go": [12, 46, 53, 252, 254, 304, 308, 310, 311, 312, 331, 339], "subprocess": [12, 38, 92, 93, 109, 308, 311, 328], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 140, 147, 164, 172, 180, 286, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 311, 312, 317, 327, 331, 345, 347, 350, 352, 353, 354, 357, 360], "otherwis": [12, 19, 137, 308, 310, 331, 333, 334, 335, 336, 337, 338, 339, 344], "intent": 12, "desir": [12, 13, 14, 18, 19, 120, 140, 308, 309, 310, 331, 332, 357], "trick": [12, 308], "direct": [12, 13, 14, 79, 213, 239, 292, 298, 299, 300, 331, 339, 344, 350, 351, 352], "snippet": [12, 331], "dome": [12, 66, 304, 308, 310, 357, 363], "setup_mesh": [12, 308], "setupmesh": [12, 308, 310], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 308], "landice_grid": [12, 308, 331], "l": [12, 120, 140, 331, 339], "quasiuniformsphericalmeshstep": [13, 140, 310], "icosahedralmeshstep": [13, 140, 310], "jigsaw": [13, 67, 71, 73, 74, 76, 78, 80, 185, 198, 256, 261, 266, 308, 312, 330], "complex": [13, 75, 310, 311, 331], "build_cell_width_lat_lon": [13, 74], "opt": [13, 80], "make_jigsaw_mesh": [13, 74], "icosahedr": [13, 67, 69, 155, 185, 198, 256, 261, 266, 293, 294, 295, 296, 301, 302, 310, 345, 346, 347, 348, 353, 354], "significantli": [13, 341, 348], "smooth": [13, 96, 281], "cell": [13, 14, 15, 19, 67, 68, 69, 70, 74, 75, 76, 79, 82, 85, 96, 98, 105, 123, 140, 151, 154, 156, 157, 167, 191, 213, 215, 217, 225, 239, 241, 243, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 292, 298, 299, 300, 304, 325, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 360], "quasi": [13, 74, 293, 294, 295, 296, 301, 302, 310, 332, 345, 346, 347, 348, 353, 354, 356, 361], "hand": [13, 101, 311], "restrict": [13, 331, 351, 356], "subdivis": [13, 67, 68, 69, 70, 71], "icosahedron": [13, 68, 69, 70, 71], "tabl": [13, 312, 338, 357], "approxim": [13, 67, 69, 70, 74, 140, 151, 154, 157, 167, 191, 217, 225, 243, 292, 298, 299, 300, 312, 331], "width": [13, 67, 68, 69, 74, 75, 76, 82, 123, 281, 331, 344, 351], "km": [13, 14, 67, 68, 69, 70, 74, 75, 76, 79, 82, 140, 150, 153, 155, 164, 165, 166, 169, 172, 173, 175, 177, 180, 190, 204, 216, 218, 229, 235, 242, 244, 263, 292, 293, 294, 295, 296, 298, 300, 301, 302, 308, 331, 332, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 361, 363], "5": [13, 14, 69, 122, 137, 140, 175, 229, 292, 296, 308, 309, 311, 328, 331, 332, 344, 345, 346, 347, 348, 351, 353, 354, 356, 357, 361], "240": [13, 69, 140, 293, 294, 295, 296, 301, 302, 332, 345, 346, 347, 353, 354], "6": [13, 69, 281, 282, 283, 308, 331, 342, 344, 345, 353, 355, 357, 358], "120": [13, 69, 140, 309, 345, 346, 347, 348, 353, 354], "7": [13, 69, 137, 331, 339, 345, 346, 354, 357], "60": [13, 69, 140, 293, 294, 295, 296, 301, 302, 341, 345, 346, 347, 353, 354], "8": [13, 69, 122, 137, 292, 312, 331, 332, 344, 346, 350, 352, 354, 357], "30": [13, 14, 69, 140, 304, 331, 337, 339, 344, 355, 356, 361], "9": [13, 19, 69, 137, 331, 345, 346, 347, 353, 354, 357], "15": [13, 14, 69, 292, 331, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 361], "11": [13, 69, 137, 331, 357], "3": [13, 69, 136, 137, 140, 282, 283, 292, 299, 308, 309, 312, 328, 331, 332, 338, 339, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357], "13": [13, 69, 331, 344], "94": [13, 69, 348], "spherical_mesh": [13, 75], "cell_width": [13, 67, 68, 69, 70, 74, 75, 76, 82], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 82, 121, 122, 123, 140, 142, 147, 177, 183, 196, 207, 231, 254, 268, 280, 281, 282, 283, 286, 292, 293, 294, 295, 296, 299, 301, 302, 322, 345, 346, 347, 348, 350, 351, 352, 353, 354, 360, 363], "plot_cell_width": 13, "cell_width_filenam": [13, 82], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 68, 74, 75, 76, 82, 97, 99, 101, 104, 121, 283, 293, 294, 295, 296, 301, 302, 332, 346], "lon": [13, 17, 68, 74, 75, 76, 82, 97, 99, 101, 104, 121, 283, 293, 294, 295, 296, 301, 302, 332, 346], "sphere": [13, 258, 259, 261, 263, 266, 293, 294, 295, 296, 301, 302, 345, 346, 347, 353, 354], "vtk_lat_lon": 13, "far": [13, 137, 272, 278, 279, 311, 331], "But": [13, 137, 304, 308, 311, 312, 331, 332, 338], "hexagon": [13, 79, 331, 350, 352], "planar_hex": [13, 79, 292, 298, 299, 300, 303, 308, 331], "make_planar_hex_mesh": [13, 79, 292, 298, 299, 300, 303, 308, 331], "x": [13, 19, 68, 75, 76, 79, 82, 100, 106, 123, 140, 162, 213, 239, 280, 282, 308, 331, 344, 350, 352, 355], "y": [13, 14, 19, 79, 100, 106, 123, 140, 213, 239, 280, 282, 292, 298, 299, 300, 308, 331, 339, 344, 350, 351, 352], "nx": [13, 79, 304, 308, 331, 355], "ny": [13, 79, 304, 308, 331, 355], "dc": [13, 304, 308, 331], "distanc": [13, 79, 96, 195, 282, 283, 331, 344, 351], "adjac": [13, 285, 341], "center": [13, 19, 79, 122, 195, 213, 239, 281, 282, 283, 284, 285, 304, 331, 341, 344, 351], "admittedli": 13, "oddli": 13, "period": [13, 291, 292, 293, 295, 298, 299, 300, 301, 302, 308, 331, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354], "nonperiodic_x": [13, 308, 331], "nonperiodic_i": [13, 308, 331], "consider": [13, 272, 278, 279, 291, 325], "compute_planar_hex_nx_ni": [13, 308, 331], "lx": [13, 79, 308, 331, 344, 350, 351, 352, 355], "ly": [13, 79, 308, 331, 344, 351, 355], "explan": 13, "subtleti": 13, "account": [13, 79, 312, 331, 333, 334, 336, 337, 338, 339, 357], "behav": 13, "stagger": [13, 79], "physic": [13, 79, 321, 327, 331, 341], "np": [13, 15, 19, 195, 308, 331, 346], "sqrt": [13, 15, 350], "domain": [13, 25, 32, 79, 123, 140, 156, 162, 291, 304, 325, 331, 344, 346, 348, 350, 351, 352, 355, 356, 361, 363], "extra": [13, 312, 337], "factor": [13, 96], "500e3": 13, "160e3": 13, "1e3": [13, 308, 331], "max": [13, 140, 308, 331, 341, 344, 346, 351], "int": [13, 14, 25, 26, 35, 38, 45, 61, 62, 63, 67, 68, 69, 70, 71, 79, 86, 92, 93, 96, 122, 123, 142, 143, 145, 146, 147, 151, 154, 156, 157, 166, 167, 189, 191, 202, 203, 212, 217, 224, 225, 238, 243, 250, 281, 308, 331, 355], "ds_mesh": [13, 15, 19, 85, 123, 282, 283, 285, 308, 331], "creation": [13, 308, 332], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 92, 93, 156, 304, 308, 311, 331], "distant": 13, "descend": [14, 17, 140, 293, 294, 295, 296, 298, 300, 301, 302, 304, 305, 308, 310, 311, 331], "modelstep": [14, 140, 308, 310, 331], "update_pio": [14, 25, 156], "make_graph": [14, 25, 156], "At": [14, 38, 49, 306, 307, 310, 331, 348], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 93, 156, 166, 224, 250, 305, 308, 309, 329, 331, 332, 334, 337, 339, 357, 362], "prefix": [14, 40, 137, 140, 145, 146, 189, 202, 203, 212, 238, 310, 312, 332], "end": [14, 123, 150, 153, 281, 282, 283, 308, 310, 311, 312, 327, 329, 331, 334, 344, 345, 346, 350, 352, 355, 360], "yml": 14, "reason": [14, 17, 44, 137, 308, 311, 331, 362], "add_namelist_fil": [14, 25, 140, 308, 310], "add_model_config_opt": [14, 25, 140, 308, 310, 331], "add_streams_fil": [14, 25, 140, 308, 310], "themselv": [14, 311, 330], "question": [14, 308, 332], "never": [14, 137, 329], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 140, 331], "config_run_dur": [14, 140, 310, 331], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 164, 329, 331], "config_block_decomp_file_prefix": [14, 331], "time_integr": [14, 140, 331, 345, 346, 347, 348, 353, 354], "config_time_integr": [14, 140], "rk4": [14, 140, 311, 345, 346, 347, 348, 353, 354], "filename_templ": [14, 140, 331], "restart": [14, 18, 49, 140, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 309, 311, 317, 318, 327, 329, 331, 357, 362], "output_interv": [14, 140, 331, 345, 346, 347, 348, 353, 354], "0030_00": 14, "clobber_mod": [14, 140, 331], "truncat": [14, 140, 331], "reference_tim": [14, 140], "0001": [14, 140, 331], "01_00": [14, 140, 325, 331], "tracer": [14, 19, 185, 195, 251, 252, 254, 256, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 331, 342, 346, 347, 349, 350, 352, 353, 354, 355], "xtime": [14, 15, 86, 140, 331], "normalveloc": [14, 18, 19, 140, 182, 240, 291, 292, 298, 299, 300, 303, 308, 331, 355], "layerthick": [14, 18, 140, 182, 272, 276, 277, 278, 279, 280, 292, 298, 299, 300, 303, 308, 331], "refzmid": [14, 272, 278, 279, 308, 331], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 331], "clariti": [14, 308], "global_converg": [14, 310, 331, 343], "substitut": 14, "config_write_output_on_startup": [14, 331], "0000_00": [14, 331], "config_use_mom_del2": [14, 331], "config_implicit_bottom_drag_coeff": [14, 331], "0e": [14, 352, 355], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 331], "config_cvmix_background_viscos": [14, 331], "worri": 14, "togeth": [14, 18, 137, 304, 329, 331, 362], "overkil": 14, "reli": [14, 308, 310, 331], "along": [14, 19, 137, 281, 282, 283, 292, 299, 308, 330, 331], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 88, 89, 91, 95, 96, 112, 114, 115, 121, 125, 126, 127, 140, 142, 150, 153, 159, 188, 201, 211, 237, 259, 261, 266, 308, 310, 331], "config_mom_del2": [14, 292, 299, 308, 331], "precis": [14, 140, 308, 331], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 60, 63, 109, 110, 114, 119, 120, 121, 122, 123, 127, 152, 155, 156, 168, 174, 185, 192, 198, 226, 250, 252, 254, 256, 261, 266, 280, 281, 283, 331], "possibli": [14, 38, 49, 287, 288, 305, 308, 310, 312, 331], "at_setup": [14, 30, 152, 168, 174, 192, 226, 331], "being": [14, 30, 38, 49, 109, 111, 114, 120, 137, 140, 152, 168, 174, 192, 226, 281, 308, 310, 311, 331, 341], "dt": [14, 140, 166, 250, 308, 331, 344, 345, 346, 347, 348, 350, 352, 353, 354, 356, 361], "proport": [14, 140, 331, 341, 344, 345, 346, 347, 348, 350, 352, 353, 354, 356, 361], "dt_per_km": [14, 140, 293, 294, 295, 296, 301, 302, 331, 344, 350, 352, 356, 361], "stackoverflow": [14, 60, 331], "1384565": [14, 331], "7728169": [14, 60, 331], "config_dt": [14, 140, 331], "strftime": [14, 331], "gmtime": [14, 331], "run_time_step": [14, 166, 224, 308, 331], "durat": [14, 140, 292, 298, 299, 300, 303, 309, 331], "run_second": [14, 331], "btr_dt": [14, 140, 166, 250, 308, 331, 344], "btr_dt_per_km": [14, 140, 331, 344], "config_btr_dt": [14, 140, 331], "bit": [14, 137, 311, 329, 331, 344, 357], "complic": [14, 311, 312, 331], "slightli": [14, 312], "sophist": 14, "immutable_stream": [14, 331], "var_struct": [14, 324], "var": [14, 116, 324, 331], "var_arrai": [14, 324], "tag": [14, 330], "taken": [14, 25, 156, 283, 293, 294, 295, 296, 301, 302, 308, 331, 339, 357], "past": 14, "experi": [14, 137, 311, 341], "difficult": [14, 137, 338], "synchron": [14, 330], "out_nam": 14, "equival": [14, 312, 331, 333], "template_replac": [14, 28, 29, 140], "treat": [14, 309, 311], "jinja2": [14, 28, 29, 115, 150, 153], "render": [14, 28, 29, 115], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 308, 311, 312, 332, 357], "qu240dynamicadjust": 14, "adjust": [14, 137, 140, 289, 332], "interv": [14, 15, 161, 345, 346, 347, 348, 353, 354], "spin": 14, "reus": [14, 19, 123, 308, 311, 312, 331, 332, 357], "qualit": 14, "forgotten": 14, "broken": [14, 308, 311], "immedi": [14, 66, 312, 331], "miss": [14, 308, 331, 332], "detect": [14, 19, 332, 333, 335, 336, 338, 348, 357], "gpmeti": [14, 332], "divid": [14, 19, 285, 341], "partition_graph": [14, 25, 156], "circumst": [14, 18, 38, 39, 308, 331], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 328, 331, 356, 361], "v1": [14, 341], "better": [14, 17, 137, 357], "v2": [14, 332, 341], "littl": [14, 311, 312, 330, 331], "feel": [14, 137, 308, 331], "runtime_setup": [14, 17, 35, 45, 292, 298, 299, 300, 310], "yourself": [14, 331, 338], "culler": 14, "cull": [14, 292, 298, 299, 300, 308, 331], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 82, 84, 85, 122, 123, 140, 143, 144, 145, 146, 189, 196, 202, 203, 207, 212, 238, 260, 268, 272, 278, 279, 280, 281, 282, 283, 286, 287, 288, 291, 292, 296, 298, 299, 300, 303, 331, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354], "weight": [14, 15, 17, 84, 272, 278, 279, 282, 283, 285, 286, 331, 341], "weight_field": [14, 84], "helper": [15, 304, 305], "handi": 15, "area_for_field": 15, "right": [15, 136, 137, 138, 140, 281, 310, 312, 331, 332, 341, 344, 346, 357], "edg": [15, 19, 85, 98, 101, 105, 122, 123, 213, 214, 239, 240, 282, 283, 284, 291, 331], "dimens": [15, 19, 85, 123, 140, 142, 147, 189, 202, 280, 287, 288, 303, 344], "statist": [15, 332], "calcul": [15, 298, 308, 310], "xr": [15, 19, 213, 214, 215, 239, 240, 241, 308, 331], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 146, 203], "mesh_filenam": [15, 19, 25, 84, 122, 156, 162], "open_dataset": [15, 19, 308, 331], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 86, 140, 288, 304], "get_output_field": [15, 140], "field_nam": [15, 19, 123, 144, 145, 146, 189, 202, 203, 212, 238, 260], "output_filenam": [15, 140, 150, 153, 162], "ds_out": [15, 282, 283], "time_index": [15, 86], "isel": [15, 19, 280], "frequent": [17, 289, 324], "observ": [17, 282, 283, 286, 330], "dataset": [17, 85, 86, 123, 213, 239, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 308, 331], "region": [17, 19, 330, 332], "pyremap": [17, 102], "interpol": [17, 96, 281, 282, 283, 285, 286, 287, 288, 332], "hood": 17, "esmf_regridweightgen": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 337, 341], "bilinear": [17, 96, 281, 346, 356, 361], "filenam": [17, 18, 38, 40, 41, 49, 90, 97, 98, 99, 100, 104, 105, 106, 120, 122, 126, 128, 308, 310, 312, 331], "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 332], "destin": [17, 96, 97, 98, 99, 100, 101, 102], "src_from_lon_lat": 17, "lon_var": [17, 97, 99, 104], "lat_var": [17, 97, 99, 104], "dst_from_mpa": 17, "mesh_nam": [17, 97, 98, 99, 100, 101, 104, 105, 106, 143, 145, 146, 155, 189, 196, 202, 203, 207, 212, 238, 268, 310], "qu60": 17, "subclass": [17, 71, 74, 75, 76, 81, 140, 331], "src_": 17, "dst_": 17, "pick": [17, 107, 108], "vizmap": [17, 185, 198, 256, 310], "128": [17, 309, 334, 335, 339], "cosine_bell_viz": [17, 19, 294, 346, 356, 361], "dlon": [17, 101, 346, 356, 361], "dlat": [17, 101, 346, 356, 361], "remap_method": [17, 346, 356, 361], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 101], "With": [17, 312], "approach": [17, 308, 311, 312, 328, 331, 341], "perhap": [17, 19, 41, 281, 304, 306], "cover": [17, 325, 331], "nearli": [17, 308, 310, 329, 330, 331], "workflow": [17, 308, 312], "critic": [18, 331], "easiest": [18, 137, 312], "validate_var": [18, 38, 41, 140, 150, 153, 250, 308], "meth": 18, "add_output_fil": [18, 39, 308, 310, 331], "temperatur": [18, 182, 291, 292, 299, 300, 303, 308, 327, 331, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 361], "salin": [18, 182, 291, 292, 299, 303, 308, 331, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 361], "done": [18, 35, 45, 308, 310, 312, 331, 357], "compare_vari": [18, 331], "filename1": [18, 120, 331], "filename2": [18, 120, 331], "compact": [18, 331], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 120], "valueerror": [18, 311], "quiet": [18, 109, 110, 120, 127], "report": 18, "threshold": [18, 140, 301, 345, 346, 347, 348, 350, 352, 353, 354], "l1": [18, 120], "00000000000000e": 18, "l2": [18, 120, 140, 143, 144, 293, 294, 295, 296, 301, 302, 345, 346, 347, 348, 350, 352, 353, 354], "l_infin": 18, "linf": [18, 120], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 292, 344], "2thread": [18, 344], "test_20210616": 18, "further_valid": 18, "zero": [18, 273, 274, 275, 276, 277, 280, 282, 283, 286, 291, 292, 299, 303, 331, 345, 346, 347, 353, 354, 355], "l1_norm": [18, 120], "l2_norm": [18, 120], "linf_norm": [18, 120], "nonzero": [18, 120], "solut": [18, 135, 143, 145, 146, 189, 202, 203, 212, 213, 214, 215, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 294, 296, 298, 300, 309, 328, 331, 342, 348, 349, 350], "aspect": [19, 123, 331], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 137, 156, 289, 312, 331, 332, 344, 351], "plot_horiz_field": [19, 308, 331], "patch": [19, 122, 123, 331], "polygon": 19, "character": [19, 345, 347, 351, 353, 354], "accordingli": [19, 94], "cell_mask": [19, 123], "ds_init": [19, 331], "maxlevelcel": [19, 140, 272, 273, 274, 275, 276, 277, 278, 279, 331], "final_normalveloc": [19, 331], "t_index": [19, 123, 331], "vmin": [19, 123, 281, 331, 346], "max_veloc": [19, 331], "vmax": [19, 123, 281, 331, 346], "cmap": [19, 123, 281, 308, 331], "cmo": [19, 308, 331, 345, 347, 348, 353, 354], "balanc": [19, 198, 296, 308, 331, 345, 347, 348, 353, 354], "show_patch_edg": [19, 123, 308, 331], "water": [19, 296, 298, 331, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356], "column": [19, 248, 249, 251, 252, 254, 296, 303, 312, 316, 317, 318, 320, 321, 322, 324, 325, 327, 341, 342, 348, 349, 357, 358, 359], "increas": [19, 140, 311], "effici": [19, 308, 331], "patch_mask": [19, 123], "subsequ": [19, 308, 362], "ncell": [19, 140, 189, 202, 280, 287, 288, 308, 331], "nedg": [19, 308, 331], "cell_patch": 19, "cell_patch_mask": 19, "out_file_nam": [19, 123], "720": 19, "figsiz": [19, 122, 123, 281], "bottomdepth": [19, 140, 272, 273, 275, 276, 277, 278, 279, 308, 331, 341, 348], "edge_patch": 19, "edge_patch_mask": 19, "plot_global_mpas_field": 19, "cmocean": [19, 308, 331], "noqa": [19, 66, 308, 331], "f401": [19, 308, 331], "da": [19, 122, 287, 288], "tracer1": [19, 140, 345, 347, 353, 354], "nvertlevel": [19, 123, 140, 142, 147, 272, 278, 279, 280, 287, 288, 308, 331, 341], "out_filenam": [19, 118, 121, 122, 271, 281], "colormap_sect": [19, 121, 122], "titl": [19, 121, 122, 123, 140, 142, 147, 281], "plot_land": [19, 121, 122], "central_longitud": [19, 122], "180": [19, 68, 75, 76, 82, 101, 140, 285, 345, 346, 347, 353, 354], "disabl": [19, 291, 346, 363], "contin": [19, 121, 122], "overlain": 19, "degre": [19, 68, 75, 76, 82, 101, 280, 283, 285, 332, 344, 351], "quantiti": 19, "antimeridian": 19, "colormap": [19, 121, 122, 123, 281, 293, 294, 295, 296, 301, 302, 331, 345, 346, 347, 348, 353, 354], "cosin": [19, 140, 185, 187, 188, 190, 193, 195, 196, 204, 207, 264, 268, 294, 310, 331, 342, 343, 345, 347, 348, 349, 353, 354, 356, 361], "bell": [19, 140, 185, 187, 188, 190, 193, 195, 196, 204, 207, 264, 268, 294, 310, 331, 342, 343, 345, 347, 348, 349, 353, 354, 356, 361], "converg": [19, 185, 189, 198, 202, 203, 209, 210, 212, 235, 236, 238, 260, 293, 294, 295, 296, 298, 300, 301, 302, 306, 309, 330, 331, 345, 346, 347, 348, 350, 353, 354, 356, 361], "colormap_nam": [19, 121, 122, 293, 294, 295, 301, 302, 345, 346, 347, 348, 353, 354], "viridi": [19, 293, 294, 295, 301, 302, 331, 345, 346, 347, 353, 354], "norm": [19, 120, 121, 122, 140, 144, 147, 293, 294, 295, 296, 301, 302, 345, 346, 347, 348, 350, 352, 353, 354], "norm_typ": [19, 121, 122, 293, 294, 295, 301, 302, 345, 346, 347, 348, 353, 354], "colorbar": [19, 121, 122, 123, 281, 293, 294, 295, 301, 302, 345, 346, 347, 348, 353, 354], "colorbar_limit": [19, 122, 293, 294, 295, 301, 302, 345, 347, 348, 353, 354], "standard": [19, 223, 224, 229, 299, 311, 312, 321, 331, 334, 351, 357], "logarithm": [19, 123], "upper": [19, 123], "bound": [19, 286, 298, 300], "plot_global_lat_lon_field": 19, "norm_arg": [19, 121, 346], "tick": [19, 121, 346], "mark": [19, 123, 281, 312, 346], "colorbar_tick": [19, 121, 346], "symlog": [19, 121], "symmetr": 19, "central": [19, 346], "color": [19, 122, 123, 281], "normal": [19, 213, 214, 239, 240, 291, 296, 308, 309, 312, 331, 338, 348], "symlognorm": 19, "lognorm": 19, "hous": [20, 345, 346, 347, 353, 354], "kei": [20, 49, 114, 140, 142, 310], "max_memori": [25, 35, 38, 45, 156, 308], "graph_filenam": [25, 84, 150, 153, 156], "make_yaml": 25, "stride": [25, 37, 156], "partit": [25, 34, 44, 61, 84, 156, 292, 298, 299, 300, 308, 332, 333, 334, 335, 336, 337, 357], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 96, 156, 166, 224, 250, 308], "nor": [25, 38, 49, 96, 156, 166, 224, 250, 308, 331], "append": [25, 38, 40, 49, 96, 156, 164, 165, 166, 169, 172, 173, 175, 177, 180, 181, 183, 223, 224, 227, 229, 231, 250, 308, 318, 320, 322], "ideal": [25, 35, 38, 45, 92, 93, 96, 140, 156, 166, 224, 250, 251, 252, 254, 304, 308, 311, 330, 331, 332, 363], "fewer": [25, 35, 38, 45, 92, 93, 156, 166, 224, 250, 308, 331, 357], "memori": [25, 35, 38, 45, 156, 308, 332], "mb": [25, 35, 38, 45, 156, 308, 332], "placehold": [25, 35, 38, 45, 156, 308, 357], "diverg": [31, 159, 295, 342, 345, 348, 349, 353], "counterpart": [31, 140, 159], "nest": [31, 125, 127, 159], "graph_fil": 32, "run_as_subprocess": [38, 308], "smallest": [38, 308, 329, 341, 363], "unit": [38, 97, 101, 104, 308, 329, 344, 363], "term": [38, 329, 331, 350, 352], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 308, 310, 357], "finish": [38, 39, 81, 308, 331], "known": [38, 39, 137, 294, 308, 331], "suffici": [38, 308, 351], "establish": [38, 39, 308], "has_shared_config": 38, "is_depend": [38, 308], "machine_info": [38, 308], "machineinfo": 38, "base_work_dir": [38, 49, 111, 308, 310], "log_filenam": [38, 49, 308, 310], "redirect": [38, 308], "extern": [38, 137, 289, 305, 308, 310, 324, 342, 358], "turn": [38, 56, 305, 308, 328, 331, 355], "access": [39, 310, 311, 312, 331, 333, 338, 339], "database_compon": [40, 308], "work_dir_target": [40, 308], "come": [40, 137, 308, 312, 331, 333, 334, 335, 336, 337, 338, 339, 342], "_database_root": 40, "available_resourc": [42, 91], "constrain": [42, 151, 154, 157, 167, 191, 217, 225, 243, 292, 298, 299, 300, 308, 331], "cores_per_nod": [42, 91, 94, 137, 332, 333, 334, 335, 336, 337, 338, 339, 357], "everi": [43, 292, 308, 310, 311, 327, 328, 329, 331, 344, 355], "child": [43, 140, 305, 308, 310, 311], "subtask": 45, "step_symlink": [49, 310], "outsid": [49, 50, 304, 306, 308, 310, 312], "stdout_logg": [49, 310], "goe": [49, 308, 310, 331], "regardless": [49, 310], "new_step_log_fil": [49, 310], "run_by_default": [50, 310], "assum": [51, 115, 126, 137, 312, 331, 339, 344], "prior": [51, 308], "step_path": 55, "variant": [55, 187, 200, 256, 258, 292, 299, 304, 309, 311, 312, 331, 338, 341, 344, 345, 346, 347, 351, 353, 354], "uncach": 55, "datestamp": 55, "yymmdd": [55, 332], "dry": [55, 309], "meta": 57, "empti": [57, 281, 308, 311, 312, 329, 331], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 110, 312], "isadirectoryerror": 60, "qo": [61, 333, 334, 336, 338, 339, 357], "qualiti": [61, 333, 334, 336, 338, 339, 357], "servic": [61, 333, 334, 336, 338, 339, 357], "wall_tim": [61, 357], "wall": [61, 357], "target_cor": 62, "min_cor": 62, "decomposition_test": [66, 304, 357], "decompositiontest": [66, 304], "e501": [66, 331], "turquois": [66, 334], "usr": [66, 137, 334, 357], "climat": [66, 333, 334, 335, 338, 357], "mhoffman": 66, "constant": [67, 74, 75, 140, 281, 282, 283, 291, 302, 331, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 361], "latitud": [68, 75, 97, 99, 101, 104, 121, 122, 140, 280, 283, 345, 346, 347, 348, 353, 356, 361], "longitud": [68, 75, 76, 82, 97, 99, 101, 104, 121, 122, 140, 280, 283, 345, 346, 347, 348, 353, 356, 361], "ndarrai": [68, 75, 76, 82, 86, 121, 123, 162, 195, 270, 271, 331], "length": [68, 75, 76, 82, 351], "90": [68, 75, 76, 82, 140, 308, 345, 346, 347, 353, 354], "static": [69, 70], "rule": 69, "thumb": 69, "achiev": [70, 309], "uniform": [74, 79, 150, 153, 190, 204, 263, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 310, 331, 332, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 361], "natur": 79, "jigsawpi": [80, 308], "jigsaw_jig_t": 80, "area": [85, 282, 283, 331], "dt_target": 86, "start_xtim": 86, "char": 86, "defaults_filenam": 87, "total": [91, 308, 309, 311, 331, 332, 334, 357], "substep": [92, 93], "command_line_arg": 92, "cpus_per_nod": 94, "map_filenam": 96, "src_grid_info": 96, "dst_grid_info": 96, "neareststod": [96, 346, 356, 361], "conserv": [96, 346, 356, 361], "expand_dist": 96, "meter": [96, 195, 270, 271, 283, 345, 347, 353], "expand": [96, 140, 341], "expand_factor": 96, "src_mesh_filenam": 96, "scrip": [96, 136, 138, 332], "dst_mesh_filenam": 96, "map_": 96, "source_typ": 96, "_": [96, 137, 308, 310, 312, 331, 351, 355], "dest_typ": 96, "1d": [97, 101, 104, 121, 140, 270, 271, 272, 273, 274, 275, 276, 278, 279], "2d": [97, 101, 104, 121, 286, 293], "5x0": [97, 101, 104], "5degre": [97, 101, 104], "coordin": [97, 99, 100, 104, 106, 121, 123, 213, 239, 272, 278, 279, 280, 282, 283, 285, 286, 340, 342, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 360], "mesh_typ": [98, 105, 304, 308, 310], "vertex": [98, 105], "x_var": [100, 106], "y_var": [100, 106], "proj_attr": [100, 106], "proj_str": [100, 106], "proj": [100, 106, 337], "left": [101, 140, 281, 331, 341, 344, 346], "remapp": [102, 103], "remap_fil": 102, "progress": [109, 110], "is_task": 110, "steps_to_skip": 110, "component_nam": 111, "config_filepath": 111, "unpickl": [112, 308], "cached_step": 113, "identifi": [113, 137, 305, 324, 363], "task_list": 114, "_all": 114, "streams_filenam": 115, "lxml": [115, 117, 131], "etre": [115, 117, 131], "new_child": 116, "children": 116, "sub": [116, 331], "new_tre": 117, "infin": [120, 345, 347, 353, 354], "toler": 120, "data_arrai": 121, "colorbar_label": [121, 122, 281], "subtitl": [121, 122], "dpi": [122, 281], "200": [122, 140, 281, 298, 300, 331, 344, 350, 352, 355], "patch_edge_color": 122, "horizont": [122, 123, 140, 162, 280, 281, 286, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 344, 345, 347, 350, 351, 352, 353, 354, 355], "inch": [122, 123, 281], "dot": [122, 123, 281, 311], "face": 122, "ax": [123, 281], "z_index": 123, "cmap_set_und": 123, "cmap_set_ov": 123, "cmap_scal": 123, "cmap_titl": 123, "vert_dim": 123, "transect_x": 123, "transect_i": 123, "transect_color": 123, "black": [123, 281], "transect_start": 123, "red": [123, 281, 306], "transect_end": 123, "green": [123, 281, 306], "transect_linewidth": 123, "transect_markers": 123, "depth": [123, 140, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 286, 331, 332, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356], "slice": [123, 143], "fieldnam": 123, "matplotlib": [123, 124, 281, 331], "multi": [123, 281], "panel": [123, 281], "visibl": 123, "bar": 123, "ratio": 123, "Not": 123, "transect": [123, 140, 280, 281, 332], "marker": 123, "style": [124, 140, 330, 331], "classmethod": 126, "jinja": [126, 140, 293, 294, 295, 301, 302], "namelist_templ": 130, "polarisyaml": [130, 131], "processed_registry_filenam": 131, "registri": [131, 291, 324], "steam": 131, "1_anvil_intel_impi": [132, 137], "ve": [132, 133, 134, 135, 136, 138, 312, 331], "1_anvil_gnu_openmpi": 132, "1_chicoma": 133, "cpu_gnu_mpich": [133, 138], "crai": [133, 136, 137, 138, 337, 339], "1_chrysalis_intel_openmpi": 134, "1_chrysalis_gnu_openmpi": 134, "soon": [135, 137, 331, 357], "1_compy_intel_impi": 135, "1_compy_gnu_openmpi": 135, "1_frontier_gnu_mpich": 136, "1_frontier_crayclang_mpich": 136, "load_polaris_env": [137, 312, 331, 357], "therefor": [137, 308, 329, 331], "chicoma": [137, 338, 357], "mpich": [137, 312, 330, 334, 337, 339, 357], "compi": [137, 336, 357], "frontier": [137, 338], "crayclang": [137, 337], "pm": [137, 339, 357], "compymcnodefac": [137, 338], "pretti": [137, 308, 311, 331, 332], "conda_path": [137, 312], "osx": [137, 338], "clang": [137, 312], "1_": 137, "morpheu": 137, "cobalt": [137, 333, 334, 335, 336, 337, 338, 339], "single_nod": [137, 332, 333, 334, 335, 336, 337, 338, 339, 357], "mpirun": [137, 328, 332, 333, 334, 335, 336, 337, 338, 339, 357], "srun": [137, 308, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 357], "parallel_execut": [137, 328, 332, 333, 334, 335, 336, 337, 338, 339, 357], "modules_befor": [137, 334, 337, 339], "modules_aft": [137, 334, 337, 339], "polaris_env": [137, 333, 334, 335, 336, 337, 338, 339], "deploi": [137, 312, 330, 333, 334, 335, 336, 337, 338, 339], "mpi_gnu": [137, 333, 334, 335, 336, 337, 338, 339], "hdf5": [137, 333, 334, 335, 336, 337, 338, 339], "use_e3sm_hdf5_netcdf": [137, 333, 334, 335, 336, 337, 338, 339], "discoveri": 137, "hostnam": 137, "hostname_contain": 137, "queu": 137, "laptop": [137, 312, 331, 332], "workstat": [137, 312], "high": [137, 308, 335, 338], "hpc": [137, 312, 334, 338], "safest": [137, 312], "mpi_": 137, "simpl": [137, 140, 311, 324, 331, 357], "compiler_gnu": 137, "compiler_intel": 137, "hopefulli": [137, 332], "parlanc": 137, "concret": 137, "ubuntu": 137, "spec": [137, 328, 339], "gcc": 137, "curl": 137, "81": 137, "buildabl": 137, "install_missing_compil": 137, "cc": [137, 337], "bin": [137, 312, 339, 357], "cxx": 137, "f77": 137, "fc": 137, "operating_system": 137, "ubuntu22": 137, "04": 137, "extra_rpath": 137, "luck": 137, "catch": [137, 309, 312], "22": 137, "guess": [137, 331], "correct": [137, 312], "potenti": [137, 162, 175, 229, 308, 331, 344, 351], "purg": 137, "perl": 137, "32": [137, 309, 357], "bsnc6lt": 137, "ugetvbp": 137, "sxfyy4k": 137, "2020": 137, "304": 137, "n3b5fye": 137, "j3zxncu": 137, "7ohuiwq": 137, "k2zu3y5": 137, "mirrcz7": 137, "variou": [137, 248, 308, 312, 316], "ask": 137, "gb": 137, "minut": [137, 292, 309, 344, 351, 362], "hour": [137, 140, 298, 300, 309, 327, 334, 339, 345, 346, 347, 348, 350, 352, 353, 354, 357, 360], "zlib": 137, "incompat": 137, "ubuntu20": 137, "readlin": 137, "pkgconf": 137, "spackdir": 137, "env": [137, 339], "arch": 137, "repositori": [137, 306, 330, 331, 357], "x86_64_v4": 137, "free": [137, 291, 331, 332], "touch": [137, 282, 283, 312], "everyth": 137, "1_pm": 138, "cpu_intel_mpich": 138, "ever": [140, 311], "oceanmodelstep": [140, 308, 331], "decid": [140, 331], "veri": [140, 305, 308, 311, 312, 324, 331, 348, 355], "earli": [140, 342, 357], "stage": [140, 291, 308, 310, 312, 320, 327, 342, 357], "map_yaml_to_namelist": 140, "heurist": 140, "round": [140, 345, 346, 347, 353, 354], "cell_count": [140, 151, 154, 157, 167, 191, 217, 225, 243, 331], "goal_cells_per_cor": [140, 331, 345, 346, 347, 350, 351, 352, 353, 354, 356, 361], "pinch": 140, "2000": [140, 304, 325, 327, 331, 360], "max_cells_per_cor": [140, 331, 345, 346, 347, 350, 351, 352, 353, 354, 356, 361], "seciton": 140, "control": [140, 293, 294, 295, 296, 301, 302, 308, 332, 344, 345, 346, 347, 353, 354, 355, 357], "scale": [140, 344, 353, 357], "tri": [140, 311], "apport": 140, "dai": [140, 161, 175, 229, 292, 293, 294, 295, 296, 299, 301, 302, 303, 327, 331, 344, 345, 346, 347, 348, 351, 353, 354, 355, 360], "form": [140, 299, 351, 363], "dddd_hh": [140, 161], "ss": [140, 161], "get_time_interval_str": 140, "run_dur": [140, 345, 346, 347, 348, 353, 354], "fill": 140, "dt_str": 140, "run_duration_str": 140, "output_interval_str": 140, "yaml_filenam": [140, 150, 153], "caviti": [140, 311, 331, 332, 341], "frazil": 140, "flux": [140, 291, 299, 351, 355], "fix": [140, 331], "add_spherical_base_mesh_step": [140, 310], "spherical_converg": [140, 296, 310, 345, 346, 347, 353, 354], "icos_resolut": [140, 345, 346, 347, 353, 354], "480": [140, 345, 346, 347, 353, 354], "qu_resolut": [140, 345, 346, 347, 353, 354], "150": [140, 345, 346, 347, 351, 353, 354], "210": [140, 341, 345, 346, 347, 353, 354], "evalu": [140, 143, 144, 145, 146, 189, 202, 203, 212, 214, 215, 238, 240, 241, 260, 293, 295, 301, 302, 345, 346, 347, 348, 353, 354], "convergence_eval_tim": [140, 345, 346, 347, 348, 353, 354], "24": [140, 294, 346, 360], "convergence_thresh": [140, 346], "error_typ": [140, 143, 144, 345, 346, 347, 348, 353, 354], "convergence_forward": [140, 293, 294, 295, 301, 302, 346, 348], "split_explicit": [140, 345, 346, 347, 348, 353, 354], "rk4_dt_per_km": [140, 345, 346, 347, 348, 353, 354], "split": [140, 311], "split_dt_per_km": 140, "barotrop": [140, 166, 250, 308, 331, 344, 355], "simul": [140, 298, 300, 308, 329, 331, 343, 344, 345, 348, 350, 352, 356, 357, 361], "numer": [140, 293, 295, 301, 302, 345, 347, 350, 352, 353, 354], "infti": [140, 341], "inf": [140, 143, 144, 348], "infrastructur": [140, 311, 331], "add_cosine_bell_task": [140, 305], "sphericalconvergenceforward": [140, 293, 294, 295, 296, 301, 302], "invok": 140, "analyz": [140, 142, 188, 201, 259, 261, 266, 331, 345, 346, 347, 353, 354], "split_explicit_t": [140, 331], "convergenceforward": [140, 298, 300], "convergenceanalysi": [140, 293, 294, 295, 296, 298, 300, 301, 302], "convergence_var": [140, 142], "zidx": [140, 142, 143, 145, 146, 147, 189, 202, 203, 212, 238], "exact_solut": 140, "state": [140, 145, 162, 164, 165, 172, 175, 180, 189, 202, 212, 223, 229, 238, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 309, 331, 346, 348], "put": [140, 312, 331], "grid_1d": 140, "generate_1d_grid": 140, "vertical_grid": [140, 270, 272, 278, 279, 304, 308, 331, 332, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "z": [140, 142, 143, 145, 146, 147, 189, 202, 203, 212, 238, 273, 274, 275, 276, 277, 278, 279, 331, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "star": [140, 277, 279, 331, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "init_vertical_coord": [140, 308, 331], "minlevelcel": [140, 272, 274, 275, 276, 277, 278, 279, 331], "cellmask": [140, 272, 275, 278, 279, 331], "zmid": [140, 272, 278, 279, 331], "restingthick": [140, 272, 277, 278, 279, 331], "entir": [140, 331, 344, 351, 362], "petersen": [140, 312, 331, 344], "et": [140, 331, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354], "al": [140, 331, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354], "2015": [140, 331, 344], "int_": 140, "rho": 140, "dv": 140, "sort": [140, 305, 306, 311, 312], "compute_rp": [140, 331], "csv": [140, 293, 294, 295, 296, 301, 302, 331], "compute_transect": [140, 281], "plot_transect": [140, 280], "dependencies_dict": 142, "rate": [142, 144, 145, 189, 202, 212, 238, 260, 293, 294, 295, 296, 298, 300, 301, 302, 331, 345, 346, 347, 348, 350, 352, 353, 354, 355], "variable_nam": [143, 147], "exact": [143, 145, 146, 189, 202, 203, 212, 213, 214, 215, 238, 239, 240, 241, 294, 296, 298, 300, 311, 350, 352], "conv_thresh": [144, 260, 350, 352], "deriv": [145, 212, 238], "subdivid": [155, 282, 283, 310], "dynamic_ntask": 156, "dynam": [156, 289, 303, 332, 344, 345, 346, 347, 348, 353, 354, 355, 356], "available_cor": 158, "estim": [158, 160, 331], "time_str": 161, "initial_state_filenam": 162, "energi": [162, 175, 229, 330, 331, 344, 351], "len": [162, 331], "output_fil": [162, 308, 331], "shorter": [172, 309, 317], "step_subdir": [181, 318], "processor": [181, 308, 318, 344], "include_viz": [185, 198, 256, 310], "advect": [185, 223, 224, 229, 256, 293, 294, 295, 296, 299, 301, 302, 345, 346, 347, 350, 351, 352, 353, 354, 355], "less": [185, 198, 256, 261, 266, 308, 341], "max_valu": 195, "ri": 195, "accord": [195, 348, 350, 352, 357], "radiu": [195, 283, 345, 346, 347, 353, 354], "testcas": [206, 233, 331, 332, 344, 355, 357], "inerti": [209, 210, 211, 213, 216, 218, 220, 298, 310, 342, 349], "graviti": [209, 210, 211, 213, 216, 218, 220, 298, 310, 342, 349], "wave": [209, 210, 211, 213, 216, 218, 220, 222, 223, 224, 227, 229, 231, 233, 239, 298, 299, 308, 310, 331, 342, 344, 349, 352], "analys": [211, 237], "angleedg": [213, 239], "angl": [213, 239, 348], "posit": [213, 239, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 331, 341, 355], "xcell": [213, 239, 308, 331], "ycell": [213, 239, 308, 331], "xedg": [213, 239, 308, 331], "yedg": [213, 239], "f0": 213, "corioli": [213, 298, 300, 331, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355], "eta0": [213, 239], "amplitid": [213, 239], "kx": [213, 239], "ky": [213, 239], "angular": [213, 239], "frequenc": [213, 239, 292], "veloc": [214, 240, 291, 292, 296, 298, 299, 300, 310, 312, 331, 345, 346, 347, 348, 353, 354, 355, 357], "norm_vel": 214, "eta": [215, 241, 350, 352], "taskdir": [218, 220, 244, 246], "vadv_method": [223, 224, 229], "vlr": [223, 224, 229, 299, 351], "cross": [233, 331], "test_cas": 233, "manufactur": [235, 236, 237, 239, 242, 244, 246, 300, 342, 349], "mix": [249, 304, 305, 345, 350, 352, 355], "param": [249, 251], "resources_fix": 250, "ag": [251, 252, 254], "evolv": [251, 330, 341, 345, 346, 347, 353, 354, 355], "ideal_ag": [252, 254], "case_nam": [256, 259, 261, 263, 264, 266], "transport": [258, 259, 261, 263, 266, 293, 295, 301, 302, 345, 346, 347, 353, 354], "nondivergent_2d": [258, 289, 297, 353], "divergent_2d": [258, 289, 297, 347], "correlated_tracers_2d": [258, 289, 297, 345], "rotation_2d": [258, 289, 297, 354], "layer": [270, 271, 272, 276, 277, 278, 279, 280, 281, 286, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 331, 332, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "bottom": [272, 273, 274, 275, 276, 277, 278, 279, 291, 331, 332, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356], "thick": [272, 276, 277, 278, 279, 280, 286, 292, 293, 295, 296, 299, 301, 302, 303, 325, 331, 332, 341, 344, 345, 347, 348, 350, 353, 354, 360], "stretch": [272, 278, 279, 331, 341], "elev": [272, 278, 279, 331, 341], "midpoint": [272, 278, 279, 331], "reftopdepth": [272, 275, 276, 278, 279, 331], "down": [272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 331, 341, 346], "ref": [272, 278, 279, 331], "middl": [272, 278, 279, 281, 331], "refbottomdepth": [272, 273, 274, 275, 276, 278, 279, 308, 331], "refinterfac": [272, 278, 279, 331], "element": [272, 278, 279, 331], "vertcoordmovementweight": [272, 278, 279, 331], "movement": [272, 278, 279, 331], "alter": [273, 274, 308, 310, 330, 331, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356], "partial": [273, 274, 331, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "seafloor": [273, 275, 276, 277, 280, 281, 286, 341], "min_vert_level": [275, 341], "min_layer_thick": [275, 332, 341], "unstretch": 277, "ds_horiz_mesh": 280, "layer_thick": [280, 286], "bottom_depth": [280, 286, 308, 331, 332, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356], "min_level_cel": [280, 286], "max_level_cel": [280, 286], "quad": 280, "intersect": [280, 282, 283, 284], "instant": 280, "tidx": 280, "ds_transect": [280, 281, 286, 287, 288], "vert": 280, "find_transect_levels_and_weight": [280, 287, 288], "mpas_field": 281, "flat": [281, 341, 344, 348], "outline_color": 281, "ssh_color": 281, "seafloor_color": 281, "interface_color": 281, "cell_boundary_color": 281, "linewidth": 281, "color_start_and_end": 281, "start_color": 281, "end_color": 281, "3d": 281, "outlin": 281, "boundari": [281, 286, 330, 344, 351, 363], "inset": 281, "axi": [281, 308, 331, 354], "plot_start_end": 281, "x_transect": 282, "y_transect": 282, "ds_tri": [282, 283, 284, 285], "subdivision_r": [282, 283], "10000": [282, 283, 350, 352], "triangl": [282, 283, 284, 285, 286], "segment": [282, 283, 284, 286], "mesh_to_triangl": [282, 283, 284], "scipi": [282, 283, 284, 332], "spatial": [282, 283, 284, 355], "ckdtree": [282, 283, 284], "make_triangle_tre": [282, 283], "candid": [282, 283], "enough": [282, 283, 284, 292, 299, 308, 311, 331], "curvatur": [282, 283], "lie": [282, 283], "purposefulli": [282, 283], "repeat": [282, 283], "discontinu": [282, 283, 347, 353, 354], "xnode": [282, 285], "ynode": [282, 285], "dnode": [282, 283], "horiztriangleindic": [282, 283], "horiztrianglenodeindic": [282, 283], "mod": [282, 283], "horizcellindic": [282, 283], "interphorizcellindic": [282, 283], "interphorizcellweight": [282, 283], "averag": [282, 283], "xtransect": 282, "ytransect": 282, "dtransect": [282, 283], "transectindicesonhoriznod": [282, 283], "transectweightsonhoriznod": [282, 283], "nodevalu": [282, 283], "transectvalu": [282, 283], "lon_transect": 283, "lat_transect": 283, "earth_radiu": 283, "radian": [283, 285], "earth": [283, 330], "sphere_radiu": 283, "cartesian": [283, 285, 354], "xcartnod": 283, "ycartnod": 283, "zcartnod": 283, "lonnod": [283, 285], "latnod": [283, 285], "lontransect": 283, "lattransect": 283, "xcarttransect": 283, "ycarttransect": 283, "zcarttransect": 283, "great": [283, 331], "circl": 283, "kd": 284, "connect": [285, 331, 339], "pair": [285, 345, 347, 353, 354, 360], "tricellindic": 285, "nodecellindic": 285, "nodecellweight": 285, "znode": 285, "counterclockwis": 285, "wind": [285, 348, 355], "ds_horiz_transect": 286, "horiz": 286, "find_spherical_transect_cells_and_weight": 286, "find_planar_transect_cells_and_weight": 286, "transectz": 286, "bilinearli": 286, "nsegment": [286, 287], "nhalflevel": [286, 287], "quadrilater": 286, "nhoriznod": [286, 288], "nvertnod": [286, 288], "corner": 286, "validcel": 286, "validnod": 286, "ztransectnod": 286, "zseafloor": 286, "floor": [286, 341], "cellindic": 286, "levelindic": 286, "interpcellindic": 286, "interplevelindic": 286, "nhorizweight": 286, "nvertweight": 286, "interpcellweight": 286, "multipli": [286, 345, 346, 347, 348, 353, 354], "dinterfaceseg": 286, "zinterfaceseg": 286, "dcellboundari": 286, "zcellboundari": 286, "interp_mpas_to_transect_cel": 286, "interp_mpas_to_transect_nod": 286, "among": [287, 288, 304, 306, 312, 331], "da_cel": 287, "whatev": [287, 288, 357], "besid": [287, 288], "linearli": 288, "neighbor": 288, "da_nod": 288, "shelv": [289, 332, 341], "ssh_adjust": [289, 308, 332], "compass_branch": 289, "example_compact": [289, 305, 324, 332], "default_input": [289, 305, 324, 331, 332], "ocean_model": [289, 312, 332], "latest": [289, 312, 324, 330, 342, 357], "compat": [289, 312, 324, 328, 330], "verison": 289, "geostroph": [289, 297, 342, 349], "internal_wav": [289, 297, 351], "manufactured_solut": [289, 297, 305, 352], "single_column": [289, 297, 305, 324, 326, 355], "minim": 291, "fcell": [291, 308, 331, 345, 346, 347, 353, 354], "fedg": [291, 308, 331, 345, 346, 347, 353, 354], "fvertex": [291, 308, 331, 345, 346, 347, 353, 354], "slip": 291, "solid": [291, 325, 344, 346, 351], "tangenti": 291, "nonperiod": 291, "drag": [291, 293, 294, 295, 296, 301, 302], "mass": 291, "momentum": [291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 350, 352], "scalar": 291, "rigid": [291, 354], "solv": [291, 328, 341], "mid": [291, 344, 353], "vari": [291, 293, 294, 295, 296, 301, 302, 308, 328, 338, 341, 346, 348], "consult": [291, 331], "tidal_forc": 291, "eddi": [292, 344], "addition": [292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 333, 334, 335, 336, 337, 339], "diffus": [292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303], "50": [292, 298, 299, 300, 331, 344, 350, 352, 355], "prescrib": [292, 298, 299, 300, 348], "intens": [292, 299], "sphere_transport": [293, 295, 301, 302, 345, 347, 353, 354], "spheretransport": [293, 295, 301, 302], "deform": [293, 301, 353], "flow": [293, 295, 301, 302, 344, 345, 346, 347, 348, 353, 354], "distribut": [293, 294, 295, 301, 302, 345, 347, 353, 354], "scheme": [293, 295, 299, 301, 302, 345, 351, 353, 355], "correlated_trac": 293, "differenti": [293, 295, 301, 302], "convergence_": [293, 295, 301, 302], "mixinganalysi": 293, "relationship": [293, 345], "correl": [293, 342, 349], "triplot": 293, "fast": [293, 294, 295, 296, 301, 302, 331], "sphere_transport_viz_": [293, 295, 301, 302], "cosinebel": [294, 310], "shape": [294, 346], "blob": 294, "around": [294, 331, 332, 344, 345, 346, 347, 351, 353, 354], "convergence_tracer1": 294, "convergence_h": 296, "convergence_normalveloc": 296, "shallow": [298, 312, 345, 346, 347, 348, 350, 352, 353, 354, 356], "100": [298, 300, 303, 341, 350, 352, 355], "25": [298, 300, 345, 347, 350, 352, 353, 354, 355], "exactsolut": [298, 300], "obtain": [298, 300, 312, 334], "normal_veloc": [298, 300, 308, 331], "assign": [298, 300, 346], "fall": [298, 300, 357], "accept": [298, 300], "5km": [299, 351], "lagrangian": [299, 351], "manufacturedsolut": 300, "nondiverg": [301, 342, 349], "filamentanalysi": 301, "filament": [301, 353], "rotat": [302, 342, 345, 346, 347, 349, 350, 352, 353], "exercis": [303, 327, 345, 346, 347, 348, 353, 354, 355], "kpp_test": 303, "mixedlayerdepthsoutput": 303, "idealagetrac": [303, 355], "single_column_forc": [303, 355], "profil": [303, 328, 355], "throughout": [303, 344, 351, 355], "idealag": 303, "enabel": 303, "formal": 304, "organ": [304, 306, 309, 330], "conceptu": [304, 311], "broadli": [304, 305, 311], "realist": [304, 330, 363], "greenland": [304, 330, 363], "2000m": [304, 357], "34": [304, 357], "halfar": 304, "cism": 304, "dome_typ": 304, "put_origin_on_a_cel": 304, "hydrologi": 304, "hydro": [304, 363], "dome_viz": 304, "time_slic": 304, "save_imag": 304, "hide": [304, 331], "hide_fig": 304, "clutter": 304, "smoke_test": [304, 310], "smoketest": [304, 310], "restart_test": 304, "restarttest": 304, "add_dome_task": 304, "variable_resolut": [304, 308, 357], "talk": 304, "reduc": [304, 308], "encompass": 305, "perspect": 305, "four": 305, "broader": 305, "univers": 305, "add_inertial_gravity_wave_task": 305, "add_manufactured_solution_task": 305, "add_single_column_task": 305, "alphabet": [305, 331], "landice_model": [305, 312], "diagram": 306, "blue": [306, 333, 357], "orang": 306, "laid": 306, "fig": 306, "organiz": 306, "concept": [306, 311, 331, 363], "somewher": 308, "multiprocess": [308, 311, 332], "aspir": 308, "emploi": 308, "unwant": 308, "outer": 308, "inner": 308, "dome_varres_grid": 308, "signific": [308, 309, 310], "neglig": 308, "culled_graph": [308, 331], "meshstep": 308, "getint": 308, "mesh_cpus_per_task": 308, "mesh_min_cpus_per_task": 308, "fit": [308, 332], "applic": [308, 311, 312, 356, 361], "launch": [308, 330], "write_netcdf": [308, 331], "convers": [308, 331], "greater": [308, 331], "graphinfofilenam": [308, 331], "culled_mesh": [308, 331], "use_dist": [308, 331, 344, 351], "gradient_width_dist": [308, 331, 344], "gradient_width_frac": [308, 331, 344], "bottom_temperatur": [308, 331, 344, 351], "surface_temperatur": [308, 331, 344, 351, 355], "temperature_differ": [308, 331, 344, 351], "coriolis_paramet": [308, 331, 344, 350, 351, 352, 355], "x_cell": [308, 331], "y_cell": [308, 331], "ones_lik": [308, 331], "zeros_lik": [308, 331], "x_min": [308, 331], "min": [308, 331, 341, 344, 351, 355], "x_max": [308, 331], "y_min": [308, 331], "y_max": [308, 331], "y_mid": [308, 331], "x_perturb_min": [308, 331], "x_perturb_max": [308, 331], "perturb_width": [308, 331, 344], "y_offset": [308, 331], "sin": [308, 331, 344, 345, 347, 348, 350, 351, 352, 353], "pi": [308, 331, 341, 344, 345, 346, 347, 348, 353], "temp_vert": [308, 331], "frac": [308, 331, 341, 344, 345, 347, 350, 353], "logical_and": [308, 331], "transpos": [308, 331], "3rd": [308, 331], "crest": [308, 331, 344], "expand_dim": [308, 331], "dim": [308, 331], "broadcast": [308, 331], "xvertex": [308, 331], "attr": [308, 331], "initial_temperatur": [308, 331], "initial_normal_veloc": [308, 331], "superclass": 308, "commandlin": 308, "harm": 308, "likewis": [308, 331], "arisen": 308, "problemat": 308, "add_depend": 308, "usual": [308, 310, 312, 331, 357], "forwardstep": 308, "mesh_path": 308, "mesh_step": 308, "with_ice_shelf_cav": 308, "initial_state_target": 308, "adjusted_init": 308, "forcing_data": 308, "init_mode_forcing_data": 308, "entha_analy_result": 308, "mat": 308, "enthalpy_benchmark": 308, "ourselv": 308, "firewal": 308, "bedmachineantarctica_v2_and_gebco_2022_0": 308, "05_degree_20220729": 308, "slate": 308, "icepresent_qu60km_polar": 308, "practic": [308, 311, 312], "straightforward": 308, "commonli": [308, 329], "notat": [308, 356, 361], "phc": [308, 341], "That": [308, 311, 329, 331, 357], "word": 308, "ff": 308, "quwisc240": [308, 311, 357], "90c": 308, "91c": 308, "92": [308, 341], "91": 308, "sowisc12to60": [308, 357], "performance_test": 308, "transfer": 308, "feasibl": 308, "overhead": 308, "philosophi": [309, 311, 331], "context": [309, 331], "namesak": 309, "256": [309, 334, 339], "count": [309, 329], "quicker": 309, "exce": 309, "offer": 309, "benefit": [309, 330], "bug": 309, "coverag": 309, "exhaust": 309, "recent": [309, 342, 358], "merg": 309, "reach": 309, "steadi": [309, 348], "wet": 309, "fundament": 310, "incorpor": 310, "velo_solv": 310, "sia": [310, 312], "fo": 310, "runmodel": 310, "run_step": 310, "0200": 310, "00_00": [310, 325, 331], "recip": 310, "demonstr": [310, 331], "fairli": [310, 311, 312, 331], "_cosine_bel": 310, "_with_viz": 310, "_setup_step": [310, 331], "_resolut": 310, "remove_step": 310, "analysis_depend": 310, "base_mesh_step": 310, "cos_bell_dir": 310, "_init_": 310, "init_step": 310, "_forward_": 310, "forward_step": 310, "with_viz_dir": 310, "_map_": 310, "viz_map": 310, "_viz_": 310, "rare": [310, 312], "480km": 310, "closer": 310, "imp_r": 310, "joinpath": 310, "initial_condit": 311, "dig": [311, 332], "background": [311, 345, 347, 351, 353, 354], "adher": [311, 331], "pep8": [311, 312], "bot": [311, 341], "violat": 311, "consid": 311, "editor": 311, "pycharm": [311, 312, 331], "spyder": 311, "linter": 311, "flake8": [311, 312], "discourag": [311, 329], "reformat": 311, "autopep8": 311, "undesir": 311, "lint": 311, "wildcard": 311, "vim": [311, 331], "plugin": 311, "id": [311, 312], "commit": [311, 312], "why": 311, "sound": 311, "subpackag": 311, "understand": [311, 332], "downstream": 311, "tutori": [311, 312], "clu": 311, "intro": 311, "docstr": [311, 330, 331], "strip": 311, "mpas_ocean": 311, "hidden": 311, "shortcut": [311, 357], "referenc": [311, 331], "mention": 311, "charact": 311, "unix": [311, 330], "distinct": 311, "mayb": [311, 331], "machine_config": 311, "endswith": 311, "splitext": 311, "exactli": [311, 312, 331, 341], "move": [311, 312, 331, 356, 361], "renam": 311, "visa": 311, "versa": 311, "comfort": [311, 331], "inherit": [311, 331], "orient": [311, 348], "program": [311, 332], "led": 311, "felt": 311, "contribut": 311, "hesit": 311, "predecessor": [311, 329, 330], "clumsi": 311, "harder": 311, "outcom": 311, "augment": 311, "explain": 311, "hope": 311, "dens": 311, "learn": [311, 331], "curv": 311, "worth": [311, 331], "skill": 311, "endeavor": 311, "readabl": 311, "manipul": 311, "get_available_cores_and_nod": 311, "theoret": 311, "dozen": 311, "theori": 311, "biogeochemistri": 311, "ksh": 312, "mac": [312, 330], "csh": 312, "tcsh": 312, "temporarili": 312, "recogn": [312, 332, 357], "permiss": 312, "anyon": 312, "caus": [312, 334, 339, 341], "person": [312, 328], "base_path_to_install_or_update_conda": 312, "with_netlib_lapack": 312, "flavor": [312, 331], "troubl": [312, 331], "recognit": 312, "downsid": 312, "unneed": 312, "reinstal": 312, "caution": 312, "load_": 312, "encod": 312, "load_dev_polaris_": [312, 331], "env_nam": 312, "dev_polaris_": [312, 328], "update_jigsaw": 312, "workdir": [312, 357], "unexpect": [312, 329, 331], "occur": [312, 328, 341], "echo": 312, "proceed": 312, "notic": 312, "conda_env": [312, 357], "match": [312, 331], "load_polaris_test_morpheus_gnu_openmpi": 312, "__version__": 312, "rememb": 312, "incorrect": 312, "unus": 312, "session": [312, 331], "pip": 312, "substanti": 312, "unsupport": 312, "env_onli": 312, "risk": [312, 331], "mpas_make_target": [312, 357], "scientif": [312, 357], "_albani": 312, "instruct": [312, 331], "es3m": 312, "compli": 312, "memor": 312, "guidelin": 312, "complianc": 312, "checker": 312, "isort": 312, "flynt": 312, "mypi": 312, "77": 312, "e302": 312, "blank": 312, "resolv": 312, "simpler": [312, 331], "new_branch_nam": 312, "disk": [312, 332, 334, 339], "respons": 312, "simplest": [312, 330], "your_new_branch": 312, "restart_filenam": 318, "polaris_branch": 324, "post": 324, "src": 324, "registry_process": 324, "seaice_model": 324, "1m": [325, 360], "disc": [325, 360], "config_initial_ice_area": 325, "config_initial_ice_volum": 325, "config_atmospheric_forcing_typ": 325, "config_forcing_start_tim": 325, "config_forcing_cycle_start": 325, "config_forcing_cycle_dur": 325, "config_forcing_precipitation_unit": 325, "mm_per_sec": 325, "config_forcing_sst_typ": 325, "ncar": 325, "config_update_ocean_flux": 325, "config_include_pond_freshwater_feedback": 325, "standard_phys": 327, "standardphys": 327, "year": [327, 342, 360], "volum": 327, "snow": 327, "exact_restart": 327, "exactrestart": 327, "geo": 328, "cartopi": 328, "14": 328, "np110py27_4": 328, "calledprocesserror": 328, "deploy_tmp": 328, "vpn": 328, "site": 328, "shell": [328, 330], "honor": 328, "wide": 328, "spawn": 328, "usernam": [328, 331, 334, 337, 339], "proxy_en": 328, "all_proxi": 328, "proxyout": 328, "8080": 328, "no_proxi": 328, "localhost": [328, 332, 338, 339, 357], "127": 328, "proxy_dis": 328, "unset": 328, "anytim": 328, "fatal": 328, "mpi_init": 328, "stack": 328, "mpir_init_thread": 328, "159": 328, "mpid_init": 328, "164": 328, "mpidi_ch3_init": 328, "95": 328, "mpid_nem_init": 328, "314": 328, "mpid_nem_tcp_init": 328, "173": 328, "mpid_nem_tcp_get_business_card": 328, "395": 328, "getsockinterfaceaddr": 328, "369": 328, "pn2034311": 328, "errno": 328, "host": [328, 332, 338, 357], "focus": 329, "autom": 330, "exascal": 330, "kept": 330, "expert": 330, "uncoupl": 330, "extens": [330, 332], "primarili": 330, "darren": 330, "engwirda": 330, "quick": [330, 331, 342, 358], "queue": 330, "beginn": [330, 331], "advanc": [330, 331], "mpas_to_yaml": 330, "troubleshoot": 330, "proxi": 330, "lanl": [330, 332, 334], "gethostbynam": 330, "glossari": 331, "stick": 331, "miniconda": 331, "3_chrysalis_intel_openmpi": 331, "strict": 331, "push": 331, "lowercas": 331, "hyphen": 331, "settl": 331, "desktop": 331, "realli": [331, 339], "nice": [331, 339], "supercomput": 331, "yet_another_channel": 331, "testgroup": 331, "vi": 331, "polaris_head": 331, "yetanotherchannel": 331, "instanc": 331, "repres": [331, 341, 346, 353], "highli": 331, "camelcas": 331, "capit": 331, "letter": 331, "cap": 331, "awkward": 331, "encourag": 331, "enclos": 331, "briefli": 331, "baroclinicchannel": 331, "globalconverg": 331, "add_test_group": 331, "interest": 331, "test_group": 331, "add_test_cas": 331, "anyth": 331, "probabl": [331, 338, 348], "suppos": 331, "easili": 331, "tide": 331, "sai": [331, 338], "res_str": 331, "1000": [331, 332, 341, 344, 348, 350, 352], "still": [331, 342, 356, 357, 361], "ti": 331, "loop": 331, "1km": [331, 344, 357], "4km": [331, 344, 357], "coarsest": [331, 332], "especi": 331, "promot": 331, "pattern": 331, "familiar": 331, "seen": 331, "brows": 331, "row": 331, "disadvantag": 331, "foremost": 331, "magic": 331, "effect": [331, 356], "pain": 331, "160": [331, 344], "500": [331, 332, 341, 344, 351], "path_to_mpas_ocean": 331, "path_to_working_dir": 331, "cat": 331, "slurm_jobid": 331, "_run_test": 331, "gpf": 331, "fs1": 331, "cbegeman": 331, "grid_typ": [331, 332, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "vert_level": [331, 332, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "coord_typ": [331, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "partial_cell_typ": [331, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "min_pc_fract": [331, 341, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356], "everywher": 331, "depress": [331, 341], "mostli": 331, "logic": [331, 344, 351], "northern": [331, 344, 351], "half": [331, 344, 351], "southern": [331, 344], "halv": [331, 344], "gradient": [331, 344, 350, 351, 352, 355], "500km": [331, 344, 351], "40e3": [331, 344], "35": [331, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 361], "2e": [331, 344], "light": 331, "e3sm_compon": 331, "interact": [331, 334, 337, 338, 339, 357], "interrupt": 331, "pty": 331, "navig": 331, "newli": 331, "bunch": 331, "didn": 331, "mistak": 331, "finger": 331, "initial_normalveloc": 331, "initial_salin": 331, "obvious": 331, "stress": [331, 355], "landicemodelstep": 331, "huge": 331, "cp": 331, "05": [331, 348], "hmix_del2": 331, "bottom_drag": 331, "cvmix": 331, "0002": 331, "filename_interv": 331, "0100": 331, "input_interv": 331, "initial_onli": 331, "basicmesh": 331, "dayssincestart": 331, "surfacespe": 331, "lowersurfac": 331, "uppersurfac": 331, "ureconstructx": 331, "ureconstructi": 331, "load_dataset": 331, "final_temperatur": 331, "ab": 331, "proc": 331, "4proc": [331, 344], "8proc": [331, 344], "markdown": 331, "developers_guid": 331, "users_guid": 331, "daunt": 331, "flesh": 331, "bonu": 331, "improv": 331, "introduc": 331, "techniqu": 331, "aim": 331, "constrain_resourc": 331, "becam": 331, "mainten": 331, "counter": 331, "thought": 331, "yet_another_channel_test_cas": 331, "yetanotherchanneltestcas": 331, "choic": [331, 345, 346, 347, 348, 353, 354], "spuriou": [331, 344], "dissip": [331, 344], "pop": [331, 344], "mom": [331, 344], "mitgcm": [331, 344], "higher": 331, "heavi": 331, "analogi": 331, "tet": 331, "bear": 331, "late": 331, "_add_step": 331, "startswith": 331, "enumer": 331, "rpe_": 331, "_nu_": 331, "privat": 331, "break": [331, 344], "unusu": 331, "rpe_1_nu_1": [331, 344], "rpe_2_nu_5": [331, 344], "rpe_3_nu_10": 331, "rpe_4_nu_20": 331, "rpe_5_nu_200": 331, "20_00": 331, "0000": 331, "dayssincestartofsim": 331, "relativevort": 331, "pyplot": 331, "plt": 331, "output_": 331, "sections_yet_another_channel_": 331, "rpe_t": 331, "init_filenam": 331, "initial_state_file_nam": 331, "_plot": 331, "dirti": 331, "adopt": 331, "lesson": 331, "tricki": 331, "commun": 331, "nuanc": 331, "fake": 331, "wasn": 331, "fold": 331, "proper": 331, "third": 331, "previous": 331, "multinod": [332, 357], "explanatori": 332, "my_machin": 332, "extend": 332, "gitconfig": 332, "enter": 332, "author": 332, "email": 332, "pull_request": 332, "28": [332, 341, 345], "address": [332, 345, 353], "metadata": 332, "customize_config_pars": 332, "server_base_url": 332, "inej": 332, "check_siz": 332, "ssl": 332, "certif": 332, "core_path": 332, "partition_execut": 332, "dask": 332, "netcdf4": 332, "netcdf4_class": 332, "netcdf3_64bit": 332, "netcdf3_class": 332, "engin": 332, "mesh_databas": 332, "ocean_database_root": 332, "landice_database_root": 332, "mesh_cor": 332, "mesh_min_cor": 332, "mesh_max_memori": 332, "mesh_max_disk": 332, "init_cor": 332, "init_min_cor": 332, "init_max_memori": 332, "init_max_disk": 332, "init_thread": 332, "forward_cor": 332, "forward_min_cor": 332, "forward_thread": 332, "forward_max_memori": 332, "forward_max_disk": 332, "add_metadata": 332, "ec": 332, "wc": 332, "mesh_descript": 332, "autodetect": 332, "bathy_descript": 332, "gebco": 332, "2022": 332, "bedmachin": 332, "antarctica": 332, "init_descript": 332, "e3sm_vers": 332, "increment": 332, "mesh_revis": 332, "finest": 332, "min_r": 332, "max_r": 332, "max_depth": 332, "creation_d": 332, "peopl": 332, "contact": 332, "temperaturemax": 332, "temperature_max": 332, "33": [332, 351, 357], "enable_ocean_initial_condit": 332, "enable_ocean_graph_partit": 332, "enable_seaice_initial_condit": 332, "enable_scrip": 332, "onlin": 332, "member": 332, "offlin": 332, "enable_diagnostics_fil": 332, "coarser": [332, 341, 345, 346, 347, 348, 353, 354], "finer": [332, 341], "comparisonlatresolut": 332, "comparisonlonresolut": 332, "antarct": 332, "polar": [332, 333, 335, 341], "stereograph": 332, "comparisonantarcticstereowidth": 332, "6000": [332, 341], "comparisonantarcticstereoresolut": 332, "arctic": [332, 360], "comparisonarcticstereowidth": 332, "comparisonarcticstereoresolut": 332, "tanh_dz": 332, "16": [332, 355, 357], "3000": [332, 348], "max_layer_thick": [332, 341], "retain": 332, "ecosystem": 333, "gain": 333, "confluenc": 333, "public_html": [333, 335, 338], "soft": [333, 335, 338, 357], "mpi_intel": [333, 335, 336, 338], "36": [333, 338, 355, 357], "condo": [333, 357], "acm": [333, 357], "medium": 333, "acme_high": 333, "environo": [333, 334, 335, 336, 337, 339], "dst": 334, "calendar": 334, "network": 334, "introduct": 334, "platform": 334, "batch": [334, 337], "wtrw": 334, "ch": 334, "fe": 334, "lustr": [334, 337], "scratch4": 334, "scratch5": 334, "sacctmgr": 334, "assoc": 334, "cluster": 334, "45": 334, "sshare": 334, "sreport": 334, "accountutilizationbyus": 334, "2019": 334, "prioriti": 334, "yellow": 334, "chkhome": 334, "petabyt": 334, "df": 334, "bp": 334, "archiv": [334, 339], "hpss": [334, 339], "front": 334, "tn": 334, "storag": 334, "project_nam": 334, "salloc": [334, 337, 338, 339], "account_nam": 334, "gpu": [334, 337, 339], "hyperthread": [334, 337, 339], "hang": [334, 339], "threads_per_cor": [334, 337, 339], "compyf": 336, "app": [336, 357], "pmi2": 336, "40": [336, 348], "olcf": 337, "ornl": 337, "cli115": 337, "poari": 337, "orion": 337, "world": 337, "software_compil": 337, "gnugpu": 337, "mpi_gnugpu": 337, "mpi_crayclang": 337, "crayclanggpu": 337, "mpi_crayclanggpu": 337, "cray_compil": [337, 339], "submit": 338, "workload": 338, "squeue": 338, "my_usernam": [338, 339], "scancel": 338, "jobid": 338, "cancel": 338, "emtpi": 338, "three": [338, 345, 347, 348, 353, 354, 363], "mpi_mpich": [338, 357], "mpi_openmpi": [338, 357], "nompi": [338, 357], "p1": 339, "nersc": 339, "iri": 339, "filesystem": 339, "myquota": 339, "prjquota": 339, "projectid": 339, "m1795": 339, "hsi": 339, "htar": 339, "zstash": 339, "cf": [339, 357], "cdir": [339, 357], "premium": 339, "8844": 339, "monik": 339, "browser": 339, "grab": 339, "logon": 339, "kernel": 339, "myenv": 339, "ipykernel": 339, "kernelspec": 339, "u1": 339, "interpret": 339, "argv": 339, "ipykernel_launch": 339, "connection_fil": 339, "display_nam": 339, "languag": 339, "2500": 341, "transit": [341, 345, 346, 347, 353, 354], "transition_level": 341, "deepest": 341, "stewart": 341, "2017": 341, "delta": [341, 344, 348, 355], "z_2": 341, "z_1": 341, "mathrm": 341, "tanh": 341, "rightarrow": 341, "z_k": 341, "z_0": 341, "z_": [341, 355], "k": 341, "finder": 341, "n_z": 341, "h_": 341, "hyperbol": 341, "tangent": 341, "k_0": 341, "v3": 341, "5500": 341, "250": [341, 351], "scienc": 341, "hydrograph": 341, "climatologi": 341, "renorm": 341, "arrm10to60": 341, "80": 341, "146": 341, "5550": 341, "51": 341, "221": 341, "ziso": [341, 363], "63": 341, "collaps": 341, "adcroft": 341, "campin": 341, "2004": 341, "absenc": 341, "squash": 341, "press": 341, "batymetri": 341, "stair": 341, "terrain": 341, "month": 342, "websit": [342, 358], "release_6": 342, "ilicak": [344, 351], "2012": [344, 345, 347, 351, 353, 354], "variat": [344, 348], "distinguish": 344, "zonal": [344, 348, 351, 355], "meridion": [344, 351, 355], "psu": [344, 351, 355], "cooler": 344, "north": 344, "sinusoid": [344, 351], "perturb": [344, 346, 351, 352], "t_0": 344, "t_b": 344, "t_": 344, "z_b": 344, "y_": 344, "l_x": 344, "warmer": 344, "ge": [344, 346], "gradient_width_fract": 344, "l_y": 344, "le": [344, 355], "stationari": [344, 355], "literatur": 344, "mk": 344, "celsiu": 344, "prognost": 344, "lauritzen": [345, 347, 353, 354], "nonlinear": [345, 348, 350, 352], "mixing_analysi": 345, "icosohydr": [345, 346, 347, 353, 354], "nearest": [345, 346, 347, 353, 354], "insensit": [345, 346, 347, 348, 353, 354, 355], "300": [345, 346, 347, 353, 354, 356], "debugtrac": [345, 347, 353, 354], "tracer2": [345, 347, 353, 354], "tracer3": [345, 347, 353, 354], "nonlinearli": 345, "tau": [345, 346, 347, 353], "lambda": [345, 347, 348, 353], "theta": [345, 347, 348, 353], "co": [345, 346, 347, 348, 350, 352, 353], "equat": [345, 346, 347, 348, 350, 352, 353, 354, 355], "vel_pd": [345, 346, 347, 353, 354], "rung": [345, 346, 347, 348, 353, 354], "kutta": [345, 346, 347, 348, 353, 354], "4th": [345, 346, 347, 348, 353, 354], "spherical_convergence_forward": [345, 347, 353, 354], "globe": [345, 346, 347, 353, 354], "correlated_tracer_2d": 345, "288": [345, 347, 353, 354], "cosine_bells_radiu": [345, 347, 353, 354], "cosine_bells_background": [345, 347, 353, 354], "amplitud": [345, 347, 350, 351, 352, 353, 354], "cosine_bells_amplitud": [345, 347, 353, 354], "slot": [345, 347, 353, 354], "cylind": [345, 347, 353, 354], "slotted_cylinders_radiu": [345, 347, 353, 354], "slotted_cylinders_background": [345, 347, 353, 354], "slotted_cylinders_amplitud": [345, 347, 353, 354], "sphere_transport_viz_trac": [345, 347, 353, 354], "sphere_transport_viz_tracer_diff": [345, 347, 353, 354], "sphere_transport_viz_h": [345, 347, 353, 354], "99": [345, 347, 353, 354], "101": [345, 347, 353, 354], "sphere_transport_viz_h_diff": [345, 347, 353, 354], "vel_amp": [345, 347, 353], "convergence_thresh_tracer1": [345, 347, 353, 354], "convergence_thresh_tracer2": [345, 347, 353, 354], "66": 345, "convergence_thresh_tracer3": [345, 347, 353, 354], "mixing_evaluation_tim": 345, "sphere_transport_viz": [345, 347, 353, 354], "roughli": [345, 346, 347, 353, 354], "studi": [345, 346, 347, 348, 353, 354], "williamson": [346, 348], "1992": [346, 348], "sec": 346, "3a": 346, "skamarock": 346, "gassmann": 346, "bodi": 346, "psi": 346, "proportion": [346, 348], "slow": 346, "passiv": 346, "psi_0": 346, "debug_tracers_1": 346, "equatori": 346, "u_0": [346, 347, 348, 353], "tendenc": [346, 352], "rad": 346, "lat_cent": 346, "lon_cent": 346, "14159265": 346, "2123666": 346, "6667": 346, "hill": 346, "psi0": 346, "576": 346, "circul": 346, "48": 347, "86": 347, "chosen": [348, 355], "h_0": 348, "textrm": 348, "sensit": 348, "l_1": 348, "l_2": 348, "l_": 348, "examin": [348, 355], "vel_period": 348, "gh_0": 348, "94e4": 348, "william": 348, "paper": [348, 357], "arbitrari": 348, "evolut": [348, 351], "unexpectedli": 348, "convergence_thresh_h": 348, "convergence_thresh_normalveloc": 348, "necessit": 348, "geostropnic_viz": 348, "geostrophic_viz_h": 348, "deep": 348, "geostrophic_viz_vel": 348, "geostrophic_viz_diff_h": 348, "geostrophic_viz_diff_vel": 348, "propag": [350, 351, 352], "doubli": [350, 352], "assess": [350, 352], "accuraci": [350, 352], "discret": [350, 352], "bishnu": [350, 352], "friction": [350, 352], "neglect": [350, 352], "analyt": [350, 363], "k_x": [350, 352], "k_y": [350, 352], "availi": [350, 352], "coriloi": 350, "1e": 350, "ssh_amplitud": [350, 352], "wavelength": [350, 352], "n_wavelengths_x": [350, 352], "n_wavelengths_i": [350, 352], "induc": 351, "doi": 351, "org": 351, "1016": 351, "j": [351, 357], "ocemod": 351, "2011": 351, "003": 351, "stabl": 351, "stratif": 351, "20km": 351, "250km": 351, "inher": [351, 356], "background_salin": 351, "amplitude_width_dist": 351, "amplitude_width_frac": 351, "50e3": 351, "del2": 351, "internal_wave_rp": 351, "plot_tim": 351, "min_temp": 351, "max_temp": 351, "embed": 352, "eta_0": 352, "preserv": [353, 357], "rough": 353, "revers": 353, "filament_analysi": 353, "thhe": 353, "filament_evaluation_tim": 353, "offset": 354, "vector": 354, "rotation_vector": 354, "span": 355, "arbitrarili": 355, "virtu": 355, "400": 355, "phi": 355, "phi_0": 355, "dz": 355, "ml": 355, "mld": 355, "surface_x": 355, "x_gradient_mixed_lay": 355, "mixed_layer_depth_x": 355, "x_difference_across_mixed_lay": 355, "x_gradient_interior": 355, "4x4": 355, "960": 355, "degc": 355, "temperature_gradient_mixed_lay": 355, "temperature_difference_across_mixed_lay": 355, "temperature_gradient_interior": 355, "mixed_layer_depth_temperatur": 355, "surface_salin": 355, "salinity_gradient_mixed_lay": 355, "salinity_difference_across_mixed_lay": 355, "salinity_gradient_interior": 355, "mixed_layer_depth_salin": 355, "dictat": 355, "kpp": 355, "restor": 355, "piston": 355, "toward": 355, "temperature_surface_restoring_valu": 355, "temperature_piston_veloc": 355, "salinity_surface_restoring_valu": 355, "salinity_piston_veloc": 355, "temperature_interior_restoring_r": 355, "salinity_interior_restoring_r": 355, "net": 355, "latent": 355, "heat": 355, "bulk": 355, "latent_heat_flux": 355, "sensibl": 355, "sensible_heat_flux": 355, "solar": 355, "shortwav": 355, "shortwave_heat_flux": 355, "evapor": 355, "evaporation_flux": 355, "5e": 355, "rain": 355, "rain_flux": 355, "wind_stress_zon": 355, "wind_stress_meridion": 355, "welcom": [356, 361], "icosohedr": [356, 361], "pertain": [356, 361], "warrant": 356, "investig": 356, "load_latest_polari": 357, "shared_clim": 357, "minu": 357, "load_latest_polaris_gnu_openmpi": 357, "create_polaris_load_script": 357, "load_polaris_1": 357, "0_mpich": 357, "exclud": 357, "wiki": 357, "circular_shelf": 357, "sia_smoke_test": 357, "sia_decomposition_test": 357, "sia_restart_test": 357, "fo_smoke_test": 357, "fo_decomposition_test": 357, "fo_restart_test": 357, "37": 357, "17": 357, "210131_test_new_branch": 357, "my_config": 357, "smaller": 357, "previous_workdir": 357, "recompil": 357, "safer": 357, "test_subdir": 357, "clock": 357, "exclus": 357, "job_nam": 357, "fo_integr": 357, "sia_integr": 357, "cosine_bell_cached_init": [357, 362], "ec30to60": 357, "ecwisc30to60": 357, "qu240_for_e3sm": 357, "quwisc240_for_e3sm": 357, "wc14": 357, "suitenam": 357, "seaice_standalone_framework": 358, "71": 360, "35n": 360, "156": 360, "5w": 360, "atmospher": 360, "timeseri": 360, "prohibit": 362, "speed": 362, "radial": 363}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 2, 1, "", "symlink"]], "polaris.job": [[61, 2, 1, "", "get_slurm_options"], [62, 2, 1, "", "write_job_script"]], "polaris.list": [[63, 2, 1, "", "list_cases"], [64, 2, 1, "", "list_machines"], [65, 2, 1, "", "list_suites"]], "polaris.logging": [[66, 2, 1, "", "log_method_call"]], "polaris.mesh": [[67, 0, 1, "", "IcosahedralMeshStep"], [74, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [69, 1, 1, "", "get_cell_width"], [70, 1, 1, "", "get_subdivisions"], [71, 1, 1, "", "make_jigsaw_mesh"], [72, 1, 1, "", "run"], [73, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "build_cell_width_lat_lon"], [76, 1, 1, "", "make_jigsaw_mesh"], [77, 1, 1, "", "run"], [78, 1, 1, "", "setup"]], "polaris.mesh.planar": [[79, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[80, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "run"], [82, 1, 1, "", "save_and_plot_cell_width"], [83, 1, 1, "", "setup"]], "polaris.model_step": [[84, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[85, 2, 1, "", "area_for_field"], [86, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[87, 2, 1, "", "ingest"], [88, 2, 1, "", "parse_replacements"], [89, 2, 1, "", "replace"], [90, 2, 1, "", "write"]], "polaris.ocean": [[141, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[141, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[142, 0, 1, "", "ConvergenceAnalysis"], [150, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "compute_error"], [144, 1, 1, "", "convergence_parameters"], [145, 1, 1, "", "exact_solution"], [146, 1, 1, "", "get_output_field"], [147, 1, 1, "", "plot_convergence"], [148, 1, 1, "", "run"], [149, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "compute_cell_count"], [152, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[153, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "compute_cell_count"]], "polaris.ocean.mesh.spherical": [[155, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[156, 0, 1, "", "OceanModelStep"], [161, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "compute_cell_count"], [158, 1, 1, "", "constrain_resources"], [159, 1, 1, "", "map_yaml_to_namelist"], [160, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[162, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[163, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[164, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[164, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[165, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[165, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[166, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "compute_cell_count"], [168, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[169, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"], [171, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[172, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[172, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[173, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[175, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[177, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"], [179, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[180, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[180, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[181, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[183, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[185, 0, 1, "", "CosineBell"], [187, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[188, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[188, 1, 1, "", "__init__"], [189, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[190, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "compute_cell_count"], [192, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[193, 0, 1, "", "Init"], [195, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[196, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[198, 0, 1, "", "Geostrophic"], [200, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[201, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "exact_solution"], [203, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[204, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[204, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[205, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[207, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[209, 0, 1, "", "InertialGravityWave"], [210, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[209, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[211, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[211, 1, 1, "", "__init__"], [212, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[213, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "normal_velocity"], [215, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[216, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[216, 1, 1, "", "__init__"], [217, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[218, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[218, 1, 1, "", "__init__"], [219, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[220, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[220, 1, 1, "", "__init__"], [221, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave": [[222, 2, 1, "", "add_internal_wave_tasks"]], "polaris.ocean.tasks.internal_wave.default": [[223, 0, 1, "", "Default"]], "polaris.ocean.tasks.internal_wave.default.Default": [[223, 1, 1, "", "__init__"]], "polaris.ocean.tasks.internal_wave.forward": [[224, 0, 1, "", "Forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[224, 1, 1, "", "__init__"], [225, 1, 1, "", "compute_cell_count"], [226, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.internal_wave.init": [[227, 0, 1, "", "Init"]], "polaris.ocean.tasks.internal_wave.init.Init": [[227, 1, 1, "", "__init__"], [228, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.rpe": [[229, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[229, 1, 1, "", "__init__"], [230, 1, 1, "", "configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis": [[231, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[231, 1, 1, "", "__init__"], [232, 1, 1, "", "run"]], "polaris.ocean.tasks.internal_wave.viz": [[233, 0, 1, "", "Viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[235, 0, 1, "", "ManufacturedSolution"], [236, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[235, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[237, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[237, 1, 1, "", "__init__"], [238, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[239, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[239, 1, 1, "", "__init__"], [240, 1, 1, "", "normal_velocity"], [241, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[242, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[244, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[244, 1, 1, "", "__init__"], [245, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[246, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[246, 1, 1, "", "__init__"], [247, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[248, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[249, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[249, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[250, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[250, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[251, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[251, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[252, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[252, 1, 1, "", "__init__"], [253, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[254, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[256, 0, 1, "", "SphereTransport"], [258, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[259, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[259, 1, 1, "", "__init__"], [260, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[261, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[261, 1, 1, "", "__init__"], [262, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[263, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[263, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[264, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[264, 1, 1, "", "__init__"], [265, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[266, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[266, 1, 1, "", "__init__"], [267, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[268, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[268, 1, 1, "", "__init__"], [269, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[270, 2, 1, "", "generate_1d_grid"], [271, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[272, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[273, 2, 1, "", "alter_bottom_depth"], [274, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[275, 2, 1, "", "compute_min_max_level_cell"], [276, 2, 1, "", "compute_z_level_layer_thickness"], [277, 2, 1, "", "compute_z_level_resting_thickness"], [278, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[279, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.ocean.viz": [[280, 2, 1, "", "compute_transect"], [281, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[282, 2, 1, "", "find_planar_transect_cells_and_weights"], [283, 2, 1, "", "find_spherical_transect_cells_and_weights"], [284, 2, 1, "", "make_triangle_tree"], [285, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[286, 2, 1, "", "find_transect_levels_and_weights"], [287, 2, 1, "", "interp_mpas_to_transect_cells"], [288, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[91, 2, 1, "", "get_available_parallel_resources"], [92, 2, 1, "", "get_parallel_command"], [93, 2, 1, "", "run_command"], [94, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[95, 2, 1, "", "write"]], "polaris.remap": [[96, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[96, 1, 1, "", "__init__"], [97, 1, 1, "", "dst_from_lon_lat"], [98, 1, 1, "", "dst_from_mpas"], [99, 1, 1, "", "dst_from_points"], [100, 1, 1, "", "dst_from_proj"], [101, 1, 1, "", "dst_global_lon_lat"], [102, 1, 1, "", "get_remapper"], [103, 1, 1, "", "runtime_setup"], [104, 1, 1, "", "src_from_lon_lat"], [105, 1, 1, "", "src_from_mpas"], [106, 1, 1, "", "src_from_proj"]], "polaris.run": [[107, 2, 1, "", "complete_step_run"], [108, 2, 1, "", "load_dependencies"], [111, 2, 1, "", "setup_config"], [112, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[109, 2, 1, "", "run_single_step"], [110, 2, 1, "", "run_tasks"]], "polaris.seaice": [[315, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[315, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[316, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[317, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[317, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[318, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[318, 1, 1, "", "__init__"], [319, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[320, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[320, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[321, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[321, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[322, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[322, 1, 1, "", "__init__"], [323, 1, 1, "", "run"]], "polaris.setup": [[113, 2, 1, "", "setup_task"], [114, 2, 1, "", "setup_tasks"]], "polaris.streams": [[115, 2, 1, "", "read"], [116, 2, 1, "", "update_defaults"], [117, 2, 1, "", "update_tree"], [118, 2, 1, "", "write"]], "polaris.suite": [[119, 2, 1, "", "setup_suite"]], "polaris.validate": [[120, 2, 1, "", "compare_variables"]], "polaris.viz": [[121, 2, 1, "", "plot_global_lat_lon_field"], [122, 2, 1, "", "plot_global_mpas_field"], [123, 2, 1, "", "plot_horiz_field"], [124, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[125, 0, 1, "", "PolarisYaml"], [129, 2, 1, "", "main_mpas_to_yaml"], [130, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [131, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "read"], [127, 1, 1, "", "update"], [128, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 331], "share": [1, 6, 9, 311, 331], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 139, 308, 331, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 361], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 72, 77, 81, 107, 108, 109, 110, 111, 112, 140, 148, 170, 178, 182, 184, 194, 197, 206, 208, 219, 221, 228, 232, 234, 245, 247, 253, 255, 262, 265, 267, 269, 308, 312, 319, 323, 333, 334, 335, 336, 337, 339, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361], "onc": 1, "befor": 1, "depend": [1, 6, 308], "output": [1, 308, 331], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 139, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 297, 304, 307, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 323, 326, 331, 349, 351, 356, 357, 359, 361, 363], "work": 1, "directori": [1, 306], "structur": [1, 306], "i": [1, 357], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 312, 330, 332, 357], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 140, 308, 312, 338], "other": [1, 137, 308, 331, 338, 357], "implement": [1, 2], "set": [1, 140, 312, 357], "up": [1, 312, 357], "test": [1, 2, 6, 139, 140, 331, 332, 360], "And": 1, "valid": [1, 2, 3, 18, 120, 181, 182, 292, 299, 318, 319, 331, 357], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 140, 312, 331, 333, 334, 335, 336, 337, 338, 339, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "same": 2, "api": 3, "refer": [3, 139, 140], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 140, 289, 305, 311, 312, 324, 342, 357, 358], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 308, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 330, 333, 334, 335, 336, 337, 339, 357], "framework": [3, 10, 139, 140, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 311, 314, 327, 340], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 63, 64, 65], "setup": [3, 5, 8, 36, 47, 58, 73, 78, 83, 113, 114, 149, 160, 171, 179, 308], "suit": [3, 5, 8, 119, 309, 343, 357, 362], "cach": [3, 5, 8, 55, 308], "mpas_to_yaml": [3, 5], "base": [3, 139], "class": [3, 311], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 137, 140, 305, 331, 332, 333, 334, 335, 336, 337, 338, 339, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "io": [3, 11, 59, 60], "job": [3, 61, 62, 338, 357], "log": [3, 12, 66], "mesh": [3, 13, 14, 19, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 139, 140, 155, 331, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "model_step": [3, 84], "mpa": [3, 6, 15, 19, 85, 86, 140, 291, 325], "namelist": [3, 14, 87, 88, 89, 90, 140], "parallel": [3, 91, 92, 93, 94], "proven": [3, 16, 95], "remap": [3, 17, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "stream": [3, 14, 115, 116, 117, 118, 140, 331], "viz": [3, 121, 122, 123, 124, 183, 184, 196, 197, 207, 208, 220, 221, 233, 234, 246, 247, 254, 255, 268, 269, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 298, 300, 301, 302, 303, 322, 323, 327, 331], "yaml": [3, 14, 125, 126, 127, 128, 129, 130, 131, 140], "build": [4, 137, 312, 357], "serial": [5, 8, 109, 110], "deploi": 6, "new": [6, 137, 331], "spack": [6, 137, 312, 357], "environ": [6, 137, 312, 328, 357], "where": 6, "we": 6, "updat": [6, 14, 127, 312], "mach": 6, "conda": [6, 312, 328, 338, 357], "identifi": 6, "e3sm": [6, 14, 140, 312, 357], "machin": [6, 137, 312, 338, 357], "describ": [6, 137], "modul": [6, 8, 311, 312], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 312, 331], "remot": [6, 339], "branch": 6, "petsc": [6, 312], "netlib": [6, 312], "lapack": [6, 312], "albani": [6, 312], "troubleshoot": [6, 312, 328], "ocean": [6, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 342], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 137, 140, 305, 308, 331, 332], "comment": 9, "symlink": [11, 60, 308], "download": [11, 59, 308], "spheric": [13, 19, 80, 81, 82, 83, 139, 140, 153, 154, 155], "planar": [13, 19, 79], "uniform": [13, 140, 341], "gener": 13, "model": [14, 139, 140, 156, 157, 158, 159, 160, 161, 290, 325, 331, 357], "an": [14, 140, 331], "ad": [14, 137, 308, 331], "dynam": [14, 331], "input": [14, 308], "partit": [14, 32], "pio": 14, "make": [14, 331], "graph": 14, "area": 15, "time": [15, 140, 331, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 361], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 139, 140, 331, 360], "common": 19, "matplotlib": 19, "style": [19, 311, 312], "horizont": [19, 331], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 331], "grid": [19, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 152, 168, 174, 192, 226], "map_yaml_to_namelist": [31, 159], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 103, 308], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 158, 308], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 176, 186, 199, 230, 257, 310, 328], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "get_slurm_opt": 61, "write_job_script": 62, "list_cas": 63, "list_machin": 64, "list_suit": 65, "log_method_cal": 66, "icosahedralmeshstep": [67, 68, 69, 70, 71, 72, 73], "build_subdivisions_cell_width_lat_lon": 68, "get_cell_width": 69, "get_subdivis": 70, "make_jigsaw_mesh": [71, 76], "quasiuniformsphericalmeshstep": [74, 75, 76, 77, 78], "build_cell_width_lat_lon": 75, "compute_planar_hex_nx_ni": 79, "sphericalbasestep": [80, 81, 82, 83], "save_and_plot_cell_width": 82, "make_graph_fil": 84, "area_for_field": 85, "time_index_from_xtim": 86, "ingest": 87, "parse_replac": 88, "replac": 89, "write": [90, 95, 118, 128], "get_available_parallel_resourc": 91, "get_parallel_command": 92, "run_command": 93, "set_cores_per_nod": 94, "mappingfilestep": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "dst_from_lon_lat": 97, "dst_from_mpa": 98, "dst_from_point": 99, "dst_from_proj": 100, "dst_global_lon_lat": 101, "get_remapp": 102, "src_from_lon_lat": 104, "src_from_mpa": 105, "src_from_proj": 106, "complete_step_run": 107, "load_depend": 108, "run_single_step": 109, "run_task": 110, "setup_config": 111, "unpickle_suit": 112, "setup_task": [113, 114], "read": [115, 126], "update_default": 116, "update_tre": 117, "setup_suit": 119, "compare_vari": 120, "plot_global_lat_lon_field": 121, "plot_global_mpas_field": 122, "plot_horiz_field": 123, "use_mplstyl": 124, "polarisyaml": [125, 126, 127, 128], "main_mpas_to_yaml": 129, "mpas_namelist_and_streams_to_yaml": 130, "yaml_to_mpas_stream": 131, "anvil": [132, 333], "intel": [132, 134, 135, 138], "gnu": [132, 133, 134, 135, 136, 138], "chicoma": [133, 334], "cpu": [133, 138, 334, 339], "chrysali": [134, 335], "compymcnodefac": [135, 336], "frontier": [136, 337], "crayclang": 136, "support": [137, 290, 312, 325, 338, 357], "perlmutt": [138, 339], "pm": 138, "baroclinic_channel": [139, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 292], "cosine_bel": [139, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 294, 343], "geostroph": [139, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 296, 348], "inertial_gravity_wav": [139, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 298], "internal_wav": [139, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 299], "manufactured_solut": [139, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 300], "single_column": [139, 248, 249, 250, 251, 252, 253, 254, 255, 303, 313, 316, 317, 318, 319, 320, 321, 322, 323, 327], "sphere_transport": [139, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "converg": [139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 352], "potenti": [139, 140], "energi": [139, 140], "rpe": [139, 140, 162, 175, 176, 177, 178, 179, 229, 230, 231, 232, 292, 299, 344, 351], "vertic": [139, 140, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 331, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356], "coordin": [139, 140, 331, 341], "v": 140, "map": 140, "omega": 140, "mpi": [140, 338], "resourc": 140, "interv": 140, "quasi": 140, "icosahedr": 140, "rest": 140, "convergenceanalysi": [142, 143, 144, 145, 146, 147, 148, 149], "compute_error": 143, "convergence_paramet": [144, 260], "exact_solut": [145, 189, 202, 212, 213, 214, 215, 238, 239, 240, 241, 298, 300], "get_output_field": [146, 203], "plot_converg": 147, "convergenceforward": [150, 151, 152], "compute_cell_count": [151, 154, 157, 167, 191, 217, 225, 243], "sphericalconvergenceforward": [153, 154], "add_spherical_base_mesh_step": 155, "oceanmodelstep": [156, 157, 158, 159, 160], "get_time_interval_str": 161, "compute_rp": 162, "add_baroclinic_channel_task": 163, "decomp": [164, 292, 344], "default": [165, 223, 292, 299, 331, 344, 351], "forward": [166, 167, 168, 190, 191, 192, 204, 216, 217, 224, 225, 226, 242, 243, 250, 263, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 320, 327, 331], "init": [169, 170, 171, 193, 194, 195, 205, 206, 218, 219, 227, 228, 244, 245, 252, 253, 264, 265, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 331], "restart": [172, 173, 174, 292, 344, 360], "restart_step": [173, 174], "restartstep": [173, 174], "analysi": [177, 178, 179, 188, 189, 201, 202, 203, 211, 212, 231, 232, 237, 238, 259, 260, 293, 294, 295, 296, 298, 300, 301, 302, 331, 348], "thread": [180, 292, 344], "cosinebel": [185, 186], "add_cosine_bell_task": 187, "add_geostrophic_task": 200, "inertialgravitywav": 209, "add_inertial_gravity_wave_task": 210, "exactsolut": [213, 214, 215, 239, 240, 241], "normal_veloc": [214, 240], "ssh": [215, 241], "add_internal_wave_task": 222, "manufacturedsolut": 235, "add_manufactured_solution_task": 236, "add_single_column_task": [248, 316], "cvmix": [249, 303, 355], "ideal_ag": 251, "idealag": 251, "spheretransport": [256, 257], "add_sphere_transport_task": 258, "filament_analysi": [261, 262, 301], "filamentanalysi": [261, 262], "mixing_analysi": [266, 267, 293], "mixinganalysi": [266, 267], "grid_1d": [270, 271], "generate_1d_grid": 270, "write_1d_grid": 271, "init_vertical_coord": 272, "partial_cel": [273, 274], "alter_bottom_depth": 273, "alter_ssh": 274, "zlevel": [275, 276, 277, 278], "compute_min_max_level_cel": 275, "compute_z_level_layer_thick": 276, "compute_z_level_resting_thick": 277, "init_z_level_vertical_coord": 278, "zstar": 279, "init_z_star_vertical_coord": 279, "compute_transect": 280, "plot_transect": 281, "transect": [282, 283, 284, 285, 286, 287, 288], "horiz": [282, 283, 284, 285], "find_planar_transect_cells_and_weight": 282, "find_spherical_transect_cells_and_weight": 283, "make_triangle_tre": 284, "mesh_to_triangl": 285, "vert": [286, 287, 288], "find_transect_levels_and_weight": 286, "interp_mpas_to_transect_cel": 287, "interp_mpas_to_transect_nod": 288, "initi": [291, 325, 331, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "condit": [291, 325, 331, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "boundari": 291, "forc": [291, 325, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "correlated_tracers_2d": 293, "base_mesh": [293, 294, 295, 296, 301, 302], "divergent_2d": 295, "nondivergent_2d": 301, "rotation_2d": 302, "ideal": [303, 355], "ag": [303, 355], "categori": [304, 356, 361], "constructor": [305, 308, 310], "organ": 307, "attribut": [308, 310], "copi": 308, "pull": 309, "request": 309, "pr": 309, "nightli": 309, "overview": 311, "code": [311, 312, 331], "packag": 311, "within": 311, "group": [311, 331], "relat": 311, "quick": [312, 357], "start": [312, 331, 357], "develop": [312, 330, 331], "unix": 312, "shell": 312, "repositori": 312, "beginn": 312, "compil": 312, "system": 312, "unknown": 312, "what": 312, "script": [312, 357], "doe": 312, "flag": 312, "activ": 312, "switch": 312, "between": [312, 331], "differ": 312, "onli": 312, "repo": 312, "worktre": 312, "advanc": 312, "seaic": [313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "exact_restart": [317, 318, 319], "exactrestart": 317, "standard_phys": [321, 322, 323], "standardphys": 321, "standard_physics_test": 327, "exact_restart_test": 327, "solver": 328, "error": 328, "when": 328, "proxi": 328, "lanl": 328, "mac": 328, "gethostbynam": 328, "fail": 328, "glossari": [329, 330], "": 330, "guid": 330, "tutori": [330, 331], "compass": 330, "get": 331, "vari": 331, "resolut": 331, "paramet": 331, "thing": 331, "out": 331, "defin": 331, "more": 331, "again": 331, "one": 331, "second": 331, "enhanc": 331, "comput": 331, "cell": 331, "count": 331, "superclass": 331, "studi": 331, "how": 331, "pass": 331, "data": [331, 339], "A": 332, "case": 332, "load": [333, 334, 335, 336, 337, 339, 357], "slurm": 338, "queue": 338, "mpich": 338, "openmpi": 338, "No": 338, "forg": 338, "jupyt": 339, "notebook": 339, "1d": 341, "type": 341, "tanh_dz": 341, "index_tanh_dz": 341, "60layerphc": 341, "80layere3smv1": 341, "100layere3smv1": 341, "3d": 341, "z": 341, "star": 341, "level": 341, "sigma": 341, "cosine_bell_cached_init": 343, "baroclin": 344, "channel": 344, "descript": [344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "durat": [344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "core": [344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361], "correl": 345, "tracer": 345, "2": [345, 347, 353, 354], "d": [345, 347, 353, 354], "cosin": 346, "bell": 346, "diverg": 347, "inerti": 350, "graviti": 350, "wave": [350, 351], "intern": 351, "manufactur": 352, "solut": 352, "nondiverg": 353, "rotat": 354, "singl": [355, 360], "column": [355, 360], "task_nam": [356, 361], "yet": 357, "standalon": 357, "sea": 358, "ic": 358, "standard": 360, "physic": 360, "timestep": 360, "exact": 360}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [305, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [344, "mesh"], [344, "id2"], [344, "id9"], [344, "id17"], [344, "id25"], [344, "id32"], [345, "mesh"], [346, "mesh"], [347, "mesh"], [348, "mesh"], [350, "mesh"], [351, "mesh"], [351, "id2"], [352, "mesh"], [353, "mesh"], [354, "mesh"], [355, "mesh"], [355, "id3"], [355, "id8"], [356, "mesh"], [360, "mesh"], [360, "id1"], [360, "id6"], [361, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [292, "validate"], [299, "validate"]], "viz": [[3, "viz"], [293, "viz"], [294, "viz"], [295, "viz"], [296, "viz"], [298, "viz"], [300, "viz"], [301, "viz"], [302, "viz"], [303, "viz"], [327, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [331, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [340, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [140, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [140, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"], [139, "visualization"], [140, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[61, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[62, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[63, "polaris-list-list-cases"]], "polaris.list.list_machines": [[64, "polaris-list-list-machines"]], "polaris.list.list_suites": [[65, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[66, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[67, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[68, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[69, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[70, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[71, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[72, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[73, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[75, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[79, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[81, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[82, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[83, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[84, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[85, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[86, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[87, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[88, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[89, "polaris-namelist-replace"]], "polaris.namelist.write": [[90, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[91, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[92, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[93, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[94, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[95, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[96, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[97, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[98, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[99, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[100, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[101, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[102, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[103, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[104, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[105, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[106, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[107, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[108, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[109, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[110, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[111, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[112, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[113, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[114, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[115, "polaris-streams-read"]], "polaris.streams.update_defaults": [[116, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[117, "polaris-streams-update-tree"]], "polaris.streams.write": [[118, "polaris-streams-write"]], "polaris.suite.setup_suite": [[119, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[120, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_lat_lon_field": [[121, "polaris-viz-plot-global-lat-lon-field"]], "polaris.viz.plot_global_mpas_field": [[122, "polaris-viz-plot-global-mpas-field"]], "polaris.viz.plot_horiz_field": [[123, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[124, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[125, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[126, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[127, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[128, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[129, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[130, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[131, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[132, "anvil"], [333, "anvil"]], "intel": [[132, "intel"], [134, "intel"], [135, "intel"]], "gnu": [[132, "gnu"], [134, "gnu"], [135, "gnu"]], "Chicoma": [[133, "chicoma"], [334, "chicoma"]], "chicoma-cpu, gnu": [[133, "chicoma-cpu-gnu"]], "Chrysalis": [[134, "chrysalis"], [335, "chrysalis"]], "CompyMcNodeFace": [[135, "compymcnodeface"], [336, "compymcnodeface"]], "Frontier": [[136, "frontier"], [337, "frontier"]], "frontier, gnu": [[136, "frontier-gnu"]], "frontier, crayclang": [[136, "frontier-crayclang"]], "Machines": [[137, "machines"], [338, "machines"]], "Supported Machines": [[137, "supported-machines"], [338, "supported-machines"]], "Other Machines": [[137, "other-machines"], [338, "other-machines"]], "Adding a New Supported Machine": [[137, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[137, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[137, "describing-a-spack-environment"]], "Building the Spack Environment": [[137, "building-the-spack-environment"]], "Perlmutter": [[138, "perlmutter"], [339, "perlmutter"]], "pm-cpu, gnu": [[138, "pm-cpu-gnu"]], "pm-cpu, intel": [[138, "pm-cpu-intel"]], "ocean": [[139, "ocean"]], "Tasks": [[139, "tasks"], [297, "tasks"], [310, "tasks"], [313, "tasks"], [326, "tasks"], [349, "tasks"], [359, "tasks"], [363, "tasks"]], "baroclinic_channel": [[139, "baroclinic-channel"], [292, "baroclinic-channel"]], "cosine_bell": [[139, "cosine-bell"], [294, "cosine-bell"]], "geostrophic": [[139, "geostrophic"], [296, "geostrophic"], [348, "geostrophic"]], "inertial_gravity_wave": [[139, "inertial-gravity-wave"], [298, "inertial-gravity-wave"]], "internal_wave": [[139, "internal-wave"], [299, "internal-wave"]], "manufactured_solution": [[139, "manufactured-solution"], [300, "manufactured-solution"]], "single_column": [[139, "single-column"], [303, "single-column"], [313, "single-column"], [327, "single-column"]], "sphere_transport": [[139, "sphere-transport"]], "Ocean Framework": [[139, "ocean-framework"]], "Convergence Tests": [[139, "convergence-tests"], [140, "convergence-tests"]], "Spherical Convergence Tests": [[139, "spherical-convergence-tests"]], "Ocean Model": [[139, "ocean-model"]], "Spherical Base Mesh Step": [[139, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[139, "reference-potential-energy-rpe"]], "Vertical coordinates": [[139, "vertical-coordinates"]], "Ocean framework": [[140, "ocean-framework"]], "YAML files vs. namelists and streams": [[140, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[140, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[140, "setting-mpi-resources"]], "Setting time intervals in model config options": [[140, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[140, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[140, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[140, "vertical-coordinate"], [341, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[140, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[141, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[142, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[143, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[144, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[145, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[146, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[147, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[148, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[149, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[150, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[151, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[152, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[153, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[154, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[155, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[156, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[157, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[158, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[159, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[160, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[161, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[162, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[163, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[164, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[165, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[166, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[167, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[168, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[169, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[170, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[171, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[172, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[173, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[174, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[175, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[176, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[177, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[178, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[179, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[180, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[181, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[182, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[183, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[184, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[185, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[186, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[187, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[188, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[189, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[190, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[191, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[192, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[193, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[194, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[195, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[196, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[197, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[198, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[199, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[200, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[201, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[202, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[203, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[204, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[205, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[206, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[207, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[208, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[209, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[210, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[211, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[212, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[213, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[214, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[215, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[216, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[217, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[218, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[219, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[220, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[221, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks": [[222, "polaris-ocean-tasks-internal-wave-add-internal-wave-tasks"]], "polaris.ocean.tasks.internal_wave.default.Default": [[223, "polaris-ocean-tasks-internal-wave-default-default"]], "polaris.ocean.tasks.internal_wave.forward.Forward": [[224, "polaris-ocean-tasks-internal-wave-forward-forward"]], "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count": [[225, "polaris-ocean-tasks-internal-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config": [[226, "polaris-ocean-tasks-internal-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.internal_wave.init.Init": [[227, "polaris-ocean-tasks-internal-wave-init-init"]], "polaris.ocean.tasks.internal_wave.init.Init.run": [[228, "polaris-ocean-tasks-internal-wave-init-init-run"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe": [[229, "polaris-ocean-tasks-internal-wave-rpe-rpe"]], "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure": [[230, "polaris-ocean-tasks-internal-wave-rpe-rpe-configure"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis": [[231, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis"]], "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run": [[232, "polaris-ocean-tasks-internal-wave-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.internal_wave.viz.Viz": [[233, "polaris-ocean-tasks-internal-wave-viz-viz"]], "polaris.ocean.tasks.internal_wave.viz.Viz.run": [[234, "polaris-ocean-tasks-internal-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[235, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[236, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[237, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[238, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[239, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[240, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[241, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[242, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[243, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[244, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[245, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[246, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[247, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[248, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[249, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[250, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[251, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[252, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[253, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[254, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[255, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[256, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[257, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[258, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[259, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[260, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[261, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[262, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[263, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[264, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[265, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[266, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[267, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[268, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[269, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[270, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[271, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[272, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[273, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[274, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[275, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[276, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[277, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[278, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[279, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "polaris.ocean.viz.compute_transect": [[280, "polaris-ocean-viz-compute-transect"]], "polaris.ocean.viz.plot_transect": [[281, "polaris-ocean-viz-plot-transect"]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[282, "polaris-ocean-viz-transect-horiz-find-planar-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[283, "polaris-ocean-viz-transect-horiz-find-spherical-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[284, "polaris-ocean-viz-transect-horiz-make-triangle-tree"]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[285, "polaris-ocean-viz-transect-horiz-mesh-to-triangles"]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[286, "polaris-ocean-viz-transect-vert-find-transect-levels-and-weights"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[287, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-cells"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[288, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-nodes"]], "Ocean component": [[289, "ocean-component"], [342, "ocean-component"]], "Models": [[290, "models"]], "Supported Models": [[290, "supported-models"]], "MPAS-Ocean": [[291, "mpas-ocean"]], "Initial conditions": [[291, "initial-conditions"], [325, "initial-conditions"]], "Boundary conditions": [[291, "boundary-conditions"]], "Forcing": [[291, "forcing"], [325, "forcing"]], "framework": [[292, "framework"], [293, "framework"], [294, "framework"], [295, "framework"], [296, "framework"], [298, "framework"], [299, "framework"], [300, "framework"], [301, "framework"], [302, "framework"], [303, "framework"], [327, "framework"]], "init": [[292, "init"], [293, "init"], [294, "init"], [295, "init"], [296, "init"], [298, "init"], [299, "init"], [300, "init"], [301, "init"], [302, "init"], [303, "init"]], "forward": [[292, "forward"], [293, "forward"], [294, "forward"], [295, "forward"], [296, "forward"], [298, "forward"], [299, "forward"], [300, "forward"], [301, "forward"], [302, "forward"], [303, "forward"], [327, "forward"]], "default": [[292, "default"], [299, "default"], [344, "default"]], "decomp": [[292, "decomp"], [344, "decomp"]], "restart": [[292, "restart"], [344, "restart"]], "threads": [[292, "threads"]], "rpe": [[292, "rpe"], [299, "rpe"], [344, "rpe"]], "correlated_tracers_2d": [[293, "correlated-tracers-2d"]], "base_mesh": [[293, "base-mesh"], [294, "base-mesh"], [295, "base-mesh"], [296, "base-mesh"], [301, "base-mesh"], [302, "base-mesh"]], "analysis": [[293, "analysis"], [294, "analysis"], [295, "analysis"], [296, "analysis"], [298, "analysis"], [300, "analysis"], [301, "analysis"], [302, "analysis"], [348, "analysis"]], "mixing_analysis": [[293, "mixing-analysis"]], "divergent_2d": [[295, "divergent-2d"]], "exact_solution": [[298, "exact-solution"], [300, "exact-solution"]], "nondivergent_2d": [[301, "nondivergent-2d"]], "filament_analysis": [[301, "filament-analysis"]], "rotation_2d": [[302, "rotation-2d"]], "cvmix": [[303, "cvmix"], [355, "cvmix"]], "ideal age": [[303, "ideal-age"], [355, "ocean-single-column-ideal-age"]], "Categories of tasks": [[304, "categories-of-tasks"]], "Constructor": [[305, "constructor"]], "Config file": [[305, "config-file"]], "Directory structure": [[306, "directory-structure"]], "Organization of Tasks": [[307, "organization-of-tasks"]], "Steps": [[308, "steps"]], "Step attributes": [[308, "step-attributes"]], "constructor": [[308, "constructor"], [310, "constructor"]], "setup()": [[308, "setup"]], "constrain_resources()": [[308, "constrain-resources"]], "runtime_setup()": [[308, "runtime-setup"]], "run()": [[308, "run"]], "inputs and outputs": [[308, "inputs-and-outputs"]], "Input files": [[308, "input-files"]], "Symlinks to input files": [[308, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[308, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[308, "downloading-and-symlinking-input-files"]], "Copying input files": [[308, "copying-input-files"]], "Output files": [[308, "output-files"]], "Cached output files": [[308, "cached-output-files"]], "Adding other steps as dependencies": [[308, "adding-other-steps-as-dependencies"]], "Suites": [[309, "suites"], [343, "suites"], [357, "suites"], [362, "suites"]], "Pull-Request (PR) suite": [[309, "pull-request-pr-suite"]], "Nightly suite": [[309, "nightly-suite"]], "Task attributes": [[310, "task-attributes"]], "configure()": [[310, "configure"]], "Overview": [[311, "overview"]], "Code Style": [[311, "code-style"]], "Packages and Modules": [[311, "packages-and-modules"]], "Packages": [[311, "packages"]], "Modules": [[311, "modules"]], "Classes": [[311, "classes"]], "Code sharing": [[311, "code-sharing"]], "\u2026in the polaris framework": [[311, "in-the-polaris-framework"]], "\u2026within a component": [[311, "within-a-component"]], "\u2026within a group of related tasks": [[311, "within-a-group-of-related-tasks"]], "\u2026within a task": [[311, "within-a-task"]], "Quick Start for Developers": [[312, "quick-start-for-developers"]], "Unix Shell": [[312, "unix-shell"]], "Set up a polaris repository: for beginners": [[312, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[312, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[312, "supported-machines"]], "Environments with Albany": [[312, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[312, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[312, "unknown-machines"]], "What the script does": [[312, "what-the-script-does"]], "Optional flags": [[312, "optional-flags"]], "Activating the environment": [[312, "activating-the-environment"]], "Switching between different polaris environments": [[312, "switching-between-different-polaris-environments"]], "Troubleshooting": [[312, "troubleshooting"], [328, "troubleshooting"]], "Creating/updating only the polaris environment": [[312, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[312, "building-e3sm-components"]], "Running polaris from the repo": [[312, "running-polaris-from-the-repo"]], "Code style for polaris": [[312, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[312, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[313, "seaice"]], "SeaIce framework": [[314, "seaice-framework"]], "polaris.seaice.SeaIce": [[315, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[316, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[317, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[318, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[319, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[320, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[321, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[322, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[323, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[324, "seaice-component"]], "Supported Model: MPAS-Seaice": [[325, "supported-model-mpas-seaice"]], "standard_physics_test": [[327, "standard-physics-test"]], "exact_restart_test": [[327, "exact-restart-test"]], "Solver errors when configuring conda environment": [[328, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[328, "proxy-on-lanl-macs"]], "gethostbyname failed": [[328, "gethostbyname-failed"]], "Glossary": [[329, "glossary"], [330, null]], "Polaris": [[330, "polaris"]], "User's guide": [[330, null]], "Developer's guide": [[330, null]], "Tutorials": [[330, null]], "Compass": [[330, "compass"]], "Developer Tutorial: Adding a new test group": [[331, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[331, "getting-started"]], "Making a new test group": [[331, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[331, "adding-a-default-task"]], "Varying resolution and other parameters": [[331, "varying-resolution-and-other-parameters"]], "Adding the init step": [[331, "adding-the-init-step"]], "Creating a horizontal mesh": [[331, "creating-a-horizontal-mesh"]], "Adding a config file": [[331, "adding-a-config-file"]], "Adding the step to the task": [[331, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[331, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[331, "creating-an-initial-condition"]], "Adding plots": [[331, "adding-plots"]], "Adding step outputs": [[331, "adding-step-outputs"]], "Adding validation": [[331, "adding-validation"], [331, "id1"]], "Test things out!": [[331, "test-things-out"]], "Adding the forward step": [[331, "adding-the-forward-step"]], "Defining model config options and streams": [[331, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[331, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[331, "adding-more-validation"]], "Test the task again!": [[331, "test-the-task-again"]], "Adding a visualization step": [[331, "adding-a-visualization-step"]], "Adding the viz step to the task": [[331, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[331, "test-the-task-one-more-time"]], "Adding a second task": [[331, "adding-a-second-task"]], "Enhancements": [[331, "enhancements"]], "Adding model config options in code": [[331, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[331, "adding-dynamic-model-config-options"]], "Computing the cell count": [[331, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[331, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[331, "adding-a-parameter-study"]], "Adding the steps to the task": [[331, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[331, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[331, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[332, "config-files"]], "A \u201cuser\u201d config file": [[332, "a-user-config-file"]], "Test-case config files": [[332, "test-case-config-files"]], "config options": [[333, "config-options"], [334, "config-options"], [335, "config-options"], [336, "config-options"], [337, "config-options"], [338, "config-options"], [339, "config-options"], [344, "config-options"], [344, "id7"], [344, "id14"], [344, "id22"], [344, "id30"], [344, "id37"], [345, "config-options"], [346, "config-options"], [347, "config-options"], [348, "config-options"], [350, "config-options"], [351, "config-options"], [351, "id7"], [352, "config-options"], [353, "config-options"], [354, "config-options"], [355, "config-options"], [355, "id1"], [355, "id6"], [355, "id13"], [356, "config-options"], [360, "config-options"], [360, "id5"], [360, "id10"], [361, "config-options"]], "Loading and running Polaris on Anvil": [[333, "loading-and-running-polaris-on-anvil"]], "Chicoma-CPU": [[334, "chicoma-cpu"]], "Loading and running Polaris on Chicoma": [[334, "loading-and-running-polaris-on-chicoma"]], "Loading and running Polaris on Chrysalis": [[335, "loading-and-running-polaris-on-chrysalis"]], "Loading and running Polaris on CompyMcNodeFace": [[336, "loading-and-running-polaris-on-compymcnodeface"]], "Loading and running Polaris on Frontier": [[337, "loading-and-running-polaris-on-frontier"]], "Slurm job queueing": [[338, "slurm-job-queueing"]], "MPICH": [[338, "mpich"]], "OpenMPI": [[338, "openmpi"]], "No MPI from conda-forge": [[338, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[339, "perlmutter-cpu"]], "Loading and running Polaris on Perlmutter": [[339, "loading-and-running-polaris-on-perlmutter"]], "Jupyter notebook on remote data": [[339, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[341, "d-grid-type"]], "uniform": [[341, "uniform"]], "tanh_dz": [[341, "tanh-dz"]], "index_tanh_dz": [[341, "index-tanh-dz"]], "60layerPHC": [[341, "layerphc"]], "80layerE3SMv1": [[341, "layere3smv1"]], "100layerE3SMv1": [[341, "id1"]], "3D vertical coordinates": [[341, "d-vertical-coordinates"]], "z-star": [[341, "z-star"]], "z-level": [[341, "z-level"]], "sigma": [[341, "sigma"]], "cosine_bell and cosine_bell_cached_init suite": [[343, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[344, "baroclinic-channel"]], "description": [[344, "description"], [344, "id1"], [344, "id8"], [344, "id16"], [344, "id24"], [345, "description"], [346, "description"], [347, "description"], [348, "description"], [350, "description"], [351, "description"], [351, "id1"], [352, "description"], [353, "description"], [354, "description"], [355, "description"], [355, "id2"], [355, "id7"], [356, "description"], [360, "description"], [361, "description"]], "vertical grid": [[344, "vertical-grid"], [344, "id3"], [344, "id10"], [344, "id18"], [344, "id26"], [344, "id33"], [345, "vertical-grid"], [346, "vertical-grid"], [347, "vertical-grid"], [348, "vertical-grid"], [350, "vertical-grid"], [351, "vertical-grid"], [351, "id3"], [352, "vertical-grid"], [353, "vertical-grid"], [354, "vertical-grid"], [355, "vertical-grid"], [355, "id4"], [355, "id9"], [356, "vertical-grid"]], "initial conditions": [[344, "initial-conditions"], [344, "id4"], [344, "id11"], [344, "id19"], [344, "id27"], [344, "id34"], [345, "initial-conditions"], [346, "initial-conditions"], [347, "initial-conditions"], [348, "initial-conditions"], [350, "initial-conditions"], [351, "initial-conditions"], [351, "id4"], [352, "initial-conditions"], [353, "initial-conditions"], [354, "initial-conditions"], [355, "initial-conditions"], [355, "id5"], [355, "id10"], [356, "initial-conditions"], [360, "initial-conditions"], [360, "id2"], [360, "id7"], [361, "initial-conditions"]], "forcing": [[344, "forcing"], [344, "id5"], [344, "id12"], [344, "id20"], [344, "id28"], [344, "id35"], [345, "forcing"], [346, "forcing"], [347, "forcing"], [348, "forcing"], [350, "forcing"], [351, "forcing"], [351, "id5"], [352, "forcing"], [353, "forcing"], [354, "forcing"], [355, "forcing"], [355, "id11"], [356, "forcing"], [360, "forcing"], [360, "id3"], [360, "id8"], [361, "forcing"]], "time step and run duration": [[344, "time-step-and-run-duration"], [344, "id6"], [344, "id13"], [344, "id21"], [344, "id29"], [344, "id36"], [345, "time-step-and-run-duration"], [346, "time-step-and-run-duration"], [347, "time-step-and-run-duration"], [348, "time-step-and-run-duration"], [350, "time-step-and-run-duration"], [351, "time-step-and-run-duration"], [351, "id6"], [352, "time-step-and-run-duration"], [353, "time-step-and-run-duration"], [354, "time-step-and-run-duration"], [355, "time-step-and-run-duration"], [355, "id12"], [356, "time-step-and-run-duration"], [361, "time-step-and-run-duration"]], "cores": [[344, "cores"], [344, "id15"], [344, "id23"], [344, "id31"], [344, "id38"], [345, "cores"], [346, "cores"], [347, "cores"], [348, "cores"], [350, "cores"], [351, "cores"], [352, "cores"], [353, "cores"], [354, "cores"], [355, "cores"], [355, "id14"], [356, "cores"], [360, "cores"], [360, "id4"], [360, "id9"], [361, "cores"]], "thread": [[344, "thread"]], "correlated tracers 2-d": [[345, "correlated-tracers-2-d"]], "cosine bell": [[346, "cosine-bell"]], "divergent 2-d": [[347, "divergent-2-d"]], "inertial gravity wave": [[350, "inertial-gravity-wave"]], "internal wave": [[351, "internal-wave"]], "default task": [[351, "default-task"]], "RPE task": [[351, "rpe-task"]], "manufactured solution": [[352, "manufactured-solution"]], "convergence": [[352, "convergence"]], "nondivergent 2-d": [[353, "nondivergent-2-d"]], "rotation 2-d": [[354, "rotation-2-d"]], "single column": [[355, "single-column"], [360, "single-column"]], "<Category of task>": [[356, "ocean-category-of-task"], [361, "seaice-category-of-task"]], "task_name": [[356, "task-name"], [361, "task-name"]], "Quick Start for Users": [[357, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[357, null]], "Loading polaris conda and spack environments": [[357, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[357, "e3sm-supported-machines"]], "Other machines": [[357, "other-machines"]], "Building supported E3SM components as standalone models": [[357, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[357, "setting-up-tasks"]], "Running a task": [[357, "running-a-task"]], "Running with a job script": [[357, "running-with-a-job-script"]], "Sea ice component": [[358, "sea-ice-component"]], "standard physics test": [[360, "standard-physics-test"]], "timestep and run duration": [[360, "timestep-and-run-duration"], [360, "id11"]], "visualization": [[360, "visualization"]], "exact restart test": [[360, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[61, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[62, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[63, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[64, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[65, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[66, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[69, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[79, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[80, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[80, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[84, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[85, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[86, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[87, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[88, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[89, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[90, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[91, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[92, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[93, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[94, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[95, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[96, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[107, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[108, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[109, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[111, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[112, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[113, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[114, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[115, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[116, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[117, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[118, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[119, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[120, "polaris.validate.compare_variables"]], "plot_global_lat_lon_field() (in module polaris.viz)": [[121, "polaris.viz.plot_global_lat_lon_field"]], "plot_global_mpas_field() (in module polaris.viz)": [[122, "polaris.viz.plot_global_mpas_field"]], "plot_horiz_field() (in module polaris.viz)": [[123, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[124, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[125, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[125, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[126, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[127, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[128, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[129, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[130, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[131, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[141, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[141, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[142, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[142, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[149, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[150, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[150, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[151, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[152, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[153, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[153, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[154, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[155, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[156, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[156, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[157, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[158, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[159, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[160, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[161, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[162, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[163, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[164, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[164, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[165, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[165, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[166, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[166, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[167, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[168, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[169, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[169, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[170, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[171, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[173, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[173, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[174, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[175, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[175, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[177, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[177, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[178, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[179, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[180, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[180, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[181, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[181, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[182, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[183, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[183, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[184, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[185, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[185, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[186, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[187, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[188, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[188, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[189, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[190, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[190, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[191, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[192, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[193, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[193, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[194, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[195, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[196, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[196, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[197, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[198, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[198, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[199, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[200, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[201, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[201, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[203, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[204, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[204, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[205, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[205, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[206, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[207, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[207, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[208, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[209, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[209, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[210, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[211, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[211, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[221, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "add_internal_wave_tasks() (in module polaris.ocean.tasks.internal_wave)": [[222, "polaris.ocean.tasks.internal_wave.add_internal_wave_tasks"]], "default (class in polaris.ocean.tasks.internal_wave.default)": [[223, "polaris.ocean.tasks.internal_wave.default.Default"]], "__init__() (polaris.ocean.tasks.internal_wave.default.default method)": [[223, "polaris.ocean.tasks.internal_wave.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.internal_wave.forward)": [[224, "polaris.ocean.tasks.internal_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[224, "polaris.ocean.tasks.internal_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[225, "polaris.ocean.tasks.internal_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.internal_wave.forward.forward method)": [[226, "polaris.ocean.tasks.internal_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.internal_wave.init)": [[227, "polaris.ocean.tasks.internal_wave.init.Init"]], "__init__() (polaris.ocean.tasks.internal_wave.init.init method)": [[227, "polaris.ocean.tasks.internal_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.internal_wave.init.init method)": [[228, "polaris.ocean.tasks.internal_wave.init.Init.run"]], "rpe (class in polaris.ocean.tasks.internal_wave.rpe)": [[229, "polaris.ocean.tasks.internal_wave.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[229, "polaris.ocean.tasks.internal_wave.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.internal_wave.rpe.rpe method)": [[230, "polaris.ocean.tasks.internal_wave.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.internal_wave.rpe.analysis)": [[231, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[231, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.internal_wave.rpe.analysis.analysis method)": [[232, "polaris.ocean.tasks.internal_wave.rpe.analysis.Analysis.run"]], "viz (class in polaris.ocean.tasks.internal_wave.viz)": [[233, "polaris.ocean.tasks.internal_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[233, "polaris.ocean.tasks.internal_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.internal_wave.viz.viz method)": [[234, "polaris.ocean.tasks.internal_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[235, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[235, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[236, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[237, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[237, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[238, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[239, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[239, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[240, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[241, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[242, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[242, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[243, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[244, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[244, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[245, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[246, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[246, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[247, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[248, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[249, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[249, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[250, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[250, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[251, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[251, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[252, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[252, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[253, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[254, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[254, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[255, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[256, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[256, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[257, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[258, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[259, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[259, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[260, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[261, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[261, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[262, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[263, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[263, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[264, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[264, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[265, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[266, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[266, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[267, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[268, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[268, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[269, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[270, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[271, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[272, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[273, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[274, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[275, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[276, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[277, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[278, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[279, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "compute_transect() (in module polaris.ocean.viz)": [[280, "polaris.ocean.viz.compute_transect"]], "plot_transect() (in module polaris.ocean.viz)": [[281, "polaris.ocean.viz.plot_transect"]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[282, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights"]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[283, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights"]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[284, "polaris.ocean.viz.transect.horiz.make_triangle_tree"]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[285, "polaris.ocean.viz.transect.horiz.mesh_to_triangles"]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[286, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights"]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[287, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells"]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[288, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes"]], "seaice (class in polaris.seaice)": [[315, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[315, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[316, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[317, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[317, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[318, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[318, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[319, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[320, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[320, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[321, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[321, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[322, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[322, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[323, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})