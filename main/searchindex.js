Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.initial_state.InitialState", "polaris.ocean.tests.single_column.initial_state.InitialState.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "test_group_name", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 99, 109, 113, 139, 146, 209, 210, 211], "date": [1, 4, 48, 191, 206, 211], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 36, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 75, 77, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 113, 114, 119, 122, 123, 124, 125, 131, 133, 135, 137, 138, 140, 142, 143, 145, 147, 150, 152, 153, 155, 158, 161, 162, 164, 165, 167, 169, 171, 174, 176, 177, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228], "purpos": [1, 45, 204, 205, 208, 210, 228], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 57, 58, 59, 62, 63, 65, 66, 67, 68, 71, 72, 80, 81, 83, 84, 90, 96, 104, 105, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 191, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 219, 222, 223, 225, 226, 227, 229], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 66, 106, 110, 122, 124, 127, 181, 183, 189, 190, 191, 197, 198, 201, 202, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 225, 226, 227], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 65, 66, 71, 81, 84, 88, 94, 95, 96, 97, 99, 101, 104, 105, 107, 109, 114, 115, 117, 118, 119, 122, 124, 125, 137, 138, 139, 146, 165, 166, 176, 183, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 228, 229], "summar": 1, "what": [1, 9, 11, 14, 119, 205, 210, 217, 226, 227], "capabl": [1, 14, 119, 201, 205, 210, 216, 227], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 105, 131, 142, 152, 183, 189, 190, 203, 204, 206, 209, 212, 213, 214, 215, 217, 227], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 115, 117, 118, 119, 122, 191, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 228, 229], "through": [1, 98, 205, 206, 210], "process": [1, 6, 12, 27, 81, 114, 201, 205, 206, 208, 209, 210], "It": [1, 4, 12, 14, 32, 38, 106, 194, 201, 202, 203, 204, 205, 206, 208, 210, 211, 216], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 66, 97, 98, 105, 106, 107, 115, 116, 117, 118, 119, 120, 122, 127, 142, 152, 191, 198, 201, 202, 203, 204, 206, 207, 210, 211, 222, 223, 225, 226, 227], "clear": [1, 205, 210], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 58, 65, 71, 84, 100, 101, 137, 145, 164, 176, 183, 189, 190, 201, 205, 206, 207, 208, 209, 227], "code": [1, 4, 5, 7, 10, 12, 32, 122, 191, 198, 201, 202, 203, 208, 209, 211, 218, 222, 225, 227], "do": [1, 4, 7, 9, 12, 14, 15, 109, 201, 203, 206, 207, 208, 210, 216, 223, 227], "current": [1, 4, 6, 9, 19, 29, 32, 39, 104, 105, 119, 124, 176, 191, 195, 197, 198, 201, 205, 206, 208, 209, 210, 211, 216, 219, 222, 223, 225, 227, 228, 229], "doe": [1, 7, 10, 12, 201, 209, 210, 216], "primari": [1, 4, 7, 210, 229], "challeng": 1, "respect": [1, 6, 7, 12, 16, 122, 201, 205, 223, 226], "softwar": [1, 75, 217, 227], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 104, 105, 106, 122, 169, 183, 189, 190, 191, 197, 198, 199, 201, 203, 204, 205, 206, 210, 211, 216, 217, 219, 226, 227, 228], "appropri": [1, 4, 12, 20, 70, 80, 119, 191, 194, 197, 198, 201, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227], "final": [1, 5, 194, 195, 197, 199, 201, 203, 210, 223], "statement": [1, 10, 201, 208], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 49, 52, 77, 85, 86, 87, 88, 92, 93, 94, 99, 107, 108, 122, 129, 183, 189, 190, 198, 199, 200, 201, 205, 206, 208, 210, 211, 216, 220, 226, 227], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 65, 105, 122, 142, 152, 181, 191, 193, 194, 195, 197, 198, 201, 206, 210, 211, 216, 223, 227], "regard": 1, "success": [1, 51, 191, 198, 210, 211], "last": [1, 202, 206, 222, 227], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 99, 101, 124, 148, 194, 201, 203, 204, 206, 209, 210, 211, 222, 227], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 64, 69, 74, 99, 100, 101, 109, 110, 113, 114, 139, 146, 194, 198, 201, 203, 204, 205, 206, 208, 210, 211, 217, 223], "your": [1, 3, 4, 9, 119, 191, 205, 206, 207, 210, 211, 212, 213, 216, 217, 223, 227], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 81, 96, 97, 98, 103, 104, 105, 129, 150, 158, 161, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 216, 217, 223, 227, 228, 229], "appear": [1, 119, 201, 210], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 54, 60, 61, 70, 98, 114, 119, 122, 134, 144, 154, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 216, 219, 222, 223, 226, 227, 229], "under": [1, 14, 32, 33, 104, 119, 122, 193, 201, 202, 206, 209, 219, 228], "head": [1, 193, 213], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 97, 98, 103, 105, 122, 124, 132, 134, 136, 143, 144, 149, 154, 175, 191, 194, 197, 201, 203, 204, 205, 206, 207, 208, 209, 211, 216, 217, 219, 222, 223, 226, 227, 228, 229], "correspond": [1, 5, 15, 104, 105, 122, 191, 201, 206, 222], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 59, 66, 67, 70, 73, 84, 90, 104, 105, 124, 143, 183, 189, 190, 195, 198, 201, 204, 205, 216, 219, 222], "propos": 1, "discuss": [1, 122, 201, 203, 204, 205, 210, 222, 223], "technic": [1, 5], "issu": [1, 201, 202, 206, 223], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 119, 194, 201, 203, 204, 206, 207, 210, 219], "focu": [1, 210], "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 97, 98, 103, 108, 113, 115, 116, 117, 118, 119, 120, 133, 137, 139, 143, 145, 146, 147, 153, 166, 176, 191, 194, 197, 198, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 222, 226], "To": [1, 4, 10, 14, 15, 105, 119, 122, 191, 201, 205, 206, 210, 212, 213, 214, 215, 216, 217, 219, 223, 227], "extent": [1, 11, 14, 210, 222], "possibl": [1, 6, 9, 61, 122, 193, 201, 202, 205, 210, 219], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 97, 98, 103, 104, 105, 191, 198, 201, 205, 206, 208, 210, 222, 227, 228], "independ": [1, 4, 202, 208], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 115, 134, 144, 154, 195, 198, 199, 203, 204, 205, 206, 207, 208, 209, 211, 212, 222, 228], "thu": [1, 5, 12, 210], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 105, 122, 124, 201, 204, 208, 210, 211, 216, 219, 223, 228], "clean": [1, 201, 203, 206], "plan": [1, 11, 191, 201, 208, 228], "For": [1, 2, 4, 5, 10, 12, 14, 16, 80, 98, 115, 193, 194, 201, 205, 206, 208, 210, 211, 212, 220, 223, 227, 228], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 115, 116, 117, 118, 119, 120, 191, 198, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 223, 227, 228, 229], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 62, 65, 67, 85, 89, 90, 92, 97, 98, 103, 105, 115, 116, 117, 118, 119, 120, 122, 191, 194, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 227, 228, 229], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 88, 94, 104, 105, 109, 122, 132, 134, 136, 144, 149, 154, 175, 191, 194, 195, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 216, 220, 223, 226, 227], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 58, 60, 61, 80, 86, 93, 99, 101, 104, 105, 106, 113, 119, 124, 167, 194, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 216, 219, 227, 228, 229], "intend": [1, 6, 7, 202, 211, 228], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 96, 106, 119, 122, 131, 142, 152, 194, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 54, 105, 193, 195, 199, 201, 203, 205, 206, 207, 210, 223, 227], "pde": 1, "solver": [1, 203, 206, 209, 227], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 116, 119, 120, 199, 203, 204, 205, 206, 210, 227], "well": [1, 6, 7, 10, 11, 122, 186, 194, 197, 201, 206, 208, 210, 211, 223, 227, 228], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 58, 104, 105, 135, 137, 142, 147, 152, 157, 164, 172, 174, 176, 191, 194, 195, 197, 201, 202, 203, 208, 209, 210, 211, 216, 222, 229], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 122, 195, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 216, 219, 223, 226, 227, 228, 229], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 75, 77, 81, 85, 86, 87, 88, 89, 92, 93, 94, 96, 98, 99, 100, 101, 104, 105, 107, 109, 110, 113, 114, 119, 124, 127, 132, 137, 161, 166, 169, 187, 191, 193, 194, 195, 197, 198, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 223, 226, 227, 228, 229], "low": [1, 107], "level": [1, 9, 10, 11, 15, 16, 122, 183, 184, 185, 186, 187, 188, 189, 190, 194, 199, 200, 201, 203, 204, 210, 211, 222, 223, 225, 226, 229], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 58, 65, 71, 75, 80, 84, 85, 89, 92, 104, 105, 107, 108, 109, 114, 119, 122, 124, 131, 137, 140, 150, 158, 160, 161, 164, 169, 171, 176, 183, 189, 190, 193, 197, 203, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 220, 222, 226, 227], "declar": [1, 5], "interfac": [1, 8, 181, 182, 183, 189, 190, 201, 205, 206, 209, 210, 219], "sequenc": [1, 4, 12, 200, 201, 205, 208, 210, 227, 228, 229], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 80, 81, 82, 97, 104, 105, 107, 115, 116, 117, 118, 119, 120, 124, 137, 176, 194, 201, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 219, 223, 226, 227], "want": [1, 4, 9, 12, 14, 15, 43, 122, 201, 204, 206, 207, 210, 211, 216, 217, 225, 227, 228], "math": 1, "syntax": [1, 210], "almost": [1, 7], "ident": [1, 4, 15, 133, 143, 153, 194, 202, 205, 210, 222], "latex": 1, "b": [1, 4, 206, 208, 210, 227], "2": [1, 11, 12, 15, 33, 153, 193, 194, 199, 202, 206, 210, 211, 213, 216, 219, 222, 223, 227], "2ab": 1, "imag": [1, 5, 16, 106, 107, 204, 210, 226], "keep": [1, 4, 7, 12, 19, 50, 201, 203, 206, 210, 226], "mind": [1, 4, 210], "quit": [1, 199, 201, 203, 210], "small": [1, 7, 38, 201, 204, 210, 212, 213, 218, 219, 225, 227], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 70, 80, 81, 96, 98, 105, 110, 119, 122, 124, 137, 176, 183, 186, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 225, 226, 227, 228, 229], "prefer": [1, 201, 202, 210, 211], "png": [1, 11, 16, 195, 210], "okai": [1, 201, 210], "size": [1, 11, 60, 61, 70, 122, 126, 128, 129, 194, 204, 210, 211, 222, 223, 225, 226], "repo": [1, 4, 191, 209, 210], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 219, 226, 227, 228, 229], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 119, 201, 204, 206, 210, 216, 220, 227], "actual": [1, 4, 10, 201, 203, 206, 210], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 201, 206, 210, 211, 212, 213, 214, 215, 216, 217, 227], "project": [1, 4, 5, 57, 88, 94, 191, 205, 206, 210, 211, 212, 213, 216, 227], "manag": [1, 207, 216], "item": [1, 210], "git": [1, 13, 83, 191, 206, 210, 211, 227], "branch": [1, 4, 119, 191, 198, 201, 206, 210, 227], "timelin": 1, "staf": 1, "via": [1, 4, 12, 201, 206, 216], "block": [1, 203], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 85, 89, 92, 122, 199, 201, 204, 205, 206, 207, 209, 210, 211, 216, 222, 223, 227, 228], "def": [1, 5, 7, 9, 10, 14, 16, 198, 201, 203, 204, 205, 210], "example_funct": 1, "foo": [1, 205], "return": [1, 5, 25, 49, 51, 59, 60, 61, 66, 70, 77, 90, 98, 99, 101, 109, 113, 114, 122, 125, 127, 129, 138, 162, 165, 181, 184, 185, 186, 187, 188, 205, 210, 223], "0": [1, 4, 5, 11, 12, 15, 16, 60, 85, 89, 92, 105, 115, 116, 117, 118, 119, 120, 122, 183, 188, 189, 190, 193, 195, 201, 204, 205, 207, 210, 211, 213, 216, 219, 220, 222, 223, 225, 226, 227], "how": [1, 4, 10, 12, 65, 122, 200, 201, 203, 205, 206, 211, 216, 217], "show": [1, 5, 11, 201, 210, 216, 217, 222, 223, 226], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 80, 118, 119, 122, 128, 194, 195, 197, 200, 201, 203, 204, 205, 206, 210, 211, 213, 215, 216, 217, 219, 223, 225, 227, 229], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 80, 97, 98, 103, 118, 119, 122, 127, 161, 191, 194, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 227, 228, 229], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 86, 93, 97, 98, 99, 103, 105, 107, 109, 122, 127, 133, 143, 153, 191, 193, 198, 200, 201, 203, 204, 205, 206, 210, 211, 213, 216, 219, 222, 223, 225, 226, 227, 228, 229], "regress": [1, 157, 194, 202, 208, 209, 210, 222, 227, 229], "suit": [1, 5, 10, 15, 32, 41, 54, 95, 96, 98, 119, 194, 200, 201, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 222], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 81, 84, 105, 122, 124, 137, 176, 194, 199, 201, 203, 204, 205, 206, 207, 210, 216, 219, 227], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 65, 96, 110, 122, 191, 194, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 216, 219, 222, 223, 227, 229], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 66, 80, 122, 139, 146, 191, 198, 201, 203, 205, 206, 207, 209, 210, 211, 212, 216, 217, 219, 222, 223, 227, 229], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 80, 81, 82, 83, 97, 98, 103, 119, 122, 181, 183, 184, 185, 189, 190, 194, 201, 204, 205, 209, 210, 211, 213, 216, 217, 219, 226, 227, 228], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 83, 95, 97, 98, 103, 118, 119, 142, 152, 169, 171, 172, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 223, 225, 227, 228], "properli": [1, 115, 117, 118, 210, 211, 227], "addit": [1, 5, 7, 32, 198, 199, 201, 203, 204, 205, 206, 210], "modif": [1, 5, 201], "nightli": [1, 206, 227, 229], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 104, 105, 191, 201, 203, 204, 205, 206, 208, 210, 211, 222, 227, 228, 229], "might": [1, 9, 12, 14, 16, 201, 204, 206, 210, 211, 216, 227], "made": [1, 4, 14, 32, 35, 41, 105, 201, 203, 205, 208, 210, 228], "ensur": [1, 7, 12, 50, 194, 205, 206, 223, 225], "continu": [1, 201, 210], "expect": [1, 10, 14, 198, 201, 206, 210, 223, 225], "page": [2, 5, 212], "auto": 2, "summari": [2, 213], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 66, 97, 98, 122, 193, 194, 195, 199, 201, 202, 203, 205, 206, 208, 216, 220, 222, 223, 226, 227, 228], "relev": [2, 5, 7, 122, 210, 212, 213, 214, 215, 216, 217, 226, 227], "main": [2, 5, 7, 12, 37, 119, 172, 198, 204, 205, 206, 210, 228], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 137, 164, 176, 194, 201, 202, 205, 206, 209, 210, 219], "document": [2, 7, 12, 201, 205, 209, 211, 227], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 103, 192, 194, 195, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 216, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229], "As": [3, 4, 11, 15, 60, 122, 201, 202, 203, 204, 205, 206, 210, 211, 219, 223, 225, 229], "long": [3, 19, 29, 32, 39, 81, 124, 137, 176, 201, 210, 222, 227], "follow": [3, 4, 5, 11, 12, 16, 57, 119, 183, 189, 190, 191, 193, 194, 201, 202, 203, 206, 207, 210, 211, 216, 217, 219, 221, 223, 225, 227], "procedur": [3, 119, 206, 210, 217], "conda": [3, 4, 13, 83, 115, 117, 118, 119, 191, 198, 205, 209, 210, 211, 212, 213, 214, 215, 217], "environ": [3, 4, 80, 115, 117, 118, 119, 191, 198, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217], "spack": [3, 4, 115, 117, 118, 119, 207, 209, 210, 212, 213, 214, 215, 216, 217], "compil": [3, 4, 12, 115, 116, 117, 118, 119, 120, 207, 209, 210, 212, 213, 214, 215, 216, 217, 227], "system": [3, 4, 19, 29, 32, 39, 80, 81, 82, 115, 117, 118, 119, 124, 137, 176, 201, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 227], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 57, 77, 99, 115, 117, 118, 119, 122, 198, 199, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 227], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 66, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 98, 99, 101, 103, 104, 105, 106, 107, 115, 116, 117, 118, 119, 120, 137, 139, 142, 146, 152, 157, 159, 166, 176, 183, 189, 190, 191, 193, 194, 195, 197, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 225, 226, 229], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 72, 83, 97, 98, 103, 104, 105, 115, 116, 117, 118, 119, 120, 122, 142, 152, 157, 191, 194, 195, 197, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226, 228], "alreadi": [3, 9, 12, 43, 53, 122, 137, 176, 203, 205, 206, 210, 211, 216, 219, 223, 227], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 77, 83, 99, 103, 109, 119, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 227], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 54, 81, 124, 137, 176, 201, 203, 205, 206, 210, 212, 213, 214, 215, 217, 222, 227, 229], "Then": [3, 5, 9, 115, 116, 117, 118, 119, 120, 122, 191, 194, 197, 198, 201, 203, 204, 206, 210, 216, 222, 227], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 57, 81, 90, 97, 98, 103, 105, 118, 119, 124, 125, 135, 137, 138, 139, 143, 146, 150, 155, 161, 164, 165, 166, 174, 176, 179, 191, 194, 195, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 228, 229], "script": [3, 4, 10, 16, 47, 116, 119, 120, 205, 208, 209, 210, 213, 216], "doc": [3, 5, 203, 210, 217], "cd": [3, 191, 206, 210, 213, 227], "rm": 3, "rf": 3, "developers_guid": [3, 210], "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 59, 60, 62, 75, 105, 115, 116, 117, 118, 119, 120, 124, 128, 133, 143, 153, 171, 183, 189, 190, 191, 194, 201, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 222, 223, 227, 229], "html": [3, 220], "view": [3, 206], "open": [3, 206, 210], "index": [3, 15, 183, 184, 185, 186, 187, 188, 189, 190, 203, 204, 210], "act": [4, 205, 219], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 133, 135, 174, 194, 197, 201, 203, 210, 211, 216, 222, 225, 227], "These": [4, 6, 12, 15, 17, 32, 122, 191, 193, 198, 201, 203, 205, 206, 209, 210, 211, 216, 222, 227, 228, 229], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 83, 105, 119, 122, 194, 197, 201, 202, 203, 204, 207, 208, 210, 213, 216, 217, 220, 222, 223], "describ": [4, 5, 12, 14, 83, 99, 101, 104, 105, 114, 119, 122, 194, 195, 197, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 227], "below": [4, 12, 19, 29, 32, 39, 81, 119, 124, 137, 176, 191, 199, 201, 203, 204, 206, 210, 211, 216, 219, 223, 225, 227], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 54, 95, 104, 105, 119, 122, 127, 188, 194, 197, 201, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 217, 219, 222, 223, 225, 227, 228], "instal": [4, 206, 210, 216, 217, 227], "abov": [4, 5, 12, 15, 199, 201, 202, 203, 204, 205, 206, 210, 211, 223, 225, 227, 229], "develop": [4, 5, 6, 10, 11, 16, 119, 122, 191, 193, 198, 201, 202, 205, 207, 211, 216, 220, 227], "local": [4, 6, 9, 32, 34, 41, 191, 199, 201, 203, 206, 207, 210, 211, 216, 217, 219], "off": [4, 206, 207], "http": [4, 5, 9, 53, 201, 205, 207, 209, 210, 211, 217, 220, 227], "github": [4, 5, 205, 206, 209, 210, 211, 220, 227], "com": [4, 5, 53, 205, 206, 209, 210, 211, 227], "e3sm": [4, 5, 8, 9, 32, 108, 191, 198, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 58, 59, 65, 66, 71, 84, 91, 97, 98, 103, 108, 119, 122, 131, 133, 135, 137, 140, 143, 145, 147, 150, 153, 155, 158, 161, 164, 167, 169, 171, 174, 176, 177, 179, 183, 189, 190, 195, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 223, 227], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 115, 117, 118, 194, 195, 201, 203, 206, 207, 210, 211, 216, 220, 221, 222, 225, 226, 227, 228, 229], "mode": [4, 12, 198, 206, 208, 209, 210, 227], "mean": [4, 15, 80, 162, 195, 206, 210, 219, 222, 229], "chang": [4, 6, 12, 14, 15, 65, 191, 198, 201, 202, 203, 205, 206, 208, 210, 211, 213, 217, 219, 222, 227, 229], "reflect": [4, 206], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 57, 90, 95, 119, 122, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 227], "tool": [4, 7, 10, 12, 14, 191, 198, 201, 206, 209, 210, 211], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 66, 75, 78, 80, 81, 84, 90, 95, 105, 106, 107, 108, 109, 114, 115, 119, 122, 124, 125, 126, 127, 128, 137, 138, 139, 146, 158, 161, 165, 169, 176, 181, 183, 184, 185, 189, 190, 191, 193, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 229], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 57, 58, 63, 65, 68, 71, 81, 83, 84, 95, 96, 97, 98, 103, 104, 105, 119, 122, 123, 124, 181, 191, 193, 194, 195, 197, 198, 199, 201, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 54, 58, 63, 65, 68, 71, 81, 83, 84, 95, 96, 97, 98, 99, 103, 104, 105, 119, 122, 123, 124, 130, 131, 133, 135, 137, 140, 141, 142, 143, 145, 147, 148, 150, 151, 152, 153, 155, 156, 158, 159, 161, 163, 164, 167, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 208, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 229], "support": [4, 6, 11, 14, 32, 122, 183, 189, 190, 193, 195, 201, 203, 204, 205, 209, 210, 211, 213, 217, 219, 222, 225, 228], "machin": [4, 6, 32, 34, 41, 83, 97, 98, 103, 191, 201, 203, 205, 209, 210, 211, 212, 213, 214, 215, 217], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 58, 64, 65, 66, 69, 71, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 119, 124, 127, 137, 139, 146, 148, 159, 166, 176, 181, 183, 184, 185, 189, 190, 191, 194, 195, 197, 198, 201, 202, 203, 204, 205, 207, 209, 211, 219, 221, 227, 228], "h": [4, 12, 210], "t": [4, 5, 7, 9, 10, 12, 32, 33, 114, 122, 137, 176, 201, 203, 205, 206, 207, 210, 211, 213, 215, 216, 221, 222, 227, 228, 229], "n": [4, 59, 66, 67, 73, 201, 210, 213, 216, 217, 222, 223, 226, 227], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 58, 59, 60, 61, 62, 70, 81, 84, 98, 122, 124, 125, 126, 128, 137, 138, 162, 165, 176, 191, 194, 201, 202, 203, 204, 205, 208, 210, 211, 216, 219, 221, 222, 223, 225, 226, 227], "v": [4, 206, 210, 229], "By": [4, 12, 15, 33, 34, 122, 191, 198, 203, 210, 211, 222, 225], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 66, 71, 76, 83, 84, 85, 89, 92, 96, 97, 98, 100, 103, 115, 117, 118, 122, 124, 137, 174, 176, 191, 195, 197, 198, 201, 203, 204, 206, 209, 211, 212, 213, 214, 215, 216, 217, 219, 223, 225, 226, 227, 228, 229], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 81, 83, 97, 98, 122, 123, 124, 131, 137, 176, 183, 189, 190, 191, 194, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 216, 219, 220, 222, 223, 226, 227, 228], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 58, 65, 71, 84, 97, 98, 104, 105, 124, 137, 140, 145, 150, 155, 168, 169, 171, 176, 177, 179, 201, 205, 210, 211, 222, 225, 227], "example_compact": [4, 191, 198, 211], "1km": [4, 203, 204, 210, 222, 227], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 60, 115, 116, 117, 118, 119, 120, 122, 133, 137, 153, 176, 183, 189, 190, 194, 195, 197, 199, 201, 203, 206, 207, 210, 211, 213, 216, 217, 219, 222, 223, 225, 226, 227], "test2": 4, "displai": [4, 6, 217], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 54, 57, 83, 97, 98, 103, 104, 105, 107, 191, 198, 201, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 227, 228], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 83, 95, 97, 98, 103, 104, 105, 119, 142, 152, 169, 171, 191, 194, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 227, 228], "help": [4, 11, 199, 201, 206, 209, 210, 216, 220], "messag": [4, 6, 15, 203, 207, 217], "test_expr": [4, 54], "flag": [4, 201, 205, 207, 208, 210, 211, 220, 222, 227], "suppli": [4, 5, 15, 114, 201, 206, 210], "substr": 4, "regular": [4, 16, 54, 59, 66, 158, 161, 210, 212, 215, 216, 217, 227], "express": [4, 54], "subset": 4, "think": [4, 210], "search": [4, 54, 213], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 103, 104, 105, 194, 198, 199, 201, 202, 203, 204, 206, 208, 210, 211, 213, 216, 223, 226], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 58, 65, 71, 75, 77, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 113, 122, 124, 127, 129, 131, 137, 145, 162, 164, 167, 169, 171, 176, 182, 198, 201, 203, 204, 205, 206, 208, 210, 211, 217, 222, 227, 229], "singl": [4, 6, 16, 107, 173, 174, 177, 201, 203, 205, 208, 210, 216, 225], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 60, 70, 77, 80, 81, 96, 99, 101, 104, 105, 109, 122, 124, 147, 162, 186, 194, 195, 197, 201, 203, 207, 209, 210, 211, 222, 223, 225, 226, 227, 229], "instead": [4, 10, 12, 19, 96, 115, 119, 201, 203, 205, 206, 210, 212, 227, 229], "pass": [4, 6, 10, 11, 12, 15, 41, 70, 105, 106, 198, 201, 203, 204, 205, 206, 208, 227], "similarli": [4, 6, 191, 201, 206, 216, 227], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 56, 83, 103, 108, 124, 130, 137, 157, 164, 173, 176, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 216, 218, 221, 228], "result": [4, 11, 15, 51, 61, 70, 104, 105, 119, 122, 133, 143, 150, 153, 155, 179, 194, 195, 201, 202, 205, 206, 208, 210, 211, 222, 223, 226, 229], "verbos": [4, 54, 56, 201, 210, 229], "about": [4, 5, 6, 10, 12, 15, 32, 84, 108, 122, 201, 203, 204, 205, 206, 210, 211, 213], "its": [4, 5, 6, 10, 14, 16, 32, 43, 90, 100, 198, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 223, 227, 228], "descript": [4, 5, 210, 211, 220], "short": [4, 135, 174, 201, 202, 203, 205, 210, 222], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 81, 103, 122, 123, 124, 133, 135, 174, 194, 197, 198, 199, 201, 202, 203, 204, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 227, 229], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 54, 58, 65, 71, 84, 124, 137, 169, 171, 176, 194, 199, 201, 203, 205, 210, 227, 228], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 58, 63, 65, 68, 71, 72, 81, 83, 84, 90, 95, 96, 97, 98, 105, 122, 124, 125, 129, 131, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 193, 194, 195, 197, 198, 199, 200, 203, 204, 205, 208, 209, 211, 217, 219, 228, 229], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 58, 65, 71, 84, 124, 137, 169, 171, 176, 201, 203, 210], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 95, 105, 191, 198, 201, 203, 204, 208, 209, 210, 220], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 103, 106, 107, 122, 124, 172, 193, 201, 203, 204, 206, 210, 219, 228], "built": [4, 12, 97, 98, 103, 191, 198, 206, 209, 211, 216, 227], "execut": [4, 6, 12, 15, 19, 97, 98, 103, 124, 191, 198, 201, 206, 210, 211, 212, 213, 214, 215, 216, 217, 227], "standalon": [4, 12, 118, 198, 206, 208, 209, 216], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 57, 75, 86, 93, 99, 101, 103, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 127, 157, 158, 169, 182, 191, 192, 194, 195, 197, 198, 199, 201, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 225, 226, 227, 228, 229], "befor": [4, 6, 12, 14, 38, 201, 204, 205, 206, 207, 210, 213, 217, 219, 223, 227], "w": [4, 206, 208, 210, 227], "num": 4, "f": [4, 7, 9, 12, 203, 205, 206, 210, 211, 217, 222, 227], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 57, 74, 75, 76, 77, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 119, 124, 128, 129, 139, 142, 146, 152, 169, 171, 182, 191, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 217, 219, 222, 223, 226, 227, 228], "m": [4, 12, 59, 66, 67, 73, 194, 197, 204, 206, 210, 212, 213, 214, 215, 217, 219, 222, 223, 225, 227], "mach": [4, 32, 212, 213, 214, 215, 216, 217, 227], "p": [4, 206, 210, 211, 227], "suite_nam": [4, 6, 96, 98, 103, 227], "specifi": [4, 12, 14, 15, 16, 34, 193, 201, 206, 210, 211, 217, 222, 223, 226, 227], "either": [4, 5, 6, 10, 11, 12, 14, 60, 122, 191, 201, 206, 208, 210, 211, 219, 225, 227], "onli": [4, 5, 6, 12, 14, 15, 41, 119, 191, 193, 195, 197, 198, 201, 203, 205, 209, 210, 211, 213, 216, 217, 219, 221, 222, 223, 225, 227], "time": [4, 5, 6, 12, 15, 16, 32, 41, 107, 122, 129, 137, 147, 166, 176, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 217, 227, 229], "wai": [4, 5, 11, 12, 32, 62, 67, 119, 122, 201, 203, 204, 205, 206, 207, 209, 210, 216, 219], "altern": [4, 11, 227], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 97, 98, 142, 152, 198, 199, 201, 202, 203, 204, 205, 206, 210, 211, 216, 222, 223, 225, 226, 227], "case_numb": 4, "multipl": [4, 5, 12, 15, 192, 202, 205, 206, 210, 216, 222, 227], "separ": [4, 5, 7, 12, 14, 15, 201, 202, 208, 210, 223, 227], "space": [4, 5, 7, 11, 201, 206, 210, 213, 216, 227], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 84, 124, 137, 176, 191, 198, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 216, 219, 220, 226, 227, 228], "few": [4, 11, 12, 19, 29, 32, 39, 81, 119, 124, 194, 197, 201, 205, 210, 211, 216], "basic": [4, 5, 211, 213, 216, 227], "piec": [4, 198, 210], "inform": [4, 5, 6, 32, 84, 105, 114, 201, 203, 206, 211, 213, 220, 227], "abl": [4, 115, 116, 117, 118, 120, 122, 201, 202, 204, 206, 210, 216, 227], "place": [4, 12, 15, 106, 201, 203, 210, 216], "download": [4, 6, 8, 32, 34, 40, 142, 152, 203, 205, 206, 211, 227, 229], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 193, 194, 199, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 227, 228, 229], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 90, 99, 101, 102, 106, 107, 108, 114, 119, 169, 183, 189, 190, 201, 206, 209, 211, 212, 213, 214, 215, 216, 227, 228, 229], "locat": [4, 12, 15, 16, 41, 97, 98, 103, 191, 201, 206, 208, 210, 211, 213, 216, 219, 222, 223, 227], "where": [4, 5, 12, 15, 32, 34, 41, 51, 83, 97, 98, 103, 106, 122, 183, 186, 189, 190, 191, 198, 200, 201, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 225, 226, 227, 229], "There": [4, 11, 183, 189, 190, 197, 199, 201, 205, 206, 207, 210, 211, 227], "r": [4, 217, 223], "tell": [4, 206], "re": [4, 201, 205, 206, 208, 210, 211, 216, 217, 223], "leav": [4, 16, 195, 203, 211, 223], "unknown": [4, 119, 205, 216], "component_path": [4, 97, 98, 103, 191, 198, 211, 227], "absolut": [4, 7, 32, 34, 50, 97, 98, 103, 191, 198, 201, 206, 227], "landic": [4, 8, 10, 17, 34, 57, 103, 198, 200, 201, 203, 204, 206, 208, 209, 210, 211, 227, 228, 229], "e3sm_submodul": [4, 191, 198, 206, 210], "mali": [4, 119, 198, 201, 206, 208, 210, 211, 227, 228], "dev": [4, 5, 198, 200, 201, 204, 205, 206, 209, 220, 227], "albani": [4, 115, 117, 118, 119, 198, 211, 212, 213, 214, 217, 227], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 142, 152, 195, 203, 206, 208, 210, 211, 216, 217, 219, 223, 227, 228], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 54, 80, 95, 96, 97, 98, 103, 105, 106, 107, 110, 122, 124, 125, 137, 138, 139, 146, 158, 161, 165, 166, 176, 201, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 225, 226, 227], "omega": [4, 25, 108, 124, 127, 191, 198, 205, 206, 208, 210, 220, 227], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 64, 66, 69, 80, 81, 82, 83, 97, 98, 103, 105, 106, 108, 109, 110, 111, 113, 114, 119, 124, 127, 139, 146, 159, 166, 181, 183, 184, 185, 189, 190, 191, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 209, 219, 227, 228], "point": [4, 47, 53, 87, 191, 193, 198, 203, 204, 205, 206, 210, 211, 216, 227], "much": [4, 12, 201, 210], "config_fil": [4, 97, 98, 103], "work_dir": [4, 9, 15, 32, 41, 83, 97, 98, 103, 104, 105, 201, 203, 210], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 64, 69, 71, 97, 98, 103, 119, 126, 128, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 200, 201, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 228], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 72, 95, 100, 103, 105, 122, 169, 171, 191, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 226, 227], "recommend": [4, 5, 9, 16, 201, 202, 205, 206, 210, 216], "itself": [4, 5, 7, 32, 198, 200, 201, 203, 204, 206, 210, 227], "temp": 4, "scratch": [4, 206, 210, 213, 217, 227], "avoid": [4, 201, 210], "confus": [4, 12, 205, 206, 210], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 74, 75, 81, 84, 96, 105, 122, 124, 129, 142, 152, 161, 169, 182, 194, 197, 203, 208, 211, 217, 227, 229], "compar": [4, 8, 15, 41, 97, 98, 103, 104, 105, 132, 134, 136, 144, 149, 154, 175, 195, 197, 202, 205, 206, 208, 210, 221, 222, 227, 229], "previou": [4, 15, 201, 206, 210, 221, 227, 229], "same": [4, 5, 7, 12, 15, 33, 34, 41, 104, 105, 122, 199, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 227, 228, 229], "baseline_dir": [4, 41, 97, 98, 103], "mani": [4, 6, 7, 122, 199, 201, 203, 205, 206, 208, 209, 210, 222, 226], "valid": [4, 5, 6, 8, 41, 183, 184, 185, 186, 187, 188, 189, 190, 194, 197, 205, 206, 209, 219, 222], "sure": [4, 10, 14, 15, 105, 119, 133, 143, 153, 191, 194, 201, 205, 206, 208, 210, 211, 216, 217, 222, 223], "timer": [4, 41, 44, 104, 202, 203, 205], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 82, 90, 105, 115, 117, 118, 124, 137, 176, 191, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 219, 222, 225, 227], "both": [4, 5, 6, 11, 12, 15, 24, 105, 122, 139, 146, 194, 200, 201, 204, 206, 209, 210, 211, 221, 225], "custom": [4, 6, 11, 14, 50, 51, 97, 98, 103, 191, 198, 206, 211, 217, 227], "order": [4, 6, 11, 12, 122, 198, 201, 202, 206, 210, 225, 227], "give": [4, 12, 15, 201, 205, 206, 210, 211, 227], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 119, 122, 124, 183, 189, 190, 191, 194, 198, 201, 203, 205, 206, 208, 210, 211, 216, 217, 219, 222, 223, 225, 227, 229], "after": [4, 5, 12, 14, 16, 32, 34, 35, 72, 90, 119, 184, 185, 191, 198, 201, 203, 206, 210, 211, 213, 217, 227], "c": [4, 98, 119, 201, 206, 212, 213, 214, 215, 216, 217, 221, 227, 229], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 81, 91, 106, 194, 201, 203, 205, 206, 210, 226, 229], "resid": [4, 34], "test_suit": [4, 201], "build": [4, 8, 11, 12, 62, 67, 115, 116, 117, 118, 119, 120, 191, 195, 198, 203, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217], "mpas_model": [4, 211], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 62, 65, 66, 67, 122, 142, 152, 172, 201, 203, 205, 210, 211, 217, 227], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 106, 119, 122, 191, 193, 201, 202, 203, 204, 206, 207, 208, 210, 211, 217, 223, 225, 226, 227, 228], "baselin": [4, 6, 8, 15, 41, 97, 98, 103, 104, 105, 132, 134, 136, 144, 149, 154, 160, 175, 194, 197, 202, 205, 208, 210, 221, 227], "comparison": [4, 15, 41, 104, 105, 203, 210, 211], "against": [4, 6, 8, 15, 105, 160, 194, 197, 201, 210, 221], "oppos": [4, 24, 125, 138, 139, 146, 158, 161, 165, 166, 210], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 38, 39, 81, 84, 122, 124, 126, 128, 137, 176, 194, 201, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217], "parallel": [4, 14, 19, 29, 32, 38, 39, 124, 201, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 227, 228], "been": [4, 12, 15, 32, 41, 43, 90, 97, 98, 103, 115, 117, 118, 122, 161, 191, 198, 201, 203, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 227], "skip_step": 4, "wherea": [4, 10, 201, 210, 221, 228], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 96, 122, 198, 199, 201, 204, 206, 208, 210, 211, 216, 219, 225, 227, 228], "clone": [4, 191, 199, 206, 210, 227], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 119, 137, 176, 194, 201, 202, 205, 206, 207, 210, 219, 222, 225, 229], "just": [4, 12, 19, 29, 32, 39, 54, 119, 124, 201, 205, 206, 208, 210, 213, 217], "pickl": [4, 6, 201, 210, 227], "latter": [4, 41, 119], "conveni": [4, 14, 183, 189, 190, 201, 208, 210, 211, 227], "tab": [4, 227], "complet": [4, 6, 21, 22, 23, 210, 227], "explicitli": [4, 5, 15, 122, 194, 201, 206, 210, 211, 227], "select": [4, 6, 107, 201, 206, 210], "two": [4, 8, 143, 194, 195, 198, 201, 202, 204, 205, 206, 210, 222, 223, 228], "edit": [4, 5, 105, 206, 210, 227], "steps_to_run": [4, 15, 41, 96, 105, 201, 203, 210, 211], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 58, 65, 71, 83, 84, 97, 98, 104, 105, 124, 137, 140, 145, 150, 155, 161, 164, 167, 169, 171, 176, 177, 179, 201, 203, 210, 211, 227], "initial_st": [4, 5, 16, 131, 193, 195, 201, 203, 205, 211, 222, 223], "full_run": [4, 144, 222], "restart_run": [4, 144, 222], "Or": [4, 201, 211], "accomplish": [4, 201, 205], "thing": [4, 115, 116, 117, 118, 119, 120, 122, 201, 205, 209], "skip": [4, 6, 15, 105, 203, 229], "take": [4, 5, 9, 11, 12, 15, 50, 201, 202, 204, 206, 210, 223, 229], "preced": [4, 50], "over": [4, 7, 12, 50, 106, 201, 205, 209, 210, 219, 222, 225, 227], "special": [4, 208, 226], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 124, 201, 216], "polaris_cach": [4, 6, 17, 201], "symlink": [4, 6, 12, 32, 34, 203, 205, 206], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 75, 142, 152, 194, 197, 210, 225], "structur": [4, 11, 25, 127, 200, 203, 209, 210], "without": [4, 15, 34, 201, 205, 206, 210, 211, 215, 216, 226, 227], "redund": [4, 183, 189, 190, 194, 210], "stamp": 4, "revis": [4, 210, 211], "remov": [4, 12, 15, 96, 194, 206, 210], "older": 4, "ones": [4, 183, 189, 190, 205, 210], "version": [4, 13, 27, 50, 83, 104, 105, 191, 194, 198, 199, 201, 204, 205, 206, 209, 210, 211, 216, 217, 220, 222, 227], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 41, 45, 49, 50, 54, 58, 59, 62, 65, 66, 67, 71, 77, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 127, 130, 133, 137, 140, 143, 145, 150, 153, 155, 157, 158, 161, 164, 167, 169, 171, 173, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 222, 223, 226, 227], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 100, 118, 126, 137, 176, 191, 194, 201, 207, 209, 210, 227], "cached_fil": [4, 17, 201], "json": [4, 6, 17, 48, 201, 217], "anvil": [4, 119, 201, 211, 216, 227], "chrysali": [4, 119, 201, 210, 211, 216, 227], "sinc": [4, 12, 15, 114, 122, 194, 201, 203, 205, 206, 210, 222, 223, 226], "copi": [4, 6, 34, 48, 97, 98, 103, 210, 213, 227], "onto": [4, 206], "lcrc": [4, 6, 9, 48, 201, 205, 211, 212, 214, 216, 227], "server": [4, 6, 34, 48, 201, 205, 211, 217], "whose": [4, 201], "global_ocean": [4, 7, 9, 12, 198, 201, 203, 205, 206, 211, 227, 229], "qu240": [4, 12, 201, 205, 206, 211, 227, 229], "mesh": [4, 5, 8, 14, 19, 32, 75, 86, 93, 107, 122, 124, 125, 126, 128, 135, 138, 140, 158, 161, 162, 164, 165, 167, 169, 171, 174, 177, 183, 189, 190, 193, 194, 197, 199, 201, 203, 204, 205, 206, 208, 209, 211, 219, 221, 227, 229], "phc": [4, 201, 219, 229], "init": [4, 12, 16, 29, 39, 191, 198, 201, 203, 205, 206, 210, 211, 227, 229], "ocean_cached_fil": 4, "pr": [4, 227, 229], "look": [4, 5, 9, 15, 204, 205, 210, 211], "someth": [4, 5, 85, 89, 92, 206, 210], "culled_mesh": [4, 201, 210], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 84, 201, 203, 205, 210], "210803": 4, "culled_graph": [4, 201, 210], "info": [4, 10, 12, 19, 26, 75, 124, 201, 210], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 201], "date_str": [4, 48], "let": [4, 201, 206, 208, 210, 211, 217], "string": [4, 7, 12, 34, 88, 94], "choos": [4, 201, 205, 206, 210, 212, 213, 214, 215, 217, 228], "todai": [4, 48], "dry_run": [4, 48], "saniti": [4, 210], "check": [4, 15, 80, 105, 206, 208, 210, 211, 213, 217, 227, 229], "print": [4, 10, 15, 54, 105, 110, 201, 205, 229], "stdout": [4, 10, 32, 41, 201], "translat": [4, 25, 122, 127], "compass": [4, 84, 191, 201, 205, 208, 210], "convert": [4, 7, 11, 12, 122, 201, 210], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 97, 98, 103, 113, 114, 124, 127, 128, 139, 142, 146, 152, 191, 194, 195, 198, 201, 203, 204, 205, 209, 210, 211, 225], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 108, 113, 114, 128, 139, 142, 146, 152, 191, 193, 194, 197, 198, 201, 203, 204, 205, 211, 226], "yaml": [4, 8, 19, 20, 23, 24, 25, 124, 127, 128, 139, 146, 194, 197, 201, 209, 210, 213, 217], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 108, 119, 122, 127, 191, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 219, 222, 223, 225, 226, 227, 228, 229], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 108, 119, 122, 127, 191, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 219, 222, 223, 225, 226, 227, 229], "forward": [4, 5, 12, 15, 32, 129, 135, 136, 145, 147, 149, 174, 175, 191, 198, 201, 203, 205, 211, 222, 223, 226], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 193, 201, 203, 205, 206, 210, 213, 215, 217, 227], "don": [4, 5, 12, 122, 201, 203, 205, 206, 210, 215, 227, 228], "format": [4, 5, 9, 11, 12, 108, 114, 201, 202, 203, 204, 206, 210, 211, 213], "note": [4, 5, 14, 15, 176, 210, 217], "keyword": [4, 5, 12, 15, 16, 195, 201, 203, 223], "top": [4, 16, 183, 184, 185, 186, 187, 188, 189, 190, 193, 199, 210, 219], "ignor": [4, 88, 94], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 60, 90, 95, 119, 122, 124, 200, 201, 203, 204, 205, 206, 208, 211, 219, 227], "pars": [4, 7, 12, 20, 21, 22, 23, 77, 99, 101], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 105, 106, 107, 110, 127, 147, 194, 198, 201, 203, 204, 205, 209, 210, 211, 219, 222, 223, 225], "doesn": [4, 7, 114, 201, 203, 210, 211, 216, 227], "matter": [4, 210], "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 106, 107, 201, 203, 210], "myst": [5, 210], "tip": [5, 206], "easi": [5, 34, 205, 210], "start": [5, 6, 12, 100, 193, 194, 202, 204, 205, 209, 213, 216, 217, 220], "exist": [5, 7, 25, 32, 35, 53, 99, 101, 103, 127, 194, 201, 205, 206, 207, 210, 216, 229], "tree": [5, 99, 101, 114], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 130, 131, 133, 135, 137, 143, 147, 150, 153, 155, 157, 158, 173, 174, 179, 191, 194, 195, 197, 198, 199, 200, 201, 203, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229], "pull": [5, 205, 206, 210, 211], "request": [5, 12, 19, 26, 28, 124, 184, 185, 201, 205, 206, 207, 210, 211, 223], "guid": [5, 122, 194, 197, 202, 205, 210, 213, 216, 220], "baroclinic_channel": [5, 12, 15, 191, 196, 198, 201, 203, 204, 205, 208, 210, 220, 224, 227, 228, 229], "label": [5, 106, 216, 227], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 119, 124, 195, 198, 201, 203, 204, 205, 206, 208, 210, 215, 216, 221, 227, 228], "baroclin": [5, 45, 130, 131, 133, 135, 137, 140, 143, 147, 150, 153, 155, 176, 179, 194, 201, 203, 204, 210, 222], "channel": [5, 45, 130, 131, 133, 135, 137, 140, 143, 147, 150, 153, 155, 176, 179, 194, 201, 203, 207, 210, 222], "And": [5, 12, 206, 210], "becom": [5, 201, 203, 210], "who": [5, 206, 210, 211, 217], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 65, 88, 94, 97, 98, 103, 119, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 216, 219, 222, 223, 225, 228, 229], "brief": [5, 210], "overview": [5, 209, 213, 217], "comment": [5, 202, 211], "appli": [5, 11, 12, 54, 193, 204, 210, 222, 225, 226], "vertic": [5, 16, 193, 194, 197, 201, 211, 218, 220], "grid": [5, 11, 14, 59, 66, 70, 73, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 122, 169, 181, 182, 183, 184, 185, 186, 189, 190, 194, 195, 197, 201, 210, 211], "initi": [5, 6, 32, 129, 132, 135, 140, 157, 167, 174, 177, 194, 195, 197, 201, 203, 204, 205, 207, 208, 209, 211, 219, 221, 228], "condit": [5, 32, 132, 135, 140, 157, 167, 174, 177, 194, 195, 197, 201, 202, 203, 204, 205, 208, 209, 211, 221, 228], "forc": [5, 15, 197, 210, 228], "common": [5, 7, 10, 38, 41, 45, 194, 195, 197, 201, 202, 203, 204, 205, 207, 208, 210, 211, 216, 217, 227, 228, 229], "refer": [5, 12, 32, 129, 147, 183, 186, 189, 190, 201, 203, 205, 206, 208, 209, 210, 219, 222, 227], "awar": [5, 119, 198, 210, 216], "wish": [5, 12, 201, 206, 210, 227, 229], "test_group_nam": 5, "specif": [5, 7, 12, 43, 119, 191, 198, 199, 204, 209, 210, 211, 213, 216, 222, 226, 227, 229], "share": [5, 16, 122, 131, 191, 194, 197, 198, 199, 201, 203, 204, 206, 209, 212, 213, 214, 215, 216, 217, 218, 222, 226, 227], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 59, 66, 119, 122, 131, 142, 152, 201, 203, 204, 205, 209, 210, 223, 228], "public": [5, 9, 201, 210, 211], "api": [5, 10, 209, 210], "underscor": [5, 210], "md": [5, 210], "eval": 5, "rst": [5, 12, 210], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 131, 133, 135, 143, 147, 153, 194, 198, 203, 210], "baroclinicchanneltestcas": [5, 194], "compute_cell_count": [5, 122, 194, 210], "dynamic_model_config": [5, 194, 210], "initialst": [5, 194, 197, 201, 203, 210], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 122, 125, 138, 139, 146, 165, 166, 194, 197, 203, 205, 206, 208, 209, 210, 211, 223, 227, 228], "across": [5, 12, 16, 194, 201, 202, 203, 204, 205, 206, 208, 210, 218, 222, 223], "ot": [5, 210], "automat": [5, 7, 10, 12, 16, 122, 203, 205, 206, 210, 211, 212, 214, 215, 216, 217, 227], "python": [5, 6, 7, 20, 38, 43, 199, 201, 203, 204, 205, 206, 208, 209, 210, 211, 216, 217, 227], "begin": [5, 15, 194, 201, 206, 209, 210, 216, 222, 223, 225], "numpydoc": [5, 210], "text": [5, 6, 222, 223, 225], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 122, 183, 185, 186, 187, 188, 189, 190, 191, 203, 210, 211, 213, 217], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 70, 80, 119, 122, 124, 125, 129, 138, 162, 165, 186, 187, 188, 194, 195, 197, 201, 206, 213, 214, 216, 217, 222, 227], "pressur": [5, 191, 211], "overli": [5, 210], "ic": [5, 122, 191, 205, 206, 209, 210, 211, 213, 219, 228], "shelf": [5, 122, 204, 205, 210, 211, 219], "draft": [5, 219], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 57, 58, 60, 61, 62, 65, 70, 71, 73, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 122, 124, 125, 127, 129, 131, 133, 135, 137, 138, 139, 140, 143, 145, 146, 147, 150, 153, 155, 158, 161, 162, 164, 165, 166, 167, 169, 171, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 201, 203, 204, 222, 223, 225], "xarrai": [5, 14, 16, 107, 183, 184, 185, 186, 187, 188, 189, 190, 201, 210], "dataarrai": [5, 184, 185, 186, 187, 188, 201], "sea": [5, 122, 185, 186, 187, 188, 191, 210, 211, 219], "surfac": [5, 122, 185, 186, 187, 188, 191, 193, 210, 211, 219, 222, 225], "height": [5, 122, 185, 186, 187, 188, 191, 210, 211, 219], "mask": [5, 183, 186, 189, 190, 201, 210, 211, 219], "landicepressur": [5, 203], "deviat": 5, "float": [5, 7, 12, 20, 58, 60, 61, 65, 70, 89, 105, 107, 131, 133, 135, 137, 140, 143, 147, 150, 153, 162, 176, 177, 201, 203, 210], "densiti": [5, 11, 122, 210], "seawat": 5, "displac": 5, "land": [5, 122, 191, 209, 210, 211, 219, 228], "landicedraft": 5, "equal": [5, 205, 225], "entri": [5, 47, 78, 97, 98], "alwai": [5, 7, 10, 15, 50, 122, 191, 198, 205, 206, 210, 211], "own": [5, 6, 9, 10, 16, 32, 201, 203, 205, 206, 208, 210, 211, 223, 227, 228], "line": [5, 8, 30, 32, 81, 91, 201, 202, 205, 206, 209, 227], "type": [5, 12, 14, 16, 20, 86, 93, 114, 174, 177, 201, 203, 204, 205, 206, 207, 208, 210, 211, 222, 223, 225, 226, 229], "side": 5, "colon": 5, "doubl": [5, 122, 201, 202, 210], "back": [5, 210, 213, 227], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 61, 82, 191, 205, 206, 207, 210, 211, 227], "arg": [5, 10, 32, 81, 201], "indic": [5, 6, 12, 14, 15, 32, 33, 98, 105, 107, 186, 199, 201, 207, 210, 211, 219, 225], "On": [5, 11, 206, 216], "next": [5, 204, 210, 219, 227], "indent": [5, 201], "obviou": [5, 12, 210], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 54, 56, 58, 65, 71, 75, 83, 84, 85, 88, 89, 92, 94, 96, 98, 99, 103, 104, 105, 106, 107, 109, 113, 124, 125, 137, 138, 165, 176, 201, 210, 219, 222, 223, 225, 226], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 77, 99, 109, 110, 127, 139, 146, 203, 205, 210, 211, 227], "els": [5, 6, 201, 210], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 105, 106, 107, 110, 115, 116, 117, 118, 120, 122, 124, 193, 201, 203, 204, 206, 210, 211, 212, 213, 214, 215, 216, 217, 222, 227, 228], "further": [5, 203, 204, 217, 226], "necessari": [5, 11, 198, 210], "rais": [5, 7, 15, 32, 35, 51, 53, 80, 105, 122, 201, 203, 204, 205, 210], "list_cas": 6, "list_machin": [6, 205], "list_suit": 6, "anywher": [6, 10, 206], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 77, 99, 104, 105, 108, 109, 113, 114, 198, 203, 204, 205, 210], "later": [6, 15, 19, 29, 32, 39, 50, 105, 124, 201, 210, 211], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 76, 77, 108, 122, 193, 201, 203, 210], "properti": [6, 12, 193, 201, 216, 223], "clean_cas": 6, "delet": [6, 205, 206, 207, 227], "constant": [6, 58, 65, 66, 122, 193, 210, 222, 223, 225, 226], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 108, 182, 201, 203, 206, 210], "out": [6, 11, 79, 82, 107, 199, 201, 205, 206, 211, 219, 227], "proven": [6, 8, 50, 209, 211], "save": [6, 16, 51, 73, 194, 201, 203, 204, 210, 216, 221, 222], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 41, 45, 50, 77, 83, 98, 99, 105, 108, 109, 110, 127, 195, 201, 203, 204, 205, 210, 223], "target": [6, 9, 14, 19, 34, 53, 84, 119, 122, 124, 194, 201, 203, 210, 223], "minimum": [6, 107, 122, 124, 194, 201, 210, 211, 219, 222, 223, 225, 226], "determin": [6, 11, 12, 16, 34, 38, 41, 80, 114, 122, 128, 194, 195, 201, 204, 210, 219, 222, 223, 226, 227], "maximum": [6, 15, 105, 107, 210, 211, 219], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 81, 84, 122, 124, 137, 176, 201, 203, 210], "cpus_per_task": [6, 12, 32, 36, 39, 81, 201], "attribut": [6, 10, 11, 12, 15, 38, 88, 94, 204, 210], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 210, 219, 222, 223, 225, 226], "runtim": [6, 24, 38, 122, 125, 138, 139, 146, 165, 166, 201, 203, 210], "min_task": [6, 12, 14, 19, 29, 32, 39, 81, 84, 122, 124, 137, 176, 201, 203, 210], "min_cpus_per_task": [6, 12, 32, 39, 81, 201], "fewest": 6, "least": [6, 11, 15, 198, 206], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 105, 124, 137, 176, 201, 209, 210, 211, 223], "run_test": [6, 201, 203], "run_single_step": 6, "oper": [6, 40, 142, 152, 201, 203, 229], "log": [6, 8, 15, 16, 32, 41, 81, 105, 106, 107, 201, 203, 206, 209, 227], "figur": [6, 197, 199, 201, 204, 211], "cpu": [6, 12, 119, 201, 210, 227], "per": [6, 12, 19, 29, 31, 32, 39, 81, 122, 124, 201, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 226], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 57, 58, 62, 65, 66, 67, 71, 72, 84, 90, 108, 122, 123, 124, 125, 127, 130, 131, 133, 135, 137, 138, 139, 140, 143, 145, 146, 147, 150, 153, 155, 157, 158, 161, 164, 165, 166, 167, 169, 171, 172, 173, 174, 176, 177, 179, 194, 195, 198, 201, 203, 205, 210, 223, 226], "wa": [6, 15, 51, 104, 105, 119, 132, 134, 136, 144, 149, 154, 175, 201, 203, 205, 206, 207, 210, 211, 219, 227], "retriev": [6, 207], "store": [6, 15, 43, 122, 201, 203, 210, 227], "dure": [6, 9, 12, 24, 32, 41, 122, 125, 138, 139, 146, 165, 166, 201, 203, 205, 206, 210, 211, 227, 228, 229], "txt": [6, 103, 202, 207], "case_output": [6, 10], "individu": [6, 7, 16, 105, 203, 205, 210, 216, 217, 222, 227, 228], "involv": [6, 12, 15, 105, 201, 203, 208, 210], "implement": [6, 7, 194, 195, 197, 205, 222, 223], "termin": [6, 15, 201, 206, 210], "window": 6, "update_cach": 6, "_cached_fil": [6, 201], "map": [6, 14, 17, 25, 65, 66, 84, 106, 107, 127, 169, 171, 195, 206, 211], "origin": [6, 48, 206, 210, 227], "enabl": [6, 16, 201, 207, 211, 217], "consum": [6, 201, 203, 210, 229], "faster": [6, 206], "debug": [6, 115, 116, 117, 118, 120, 210, 212, 213, 214, 215, 217], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 194, 197, 200, 201, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 225, 226, 227, 229], "mpas_tool": [7, 10, 11, 70, 194, 197, 201, 210], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 80, 82, 83, 106, 181, 183, 184, 185, 189, 190, 210], "certain": [7, 15, 50, 201, 206, 211, 226], "add_from_packag": [7, 205, 210], "content": [7, 12, 99, 101, 114, 199, 201, 205, 210, 227], "found": [7, 12, 109, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 73, 122, 198, 201, 203, 204, 205, 210, 211], "cfg": [7, 43, 198, 203, 204, 205, 210, 211, 227], "except": [7, 15, 32, 35, 51, 105, 201, 205, 210], "first": [7, 12, 97, 98, 194, 197, 201, 203, 204, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 222, 223, 227], "second": [7, 11, 12, 137, 176, 201, 205, 222], "know": [7, 9, 11, 122, 201, 205, 206, 210], "behavior": [7, 12, 96, 201, 202, 203, 206, 210], "noth": [7, 207, 223], "being": [7, 24, 32, 41, 95, 98, 105, 125, 138, 139, 146, 165, 166, 201, 203, 204, 205, 206, 210, 219], "test_group": [7, 17, 18, 32, 41, 131, 133, 135, 143, 147, 153, 158, 174, 201, 203, 204, 210], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 54, 56, 95, 96, 98, 103, 105, 107, 122, 124, 193, 201, 203, 204, 210, 211, 213, 215, 217, 222], "happen": [7, 10, 12, 14, 105, 201, 203, 210, 223], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 57, 58, 65, 71, 84, 108, 122, 123, 124, 130, 131, 133, 135, 137, 140, 143, 145, 147, 150, 153, 155, 157, 158, 161, 164, 167, 169, 171, 172, 173, 174, 176, 177, 179, 191, 194, 195, 197, 198, 201, 203, 204, 210], "larg": [7, 15, 201, 203, 210, 212], "those": [7, 12, 15, 41, 104, 105, 119, 203, 204, 205, 206, 209, 210, 223, 226, 229], "configpars": [7, 81, 204], "getinteg": 7, "getfloat": [7, 10, 12, 14, 201, 210], "getboolean": [7, 201, 210], "getlist": [7, 210], "comma": [7, 223], "integ": [7, 11], "boolean": [7, 107, 186], "etc": [7, 12, 100, 103, 198, 201, 203, 222], "getexpress": 7, "tupl": 7, "rang": [7, 107, 210, 223], "numpi": [7, 11, 59, 66, 67, 73, 106, 122, 129, 181, 182, 201, 210], "linspac": [7, 16, 195, 223], "arang": 7, "arrai": [7, 59, 66, 67, 73, 106, 122, 181, 182, 184, 185, 186, 187, 210], "One": [7, 11, 210, 227, 229], "advantag": [7, 12, 119, 205, 210, 216], "track": [7, 19, 201, 203, 206], "associ": [7, 11, 12, 16, 183, 189, 190, 194, 203, 204, 206, 208], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 58, 65, 71, 84, 124, 130, 131, 133, 135, 137, 140, 143, 145, 147, 150, 153, 155, 157, 158, 161, 164, 167, 169, 171, 173, 174, 176, 177, 179, 198, 201, 203, 204, 205, 210, 229], "command": [8, 13, 30, 32, 38, 81, 83, 91, 201, 205, 206, 208, 209, 210, 213, 216, 217, 227], "while": [8, 14, 16, 193, 194, 201, 204, 207, 208, 210], "meant": [8, 205, 211], "simplifi": 8, "verifi": [8, 202, 211], "io": [8, 201, 203, 205, 209, 210, 211, 220], "remap": [8, 16, 169, 195, 209, 223, 226], "visual": [8, 11, 14, 161, 195, 201, 203, 204, 208, 209, 223, 226], "lot": [9, 122, 201, 205, 210], "o": [9, 10, 99, 101, 114, 205, 206, 210, 211, 227], "relat": [9, 11, 12, 122, 191, 194, 197, 201, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 227], "handl": [9, 10, 203, 206, 210, 216], "intern": [9, 19, 41, 201, 206, 207], "lower": [9, 203, 210, 222], "directli": [9, 11, 12, 14, 32, 199, 201, 205, 208, 209, 210, 213], "aren": [9, 32, 33, 201, 205, 206, 210, 229], "readm": [9, 203], "importlib": [9, 203], "resourc": [9, 12, 29, 39, 52, 81, 125, 137, 138, 165, 176, 194, 201, 203, 210], "import": [9, 10, 11, 12, 14, 16, 198, 201, 203, 204, 205, 206, 208, 210], "files_for_e3sm": [9, 203, 211], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 58, 65, 71, 75, 77, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 124, 129, 131, 137, 145, 162, 164, 167, 169, 171, 176, 182, 201, 203, 204, 210], "did": [9, 15, 105, 210], "add_input_fil": [9, 14, 33, 201, 203, 210], "collect": [9, 45, 87, 123, 198, 200, 208, 210], "though": [9, 32, 203, 205, 210], "whenev": [9, 201, 210], "flexibl": [9, 195, 203, 206, 210], "care": [9, 11, 201, 204, 206, 210], "No": [9, 209], "step_dir": 9, "database_root": [9, 201, 211, 212, 213, 214, 215, 216, 217, 227], "download_path": 9, "join": [9, 210], "bathymetry_databas": [9, 201, 211], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 186, 201, 204, 210, 219, 222, 223, 225, 226, 228], "url": [9, 34, 51, 201, 207, 211], "web": [9, 201, 211], "anl": [9, 201, 211], "gov": [9, 201, 207, 211, 213, 217], "mpas_standalonedata": [9, 211, 216], "dest_path": [9, 51], "remot": [9, 34, 206], "bathymetri": [9, 201, 211], "strategi": 10, "stderr": [10, 32, 41, 201], "loggingcontext": 10, "check_cal": [10, 201], "most": [10, 38, 119, 191, 198, 201, 204, 205, 206, 208, 210, 211, 216, 217, 219, 220, 228], "won": [10, 205, 210, 211], "logger": [10, 32, 41, 57, 81, 201, 203, 210], "full": [10, 32, 96, 184, 185, 194, 195, 201, 203, 206, 209, 210, 216, 219, 221, 222, 223, 225, 226, 227], "although": 10, "captur": 10, "insid": [10, 201, 205], "good": [10, 32, 201, 206, 210], "idea": [10, 210], "explicit": [10, 205], "go": [10, 201, 203, 204, 205, 206, 210, 217], "even": [10, 11, 12, 15, 34, 50, 119, 201, 205, 206, 210, 211, 216, 227], "subprocess": [10, 32, 81, 95, 201, 205, 207], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 122, 133, 143, 153, 194, 195, 197, 201, 205, 206, 210, 227], "otherwis": [10, 15, 201, 203, 210, 212, 213, 214, 215, 216, 217, 222], "intent": 10, "desir": [10, 11, 12, 15, 16, 105, 122, 201, 202, 210, 211, 227], "trick": [10, 201], "direct": [10, 11, 12, 70, 194, 203, 210, 217, 222], "snippet": [10, 210], "dome": [10, 57, 201, 203, 204, 208, 227, 228], "setup_mesh": [10, 201], "setupmesh": [10, 201, 203], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 57, 119, 198, 204, 205, 206, 208, 210, 211], "mpas_grid": [10, 201], "landice_grid": [10, 201, 210], "l": [10, 105, 210, 217], "sever": [10, 201, 203, 204, 205, 206, 208, 209, 210, 226, 227, 229], "global": [11, 14, 45, 88, 94, 157, 158, 195, 201, 202, 204, 205, 208, 209, 210, 211, 217, 223, 226, 227, 228], "quasiuniformsphericalmeshstep": [11, 195], "icosahedralmeshstep": [11, 195], "jigsaw": [11, 58, 62, 64, 65, 67, 69, 71, 158, 161, 201], "complex": [11, 15, 66, 203, 205, 210], "build_cell_width_lat_lon": [11, 65], "opt": [11, 71], "make_jigsaw_mesh": [11, 65], "icosahedr": [11, 58, 60, 158, 161, 223], "significantli": [11, 219], "smooth": 11, "cell": [11, 12, 16, 58, 59, 60, 61, 65, 66, 67, 70, 73, 86, 93, 122, 124, 125, 138, 162, 165, 183, 184, 185, 186, 189, 190, 194, 201, 203, 204, 219, 222, 223, 225, 226], "quasi": [11, 65, 211, 223, 226], "hand": [11, 205], "restrict": [11, 210, 226], "resolut": [11, 12, 14, 58, 61, 65, 66, 70, 85, 89, 92, 131, 133, 135, 137, 140, 143, 145, 147, 150, 153, 158, 161, 162, 164, 174, 176, 177, 194, 195, 197, 199, 201, 203, 204, 211, 222, 223, 225, 226, 228], "subdivis": [11, 58, 59, 60, 61, 62], "icosahedron": [11, 59, 60, 61, 62], "tabl": [11, 206, 216, 227], "approxim": [11, 58, 60, 61, 65, 122, 125, 138, 165, 206, 210], "width": [11, 58, 59, 60, 65, 66, 67, 73, 210, 222], "km": [11, 58, 59, 60, 61, 65, 66, 67, 70, 73, 131, 133, 135, 137, 140, 143, 145, 147, 150, 153, 164, 176, 177, 194, 195, 210, 211, 222, 223, 225, 226, 228], "5": [11, 60, 122, 147, 194, 195, 201, 202, 203, 205, 207, 210, 211, 222, 223, 226, 227], "240": [11, 60, 195, 211, 223], "6": [11, 60, 201, 210, 220, 222, 225, 227], "120": [11, 60, 202, 223], "7": [11, 60, 210, 217, 223, 227], "60": [11, 12, 60, 195, 219, 223], "8": [11, 60, 194, 203, 206, 210, 211, 222, 223, 227], "30": [11, 60, 204, 210, 217, 222, 223, 225, 226], "9": [11, 16, 60, 195, 210, 223, 227], "15": [11, 12, 60, 194, 210, 222, 223, 225, 226, 227], "10": [11, 15, 60, 191, 194, 203, 204, 210, 211, 216, 219, 222, 225, 228], "11": [11, 60, 210, 227], "3": [11, 60, 194, 201, 202, 204, 206, 207, 210, 211, 216, 217, 219, 222, 223, 226, 227], "12": [11, 60, 210, 213], "13": [11, 60, 210, 222], "94": [11, 60], "spherical_mesh": [11, 66], "cell_width": [11, 58, 59, 60, 61, 65, 66, 67, 73], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 58, 65, 201, 210], "plot": [11, 73, 106, 107, 122, 150, 155, 169, 179, 194, 195, 223, 228], "plot_cell_width": 11, "cell_width_filenam": [11, 73], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 59, 65, 66, 67, 73, 85, 87, 89, 92, 106, 169, 195, 211, 223], "lon": [11, 14, 59, 65, 66, 67, 73, 85, 87, 89, 92, 106, 169, 195, 211, 223], "sphere": [11, 195, 223], "vtk_lat_lon": 11, "far": [11, 183, 189, 190, 205, 210], "But": [11, 119, 201, 204, 205, 206, 210, 211, 216], "hexagon": [11, 70, 210], "planar_hex": [11, 70, 194, 197, 201, 210], "make_planar_hex_mesh": [11, 70, 194, 197, 201, 210], "x": [11, 16, 59, 66, 67, 70, 73, 88, 94, 107, 129, 201, 203, 210, 222, 225], "y": [11, 12, 16, 70, 88, 94, 107, 194, 201, 203, 210, 217, 222], "nx": [11, 70, 201, 204, 210], "ny": [11, 70, 201, 204, 210], "dc": [11, 201, 204, 210], "distanc": [11, 70, 210, 222], "adjac": [11, 219], "center": [11, 16, 70, 204, 210, 219, 222], "admittedli": 11, "oddli": 11, "period": [11, 193, 194, 201, 210, 222], "nonperiodic_x": [11, 201, 210], "nonperiodic_i": [11, 201, 210], "consider": [11, 183, 189, 190, 193], "compute_planar_hex_nx_ni": [11, 210], "lx": [11, 70, 210, 222, 225], "ly": [11, 70, 210, 222, 225], "explan": 11, "subtleti": 11, "account": [11, 70, 206, 210, 212, 213, 215, 216, 217, 227], "behav": 11, "stagger": [11, 70], "strictli": [11, 205, 210], "physic": [11, 70, 210], "howev": [11, 201, 202, 203, 206, 210], "np": [11, 16, 195, 210, 223], "sqrt": 11, "domain": [11, 19, 26, 70, 107, 122, 124, 129, 193, 204, 210, 222, 223, 225, 226, 228], "extra": [11, 206], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 204, 210], "max": [11, 122, 201, 210, 223], "int": [11, 12, 19, 20, 29, 32, 39, 54, 58, 59, 60, 61, 62, 70, 81, 84, 107, 124, 125, 137, 138, 158, 161, 162, 164, 165, 176, 201, 210, 225], "ds_mesh": [11, 16, 107, 210], "creation": [11, 201, 211], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 81, 124, 201, 204, 205, 210], "distant": 11, "futur": [11, 38, 201, 205, 208, 209, 210, 211, 225, 227, 228], "descend": [12, 14, 122, 198, 201, 203, 204, 205, 210], "modelstep": [12, 122, 201, 203, 210], "update_pio": [12, 19, 124], "librari": [12, 115, 119, 206, 210, 212, 213, 214, 215, 216, 217, 227], "make_graph": [12, 19, 124], "mpi": [12, 14, 84, 115, 118, 119, 124, 126, 128, 194, 201, 206, 207, 209, 210, 212, 213, 214, 215, 217, 227], "construct": [12, 123, 181, 183, 184, 185, 189, 190, 193, 198, 203, 204, 210, 222], "non": [12, 15, 193, 201, 210, 227], "At": [12, 32, 41, 199, 200, 210], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 81, 124, 137, 153, 176, 194, 201, 202, 208, 210, 211, 213, 217, 222], "openmp_thread": [12, 19, 29, 32, 39, 81, 124, 137, 176, 201, 203, 210], "definit": [12, 210], "prefix": [12, 34, 206, 211], "end": [12, 194, 201, 203, 205, 206, 208, 210, 213, 222, 223, 225], "yml": 12, "reason": [12, 14, 38, 201, 205, 210, 229], "add_namelist_fil": [12, 19, 122, 201, 203], "add_yaml_fil": [12, 19, 201, 203, 210], "add_model_config_opt": [12, 19, 201, 203, 210], "add_streams_fil": [12, 19, 122, 201, 203], "themselv": [12, 205, 209], "question": [12, 201, 211], "constructor": [12, 194, 198, 204, 210], "simpli": [12, 50, 135, 174, 198, 201, 203, 204, 206, 210, 219, 227, 229], "safe": [12, 15, 201, 206, 222], "never": [12, 208], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": [12, 210], "config_run_dur": [12, 203, 210], "0024_00": 12, "00": [12, 15, 203, 210, 217, 227], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 133, 208, 210], "config_block_decomp_file_prefix": [12, 210], "time_integr": [12, 210], "config_time_integr": 12, "rk4": [12, 205, 229], "filename_templ": [12, 210], "restart": [12, 41, 143, 145, 194, 197, 202, 205, 208, 210, 222], "output_interv": [12, 210], "0030_00": 12, "clobber_mod": [12, 210], "truncat": [12, 210], "reference_tim": 12, "0001": [12, 210], "01": [12, 210, 225], "01_00": [12, 210], "tracer": [12, 16, 194, 195, 210, 223], "xtime": [12, 210], "normalveloc": [12, 15, 16, 134, 136, 144, 149, 154, 175, 193, 194, 197, 201, 210, 225], "layerthick": [12, 15, 122, 132, 134, 136, 144, 149, 154, 175, 183, 187, 188, 189, 190, 194, 197, 201, 203, 210], "refzmid": [12, 183, 189, 190, 201, 210], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15, 210], "clariti": [12, 201], "guarante": [12, 191, 206], "uniqu": [12, 203, 210], "global_converg": [12, 191, 196, 210, 220, 221, 224], "cosine_bel": [12, 210, 226], "substitut": 12, "config_write_output_on_startup": [12, 210], "0000_00": [12, 210], "config_use_mom_del2": [12, 210], "config_implicit_bottom_drag_coeff": [12, 210], "0e": [12, 225], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": [12, 210], "config_cvmix_background_viscos": [12, 210], "worri": 12, "sometim": [12, 183, 189, 190, 201, 203, 208, 210], "easier": [12, 201, 205, 206, 211, 227, 229], "togeth": [12, 208, 210, 229], "seem": [12, 210, 213, 217], "overkil": 12, "reli": [12, 201, 210], "differ": [12, 14, 15, 50, 62, 67, 105, 119, 122, 137, 147, 191, 194, 198, 199, 201, 202, 203, 204, 205, 208, 210, 211, 213, 217, 222, 223, 226], "along": [12, 16, 194, 201, 203, 209, 210], "could": [12, 14, 16, 195, 201, 202, 203, 205, 206, 210, 223], "nu": [12, 137, 150, 176, 194, 201, 203, 210], "viscos": [12, 137, 147, 150, 194, 201, 203, 205, 210, 222], "hmix": 12, "config_mom_del2": [12, 194, 201, 210], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 54, 95, 96, 97, 98, 103, 105, 106, 110, 124, 125, 137, 138, 139, 146, 158, 161, 165, 166, 176, 210], "cannot": [12, 15], "known": [12, 32, 33, 195, 201, 210], "beforehand": 12, "particularli": [12, 207, 210, 226], "openmp": [12, 19, 29, 32, 39, 81, 115, 117, 118, 124, 137, 176, 201, 210, 212, 213, 214, 215, 217], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 205, 208, 210, 222, 227], "complic": [12, 204, 205, 206, 210], "xml": [12, 99, 101, 102, 114, 208], "slightli": [12, 15, 206], "sophist": 12, "immutable_stream": [12, 210], "var_struct": 12, "var": [12, 100, 210], "var_arrai": 12, "tag": [12, 209], "taken": [12, 19, 124, 195, 201, 210, 217, 227], "past": 12, "experi": [12, 119, 205, 219], "shown": [12, 199, 203, 225], "featur": [12, 205, 206, 208, 210, 211, 222, 225], "difficult": [12, 119, 216], "synchron": [12, 209], "equival": [12, 206, 210, 212], "try": [12, 53, 205, 206, 207, 210, 211, 213, 217, 227], "template_replac": [12, 22, 23], "treat": [12, 202, 205], "jinja2": [12, 22, 23, 99], "render": [12, 22, 23, 99], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 211], "qu240dynamicadjust": 12, "seri": [12, 122, 150, 155, 179, 195, 210, 221], "dynam": [12, 124, 157, 191, 197, 211, 222, 223, 225, 226], "adjust": [12, 122, 157, 191, 211], "durat": [12, 194, 197, 202, 210], "interv": 12, "spin": 12, "reus": [12, 201, 205, 206, 210, 211, 227], "qualit": [12, 15], "affect": [12, 15, 201, 206, 210], "update_streams_at_runtim": 12, "fairli": [12, 203, 205, 206, 210], "hour": [12, 202, 213, 217, 227], "turn": [12, 32, 49, 201, 207, 210, 225], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 219, 222, 225], "minut": [12, 194, 202, 222, 229], "dai": [12, 147, 194, 195, 197, 203, 210, 222, 223, 225], "03d": 12, "_": [12, 84, 201, 203, 206, 210, 225], "02d": 12, "forgotten": 12, "broken": [12, 201, 205], "immedi": [12, 57, 206, 210], "miss": [12, 15, 201, 210, 211], "detect": [12, 16, 211, 212, 214, 215, 216, 227], "gpmeti": [12, 211], "divid": [12, 219], "partition_graph": [12, 19, 124], "circumst": [12, 15, 32, 33, 201, 210], "wast": 12, "manual": [12, 15, 41, 42, 201, 203, 228], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 39, 80, 81, 119, 124, 202, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 227], "v1": [12, 219], "better": [12, 14, 119, 227], "v2": [12, 211, 219], "littl": [12, 205, 206, 209, 210], "feel": [12, 201, 210], "runtime_setup": [12, 14, 29, 39, 194, 203], "onc": [12, 194, 206, 210, 211, 223, 227], "yourself": [12, 210, 216], "fact": [12, 32], "culler": 12, "cull": [12, 194, 201, 210], "model_step": [12, 201], "make_graph_fil": [12, 201], "field": [12, 15, 73, 75, 107, 169, 183, 189, 190, 193, 194, 197, 210, 222, 223], "weight": [12, 14, 75, 183, 189, 190, 210, 219], "weight_field": [12, 75], "frequent": [14, 191], "observ": [14, 209], "dataset": [14, 107, 183, 189, 190, 201, 210], "region": [14, 16, 209, 211], "pyremap": [14, 90], "interpol": [14, 84, 195, 211], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 201, 206], "mappingfilestep": [14, 16], "woa": 14, "2023": 14, "__init__": [14, 17, 19, 32, 41, 45, 50, 57, 58, 65, 71, 84, 108, 123, 124, 130, 131, 133, 135, 137, 140, 143, 145, 147, 150, 153, 155, 157, 158, 161, 164, 167, 169, 171, 173, 174, 176, 177, 179, 198, 201, 203, 204, 205, 208, 210], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 219], "bilinear": [14, 84, 195, 223, 226], "filenam": [14, 34, 35, 79, 85, 86, 87, 88, 92, 93, 94, 105, 109, 111, 201, 206, 210], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 211], "destin": [14, 84, 85, 86, 87, 88, 89, 90], "src_from_lon_lat": 14, "lon_var": [14, 85, 87, 92], "lat_var": [14, 85, 87, 92], "dst_from_mpa": 14, "mesh_nam": [14, 85, 86, 87, 88, 89, 92, 93, 94, 162, 164, 167, 169, 171], "qu60": 14, "subclass": [14, 62, 65, 66, 67, 72, 122, 210], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 169, 195], "super": [14, 198, 201, 203, 204, 205, 210], "128": [14, 202, 213, 214, 217], "cosine_bell_viz": [14, 16, 195, 223, 226], "dlon": [14, 89, 195, 223, 226], "dlat": [14, 89, 195, 223, 226], "remap_method": [14, 195, 223, 226], "src_from_mpa": 14, "dst_global_lon_lat": 14, "With": [14, 206], "approach": [14, 201, 204, 205, 206, 207, 210, 219], "perhap": [14, 16, 35, 204], "cover": [14, 210], "nearli": [14, 201, 208, 209, 210], "situat": [14, 25, 127, 210, 227], "workflow": [14, 201, 206], "critic": [15, 210], "compare_vari": [15, 203, 210], "filename1": [15, 105, 203, 210], "filename2": [15, 105, 210], "simpl": [15, 205, 210, 227], "temperatur": [15, 132, 134, 136, 144, 149, 154, 175, 193, 194, 197, 201, 203, 210, 222, 223, 225, 226], "salin": [15, 132, 134, 136, 144, 149, 154, 175, 193, 194, 197, 201, 203, 210, 222, 223, 225, 226], "prognost": [15, 222], "4proc": [15, 134, 210, 222], "8proc": [15, 134, 210, 222], "alter": [15, 184, 185, 201, 203, 209, 210, 219, 222, 223, 225, 226], "skip_if_step_not_run": [15, 105, 203], "possibli": [15, 201, 206, 210], "failur": 15, "valueerror": [15, 80, 203, 204, 205], "quiet": [15, 96, 105, 110], "report": 15, "threshold": [15, 223], "l1": [15, 105], "00000000000000e": 15, "l2": [15, 105], "l_infin": 15, "linf": [15, 105], "home": [15, 206, 210, 211, 213, 216, 217], "xylar": [15, 210, 211, 216], "test_nightly_latest": 15, "10km": [15, 194, 203, 204, 210, 222, 227, 228, 229], "threads_test": [15, 210, 227, 229], "1thread": [15, 154, 194, 222], "2thread": [15, 154, 222], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 201, 203, 210], "disabl": [15, 16, 193, 223, 228], "check_output": [15, 105], "zero": [15, 184, 185, 186, 187, 188, 193, 194, 210, 223], "l1_norm": [15, 105], "l2_norm": [15, 105], "linf_norm": [15, 105], "nonzero": [15, 105], "easiest": [15, 206], "solut": [15, 118, 195, 202, 207, 210], "clobber": 15, "error": [15, 32, 41, 122, 162, 195, 201, 206, 209, 210], "judgment": 15, "enough": [15, 194, 201, 205, 210], "problem": [15, 201, 206, 207, 210], "compare_tim": 15, "integr": [15, 147, 194, 203, 205, 210, 222, 223, 226], "rundir1": [15, 104], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": [16, 210], "often": [16, 32, 201, 202, 203, 204, 205, 206, 208, 210, 211, 228, 229], "analysi": [16, 122, 194, 203, 205, 208, 209, 211, 223, 228], "routin": 16, "viz": 16, "plot_horiz_field": [16, 210], "patch": [16, 107, 210], "style": [16, 122, 209, 210], "edg": [16, 86, 93, 107, 193, 210], "polygon": 16, "character": 16, "accordingli": [16, 82], "d": [16, 107, 183, 189, 190, 193, 201, 210, 225], "final_normalveloc": [16, 210], "t_index": [16, 107, 210], "vmin": [16, 107, 195, 210, 223], "max_veloc": [16, 210], "vmax": [16, 107, 195, 210, 223], "cmap": [16, 107, 210], "cmo": [16, 210], "balanc": [16, 210], "show_patch_edg": [16, 107, 210], "globe": [16, 195, 223], "plot_glob": 16, "plot_land": [16, 106], "contin": [16, 106], "overlain": 16, "usag": [16, 211, 213, 217], "cmocean": [16, 210], "noqa": [16, 57, 161, 164, 167, 210], "f401": [16, 210], "xr": [16, 210], "open_dataset": [16, 201, 210], "tracer1": 16, "isel": 16, "nvertlevel": [16, 107, 183, 189, 190, 201, 210, 219], "out_filenam": [16, 102, 106, 182], "colormap_sect": [16, 106], "titl": [16, 106, 107], "colormap": [16, 106, 107, 195, 210, 223], "cosin": [16, 161, 164, 167, 169, 171, 195, 223, 226], "bell": [16, 161, 164, 167, 169, 171, 195, 223, 226], "converg": [16, 195, 199, 202, 209, 210, 223, 226], "colormap_nam": [16, 106, 195, 223], "viridi": [16, 195, 210, 223], "norm": [16, 105, 106, 195, 223], "norm_typ": [16, 106, 195, 223], "linear": [16, 106, 107, 195, 210, 222, 223], "norm_arg": [16, 106, 195, 223], "colorbar": [16, 106, 107, 195, 223], "tick": [16, 106, 195, 223], "mark": [16, 195, 206, 223], "ll": [16, 195, 205, 210, 217, 223], "colorbar_tick": [16, 106, 195, 223], "matplotlib": [16, 210], "standard": [16, 205, 206, 210, 213, 227], "symlog": [16, 106], "symmetr": 16, "central": [16, 223], "logarithm": [16, 107], "color": [16, 107], "normal": [16, 193, 201, 202, 206, 210, 216], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 201, 227], "dict": [17, 20, 22, 23, 25, 32, 36, 41, 45, 77, 78, 83, 84, 98, 99, 106, 108, 109, 110, 127, 203, 210], "kei": [17, 41, 45, 98, 203], "cach": [17, 19, 32, 34, 97, 98, 124, 209, 211, 216, 221, 227, 229], "testgroup": [18, 32, 41, 204, 205, 210], "max_memori": [19, 29, 32, 39, 124], "mesh_filenam": [19, 75, 124], "graph_filenam": [19, 75, 124], "graph": [19, 26, 28, 38, 75, 124, 194, 201, 210, 211], "make_yaml": 19, "pio": [19, 28, 31, 124, 194], "stride": [19, 31, 124], "consist": [19, 31, 124, 191, 206, 210, 211, 222], "partit": [19, 28, 38, 75, 124, 194, 201, 211, 212, 213, 214, 215, 217, 227], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 81, 84, 122, 124, 137, 176, 201, 204, 205, 209, 210, 211, 228], "accommod": [19, 29, 32, 39, 81, 124], "fewer": [19, 29, 32, 39, 81, 124, 137, 176, 201, 210, 227], "amount": [19, 29, 32, 39, 124, 201, 218, 225], "memori": [19, 29, 32, 39, 124, 201, 211], "mb": [19, 29, 32, 39, 124, 211], "placehold": [19, 29, 32, 39, 124, 201, 227], "at_setup": [24, 122, 125, 138, 139, 146, 165, 166, 210], "overridden": [25, 127, 201, 203, 210], "diverg": [25, 127], "counterpart": [25, 122, 127], "nest": [25, 108, 110, 127], "graph_fil": 26, "parent": [27, 198, 201, 204], "done": [29, 39, 201, 206, 210, 227], "run_as_subprocess": [32, 201], "smallest": [32, 201, 208, 219, 228], "unit": [32, 85, 89, 92, 201, 208, 222, 228], "term": [32, 208, 210], "necessarili": [32, 34, 208], "input_data": 32, "until": [32, 33, 201, 203, 227], "finish": [32, 33, 72, 210], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 83, 108, 201, 202, 203, 207, 210, 211, 227], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 201, 203], "base_work_dir": [32, 41, 201, 203], "log_filenam": [32, 41, 201], "redirect": [32, 201], "extern": [32, 191, 198, 201, 220], "access": [33, 203, 205, 206, 210, 212, 216, 217], "database_compon": [34, 201], "work_dir_target": [34, 201], "come": [34, 201, 206, 210, 212, 213, 214, 215, 216, 217, 220], "root": [34, 162, 191, 195, 198, 201, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 219, 227], "suffix": [34, 98, 201], "_database_root": 34, "append": 34, "available_resourc": 36, "constrain": [36, 125, 138, 165, 194, 210], "total": [36, 201, 202, 205, 210, 211, 213, 227], "everi": [37, 172, 194, 201, 203, 205, 207, 208, 210, 222], "child": [37, 172, 198, 201, 203, 205], "serial": [38, 201, 203, 209, 210, 227], "subtask": 39, "stdout_logg": 41, "goe": [41, 201, 210], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 129, 203, 205, 210, 227], "statu": 41, "run_by_default": [42, 201, 203], "assum": [43, 99, 109, 203, 206, 210, 217, 222], "prior": [43, 201, 203], "greenland": [45, 204, 208, 209, 228], "eismint2": 45, "step_path": 48, "variant": [48, 194, 202, 204, 205, 206, 210, 216, 219, 222, 223], "uncach": 48, "datestamp": 48, "yymmdd": [48, 211], "dry": [48, 202], "meta": 50, "empti": [50, 201, 205, 206, 208, 210], "link_nam": 53, "overwrit": 53, "stackoverflow": [53, 210], "55742015": 53, "7728169": [53, 210], "symbol": [53, 201], "fileexistserror": 53, "unless": [53, 96, 206], "isadirectoryerror": 53, "decomposition_test": [57, 204, 227], "decompositiontest": [57, 204], "e501": [57, 161, 164, 167, 210], "turquois": [57, 213], "usr": [57, 213, 227], "climat": [57, 212, 213, 214, 216, 227], "mhoffman": 57, "latitud": [59, 66, 85, 87, 89, 92, 106, 195, 223, 226], "longitud": [59, 66, 67, 73, 85, 87, 89, 92, 106, 195, 223, 226], "ndarrai": [59, 66, 67, 73, 106, 129, 181, 182, 210], "degre": [59, 66, 67, 73, 89, 211, 222], "length": [59, 66, 67, 73], "180": [59, 66, 67, 73, 223], "90": [59, 66, 67, 73, 201, 223], "static": [60, 61], "rule": 60, "thumb": 60, "achiev": [61, 202], "close": [61, 209, 223], "uniform": [65, 70, 164, 194, 195, 204, 210, 211, 222, 223, 225, 226], "natur": 70, "jigsawpi": [71, 201], "jigsaw_jig_t": 71, "meti": 75, "defaults_filenam": 76, "state": [80, 129, 193, 194, 195, 197, 201, 202, 210, 223], "queu": 80, "slurm": [80, 82, 209, 211, 212, 213, 214, 215, 217, 227], "interact": [80, 210, 213, 216, 217, 227], "batch": [80, 213], "job": [80, 119, 206, 209, 210, 212, 213, 214, 215, 217], "slurm_job_id": 80, "substep": 81, "cores_per_nod": [82, 211, 212, 213, 214, 215, 216, 217, 227], "cpus_per_nod": 82, "map_filenam": 84, "src_grid_info": 84, "dst_grid_info": 84, "neareststod": [84, 195, 223, 226], "conserv": [84, 195, 223, 226], "map_": 84, "source_typ": 84, "dest_typ": 84, "1d": [85, 89, 92, 106, 122, 181, 182, 183, 184, 185, 186, 187, 189, 190], "2d": [85, 89, 92, 106], "5x0": [85, 89, 92], "5degre": [85, 89, 92], "coordin": [85, 87, 88, 92, 94, 106, 107, 183, 189, 190, 218, 220, 222, 223, 225, 226], "mesh_typ": [86, 93, 201, 203, 204], "vertex": [86, 93], "x_var": [88, 94], "y_var": [88, 94], "proj_attr": [88, 94], "proj_str": [88, 94], "proj": [88, 94], "remapp": [90, 91], "remap_fil": 90, "step_is_subprocess": 95, "is_test_cas": 96, "steps_to_skip": 96, "progress": 96, "cached_step": 97, "copy_execut": [97, 98, 103, 227], "serv": [97, 98, 103, 204, 210], "_all": [97, 98], "streams_filenam": 99, "lxml": [99, 101, 114], "etre": [99, 101, 114], "new_child": 100, "children": 100, "sub": [100, 210], "new_tre": 101, "rundir2": 104, "infin": 105, "toler": 105, "exclud": [105, 227], "data_arrai": 106, "colorbar_label": 106, "subtitl": 106, "field_nam": 107, "out_file_nam": 107, "z_index": 107, "cmap_set_und": 107, "cmap_scal": 107, "horizont": [107, 122, 193, 194, 197, 222, 225], "planar": [107, 122, 193, 210, 225, 226], "depth": [107, 122, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 210, 211, 219, 222, 223, 225, 226], "slice": 107, "fieldnam": 107, "present": [107, 206, 210], "visibl": 107, "ax": 107, "classmethod": 109, "jinja": 109, "namelist_templ": 113, "polarisyaml": [113, 114], "processed_registry_filenam": 114, "registri": [114, 193], "steam": 114, "load_dev_polaris_0": [115, 116, 117, 118, 119, 120, 210], "alpha": [115, 116, 117, 118, 119, 120, 210], "1_anvil_intel_impi": [115, 119], "sh": [115, 116, 117, 118, 119, 120, 206, 207, 210, 212, 213, 214, 215, 217, 227], "openmpi": [115, 119, 206, 209, 212, 214, 215, 227], "mvapich": [115, 119, 212], "impi": [115, 119, 212, 215], "ifort": [115, 117, 119, 210, 212, 214], "ve": [115, 116, 117, 118, 120, 201, 206, 210], "1_anvil_gnu_openmpi": 115, "gfortran": [115, 117, 118, 119, 206, 212, 214], "load": [116, 119, 120, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217], "1_chicoma": 116, "cpu_gnu_mpich": [116, 120], "crai": [116, 119, 120, 213, 217], "1_chrysalis_intel_openmpi": 117, "1_chrysalis_gnu_openmpi": 117, "yet": [118, 122, 201, 205, 210], "again": [118, 191, 201, 206, 207, 227], "soon": [118, 210, 227], "1_compy_intel_impi": 118, "1_compy_gnu_openmpi": 118, "attempt": [119, 209, 216], "particular": [119, 204, 206, 209, 213, 216, 227], "activ": [119, 216, 217, 227], "load_polaris_env": [119, 206, 210, 227], "were": [119, 137, 176, 201, 205, 208, 210, 211, 215, 219], "right": [119, 122, 203, 206, 210, 211, 219, 223, 227], "therefor": [119, 201, 208, 210], "gnu": [119, 206, 215, 216, 227], "lib": 119, "intel": [119, 216], "chicoma": [119, 216, 227], "mpich": [119, 206, 209, 213, 217, 227], "compi": [119, 215, 227], "pm": [119, 217, 227], "compymcnodefac": [119, 216], "perlmutt": [119, 213, 216, 227], "pretti": [119, 201, 205, 210, 211], "forg": [119, 209, 227], "linux": [119, 206, 216], "configure_polaris_env": [119, 206, 207, 210], "conda_path": [119, 206], "osx": [119, 216], "clang": [119, 206], "had": 119, "1_": 119, "1_pm": 120, "ever": [122, 205], "expand": [122, 219], "oceanmodelstep": [122, 210], "decid": [122, 210], "veri": [122, 198, 201, 205, 206, 210, 225], "earli": [122, 220, 227], "stage": [122, 193, 201, 203, 206, 220, 227], "map_yaml_to_namelist": 122, "count": [122, 202], "heurist": 122, "exact": [122, 195, 205], "algorithm": [122, 137, 176, 194, 201, 210], "200": [122, 203, 210, 222, 225], "round": [122, 223], "cell_count": [122, 125, 138, 165, 210], "goal_cells_per_cor": [122, 210, 223, 226], "pinch": 122, "2000": [122, 204, 210], "max_cells_per_cor": [122, 210, 223, 226], "seciton": 122, "control": [122, 195, 201, 211, 222, 223, 225, 227], "scale": [122, 222, 227], "tri": [122, 205], "apport": 122, "precis": [122, 201, 210], "caviti": [122, 205, 210, 211, 219], "frazil": 122, "flux": [122, 193, 225], "grid_1d": 122, "generate_1d_grid": 122, "vertical_grid": [122, 181, 183, 189, 190, 204, 210, 211, 219, 222, 223, 225, 226], "z": [122, 184, 185, 186, 187, 188, 189, 190, 210, 222, 223, 225, 226, 229], "star": [122, 188, 190, 210, 222, 223, 225, 226, 229], "init_vertical_coord": [122, 210], "minlevelcel": [122, 183, 185, 186, 187, 188, 189, 190, 210], "maxlevelcel": [122, 183, 184, 185, 186, 187, 188, 189, 190, 201, 210], "cellmask": [122, 183, 186, 189, 190, 210], "zmid": [122, 183, 189, 190, 210], "restingthick": [122, 183, 188, 189, 190, 201, 210], "bottomdepth": [122, 183, 184, 186, 187, 188, 189, 190, 201, 210], "entir": [122, 210, 222, 229], "petersen": [122, 206, 210, 222], "et": [122, 210, 219, 222, 223], "al": [122, 210, 219, 222, 223], "2015": [122, 210, 222], "int_": 122, "rho": 122, "left": [122, 210, 219, 223], "dv": 122, "sort": [122, 199, 205, 206], "increas": [122, 205], "compute_rp": [122, 210], "csv": [122, 210], "dynamic_ntask": 124, "available_cor": 126, "estim": [126, 128, 210], "initial_state_file_nam": [129, 210], "output_fil": [129, 201, 210], "rest": [129, 188, 219, 223], "potenti": [129, 147, 201, 203, 210, 222], "energi": [129, 147, 203, 209, 210, 222], "netcdf": [129, 197, 211, 212, 213, 214, 215, 216, 217], "len": [129, 201, 210], "superclass": [131, 194, 201], "run_time_step": [137, 176, 210], "resources_fix": [137, 176], "shouldn": [137, 176, 210], "dt": [137, 176, 210, 222, 223, 226], "btr_dt": [137, 176, 210, 222], "barotrop": [137, 176, 210, 222, 225], "longer": [143, 194, 202, 210, 222, 223, 229], "shorter": [143, 202], "rpe": [147, 150, 155, 179, 203, 210, 222], "20": [147, 194, 202, 203, 210, 222, 225], "less": [158, 161, 201, 219, 225], "globalocean": [158, 198], "cosinebel": [161, 164, 167, 195], "rmsevalu": 162, "squar": [162, 195], "ncell": [162, 201, 210], "viz_map": 169, "column": [173, 174, 177, 206, 225, 227], "param": [174, 177, 203, 204], "singlecolumn": [174, 197], "ivar": 177, "posit": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 210, 219, 225], "layer": [181, 182, 183, 187, 188, 189, 190, 193, 194, 197, 210, 211, 219, 222, 223, 225, 226], "meter": [181, 182], "bottom": [183, 184, 185, 186, 187, 188, 189, 190, 193, 210, 211, 219, 222, 223, 225, 226], "thick": [183, 187, 188, 189, 190, 194, 197, 210, 211, 219, 222], "stretch": [183, 189, 190, 210, 219], "elev": [183, 189, 190, 210, 219], "midpoint": [183, 189, 190, 210], "reftopdepth": [183, 186, 187, 189, 190, 210], "down": [183, 184, 185, 186, 187, 188, 189, 190, 210, 219], "ref": [183, 189, 190, 210], "middl": [183, 189, 190, 210], "refbottomdepth": [183, 184, 185, 186, 187, 189, 190, 201, 210], "refinterfac": [183, 189, 190, 210], "element": [183, 189, 190, 210], "vertcoordmovementweight": [183, 189, 190, 201, 210], "movement": [183, 189, 190, 210], "partial": [184, 185, 210, 219, 222, 223, 225, 226], "seafloor": [184, 186, 187, 188, 219], "unstretch": 188, "shelv": [191, 211, 219], "ssh_adjust": [191, 201, 203, 211], "iter": [191, 211], "compass_branch": 191, "default_input": [191, 198, 210, 211], "ocean_model": [191, 206, 211], "submodul": [191, 198, 206, 210, 227], "latest": [191, 206, 209, 220, 227], "master": 191, "compat": [191, 206, 207, 209], "verison": 191, "maintain": [191, 227], "recurs": [191, 205, 206, 210, 227], "whichev": [191, 219], "single_column": [191, 196, 220, 224], "design": [192, 201, 203, 205, 209, 216, 222], "minim": 193, "fcell": [193, 201, 210, 223], "fedg": [193, 201, 210, 223], "fvertex": [193, 201, 210, 223], "free": [193, 210, 211], "slip": 193, "solid": [193, 222, 223], "tangenti": 193, "enforc": [193, 206], "nonperiod": 193, "drag": 193, "mass": 193, "momentum": [193, 194], "scalar": 193, "rigid": 193, "veloc": [193, 194, 203, 206, 210, 223, 225, 227], "solv": [193, 207, 219], "mid": [193, 222], "vari": [193, 195, 201, 207, 216, 219, 223], "consult": [193, 210], "tidal_forc": 193, "eddi": [194, 222], "addition": [194, 197, 212, 213, 214, 215, 217], "diffus": [194, 197], "50": [194, 204, 210, 222, 225], "prescrib": 194, "decomptest": [194, 210], "restarttest": [194, 204], "frequenc": 194, "threadstest": 194, "thread_test": 194, "rpetest": [194, 203, 210], "intens": 194, "globalconverg": [195, 205, 210], "studi": [195, 223], "advect": [195, 223, 225], "qu": [195, 210, 211, 221, 223], "ico": [195, 210, 221, 223], "fix": [195, 204, 210], "spheric": [195, 223], "24": [195, 223], "shape": [195, 223], "blob": 195, "around": [195, 210, 211, 222, 223], "rate": [195, 210, 223, 225], "distribut": 195, "dt_per_km": [195, 210, 222, 223, 226], "rmse": 195, "exercis": [197, 223, 225], "kpp_test": 197, "mixedlayerdepthsoutput": 197, "100": [197, 219, 225], "dimens": [197, 222, 225], "single_column_forc": [197, 225], "profil": [197, 207, 225], "encompass": 198, "perspect": 198, "four": 198, "major": [198, 201], "add_test_group": [198, 205, 210], "variou": [198, 201, 206], "univers": 198, "mix": [198, 204, 225], "ice_shelf_2d": [198, 229], "iceshelf2d": 198, "ziso": [198, 219, 228, 229], "landice_model": [198, 206], "organ": [199, 202, 204, 209], "green": 199, "blue": [199, 212, 227], "orang": 199, "red": 199, "repositori": [199, 209, 210, 227], "laid": 199, "fig": 199, "among": [199, 204, 206, 210], "organiz": 199, "concept": [199, 205, 208, 210, 228], "simul": [201, 208, 210, 221, 222, 226, 227], "multiprocess": [201, 205, 211], "outsid": [201, 206], "emploi": 201, "prevent": 201, "unwant": 201, "outer": 201, "inner": 201, "variable_resolut": [201, 204, 227], "dome_varres_grid": 201, "calcul": [201, 203], "signific": [201, 202, 203], "neglig": 201, "meshstep": 201, "getint": 201, "mesh_cpus_per_task": 201, "mesh_min_cpus_per_task": 201, "previous": [201, 210], "processor": [201, 222], "readi": [201, 210, 217], "write_netcdf": [201, 210], "convers": [201, 210], "generate_grid": 201, "dsmesh": 201, "graphinfofilenam": [201, 210], "use_dist": [201, 210, 222], "gradient_width_dist": [201, 210, 222], "gradient_width_frac": [201, 210, 222], "bottom_temperatur": [201, 210, 222], "surface_temperatur": [201, 210, 222, 225], "temperature_differ": [201, 210, 222], "coriolis_paramet": [201, 210, 222, 225], "bottom_depth": [201, 210, 211, 219, 222, 223, 225, 226], "vert_level": [201, 210, 211, 219, 222, 223, 225, 226], "ones_lik": [201, 210], "xcell": [201, 210], "ycell": [201, 210], "xmin": 201, "min": [201, 210, 222, 225], "xmax": 201, "ymin": 201, "ymax": 201, "ymid": 201, "xperturbmin": 201, "xperturbmax": 201, "perturbationwidth": 201, "yoffset": 201, "sin": [201, 210, 222], "pi": [201, 210, 219, 222, 223], "temp_vert": [201, 210], "frac": [201, 210, 219, 222], "logical_and": [201, 210], "transpos": [201, 210], "3rd": [201, 210], "crest": [201, 210, 222], "wave": [201, 210, 222], "expand_dim": [201, 210], "dim": [201, 210], "axi": [201, 210], "broadcast": [201, 210], "zeros_lik": [201, 210], "xedg": [201, 210], "nedg": [201, 210], "dtype": [201, 210], "xvertex": [201, 210], "commandlin": 201, "explor": [201, 204, 210, 219], "harm": 201, "likewis": [201, 210], "subsequ": [201, 208, 229], "arisen": 201, "now": [201, 206, 210, 211, 216], "omit": [201, 227], "problemat": 201, "usual": [201, 203, 206, 210, 227], "isn": [201, 205, 210], "forwardstep": 201, "mesh_path": 201, "mesh_step": 201, "with_ice_shelf_cav": [201, 203], "initial_state_target": 201, "adjusted_init": [201, 203], "forcing_data": 201, "entha_analy_result": 201, "mat": 201, "enthalpy_benchmark": 201, "ourselv": 201, "reduc": 201, "firewal": 201, "bedmachineantarctica_v2_and_gebco_2022_0": 201, "05_degree_20220729": 201, "slate": 201, "icepresent_qu60km_polar": 201, "practic": [201, 205, 206], "u": [201, 210, 216, 217], "straightforward": 201, "commonli": [201, 208], "expens": [201, 202], "mechan": 201, "notat": [201, 226], "That": [201, 205, 208, 210, 227], "word": 201, "ff": 201, "quwisc240": [201, 205, 227, 229], "90c": 201, "91c": 201, "92": [201, 219], "91": 201, "sowisc12to60": [201, 227, 229], "performance_test": [201, 229], "effici": [201, 210], "transfer": 201, "feasibl": 201, "nor": [201, 210], "add_depend": 201, "unpickl": 201, "overhead": 201, "philosophi": [202, 205, 210], "context": [202, 210], "namesak": 202, "256": [202, 213, 217], "quicker": 202, "32": [202, 227], "exce": 202, "limit": [202, 206, 222], "offer": 202, "benefit": [202, 209], "catch": 202, "bug": 202, "covereag": 202, "timestep": 202, "exhaust": 202, "recent": [202, 220], "merg": 202, "reach": 202, "steadi": 202, "encount": [202, 207], "wet": 202, "fundament": 203, "incorpor": 203, "deprec": 203, "constrain_resourc": [203, 210], "smoke_test": [203, 204], "smoketest": [203, 204], "velo_solv": 203, "sia": [203, 206], "fo": 203, "add_step": [203, 210], "runmodel": 203, "run_step": 203, "0200": 203, "00_00": [203, 210], "fine": [203, 210, 225], "recip": 203, "rpe_test": [203, 205, 210, 227], "res_param": [203, 204], "144": 203, "36": [203, 212, 216, 225, 227], "4km": [203, 204, 210, 222, 227], "unsupport": [203, 204, 206], "enumer": [203, 210], "rpe_test_": [203, 210], "_nu_": [203, 210], "deliber": 203, "chosen": [203, 225], "demonstr": [203, 210], "clumsi": [203, 205], "rpe_test_1_nu_1": [203, 210, 222], "rpe_test_2_nu_5": [203, 210, 222], "filesfore3sm": 203, "configure_global_ocean": 203, "with_bgc": 203, "po4": 203, "no3": 203, "sio3": 203, "nh4": 203, "fe": [203, 213], "o2": 203, "dic": 203, "dic_alt_co2": 203, "alk": 203, "dofe": 203, "dop": 203, "dopr": 203, "donr": 203, "zooc": 203, "spchl": 203, "spc": 203, "spfe": 203, "spcaco3": 203, "diatchl": 203, "diatc": 203, "diatf": 203, "diatsi": 203, "diazchl": 203, "diazc": 203, "diazf": 203, "phaeochl": 203, "phaeoc": 203, "phaeof": 203, "dm": 203, "dmsp": 203, "prot": 203, "poli": 203, "lip": 203, "conceptu": [204, 205], "realist": [204, 209, 228], "2000m": [204, 227], "34": [204, 227], "halfar": 204, "cism": 204, "dome_typ": 204, "closest": 204, "put_origin_on_a_cel": 204, "hydrologi": 204, "hydro": [204, 228], "dome_viz": 204, "time_slic": 204, "save_imag": 204, "hide": [204, 210], "hide_fig": 204, "add_test_cas": [204, 210], "restart_test": [204, 210, 227, 229], "talk": 204, "16": [204, 211, 225, 227], "10e3": 204, "40": [204, 215], "126": 204, "4e3": 204, "160": [204, 210, 222], "500": [204, 210, 211, 219, 222], "held": 204, "initial_condit": 205, "dig": [205, 211], "infrastructur": [205, 210], "background": 205, "behind": 205, "adher": [205, 210], "pep8": [205, 206], "bot": [205, 219], "violat": 205, "pleas": [205, 206, 210, 227], "consid": 205, "editor": 205, "pycharm": [205, 206, 210], "spyder": 205, "linter": 205, "flake8": [205, 206], "discourag": 205, "reformat": 205, "autopep8": 205, "undesir": 205, "util": 205, "lint": 205, "wildcard": 205, "vim": [205, 210], "plugin": 205, "id": [205, 206], "commit": [205, 206], "why": 205, "sound": 205, "subpackag": 205, "understand": [205, 211], "releas": [205, 209, 216, 220, 227], "our": [205, 210, 227], "downstream": 205, "tutori": [205, 206], "clu": 205, "intro": 205, "docstr": [205, 209, 210], "strip": 205, "mpas_ocean": 205, "hidden": 205, "shortcut": [205, 227], "referenc": [205, 210], "mention": 205, "dot": 205, "charact": 205, "unix": [205, 209], "distinct": 205, "mayb": [205, 210], "machine_config": 205, "endswith": 205, "splitext": 205, "exactli": [205, 206, 210, 219], "move": [205, 206, 210, 226], "renam": 205, "visa": 205, "versa": 205, "comfort": [205, 210], "inherit": [205, 210], "orient": 205, "program": [205, 211], "led": 205, "felt": 205, "contribut": 205, "hesit": 205, "predecessor": [205, 208, 209], "harder": 205, "outcom": 205, "augment": 205, "explain": 205, "hope": 205, "dens": 205, "learn": [205, 210], "curv": 205, "worth": [205, 210], "skill": 205, "broadli": 205, "applic": [205, 206, 226], "endeavor": 205, "readabl": 205, "manipul": 205, "get_available_cores_and_nod": 205, "theoret": 205, "dozen": 205, "split": 205, "theori": 205, "biogeochemistri": 205, "bash": [206, 207, 210, 227], "ksh": 206, "mac": [206, 209], "csh": 206, "tcsh": 206, "temporarili": 206, "bin": [206, 217, 227], "obtain": [206, 213], "recogn": [206, 211, 227], "mambaforg": [206, 210, 216, 227], "permiss": 206, "miniconda3": 206, "unifi": [206, 217], "anyon": 206, "caus": [206, 213, 217, 219], "person": [206, 207], "base_path_to_install_or_update_conda": 206, "with_albani": 206, "with_netlib_lapack": 206, "with_petsc": 206, "flavor": [206, 210], "login": [206, 213, 217], "troubl": [206, 210], "recognit": 206, "trilino": 206, "downsid": 206, "unneed": 206, "laptop": [206, 210, 211], "workstat": 206, "deploy": 206, "shallow": [206, 223, 226], "hpc": [206, 213, 216], "touch": 206, "update_spack": 206, "reinstal": 206, "scorpio": [206, 216, 227], "esmf": [206, 227], "caution": 206, "deploi": [206, 212, 213, 214, 215, 216, 217], "load_": 206, "encod": 206, "load_dev_polaris_": [206, 210], "env_nam": 206, "dev_polaris_": [206, 207], "workdir": [206, 227], "unexpect": [206, 208, 210], "occur": [206, 207], "safest": 206, "rerun": 206, "echo": 206, "correct": 206, "checkout": [206, 210], "proceed": 206, "notic": 206, "conda_env": [206, 215, 227], "rememb": 206, "recreat": [206, 207], "incorrect": 206, "unus": 206, "session": [206, 210], "pip": 206, "substanti": 206, "risk": [206, 210], "rare": 206, "env_onli": 206, "mpas_make_target": [206, 227], "scientif": [206, 227], "_albani": 206, "instruct": [206, 210], "proce": 206, "es3m": 206, "compli": 206, "convent": [206, 210], "memor": 206, "guidelin": 206, "stai": 206, "complianc": 206, "checker": 206, "pre": 206, "isort": 206, "mypi": 206, "77": 206, "e302": 206, "blank": 206, "resolv": 206, "simpler": [206, 210], "mkdir": 206, "fetch": [206, 210], "new_branch_nam": 206, "put": [206, 210], "elsewher": 206, "disk": [206, 211, 213, 217], "respons": 206, "simplest": 206, "your_new_branch": 206, "suggest": 207, "geo": 207, "cartopi": 207, "14": 207, "np110py27_4": 207, "calledprocesserror": 207, "deploy_tmp": 207, "spec": [207, 217], "vpn": 207, "site": 207, "shell": [207, 209], "honor": 207, "wide": 207, "coupl": [207, 209], "spawn": 207, "usernam": [207, 210, 213, 217], "proxy_en": 207, "export": 207, "all_proxi": 207, "proxyout": 207, "8080": 207, "no_proxi": 207, "localhost": [207, 211, 216, 217, 227], "127": 207, "proxy_dis": 207, "unset": 207, "anytim": 207, "fatal": 207, "mpi_init": 207, "stack": 207, "mpir_init_thread": 207, "159": 207, "mpid_init": 207, "164": 207, "mpidi_ch3_init": 207, "95": 207, "mpid_nem_init": 207, "314": 207, "mpid_nem_tcp_init": 207, "173": 207, "mpid_nem_tcp_get_business_card": 207, "395": 207, "getsockinterfaceaddr": 207, "369": 207, "pn2034311": 207, "errno": 207, "host": [207, 211, 216, 227], "mpirun": [207, 211, 212, 213, 214, 215, 216, 217, 227], "srun": [207, 210, 211, 212, 213, 214, 215, 216, 217, 227], "parallel_execut": [207, 211, 212, 213, 214, 215, 216, 217, 227], "plu": 208, "autom": 209, "exascal": 209, "earth": 209, "kept": 209, "sens": [209, 210], "boundari": [209, 222, 228], "expert": 209, "team": 209, "launch": 209, "uncoupl": 209, "evolv": [209, 219, 223, 225], "quick": [209, 210, 220, 229], "queue": 209, "beginn": [209, 210], "worktre": [209, 210], "advanc": [209, 210], "mpas_to_yaml": 209, "troubleshoot": 209, "proxi": 209, "lanl": [209, 211, 213], "gethostbynam": 209, "glossari": 210, "port": [210, 217], "stick": 210, "miniconda": 210, "haven": 210, "3_chrysalis_intel_openmpi": 210, "switch": [210, 211], "strict": 210, "fork": 210, "push": 210, "lowercas": 210, "hyphen": 210, "settl": 210, "desktop": 210, "realli": [210, 217], "nice": [210, 217], "supercomput": 210, "yet_another_channel": 210, "vi": 210, "polaris_head": 210, "yetanotherchannel": 210, "instanc": 210, "repres": [210, 219, 223], "highli": 210, "camelcas": 210, "capit": 210, "letter": 210, "cap": 210, "awkward": 210, "encourag": 210, "enclos": 210, "briefli": 210, "alphabet": 210, "interest": 210, "anyth": 210, "probabl": [210, 216], "suppos": 210, "easili": 210, "tide": 210, "analyz": 210, "hard": [210, 222, 225], "sai": [210, 216], "res_str": 210, "1000": [210, 211, 219, 222], "still": [210, 220, 226, 227], "ti": 210, "loop": 210, "coarsest": [210, 211], "especi": 210, "anticip": 210, "promot": 210, "pattern": 210, "familiar": 210, "seen": 210, "brows": 210, "row": 210, "greater": 210, "disadvantag": 210, "foremost": 210, "magic": 210, "effect": [210, 226], "kind": 210, "pain": 210, "path_to_mpas_ocean": 210, "path_to_working_dir": 210, "sbatch": [210, 216, 227], "job_script": [210, 227], "cat": 210, "slurm_jobid": 210, "_run_test": 210, "gpf": 210, "fs1": 210, "ac": 210, "cbegeman": 210, "successfulli": 210, "x_cell": 210, "y_cell": 210, "grid_typ": [210, 211, 219, 222, 223, 225, 226], "coord_typ": [210, 219, 222, 223, 225, 226], "partial_cell_typ": [210, 219, 222, 223, 225, 226], "min_pc_fract": [210, 219, 222, 223, 225, 226], "everywher": 210, "depress": [210, 219], "x_min": 210, "x_max": 210, "y_min": 210, "y_max": 210, "y_mid": 210, "x_perturb_min": 210, "x_perturb_max": 210, "perturb_width": [210, 222], "y_offset": 210, "normal_veloc": 210, "attr": 210, "mostli": 210, "logic": [210, 222], "northern": [210, 222], "half": [210, 222], "southern": [210, 222], "halv": [210, 222], "gradient": [210, 222, 225], "08": [210, 222], "500km": [210, 222], "40e3": [210, 222], "water": [210, 222, 223, 225, 226], "35": [210, 222, 223, 225, 226, 227], "corioli": [210, 222, 223, 225], "2e": [210, 222], "initial_temperatur": 210, "initial_normal_veloc": 210, "connect": [210, 217], "match": 210, "decomp_test": [210, 227, 229], "light": 210, "fast": 210, "e3sm_compon": 210, "interrupt": 210, "pty": 210, "navig": 210, "newli": 210, "bunch": 210, "didn": 210, "mistak": 210, "finger": 210, "cross": 210, "initial_normalveloc": 210, "initial_salin": 210, "btr_dt_per_km": [210, 222], "obvious": 210, "stress": [210, 225], "steem": 210, "bring": 210, "landicemodelstep": 210, "huge": 210, "cp": 210, "config_dt": 210, "05": 210, "split_explicit_t": 210, "config_btr_dt": 210, "hmix_del2": 210, "bottom_drag": 210, "cvmix": 210, "0002": 210, "filename_interv": 210, "0100": 210, "input_interv": 210, "initial_onli": 210, "basicmesh": 210, "dayssincestart": 210, "surfacespe": 210, "lowersurfac": 210, "uppersurfac": 210, "ureconstructx": 210, "ureconstructi": 210, "great": 210, "remain": [210, 223, 225], "load_dataset": 210, "final_temperatur": 210, "ab": 210, "fresh": 210, "decomp": 210, "proc": 210, "area": 210, "markdown": 210, "users_guid": 210, "daunt": 210, "flesh": 210, "bonu": 210, "improv": 210, "introduc": 210, "techniqu": 210, "proport": [210, 219, 222, 223, 226], "1384565": 210, "strftime": 210, "gmtime": 210, "run_second": 210, "twice": 210, "guess": 210, "recomput": 210, "aim": 210, "becam": 210, "mainten": 210, "counter": 210, "thought": 210, "yet_another_channel_test_cas": 210, "yetanotherchanneltestcas": 210, "choic": [210, 223], "spuriou": [210, 222], "dissip": [210, 222], "pop": [210, 222], "mom": [210, 222], "mitgcm": [210, 222], "higher": 210, "heavi": 210, "analogi": 210, "tet": 210, "bear": 210, "me": 210, "late": 210, "_add_step": 210, "startswith": 210, "privat": 210, "break": [210, 222], "unusu": 210, "rpe_test_3_nu_10": 210, "rpe_test_4_nu_20": 210, "rpe_test_5_nu_200": 210, "_setup_step": 210, "20_00": 210, "0000": 210, "dayssincestartofsim": 210, "relativevort": 210, "pyplot": 210, "plt": 210, "output_": 210, "sections_yet_another_channel_": 210, "rpe_t": 210, "init_filenam": 210, "ds_init": 210, "_plot": 210, "compact": 210, "dirti": 210, "adopt": 210, "lesson": 210, "tricki": 210, "commun": 210, "nuanc": 210, "fake": 210, "wasn": 210, "fold": 210, "proper": 210, "third": 210, "extens": 211, "single_nod": [211, 212, 213, 214, 215, 216, 217, 227], "multinod": [211, 227], "hopefulli": 211, "explanatori": 211, "my_machin": 211, "fit": 211, "extend": 211, "gitconfig": 211, "enter": 211, "author": 211, "asai": 211, "davi": 211, "email": 211, "pull_request": 211, "28": 211, "address": 211, "metadata": 211, "customize_config_pars": 211, "server_base_url": 211, "inej": 211, "check_siz": 211, "ssl": 211, "certif": 211, "core_path": 211, "partition_execut": 211, "dask": 211, "netcdf4": 211, "netcdf4_class": 211, "netcdf3_64bit": 211, "netcdf3_class": 211, "engin": 211, "scipi": 211, "mesh_databas": 211, "ocean_database_root": 211, "landice_database_root": 211, "mesh_cor": 211, "18": [211, 213], "mesh_min_cor": 211, "mesh_max_memori": 211, "mesh_max_disk": 211, "init_cor": 211, "init_min_cor": 211, "init_max_memori": 211, "init_max_disk": 211, "init_thread": 211, "forward_cor": 211, "forward_min_cor": 211, "forward_thread": 211, "forward_max_memori": 211, "forward_max_disk": 211, "add_metadata": 211, "ec": 211, "wc": 211, "mesh_descript": 211, "autodetect": 211, "bathy_descript": 211, "gebco": 211, "2022": 211, "bedmachin": 211, "antarctica": 211, "init_descript": 211, "e3sm_vers": 211, "increment": 211, "mesh_revis": 211, "finest": 211, "min_r": 211, "max_r": 211, "max_depth": 211, "creation_d": 211, "peopl": 211, "contact": 211, "temperaturemax": 211, "statist": 211, "temperature_max": 211, "33": [211, 227], "diagnost": [211, 212, 213, 215, 216, 217, 227], "enable_ocean_initial_condit": 211, "enable_ocean_graph_partit": 211, "enable_seaice_initial_condit": 211, "scrip": 211, "enable_scrip": 211, "transect": 211, "onlin": 211, "member": 211, "offlin": 211, "enable_diagnostics_fil": 211, "coarser": [211, 223], "finer": 211, "comparisonlatresolut": 211, "comparisonlonresolut": 211, "antarct": 211, "polar": [211, 212, 214, 219], "stereograph": 211, "comparisonantarcticstereowidth": 211, "6000": [211, 219], "comparisonantarcticstereoresolut": 211, "arctic": 211, "comparisonarcticstereowidth": 211, "comparisonarcticstereoresolut": 211, "tanh_dz": 211, "3000": 211, "min_layer_thick": [211, 219], "max_layer_thick": [211, 219], "retain": 211, "ecosystem": 212, "gain": 212, "confluenc": 212, "public_html": [212, 214, 216], "polaris_env": [212, 213, 214, 215, 216, 217], "soft": [212, 214, 216, 227], "mpi_intel": [212, 214, 215, 216], "mpi_gnu": [212, 213, 214, 215, 216, 217], "hdf5": [212, 213, 214, 215, 216, 217], "fortran": [212, 213, 214, 215, 216, 217], "pnetcdf": [212, 213, 214, 215, 216, 217], "use_e3sm_hdf5_netcdf": [212, 213, 214, 215, 216, 217], "cobalt": [212, 213, 214, 215, 216, 217], "condo": [212, 227], "acm": [212, 227], "medium": 212, "qualiti": [212, 213, 215, 216, 217, 227], "servic": [212, 213, 215, 216, 217, 227], "qo": [212, 213, 215, 216, 217, 227], "acme_high": 212, "load_latest_polaris_intel_impi": [212, 215], "load_latest_polaris_gnu_openmpi": [212, 214, 227], "dst": 213, "calendar": 213, "network": 213, "introduct": 213, "platform": 213, "wtrw": 213, "ch": 213, "lustr": 213, "scratch4": 213, "scratch5": 213, "sacctmgr": 213, "assoc": 213, "cluster": 213, "45": 213, "my": 213, "sshare": 213, "grep": [213, 227], "sreport": 213, "accountutilizationbyus": 213, "2019": 213, "02": 213, "prioriti": 213, "yellow": 213, "chkhome": 213, "petabyt": 213, "df": 213, "bp": 213, "archiv": [213, 217], "hpss": [213, 217], "front": 213, "tn": 213, "storag": 213, "project_nam": 213, "salloc": [213, 216, 217], "account_nam": 213, "gpu": [213, 217], "hyperthread": [213, 217], "hang": [213, 217], "threads_per_cor": [213, 217], "modules_befor": [213, 217], "modules_aft": [213, 217], "shared_clim": [213, 227], "load_latest_polaris_gnu_mpich": [213, 217], "high": [214, 216], "load_latest_polaris_intel_openmpi": 214, "compyf": 215, "app": [215, 227], "pmi2": 215, "submit": 216, "workload": 216, "squeue": 216, "my_usernam": [216, 217], "scancel": 216, "jobid": 216, "cancel": 216, "emtpi": 216, "three": 216, "mpi_mpich": [216, 227], "mpi_openmpi": [216, 227], "nompi": [216, 227], "p1": 217, "nersc": 217, "iri": 217, "filesystem": 217, "myquota": 217, "prjquota": 217, "projectid": 217, "m1795": 217, "hsi": 217, "htar": 217, "zstash": 217, "cf": [217, 227], "cdir": [217, 227], "constraint": [217, 227], "premium": 217, "cray_compil": 217, "8844": 217, "monik": 217, "browser": 217, "grab": 217, "logon": 217, "kernel": 217, "myenv": 217, "ipykernel": 217, "kernelspec": 217, "u1": 217, "Be": 217, "interpret": 217, "argv": 217, "env": 217, "ipykernel_launch": 217, "connection_fil": 217, "display_nam": 217, "languag": 217, "2500": 219, "deepest": 219, "stewart": 219, "2017": 219, "z_2": 219, "z_1": 219, "mathrm": 219, "tanh": 219, "rightarrow": 219, "infti": 219, "z_k": 219, "z_0": 219, "z_": [219, 225], "k": 219, "finder": 219, "n_z": 219, "h_": 219, "210": [219, 223], "scienc": 219, "hydrograph": 219, "climatologi": 219, "250": 219, "5500": 219, "renorm": 219, "51": 219, "221": 219, "63": 219, "floor": 219, "flat": [219, 222], "collaps": 219, "adcroft": 219, "campin": 219, "2004": 219, "absenc": 219, "squash": 219, "watercolumn": 219, "press": 219, "batymetri": 219, "stair": 219, "month": 220, "year": 220, "websit": 220, "release_6": 220, "ilicak": 222, "2012": 222, "distinguish": 222, "zonal": [222, 225], "meridion": [222, 225], "throughout": 222, "psu": [222, 225], "cooler": 222, "north": 222, "sinusoid": 222, "perturb": [222, 223], "t_0": 222, "t_b": 222, "t_": 222, "z_b": 222, "y_": 222, "l_x": 222, "warmer": 222, "ge": [222, 223], "gradient_width_fract": 222, "l_y": 222, "le": [222, 225], "flow": [222, 223], "stationari": [222, 225], "literatur": 222, "mk": 222, "celsiu": 222, "williamson": 223, "1992": 223, "sec": 223, "3a": 223, "skamarock": 223, "gassmann": 223, "bodi": 223, "rotat": 223, "transport": 223, "psi": 223, "proportion": 223, "icosohydr": 223, "480": 223, "150": 223, "nearest": 223, "insensit": [223, 225], "300": [223, 226], "passiv": 223, "psi_0": 223, "co": 223, "radiu": 223, "assign": 223, "debug_tracers_1": 223, "equatori": 223, "u_0": 223, "tau": 223, "transit": 223, "equat": [223, 225], "vel_pd": 223, "tendenc": 223, "multipli": 223, "rad": 223, "lat_cent": 223, "lon_cent": 223, "14159265": 223, "2123666": 223, "6667": 223, "hill": 223, "psi0": 223, "qu_conv_thresh": 223, "warn": 223, "qu_conv_max": 223, "icos_conv_thresh": 223, "icos_conv_max": 223, "roughli": 223, "span": 225, "arbitrarili": 225, "virtu": 225, "examin": 225, "400": 225, "phi": 225, "phi_0": 225, "dz": 225, "ml": 225, "mld": 225, "surface_x": 225, "x_gradient_mixed_lay": 225, "mixed_layer_depth_x": 225, "x_difference_across_mixed_lay": 225, "x_gradient_interior": 225, "spatial": 225, "degc": 225, "temperature_gradient_mixed_lay": 225, "temperature_difference_across_mixed_lay": 225, "temperature_gradient_interior": 225, "mixed_layer_depth_temperatur": 225, "25": 225, "surface_salin": 225, "salinity_gradient_mixed_lay": 225, "salinity_difference_across_mixed_lay": 225, "salinity_gradient_interior": 225, "mixed_layer_depth_salin": 225, "scheme": 225, "dictat": 225, "kpp": 225, "restor": 225, "piston": 225, "toward": 225, "temperature_surface_restoring_valu": 225, "temperature_piston_veloc": 225, "salinity_surface_restoring_valu": 225, "salinity_piston_veloc": 225, "temperature_interior_restoring_r": 225, "salinity_interior_restoring_r": 225, "net": 225, "latent": 225, "heat": 225, "bulk": 225, "latent_heat_flux": 225, "sensibl": 225, "sensible_heat_flux": 225, "solar": 225, "shortwav": 225, "shortwave_heat_flux": 225, "evapor": 225, "evaporation_flux": 225, "5e": 225, "rain": 225, "rain_flux": 225, "wind": 225, "wind_stress_zon": 225, "wind_stress_meridion": 225, "characterist": 226, "welcom": 226, "icosohedr": 226, "pertain": 226, "inher": 226, "warrant": 226, "investig": 226, "load_latest_polari": 227, "minu": 227, "create_polaris_load_script": 227, "load_polaris_1": 227, "0_mpich": 227, "wiki": 227, "circular_shelf": 227, "sia_smoke_test": 227, "sia_decomposition_test": 227, "sia_restart_test": 227, "fo_smoke_test": 227, "fo_decomposition_test": 227, "fo_restart_test": 227, "37": 227, "38": 227, "17": 227, "210131_test_new_branch": 227, "fall": 227, "my_config": 227, "smaller": 227, "previous_workdir": 227, "paper": 227, "recompil": 227, "live": 227, "safer": 227, "preserv": 227, "test_subdir": 227, "whatev": 227, "wall": 227, "clock": 227, "accord": 227, "j": 227, "exclus": 227, "job_nam": 227, "wall_tim": 227, "fo_integr": [227, 229], "full_integr": [227, 229], "sia_integr": [227, 229], "cosine_bell_cached_init": [227, 229], "ec30to60": [227, 229], "ecwisc30to60": [227, 229], "qu240_for_e3sm": [227, 229], "quwisc240_for_e3sm": [227, 229], "wc14": [227, 229], "suitenam": 227, "radial": 228, "analyt": 228, "form": 228, "identifi": 228, "analysis_test": 229, "5km": 229, "20km": 229, "with_frazil": 229, "prohibit": 229}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.list": [[54, 2, 1, "", "list_cases"], [55, 2, 1, "", "list_machines"], [56, 2, 1, "", "list_suites"]], "polaris.logging": [[57, 2, 1, "", "log_method_call"]], "polaris.mesh": [[58, 0, 1, "", "IcosahedralMeshStep"], [65, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [60, 1, 1, "", "get_cell_width"], [61, 1, 1, "", "get_subdivisions"], [62, 1, 1, "", "make_jigsaw_mesh"], [63, 1, 1, "", "run"], [64, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, 1, 1, "", "__init__"], [66, 1, 1, "", "build_cell_width_lat_lon"], [67, 1, 1, "", "make_jigsaw_mesh"], [68, 1, 1, "", "run"], [69, 1, 1, "", "setup"]], "polaris.mesh.planar": [[70, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[71, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "run"], [73, 1, 1, "", "save_and_plot_cell_width"], [74, 1, 1, "", "setup"]], "polaris.model_step": [[75, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[76, 2, 1, "", "ingest"], [77, 2, 1, "", "parse_replacements"], [78, 2, 1, "", "replace"], [79, 2, 1, "", "write"]], "polaris.ocean": [[123, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[123, 1, 1, "", "__init__"]], "polaris.ocean.model": [[124, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "compute_cell_count"], [126, 1, 1, "", "constrain_resources"], [127, 1, 1, "", "map_yaml_to_namelist"], [128, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[129, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[130, 0, 1, "", "BaroclinicChannel"], [131, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[130, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[131, 1, 1, "", "__init__"], [132, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[133, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[133, 1, 1, "", "__init__"], [134, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[135, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[137, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "compute_cell_count"], [139, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[140, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "run"], [142, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[143, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[145, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[147, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[147, 1, 1, "", "__init__"], [148, 1, 1, "", "configure"], [149, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[150, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "run"], [152, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[153, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[155, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[157, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[157, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[158, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "configure"], [160, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[161, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "rmse"], [163, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[164, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "compute_cell_count"], [166, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[167, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[169, 0, 1, "", "Viz"], [171, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[173, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[173, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[174, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[176, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[176, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.initial_state": [[177, 0, 1, "", "InitialState"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[179, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[181, 2, 1, "", "generate_1d_grid"], [182, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[183, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[184, 2, 1, "", "alter_bottom_depth"], [185, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[186, 2, 1, "", "compute_min_max_level_cell"], [187, 2, 1, "", "compute_z_level_layer_thickness"], [188, 2, 1, "", "compute_z_level_resting_thickness"], [189, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[190, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[80, 2, 1, "", "check_parallel_system"], [81, 2, 1, "", "run_command"], [82, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[83, 2, 1, "", "write"]], "polaris.remap": [[84, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[84, 1, 1, "", "__init__"], [85, 1, 1, "", "dst_from_lon_lat"], [86, 1, 1, "", "dst_from_mpas"], [87, 1, 1, "", "dst_from_points"], [88, 1, 1, "", "dst_from_proj"], [89, 1, 1, "", "dst_global_lon_lat"], [90, 1, 1, "", "get_remapper"], [91, 1, 1, "", "runtime_setup"], [92, 1, 1, "", "src_from_lon_lat"], [93, 1, 1, "", "src_from_mpas"], [94, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[95, 2, 1, "", "run_single_step"], [96, 2, 1, "", "run_tests"]], "polaris.setup": [[97, 2, 1, "", "setup_case"], [98, 2, 1, "", "setup_cases"]], "polaris.streams": [[99, 2, 1, "", "read"], [100, 2, 1, "", "update_defaults"], [101, 2, 1, "", "update_tree"], [102, 2, 1, "", "write"]], "polaris.suite": [[103, 2, 1, "", "setup_suite"]], "polaris.validate": [[104, 2, 1, "", "compare_timers"], [105, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[106, 2, 1, "", "plot_global"]], "polaris.viz": [[107, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[108, 0, 1, "", "PolarisYaml"], [112, 2, 1, "", "main_mpas_to_yaml"], [113, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [114, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[108, 1, 1, "", "__init__"], [109, 1, 1, "", "read"], [110, 1, 1, "", "update"], [111, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5, 210], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 122, 206, 210, 212, 213, 214, 215, 216, 217, 222, 223, 225, 226], "same": 1, "implement": 1, "test": [1, 121, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 196, 200, 202, 203, 204, 205, 210, 211, 221, 224, 227, 228, 229], "valid": [1, 2, 15, 44, 104, 105, 132, 134, 136, 144, 149, 154, 160, 175, 203, 210, 227], "api": 2, "refer": [2, 121, 122], "compon": [2, 12, 17, 18, 49, 122, 191, 198, 205, 206, 220, 227], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 201, 205, 206, 209, 227], "framework": [2, 8, 121, 122, 194, 197, 205, 218], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 54, 55, 56], "setup": [2, 4, 6, 30, 40, 64, 69, 74, 97, 98, 128, 142, 152, 201], "suit": [2, 4, 6, 103, 202, 221, 227, 229], "run": [2, 6, 12, 37, 63, 68, 72, 95, 96, 122, 141, 151, 156, 163, 168, 170, 172, 178, 180, 201, 206, 222, 223, 225, 226, 227], "cach": [2, 4, 6, 48, 201], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 205], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 203], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 201, 210, 222, 223, 225, 226], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 122, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 225, 226], "io": [2, 9, 51, 52, 53], "log": [2, 10, 57], "mesh": [2, 11, 12, 16, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 195, 210, 222, 223, 225, 226], "model_step": [2, 75], "namelist": [2, 12, 76, 77, 78, 79, 122], "parallel": [2, 80, 81, 82], "proven": [2, 13, 83], "remap": [2, 14, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "stream": [2, 12, 99, 100, 101, 102, 122, 210], "viz": [2, 106, 107, 155, 156, 169, 170, 171, 172, 179, 180, 195, 197, 210], "yaml": [2, 12, 108, 109, 110, 111, 112, 113, 114, 122], "build": [3, 206, 227], "serial": [4, 6, 95, 96], "docstr": 5, "modul": [6, 205, 206], "clean": 6, "file": [7, 12, 122, 201, 210, 211], "comment": 7, "symlink": [9, 53, 201], "download": [9, 51, 201], "spheric": [11, 16, 71, 72, 73, 74], "planar": [11, 16, 70], "uniform": [11, 219], "gener": 11, "model": [12, 122, 124, 125, 126, 127, 128, 192, 210, 227], "an": [12, 122, 210], "e3sm": [12, 122, 206, 227], "ad": [12, 201, 210], "updat": [12, 110, 206], "runtim": 12, "input": [12, 201], "partit": [12, 26], "pio": 12, "make": [12, 210], "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": [16, 210], "horizont": [16, 210], "field": 16, "from": [16, 122, 201, 206, 216], "global": 16, "lat": 16, "lon": 16, "plot": [16, 210], "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 139, 146, 166], "map_yaml_to_namelist": [25, 127], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 91, 201], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 126, 201], "set_resourc": 39, "add_step": 42, "configur": [43, 148, 159, 203, 207], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "list_cas": 54, "list_machin": 55, "list_suit": 56, "log_method_cal": 57, "icosahedralmeshstep": [58, 59, 60, 61, 62, 63, 64], "build_subdivisions_cell_width_lat_lon": 59, "get_cell_width": 60, "get_subdivis": 61, "make_jigsaw_mesh": [62, 67], "quasiuniformsphericalmeshstep": [65, 66, 67, 68, 69], "build_cell_width_lat_lon": 66, "compute_planar_hex_nx_ni": 70, "sphericalbasestep": [71, 72, 73, 74], "save_and_plot_cell_width": 73, "make_graph_fil": 75, "ingest": 76, "parse_replac": 77, "replac": 78, "write": [79, 83, 102, 111], "check_parallel_system": 80, "run_command": 81, "set_cores_per_nod": 82, "mappingfilestep": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "dst_from_lon_lat": 85, "dst_from_mpa": 86, "dst_from_point": 87, "dst_from_proj": 88, "dst_global_lon_lat": 89, "get_remapp": 90, "src_from_lon_lat": 92, "src_from_mpa": 93, "src_from_proj": 94, "run_single_step": 95, "run_test": 96, "setup_cas": [97, 98], "read": [99, 109], "update_default": 100, "update_tre": 101, "setup_suit": 103, "compare_tim": 104, "compare_vari": 105, "globe": 106, "plot_glob": 106, "plot_horiz_field": 107, "polarisyaml": [108, 109, 110, 111], "main_mpas_to_yaml": 112, "mpas_namelist_and_streams_to_yaml": 113, "yaml_to_mpas_stream": 114, "anvil": [115, 212], "intel": [115, 117, 118, 212, 214, 215], "gnu": [115, 116, 117, 118, 120, 212, 213, 214, 217], "chicoma": [116, 213], "cpu": [116, 120, 213, 217], "chrysali": [117, 214], "compymcnodefac": [118, 215], "machin": [119, 206, 216, 227], "support": [119, 192, 206, 216, 227], "other": [119, 201, 210, 216, 227], "perlmutt": [120, 217], "pm": 120, "ocean": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 220], "group": [121, 196, 204, 205, 210, 224], "baroclinic_channel": [121, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 194, 222], "global_converg": [121, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 195, 223], "cosine_bel": [121, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 195, 221, 223], "single_column": [121, 173, 174, 175, 176, 177, 178, 179, 180, 197, 225], "oceanmodelstep": [121, 124, 125, 126, 127, 128], "potenti": [121, 122], "energi": [121, 122], "rpe": [121, 122, 129], "vertic": [121, 122, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 210, 219, 222, 223, 225, 226], "coordin": [121, 122, 210, 219], "v": 122, "map": 122, "omega": 122, "mpa": [122, 193], "set": [122, 206, 227], "mpi": [122, 216], "resourc": 122, "rest": 122, "compute_cell_count": [125, 138, 165], "compute_rp": 129, "baroclinicchannel": 130, "baroclinicchanneltestcas": [131, 132], "decomp_test": [133, 134, 194, 222], "decomptest": [133, 134], "default": [135, 136, 194, 210, 222], "forward": [137, 138, 139, 164, 165, 166, 176, 194, 195, 197, 210], "initial_st": [140, 141, 142, 177, 178, 194, 197, 210], "initialst": [140, 141, 142, 177, 178], "restart_test": [143, 144, 145, 146, 194, 222], "restarttest": [143, 144], "restart_step": [145, 146], "restartstep": [145, 146], "rpe_test": [147, 148, 149, 150, 151, 152, 194, 222], "rpetest": [147, 148, 149], "analysi": [150, 151, 152, 161, 162, 163, 195, 210], "threads_test": [153, 154, 194], "threadstest": [153, 154], "globalconverg": 157, "cosinebel": [158, 159, 160], "rmse": 162, "init": [167, 168, 195], "vizmap": [171, 172], "singlecolumn": 173, "cvmix": [174, 175, 197, 225], "grid_1d": [181, 182], "generate_1d_grid": 181, "write_1d_grid": 182, "init_vertical_coord": 183, "partial_cel": [184, 185], "alter_bottom_depth": 184, "alter_ssh": 185, "zlevel": [186, 187, 188, 189], "compute_min_max_level_cel": 186, "compute_z_level_layer_thick": 187, "compute_z_level_resting_thick": 188, "init_z_level_vertical_coord": 189, "zstar": 190, "init_z_star_vertical_coord": 190, "initi": [193, 210, 222, 223, 225, 226], "condit": [193, 210, 222, 223, 225, 226], "boundari": 193, "forc": [193, 222, 223, 225, 226], "baroclinic_channel_test_cas": 194, "type": [195, 219], "directori": 199, "structur": 199, "organ": 200, "attribut": [201, 203], "constructor": [201, 203], "output": [201, 210], "copi": 201, "depend": 201, "pull": 202, "request": 202, "pr": 202, "nightli": 202, "case": [203, 205, 210, 211, 227, 228], "overview": 205, "code": [205, 206, 210], "style": [205, 206], "packag": 205, "share": [205, 210], "within": 205, "quick": [206, 227], "start": [206, 210, 227], "develop": [206, 209, 210], "unix": 206, "shell": 206, "up": [206, 227], "repositori": 206, "beginn": 206, "conda": [206, 207, 216, 227], "environ": [206, 207, 227], "spack": [206, 227], "compil": 206, "system": 206, "albani": 206, "petsc": 206, "netlib": 206, "lapack": 206, "unknown": 206, "what": 206, "script": [206, 227], "doe": 206, "flag": 206, "activ": 206, "switch": 206, "between": [206, 210], "differ": 206, "troubleshoot": [206, 207], "creat": [206, 210], "onli": 206, "repo": 206, "worktre": 206, "advanc": 206, "user": [206, 209, 211, 227], "solver": 207, "error": 207, "when": 207, "proxi": 207, "lanl": 207, "mac": 207, "gethostbynam": 207, "fail": 207, "glossari": [208, 209], "": 209, "guid": 209, "tutori": [209, 210], "compass": 209, "new": 210, "get": 210, "vari": 210, "resolut": 210, "paramet": 210, "thing": 210, "out": 210, "defin": 210, "more": 210, "again": 210, "one": 210, "time": [210, 222, 223, 225, 226], "second": 210, "enhanc": 210, "dynam": 210, "comput": 210, "cell": 210, "count": 210, "superclass": 210, "studi": 210, "how": 210, "pass": 210, "data": [210, 217], "A": 211, "slurm": 216, "job": [216, 227], "queue": 216, "mpich": 216, "openmpi": 216, "No": 216, "forg": 216, "jupyt": 217, "notebook": 217, "remot": 217, "1d": 219, "grid": [219, 222, 223, 225, 226], "tanh_dz": 219, "60layerphc": 219, "100layere3smv1": 219, "3d": 219, "z": 219, "star": 219, "level": 219, "cosine_bell_cached_init": 221, "descript": [222, 223, 225, 226], "durat": [222, 223, 225, 226], "core": [222, 223, 225, 226], "thread_test": 222, "test_group_nam": 226, "test_case_nam": 226, "i": 227, "yet": 227, "load": 227, "standalon": 227}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [198, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [195, "mesh"], [222, "mesh"], [222, "id2"], [222, "id9"], [222, "id17"], [222, "id25"], [222, "id32"], [223, "mesh"], [225, "mesh"], [225, "id3"], [226, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [195, "viz"], [197, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"], [210, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [218, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [122, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [122, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.list.list_cases": [[54, "polaris-list-list-cases"]], "polaris.list.list_machines": [[55, "polaris-list-list-machines"]], "polaris.list.list_suites": [[56, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[57, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[58, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[59, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[60, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[61, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[62, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[63, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[64, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[70, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[72, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[73, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[74, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[75, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[76, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[77, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[78, "polaris-namelist-replace"]], "polaris.namelist.write": [[79, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[80, "polaris-parallel-check-parallel-system"]], "polaris.parallel.run_command": [[81, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[82, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[83, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[84, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[85, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[86, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[87, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[88, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[89, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[90, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[91, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[92, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[93, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[94, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[95, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[96, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[97, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[98, "polaris-setup-setup-cases"]], "polaris.streams.read": [[99, "polaris-streams-read"]], "polaris.streams.update_defaults": [[100, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[101, "polaris-streams-update-tree"]], "polaris.streams.write": [[102, "polaris-streams-write"]], "polaris.suite.setup_suite": [[103, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[104, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[105, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[106, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[107, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[108, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[109, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[110, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[111, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[112, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[113, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[114, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[115, "anvil"], [212, "anvil"]], "intel": [[115, "intel"], [117, "intel"], [118, "intel"]], "gnu": [[115, "gnu"], [117, "gnu"], [118, "gnu"]], "Chicoma": [[116, "chicoma"], [213, "chicoma"]], "chicoma-cpu, gnu": [[116, "chicoma-cpu-gnu"]], "Chrysalis": [[117, "chrysalis"], [214, "chrysalis"]], "CompyMcNodeFace": [[118, "compymcnodeface"], [215, "compymcnodeface"]], "Machines": [[119, "machines"], [216, "machines"]], "Supported Machines": [[119, "supported-machines"], [216, "supported-machines"]], "Other Machines": [[119, "other-machines"], [216, "other-machines"]], "Perlmutter": [[120, "perlmutter"], [217, "perlmutter"]], "pm-cpu, gnu": [[120, "pm-cpu-gnu"]], "ocean": [[121, "ocean"]], "Test Groups": [[121, "test-groups"], [204, "test-groups"]], "baroclinic_channel": [[121, "baroclinic-channel"], [194, "baroclinic-channel"], [222, "baroclinic-channel"]], "global_convergence": [[121, "global-convergence"], [195, "global-convergence"], [223, "global-convergence"]], "cosine_bell": [[121, "cosine-bell"], [195, "cosine-bell"], [223, "cosine-bell"]], "single_column": [[121, "single-column"], [197, "single-column"], [225, "single-column"]], "Ocean Framework": [[121, "ocean-framework"]], "OceanModelStep": [[121, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[121, "reference-potential-energy-rpe"]], "Vertical coordinates": [[121, "vertical-coordinates"]], "Ocean framework": [[122, "ocean-framework"]], "YAML files vs. namelists and streams": [[122, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[122, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[122, "setting-mpi-resources"]], "Model config options and streams": [[122, "model-config-options-and-streams"]], "Vertical coordinate": [[122, "vertical-coordinate"], [219, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[122, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[123, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[124, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[125, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[126, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[127, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[128, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[129, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[130, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[131, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[132, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[133, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[134, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[135, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[136, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[137, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[138, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[139, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[140, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[141, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[142, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[143, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[144, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[145, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[146, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[147, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[148, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[149, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[150, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[151, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[153, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[154, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[155, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[156, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[157, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[158, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[159, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[160, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[161, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[162, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[173, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[174, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[175, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[176, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[177, "polaris-ocean-tests-single-column-initial-state-initialstate"]], "polaris.ocean.tests.single_column.initial_state.InitialState.run": [[178, "polaris-ocean-tests-single-column-initial-state-initialstate-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[179, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[180, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[181, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[182, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[183, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[184, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[185, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[186, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[187, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[188, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[189, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[190, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[191, "ocean-component"], [220, "ocean-component"]], "Models": [[192, "models"]], "Supported Models": [[192, "supported-models"]], "MPAS-Ocean": [[193, "mpas-ocean"]], "Initial conditions": [[193, "initial-conditions"]], "Boundary conditions": [[193, "boundary-conditions"]], "Forcing": [[193, "forcing"]], "framework": [[194, "framework"], [197, "framework"]], "baroclinic_channel_test_case": [[194, "baroclinic-channel-test-case"]], "initial_state": [[194, "initial-state"], [197, "initial-state"]], "forward": [[194, "forward"], [195, "forward"], [197, "forward"]], "default": [[194, "default"], [222, "default"]], "decomp_test": [[194, "decomp-test"], [222, "decomp-test"]], "restart_test": [[194, "restart-test"], [222, "restart-test"]], "threads_test": [[194, "threads-test"]], "rpe_test": [[194, "rpe-test"], [222, "rpe-test"]], "mesh types": [[195, "mesh-types"]], "init": [[195, "init"]], "analysis": [[195, "analysis"]], "Test groups": [[196, "test-groups"], [224, "test-groups"]], "cvmix": [[197, "cvmix"], [225, "cvmix"]], "Directory structure": [[199, "directory-structure"]], "Organization of Tests": [[200, "organization-of-tests"]], "Steps": [[201, "steps"]], "Step attributes": [[201, "step-attributes"]], "constructor": [[201, "constructor"], [203, "constructor"]], "constrain_resources()": [[201, "constrain-resources"]], "setup()": [[201, "setup"]], "runtime_setup()": [[201, "runtime-setup"]], "run()": [[201, "run"]], "inputs and outputs": [[201, "inputs-and-outputs"]], "Input files": [[201, "input-files"]], "Symlinks to input files": [[201, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[201, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[201, "downloading-and-symlinking-input-files"]], "Copying input files": [[201, "copying-input-files"]], "Output files": [[201, "output-files"]], "Cached output files": [[201, "cached-output-files"]], "Adding other steps as dependencies": [[201, "adding-other-steps-as-dependencies"]], "Test Suites": [[202, "test-suites"], [227, "test-suites"], [229, "test-suites"]], "Pull-Request (PR) suite": [[202, "pull-request-pr-suite"]], "Nightly suite": [[202, "nightly-suite"]], "Test cases": [[203, "test-cases"]], "TestCase attributes": [[203, "testcase-attributes"]], "configure()": [[203, "configure"]], "validate()": [[203, "validate"]], "Overview": [[205, "overview"]], "Code Style": [[205, "code-style"]], "Packages and Modules": [[205, "packages-and-modules"]], "Packages": [[205, "packages"]], "Modules": [[205, "modules"]], "Classes": [[205, "classes"]], "Code sharing": [[205, "code-sharing"]], "\u2026in the polaris framework": [[205, "in-the-polaris-framework"]], "\u2026within a component": [[205, "within-a-component"]], "\u2026within a test group": [[205, "within-a-test-group"]], "\u2026within a test case": [[205, "within-a-test-case"]], "Quick Start for Developers": [[206, "quick-start-for-developers"]], "Unix Shell": [[206, "unix-shell"]], "Set up a polaris repository: for beginners": [[206, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[206, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[206, "supported-machines"]], "Environments with Albany": [[206, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[206, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[206, "unknown-machines"]], "What the script does": [[206, "what-the-script-does"]], "Optional flags": [[206, "optional-flags"]], "Activating the environment": [[206, "activating-the-environment"]], "Switching between different polaris environments": [[206, "switching-between-different-polaris-environments"]], "Troubleshooting": [[206, "troubleshooting"], [207, "troubleshooting"]], "Creating/updating only the polaris environment": [[206, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[206, "building-e3sm-components"]], "Running polaris from the repo": [[206, "running-polaris-from-the-repo"]], "Code style for polaris": [[206, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[206, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[207, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[207, "proxy-on-lanl-macs"]], "gethostbyname failed": [[207, "gethostbyname-failed"]], "Glossary": [[208, "glossary"], [209, null]], "Polaris": [[209, "polaris"]], "User's guide": [[209, null]], "Developer's guide": [[209, null]], "Tutorials": [[209, null]], "Compass": [[209, "compass"]], "Developer Tutorial: Adding a new test group": [[210, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[210, "getting-started"]], "Making a new test group": [[210, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[210, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[210, "varying-resolution-and-other-parameters"]], "Adding the initial_state step": [[210, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[210, "creating-a-horizontal-mesh"]], "Adding a config file": [[210, "adding-a-config-file"]], "Adding the step to the test case": [[210, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[210, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[210, "creating-an-initial-condition"]], "Adding plots": [[210, "adding-plots"]], "Adding step outputs": [[210, "adding-step-outputs"]], "Adding validation": [[210, "adding-validation"], [210, "id1"]], "Test things out!": [[210, "test-things-out"]], "Adding the forward step": [[210, "adding-the-forward-step"]], "Defining model config options and streams": [[210, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[210, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[210, "adding-more-validation"]], "Test the test case again!": [[210, "test-the-test-case-again"]], "Adding a visualization step": [[210, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[210, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[210, "test-the-test-case-one-more-time"]], "Adding a second test case": [[210, "adding-a-second-test-case"]], "Enhancements": [[210, "enhancements"]], "Adding model config options in code": [[210, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[210, "adding-dynamic-model-config-options"]], "Computing the cell count": [[210, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[210, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[210, "adding-a-parameter-study"]], "Adding the steps to the test case": [[210, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[210, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[210, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[211, "config-files"]], "A \u201cuser\u201d config file": [[211, "a-user-config-file"]], "Test-case config files": [[211, "test-case-config-files"]], "config options": [[212, "config-options"], [213, "config-options"], [214, "config-options"], [215, "config-options"], [216, "config-options"], [217, "config-options"], [222, "config-options"], [222, "id7"], [222, "id14"], [222, "id22"], [222, "id30"], [222, "id37"], [223, "config-options"], [225, "config-options"], [225, "id1"], [225, "id6"], [226, "config-options"]], "Intel on Anvil": [[212, "intel-on-anvil"]], "Gnu on Anvil": [[212, "gnu-on-anvil"]], "Chicoma-CPU": [[213, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[213, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[214, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[214, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[215, "intel-on-compymcnodeface"]], "Slurm job queueing": [[216, "slurm-job-queueing"]], "MPICH": [[216, "mpich"]], "OpenMPI": [[216, "openmpi"]], "No MPI from conda-forge": [[216, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[217, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[217, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[217, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[219, "d-grid-type"]], "uniform": [[219, "uniform"]], "tanh_dz": [[219, "tanh-dz"]], "60layerPHC": [[219, "layerphc"]], "100layerE3SMv1": [[219, "layere3smv1"]], "3D vertical coordinates": [[219, "d-vertical-coordinates"]], "z-star": [[219, "z-star"]], "z-level": [[219, "z-level"]], "Test suites": [[221, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[221, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[222, "description"], [222, "id1"], [222, "id8"], [222, "id16"], [222, "id24"], [225, "description"], [225, "id2"], [226, "description"]], "vertical grid": [[222, "vertical-grid"], [222, "id3"], [222, "id10"], [222, "id18"], [222, "id26"], [222, "id33"], [223, "vertical-grid"], [225, "vertical-grid"], [225, "id4"], [226, "vertical-grid"]], "initial conditions": [[222, "initial-conditions"], [222, "id4"], [222, "id11"], [222, "id19"], [222, "id27"], [222, "id34"], [223, "initial-conditions"], [225, "initial-conditions"], [225, "id5"], [226, "initial-conditions"]], "forcing": [[222, "forcing"], [222, "id5"], [222, "id12"], [222, "id20"], [222, "id28"], [222, "id35"], [223, "forcing"], [225, "forcing"], [226, "forcing"]], "time step and run duration": [[222, "time-step-and-run-duration"], [222, "id6"], [222, "id13"], [222, "id21"], [222, "id29"], [222, "id36"], [223, "time-step-and-run-duration"], [225, "time-step-and-run-duration"], [226, "time-step-and-run-duration"]], "cores": [[222, "cores"], [222, "id15"], [222, "id23"], [222, "id31"], [222, "id38"], [223, "cores"], [225, "cores"], [226, "cores"]], "thread_test": [[222, "thread-test"]], "Description": [[223, "description"]], "test_group_name": [[226, "test-group-name"]], "test_case_name": [[226, "test-case-name"]], "Quick Start for Users": [[227, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[227, null]], "Loading polaris conda and spack environments": [[227, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[227, "e3sm-supported-machines"]], "Other machines": [[227, "other-machines"]], "Building supported E3SM components as standalone models": [[227, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[227, "setting-up-test-cases"]], "Running a test case": [[227, "running-a-test-case"]], "Running with a job script": [[227, "running-with-a-job-script"]], "Test Cases": [[228, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[54, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[55, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[56, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[57, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[58, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[70, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[71, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[75, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[76, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[77, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[78, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[79, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[80, "polaris.parallel.check_parallel_system"]], "run_command() (in module polaris.parallel)": [[81, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[82, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[83, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[84, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[84, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[85, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[95, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[96, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[97, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[98, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[99, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[100, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[101, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[102, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[103, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[104, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[105, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[106, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[107, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[108, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[108, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[109, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[110, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[111, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[112, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[113, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[114, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[123, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[123, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[124, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[124, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[125, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[126, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[129, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[130, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[130, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[133, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[133, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[134, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[135, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[135, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[136, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[137, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[137, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[138, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[140, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[140, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[141, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[142, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[143, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[143, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[144, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[147, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[147, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[148, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[149, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[153, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[153, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[154, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[155, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[155, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[156, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[157, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[157, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[158, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[158, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[159, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[160, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[173, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[173, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[174, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[174, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[175, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[176, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[176, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "initialstate (class in polaris.ocean.tests.single_column.initial_state)": [[177, "polaris.ocean.tests.single_column.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[177, "polaris.ocean.tests.single_column.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[178, "polaris.ocean.tests.single_column.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[179, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[179, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[180, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[181, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[182, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[183, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[184, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[185, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[186, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[187, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[188, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[189, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[190, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})