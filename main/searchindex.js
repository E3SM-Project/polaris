Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.ideal_age.IdealAge", "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tests.single_column.initial_state.InitialState", "polaris.ocean.tests.single_column.initial_state.InitialState.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "test_group_name", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 100, 110, 114, 140, 147, 212, 213, 214], "date": [1, 4, 48, 194, 209, 214], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 75, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 114, 115, 120, 123, 124, 125, 126, 132, 134, 136, 138, 139, 141, 143, 144, 146, 148, 151, 153, 154, 156, 159, 162, 163, 165, 166, 168, 170, 172, 175, 177, 178, 180, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231], "purpos": [1, 45, 207, 208, 211, 213, 231], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 57, 58, 59, 62, 63, 65, 66, 67, 68, 71, 72, 81, 82, 84, 85, 91, 97, 105, 106, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 194, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 220, 222, 225, 226, 228, 229, 230, 232], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 66, 107, 111, 123, 125, 128, 184, 186, 192, 193, 194, 200, 201, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 226, 228, 229, 230], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 65, 66, 71, 81, 82, 85, 89, 95, 96, 97, 98, 100, 102, 105, 106, 108, 110, 115, 116, 118, 119, 120, 123, 125, 126, 138, 139, 140, 147, 166, 167, 177, 186, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 231, 232], "summar": 1, "what": [1, 9, 11, 14, 120, 208, 213, 220, 229, 230], "capabl": [1, 14, 120, 204, 208, 213, 219, 230], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 106, 132, 143, 153, 186, 192, 193, 206, 207, 209, 212, 215, 216, 217, 218, 220, 230], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 116, 118, 119, 120, 123, 194, 195, 197, 198, 200, 201, 202, 203, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 231, 232], "through": [1, 99, 208, 209, 213], "process": [1, 6, 12, 27, 81, 82, 115, 204, 208, 209, 211, 212, 213], "It": [1, 4, 12, 14, 32, 38, 107, 197, 204, 205, 206, 207, 208, 209, 211, 213, 214, 219], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 66, 98, 99, 106, 107, 108, 116, 117, 118, 119, 120, 121, 123, 128, 143, 153, 194, 201, 204, 205, 206, 207, 209, 210, 213, 214, 225, 226, 228, 229, 230], "clear": [1, 208, 213], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 58, 65, 71, 85, 101, 102, 138, 146, 165, 177, 186, 192, 193, 204, 208, 209, 210, 211, 212, 230], "code": [1, 4, 5, 7, 10, 12, 32, 123, 194, 201, 204, 205, 206, 211, 212, 214, 221, 225, 228, 230], "do": [1, 4, 7, 9, 12, 14, 15, 110, 204, 206, 209, 210, 211, 213, 219, 226, 230], "current": [1, 4, 6, 9, 19, 29, 32, 39, 105, 106, 120, 125, 177, 194, 198, 200, 201, 204, 208, 209, 211, 212, 213, 214, 219, 222, 225, 226, 228, 230, 231, 232], "doe": [1, 7, 10, 12, 204, 212, 213, 219], "primari": [1, 4, 7, 213, 232], "challeng": 1, "respect": [1, 6, 7, 12, 16, 123, 204, 208, 226, 229], "softwar": [1, 75, 220, 230], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 105, 106, 107, 123, 170, 186, 192, 193, 194, 200, 201, 202, 204, 206, 207, 208, 209, 213, 214, 219, 220, 222, 226, 229, 230, 231], "appropri": [1, 4, 12, 20, 70, 120, 194, 197, 200, 201, 204, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230], "final": [1, 5, 197, 198, 200, 202, 204, 206, 213, 226], "statement": [1, 10, 204, 211], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 36, 49, 52, 77, 80, 86, 87, 88, 89, 93, 94, 95, 100, 108, 109, 123, 130, 186, 192, 193, 201, 202, 203, 204, 208, 209, 211, 213, 214, 219, 223, 229, 230], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 65, 106, 123, 143, 153, 184, 194, 196, 197, 198, 200, 201, 204, 209, 213, 214, 219, 226, 230], "regard": 1, "success": [1, 51, 194, 201, 213, 214], "last": [1, 205, 209, 225, 230], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 100, 102, 125, 149, 197, 204, 206, 207, 209, 212, 213, 214, 225, 230], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 64, 69, 74, 100, 101, 102, 110, 111, 114, 115, 140, 147, 197, 201, 204, 206, 207, 208, 209, 211, 213, 214, 220, 226], "your": [1, 3, 4, 9, 120, 194, 208, 209, 210, 213, 214, 215, 216, 219, 220, 226, 230], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 81, 82, 97, 98, 99, 104, 105, 106, 130, 151, 159, 162, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 219, 220, 226, 230, 231, 232], "appear": [1, 120, 204, 213], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 54, 60, 61, 70, 99, 115, 120, 123, 135, 145, 155, 159, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 219, 222, 225, 226, 229, 230, 232], "under": [1, 14, 32, 33, 105, 120, 123, 196, 204, 205, 209, 212, 222, 231], "head": [1, 196, 216], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 98, 99, 104, 106, 123, 125, 133, 135, 137, 144, 145, 150, 155, 176, 179, 194, 197, 200, 204, 206, 207, 208, 209, 210, 211, 212, 214, 219, 220, 222, 225, 226, 229, 230, 231, 232], "correspond": [1, 5, 15, 105, 106, 123, 194, 204, 209, 225], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 59, 66, 67, 70, 73, 85, 91, 105, 106, 125, 144, 186, 192, 193, 198, 201, 204, 207, 208, 219, 222, 225], "propos": 1, "discuss": [1, 123, 204, 206, 207, 208, 213, 225, 226], "technic": [1, 5], "issu": [1, 204, 205, 209, 226], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 120, 197, 204, 206, 207, 209, 210, 213, 222], "focu": [1, 213], "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 98, 99, 104, 109, 114, 116, 117, 118, 119, 120, 121, 134, 138, 140, 144, 146, 147, 148, 154, 167, 177, 194, 197, 200, 201, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 229], "To": [1, 4, 10, 14, 15, 106, 120, 123, 194, 204, 208, 209, 213, 215, 216, 217, 218, 219, 220, 222, 226, 230], "extent": [1, 11, 14, 213, 225], "possibl": [1, 6, 9, 61, 123, 196, 204, 205, 208, 213, 222], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 98, 99, 104, 105, 106, 194, 201, 204, 208, 209, 211, 213, 225, 230, 231], "independ": [1, 4, 205, 211], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 116, 135, 145, 155, 198, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 214, 215, 225, 231], "thu": [1, 5, 12, 213], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 106, 123, 125, 204, 207, 211, 213, 214, 219, 222, 226, 231], "clean": [1, 204, 206, 209], "plan": [1, 11, 194, 204, 211, 231], "For": [1, 2, 4, 5, 10, 12, 14, 16, 99, 116, 196, 197, 200, 204, 208, 209, 211, 213, 214, 215, 223, 226, 230, 231], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 116, 117, 118, 119, 120, 121, 194, 201, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 226, 230, 231, 232], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 62, 65, 67, 86, 90, 91, 93, 98, 99, 104, 106, 116, 117, 118, 119, 120, 121, 123, 194, 197, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 230, 231, 232], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 89, 95, 105, 106, 110, 123, 133, 135, 137, 145, 150, 155, 176, 179, 194, 197, 198, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 223, 226, 229, 230], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 58, 60, 61, 87, 94, 100, 102, 105, 106, 107, 114, 120, 125, 168, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 219, 222, 230, 231, 232], "intend": [1, 6, 7, 205, 214, 231], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 97, 107, 120, 123, 132, 143, 153, 159, 197, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 54, 106, 196, 198, 202, 204, 206, 208, 209, 210, 213, 226, 230], "pde": 1, "solver": [1, 206, 209, 212, 230], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 117, 120, 121, 202, 206, 207, 208, 209, 213, 230], "well": [1, 6, 7, 10, 11, 123, 189, 197, 200, 204, 209, 211, 213, 214, 226, 230, 231], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 58, 105, 106, 136, 138, 143, 148, 153, 158, 165, 173, 175, 177, 178, 194, 197, 198, 200, 204, 205, 206, 211, 212, 213, 214, 219, 225, 232], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 123, 198, 202, 204, 205, 206, 207, 208, 209, 212, 213, 214, 219, 222, 226, 229, 230, 231, 232], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 75, 77, 82, 86, 87, 88, 89, 90, 93, 94, 95, 97, 99, 100, 101, 102, 105, 106, 108, 110, 111, 114, 115, 120, 125, 128, 133, 138, 162, 167, 170, 190, 194, 196, 197, 198, 200, 201, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 224, 225, 226, 229, 230, 231, 232], "low": [1, 108], "level": [1, 9, 10, 11, 15, 16, 123, 186, 187, 188, 189, 190, 191, 192, 193, 197, 202, 203, 204, 206, 207, 213, 214, 225, 226, 228, 229, 232], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 58, 65, 71, 75, 85, 86, 90, 93, 105, 106, 108, 109, 110, 115, 120, 123, 125, 132, 138, 141, 151, 159, 161, 162, 165, 170, 172, 177, 178, 186, 192, 193, 196, 200, 206, 208, 209, 210, 213, 215, 216, 217, 218, 219, 220, 223, 225, 229, 230], "declar": [1, 5], "interfac": [1, 8, 184, 185, 186, 192, 193, 204, 208, 209, 212, 213, 222], "sequenc": [1, 4, 12, 203, 204, 208, 211, 213, 230, 231, 232], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 81, 82, 83, 98, 105, 106, 108, 116, 117, 118, 119, 120, 121, 125, 138, 177, 197, 204, 206, 207, 208, 209, 210, 211, 213, 214, 219, 220, 222, 226, 229, 230], "want": [1, 4, 9, 12, 14, 15, 43, 123, 204, 207, 209, 210, 213, 214, 219, 220, 228, 230, 231], "math": 1, "syntax": [1, 213], "almost": [1, 7], "ident": [1, 4, 15, 134, 144, 154, 197, 205, 208, 213, 225], "latex": 1, "b": [1, 4, 209, 211, 213, 230], "2": [1, 11, 12, 15, 33, 154, 196, 197, 202, 205, 209, 213, 214, 216, 219, 222, 225, 226, 230], "2ab": 1, "imag": [1, 5, 16, 107, 108, 207, 213, 229], "keep": [1, 4, 7, 12, 19, 50, 204, 206, 209, 213, 229], "mind": [1, 4, 213], "quit": [1, 202, 204, 206, 213], "small": [1, 7, 38, 204, 207, 213, 215, 216, 221, 222, 228, 230], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 70, 81, 82, 97, 99, 106, 111, 120, 123, 125, 138, 177, 186, 189, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 228, 229, 230, 231, 232], "prefer": [1, 204, 205, 213, 214], "png": [1, 11, 16, 198, 213], "okai": [1, 204, 213], "size": [1, 11, 60, 61, 70, 123, 127, 129, 130, 197, 207, 213, 214, 225, 226, 228, 229], "repo": [1, 4, 194, 212, 213], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 222, 229, 230, 231, 232], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 120, 204, 207, 209, 213, 219, 223, 230], "actual": [1, 4, 10, 204, 206, 209, 213], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 209, 213, 214, 215, 216, 217, 218, 219, 220, 230], "project": [1, 4, 5, 57, 89, 95, 194, 208, 209, 213, 214, 215, 216, 219, 230], "manag": [1, 210, 219], "item": [1, 213], "git": [1, 13, 84, 194, 209, 213, 214, 230], "branch": [1, 4, 120, 194, 201, 204, 209, 213, 230], "timelin": 1, "staf": 1, "via": [1, 4, 12, 204, 209, 219], "block": [1, 206], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 86, 90, 93, 123, 202, 204, 207, 208, 209, 210, 212, 213, 214, 219, 225, 226, 230, 231], "def": [1, 5, 7, 9, 10, 14, 16, 201, 204, 206, 207, 208, 213], "example_funct": 1, "foo": [1, 208], "return": [1, 5, 25, 49, 51, 59, 60, 61, 66, 70, 77, 80, 81, 91, 99, 100, 102, 110, 114, 115, 123, 126, 128, 130, 139, 163, 166, 184, 187, 188, 189, 190, 191, 208, 213, 226], "0": [1, 4, 5, 11, 12, 14, 15, 16, 60, 86, 90, 93, 106, 116, 117, 118, 119, 120, 121, 123, 186, 191, 192, 193, 196, 198, 204, 207, 208, 210, 213, 214, 216, 219, 222, 223, 225, 226, 228, 229, 230], "how": [1, 4, 10, 12, 65, 123, 203, 204, 206, 208, 209, 214, 219, 220], "show": [1, 5, 11, 204, 213, 219, 220, 225, 226, 229], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 119, 120, 123, 129, 197, 198, 200, 203, 204, 206, 207, 208, 209, 213, 214, 216, 218, 219, 220, 222, 226, 228, 230, 232], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 98, 99, 104, 119, 120, 123, 128, 162, 194, 197, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 230, 231, 232], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 87, 94, 98, 99, 100, 104, 106, 108, 110, 123, 128, 134, 144, 154, 194, 196, 201, 203, 204, 206, 207, 208, 209, 213, 214, 216, 219, 222, 225, 226, 228, 229, 230, 231, 232], "regress": [1, 158, 197, 198, 205, 211, 212, 213, 225, 226, 230, 232], "suit": [1, 5, 10, 15, 32, 41, 54, 96, 97, 99, 120, 197, 203, 204, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 225], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 81, 82, 85, 106, 123, 125, 138, 177, 197, 202, 204, 206, 207, 208, 209, 210, 213, 219, 222, 230], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 65, 97, 111, 123, 194, 197, 198, 201, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 219, 222, 225, 226, 230, 232], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 66, 123, 140, 147, 194, 201, 204, 206, 208, 209, 210, 212, 213, 214, 215, 219, 220, 222, 225, 226, 230, 232], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 80, 81, 82, 83, 84, 98, 99, 104, 120, 123, 184, 186, 187, 188, 192, 193, 197, 204, 207, 208, 212, 213, 214, 216, 219, 220, 222, 229, 230, 231], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 84, 96, 98, 99, 104, 119, 120, 143, 153, 170, 172, 173, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 219, 226, 228, 230, 231], "properli": [1, 116, 118, 119, 213, 214, 230], "addit": [1, 5, 7, 32, 200, 201, 202, 204, 206, 207, 208, 209, 213], "modif": [1, 5, 204], "nightli": [1, 209, 230, 232], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 105, 106, 194, 204, 206, 207, 208, 209, 211, 213, 214, 225, 230, 231, 232], "might": [1, 9, 12, 14, 16, 204, 207, 209, 213, 214, 219, 230], "made": [1, 4, 14, 32, 35, 41, 106, 204, 206, 208, 211, 213, 231], "ensur": [1, 7, 12, 50, 197, 208, 209, 226, 228], "continu": [1, 204, 213], "expect": [1, 10, 14, 201, 204, 209, 213, 226, 228], "page": [2, 5, 215], "auto": 2, "summari": [2, 216], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 66, 98, 99, 123, 196, 197, 198, 202, 204, 205, 206, 208, 209, 211, 219, 223, 225, 226, 229, 230, 231], "relev": [2, 5, 7, 123, 213, 215, 216, 217, 218, 219, 220, 229, 230], "main": [2, 5, 7, 12, 37, 120, 173, 201, 207, 208, 209, 213, 231], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 138, 165, 177, 197, 204, 205, 208, 209, 212, 213, 222], "document": [2, 7, 12, 204, 208, 212, 214, 230], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 104, 195, 197, 198, 200, 201, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232], "As": [3, 4, 11, 15, 60, 123, 204, 205, 206, 207, 208, 209, 213, 214, 222, 226, 228, 232], "long": [3, 19, 29, 32, 39, 81, 82, 125, 138, 177, 204, 213, 225, 230], "follow": [3, 4, 5, 11, 12, 16, 57, 120, 186, 192, 193, 194, 196, 197, 204, 205, 206, 209, 210, 213, 214, 219, 220, 222, 224, 226, 228, 230], "procedur": [3, 120, 209, 213, 220], "conda": [3, 4, 13, 84, 116, 118, 119, 120, 194, 201, 208, 212, 213, 214, 215, 216, 217, 218, 220], "environ": [3, 4, 116, 118, 119, 120, 194, 201, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220], "spack": [3, 4, 116, 118, 119, 120, 210, 212, 213, 215, 216, 217, 218, 219, 220], "compil": [3, 4, 12, 116, 117, 118, 119, 120, 121, 210, 212, 213, 215, 216, 217, 218, 219, 220, 230], "system": [3, 4, 19, 29, 32, 39, 81, 82, 83, 116, 118, 119, 120, 125, 138, 177, 204, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 230], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 57, 77, 100, 116, 118, 119, 120, 123, 201, 202, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 230], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 66, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 100, 102, 104, 105, 106, 107, 108, 116, 117, 118, 119, 120, 121, 138, 140, 143, 147, 153, 158, 160, 167, 177, 186, 192, 193, 194, 196, 197, 198, 200, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 228, 229, 232], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 72, 84, 98, 99, 104, 105, 106, 116, 117, 118, 119, 120, 121, 123, 143, 153, 158, 194, 197, 198, 200, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 226, 229, 231], "alreadi": [3, 9, 12, 43, 53, 123, 138, 177, 206, 208, 209, 213, 214, 219, 222, 226, 230], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 77, 84, 100, 104, 110, 120, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 230], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 54, 80, 81, 82, 125, 138, 177, 198, 204, 206, 208, 209, 213, 215, 216, 217, 218, 220, 225, 230, 232], "Then": [3, 5, 9, 116, 117, 118, 119, 120, 121, 123, 194, 197, 200, 201, 204, 206, 207, 209, 213, 219, 225, 230], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 57, 80, 81, 82, 91, 98, 99, 104, 106, 119, 120, 125, 126, 136, 138, 139, 140, 144, 147, 151, 156, 162, 165, 166, 167, 175, 177, 178, 182, 194, 197, 198, 200, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 231, 232], "script": [3, 4, 10, 16, 47, 117, 120, 121, 208, 211, 212, 213, 216, 219], "doc": [3, 5, 206, 213, 220], "cd": [3, 194, 209, 213, 216, 230], "rm": 3, "rf": 3, "developers_guid": [3, 213], "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 59, 60, 62, 75, 106, 116, 117, 118, 119, 120, 121, 125, 129, 134, 144, 154, 172, 186, 192, 193, 194, 197, 204, 206, 207, 208, 209, 211, 214, 215, 216, 217, 218, 219, 220, 225, 226, 230, 232], "html": [3, 223], "view": [3, 209], "open": [3, 209, 213], "index": [3, 15, 186, 187, 188, 189, 190, 191, 192, 193, 206, 207, 213], "act": [4, 208, 222], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 134, 136, 175, 178, 197, 200, 204, 206, 213, 214, 219, 225, 228, 230], "These": [4, 6, 12, 15, 17, 32, 123, 194, 196, 201, 204, 206, 208, 209, 212, 213, 214, 219, 225, 230, 231, 232], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 84, 106, 120, 123, 197, 200, 204, 205, 206, 207, 210, 211, 213, 216, 219, 220, 223, 225, 226], "describ": [4, 5, 12, 14, 84, 100, 102, 105, 106, 115, 120, 123, 197, 198, 200, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 226, 230], "below": [4, 12, 19, 29, 32, 39, 81, 82, 120, 125, 138, 177, 194, 202, 204, 206, 207, 209, 213, 214, 219, 222, 226, 228, 230], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 54, 96, 105, 106, 120, 123, 128, 191, 197, 198, 200, 204, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 220, 222, 225, 226, 228, 230, 231], "instal": [4, 209, 213, 219, 220, 230], "abov": [4, 5, 12, 15, 202, 204, 205, 206, 207, 208, 209, 213, 214, 226, 228, 230, 232], "develop": [4, 5, 6, 10, 11, 16, 120, 123, 194, 196, 201, 204, 205, 208, 210, 214, 219, 223, 230], "local": [4, 6, 9, 32, 34, 41, 194, 202, 204, 206, 209, 210, 213, 214, 219, 220, 222], "off": [4, 209, 210], "http": [4, 5, 9, 53, 204, 208, 210, 212, 213, 214, 220, 223, 230], "github": [4, 5, 208, 209, 212, 213, 214, 223, 230], "com": [4, 5, 53, 208, 209, 212, 213, 214, 230], "e3sm": [4, 5, 8, 9, 32, 109, 194, 201, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 58, 59, 65, 66, 71, 85, 92, 98, 99, 104, 109, 120, 123, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 159, 162, 165, 168, 170, 172, 175, 177, 178, 180, 182, 186, 192, 193, 198, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 226, 230], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 116, 118, 119, 197, 198, 204, 206, 209, 210, 213, 214, 219, 223, 224, 225, 228, 229, 230, 231, 232], "mode": [4, 12, 201, 209, 211, 212, 213, 230], "mean": [4, 15, 163, 198, 209, 213, 222, 225, 232], "chang": [4, 6, 12, 14, 15, 65, 194, 201, 204, 205, 206, 208, 209, 211, 213, 214, 216, 220, 222, 225, 230, 232], "reflect": [4, 209], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 57, 91, 96, 120, 123, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 230], "tool": [4, 7, 10, 12, 14, 194, 201, 204, 209, 212, 213, 214], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 66, 75, 78, 81, 82, 85, 91, 96, 106, 107, 108, 109, 110, 115, 116, 120, 123, 125, 126, 127, 128, 129, 138, 139, 140, 147, 159, 162, 166, 170, 177, 184, 186, 187, 188, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 232], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 57, 58, 63, 65, 68, 71, 80, 81, 82, 84, 85, 96, 97, 98, 99, 104, 105, 106, 120, 123, 124, 125, 184, 194, 196, 197, 198, 200, 201, 202, 204, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 54, 58, 63, 65, 68, 71, 80, 81, 82, 84, 85, 96, 97, 98, 99, 100, 104, 105, 106, 120, 123, 124, 125, 131, 132, 134, 136, 138, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 154, 156, 157, 159, 160, 162, 164, 165, 168, 170, 171, 172, 174, 175, 177, 178, 180, 181, 182, 183, 184, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 232], "support": [4, 6, 11, 14, 32, 123, 186, 192, 193, 196, 198, 204, 206, 207, 208, 212, 213, 214, 216, 220, 222, 225, 228, 231], "machin": [4, 6, 32, 34, 41, 84, 98, 99, 104, 194, 204, 206, 208, 212, 213, 214, 215, 216, 217, 218, 220], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 58, 64, 65, 66, 69, 71, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 120, 125, 128, 138, 140, 147, 149, 160, 167, 177, 184, 186, 187, 188, 192, 193, 194, 197, 198, 200, 201, 204, 205, 206, 207, 208, 210, 212, 214, 222, 224, 230, 231], "h": [4, 12, 213], "t": [4, 5, 7, 9, 10, 12, 32, 33, 115, 123, 138, 177, 204, 206, 208, 209, 210, 213, 214, 216, 218, 219, 224, 225, 230, 231, 232], "n": [4, 59, 66, 67, 73, 204, 213, 216, 219, 220, 225, 226, 229, 230], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 58, 59, 60, 61, 62, 70, 80, 81, 82, 85, 99, 123, 125, 126, 127, 129, 138, 139, 163, 166, 177, 194, 197, 204, 205, 206, 207, 208, 211, 213, 214, 219, 222, 224, 225, 226, 228, 229, 230], "v": [4, 209, 213, 232], "By": [4, 12, 15, 33, 34, 123, 194, 201, 206, 213, 214, 225, 228], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 66, 71, 76, 84, 85, 86, 90, 93, 97, 98, 99, 101, 104, 116, 118, 119, 123, 125, 138, 175, 177, 178, 194, 198, 200, 201, 204, 206, 207, 209, 212, 214, 215, 216, 217, 218, 219, 220, 222, 226, 228, 229, 230, 231, 232], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 81, 82, 84, 98, 99, 123, 124, 125, 132, 138, 177, 186, 192, 193, 194, 197, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 219, 222, 223, 225, 226, 229, 230, 231], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 58, 65, 71, 85, 98, 99, 105, 106, 125, 138, 141, 146, 151, 156, 169, 170, 172, 177, 180, 182, 204, 208, 213, 214, 225, 228, 230], "example_compact": [4, 194, 201, 214], "1km": [4, 206, 207, 213, 225, 230], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 60, 116, 117, 118, 119, 120, 121, 123, 134, 138, 154, 177, 186, 192, 193, 197, 198, 200, 202, 204, 206, 209, 210, 213, 214, 216, 219, 220, 222, 225, 226, 228, 229, 230], "test2": 4, "displai": [4, 6, 220], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 54, 57, 84, 98, 99, 104, 105, 106, 108, 194, 201, 204, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 230, 231], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 84, 96, 98, 99, 104, 105, 106, 120, 143, 153, 170, 172, 194, 197, 201, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 230, 231], "help": [4, 11, 202, 204, 209, 212, 213, 219, 223], "messag": [4, 6, 15, 204, 206, 210, 220], "test_expr": [4, 54], "flag": [4, 204, 208, 210, 211, 213, 214, 223, 225, 230], "suppli": [4, 5, 15, 115, 204, 209, 213], "substr": 4, "regular": [4, 16, 54, 59, 66, 159, 162, 213, 215, 218, 219, 220, 230], "express": [4, 54], "subset": 4, "think": [4, 213], "search": [4, 54, 216], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 104, 105, 106, 197, 201, 202, 204, 205, 206, 207, 209, 211, 213, 214, 216, 219, 226, 228, 229], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 58, 65, 71, 75, 77, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 114, 123, 125, 128, 130, 132, 138, 146, 163, 165, 168, 170, 172, 177, 185, 201, 204, 206, 207, 208, 209, 211, 213, 214, 220, 225, 230, 232], "singl": [4, 6, 16, 108, 174, 175, 178, 180, 200, 204, 206, 208, 211, 213, 219, 226, 228], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 60, 70, 77, 81, 82, 97, 100, 102, 105, 106, 110, 123, 125, 148, 163, 189, 197, 198, 200, 204, 206, 210, 212, 213, 214, 225, 226, 228, 229, 230, 232], "instead": [4, 10, 12, 19, 97, 116, 120, 204, 206, 208, 209, 213, 215, 230, 232], "pass": [4, 6, 10, 11, 12, 15, 41, 70, 106, 107, 201, 204, 206, 207, 208, 209, 211, 230], "similarli": [4, 6, 194, 204, 209, 219, 230], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 56, 84, 104, 109, 125, 131, 138, 158, 165, 174, 177, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 219, 221, 224, 231], "result": [4, 11, 15, 51, 61, 70, 105, 106, 120, 123, 134, 144, 151, 154, 156, 182, 197, 198, 204, 205, 208, 209, 211, 213, 214, 225, 226, 229, 232], "verbos": [4, 54, 56, 204, 213, 232], "about": [4, 5, 6, 10, 12, 15, 32, 85, 109, 123, 204, 206, 207, 208, 209, 213, 214, 216], "its": [4, 5, 6, 10, 14, 16, 32, 43, 91, 101, 201, 202, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 226, 230, 231], "descript": [4, 5, 213, 214, 223], "short": [4, 136, 175, 178, 204, 205, 206, 208, 213, 225], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 80, 81, 82, 104, 123, 124, 125, 134, 136, 175, 178, 197, 200, 201, 202, 204, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 230, 232], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 54, 58, 65, 71, 85, 125, 138, 170, 172, 177, 197, 202, 204, 206, 208, 213, 230, 231], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 58, 63, 65, 68, 71, 72, 80, 82, 84, 85, 91, 96, 97, 98, 99, 106, 123, 125, 126, 130, 132, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 196, 197, 198, 200, 201, 202, 203, 206, 207, 208, 211, 212, 214, 220, 222, 231, 232], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 58, 65, 71, 85, 125, 138, 170, 172, 177, 204, 206, 213], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 96, 106, 194, 201, 204, 206, 207, 211, 212, 213, 223], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 104, 107, 108, 123, 125, 173, 196, 204, 206, 207, 209, 213, 222, 231], "built": [4, 12, 98, 99, 104, 194, 201, 209, 212, 214, 219, 230], "execut": [4, 6, 12, 15, 19, 98, 99, 104, 125, 194, 201, 204, 209, 213, 214, 215, 216, 217, 218, 219, 220, 230], "standalon": [4, 12, 119, 201, 209, 211, 212, 219], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 57, 75, 87, 94, 100, 102, 104, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 158, 159, 170, 185, 194, 195, 197, 198, 200, 201, 202, 204, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 228, 229, 230, 231, 232], "befor": [4, 6, 12, 14, 38, 204, 207, 208, 209, 210, 213, 216, 220, 222, 226, 230], "w": [4, 209, 211, 213, 230], "num": 4, "f": [4, 7, 9, 12, 206, 208, 209, 213, 214, 220, 225, 230], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 57, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 120, 125, 129, 130, 140, 143, 147, 153, 170, 172, 185, 194, 197, 198, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 216, 219, 220, 222, 225, 226, 229, 230, 231], "m": [4, 12, 59, 66, 67, 73, 197, 200, 207, 209, 213, 215, 216, 217, 218, 220, 222, 225, 226, 228, 230], "mach": [4, 32, 215, 216, 217, 218, 219, 220, 230], "p": [4, 209, 213, 214, 230], "suite_nam": [4, 6, 97, 99, 104, 230], "specifi": [4, 12, 14, 15, 16, 34, 196, 204, 209, 213, 214, 220, 225, 226, 229, 230], "either": [4, 5, 6, 10, 11, 12, 14, 60, 123, 194, 204, 209, 211, 213, 214, 222, 228, 230], "onli": [4, 5, 6, 12, 14, 15, 41, 120, 194, 196, 198, 200, 201, 204, 206, 208, 212, 213, 214, 216, 219, 220, 222, 224, 225, 226, 228, 230], "time": [4, 5, 6, 12, 15, 16, 32, 41, 108, 123, 130, 138, 148, 167, 177, 196, 197, 198, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 220, 230, 232], "wai": [4, 5, 11, 12, 32, 62, 67, 120, 123, 204, 206, 207, 208, 209, 210, 212, 213, 219, 222, 228], "altern": [4, 11, 230], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 98, 99, 143, 153, 201, 202, 204, 205, 206, 207, 208, 209, 213, 214, 219, 225, 226, 228, 229, 230], "case_numb": 4, "multipl": [4, 5, 12, 15, 195, 205, 208, 209, 213, 219, 225, 230], "separ": [4, 5, 7, 12, 14, 15, 204, 205, 211, 213, 226, 230], "space": [4, 5, 7, 11, 204, 209, 213, 216, 219, 230], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 85, 125, 138, 177, 194, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 219, 222, 223, 229, 230, 231], "few": [4, 11, 12, 19, 29, 32, 39, 81, 82, 120, 125, 197, 200, 204, 208, 213, 214, 219], "basic": [4, 5, 214, 216, 219, 230], "piec": [4, 201, 213], "inform": [4, 5, 6, 32, 85, 106, 115, 204, 206, 209, 214, 216, 223, 230], "abl": [4, 116, 117, 118, 119, 121, 123, 204, 205, 207, 209, 213, 219, 230], "place": [4, 12, 15, 107, 204, 206, 213, 219], "download": [4, 6, 8, 32, 34, 40, 143, 153, 206, 208, 209, 214, 230, 232], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 196, 197, 202, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 230, 231, 232], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 91, 100, 102, 103, 107, 108, 109, 115, 120, 170, 186, 192, 193, 204, 209, 212, 214, 215, 216, 217, 218, 219, 230, 231, 232], "locat": [4, 12, 15, 16, 41, 98, 99, 104, 194, 204, 209, 211, 213, 214, 216, 219, 222, 225, 226, 230], "where": [4, 5, 12, 15, 32, 34, 41, 51, 84, 98, 99, 104, 107, 123, 186, 189, 192, 193, 194, 201, 203, 204, 206, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 228, 229, 230, 232], "There": [4, 11, 186, 192, 193, 200, 202, 204, 208, 209, 210, 213, 214, 230], "r": [4, 220, 226], "tell": [4, 209], "re": [4, 204, 208, 209, 211, 213, 214, 219, 220, 226], "leav": [4, 16, 198, 206, 214, 226], "unknown": [4, 120, 208, 219], "component_path": [4, 98, 99, 104, 194, 201, 214, 230], "absolut": [4, 7, 32, 34, 50, 98, 99, 104, 194, 201, 204, 209, 230], "landic": [4, 8, 10, 17, 34, 57, 104, 201, 203, 204, 206, 207, 209, 211, 212, 213, 214, 230, 231, 232], "e3sm_submodul": [4, 194, 201, 209, 213], "mali": [4, 120, 201, 204, 209, 211, 213, 214, 230, 231], "dev": [4, 5, 201, 203, 204, 207, 208, 209, 212, 223, 230], "albani": [4, 116, 118, 119, 120, 201, 214, 215, 216, 217, 220, 230], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 143, 153, 198, 206, 209, 211, 213, 214, 219, 220, 222, 226, 230, 231], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 54, 96, 97, 98, 99, 104, 106, 107, 108, 111, 123, 125, 126, 138, 139, 140, 147, 159, 162, 166, 167, 177, 204, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 228, 229, 230], "omega": [4, 25, 109, 125, 128, 194, 201, 208, 209, 211, 213, 223, 230], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 64, 66, 69, 80, 81, 82, 83, 84, 98, 99, 104, 106, 107, 109, 110, 111, 112, 114, 115, 120, 125, 128, 140, 147, 160, 167, 184, 186, 187, 188, 192, 193, 194, 197, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 222, 230, 231], "point": [4, 47, 53, 88, 194, 196, 201, 206, 207, 208, 209, 213, 214, 219, 230], "much": [4, 12, 204, 213], "config_fil": [4, 98, 99, 104], "work_dir": [4, 9, 15, 32, 41, 84, 98, 99, 104, 105, 106, 204, 206, 213], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 64, 69, 71, 98, 99, 104, 120, 127, 129, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 200, 201, 203, 204, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 231], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 72, 96, 101, 104, 106, 123, 170, 172, 194, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 226, 229, 230], "recommend": [4, 5, 9, 16, 204, 205, 208, 209, 213, 219], "itself": [4, 5, 7, 32, 201, 203, 204, 206, 207, 209, 213, 230], "temp": 4, "scratch": [4, 209, 213, 216, 220, 230], "avoid": [4, 204, 213], "confus": [4, 12, 208, 209, 213], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 74, 75, 82, 85, 97, 106, 123, 125, 130, 143, 153, 162, 170, 185, 197, 200, 206, 211, 214, 220, 230, 232], "compar": [4, 8, 15, 41, 98, 99, 104, 105, 106, 133, 135, 137, 145, 150, 155, 176, 179, 198, 200, 205, 208, 209, 211, 213, 224, 225, 230, 232], "previou": [4, 15, 204, 209, 213, 224, 230, 232], "same": [4, 5, 7, 12, 15, 33, 34, 41, 105, 106, 123, 200, 202, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 228, 230, 231, 232], "baseline_dir": [4, 41, 98, 99, 104], "mani": [4, 6, 7, 123, 202, 204, 206, 208, 209, 211, 212, 213, 225, 229], "valid": [4, 5, 6, 8, 41, 186, 187, 188, 189, 190, 191, 192, 193, 197, 200, 208, 209, 212, 222, 225], "sure": [4, 10, 14, 15, 106, 120, 134, 144, 154, 194, 197, 204, 208, 209, 211, 213, 214, 219, 220, 225, 226], "timer": [4, 41, 44, 105, 205, 206, 208], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 83, 91, 106, 116, 118, 119, 125, 138, 177, 194, 197, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 222, 225, 228, 230], "both": [4, 5, 6, 11, 12, 15, 24, 106, 123, 140, 147, 197, 203, 204, 207, 209, 212, 213, 214, 224, 228], "custom": [4, 6, 11, 14, 50, 51, 98, 99, 104, 194, 201, 209, 214, 220, 230], "order": [4, 6, 11, 12, 123, 198, 201, 204, 205, 209, 213, 226, 228, 230], "give": [4, 12, 15, 204, 208, 209, 213, 214, 230], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 120, 123, 125, 186, 192, 193, 194, 197, 201, 204, 206, 208, 209, 211, 213, 214, 219, 220, 222, 225, 226, 228, 230, 232], "after": [4, 5, 12, 14, 16, 32, 34, 35, 72, 91, 120, 187, 188, 194, 201, 204, 206, 209, 213, 214, 216, 220, 230], "c": [4, 99, 120, 204, 209, 215, 216, 217, 218, 219, 220, 224, 230, 232], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 81, 82, 92, 107, 197, 204, 206, 208, 209, 213, 229, 232], "resid": [4, 34], "test_suit": [4, 204], "build": [4, 8, 11, 12, 62, 67, 116, 117, 118, 119, 120, 121, 194, 198, 201, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220], "mpas_model": [4, 214], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 62, 65, 66, 67, 123, 143, 153, 173, 204, 206, 208, 213, 214, 220, 230], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 107, 120, 123, 194, 196, 204, 205, 206, 207, 209, 210, 211, 213, 214, 220, 226, 228, 229, 230, 231], "baselin": [4, 6, 8, 15, 41, 98, 99, 104, 105, 106, 133, 135, 137, 145, 150, 155, 161, 176, 179, 197, 200, 205, 208, 211, 213, 224, 230], "comparison": [4, 15, 41, 105, 106, 206, 213, 214], "against": [4, 6, 8, 15, 106, 161, 197, 200, 204, 213, 224], "oppos": [4, 24, 126, 139, 140, 147, 159, 162, 166, 167, 213], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 36, 38, 39, 80, 81, 82, 85, 123, 125, 127, 129, 138, 177, 197, 204, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220], "parallel": [4, 14, 19, 29, 32, 38, 39, 125, 204, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 230, 231], "been": [4, 12, 15, 32, 41, 43, 91, 98, 99, 104, 116, 118, 119, 123, 162, 194, 201, 204, 206, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 230], "skip_step": 4, "wherea": [4, 10, 204, 213, 224, 231], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 97, 123, 201, 202, 204, 207, 209, 211, 213, 214, 219, 222, 228, 230, 231], "clone": [4, 194, 202, 209, 213, 230], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 120, 138, 177, 197, 204, 205, 208, 209, 210, 213, 222, 225, 228, 232], "just": [4, 12, 19, 29, 32, 39, 54, 120, 125, 204, 208, 209, 211, 213, 216, 220], "pickl": [4, 6, 204, 213, 230], "latter": [4, 41, 120], "conveni": [4, 14, 186, 192, 193, 204, 211, 213, 214, 230], "tab": [4, 230], "complet": [4, 6, 21, 22, 23, 213, 230], "explicitli": [4, 5, 15, 123, 197, 204, 209, 213, 214, 230], "select": [4, 6, 108, 204, 209, 213], "two": [4, 8, 144, 197, 198, 200, 201, 204, 205, 207, 208, 209, 213, 225, 226, 231], "edit": [4, 5, 106, 209, 213, 230], "steps_to_run": [4, 15, 41, 97, 106, 204, 206, 213, 214], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 58, 65, 71, 84, 85, 98, 99, 105, 106, 125, 138, 141, 146, 151, 156, 162, 165, 168, 170, 172, 177, 180, 182, 204, 206, 213, 214, 230], "initial_st": [4, 5, 16, 132, 196, 198, 204, 206, 208, 214, 225, 226], "full_run": [4, 145, 225], "restart_run": [4, 145, 225], "Or": [4, 204, 214], "accomplish": [4, 204, 208], "thing": [4, 116, 117, 118, 119, 120, 121, 123, 204, 208, 212], "skip": [4, 6, 15, 106, 206, 232], "take": [4, 5, 9, 11, 12, 15, 50, 204, 205, 207, 209, 213, 226, 232], "preced": [4, 50], "over": [4, 7, 12, 50, 107, 204, 208, 212, 213, 222, 225, 228, 230], "special": [4, 211, 229], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 125, 204, 219], "polaris_cach": [4, 6, 17, 204], "symlink": [4, 6, 12, 32, 34, 206, 208, 209], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 75, 143, 153, 197, 200, 213, 228], "structur": [4, 11, 25, 128, 203, 206, 212, 213], "without": [4, 15, 34, 204, 208, 209, 213, 214, 218, 219, 229, 230], "redund": [4, 186, 192, 193, 197, 213], "stamp": 4, "revis": [4, 213, 214], "remov": [4, 12, 15, 97, 197, 209, 213], "older": 4, "ones": [4, 186, 192, 193, 208, 213], "version": [4, 13, 27, 50, 84, 105, 106, 194, 197, 201, 202, 204, 207, 208, 209, 212, 213, 214, 219, 220, 223, 225, 226, 230], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 36, 41, 45, 49, 50, 54, 58, 59, 62, 65, 66, 67, 71, 77, 80, 82, 84, 85, 86, 87, 88, 89, 93, 94, 95, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 128, 131, 134, 138, 141, 144, 146, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 174, 177, 180, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 197, 198, 200, 201, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 225, 226, 229, 230], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 101, 119, 127, 138, 177, 194, 197, 204, 210, 212, 213, 230], "cached_fil": [4, 17, 204], "json": [4, 6, 17, 48, 204, 220], "anvil": [4, 120, 204, 214, 219, 230], "chrysali": [4, 120, 204, 213, 214, 219, 230], "sinc": [4, 12, 15, 115, 123, 197, 204, 206, 208, 209, 213, 225, 226, 229], "copi": [4, 6, 34, 48, 98, 99, 104, 213, 216, 230], "onto": [4, 209], "lcrc": [4, 6, 9, 48, 204, 208, 214, 215, 217, 219, 230], "server": [4, 6, 34, 48, 204, 208, 214, 220], "whose": [4, 204], "global_ocean": [4, 7, 9, 12, 201, 204, 206, 208, 209, 214, 230, 232], "qu240": [4, 12, 204, 208, 209, 214, 230, 232], "mesh": [4, 5, 8, 14, 19, 32, 75, 87, 94, 108, 123, 125, 126, 127, 129, 136, 139, 141, 159, 162, 163, 165, 166, 168, 170, 172, 175, 178, 180, 186, 192, 193, 196, 197, 200, 202, 204, 206, 207, 208, 209, 211, 212, 214, 222, 224, 230, 232], "phc": [4, 204, 222, 232], "init": [4, 12, 16, 29, 39, 194, 201, 204, 206, 208, 209, 213, 214, 230, 232], "ocean_cached_fil": 4, "pr": [4, 230, 232], "look": [4, 5, 9, 15, 207, 208, 213, 214], "someth": [4, 5, 86, 90, 93, 209, 213], "culled_mesh": [4, 204, 213], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 85, 204, 206, 208, 213], "210803": 4, "culled_graph": [4, 204, 213], "info": [4, 10, 12, 19, 26, 75, 125, 204, 213], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 204], "date_str": [4, 48], "let": [4, 204, 209, 211, 213, 214, 220], "string": [4, 7, 12, 34, 89, 95], "choos": [4, 204, 208, 209, 213, 215, 216, 217, 218, 220, 231], "todai": [4, 48], "dry_run": [4, 48], "saniti": [4, 213], "check": [4, 15, 106, 209, 211, 213, 214, 216, 220, 230, 232], "print": [4, 10, 15, 54, 106, 111, 204, 208, 232], "stdout": [4, 10, 32, 41, 204], "translat": [4, 25, 123, 128], "compass": [4, 85, 194, 204, 208, 211, 213], "convert": [4, 7, 11, 12, 123, 204, 213], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 98, 99, 104, 114, 115, 125, 128, 129, 140, 143, 147, 153, 194, 197, 198, 201, 204, 206, 207, 208, 212, 213, 214, 228], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 109, 114, 115, 129, 140, 143, 147, 153, 194, 196, 197, 200, 201, 204, 206, 207, 208, 214, 229], "yaml": [4, 8, 19, 20, 23, 24, 25, 125, 128, 129, 140, 147, 197, 200, 204, 212, 213, 216, 220], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 109, 120, 123, 128, 194, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 220, 222, 225, 226, 228, 229, 230, 231, 232], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 109, 120, 123, 128, 194, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 222, 225, 226, 228, 229, 230, 232], "forward": [4, 5, 12, 15, 32, 130, 136, 137, 146, 148, 150, 175, 176, 178, 179, 194, 201, 204, 206, 208, 214, 225, 226, 229], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 196, 204, 206, 208, 209, 213, 216, 218, 220, 230], "don": [4, 5, 12, 123, 204, 206, 208, 209, 213, 218, 230, 231], "format": [4, 5, 9, 11, 12, 109, 115, 204, 205, 206, 207, 209, 213, 214, 216], "note": [4, 5, 14, 15, 177, 213, 220], "keyword": [4, 5, 12, 15, 16, 198, 204, 206, 226], "top": [4, 16, 186, 187, 188, 189, 190, 191, 192, 193, 196, 202, 213, 222], "ignor": [4, 89, 95], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 60, 80, 91, 96, 120, 123, 125, 203, 204, 206, 207, 208, 209, 211, 214, 222, 230], "pars": [4, 7, 12, 20, 21, 22, 23, 77, 100, 102], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 106, 107, 108, 111, 128, 148, 197, 201, 204, 206, 207, 208, 212, 213, 214, 222, 225, 226, 228], "doesn": [4, 7, 115, 204, 206, 213, 214, 219, 230], "matter": [4, 213], "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 107, 108, 204, 206, 213], "myst": [5, 213], "tip": [5, 209], "easi": [5, 34, 208, 213], "start": [5, 6, 12, 101, 196, 197, 205, 207, 208, 212, 216, 219, 220, 223], "exist": [5, 7, 25, 32, 35, 53, 100, 102, 104, 128, 197, 204, 208, 209, 210, 213, 219, 232], "tree": [5, 100, 102, 115], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 131, 132, 134, 136, 138, 144, 148, 151, 154, 156, 158, 159, 174, 175, 178, 182, 194, 197, 198, 200, 201, 202, 203, 204, 206, 211, 212, 214, 215, 217, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232], "pull": [5, 208, 209, 213, 214], "request": [5, 12, 19, 26, 28, 125, 187, 188, 204, 208, 209, 210, 213, 214, 226], "guid": [5, 123, 197, 200, 205, 208, 213, 216, 219, 223], "baroclinic_channel": [5, 12, 15, 194, 199, 201, 204, 206, 207, 208, 211, 213, 223, 227, 230, 231, 232], "label": [5, 107, 219, 230], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 120, 125, 198, 201, 204, 206, 207, 208, 209, 211, 213, 218, 219, 224, 230, 231], "baroclin": [5, 45, 131, 132, 134, 136, 138, 141, 144, 148, 151, 154, 156, 177, 182, 197, 204, 206, 207, 213, 225], "channel": [5, 45, 131, 132, 134, 136, 138, 141, 144, 148, 151, 154, 156, 177, 182, 197, 204, 206, 210, 213, 225], "And": [5, 12, 209, 213], "becom": [5, 204, 206, 213], "who": [5, 209, 213, 214, 220], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 65, 89, 95, 98, 99, 104, 120, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 219, 222, 225, 226, 228, 231, 232], "brief": [5, 213], "overview": [5, 212, 216, 220], "comment": [5, 205, 214], "appli": [5, 11, 12, 54, 196, 207, 213, 225, 228, 229], "vertic": [5, 16, 196, 197, 200, 204, 214, 221, 223], "grid": [5, 11, 14, 59, 66, 70, 73, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 123, 170, 184, 185, 186, 187, 188, 189, 192, 193, 197, 198, 200, 204, 213, 214], "initi": [5, 6, 32, 130, 133, 136, 141, 158, 168, 175, 178, 180, 197, 198, 200, 204, 206, 207, 208, 210, 211, 212, 214, 222, 224, 231], "condit": [5, 32, 133, 136, 141, 158, 168, 175, 178, 180, 197, 198, 200, 204, 205, 206, 207, 208, 211, 212, 214, 224, 231], "forc": [5, 15, 200, 213, 231], "common": [5, 7, 10, 38, 41, 45, 197, 198, 200, 204, 205, 206, 207, 208, 210, 211, 213, 214, 219, 220, 230, 231, 232], "refer": [5, 12, 32, 130, 148, 186, 189, 192, 193, 204, 206, 208, 209, 211, 212, 213, 222, 225, 230], "awar": [5, 120, 201, 213, 219], "wish": [5, 12, 204, 209, 213, 230, 232], "test_group_nam": 5, "specif": [5, 7, 12, 43, 120, 194, 201, 202, 207, 212, 213, 214, 216, 219, 225, 229, 230, 232], "share": [5, 16, 123, 132, 194, 197, 200, 201, 202, 204, 206, 207, 209, 212, 215, 216, 217, 218, 219, 220, 221, 225, 229, 230], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 59, 66, 120, 123, 132, 143, 153, 204, 206, 207, 208, 212, 213, 226, 231], "public": [5, 9, 204, 213, 214], "api": [5, 10, 212, 213], "underscor": [5, 213], "md": [5, 213], "eval": 5, "rst": [5, 12, 213], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 132, 134, 136, 144, 148, 154, 197, 201, 206, 213], "baroclinicchanneltestcas": [5, 197], "compute_cell_count": [5, 123, 197, 213], "dynamic_model_config": [5, 197, 213], "initialst": [5, 197, 200, 204, 206, 213], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 123, 126, 139, 140, 147, 166, 167, 197, 200, 206, 208, 209, 211, 212, 213, 214, 226, 230, 231], "across": [5, 12, 16, 197, 204, 205, 206, 207, 208, 209, 211, 213, 221, 225, 226], "ot": [5, 213], "automat": [5, 7, 10, 12, 16, 123, 204, 206, 208, 209, 213, 214, 215, 217, 218, 219, 220, 230], "python": [5, 6, 7, 20, 38, 43, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 219, 220, 230], "begin": [5, 15, 197, 204, 209, 212, 213, 219, 225, 226, 228], "numpydoc": [5, 213], "text": [5, 6, 225, 226, 228], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 123, 186, 188, 189, 190, 191, 192, 193, 194, 206, 213, 214, 216, 220], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 70, 120, 123, 125, 126, 130, 139, 163, 166, 189, 190, 191, 197, 198, 200, 204, 209, 216, 217, 219, 220, 225, 230], "pressur": [5, 194, 214], "overli": [5, 213], "ic": [5, 123, 194, 208, 209, 212, 213, 214, 216, 222, 231], "shelf": [5, 123, 207, 208, 213, 214, 222], "draft": [5, 222], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 57, 58, 60, 61, 62, 65, 70, 71, 73, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 123, 125, 126, 128, 130, 132, 134, 136, 138, 139, 140, 141, 144, 146, 147, 148, 151, 154, 156, 159, 162, 163, 165, 166, 167, 168, 170, 172, 177, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 206, 207, 225, 226, 228], "xarrai": [5, 14, 16, 108, 186, 187, 188, 189, 190, 191, 192, 193, 204, 213], "dataarrai": [5, 187, 188, 189, 190, 191, 204], "sea": [5, 123, 188, 189, 190, 191, 194, 213, 214, 222], "surfac": [5, 123, 188, 189, 190, 191, 194, 196, 200, 213, 214, 222, 225, 228], "height": [5, 123, 188, 189, 190, 191, 194, 213, 214, 222], "mask": [5, 186, 189, 192, 193, 204, 213, 214, 222], "landicepressur": [5, 206], "deviat": 5, "float": [5, 7, 12, 20, 58, 60, 61, 65, 70, 90, 106, 108, 132, 134, 136, 138, 141, 144, 148, 151, 154, 163, 177, 178, 180, 204, 206, 213], "densiti": [5, 11, 123, 213], "seawat": 5, "displac": 5, "land": [5, 123, 194, 212, 213, 214, 222, 231], "landicedraft": 5, "equal": [5, 200, 204, 208, 228], "entri": [5, 47, 78, 98, 99], "alwai": [5, 7, 10, 15, 50, 123, 194, 201, 204, 208, 209, 213, 214], "own": [5, 6, 9, 10, 16, 32, 204, 206, 208, 209, 211, 213, 214, 226, 230, 231], "line": [5, 8, 30, 32, 81, 82, 92, 204, 205, 208, 209, 212, 230], "type": [5, 12, 14, 16, 20, 87, 94, 115, 175, 178, 180, 204, 206, 207, 208, 209, 210, 211, 213, 214, 225, 226, 228, 229, 232], "side": 5, "colon": 5, "doubl": [5, 123, 204, 205, 213], "back": [5, 213, 216, 230], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 61, 83, 194, 208, 209, 210, 213, 214, 230], "arg": [5, 10, 32, 81, 82, 204], "indic": [5, 6, 12, 14, 15, 32, 33, 99, 106, 108, 189, 202, 204, 210, 213, 214, 222, 228], "On": [5, 11, 209, 219], "next": [5, 207, 213, 222, 230], "indent": [5, 204], "obviou": [5, 12, 213], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 54, 56, 58, 65, 71, 75, 84, 85, 86, 89, 90, 93, 95, 97, 99, 100, 104, 105, 106, 107, 108, 110, 114, 125, 126, 138, 139, 166, 177, 204, 213, 222, 225, 226, 228, 229], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 77, 100, 110, 111, 128, 140, 147, 206, 208, 213, 214, 230], "els": [5, 6, 204, 213], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 106, 107, 108, 111, 116, 117, 118, 119, 121, 123, 125, 178, 196, 204, 206, 207, 209, 213, 214, 215, 216, 217, 218, 219, 220, 225, 230, 231], "further": [5, 206, 207, 220, 229], "necessari": [5, 11, 201, 213], "rais": [5, 7, 15, 32, 35, 51, 53, 106, 123, 204, 206, 207, 208, 213], "list_cas": 6, "list_machin": [6, 208], "list_suit": 6, "anywher": [6, 10, 209], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 77, 100, 105, 106, 109, 110, 114, 115, 201, 206, 207, 208, 213], "later": [6, 15, 19, 29, 32, 39, 50, 106, 125, 204, 213, 214], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 76, 77, 109, 123, 196, 204, 206, 213], "properti": [6, 12, 196, 204, 219, 226], "clean_cas": 6, "delet": [6, 208, 209, 210, 230], "constant": [6, 58, 65, 66, 123, 196, 213, 225, 226, 228, 229], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 109, 185, 204, 206, 209, 213], "out": [6, 11, 79, 83, 108, 202, 204, 208, 209, 214, 222, 230], "proven": [6, 8, 50, 212, 214], "save": [6, 16, 51, 73, 197, 204, 206, 207, 213, 219, 224, 225], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 36, 41, 45, 50, 77, 80, 84, 99, 100, 106, 109, 110, 111, 128, 198, 204, 206, 207, 208, 213, 226], "target": [6, 9, 14, 19, 34, 53, 85, 120, 123, 125, 197, 204, 206, 213, 226], "minimum": [6, 108, 123, 125, 197, 204, 213, 214, 222, 225, 226, 228, 229], "determin": [6, 11, 12, 16, 34, 38, 41, 115, 123, 129, 197, 198, 204, 207, 213, 222, 225, 226, 229, 230], "maximum": [6, 15, 106, 108, 213, 214, 222], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 81, 82, 85, 123, 125, 138, 177, 204, 206, 213], "cpus_per_task": [6, 12, 32, 36, 39, 81, 82, 204], "attribut": [6, 10, 11, 12, 15, 38, 89, 95, 207, 213], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 213, 222, 225, 226, 228, 229], "runtim": [6, 24, 38, 123, 126, 139, 140, 147, 166, 167, 204, 206, 213], "min_task": [6, 12, 14, 19, 29, 32, 39, 81, 82, 85, 123, 125, 138, 177, 204, 206, 213], "min_cpus_per_task": [6, 12, 32, 39, 81, 82, 204], "fewest": 6, "least": [6, 11, 15, 201, 209], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 106, 125, 138, 177, 204, 212, 213, 214, 226], "run_test": [6, 204, 206], "run_single_step": 6, "oper": [6, 40, 143, 153, 204, 206, 232], "log": [6, 8, 15, 16, 32, 41, 82, 106, 107, 108, 204, 206, 209, 212, 230], "figur": [6, 200, 202, 204, 207, 214], "cpu": [6, 12, 120, 204, 213, 230], "per": [6, 12, 19, 29, 31, 32, 39, 81, 82, 123, 125, 204, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 229], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 57, 58, 62, 65, 66, 67, 71, 72, 85, 91, 109, 123, 124, 125, 126, 128, 131, 132, 134, 136, 138, 139, 140, 141, 144, 146, 147, 148, 151, 154, 156, 158, 159, 162, 165, 166, 167, 168, 170, 172, 173, 174, 175, 177, 178, 180, 182, 197, 198, 201, 204, 206, 208, 213, 226, 229], "wa": [6, 15, 51, 105, 106, 120, 133, 135, 137, 145, 150, 155, 176, 179, 204, 206, 208, 209, 210, 213, 214, 222, 230], "retriev": [6, 210], "store": [6, 15, 43, 123, 204, 206, 213, 230], "dure": [6, 9, 12, 24, 32, 41, 123, 126, 139, 140, 147, 166, 167, 204, 206, 208, 209, 213, 214, 230, 231, 232], "txt": [6, 104, 205, 210], "case_output": [6, 10], "individu": [6, 7, 16, 106, 206, 208, 213, 219, 220, 225, 230, 231], "involv": [6, 12, 15, 106, 204, 206, 211, 213], "implement": [6, 7, 197, 198, 200, 208, 225, 226], "termin": [6, 15, 204, 209, 213], "window": 6, "update_cach": 6, "_cached_fil": [6, 204], "map": [6, 14, 17, 25, 65, 66, 85, 107, 108, 128, 170, 172, 198, 209, 214], "origin": [6, 48, 209, 213, 230], "enabl": [6, 16, 204, 210, 214, 220], "consum": [6, 204, 206, 213, 232], "faster": [6, 209], "debug": [6, 116, 117, 118, 119, 121, 213, 215, 216, 217, 218, 220], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 197, 200, 203, 204, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 228, 229, 230, 232], "mpas_tool": [7, 10, 11, 70, 197, 200, 204, 213], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 80, 83, 84, 107, 184, 186, 187, 188, 192, 193, 213], "certain": [7, 15, 50, 204, 209, 214, 229], "add_from_packag": [7, 208, 213], "content": [7, 12, 100, 102, 115, 202, 204, 208, 213, 230], "found": [7, 12, 110, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 73, 123, 201, 204, 206, 207, 208, 213, 214], "cfg": [7, 43, 201, 206, 207, 208, 213, 214, 230], "except": [7, 15, 32, 35, 51, 106, 204, 208, 213], "first": [7, 12, 98, 99, 197, 200, 204, 206, 207, 208, 209, 210, 213, 215, 216, 217, 218, 219, 220, 225, 226, 228, 230], "second": [7, 11, 12, 138, 177, 200, 204, 208, 225, 228], "know": [7, 9, 11, 123, 204, 208, 209, 213], "behavior": [7, 12, 97, 204, 205, 206, 209, 213], "noth": [7, 210, 226], "being": [7, 24, 32, 41, 96, 99, 106, 126, 139, 140, 147, 166, 167, 204, 206, 207, 208, 209, 213, 222], "test_group": [7, 17, 18, 32, 41, 132, 134, 136, 144, 148, 154, 159, 175, 178, 204, 206, 207, 213], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 54, 56, 96, 97, 99, 104, 106, 108, 123, 125, 180, 182, 196, 204, 206, 207, 213, 214, 216, 218, 220, 225], "happen": [7, 10, 12, 14, 106, 204, 206, 213, 226], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 57, 58, 65, 71, 85, 109, 123, 124, 125, 131, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 173, 174, 175, 177, 178, 180, 182, 194, 197, 198, 200, 201, 204, 206, 207, 213], "larg": [7, 15, 204, 206, 213, 215], "those": [7, 12, 15, 41, 105, 106, 120, 206, 207, 208, 209, 212, 213, 226, 229, 232], "configpars": [7, 81, 82, 207], "getinteg": 7, "getfloat": [7, 10, 12, 14, 204, 213], "getboolean": [7, 204, 213], "getlist": [7, 213], "comma": [7, 226], "integ": [7, 11], "boolean": [7, 108, 189], "etc": [7, 12, 101, 104, 201, 204, 206, 225], "getexpress": 7, "tupl": 7, "rang": [7, 108, 213, 226], "numpi": [7, 11, 59, 66, 67, 73, 107, 123, 130, 184, 185, 204, 213], "linspac": [7, 16, 198, 226], "arang": 7, "arrai": [7, 59, 66, 67, 73, 107, 123, 184, 185, 187, 188, 189, 190, 213], "One": [7, 11, 213, 230, 232], "advantag": [7, 12, 120, 208, 213, 219], "track": [7, 19, 204, 206, 209], "associ": [7, 11, 12, 16, 186, 192, 193, 197, 206, 207, 209, 211], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 58, 65, 71, 85, 125, 131, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 174, 175, 177, 178, 180, 182, 201, 204, 206, 207, 208, 213, 232], "command": [8, 13, 30, 32, 38, 81, 82, 84, 92, 204, 208, 209, 211, 212, 213, 216, 219, 220, 230], "while": [8, 14, 16, 196, 197, 204, 207, 210, 211, 213], "meant": [8, 208, 214], "simplifi": 8, "verifi": [8, 205, 214], "io": [8, 204, 206, 208, 212, 213, 214, 223], "remap": [8, 16, 170, 198, 212, 226, 229], "visual": [8, 11, 14, 162, 198, 204, 206, 207, 211, 212, 226, 229], "lot": [9, 123, 204, 208, 213], "o": [9, 10, 100, 102, 115, 208, 209, 213, 214, 230], "relat": [9, 11, 12, 123, 194, 197, 200, 204, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 228, 229, 230], "handl": [9, 10, 206, 209, 213, 219], "intern": [9, 19, 41, 204, 209, 210], "lower": [9, 206, 213, 225], "directli": [9, 11, 12, 14, 32, 202, 204, 208, 211, 212, 213, 216], "aren": [9, 32, 33, 204, 208, 209, 213, 232], "readm": [9, 206], "importlib": [9, 206], "resourc": [9, 12, 29, 36, 39, 52, 80, 81, 82, 126, 138, 139, 166, 177, 197, 204, 206, 213], "import": [9, 10, 11, 12, 14, 16, 201, 204, 206, 207, 208, 209, 211, 213], "files_for_e3sm": [9, 206, 214], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 58, 65, 71, 75, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 125, 130, 132, 138, 146, 163, 165, 168, 170, 172, 177, 185, 204, 206, 207, 213], "did": [9, 15, 106, 213], "add_input_fil": [9, 14, 33, 204, 206, 213], "collect": [9, 45, 88, 124, 201, 203, 211, 213], "though": [9, 32, 206, 208, 213], "whenev": [9, 204, 213], "flexibl": [9, 198, 206, 209, 213], "care": [9, 11, 204, 207, 209, 213], "No": [9, 212], "step_dir": 9, "database_root": [9, 204, 214, 215, 216, 217, 218, 219, 220, 230], "download_path": 9, "join": [9, 213], "bathymetry_databas": [9, 204, 214], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 189, 204, 207, 213, 222, 225, 226, 228, 229, 231], "url": [9, 34, 51, 204, 210, 214], "web": [9, 204, 214], "anl": [9, 204, 214], "gov": [9, 204, 210, 214, 216, 220], "mpas_standalonedata": [9, 214, 219], "dest_path": [9, 51], "remot": [9, 34, 209], "bathymetri": [9, 204, 214], "strategi": 10, "stderr": [10, 32, 41, 204], "loggingcontext": 10, "check_cal": [10, 204], "most": [10, 38, 120, 194, 201, 204, 207, 208, 209, 211, 213, 214, 219, 220, 222, 223, 231], "won": [10, 208, 213, 214], "logger": [10, 32, 41, 57, 82, 204, 206, 213], "full": [10, 32, 81, 97, 187, 188, 197, 198, 204, 206, 209, 212, 213, 219, 222, 224, 225, 226, 228, 229, 230], "although": 10, "captur": 10, "insid": [10, 204, 208], "good": [10, 32, 204, 209, 213], "idea": [10, 213], "explicit": [10, 208], "go": [10, 204, 206, 207, 208, 209, 213, 220], "even": [10, 11, 12, 15, 34, 50, 120, 204, 208, 209, 213, 214, 219, 230], "subprocess": [10, 32, 81, 82, 96, 204, 208, 210], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 123, 134, 144, 154, 197, 198, 200, 204, 208, 209, 213, 230], "otherwis": [10, 15, 204, 206, 213, 215, 216, 217, 218, 219, 220, 225], "intent": 10, "desir": [10, 11, 12, 15, 16, 106, 123, 198, 204, 205, 213, 214, 230], "trick": [10, 204], "direct": [10, 11, 12, 70, 197, 206, 213, 220, 225], "snippet": [10, 213], "dome": [10, 57, 204, 206, 207, 211, 230, 231], "setup_mesh": [10, 204], "setupmesh": [10, 204, 206], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 57, 120, 201, 207, 208, 209, 211, 213, 214], "mpas_grid": [10, 204], "landice_grid": [10, 204, 213], "l": [10, 106, 213, 220], "sever": [10, 204, 206, 207, 208, 209, 211, 212, 213, 229, 230, 232], "global": [11, 14, 45, 89, 90, 95, 158, 159, 198, 204, 205, 207, 208, 211, 212, 213, 214, 220, 226, 229, 230, 231], "quasiuniformsphericalmeshstep": [11, 198], "icosahedralmeshstep": [11, 198], "jigsaw": [11, 58, 62, 64, 65, 67, 69, 71, 159, 162, 204], "complex": [11, 15, 66, 206, 208, 213], "build_cell_width_lat_lon": [11, 65], "opt": [11, 71], "make_jigsaw_mesh": [11, 65], "icosahedr": [11, 58, 60, 159, 162, 226], "significantli": [11, 222], "smooth": 11, "cell": [11, 12, 16, 58, 59, 60, 61, 65, 66, 67, 70, 73, 87, 94, 123, 125, 126, 139, 163, 166, 186, 187, 188, 189, 192, 193, 197, 204, 206, 207, 222, 225, 226, 228, 229], "quasi": [11, 65, 214, 226, 229], "hand": [11, 90, 208], "restrict": [11, 213, 229], "resolut": [11, 12, 14, 58, 61, 65, 66, 70, 86, 90, 93, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 159, 162, 163, 165, 175, 177, 178, 180, 197, 198, 200, 202, 204, 206, 207, 214, 225, 226, 228, 229, 231], "subdivis": [11, 58, 59, 60, 61, 62], "icosahedron": [11, 59, 60, 61, 62], "tabl": [11, 209, 219, 230], "approxim": [11, 58, 60, 61, 65, 123, 126, 139, 166, 209, 213], "width": [11, 58, 59, 60, 65, 66, 67, 73, 213, 225], "km": [11, 58, 59, 60, 61, 65, 66, 67, 70, 73, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 165, 177, 178, 180, 197, 198, 213, 214, 225, 226, 228, 229, 231], "5": [11, 60, 123, 148, 197, 198, 204, 205, 206, 208, 210, 213, 214, 225, 226, 229, 230], "240": [11, 60, 198, 214, 226], "6": [11, 60, 204, 213, 223, 225, 228, 230], "120": [11, 60, 205, 226], "7": [11, 60, 213, 220, 226, 230], "60": [11, 12, 60, 198, 222, 226], "8": [11, 60, 197, 206, 209, 213, 214, 225, 226, 230], "30": [11, 60, 207, 213, 220, 225, 226, 228, 229], "9": [11, 16, 60, 198, 213, 226, 230], "15": [11, 12, 60, 197, 213, 225, 226, 228, 229, 230], "10": [11, 15, 60, 194, 197, 206, 207, 213, 214, 219, 222, 225, 228, 231], "11": [11, 60, 213, 230], "3": [11, 60, 197, 204, 205, 207, 209, 210, 213, 214, 219, 220, 222, 225, 226, 229, 230], "12": [11, 60, 213, 216], "13": [11, 60, 213, 225], "94": [11, 60], "spherical_mesh": [11, 66], "cell_width": [11, 58, 59, 60, 61, 65, 66, 67, 73], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 58, 65, 204, 213], "plot": [11, 73, 107, 108, 123, 151, 156, 170, 182, 197, 198, 226, 231], "plot_cell_width": 11, "cell_width_filenam": [11, 73], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 59, 65, 66, 67, 73, 86, 88, 90, 93, 107, 170, 198, 214, 226], "lon": [11, 14, 59, 65, 66, 67, 73, 86, 88, 90, 93, 107, 170, 198, 214, 226], "sphere": [11, 198, 226], "vtk_lat_lon": 11, "far": [11, 186, 192, 193, 208, 213], "But": [11, 120, 204, 207, 208, 209, 213, 214, 219], "hexagon": [11, 70, 213], "planar_hex": [11, 70, 197, 200, 204, 213], "make_planar_hex_mesh": [11, 70, 197, 200, 204, 213], "x": [11, 16, 59, 66, 67, 70, 73, 89, 95, 108, 130, 204, 206, 213, 225, 228], "y": [11, 12, 16, 70, 89, 95, 108, 197, 204, 206, 213, 220, 225], "nx": [11, 70, 204, 207, 213], "ny": [11, 70, 204, 207, 213], "dc": [11, 204, 207, 213], "distanc": [11, 70, 213, 225], "adjac": [11, 222], "center": [11, 16, 70, 207, 213, 222, 225], "admittedli": 11, "oddli": 11, "period": [11, 196, 197, 204, 213, 225], "nonperiodic_x": [11, 204, 213], "nonperiodic_i": [11, 204, 213], "consider": [11, 186, 192, 193, 196], "compute_planar_hex_nx_ni": [11, 213], "lx": [11, 70, 213, 225, 228], "ly": [11, 70, 213, 225, 228], "explan": 11, "subtleti": 11, "account": [11, 70, 209, 213, 215, 216, 218, 219, 220, 230], "behav": 11, "stagger": [11, 70], "strictli": [11, 208, 213], "physic": [11, 70, 213], "howev": [11, 204, 205, 206, 209, 213], "np": [11, 16, 198, 213, 226], "sqrt": 11, "domain": [11, 19, 26, 70, 108, 123, 125, 130, 196, 207, 213, 225, 226, 228, 229, 231], "extra": [11, 209], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 207, 213], "max": [11, 123, 204, 213, 226], "int": [11, 12, 19, 20, 29, 32, 39, 54, 58, 59, 60, 61, 62, 70, 81, 82, 85, 108, 125, 126, 138, 139, 159, 162, 163, 165, 166, 177, 204, 213, 228], "ds_mesh": [11, 16, 108, 213], "creation": [11, 204, 214], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 81, 82, 125, 204, 207, 208, 213], "distant": 11, "futur": [11, 38, 204, 208, 211, 212, 213, 214, 228, 230, 231], "descend": [12, 14, 123, 201, 204, 206, 207, 208, 213], "modelstep": [12, 123, 204, 206, 213], "update_pio": [12, 19, 125], "librari": [12, 116, 120, 209, 213, 215, 216, 217, 218, 219, 220, 230], "make_graph": [12, 19, 125], "mpi": [12, 14, 85, 116, 119, 120, 125, 127, 129, 197, 204, 209, 210, 212, 213, 215, 216, 217, 218, 220, 230], "construct": [12, 124, 184, 186, 187, 188, 192, 193, 196, 200, 201, 206, 207, 213, 225], "non": [12, 15, 196, 204, 213, 230], "At": [12, 32, 41, 202, 203, 213], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 82, 125, 138, 154, 177, 197, 204, 205, 211, 213, 214, 216, 220, 225], "openmp_thread": [12, 19, 29, 32, 39, 82, 125, 138, 177, 204, 206, 213], "definit": [12, 213], "prefix": [12, 34, 209, 214], "end": [12, 197, 204, 206, 208, 209, 211, 213, 216, 225, 226, 228], "yml": 12, "reason": [12, 14, 38, 204, 208, 213, 232], "add_namelist_fil": [12, 19, 123, 204, 206], "add_yaml_fil": [12, 19, 204, 206, 213], "add_model_config_opt": [12, 19, 204, 206, 213], "add_streams_fil": [12, 19, 123, 204, 206], "themselv": [12, 208, 212], "question": [12, 204, 214], "constructor": [12, 197, 201, 207, 213], "simpli": [12, 50, 136, 175, 178, 201, 204, 206, 207, 209, 213, 222, 230, 232], "safe": [12, 15, 204, 209, 225], "never": [12, 211], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": [12, 213], "config_run_dur": [12, 206, 213], "0024_00": 12, "00": [12, 15, 206, 213, 220, 230], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 134, 211, 213], "config_block_decomp_file_prefix": [12, 213], "time_integr": [12, 213], "config_time_integr": 12, "rk4": [12, 208, 232], "filename_templ": [12, 213], "restart": [12, 41, 144, 146, 197, 200, 205, 208, 211, 213, 225], "output_interv": [12, 213], "0030_00": 12, "clobber_mod": [12, 213], "truncat": [12, 213], "reference_tim": 12, "0001": [12, 213], "01": [12, 213, 228], "01_00": [12, 213], "tracer": [12, 16, 197, 198, 200, 213, 226, 228], "xtime": [12, 213], "normalveloc": [12, 15, 16, 135, 137, 145, 150, 155, 176, 196, 197, 200, 204, 213, 228], "layerthick": [12, 15, 123, 133, 135, 137, 145, 150, 155, 176, 186, 190, 191, 192, 193, 197, 200, 204, 206, 213], "refzmid": [12, 186, 192, 193, 204, 213], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15, 213], "clariti": [12, 204], "guarante": [12, 194, 209], "uniqu": [12, 206, 213], "global_converg": [12, 194, 199, 213, 223, 224, 227], "cosine_bel": [12, 213, 229], "substitut": 12, "config_write_output_on_startup": [12, 213], "0000_00": [12, 213], "config_use_mom_del2": [12, 213], "config_implicit_bottom_drag_coeff": [12, 213], "0e": [12, 228], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": [12, 213], "config_cvmix_background_viscos": [12, 213], "worri": 12, "sometim": [12, 186, 192, 193, 204, 206, 211, 213], "easier": [12, 204, 208, 209, 214, 230, 232], "togeth": [12, 211, 213, 232], "seem": [12, 213, 216, 220], "overkil": 12, "reli": [12, 204, 213], "differ": [12, 14, 15, 50, 62, 67, 106, 120, 123, 138, 148, 194, 197, 201, 202, 204, 205, 206, 207, 208, 211, 213, 214, 216, 220, 225, 226, 229], "along": [12, 16, 197, 204, 206, 212, 213], "could": [12, 14, 16, 198, 204, 205, 206, 208, 209, 213, 226], "nu": [12, 138, 151, 177, 197, 204, 206, 213], "viscos": [12, 138, 148, 151, 197, 204, 206, 208, 213, 225], "hmix": 12, "config_mom_del2": [12, 197, 204, 213], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 54, 96, 97, 98, 99, 104, 106, 107, 111, 125, 126, 138, 139, 140, 147, 159, 162, 166, 167, 177, 213], "cannot": [12, 15], "known": [12, 32, 33, 198, 204, 213], "beforehand": 12, "particularli": [12, 210, 213, 229], "openmp": [12, 19, 29, 32, 39, 82, 116, 118, 119, 125, 138, 177, 204, 213, 215, 216, 217, 218, 220], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 208, 211, 213, 225, 230], "complic": [12, 207, 208, 209, 213], "xml": [12, 100, 102, 103, 115, 211], "slightli": [12, 15, 209], "sophist": 12, "immutable_stream": [12, 213], "var_struct": 12, "var": [12, 101, 213], "var_arrai": 12, "tag": [12, 212], "taken": [12, 19, 125, 198, 204, 213, 220, 230], "past": 12, "experi": [12, 120, 208, 222], "shown": [12, 202, 206, 228], "featur": [12, 208, 209, 211, 213, 214, 225, 228], "difficult": [12, 120, 219], "synchron": [12, 212], "equival": [12, 209, 213, 215], "try": [12, 53, 208, 209, 210, 213, 214, 216, 220, 230], "template_replac": [12, 22, 23], "treat": [12, 205, 208], "jinja2": [12, 22, 23, 100], "render": [12, 22, 23, 100], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 214], "qu240dynamicadjust": 12, "seri": [12, 123, 151, 156, 182, 198, 213, 224], "dynam": [12, 125, 158, 194, 200, 214, 225, 226, 228, 229], "adjust": [12, 123, 158, 194, 214], "durat": [12, 197, 200, 205, 213], "interv": 12, "spin": 12, "reus": [12, 204, 208, 209, 213, 214, 230], "qualit": [12, 15], "affect": [12, 15, 204, 209, 213], "update_streams_at_runtim": 12, "fairli": [12, 206, 208, 209, 213], "hour": [12, 205, 216, 220, 230], "turn": [12, 32, 49, 204, 210, 213, 228], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 222, 225, 228], "minut": [12, 197, 205, 225, 232], "dai": [12, 148, 197, 198, 200, 206, 213, 225, 226, 228], "03d": 12, "_": [12, 85, 204, 206, 209, 213, 228], "02d": 12, "forgotten": 12, "broken": [12, 204, 208], "immedi": [12, 57, 209, 213], "miss": [12, 15, 204, 213, 214], "detect": [12, 16, 214, 215, 217, 218, 219, 230], "gpmeti": [12, 214], "divid": [12, 222], "partition_graph": [12, 19, 125], "circumst": [12, 15, 32, 33, 204, 213], "wast": 12, "manual": [12, 15, 41, 42, 204, 206, 231], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 36, 39, 80, 81, 82, 120, 125, 204, 205, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 230], "v1": [12, 222], "better": [12, 14, 120, 230], "v2": [12, 214, 222], "littl": [12, 208, 209, 212, 213], "feel": [12, 204, 213], "runtime_setup": [12, 14, 29, 39, 197, 206], "onc": [12, 197, 209, 213, 214, 226, 230], "yourself": [12, 213, 219], "fact": [12, 32], "culler": 12, "cull": [12, 197, 204, 213], "model_step": [12, 204], "make_graph_fil": [12, 204], "field": [12, 15, 73, 75, 108, 170, 186, 192, 193, 196, 197, 200, 213, 225, 226], "weight": [12, 14, 75, 186, 192, 193, 213, 222], "weight_field": [12, 75], "frequent": [14, 194], "observ": [14, 212], "dataset": [14, 108, 186, 192, 193, 204, 213], "region": [14, 16, 212, 214], "pyremap": [14, 91], "interpol": [14, 85, 198, 214], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 204, 209], "mappingfilestep": [14, 16], "woa": 14, "2023": 14, "__init__": [14, 17, 19, 32, 41, 45, 50, 57, 58, 65, 71, 85, 109, 124, 125, 131, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 174, 175, 177, 178, 180, 182, 201, 204, 206, 207, 208, 211, 213], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 222], "bilinear": [14, 85, 198, 226, 229], "filenam": [14, 34, 35, 79, 86, 87, 88, 89, 93, 94, 95, 106, 110, 112, 204, 209, 213], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 214], "destin": [14, 85, 86, 87, 88, 89, 90, 91], "src_from_lon_lat": 14, "lon_var": [14, 86, 88, 93], "lat_var": [14, 86, 88, 93], "dst_from_mpa": 14, "mesh_nam": [14, 86, 87, 88, 89, 90, 93, 94, 95, 163, 165, 168, 170, 172], "qu60": 14, "subclass": [14, 62, 65, 66, 67, 72, 123, 213], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 159, 170, 198], "super": [14, 201, 204, 206, 207, 208, 213], "128": [14, 205, 216, 217, 220], "cosine_bell_viz": [14, 16, 198, 226, 229], "dlon": [14, 90, 198, 226, 229], "dlat": [14, 90, 198, 226, 229], "remap_method": [14, 198, 226, 229], "src_from_mpa": 14, "dst_global_lon_lat": 14, "lon_min": [14, 90], "With": [14, 209], "approach": [14, 204, 207, 208, 209, 210, 213, 222], "perhap": [14, 16, 35, 207], "cover": [14, 213], "nearli": [14, 204, 211, 212, 213], "situat": [14, 25, 128, 213, 230], "workflow": [14, 204, 209], "critic": [15, 213], "compare_vari": [15, 206, 213], "filename1": [15, 106, 206, 213], "filename2": [15, 106, 213], "simpl": [15, 208, 213, 230], "temperatur": [15, 133, 135, 137, 145, 150, 155, 176, 179, 196, 197, 200, 204, 206, 213, 225, 226, 228, 229], "salin": [15, 133, 135, 137, 145, 150, 155, 176, 179, 196, 197, 200, 204, 206, 213, 225, 226, 228, 229], "prognost": [15, 225], "4proc": [15, 135, 213, 225], "8proc": [15, 135, 213, 225], "alter": [15, 187, 188, 204, 206, 212, 213, 222, 225, 226, 228, 229], "skip_if_step_not_run": [15, 106, 206], "possibli": [15, 204, 209, 213], "failur": 15, "valueerror": [15, 206, 207, 208], "quiet": [15, 97, 106, 111], "report": 15, "threshold": [15, 226], "l1": [15, 106], "00000000000000e": 15, "l2": [15, 106], "l_infin": 15, "linf": [15, 106], "home": [15, 209, 213, 214, 216, 219, 220], "xylar": [15, 213, 214, 219], "test_nightly_latest": 15, "10km": [15, 197, 206, 207, 213, 225, 230, 231, 232], "threads_test": [15, 213, 230, 232], "1thread": [15, 155, 197, 225], "2thread": [15, 155, 225], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 204, 206, 213], "disabl": [15, 16, 196, 226, 231], "check_output": [15, 106], "zero": [15, 187, 188, 189, 190, 191, 196, 197, 200, 213, 226, 228], "l1_norm": [15, 106], "l2_norm": [15, 106], "linf_norm": [15, 106], "nonzero": [15, 106], "easiest": [15, 209], "solut": [15, 119, 198, 205, 210, 213], "clobber": 15, "error": [15, 32, 41, 123, 163, 198, 204, 209, 212, 213], "judgment": 15, "enough": [15, 197, 204, 208, 213], "problem": [15, 204, 209, 210, 213], "compare_tim": 15, "integr": [15, 148, 197, 206, 208, 213, 225, 226, 229], "rundir1": [15, 105], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": [16, 213], "often": [16, 32, 204, 205, 206, 207, 208, 209, 211, 213, 214, 231, 232], "analysi": [16, 123, 197, 206, 208, 211, 212, 214, 226, 231], "routin": 16, "viz": [16, 159], "plot_horiz_field": [16, 213], "patch": [16, 108, 213], "style": [16, 123, 212, 213], "edg": [16, 87, 90, 94, 108, 196, 213], "polygon": 16, "character": 16, "accordingli": [16, 83], "d": [16, 108, 186, 192, 193, 196, 204, 213, 228], "final_normalveloc": [16, 213], "t_index": [16, 108, 213], "vmin": [16, 108, 198, 213, 226], "max_veloc": [16, 213], "vmax": [16, 108, 198, 213, 226], "cmap": [16, 108, 213], "cmo": [16, 213], "balanc": [16, 213], "show_patch_edg": [16, 108, 213], "globe": [16, 198, 226], "plot_glob": 16, "plot_land": [16, 107], "contin": [16, 107], "overlain": 16, "usag": [16, 214, 216, 220], "cmocean": [16, 213], "noqa": [16, 57, 162, 165, 168, 213], "f401": [16, 213], "xr": [16, 213], "open_dataset": [16, 204, 213], "tracer1": 16, "isel": 16, "nvertlevel": [16, 108, 186, 192, 193, 204, 213, 222], "out_filenam": [16, 103, 107, 185], "colormap_sect": [16, 107], "titl": [16, 107, 108], "colormap": [16, 107, 108, 198, 213, 226], "cosin": [16, 162, 165, 168, 170, 172, 198, 226, 229], "bell": [16, 162, 165, 168, 170, 172, 198, 226, 229], "converg": [16, 198, 202, 205, 212, 213, 226, 229], "colormap_nam": [16, 107, 198, 226], "viridi": [16, 198, 213, 226], "norm": [16, 106, 107, 198, 226], "norm_typ": [16, 107, 198, 226], "linear": [16, 107, 108, 198, 213, 225, 226], "norm_arg": [16, 107, 198, 226], "colorbar": [16, 107, 108, 198, 226], "tick": [16, 107, 198, 226], "mark": [16, 198, 209, 226], "ll": [16, 198, 208, 213, 220, 226], "colorbar_tick": [16, 107, 198, 226], "matplotlib": [16, 213], "standard": [16, 208, 209, 213, 216, 230], "symlog": [16, 107], "symmetr": 16, "central": [16, 226], "logarithm": [16, 108], "color": [16, 108], "normal": [16, 196, 204, 205, 209, 213, 219], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 204, 230], "dict": [17, 20, 22, 23, 25, 32, 36, 41, 45, 77, 78, 80, 84, 85, 99, 100, 107, 109, 110, 111, 128, 206, 213], "kei": [17, 41, 45, 99, 206], "cach": [17, 19, 32, 34, 98, 99, 125, 212, 214, 219, 224, 230, 232], "testgroup": [18, 32, 41, 207, 208, 213], "max_memori": [19, 29, 32, 39, 125], "mesh_filenam": [19, 75, 125], "graph_filenam": [19, 75, 125], "graph": [19, 26, 28, 38, 75, 125, 197, 204, 213, 214], "make_yaml": 19, "pio": [19, 28, 31, 125, 197], "stride": [19, 31, 125], "consist": [19, 31, 125, 194, 209, 213, 214, 225], "partit": [19, 28, 38, 75, 125, 197, 204, 214, 215, 216, 217, 218, 220, 230], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 81, 82, 85, 123, 125, 138, 177, 204, 207, 208, 212, 213, 214, 231], "accommod": [19, 29, 32, 39, 81, 82, 125], "fewer": [19, 29, 32, 39, 81, 82, 125, 138, 177, 204, 213, 230], "amount": [19, 29, 32, 39, 125, 204, 221, 228], "memori": [19, 29, 32, 39, 125, 204, 214], "mb": [19, 29, 32, 39, 125, 214], "placehold": [19, 29, 32, 39, 125, 204, 230], "at_setup": [24, 123, 126, 139, 140, 147, 166, 167, 213], "overridden": [25, 128, 204, 206, 213], "diverg": [25, 128], "counterpart": [25, 123, 128], "nest": [25, 109, 111, 128], "graph_fil": 26, "parent": [27, 201, 204, 207], "done": [29, 39, 204, 209, 213, 230], "run_as_subprocess": [32, 204], "smallest": [32, 204, 211, 222, 231], "unit": [32, 86, 90, 93, 204, 211, 225, 231], "term": [32, 211, 213], "necessarili": [32, 34, 211], "input_data": 32, "until": [32, 33, 204, 206, 230], "finish": [32, 33, 72, 213], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 84, 109, 204, 205, 206, 210, 213, 214, 230], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 204, 206], "base_work_dir": [32, 41, 204, 206], "log_filenam": [32, 41, 204], "redirect": [32, 204], "extern": [32, 194, 201, 204, 223], "access": [33, 206, 208, 209, 213, 215, 219, 220], "database_compon": [34, 204], "work_dir_target": [34, 204], "come": [34, 204, 209, 213, 215, 216, 217, 218, 219, 220, 223], "root": [34, 163, 194, 198, 201, 204, 208, 209, 211, 214, 215, 216, 217, 218, 219, 220, 222, 230], "suffix": [34, 99, 204], "_database_root": 34, "append": 34, "available_resourc": [36, 80], "constrain": [36, 126, 139, 166, 197, 204, 213], "cores_per_nod": [36, 80, 83, 214, 215, 216, 217, 218, 219, 220, 230], "everi": [37, 173, 197, 204, 206, 208, 210, 211, 213, 225, 228], "child": [37, 173, 201, 204, 206, 208], "serial": [38, 204, 206, 212, 213, 230], "subtask": 39, "stdout_logg": 41, "goe": [41, 204, 213], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 130, 206, 208, 213, 230], "statu": 41, "run_by_default": [42, 204, 206], "assum": [43, 100, 110, 206, 209, 213, 220, 225], "prior": [43, 204, 206], "greenland": [45, 207, 211, 212, 231], "eismint2": 45, "step_path": 48, "variant": [48, 197, 205, 207, 208, 209, 213, 219, 222, 225, 226], "uncach": 48, "datestamp": 48, "yymmdd": [48, 214], "dry": [48, 205], "meta": 50, "empti": [50, 204, 208, 209, 211, 213], "link_nam": 53, "overwrit": 53, "stackoverflow": [53, 213], "55742015": 53, "7728169": [53, 213], "symbol": [53, 204], "fileexistserror": 53, "unless": [53, 97, 209], "isadirectoryerror": 53, "decomposition_test": [57, 207, 230], "decompositiontest": [57, 207], "e501": [57, 162, 165, 168, 213], "turquois": [57, 216], "usr": [57, 216, 230], "climat": [57, 215, 216, 217, 219, 230], "mhoffman": 57, "latitud": [59, 66, 86, 88, 90, 93, 107, 198, 226, 229], "longitud": [59, 66, 67, 73, 86, 88, 90, 93, 107, 198, 226, 229], "ndarrai": [59, 66, 67, 73, 107, 130, 184, 185, 213], "degre": [59, 66, 67, 73, 90, 214, 225], "length": [59, 66, 67, 73], "180": [59, 66, 67, 73, 90, 226], "90": [59, 66, 67, 73, 204, 226], "static": [60, 61], "rule": 60, "thumb": 60, "achiev": [61, 205], "close": [61, 212, 226], "uniform": [65, 70, 165, 197, 198, 207, 213, 214, 225, 226, 228, 229], "natur": 70, "jigsawpi": [71, 204], "jigsaw_jig_t": 71, "meti": 75, "defaults_filenam": 76, "total": [80, 204, 205, 208, 213, 214, 216, 230], "substep": [81, 82], "command_line_arg": 81, "slurm": [83, 204, 212, 214, 215, 216, 217, 218, 220, 230], "cpus_per_nod": 83, "map_filenam": 85, "src_grid_info": 85, "dst_grid_info": 85, "neareststod": [85, 198, 226, 229], "conserv": [85, 198, 226, 229], "map_": 85, "source_typ": 85, "dest_typ": 85, "1d": [86, 90, 93, 107, 123, 184, 185, 186, 187, 188, 189, 190, 192, 193], "2d": [86, 90, 93, 107], "5x0": [86, 90, 93], "5degre": [86, 90, 93], "coordin": [86, 88, 89, 93, 95, 107, 108, 186, 192, 193, 221, 223, 225, 226, 228, 229], "mesh_typ": [87, 94, 204, 206, 207], "vertex": [87, 94], "x_var": [89, 95], "y_var": [89, 95], "proj_attr": [89, 95], "proj_str": [89, 95], "proj": [89, 95], "left": [90, 123, 213, 222, 226], "remapp": [91, 92], "remap_fil": 91, "step_is_subprocess": 96, "is_test_cas": 97, "steps_to_skip": 97, "progress": 97, "cached_step": 98, "copy_execut": [98, 99, 104, 230], "serv": [98, 99, 104, 207, 213], "_all": [98, 99], "streams_filenam": 100, "lxml": [100, 102, 115], "etre": [100, 102, 115], "new_child": 101, "children": 101, "sub": [101, 213], "new_tre": 102, "rundir2": 105, "infin": 106, "toler": 106, "exclud": [106, 230], "data_arrai": 107, "colorbar_label": 107, "subtitl": 107, "field_nam": 108, "out_file_nam": 108, "z_index": 108, "cmap_set_und": 108, "cmap_scal": 108, "horizont": [108, 123, 178, 196, 197, 200, 225, 228], "planar": [108, 123, 196, 213, 228, 229], "depth": [108, 123, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 213, 214, 222, 225, 226, 228, 229], "slice": 108, "fieldnam": 108, "present": [108, 209, 213], "visibl": 108, "ax": 108, "classmethod": 110, "jinja": 110, "namelist_templ": 114, "polarisyaml": [114, 115], "processed_registry_filenam": 115, "registri": [115, 196], "steam": 115, "load_dev_polaris_0": [116, 117, 118, 119, 120, 121, 213], "alpha": [116, 117, 118, 119, 120, 121, 213], "1_anvil_intel_impi": [116, 120], "sh": [116, 117, 118, 119, 120, 121, 209, 210, 213, 215, 216, 217, 218, 220, 230], "openmpi": [116, 120, 209, 212, 215, 217, 218, 230], "mvapich": [116, 120, 215], "impi": [116, 120, 215, 218], "ifort": [116, 118, 120, 213, 215, 217], "ve": [116, 117, 118, 119, 121, 204, 209, 213], "1_anvil_gnu_openmpi": 116, "gfortran": [116, 118, 119, 120, 209, 215, 217], "load": [117, 120, 121, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220], "1_chicoma": 117, "cpu_gnu_mpich": [117, 121], "crai": [117, 120, 121, 216, 220], "1_chrysalis_intel_openmpi": 118, "1_chrysalis_gnu_openmpi": 118, "yet": [119, 123, 204, 208, 213], "again": [119, 194, 204, 209, 210, 230], "soon": [119, 213, 230], "1_compy_intel_impi": 119, "1_compy_gnu_openmpi": 119, "attempt": [120, 212, 219], "particular": [120, 207, 209, 212, 216, 219, 230], "activ": [120, 219, 220, 230], "load_polaris_env": [120, 209, 213, 230], "were": [120, 138, 177, 204, 208, 211, 213, 214, 218, 222], "job": [120, 209, 212, 213, 215, 216, 217, 218, 220], "right": [120, 123, 206, 209, 213, 214, 222, 226, 230], "therefor": [120, 204, 211, 213], "gnu": [120, 209, 218, 219, 230], "lib": 120, "intel": [120, 219], "chicoma": [120, 219, 230], "mpich": [120, 209, 212, 216, 220, 230], "compi": [120, 218, 230], "pm": [120, 220, 230], "compymcnodefac": [120, 219], "perlmutt": [120, 216, 219, 230], "pretti": [120, 204, 208, 213, 214], "forg": [120, 212, 230], "linux": [120, 209, 219], "configure_polaris_env": [120, 209, 210, 213], "conda_path": [120, 209], "osx": [120, 219], "clang": [120, 209], "had": 120, "1_": 120, "1_pm": 121, "ever": [123, 208], "expand": [123, 222], "oceanmodelstep": [123, 213], "decid": [123, 213], "veri": [123, 201, 204, 208, 209, 213, 228], "earli": [123, 223, 230], "stage": [123, 196, 204, 206, 209, 223, 230], "map_yaml_to_namelist": 123, "count": [123, 205], "heurist": 123, "exact": [123, 198, 208], "algorithm": [123, 138, 177, 197, 204, 213], "200": [123, 206, 213, 225, 228], "round": [123, 226], "cell_count": [123, 126, 139, 166, 213], "goal_cells_per_cor": [123, 213, 226, 229], "pinch": 123, "2000": [123, 207, 213], "max_cells_per_cor": [123, 213, 226, 229], "seciton": 123, "control": [123, 198, 204, 214, 225, 226, 228, 230], "scale": [123, 225, 230], "tri": [123, 208], "apport": 123, "precis": [123, 204, 213], "caviti": [123, 208, 213, 214, 222], "frazil": 123, "flux": [123, 196, 228], "grid_1d": 123, "generate_1d_grid": 123, "vertical_grid": [123, 184, 186, 192, 193, 207, 213, 214, 222, 225, 226, 228, 229], "z": [123, 187, 188, 189, 190, 191, 192, 193, 213, 225, 226, 228, 229, 232], "star": [123, 191, 193, 213, 225, 226, 228, 229, 232], "init_vertical_coord": [123, 213], "minlevelcel": [123, 186, 188, 189, 190, 191, 192, 193, 213], "maxlevelcel": [123, 186, 187, 188, 189, 190, 191, 192, 193, 204, 213], "cellmask": [123, 186, 189, 192, 193, 213], "zmid": [123, 186, 192, 193, 213], "restingthick": [123, 186, 191, 192, 193, 204, 213], "bottomdepth": [123, 186, 187, 189, 190, 191, 192, 193, 204, 213], "entir": [123, 213, 225, 232], "petersen": [123, 209, 213, 225], "et": [123, 213, 222, 225, 226], "al": [123, 213, 222, 225, 226], "2015": [123, 213, 225], "int_": 123, "rho": 123, "dv": 123, "sort": [123, 202, 208, 209], "increas": [123, 208], "compute_rp": [123, 213], "csv": [123, 213], "dynamic_ntask": 125, "available_cor": 127, "estim": [127, 129, 213], "initial_state_file_nam": [130, 213], "output_fil": [130, 204, 213], "rest": [130, 191, 222, 226], "potenti": [130, 148, 204, 206, 213, 225], "energi": [130, 148, 206, 212, 213, 225], "netcdf": [130, 200, 214, 215, 216, 217, 218, 219, 220], "state": [130, 196, 197, 198, 200, 204, 205, 213, 226], "len": [130, 204, 213], "superclass": [132, 197, 204], "run_time_step": [138, 177, 213], "resources_fix": [138, 177], "shouldn": [138, 177, 213], "dt": [138, 177, 213, 225, 226, 229], "btr_dt": [138, 177, 213, 225], "barotrop": [138, 177, 213, 225, 228], "longer": [144, 197, 205, 213, 225, 226, 232], "shorter": [144, 205], "rpe": [148, 151, 156, 182, 206, 213, 225], "20": [148, 197, 205, 206, 213, 225, 228], "include_viz": 159, "less": [159, 162, 204, 222, 228], "globalocean": [159, 201], "cosinebel": [162, 165, 168, 198], "rmsevalu": 163, "squar": [163, 198], "ncell": [163, 204, 213], "viz_map": 170, "column": [174, 175, 178, 180, 200, 209, 228, 230], "param": [175, 178, 180, 206, 207], "singlecolumn": [175, 178, 200], "iag": 179, "ideal_ag": [180, 182], "ivar": 180, "posit": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 213, 222, 228], "layer": [184, 185, 186, 190, 191, 192, 193, 196, 197, 200, 213, 214, 222, 225, 226, 228, 229], "meter": [184, 185], "bottom": [186, 187, 188, 189, 190, 191, 192, 193, 196, 213, 214, 222, 225, 226, 228, 229], "thick": [186, 190, 191, 192, 193, 197, 200, 213, 214, 222, 225], "stretch": [186, 192, 193, 213, 222], "elev": [186, 192, 193, 213, 222], "midpoint": [186, 192, 193, 213], "reftopdepth": [186, 189, 190, 192, 193, 213], "down": [186, 187, 188, 189, 190, 191, 192, 193, 198, 213, 222, 226], "ref": [186, 192, 193, 213], "middl": [186, 192, 193, 213], "refbottomdepth": [186, 187, 188, 189, 190, 192, 193, 204, 213], "refinterfac": [186, 192, 193, 213], "element": [186, 192, 193, 213], "vertcoordmovementweight": [186, 192, 193, 204, 213], "movement": [186, 192, 193, 213], "partial": [187, 188, 213, 222, 225, 226, 228, 229], "seafloor": [187, 189, 190, 191, 222], "unstretch": 191, "shelv": [194, 214, 222], "ssh_adjust": [194, 204, 206, 214], "iter": [194, 214], "compass_branch": 194, "default_input": [194, 201, 213, 214], "ocean_model": [194, 209, 214], "submodul": [194, 201, 209, 213, 230], "latest": [194, 209, 212, 223, 230], "master": 194, "compat": [194, 209, 210, 212], "verison": 194, "maintain": [194, 230], "recurs": [194, 208, 209, 213, 230], "whichev": [194, 222], "single_column": [194, 199, 223, 227], "design": [195, 204, 206, 208, 212, 219, 225], "minim": 196, "fcell": [196, 204, 213, 226], "fedg": [196, 204, 213, 226], "fvertex": [196, 204, 213, 226], "free": [196, 213, 214], "slip": 196, "solid": [196, 225, 226], "tangenti": 196, "enforc": [196, 209], "nonperiod": 196, "drag": 196, "mass": 196, "momentum": [196, 197], "scalar": 196, "rigid": 196, "veloc": [196, 197, 206, 209, 213, 226, 228, 230], "solv": [196, 210, 222], "mid": [196, 225], "vari": [196, 198, 204, 210, 219, 222, 226], "consult": [196, 213], "tidal_forc": 196, "eddi": [197, 225], "addition": [197, 200, 215, 216, 217, 218, 220], "diffus": [197, 200], "50": [197, 207, 213, 225, 228], "prescrib": 197, "decomptest": [197, 213], "restarttest": [197, 207], "frequenc": 197, "threadstest": 197, "thread_test": 197, "rpetest": [197, 206, 213], "intens": 197, "globalconverg": [198, 208, 213], "studi": [198, 226], "advect": [198, 226, 228], "qu": [198, 213, 214, 224, 226], "ico": [198, 213, 224, 226], "fix": [198, 207, 213], "spheric": [198, 226], "24": [198, 226], "shape": [198, 226], "blob": 198, "around": [198, 213, 214, 225, 226], "rate": [198, 213, 226, 228], "cosine_bell_with_viz": [198, 224], "distribut": 198, "dt_per_km": [198, 213, 225, 226, 229], "rmse": 198, "slow": [198, 226], "exercis": [200, 226, 228], "kpp_test": 200, "mixedlayerdepthsoutput": 200, "enabel": 200, "idealagetrac": [200, 228], "100": [200, 222, 228], "dimens": [200, 225, 228], "single_column_forc": [200, 228], "profil": [200, 210, 228], "throughout": [200, 225, 228], "idealag": 200, "encompass": 201, "perspect": 201, "four": 201, "major": [201, 204], "add_test_group": [201, 208, 213], "variou": [201, 204, 209], "univers": 201, "mix": [201, 207, 228], "ice_shelf_2d": [201, 232], "iceshelf2d": 201, "ziso": [201, 222, 231, 232], "landice_model": [201, 209], "organ": [202, 205, 207, 212], "green": 202, "blue": [202, 215, 230], "orang": 202, "red": 202, "repositori": [202, 212, 213, 230], "laid": 202, "fig": 202, "among": [202, 207, 209, 213], "organiz": 202, "concept": [202, 208, 211, 213, 231], "simul": [204, 211, 213, 224, 225, 229, 230], "multiprocess": [204, 208, 214], "outsid": [204, 209], "emploi": 204, "prevent": 204, "unwant": 204, "outer": 204, "inner": 204, "variable_resolut": [204, 207, 230], "dome_varres_grid": 204, "calcul": [204, 206], "signific": [204, 205, 206], "neglig": 204, "convent": [204, 209, 213], "high": [204, 217, 219], "fit": [204, 214], "applic": [204, 208, 209, 229], "meshstep": 204, "getint": 204, "mesh_cpus_per_task": 204, "mesh_min_cpus_per_task": 204, "previous": [204, 213], "processor": [204, 225], "readi": [204, 213, 220], "write_netcdf": [204, 213], "convers": [204, 213], "generate_grid": 204, "dsmesh": 204, "graphinfofilenam": [204, 213], "use_dist": [204, 213, 225], "gradient_width_dist": [204, 213, 225], "gradient_width_frac": [204, 213, 225], "bottom_temperatur": [204, 213, 225], "surface_temperatur": [204, 213, 225, 228], "temperature_differ": [204, 213, 225], "coriolis_paramet": [204, 213, 225, 228], "bottom_depth": [204, 213, 214, 222, 225, 226, 228, 229], "vert_level": [204, 213, 214, 222, 225, 226, 228, 229], "ones_lik": [204, 213], "xcell": [204, 213], "ycell": [204, 213], "xmin": 204, "min": [204, 213, 225, 228], "xmax": 204, "ymin": 204, "ymax": 204, "ymid": 204, "xperturbmin": 204, "xperturbmax": 204, "perturbationwidth": 204, "yoffset": 204, "sin": [204, 213, 225], "pi": [204, 213, 222, 225, 226], "temp_vert": [204, 213], "frac": [204, 213, 222, 225], "logical_and": [204, 213], "transpos": [204, 213], "3rd": [204, 213], "crest": [204, 213, 225], "wave": [204, 213, 225], "expand_dim": [204, 213], "dim": [204, 213], "axi": [204, 213], "broadcast": [204, 213], "zeros_lik": [204, 213], "xedg": [204, 213], "nedg": [204, 213], "dtype": [204, 213], "xvertex": [204, 213], "commandlin": 204, "explor": [204, 207, 213, 222], "harm": 204, "likewis": [204, 213], "subsequ": [204, 211, 232], "arisen": 204, "now": [204, 209, 213, 214, 219], "omit": [204, 230], "problemat": 204, "usual": [204, 206, 209, 213, 230], "isn": [204, 208, 213], "forwardstep": 204, "mesh_path": 204, "mesh_step": 204, "with_ice_shelf_cav": [204, 206], "initial_state_target": 204, "adjusted_init": [204, 206], "forcing_data": 204, "entha_analy_result": 204, "mat": 204, "enthalpy_benchmark": 204, "ourselv": 204, "reduc": 204, "firewal": 204, "bedmachineantarctica_v2_and_gebco_2022_0": 204, "05_degree_20220729": 204, "slate": 204, "icepresent_qu60km_polar": 204, "practic": [204, 208, 209], "u": [204, 213, 219, 220], "straightforward": 204, "commonli": [204, 211], "expens": [204, 205], "mechan": 204, "notat": [204, 229], "That": [204, 208, 211, 213, 230], "word": 204, "ff": 204, "quwisc240": [204, 208, 230, 232], "90c": 204, "91c": 204, "92": [204, 222], "91": 204, "sowisc12to60": [204, 230, 232], "performance_test": [204, 232], "effici": [204, 213], "transfer": 204, "feasibl": 204, "nor": [204, 213], "add_depend": 204, "unpickl": 204, "overhead": 204, "philosophi": [205, 208, 213], "context": [205, 213], "namesak": 205, "256": [205, 216, 220], "quicker": 205, "32": [205, 230], "exce": 205, "limit": [205, 209, 225], "offer": 205, "benefit": [205, 212], "catch": 205, "bug": 205, "covereag": 205, "timestep": 205, "exhaust": 205, "recent": [205, 223], "merg": 205, "reach": 205, "steadi": 205, "encount": [205, 210], "wet": 205, "fundament": 206, "incorpor": 206, "deprec": 206, "constrain_resourc": [206, 213], "smoke_test": [206, 207], "smoketest": [206, 207], "velo_solv": 206, "sia": [206, 209], "fo": 206, "add_step": [206, 213], "runmodel": 206, "run_step": 206, "0200": 206, "00_00": [206, 213], "fine": [206, 213, 228], "recip": 206, "rpe_test": [206, 208, 213, 230], "res_param": [206, 207], "144": 206, "36": [206, 215, 219, 228, 230], "4km": [206, 207, 213, 225, 230], "unsupport": [206, 207, 209], "enumer": [206, 213], "rpe_test_": [206, 213], "_nu_": [206, 213], "deliber": 206, "chosen": [206, 228], "demonstr": [206, 213], "clumsi": [206, 208], "rpe_test_1_nu_1": [206, 213, 225], "rpe_test_2_nu_5": [206, 213, 225], "filesfore3sm": 206, "configure_global_ocean": 206, "with_bgc": 206, "po4": 206, "no3": 206, "sio3": 206, "nh4": 206, "fe": [206, 216], "o2": 206, "dic": 206, "dic_alt_co2": 206, "alk": 206, "dofe": 206, "dop": 206, "dopr": 206, "donr": 206, "zooc": 206, "spchl": 206, "spc": 206, "spfe": 206, "spcaco3": 206, "diatchl": 206, "diatc": 206, "diatf": 206, "diatsi": 206, "diazchl": 206, "diazc": 206, "diazf": 206, "phaeochl": 206, "phaeoc": 206, "phaeof": 206, "dm": 206, "dmsp": 206, "prot": 206, "poli": 206, "lip": 206, "conceptu": [207, 208], "realist": [207, 212, 231], "2000m": [207, 230], "34": [207, 230], "halfar": 207, "cism": 207, "dome_typ": 207, "closest": 207, "put_origin_on_a_cel": 207, "hydrologi": 207, "hydro": [207, 231], "dome_viz": 207, "time_slic": 207, "save_imag": 207, "hide": [207, 213], "hide_fig": 207, "add_test_cas": [207, 213], "restart_test": [207, 213, 230, 232], "talk": 207, "16": [207, 214, 228, 230], "10e3": 207, "40": [207, 218], "126": 207, "4e3": 207, "160": [207, 213, 225], "500": [207, 213, 214, 222, 225], "held": 207, "initial_condit": 208, "dig": [208, 214], "infrastructur": [208, 213], "background": 208, "behind": 208, "adher": [208, 213], "pep8": [208, 209], "bot": [208, 222], "violat": 208, "pleas": [208, 209, 213, 230], "consid": 208, "editor": 208, "pycharm": [208, 209, 213], "spyder": 208, "linter": 208, "flake8": [208, 209], "discourag": 208, "reformat": 208, "autopep8": 208, "undesir": 208, "util": 208, "lint": 208, "wildcard": 208, "vim": [208, 213], "plugin": 208, "id": [208, 209], "commit": [208, 209], "why": 208, "sound": 208, "subpackag": 208, "understand": [208, 214], "releas": [208, 212, 219, 223, 230], "our": [208, 213, 230], "downstream": 208, "tutori": [208, 209], "clu": 208, "intro": 208, "docstr": [208, 212, 213], "strip": 208, "mpas_ocean": 208, "hidden": 208, "shortcut": [208, 230], "referenc": [208, 213], "mention": 208, "dot": 208, "charact": 208, "unix": [208, 212], "distinct": 208, "mayb": [208, 213], "machine_config": 208, "endswith": 208, "splitext": 208, "exactli": [208, 209, 213, 222], "move": [208, 209, 213, 229], "renam": 208, "visa": 208, "versa": 208, "comfort": [208, 213], "inherit": [208, 213], "orient": 208, "program": [208, 214], "led": 208, "felt": 208, "contribut": 208, "hesit": 208, "predecessor": [208, 211, 212], "harder": 208, "outcom": 208, "augment": 208, "explain": 208, "hope": 208, "dens": 208, "learn": [208, 213], "curv": 208, "worth": [208, 213], "skill": 208, "broadli": 208, "endeavor": 208, "readabl": 208, "manipul": 208, "get_available_cores_and_nod": 208, "theoret": 208, "dozen": 208, "split": 208, "theori": 208, "biogeochemistri": 208, "bash": [209, 210, 213, 230], "ksh": 209, "mac": [209, 212], "csh": 209, "tcsh": 209, "temporarili": 209, "bin": [209, 220, 230], "obtain": [209, 216], "recogn": [209, 214, 230], "mambaforg": [209, 213, 219, 230], "permiss": 209, "miniconda3": 209, "unifi": [209, 220], "anyon": 209, "caus": [209, 216, 220, 222], "person": [209, 210], "base_path_to_install_or_update_conda": 209, "with_albani": 209, "with_netlib_lapack": 209, "with_petsc": 209, "flavor": [209, 213], "login": [209, 216, 220], "troubl": [209, 213], "recognit": 209, "trilino": 209, "downsid": 209, "unneed": 209, "laptop": [209, 213, 214], "workstat": 209, "deploy": 209, "shallow": [209, 226, 229], "hpc": [209, 216, 219], "touch": 209, "update_spack": 209, "reinstal": 209, "scorpio": [209, 219, 230], "esmf": [209, 230], "caution": 209, "deploi": [209, 215, 216, 217, 218, 219, 220], "load_": 209, "encod": 209, "load_dev_polaris_": [209, 213], "env_nam": 209, "dev_polaris_": [209, 210], "workdir": [209, 230], "unexpect": [209, 211, 213], "occur": [209, 210], "safest": 209, "rerun": 209, "echo": 209, "correct": 209, "checkout": [209, 213], "proceed": 209, "notic": 209, "conda_env": [209, 218, 230], "rememb": 209, "recreat": [209, 210], "incorrect": 209, "unus": 209, "session": [209, 213], "pip": 209, "substanti": 209, "risk": [209, 213], "rare": 209, "env_onli": 209, "mpas_make_target": [209, 230], "scientif": [209, 230], "_albani": 209, "instruct": [209, 213], "proce": 209, "es3m": 209, "compli": 209, "memor": 209, "guidelin": 209, "stai": 209, "complianc": 209, "checker": 209, "pre": 209, "isort": 209, "mypi": 209, "77": 209, "e302": 209, "blank": 209, "resolv": 209, "simpler": [209, 213], "mkdir": 209, "fetch": [209, 213], "new_branch_nam": 209, "put": [209, 213], "elsewher": 209, "disk": [209, 214, 216, 220], "respons": 209, "simplest": 209, "your_new_branch": 209, "suggest": 210, "geo": 210, "cartopi": 210, "14": 210, "np110py27_4": 210, "calledprocesserror": 210, "deploy_tmp": 210, "spec": [210, 220], "vpn": 210, "site": 210, "shell": [210, 212], "honor": 210, "wide": 210, "coupl": [210, 212], "spawn": 210, "usernam": [210, 213, 216, 220], "proxy_en": 210, "export": 210, "all_proxi": 210, "proxyout": 210, "8080": 210, "no_proxi": 210, "localhost": [210, 214, 219, 220, 230], "127": 210, "proxy_dis": 210, "unset": 210, "anytim": 210, "fatal": 210, "mpi_init": 210, "stack": 210, "mpir_init_thread": 210, "159": 210, "mpid_init": 210, "164": 210, "mpidi_ch3_init": 210, "95": 210, "mpid_nem_init": 210, "314": 210, "mpid_nem_tcp_init": 210, "173": 210, "mpid_nem_tcp_get_business_card": 210, "395": 210, "getsockinterfaceaddr": 210, "369": 210, "pn2034311": 210, "errno": 210, "host": [210, 214, 219, 230], "mpirun": [210, 214, 215, 216, 217, 218, 219, 220, 230], "srun": [210, 213, 214, 215, 216, 217, 218, 219, 220, 230], "parallel_execut": [210, 214, 215, 216, 217, 218, 219, 220, 230], "plu": 211, "autom": 212, "exascal": 212, "earth": 212, "kept": 212, "sens": [212, 213], "boundari": [212, 225, 231], "expert": 212, "team": 212, "launch": 212, "uncoupl": 212, "evolv": [212, 222, 226, 228], "quick": [212, 213, 223, 232], "queue": 212, "beginn": [212, 213], "worktre": [212, 213], "advanc": [212, 213], "mpas_to_yaml": 212, "troubleshoot": 212, "proxi": 212, "lanl": [212, 214, 216], "gethostbynam": 212, "glossari": 213, "port": [213, 220], "stick": 213, "miniconda": 213, "haven": 213, "3_chrysalis_intel_openmpi": 213, "switch": [213, 214], "strict": 213, "fork": 213, "push": 213, "lowercas": 213, "hyphen": 213, "settl": 213, "desktop": 213, "realli": [213, 220], "nice": [213, 220], "supercomput": 213, "yet_another_channel": 213, "vi": 213, "polaris_head": 213, "yetanotherchannel": 213, "instanc": 213, "repres": [213, 222, 226], "highli": 213, "camelcas": 213, "capit": 213, "letter": 213, "cap": 213, "awkward": 213, "encourag": 213, "enclos": 213, "briefli": 213, "alphabet": 213, "interest": 213, "anyth": 213, "probabl": [213, 219], "suppos": 213, "easili": 213, "tide": 213, "analyz": 213, "hard": [213, 225, 228], "sai": [213, 219], "res_str": 213, "1000": [213, 214, 222, 225], "still": [213, 223, 229, 230], "ti": 213, "loop": 213, "coarsest": [213, 214], "especi": 213, "anticip": 213, "promot": 213, "pattern": 213, "familiar": 213, "seen": 213, "brows": 213, "row": 213, "greater": 213, "disadvantag": 213, "foremost": 213, "magic": 213, "effect": [213, 229], "kind": 213, "pain": 213, "path_to_mpas_ocean": 213, "path_to_working_dir": 213, "sbatch": [213, 219, 230], "job_script": [213, 230], "cat": 213, "slurm_jobid": 213, "_run_test": 213, "gpf": 213, "fs1": 213, "ac": 213, "cbegeman": 213, "successfulli": 213, "x_cell": 213, "y_cell": 213, "grid_typ": [213, 214, 222, 225, 226, 228, 229], "coord_typ": [213, 222, 225, 226, 228, 229], "partial_cell_typ": [213, 222, 225, 226, 228, 229], "min_pc_fract": [213, 222, 225, 226, 228, 229], "everywher": 213, "depress": [213, 222], "x_min": 213, "x_max": 213, "y_min": 213, "y_max": 213, "y_mid": 213, "x_perturb_min": 213, "x_perturb_max": 213, "perturb_width": [213, 225], "y_offset": 213, "normal_veloc": 213, "attr": 213, "mostli": 213, "logic": [213, 225], "northern": [213, 225], "half": [213, 225], "southern": [213, 225], "halv": [213, 225], "gradient": [213, 225, 228], "08": [213, 225], "500km": [213, 225], "40e3": [213, 225], "water": [213, 225, 226, 228, 229], "35": [213, 225, 226, 228, 229, 230], "corioli": [213, 225, 226, 228], "2e": [213, 225], "initial_temperatur": 213, "initial_normal_veloc": 213, "connect": [213, 220], "match": 213, "decomp_test": [213, 230, 232], "light": 213, "fast": 213, "e3sm_compon": 213, "interact": [213, 216, 219, 220, 230], "interrupt": 213, "pty": 213, "navig": 213, "newli": 213, "bunch": 213, "didn": 213, "mistak": 213, "finger": 213, "cross": 213, "initial_normalveloc": 213, "initial_salin": 213, "btr_dt_per_km": [213, 225], "obvious": 213, "stress": [213, 228], "steem": 213, "bring": 213, "landicemodelstep": 213, "huge": 213, "cp": 213, "config_dt": 213, "05": 213, "split_explicit_t": 213, "config_btr_dt": 213, "hmix_del2": 213, "bottom_drag": 213, "cvmix": 213, "0002": 213, "filename_interv": 213, "0100": 213, "input_interv": 213, "initial_onli": 213, "basicmesh": 213, "dayssincestart": 213, "surfacespe": 213, "lowersurfac": 213, "uppersurfac": 213, "ureconstructx": 213, "ureconstructi": 213, "great": 213, "remain": [213, 226, 228], "load_dataset": 213, "final_temperatur": 213, "ab": 213, "fresh": 213, "decomp": 213, "proc": 213, "area": 213, "markdown": 213, "users_guid": 213, "daunt": 213, "flesh": 213, "bonu": 213, "improv": 213, "introduc": 213, "techniqu": 213, "proport": [213, 222, 225, 226, 229], "1384565": 213, "strftime": 213, "gmtime": 213, "run_second": 213, "twice": 213, "guess": 213, "recomput": 213, "aim": 213, "becam": 213, "mainten": 213, "counter": 213, "thought": 213, "yet_another_channel_test_cas": 213, "yetanotherchanneltestcas": 213, "choic": [213, 226], "spuriou": [213, 225], "dissip": [213, 225], "pop": [213, 225], "mom": [213, 225], "mitgcm": [213, 225], "higher": 213, "heavi": 213, "analogi": 213, "tet": 213, "bear": 213, "me": 213, "late": 213, "_add_step": 213, "startswith": 213, "privat": 213, "break": [213, 225], "unusu": 213, "rpe_test_3_nu_10": 213, "rpe_test_4_nu_20": 213, "rpe_test_5_nu_200": 213, "_setup_step": 213, "20_00": 213, "0000": 213, "dayssincestartofsim": 213, "relativevort": 213, "pyplot": 213, "plt": 213, "output_": 213, "sections_yet_another_channel_": 213, "rpe_t": 213, "init_filenam": 213, "ds_init": 213, "_plot": 213, "compact": 213, "dirti": 213, "adopt": 213, "lesson": 213, "tricki": 213, "commun": 213, "nuanc": 213, "fake": 213, "wasn": 213, "fold": 213, "proper": 213, "third": 213, "extens": 214, "single_nod": [214, 215, 216, 217, 218, 219, 220, 230], "multinod": [214, 230], "hopefulli": 214, "explanatori": 214, "my_machin": 214, "extend": 214, "gitconfig": 214, "enter": 214, "author": 214, "asai": 214, "davi": 214, "email": 214, "pull_request": 214, "28": 214, "address": 214, "metadata": 214, "customize_config_pars": 214, "server_base_url": 214, "inej": 214, "check_siz": 214, "ssl": 214, "certif": 214, "core_path": 214, "partition_execut": 214, "dask": 214, "netcdf4": 214, "netcdf4_class": 214, "netcdf3_64bit": 214, "netcdf3_class": 214, "engin": 214, "scipi": 214, "mesh_databas": 214, "ocean_database_root": 214, "landice_database_root": 214, "mesh_cor": 214, "18": [214, 216], "mesh_min_cor": 214, "mesh_max_memori": 214, "mesh_max_disk": 214, "init_cor": 214, "init_min_cor": 214, "init_max_memori": 214, "init_max_disk": 214, "init_thread": 214, "forward_cor": 214, "forward_min_cor": 214, "forward_thread": 214, "forward_max_memori": 214, "forward_max_disk": 214, "add_metadata": 214, "ec": 214, "wc": 214, "mesh_descript": 214, "autodetect": 214, "bathy_descript": 214, "gebco": 214, "2022": 214, "bedmachin": 214, "antarctica": 214, "init_descript": 214, "e3sm_vers": 214, "increment": 214, "mesh_revis": 214, "finest": 214, "min_r": 214, "max_r": 214, "max_depth": 214, "creation_d": 214, "peopl": 214, "contact": 214, "temperaturemax": 214, "statist": 214, "temperature_max": 214, "33": [214, 230], "diagnost": [214, 215, 216, 218, 219, 220, 230], "enable_ocean_initial_condit": 214, "enable_ocean_graph_partit": 214, "enable_seaice_initial_condit": 214, "scrip": 214, "enable_scrip": 214, "transect": 214, "onlin": 214, "member": 214, "offlin": 214, "enable_diagnostics_fil": 214, "coarser": [214, 226], "finer": 214, "comparisonlatresolut": 214, "comparisonlonresolut": 214, "antarct": 214, "polar": [214, 215, 217, 222], "stereograph": 214, "comparisonantarcticstereowidth": 214, "6000": [214, 222], "comparisonantarcticstereoresolut": 214, "arctic": 214, "comparisonarcticstereowidth": 214, "comparisonarcticstereoresolut": 214, "tanh_dz": 214, "3000": 214, "min_layer_thick": [214, 222], "max_layer_thick": [214, 222], "retain": 214, "ecosystem": 215, "gain": 215, "confluenc": 215, "public_html": [215, 217, 219], "polaris_env": [215, 216, 217, 218, 219, 220], "soft": [215, 217, 219, 230], "mpi_intel": [215, 217, 218, 219], "mpi_gnu": [215, 216, 217, 218, 219, 220], "hdf5": [215, 216, 217, 218, 219, 220], "fortran": [215, 216, 217, 218, 219, 220], "pnetcdf": [215, 216, 217, 218, 219, 220], "use_e3sm_hdf5_netcdf": [215, 216, 217, 218, 219, 220], "cobalt": [215, 216, 217, 218, 219, 220], "condo": [215, 230], "acm": [215, 230], "medium": 215, "qualiti": [215, 216, 218, 219, 220, 230], "servic": [215, 216, 218, 219, 220, 230], "qo": [215, 216, 218, 219, 220, 230], "acme_high": 215, "load_latest_polaris_intel_impi": [215, 218], "load_latest_polaris_gnu_openmpi": [215, 217, 230], "dst": 216, "calendar": 216, "network": 216, "introduct": 216, "platform": 216, "batch": 216, "wtrw": 216, "ch": 216, "lustr": 216, "scratch4": 216, "scratch5": 216, "sacctmgr": 216, "assoc": 216, "cluster": 216, "45": 216, "my": 216, "sshare": 216, "grep": [216, 230], "sreport": 216, "accountutilizationbyus": 216, "2019": 216, "02": 216, "prioriti": 216, "yellow": 216, "chkhome": 216, "petabyt": 216, "df": 216, "bp": 216, "archiv": [216, 220], "hpss": [216, 220], "front": 216, "tn": 216, "storag": 216, "project_nam": 216, "salloc": [216, 219, 220], "account_nam": 216, "gpu": [216, 220], "hyperthread": [216, 220], "hang": [216, 220], "threads_per_cor": [216, 220], "modules_befor": [216, 220], "modules_aft": [216, 220], "shared_clim": [216, 230], "load_latest_polaris_gnu_mpich": [216, 220], "load_latest_polaris_intel_openmpi": 217, "compyf": 218, "app": [218, 230], "pmi2": 218, "submit": 219, "workload": 219, "squeue": 219, "my_usernam": [219, 220], "scancel": 219, "jobid": 219, "cancel": 219, "emtpi": 219, "three": 219, "mpi_mpich": [219, 230], "mpi_openmpi": [219, 230], "nompi": [219, 230], "p1": 220, "nersc": 220, "iri": 220, "filesystem": 220, "myquota": 220, "prjquota": 220, "projectid": 220, "m1795": 220, "hsi": 220, "htar": 220, "zstash": 220, "cf": [220, 230], "cdir": [220, 230], "constraint": [220, 230], "premium": 220, "cray_compil": 220, "8844": 220, "monik": 220, "browser": 220, "grab": 220, "logon": 220, "kernel": 220, "myenv": 220, "ipykernel": 220, "kernelspec": 220, "u1": 220, "Be": 220, "interpret": 220, "argv": 220, "env": 220, "ipykernel_launch": 220, "connection_fil": 220, "display_nam": 220, "languag": 220, "2500": 222, "deepest": 222, "stewart": 222, "2017": 222, "z_2": 222, "z_1": 222, "mathrm": 222, "tanh": 222, "rightarrow": 222, "infti": 222, "z_k": 222, "z_0": 222, "z_": [222, 228], "k": 222, "finder": 222, "n_z": 222, "h_": 222, "210": [222, 226], "scienc": 222, "hydrograph": 222, "climatologi": 222, "250": 222, "5500": 222, "renorm": 222, "51": 222, "221": 222, "63": 222, "floor": 222, "flat": [222, 225], "collaps": 222, "adcroft": 222, "campin": 222, "2004": 222, "absenc": 222, "squash": 222, "watercolumn": 222, "press": 222, "batymetri": 222, "stair": 222, "month": 223, "year": 223, "websit": 223, "release_6": 223, "ilicak": 225, "2012": 225, "distinguish": 225, "zonal": [225, 228], "meridion": [225, 228], "psu": [225, 228], "cooler": 225, "north": 225, "sinusoid": 225, "perturb": [225, 226], "t_0": 225, "t_b": 225, "t_": 225, "z_b": 225, "y_": 225, "l_x": 225, "warmer": 225, "ge": [225, 226], "gradient_width_fract": 225, "l_y": 225, "le": [225, 228], "flow": [225, 226], "stationari": [225, 228], "literatur": 225, "mk": 225, "celsiu": 225, "williamson": 226, "1992": 226, "sec": 226, "3a": 226, "skamarock": 226, "gassmann": 226, "bodi": 226, "rotat": 226, "transport": 226, "psi": 226, "proportion": 226, "icosohydr": 226, "480": 226, "150": 226, "nearest": 226, "insensit": [226, 228], "300": [226, 229], "passiv": 226, "psi_0": 226, "co": 226, "radiu": 226, "assign": 226, "debug_tracers_1": 226, "equatori": 226, "u_0": 226, "tau": 226, "transit": 226, "equat": [226, 228], "vel_pd": 226, "tendenc": 226, "multipli": 226, "rad": 226, "lat_cent": 226, "lon_cent": 226, "14159265": 226, "2123666": 226, "6667": 226, "hill": 226, "psi0": 226, "qu_conv_thresh": 226, "warn": 226, "qu_conv_max": 226, "icos_conv_thresh": 226, "icos_conv_max": 226, "roughli": 226, "span": 228, "arbitrarili": 228, "virtu": 228, "examin": 228, "400": 228, "phi": 228, "phi_0": 228, "dz": 228, "ml": 228, "mld": 228, "surface_x": 228, "x_gradient_mixed_lay": 228, "mixed_layer_depth_x": 228, "x_difference_across_mixed_lay": 228, "x_gradient_interior": 228, "spatial": 228, "degc": 228, "temperature_gradient_mixed_lay": 228, "temperature_difference_across_mixed_lay": 228, "temperature_gradient_interior": 228, "mixed_layer_depth_temperatur": 228, "25": 228, "surface_salin": 228, "salinity_gradient_mixed_lay": 228, "salinity_difference_across_mixed_lay": 228, "salinity_gradient_interior": 228, "mixed_layer_depth_salin": 228, "scheme": 228, "dictat": 228, "kpp": 228, "restor": 228, "piston": 228, "toward": 228, "temperature_surface_restoring_valu": 228, "temperature_piston_veloc": 228, "salinity_surface_restoring_valu": 228, "salinity_piston_veloc": 228, "temperature_interior_restoring_r": 228, "salinity_interior_restoring_r": 228, "net": 228, "latent": 228, "heat": 228, "bulk": 228, "latent_heat_flux": 228, "sensibl": 228, "sensible_heat_flux": 228, "solar": 228, "shortwav": 228, "shortwave_heat_flux": 228, "evapor": 228, "evaporation_flux": 228, "5e": 228, "rain": 228, "rain_flux": 228, "wind": 228, "wind_stress_zon": 228, "wind_stress_meridion": 228, "characterist": 229, "welcom": 229, "icosohedr": 229, "pertain": 229, "inher": 229, "warrant": 229, "investig": 229, "load_latest_polari": 230, "minu": 230, "create_polaris_load_script": 230, "load_polaris_1": 230, "0_mpich": 230, "wiki": 230, "circular_shelf": 230, "sia_smoke_test": 230, "sia_decomposition_test": 230, "sia_restart_test": 230, "fo_smoke_test": 230, "fo_decomposition_test": 230, "fo_restart_test": 230, "37": 230, "38": 230, "17": 230, "210131_test_new_branch": 230, "fall": 230, "my_config": 230, "smaller": 230, "previous_workdir": 230, "paper": 230, "recompil": 230, "live": 230, "safer": 230, "preserv": 230, "test_subdir": 230, "whatev": 230, "wall": 230, "clock": 230, "accord": 230, "j": 230, "exclus": 230, "job_nam": 230, "wall_tim": 230, "fo_integr": [230, 232], "full_integr": [230, 232], "sia_integr": [230, 232], "cosine_bell_cached_init": [230, 232], "ec30to60": [230, 232], "ecwisc30to60": [230, 232], "qu240_for_e3sm": [230, 232], "quwisc240_for_e3sm": [230, 232], "wc14": [230, 232], "suitenam": 230, "radial": 231, "analyt": 231, "form": 231, "identifi": 231, "analysis_test": 232, "5km": 232, "20km": 232, "with_frazil": 232, "prohibit": 232}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.list": [[54, 2, 1, "", "list_cases"], [55, 2, 1, "", "list_machines"], [56, 2, 1, "", "list_suites"]], "polaris.logging": [[57, 2, 1, "", "log_method_call"]], "polaris.mesh": [[58, 0, 1, "", "IcosahedralMeshStep"], [65, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [60, 1, 1, "", "get_cell_width"], [61, 1, 1, "", "get_subdivisions"], [62, 1, 1, "", "make_jigsaw_mesh"], [63, 1, 1, "", "run"], [64, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, 1, 1, "", "__init__"], [66, 1, 1, "", "build_cell_width_lat_lon"], [67, 1, 1, "", "make_jigsaw_mesh"], [68, 1, 1, "", "run"], [69, 1, 1, "", "setup"]], "polaris.mesh.planar": [[70, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[71, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "run"], [73, 1, 1, "", "save_and_plot_cell_width"], [74, 1, 1, "", "setup"]], "polaris.model_step": [[75, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[76, 2, 1, "", "ingest"], [77, 2, 1, "", "parse_replacements"], [78, 2, 1, "", "replace"], [79, 2, 1, "", "write"]], "polaris.ocean": [[124, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[124, 1, 1, "", "__init__"]], "polaris.ocean.model": [[125, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "compute_cell_count"], [127, 1, 1, "", "constrain_resources"], [128, 1, 1, "", "map_yaml_to_namelist"], [129, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[130, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[131, 0, 1, "", "BaroclinicChannel"], [132, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[131, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[134, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[134, 1, 1, "", "__init__"], [135, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[136, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[138, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "compute_cell_count"], [140, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[141, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "run"], [143, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[144, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[144, 1, 1, "", "__init__"], [145, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[146, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[148, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "configure"], [150, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[151, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "run"], [153, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[154, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[156, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[158, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[158, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[159, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "configure"], [161, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[162, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "rmse"], [164, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[165, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[168, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[170, 0, 1, "", "Viz"], [172, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[174, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[174, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[175, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[177, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[177, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.ideal_age": [[178, 0, 1, "", "IdealAge"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.initial_state": [[180, 0, 1, "", "InitialState"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[182, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[184, 2, 1, "", "generate_1d_grid"], [185, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[186, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[187, 2, 1, "", "alter_bottom_depth"], [188, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[189, 2, 1, "", "compute_min_max_level_cell"], [190, 2, 1, "", "compute_z_level_layer_thickness"], [191, 2, 1, "", "compute_z_level_resting_thickness"], [192, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[193, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[80, 2, 1, "", "get_available_parallel_resources"], [81, 2, 1, "", "get_parallel_command"], [82, 2, 1, "", "run_command"], [83, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[84, 2, 1, "", "write"]], "polaris.remap": [[85, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "dst_from_lon_lat"], [87, 1, 1, "", "dst_from_mpas"], [88, 1, 1, "", "dst_from_points"], [89, 1, 1, "", "dst_from_proj"], [90, 1, 1, "", "dst_global_lon_lat"], [91, 1, 1, "", "get_remapper"], [92, 1, 1, "", "runtime_setup"], [93, 1, 1, "", "src_from_lon_lat"], [94, 1, 1, "", "src_from_mpas"], [95, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[96, 2, 1, "", "run_single_step"], [97, 2, 1, "", "run_tests"]], "polaris.setup": [[98, 2, 1, "", "setup_case"], [99, 2, 1, "", "setup_cases"]], "polaris.streams": [[100, 2, 1, "", "read"], [101, 2, 1, "", "update_defaults"], [102, 2, 1, "", "update_tree"], [103, 2, 1, "", "write"]], "polaris.suite": [[104, 2, 1, "", "setup_suite"]], "polaris.validate": [[105, 2, 1, "", "compare_timers"], [106, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[107, 2, 1, "", "plot_global"]], "polaris.viz": [[108, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[109, 0, 1, "", "PolarisYaml"], [113, 2, 1, "", "main_mpas_to_yaml"], [114, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [115, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[109, 1, 1, "", "__init__"], [110, 1, 1, "", "read"], [111, 1, 1, "", "update"], [112, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5, 213], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 123, 209, 213, 215, 216, 217, 218, 219, 220, 225, 226, 228, 229], "same": 1, "implement": 1, "test": [1, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 199, 203, 205, 206, 207, 208, 213, 214, 224, 227, 230, 231, 232], "valid": [1, 2, 15, 44, 105, 106, 133, 135, 137, 145, 150, 155, 161, 176, 179, 206, 213, 230], "api": 2, "refer": [2, 122, 123], "compon": [2, 12, 17, 18, 49, 123, 194, 201, 208, 209, 223, 230], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 208, 209, 212, 230], "framework": [2, 8, 122, 123, 197, 200, 208, 221], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 54, 55, 56], "setup": [2, 4, 6, 30, 40, 64, 69, 74, 98, 99, 129, 143, 153, 204], "suit": [2, 4, 6, 104, 205, 224, 230, 232], "run": [2, 6, 12, 37, 63, 68, 72, 96, 97, 123, 142, 152, 157, 164, 169, 171, 173, 181, 183, 204, 209, 225, 226, 228, 229, 230], "cach": [2, 4, 6, 48, 204], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 208], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 206], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 204, 213, 225, 226, 228, 229], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 123, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 228, 229], "io": [2, 9, 51, 52, 53], "log": [2, 10, 57], "mesh": [2, 11, 12, 16, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 198, 213, 225, 226, 228, 229], "model_step": [2, 75], "namelist": [2, 12, 76, 77, 78, 79, 123], "parallel": [2, 80, 81, 82, 83], "proven": [2, 13, 84], "remap": [2, 14, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "stream": [2, 12, 100, 101, 102, 103, 123, 213], "viz": [2, 107, 108, 156, 157, 170, 171, 172, 173, 182, 183, 198, 200, 213], "yaml": [2, 12, 109, 110, 111, 112, 113, 114, 115, 123], "build": [3, 209, 230], "serial": [4, 6, 96, 97], "docstr": 5, "modul": [6, 208, 209], "clean": 6, "file": [7, 12, 123, 204, 213, 214], "comment": 7, "symlink": [9, 53, 204], "download": [9, 51, 204], "spheric": [11, 16, 71, 72, 73, 74], "planar": [11, 16, 70], "uniform": [11, 222], "gener": 11, "model": [12, 123, 125, 126, 127, 128, 129, 195, 213, 230], "an": [12, 123, 213], "e3sm": [12, 123, 209, 230], "ad": [12, 204, 213], "updat": [12, 111, 209], "runtim": 12, "input": [12, 204], "partit": [12, 26], "pio": 12, "make": [12, 213], "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": [16, 213], "horizont": [16, 213], "field": 16, "from": [16, 123, 204, 209, 219], "global": 16, "lat": 16, "lon": 16, "plot": [16, 213], "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 140, 147, 167], "map_yaml_to_namelist": [25, 128], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 92, 204], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 127, 204], "set_resourc": 39, "add_step": 42, "configur": [43, 149, 160, 206, 210], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "list_cas": 54, "list_machin": 55, "list_suit": 56, "log_method_cal": 57, "icosahedralmeshstep": [58, 59, 60, 61, 62, 63, 64], "build_subdivisions_cell_width_lat_lon": 59, "get_cell_width": 60, "get_subdivis": 61, "make_jigsaw_mesh": [62, 67], "quasiuniformsphericalmeshstep": [65, 66, 67, 68, 69], "build_cell_width_lat_lon": 66, "compute_planar_hex_nx_ni": 70, "sphericalbasestep": [71, 72, 73, 74], "save_and_plot_cell_width": 73, "make_graph_fil": 75, "ingest": 76, "parse_replac": 77, "replac": 78, "write": [79, 84, 103, 112], "get_available_parallel_resourc": 80, "get_parallel_command": 81, "run_command": 82, "set_cores_per_nod": 83, "mappingfilestep": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "dst_from_lon_lat": 86, "dst_from_mpa": 87, "dst_from_point": 88, "dst_from_proj": 89, "dst_global_lon_lat": 90, "get_remapp": 91, "src_from_lon_lat": 93, "src_from_mpa": 94, "src_from_proj": 95, "run_single_step": 96, "run_test": 97, "setup_cas": [98, 99], "read": [100, 110], "update_default": 101, "update_tre": 102, "setup_suit": 104, "compare_tim": 105, "compare_vari": 106, "globe": 107, "plot_glob": 107, "plot_horiz_field": 108, "polarisyaml": [109, 110, 111, 112], "main_mpas_to_yaml": 113, "mpas_namelist_and_streams_to_yaml": 114, "yaml_to_mpas_stream": 115, "anvil": [116, 215], "intel": [116, 118, 119, 215, 217, 218], "gnu": [116, 117, 118, 119, 121, 215, 216, 217, 220], "chicoma": [117, 216], "cpu": [117, 121, 216, 220], "chrysali": [118, 217], "compymcnodefac": [119, 218], "machin": [120, 209, 219, 230], "support": [120, 195, 209, 219, 230], "other": [120, 204, 213, 219, 230], "perlmutt": [121, 220], "pm": 121, "ocean": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 223], "group": [122, 199, 207, 208, 213, 227], "baroclinic_channel": [122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 197, 225], "global_converg": [122, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 198, 226], "cosine_bel": [122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 198, 224, 226], "single_column": [122, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 200, 228], "oceanmodelstep": [122, 125, 126, 127, 128, 129], "potenti": [122, 123], "energi": [122, 123], "rpe": [122, 123, 130], "vertic": [122, 123, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 213, 222, 225, 226, 228, 229], "coordin": [122, 123, 213, 222], "v": 123, "map": 123, "omega": 123, "mpa": [123, 196], "set": [123, 209, 230], "mpi": [123, 219], "resourc": 123, "rest": 123, "compute_cell_count": [126, 139, 166], "compute_rp": 130, "baroclinicchannel": 131, "baroclinicchanneltestcas": [132, 133], "decomp_test": [134, 135, 197, 225], "decomptest": [134, 135], "default": [136, 137, 197, 213, 225], "forward": [138, 139, 140, 165, 166, 167, 177, 197, 198, 200, 213], "initial_st": [141, 142, 143, 180, 181, 197, 200, 213], "initialst": [141, 142, 143, 180, 181], "restart_test": [144, 145, 146, 147, 197, 225], "restarttest": [144, 145], "restart_step": [146, 147], "restartstep": [146, 147], "rpe_test": [148, 149, 150, 151, 152, 153, 197, 225], "rpetest": [148, 149, 150], "analysi": [151, 152, 153, 162, 163, 164, 198, 213], "threads_test": [154, 155, 197], "threadstest": [154, 155], "globalconverg": 158, "cosinebel": [159, 160, 161], "rmse": 163, "init": [168, 169, 198], "vizmap": [172, 173], "singlecolumn": 174, "cvmix": [175, 176, 200, 228], "ideal_ag": [178, 179], "idealag": [178, 179], "grid_1d": [184, 185], "generate_1d_grid": 184, "write_1d_grid": 185, "init_vertical_coord": 186, "partial_cel": [187, 188], "alter_bottom_depth": 187, "alter_ssh": 188, "zlevel": [189, 190, 191, 192], "compute_min_max_level_cel": 189, "compute_z_level_layer_thick": 190, "compute_z_level_resting_thick": 191, "init_z_level_vertical_coord": 192, "zstar": 193, "init_z_star_vertical_coord": 193, "initi": [196, 213, 225, 226, 228, 229], "condit": [196, 213, 225, 226, 228, 229], "boundari": 196, "forc": [196, 225, 226, 228, 229], "baroclinic_channel_test_cas": 197, "type": [198, 222], "ideal": [200, 228], "ag": [200, 228], "directori": 202, "structur": 202, "organ": 203, "attribut": [204, 206], "constructor": [204, 206], "output": [204, 213], "copi": 204, "depend": 204, "pull": 205, "request": 205, "pr": 205, "nightli": 205, "case": [206, 208, 213, 214, 230, 231], "overview": 208, "code": [208, 209, 213], "style": [208, 209], "packag": 208, "share": [208, 213], "within": 208, "quick": [209, 230], "start": [209, 213, 230], "develop": [209, 212, 213], "unix": 209, "shell": 209, "up": [209, 230], "repositori": 209, "beginn": 209, "conda": [209, 210, 219, 230], "environ": [209, 210, 230], "spack": [209, 230], "compil": 209, "system": 209, "albani": 209, "petsc": 209, "netlib": 209, "lapack": 209, "unknown": 209, "what": 209, "script": [209, 230], "doe": 209, "flag": 209, "activ": 209, "switch": 209, "between": [209, 213], "differ": 209, "troubleshoot": [209, 210], "creat": [209, 213], "onli": 209, "repo": 209, "worktre": 209, "advanc": 209, "user": [209, 212, 214, 230], "solver": 210, "error": 210, "when": 210, "proxi": 210, "lanl": 210, "mac": 210, "gethostbynam": 210, "fail": 210, "glossari": [211, 212], "": 212, "guid": 212, "tutori": [212, 213], "compass": 212, "new": 213, "get": 213, "vari": 213, "resolut": 213, "paramet": 213, "thing": 213, "out": 213, "defin": 213, "more": 213, "again": 213, "one": 213, "time": [213, 225, 226, 228, 229], "second": 213, "enhanc": 213, "dynam": 213, "comput": 213, "cell": 213, "count": 213, "superclass": 213, "studi": 213, "how": 213, "pass": 213, "data": [213, 220], "A": 214, "slurm": 219, "job": [219, 230], "queue": 219, "mpich": 219, "openmpi": 219, "No": 219, "forg": 219, "jupyt": 220, "notebook": 220, "remot": 220, "1d": 222, "grid": [222, 225, 226, 228, 229], "tanh_dz": 222, "60layerphc": 222, "100layere3smv1": 222, "3d": 222, "z": 222, "star": 222, "level": 222, "cosine_bell_cached_init": 224, "descript": [225, 226, 228, 229], "durat": [225, 226, 228, 229], "core": [225, 226, 228, 229], "thread_test": 225, "cosine_bell_with_viz": 226, "test_group_nam": 229, "test_case_nam": 229, "i": 230, "yet": 230, "load": 230, "standalon": 230}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [201, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [198, "mesh"], [225, "mesh"], [225, "id2"], [225, "id9"], [225, "id17"], [225, "id25"], [225, "id32"], [226, "mesh"], [228, "mesh"], [228, "id3"], [228, "id8"], [229, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [198, "viz"], [200, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"], [213, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [221, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [123, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [123, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.list.list_cases": [[54, "polaris-list-list-cases"]], "polaris.list.list_machines": [[55, "polaris-list-list-machines"]], "polaris.list.list_suites": [[56, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[57, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[58, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[59, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[60, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[61, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[62, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[63, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[64, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[70, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[72, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[73, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[74, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[75, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[76, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[77, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[78, "polaris-namelist-replace"]], "polaris.namelist.write": [[79, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[80, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[81, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[82, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[83, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[84, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[85, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[86, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[87, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[88, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[89, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[90, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[91, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[92, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[93, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[94, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[95, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[96, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[97, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[98, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[99, "polaris-setup-setup-cases"]], "polaris.streams.read": [[100, "polaris-streams-read"]], "polaris.streams.update_defaults": [[101, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[102, "polaris-streams-update-tree"]], "polaris.streams.write": [[103, "polaris-streams-write"]], "polaris.suite.setup_suite": [[104, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[105, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[106, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[107, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[108, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[109, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[110, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[111, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[112, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[113, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[114, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[115, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[116, "anvil"], [215, "anvil"]], "intel": [[116, "intel"], [118, "intel"], [119, "intel"]], "gnu": [[116, "gnu"], [118, "gnu"], [119, "gnu"]], "Chicoma": [[117, "chicoma"], [216, "chicoma"]], "chicoma-cpu, gnu": [[117, "chicoma-cpu-gnu"]], "Chrysalis": [[118, "chrysalis"], [217, "chrysalis"]], "CompyMcNodeFace": [[119, "compymcnodeface"], [218, "compymcnodeface"]], "Machines": [[120, "machines"], [219, "machines"]], "Supported Machines": [[120, "supported-machines"], [219, "supported-machines"]], "Other Machines": [[120, "other-machines"], [219, "other-machines"]], "Perlmutter": [[121, "perlmutter"], [220, "perlmutter"]], "pm-cpu, gnu": [[121, "pm-cpu-gnu"]], "ocean": [[122, "ocean"]], "Test Groups": [[122, "test-groups"], [207, "test-groups"]], "baroclinic_channel": [[122, "baroclinic-channel"], [197, "baroclinic-channel"], [225, "baroclinic-channel"]], "global_convergence": [[122, "global-convergence"], [198, "global-convergence"], [226, "global-convergence"]], "cosine_bell": [[122, "cosine-bell"], [198, "cosine-bell"]], "single_column": [[122, "single-column"], [200, "single-column"], [228, "single-column"]], "Ocean Framework": [[122, "ocean-framework"]], "OceanModelStep": [[122, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[122, "reference-potential-energy-rpe"]], "Vertical coordinates": [[122, "vertical-coordinates"]], "Ocean framework": [[123, "ocean-framework"]], "YAML files vs. namelists and streams": [[123, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[123, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[123, "setting-mpi-resources"]], "Model config options and streams": [[123, "model-config-options-and-streams"]], "Vertical coordinate": [[123, "vertical-coordinate"], [222, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[123, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[124, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[125, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[126, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[127, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[128, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[129, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[130, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[131, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[132, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[133, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[134, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[135, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[136, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[137, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[138, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[139, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[140, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[141, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[142, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[143, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[144, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[145, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[146, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[147, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[148, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[149, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[150, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[151, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[154, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[155, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[156, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[157, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[158, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[159, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[160, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[161, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[162, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[174, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[175, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[176, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[177, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[178, "polaris-ocean-tests-single-column-ideal-age-idealage"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate": [[179, "polaris-ocean-tests-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[180, "polaris-ocean-tests-single-column-initial-state-initialstate"]], "polaris.ocean.tests.single_column.initial_state.InitialState.run": [[181, "polaris-ocean-tests-single-column-initial-state-initialstate-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[182, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[183, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[184, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[185, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[186, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[187, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[188, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[189, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[190, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[191, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[192, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[193, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[194, "ocean-component"], [223, "ocean-component"]], "Models": [[195, "models"]], "Supported Models": [[195, "supported-models"]], "MPAS-Ocean": [[196, "mpas-ocean"]], "Initial conditions": [[196, "initial-conditions"]], "Boundary conditions": [[196, "boundary-conditions"]], "Forcing": [[196, "forcing"]], "framework": [[197, "framework"], [200, "framework"]], "baroclinic_channel_test_case": [[197, "baroclinic-channel-test-case"]], "initial_state": [[197, "initial-state"], [200, "initial-state"]], "forward": [[197, "forward"], [198, "forward"], [200, "forward"]], "default": [[197, "default"], [225, "default"]], "decomp_test": [[197, "decomp-test"], [225, "decomp-test"]], "restart_test": [[197, "restart-test"], [225, "restart-test"]], "threads_test": [[197, "threads-test"]], "rpe_test": [[197, "rpe-test"], [225, "rpe-test"]], "mesh types": [[198, "mesh-types"]], "init": [[198, "init"]], "analysis": [[198, "analysis"]], "Test groups": [[199, "test-groups"], [227, "test-groups"]], "cvmix": [[200, "cvmix"], [228, "cvmix"]], "ideal age": [[200, "ideal-age"], [228, "ocean-single-column-ideal-age"]], "Directory structure": [[202, "directory-structure"]], "Organization of Tests": [[203, "organization-of-tests"]], "Steps": [[204, "steps"]], "Step attributes": [[204, "step-attributes"]], "constructor": [[204, "constructor"], [206, "constructor"]], "constrain_resources()": [[204, "constrain-resources"]], "setup()": [[204, "setup"]], "runtime_setup()": [[204, "runtime-setup"]], "run()": [[204, "run"]], "inputs and outputs": [[204, "inputs-and-outputs"]], "Input files": [[204, "input-files"]], "Symlinks to input files": [[204, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[204, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[204, "downloading-and-symlinking-input-files"]], "Copying input files": [[204, "copying-input-files"]], "Output files": [[204, "output-files"]], "Cached output files": [[204, "cached-output-files"]], "Adding other steps as dependencies": [[204, "adding-other-steps-as-dependencies"]], "Test Suites": [[205, "test-suites"], [230, "test-suites"], [232, "test-suites"]], "Pull-Request (PR) suite": [[205, "pull-request-pr-suite"]], "Nightly suite": [[205, "nightly-suite"]], "Test cases": [[206, "test-cases"]], "TestCase attributes": [[206, "testcase-attributes"]], "configure()": [[206, "configure"]], "validate()": [[206, "validate"]], "Overview": [[208, "overview"]], "Code Style": [[208, "code-style"]], "Packages and Modules": [[208, "packages-and-modules"]], "Packages": [[208, "packages"]], "Modules": [[208, "modules"]], "Classes": [[208, "classes"]], "Code sharing": [[208, "code-sharing"]], "\u2026in the polaris framework": [[208, "in-the-polaris-framework"]], "\u2026within a component": [[208, "within-a-component"]], "\u2026within a test group": [[208, "within-a-test-group"]], "\u2026within a test case": [[208, "within-a-test-case"]], "Quick Start for Developers": [[209, "quick-start-for-developers"]], "Unix Shell": [[209, "unix-shell"]], "Set up a polaris repository: for beginners": [[209, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[209, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[209, "supported-machines"]], "Environments with Albany": [[209, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[209, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[209, "unknown-machines"]], "What the script does": [[209, "what-the-script-does"]], "Optional flags": [[209, "optional-flags"]], "Activating the environment": [[209, "activating-the-environment"]], "Switching between different polaris environments": [[209, "switching-between-different-polaris-environments"]], "Troubleshooting": [[209, "troubleshooting"], [210, "troubleshooting"]], "Creating/updating only the polaris environment": [[209, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[209, "building-e3sm-components"]], "Running polaris from the repo": [[209, "running-polaris-from-the-repo"]], "Code style for polaris": [[209, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[209, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[210, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[210, "proxy-on-lanl-macs"]], "gethostbyname failed": [[210, "gethostbyname-failed"]], "Glossary": [[211, "glossary"], [212, null]], "Polaris": [[212, "polaris"]], "User's guide": [[212, null]], "Developer's guide": [[212, null]], "Tutorials": [[212, null]], "Compass": [[212, "compass"]], "Developer Tutorial: Adding a new test group": [[213, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[213, "getting-started"]], "Making a new test group": [[213, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[213, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[213, "varying-resolution-and-other-parameters"]], "Adding the initial_state step": [[213, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[213, "creating-a-horizontal-mesh"]], "Adding a config file": [[213, "adding-a-config-file"]], "Adding the step to the test case": [[213, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[213, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[213, "creating-an-initial-condition"]], "Adding plots": [[213, "adding-plots"]], "Adding step outputs": [[213, "adding-step-outputs"]], "Adding validation": [[213, "adding-validation"], [213, "id1"]], "Test things out!": [[213, "test-things-out"]], "Adding the forward step": [[213, "adding-the-forward-step"]], "Defining model config options and streams": [[213, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[213, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[213, "adding-more-validation"]], "Test the test case again!": [[213, "test-the-test-case-again"]], "Adding a visualization step": [[213, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[213, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[213, "test-the-test-case-one-more-time"]], "Adding a second test case": [[213, "adding-a-second-test-case"]], "Enhancements": [[213, "enhancements"]], "Adding model config options in code": [[213, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[213, "adding-dynamic-model-config-options"]], "Computing the cell count": [[213, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[213, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[213, "adding-a-parameter-study"]], "Adding the steps to the test case": [[213, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[213, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[213, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[214, "config-files"]], "A \u201cuser\u201d config file": [[214, "a-user-config-file"]], "Test-case config files": [[214, "test-case-config-files"]], "config options": [[215, "config-options"], [216, "config-options"], [217, "config-options"], [218, "config-options"], [219, "config-options"], [220, "config-options"], [225, "config-options"], [225, "id7"], [225, "id14"], [225, "id22"], [225, "id30"], [225, "id37"], [226, "config-options"], [228, "config-options"], [228, "id1"], [228, "id6"], [228, "id13"], [229, "config-options"]], "Intel on Anvil": [[215, "intel-on-anvil"]], "Gnu on Anvil": [[215, "gnu-on-anvil"]], "Chicoma-CPU": [[216, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[216, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[217, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[217, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[218, "intel-on-compymcnodeface"]], "Slurm job queueing": [[219, "slurm-job-queueing"]], "MPICH": [[219, "mpich"]], "OpenMPI": [[219, "openmpi"]], "No MPI from conda-forge": [[219, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[220, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[220, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[220, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[222, "d-grid-type"]], "uniform": [[222, "uniform"]], "tanh_dz": [[222, "tanh-dz"]], "60layerPHC": [[222, "layerphc"]], "100layerE3SMv1": [[222, "layere3smv1"]], "3D vertical coordinates": [[222, "d-vertical-coordinates"]], "z-star": [[222, "z-star"]], "z-level": [[222, "z-level"]], "Test suites": [[224, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[224, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[225, "description"], [225, "id1"], [225, "id8"], [225, "id16"], [225, "id24"], [228, "description"], [228, "id2"], [228, "id7"], [229, "description"]], "vertical grid": [[225, "vertical-grid"], [225, "id3"], [225, "id10"], [225, "id18"], [225, "id26"], [225, "id33"], [226, "vertical-grid"], [228, "vertical-grid"], [228, "id4"], [228, "id9"], [229, "vertical-grid"]], "initial conditions": [[225, "initial-conditions"], [225, "id4"], [225, "id11"], [225, "id19"], [225, "id27"], [225, "id34"], [226, "initial-conditions"], [228, "initial-conditions"], [228, "id5"], [228, "id10"], [229, "initial-conditions"]], "forcing": [[225, "forcing"], [225, "id5"], [225, "id12"], [225, "id20"], [225, "id28"], [225, "id35"], [226, "forcing"], [228, "forcing"], [228, "id11"], [229, "forcing"]], "time step and run duration": [[225, "time-step-and-run-duration"], [225, "id6"], [225, "id13"], [225, "id21"], [225, "id29"], [225, "id36"], [226, "time-step-and-run-duration"], [228, "time-step-and-run-duration"], [228, "id12"], [229, "time-step-and-run-duration"]], "cores": [[225, "cores"], [225, "id15"], [225, "id23"], [225, "id31"], [225, "id38"], [226, "cores"], [228, "cores"], [228, "id14"], [229, "cores"]], "thread_test": [[225, "thread-test"]], "cosine_bell and cosine_bell_with_viz": [[226, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[226, "description"]], "test_group_name": [[229, "test-group-name"]], "test_case_name": [[229, "test-case-name"]], "Quick Start for Users": [[230, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[230, null]], "Loading polaris conda and spack environments": [[230, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[230, "e3sm-supported-machines"]], "Other machines": [[230, "other-machines"]], "Building supported E3SM components as standalone models": [[230, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[230, "setting-up-test-cases"]], "Running a test case": [[230, "running-a-test-case"]], "Running with a job script": [[230, "running-with-a-job-script"]], "Test Cases": [[231, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[54, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[55, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[56, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[57, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[58, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[70, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[71, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[75, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[76, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[77, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[78, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[79, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[80, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[81, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[82, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[83, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[84, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[85, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[85, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[96, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[97, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[98, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[99, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[100, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[101, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[102, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[103, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[104, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[105, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[106, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[107, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[108, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[109, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[109, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[110, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[111, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[112, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[113, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[114, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[115, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[124, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[124, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[125, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[125, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[126, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[130, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[134, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[134, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[135, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[136, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[136, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[137, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[138, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[138, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[140, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[141, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[141, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[142, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[143, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[144, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[144, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[147, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[148, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[148, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[149, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[154, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[154, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[155, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[156, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[156, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[157, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[158, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[158, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[159, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[159, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[160, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[174, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[174, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[175, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[175, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[176, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[177, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[177, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tests.single_column.ideal_age)": [[178, "polaris.ocean.tests.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[178, "polaris.ocean.tests.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[179, "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate"]], "initialstate (class in polaris.ocean.tests.single_column.initial_state)": [[180, "polaris.ocean.tests.single_column.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[180, "polaris.ocean.tests.single_column.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[181, "polaris.ocean.tests.single_column.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[182, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[182, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[183, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[184, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[185, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[186, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[187, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[188, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[189, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[190, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[191, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[192, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[193, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})