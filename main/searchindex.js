Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.run", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.run.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.get_available_cores_and_nodes", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.run", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.initial_state.InitialState", "polaris.ocean.tests.single_column.initial_state.InitialState.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "test_group_name", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 100, 110, 114, 140, 147, 210, 211], "date": [1, 4, 48, 192, 207, 211], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 36, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 75, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 114, 115, 120, 123, 124, 125, 126, 132, 134, 136, 138, 139, 141, 143, 144, 146, 148, 151, 153, 154, 156, 159, 162, 163, 165, 166, 168, 170, 172, 175, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228], "purpos": [1, 45, 205, 206, 209, 228], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 57, 58, 59, 62, 63, 65, 66, 67, 68, 71, 72, 80, 82, 84, 85, 91, 92, 97, 105, 106, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 192, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 219, 222, 223, 225, 226, 227, 229], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 66, 107, 111, 123, 125, 128, 182, 184, 190, 191, 192, 199, 202, 203, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 223, 225, 226, 227], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 65, 66, 71, 82, 85, 89, 95, 96, 97, 98, 100, 102, 105, 106, 108, 110, 115, 116, 118, 119, 120, 123, 125, 126, 138, 139, 140, 147, 166, 167, 177, 184, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 228, 229], "summar": 1, "what": [1, 9, 11, 14, 120, 206, 217, 226, 227], "capabl": [1, 14, 120, 202, 206, 216, 227], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 106, 132, 143, 153, 184, 190, 191, 204, 205, 207, 210, 212, 213, 214, 215, 217, 227], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 116, 118, 119, 120, 123, 192, 193, 195, 196, 198, 199, 200, 201, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 228, 229], "through": [1, 99, 206], "process": [1, 6, 12, 27, 82, 115, 202, 206, 207, 209, 210], "It": [1, 4, 12, 14, 32, 38, 107, 195, 202, 203, 204, 205, 206, 207, 209, 211, 216], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 66, 98, 99, 106, 107, 108, 116, 117, 118, 119, 120, 121, 123, 128, 143, 153, 192, 199, 202, 203, 204, 205, 207, 208, 211, 222, 223, 225, 226, 227], "clear": [1, 206], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 58, 65, 71, 85, 101, 102, 138, 146, 165, 177, 184, 190, 191, 202, 206, 207, 208, 209, 210, 227], "code": [1, 4, 5, 7, 10, 12, 32, 123, 192, 199, 202, 203, 204, 209, 210, 211, 218, 222, 225, 227], "do": [1, 4, 7, 9, 12, 14, 15, 110, 202, 204, 207, 208, 209, 216, 223, 227], "current": [1, 4, 6, 9, 19, 29, 32, 39, 105, 106, 120, 125, 177, 192, 196, 198, 199, 202, 206, 207, 209, 210, 211, 216, 219, 222, 223, 225, 227, 228, 229], "doe": [1, 7, 10, 12, 202, 210, 216], "primari": [1, 4, 7, 229], "challeng": 1, "respect": [1, 6, 7, 12, 16, 123, 202, 206, 223, 226], "softwar": [1, 75, 217, 227], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 105, 106, 107, 123, 170, 184, 190, 191, 192, 199, 200, 202, 204, 205, 206, 207, 211, 216, 217, 219, 226, 227, 228], "appropri": [1, 4, 12, 20, 70, 80, 120, 192, 195, 198, 199, 202, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 226, 227], "final": [1, 5, 195, 196, 198, 200, 202, 204, 223], "statement": [1, 10, 202, 209], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 49, 52, 77, 86, 87, 88, 89, 93, 94, 95, 100, 108, 109, 123, 130, 184, 190, 191, 199, 200, 201, 202, 206, 207, 209, 211, 216, 220, 226, 227], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 65, 106, 123, 143, 153, 182, 192, 194, 195, 196, 198, 199, 202, 207, 211, 216, 223, 227], "regard": 1, "success": [1, 51, 192, 199, 211], "last": [1, 203, 207, 222, 227], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 100, 102, 125, 149, 195, 202, 204, 205, 207, 210, 211, 222, 227], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 64, 69, 74, 100, 101, 102, 110, 111, 114, 115, 140, 147, 195, 199, 202, 204, 205, 206, 207, 209, 211, 217, 223], "your": [1, 3, 4, 9, 120, 192, 206, 207, 208, 211, 212, 213, 216, 217, 223, 227], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 82, 97, 98, 99, 104, 105, 106, 130, 151, 159, 162, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 217, 223, 227, 228, 229], "appear": [1, 120, 202], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 54, 60, 61, 70, 99, 115, 120, 123, 135, 145, 155, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 219, 222, 223, 226, 227, 229], "under": [1, 14, 32, 33, 105, 120, 123, 194, 202, 203, 207, 210, 219, 228], "head": [1, 194, 213], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 98, 99, 104, 106, 123, 125, 133, 135, 137, 144, 145, 150, 155, 176, 192, 195, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 219, 222, 223, 226, 227, 228, 229], "correspond": [1, 5, 15, 105, 106, 123, 192, 202, 207, 222], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 59, 66, 67, 70, 73, 85, 91, 105, 106, 125, 144, 184, 190, 191, 196, 199, 202, 205, 206, 207, 216, 219, 222], "propos": 1, "discuss": [1, 123, 202, 204, 205, 206, 222, 223], "technic": [1, 5], "issu": [1, 202, 203, 207, 223], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 120, 195, 202, 204, 205, 207, 208, 219], "focu": 1, "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 98, 99, 104, 109, 114, 116, 117, 118, 119, 120, 121, 134, 138, 140, 144, 146, 147, 148, 154, 167, 177, 192, 195, 198, 199, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 222, 226], "To": [1, 4, 10, 14, 15, 106, 120, 123, 192, 202, 206, 207, 212, 213, 214, 215, 216, 217, 219, 223, 227], "extent": [1, 11, 14, 222], "possibl": [1, 6, 9, 61, 123, 194, 202, 203, 206, 219], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 98, 99, 104, 105, 106, 192, 199, 202, 206, 207, 209, 222, 227, 228], "independ": [1, 4, 203, 209], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 116, 135, 145, 155, 196, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 222, 228], "thu": [1, 5, 12], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 106, 123, 125, 202, 205, 209, 211, 216, 219, 223, 228], "clean": [1, 202, 204, 207], "plan": [1, 11, 192, 202, 209, 228], "For": [1, 2, 4, 5, 10, 12, 14, 16, 80, 99, 116, 194, 195, 202, 206, 207, 209, 211, 212, 220, 223, 227, 228], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 116, 117, 118, 119, 120, 121, 192, 199, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 223, 227, 228, 229], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 62, 65, 67, 86, 90, 91, 93, 98, 99, 104, 106, 116, 117, 118, 119, 120, 121, 123, 192, 195, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 227, 228, 229], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 89, 95, 105, 106, 110, 123, 133, 135, 137, 145, 150, 155, 176, 192, 195, 196, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 216, 220, 223, 226, 227], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 58, 60, 61, 80, 87, 94, 100, 102, 105, 106, 107, 114, 120, 125, 168, 195, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 219, 227, 228, 229], "intend": [1, 6, 7, 203, 211, 228], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 97, 107, 120, 123, 132, 143, 153, 195, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 54, 106, 194, 196, 200, 202, 204, 206, 207, 208, 223, 227], "pde": 1, "solver": [1, 204, 207, 210, 227], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 117, 120, 121, 200, 204, 205, 206, 207, 227], "well": [1, 6, 7, 10, 11, 123, 187, 195, 198, 202, 207, 209, 211, 223, 227, 228], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 58, 105, 106, 136, 138, 143, 148, 153, 158, 165, 175, 177, 192, 195, 196, 198, 202, 203, 204, 209, 210, 211, 216, 222, 229], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 123, 196, 200, 202, 203, 204, 205, 206, 207, 210, 211, 216, 219, 223, 226, 227, 228, 229], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 75, 77, 82, 86, 87, 88, 89, 90, 93, 94, 95, 97, 99, 100, 101, 102, 105, 106, 108, 110, 111, 114, 115, 120, 125, 128, 133, 138, 162, 167, 170, 188, 192, 194, 195, 196, 198, 199, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 223, 226, 227, 228, 229], "low": [1, 108], "level": [1, 9, 10, 11, 15, 16, 123, 184, 185, 186, 187, 188, 189, 190, 191, 195, 200, 201, 202, 204, 205, 211, 222, 223, 225, 226, 229], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 58, 65, 71, 75, 80, 85, 86, 90, 93, 105, 106, 108, 109, 110, 115, 120, 123, 125, 132, 138, 141, 151, 159, 161, 162, 165, 170, 172, 177, 184, 190, 191, 194, 198, 204, 206, 207, 208, 212, 213, 214, 215, 216, 217, 220, 222, 226, 227], "declar": [1, 5], "interfac": [1, 8, 182, 183, 184, 190, 191, 202, 206, 207, 210, 219], "sequenc": [1, 4, 12, 201, 202, 206, 209, 227, 228, 229], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 80, 82, 83, 98, 105, 106, 108, 116, 117, 118, 119, 120, 121, 125, 138, 177, 195, 202, 204, 205, 206, 207, 208, 209, 211, 216, 217, 219, 223, 226, 227], "want": [1, 4, 9, 12, 14, 15, 43, 123, 202, 205, 207, 208, 211, 216, 217, 225, 227, 228], "math": 1, "syntax": 1, "almost": [1, 7], "ident": [1, 4, 15, 134, 144, 154, 195, 203, 206, 222], "latex": 1, "b": [1, 4, 207, 209, 227], "2": [1, 11, 12, 15, 33, 154, 194, 195, 200, 203, 207, 211, 213, 216, 219, 222, 223, 227], "2ab": 1, "imag": [1, 5, 16, 107, 108, 205, 226], "keep": [1, 4, 7, 12, 19, 50, 202, 204, 207, 226], "mind": [1, 4], "quit": [1, 200, 202, 204], "small": [1, 7, 38, 202, 205, 212, 213, 218, 219, 225, 227], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 70, 80, 82, 97, 99, 106, 111, 120, 123, 125, 138, 177, 184, 187, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 225, 226, 227, 228, 229], "prefer": [1, 202, 203, 211], "png": [1, 11, 16, 196], "okai": [1, 202], "size": [1, 11, 60, 61, 70, 123, 127, 129, 130, 195, 205, 211, 222, 223, 225, 226], "repo": [1, 4, 192, 210], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 219, 226, 227, 228, 229], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 120, 202, 205, 207, 216, 220, 227], "actual": [1, 4, 10, 202, 204, 207], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 202, 207, 211, 212, 213, 214, 215, 216, 217, 227], "project": [1, 4, 5, 57, 89, 95, 192, 206, 207, 211, 212, 213, 216, 227], "manag": [1, 208, 216], "item": 1, "git": [1, 13, 84, 192, 207, 211, 227], "branch": [1, 4, 120, 192, 199, 202, 207, 227], "timelin": 1, "staf": 1, "via": [1, 4, 12, 202, 216], "block": [1, 204], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 86, 90, 93, 123, 200, 202, 205, 206, 207, 208, 210, 211, 216, 222, 223, 227, 228], "def": [1, 5, 7, 9, 10, 14, 16, 199, 202, 204, 205, 206], "example_funct": 1, "foo": [1, 206], "return": [1, 5, 25, 49, 51, 59, 60, 61, 66, 70, 77, 81, 91, 99, 100, 102, 110, 114, 115, 123, 126, 128, 130, 139, 163, 166, 182, 185, 186, 187, 188, 189, 206, 223], "0": [1, 4, 5, 11, 12, 15, 16, 60, 86, 90, 93, 106, 116, 117, 118, 119, 120, 121, 123, 184, 189, 190, 191, 194, 196, 202, 205, 206, 208, 211, 213, 216, 219, 220, 222, 223, 225, 226, 227], "how": [1, 4, 10, 12, 65, 123, 201, 202, 204, 206, 211, 216, 217], "show": [1, 5, 11, 202, 216, 217, 222, 223, 226], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 80, 119, 120, 123, 129, 195, 196, 198, 201, 202, 204, 205, 206, 207, 211, 213, 215, 216, 217, 219, 223, 225, 227, 229], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 80, 98, 99, 104, 119, 120, 123, 128, 162, 192, 195, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 227, 228, 229], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 87, 94, 98, 99, 100, 104, 106, 108, 110, 123, 128, 134, 144, 154, 192, 194, 199, 201, 202, 204, 205, 206, 207, 211, 213, 216, 219, 222, 223, 226, 227, 228, 229], "regress": [1, 158, 195, 203, 209, 210, 222, 227, 229], "suit": [1, 5, 10, 15, 32, 41, 54, 96, 97, 99, 120, 195, 201, 202, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 220, 222], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 82, 85, 106, 123, 125, 138, 177, 195, 200, 202, 204, 205, 206, 207, 208, 216, 219, 227], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 65, 97, 111, 123, 192, 195, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 216, 219, 222, 223, 227, 229], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 66, 80, 123, 140, 147, 192, 199, 202, 204, 206, 207, 208, 210, 211, 212, 216, 217, 219, 222, 223, 227, 229], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 80, 81, 82, 83, 84, 98, 99, 104, 120, 123, 182, 184, 185, 186, 190, 191, 195, 202, 205, 206, 210, 211, 213, 216, 217, 219, 226, 227, 228], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 84, 96, 98, 99, 104, 119, 120, 143, 153, 170, 172, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 216, 223, 225, 227, 228], "properli": [1, 116, 118, 119, 211, 227], "addit": [1, 5, 7, 32, 199, 200, 202, 204, 205, 206, 207], "modif": [1, 5, 202], "nightli": [1, 207, 227, 229], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 105, 106, 192, 202, 204, 205, 206, 207, 209, 211, 222, 227, 228, 229], "might": [1, 9, 12, 14, 16, 202, 205, 207, 211, 216, 227], "made": [1, 4, 14, 32, 35, 41, 106, 202, 204, 206, 209, 228], "ensur": [1, 7, 12, 50, 195, 206, 207, 223, 225], "continu": [1, 202], "expect": [1, 10, 14, 199, 202, 207, 223, 225], "page": [2, 5, 212], "auto": 2, "summari": [2, 213], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 66, 98, 99, 123, 194, 195, 196, 200, 202, 203, 204, 206, 207, 209, 216, 220, 222, 223, 226, 227, 228], "relev": [2, 5, 7, 123, 212, 213, 214, 215, 216, 217, 226, 227], "main": [2, 5, 7, 12, 37, 120, 199, 205, 206, 207, 228], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 138, 165, 177, 195, 202, 203, 206, 207, 210, 219], "document": [2, 7, 12, 202, 206, 210, 211, 227], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 104, 193, 195, 196, 198, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 216, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229], "As": [3, 4, 11, 15, 60, 123, 202, 203, 204, 205, 206, 207, 211, 219, 223, 225, 229], "long": [3, 19, 29, 32, 39, 82, 125, 138, 177, 202, 222, 227], "follow": [3, 4, 5, 11, 12, 16, 57, 120, 184, 190, 191, 192, 194, 195, 202, 203, 204, 207, 208, 211, 216, 217, 219, 221, 223, 225, 227], "procedur": [3, 120, 207, 217], "conda": [3, 4, 13, 84, 116, 118, 119, 120, 192, 199, 206, 210, 211, 212, 213, 214, 215, 217], "environ": [3, 4, 80, 116, 118, 119, 120, 192, 199, 206, 210, 211, 212, 213, 214, 215, 216, 217], "spack": [3, 4, 116, 118, 119, 120, 208, 210, 212, 213, 214, 215, 216, 217], "compil": [3, 4, 12, 116, 117, 118, 119, 120, 121, 208, 210, 212, 213, 214, 215, 216, 217, 227], "system": [3, 4, 19, 29, 32, 39, 80, 82, 83, 116, 118, 119, 120, 125, 138, 177, 202, 208, 210, 211, 212, 213, 214, 215, 216, 217, 227], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 57, 77, 100, 116, 118, 119, 120, 123, 199, 200, 202, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 227], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 66, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 100, 102, 104, 105, 106, 107, 108, 116, 117, 118, 119, 120, 121, 138, 140, 143, 147, 153, 158, 160, 167, 173, 177, 184, 190, 191, 192, 194, 195, 196, 198, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 225, 226, 229], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 72, 84, 98, 99, 104, 105, 106, 116, 117, 118, 119, 120, 121, 123, 143, 153, 158, 173, 192, 195, 196, 198, 201, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 223, 226, 228], "alreadi": [3, 9, 12, 43, 53, 123, 138, 177, 204, 206, 207, 211, 216, 219, 223, 227], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 77, 84, 100, 104, 110, 120, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 227], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 54, 81, 82, 125, 138, 177, 202, 204, 206, 207, 212, 213, 214, 215, 217, 222, 227, 229], "Then": [3, 5, 9, 116, 117, 118, 119, 120, 121, 123, 192, 195, 198, 199, 202, 204, 205, 207, 216, 222, 227], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 57, 81, 82, 91, 98, 99, 104, 106, 119, 120, 125, 126, 136, 138, 139, 140, 144, 147, 151, 156, 162, 165, 166, 167, 175, 177, 180, 192, 195, 196, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 228, 229], "script": [3, 4, 10, 16, 47, 117, 120, 121, 206, 209, 210, 213, 216], "doc": [3, 5, 204, 217], "cd": [3, 192, 207, 213, 227], "rm": 3, "rf": 3, "developers_guid": 3, "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 59, 60, 62, 75, 106, 116, 117, 118, 119, 120, 121, 125, 129, 134, 144, 154, 172, 184, 190, 191, 192, 195, 202, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 222, 223, 227, 229], "html": [3, 220], "view": [3, 207], "open": [3, 207], "index": [3, 15, 184, 185, 186, 187, 188, 189, 190, 191, 204, 205], "act": [4, 206, 219], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 134, 136, 175, 195, 198, 202, 204, 211, 216, 222, 225, 227], "These": [4, 6, 12, 15, 17, 32, 123, 192, 194, 199, 202, 204, 206, 207, 210, 211, 216, 222, 227, 228, 229], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 84, 106, 120, 123, 195, 198, 202, 203, 204, 205, 208, 209, 213, 216, 217, 220, 222, 223], "describ": [4, 5, 12, 14, 84, 100, 102, 105, 106, 115, 120, 123, 195, 196, 198, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 223, 227], "below": [4, 12, 19, 29, 32, 39, 82, 120, 125, 138, 177, 192, 200, 202, 204, 205, 207, 211, 216, 219, 223, 225, 227], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 54, 96, 105, 106, 120, 123, 128, 189, 195, 198, 202, 204, 205, 206, 207, 210, 212, 213, 214, 215, 217, 219, 222, 223, 227, 228], "instal": [4, 207, 216, 217, 227], "abov": [4, 5, 12, 15, 200, 202, 203, 204, 205, 206, 207, 211, 223, 225, 227, 229], "develop": [4, 5, 6, 10, 11, 16, 120, 123, 192, 194, 199, 202, 203, 206, 208, 211, 216, 220, 227], "local": [4, 6, 9, 32, 34, 41, 192, 200, 202, 204, 207, 208, 211, 216, 217, 219], "off": [4, 207, 208], "http": [4, 5, 9, 53, 202, 206, 208, 210, 211, 217, 220, 227], "github": [4, 5, 206, 207, 210, 211, 220, 227], "com": [4, 5, 53, 206, 207, 210, 211, 227], "e3sm": [4, 5, 8, 9, 32, 109, 192, 199, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 58, 59, 65, 66, 71, 85, 98, 99, 104, 109, 120, 123, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 159, 162, 165, 168, 170, 172, 175, 177, 178, 180, 184, 190, 191, 196, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 227], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 116, 118, 119, 195, 196, 202, 204, 207, 208, 211, 216, 220, 221, 222, 225, 226, 227, 228, 229], "mode": [4, 12, 199, 207, 209, 210, 227], "mean": [4, 15, 80, 163, 196, 207, 219, 222, 229], "chang": [4, 6, 12, 14, 15, 65, 192, 199, 202, 203, 204, 206, 207, 209, 211, 213, 217, 219, 222, 227, 229], "reflect": [4, 207], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 57, 91, 96, 120, 123, 195, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 227], "tool": [4, 7, 10, 12, 14, 192, 199, 202, 207, 210, 211], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 66, 75, 78, 80, 82, 85, 91, 96, 106, 107, 108, 109, 110, 115, 116, 120, 123, 125, 126, 127, 128, 129, 138, 139, 140, 147, 159, 162, 166, 170, 177, 182, 184, 185, 186, 190, 191, 192, 194, 195, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 229], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 57, 58, 63, 65, 68, 71, 81, 82, 84, 85, 92, 96, 97, 98, 99, 104, 105, 106, 120, 123, 124, 125, 182, 192, 194, 195, 196, 198, 199, 200, 202, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 54, 58, 63, 65, 68, 71, 81, 82, 84, 85, 92, 96, 97, 98, 99, 100, 104, 105, 106, 120, 123, 124, 125, 131, 132, 134, 136, 138, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 154, 156, 157, 159, 160, 162, 164, 165, 168, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 229], "support": [4, 6, 11, 14, 32, 123, 184, 190, 191, 194, 196, 202, 204, 205, 206, 210, 211, 213, 217, 219, 222, 225, 228], "machin": [4, 6, 32, 34, 41, 84, 98, 99, 104, 192, 202, 204, 206, 210, 211, 212, 213, 214, 215, 217], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 58, 64, 65, 66, 69, 71, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 120, 125, 128, 138, 140, 147, 149, 160, 167, 177, 182, 184, 185, 186, 190, 191, 192, 195, 196, 198, 199, 202, 203, 204, 205, 206, 208, 210, 211, 219, 221, 227, 228], "h": [4, 12], "t": [4, 5, 7, 9, 10, 12, 32, 33, 115, 123, 138, 177, 202, 204, 206, 207, 208, 211, 213, 215, 216, 221, 222, 227, 228, 229], "n": [4, 59, 66, 67, 73, 202, 213, 216, 217, 222, 223, 225, 226, 227], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 58, 59, 60, 61, 62, 70, 81, 82, 85, 99, 123, 125, 126, 127, 129, 138, 139, 163, 166, 177, 192, 195, 202, 203, 204, 205, 206, 209, 211, 216, 219, 221, 222, 223, 225, 226, 227], "v": [4, 207, 229], "By": [4, 12, 15, 33, 34, 123, 192, 199, 204, 211, 222, 225], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 66, 71, 76, 84, 85, 86, 90, 93, 97, 98, 99, 101, 104, 116, 118, 119, 123, 125, 138, 175, 177, 192, 196, 198, 199, 202, 204, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 223, 225, 226, 227, 228, 229], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 82, 84, 98, 99, 123, 124, 125, 132, 138, 177, 184, 190, 191, 192, 195, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 216, 219, 220, 222, 223, 226, 227, 228], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 58, 65, 71, 85, 98, 99, 105, 106, 125, 138, 141, 146, 151, 156, 169, 170, 172, 177, 178, 180, 202, 206, 211, 222, 225, 227], "example_compact": [4, 192, 199, 211], "1km": [4, 204, 205, 222, 227], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 60, 116, 117, 118, 119, 120, 121, 123, 134, 138, 154, 177, 184, 190, 191, 195, 196, 198, 200, 202, 204, 207, 208, 211, 213, 216, 217, 219, 222, 223, 225, 226, 227], "test2": 4, "displai": [4, 6, 217], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 54, 57, 84, 98, 99, 104, 105, 106, 108, 192, 199, 202, 204, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 227, 228], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 84, 96, 98, 99, 104, 105, 106, 120, 143, 153, 170, 172, 192, 195, 199, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 227, 228], "help": [4, 11, 200, 202, 207, 210, 216, 220], "messag": [4, 6, 15, 204, 208, 217], "test_expr": [4, 54], "flag": [4, 202, 206, 208, 209, 211, 220, 222, 227], "suppli": [4, 5, 15, 115, 202, 207], "substr": 4, "regular": [4, 16, 54, 59, 66, 159, 162, 212, 215, 216, 217, 227], "express": [4, 54], "subset": 4, "think": 4, "search": [4, 54, 213], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 104, 105, 106, 195, 199, 200, 202, 203, 204, 205, 207, 209, 211, 213, 216, 223, 226], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 58, 65, 71, 75, 77, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 114, 123, 125, 128, 130, 132, 138, 146, 163, 165, 168, 170, 172, 177, 183, 199, 202, 204, 205, 206, 207, 209, 211, 217, 222, 227, 229], "singl": [4, 6, 16, 108, 174, 175, 178, 202, 204, 206, 209, 216, 225], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 60, 70, 77, 80, 82, 97, 100, 102, 105, 106, 110, 123, 125, 148, 163, 187, 195, 196, 202, 204, 208, 210, 211, 222, 223, 225, 226, 227, 229], "instead": [4, 10, 12, 19, 97, 116, 120, 202, 204, 206, 207, 212, 227, 229], "pass": [4, 6, 10, 11, 12, 15, 41, 70, 106, 107, 199, 202, 204, 205, 206, 207, 209, 227], "similarli": [4, 6, 192, 202, 207, 216, 227], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 56, 84, 104, 109, 125, 131, 138, 158, 165, 174, 177, 200, 201, 202, 203, 204, 205, 209, 210, 211, 216, 218, 221, 228], "result": [4, 11, 15, 51, 61, 70, 105, 106, 120, 123, 134, 144, 151, 154, 156, 180, 195, 196, 202, 203, 206, 207, 209, 211, 222, 223, 226, 229], "verbos": [4, 54, 56, 202, 229], "about": [4, 5, 6, 10, 12, 15, 32, 85, 109, 123, 202, 204, 205, 206, 207, 211, 213], "its": [4, 5, 6, 10, 14, 16, 32, 43, 91, 101, 199, 200, 202, 203, 204, 205, 206, 207, 209, 211, 212, 223, 227, 228], "descript": [4, 5, 211, 220], "short": [4, 136, 175, 202, 203, 204, 206, 222], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 81, 82, 104, 123, 124, 125, 134, 136, 175, 195, 198, 199, 200, 202, 203, 204, 205, 206, 209, 211, 212, 213, 214, 215, 216, 217, 227, 229], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 54, 58, 65, 71, 85, 125, 138, 170, 172, 177, 195, 200, 202, 204, 206, 227, 228], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 58, 63, 65, 68, 71, 72, 81, 82, 84, 85, 91, 92, 96, 97, 98, 99, 106, 123, 125, 126, 130, 132, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 194, 195, 196, 198, 199, 200, 201, 204, 205, 206, 209, 210, 211, 217, 219, 228, 229], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 58, 65, 71, 85, 125, 138, 170, 172, 177, 202, 204], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 96, 106, 192, 199, 202, 204, 205, 209, 210, 220], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 104, 107, 108, 123, 125, 194, 202, 204, 205, 207, 219, 228], "built": [4, 12, 98, 99, 104, 192, 199, 207, 210, 211, 216, 227], "execut": [4, 6, 12, 15, 19, 98, 99, 104, 125, 192, 199, 202, 207, 211, 212, 213, 214, 215, 216, 217, 227], "standalon": [4, 12, 119, 199, 207, 209, 210, 216], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 57, 75, 87, 94, 100, 102, 104, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 158, 159, 170, 183, 192, 193, 195, 196, 198, 199, 200, 202, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 225, 226, 227, 228, 229], "befor": [4, 6, 12, 14, 38, 202, 205, 206, 207, 208, 213, 217, 219, 223, 227], "w": [4, 207, 209, 227], "num": 4, "f": [4, 7, 9, 12, 204, 206, 207, 211, 217, 222, 227], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 57, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115, 120, 125, 129, 130, 140, 143, 147, 153, 170, 172, 183, 192, 195, 196, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 217, 219, 222, 223, 226, 227, 228], "m": [4, 12, 59, 66, 67, 73, 195, 198, 205, 207, 212, 213, 214, 215, 217, 219, 222, 223, 225, 227], "mach": [4, 32, 212, 213, 214, 215, 216, 217, 227], "p": [4, 207, 211, 227], "suite_nam": [4, 6, 97, 99, 104, 227], "specifi": [4, 12, 14, 15, 16, 34, 194, 202, 207, 211, 217, 222, 223, 226, 227], "either": [4, 5, 6, 10, 11, 12, 14, 60, 123, 192, 202, 207, 209, 211, 219, 225, 227], "onli": [4, 5, 6, 12, 14, 15, 41, 120, 192, 194, 196, 198, 199, 202, 204, 206, 210, 211, 213, 216, 217, 219, 221, 222, 223, 225, 227], "time": [4, 5, 6, 12, 15, 16, 32, 41, 108, 123, 130, 138, 148, 167, 177, 194, 195, 196, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 217, 227, 229], "wai": [4, 5, 11, 12, 32, 62, 67, 120, 123, 202, 204, 205, 206, 207, 208, 210, 216, 219], "altern": [4, 11, 227], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 98, 99, 143, 153, 199, 200, 202, 203, 204, 205, 206, 207, 211, 216, 222, 223, 225, 226, 227], "case_numb": 4, "multipl": [4, 5, 12, 15, 193, 203, 206, 216, 222, 227], "separ": [4, 5, 7, 12, 14, 15, 202, 203, 209, 223, 227], "space": [4, 5, 7, 11, 202, 207, 213, 216, 227], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 85, 125, 138, 177, 192, 199, 202, 203, 204, 205, 206, 207, 208, 210, 211, 216, 219, 220, 226, 227, 228], "few": [4, 11, 12, 19, 29, 32, 39, 82, 120, 125, 195, 198, 202, 206, 211, 216], "basic": [4, 5, 211, 213, 216, 227], "piec": [4, 199], "inform": [4, 5, 6, 32, 85, 106, 115, 202, 204, 207, 211, 213, 220, 227], "abl": [4, 116, 117, 118, 119, 121, 123, 202, 203, 205, 207, 216, 227], "place": [4, 12, 15, 107, 202, 204, 216], "download": [4, 6, 8, 32, 34, 40, 143, 153, 204, 206, 207, 211, 227, 229], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 194, 195, 200, 202, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 227, 228, 229], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 91, 100, 102, 103, 107, 108, 109, 115, 120, 170, 184, 190, 191, 202, 207, 210, 211, 212, 213, 214, 215, 216, 227, 228, 229], "locat": [4, 12, 15, 16, 41, 98, 99, 104, 192, 202, 207, 209, 211, 213, 216, 219, 222, 223, 227], "where": [4, 5, 12, 15, 32, 34, 41, 51, 84, 98, 99, 104, 107, 123, 184, 187, 190, 191, 192, 199, 201, 202, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 225, 226, 227, 229], "There": [4, 11, 184, 190, 191, 198, 200, 202, 206, 207, 208, 211, 227], "r": [4, 217, 223], "tell": [4, 207], "re": [4, 202, 206, 207, 209, 211, 216, 217, 223], "leav": [4, 16, 196, 204, 211, 223], "unknown": [4, 120, 206, 216], "component_path": [4, 98, 99, 104, 192, 199, 211, 227], "absolut": [4, 7, 32, 34, 50, 98, 99, 104, 192, 199, 202, 207, 227], "landic": [4, 8, 10, 17, 34, 57, 104, 199, 201, 202, 204, 205, 207, 209, 210, 211, 227, 228, 229], "e3sm_submodul": [4, 192, 199, 207], "mali": [4, 120, 199, 202, 207, 209, 211, 227, 228], "dev": [4, 5, 199, 201, 202, 205, 206, 207, 210, 220, 227], "albani": [4, 116, 118, 119, 120, 199, 211, 212, 213, 214, 217, 227], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 143, 153, 196, 204, 207, 209, 211, 216, 217, 219, 223, 227, 228], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 54, 80, 96, 97, 98, 99, 104, 106, 107, 108, 111, 123, 125, 126, 138, 139, 140, 147, 159, 162, 166, 167, 177, 202, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 225, 226, 227], "omega": [4, 25, 109, 125, 128, 192, 199, 206, 207, 209, 220, 227], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 64, 66, 69, 80, 81, 82, 83, 84, 98, 99, 104, 106, 107, 109, 110, 111, 112, 114, 115, 120, 125, 128, 140, 147, 160, 167, 182, 184, 185, 186, 190, 191, 192, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 210, 219, 227, 228], "point": [4, 47, 53, 88, 192, 194, 199, 204, 205, 206, 207, 211, 216, 227], "much": [4, 12, 202], "config_fil": [4, 98, 99, 104], "work_dir": [4, 9, 15, 32, 41, 84, 98, 99, 104, 105, 106, 202, 204], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 64, 69, 71, 98, 99, 104, 120, 127, 129, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 201, 202, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 228], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 72, 96, 101, 104, 106, 123, 170, 172, 192, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 226, 227], "recommend": [4, 5, 9, 16, 202, 203, 206, 207, 216], "itself": [4, 5, 7, 32, 199, 201, 202, 204, 205, 207, 227], "temp": 4, "scratch": [4, 207, 213, 217, 227], "avoid": [4, 202], "confus": [4, 12, 206, 207], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 74, 75, 82, 85, 97, 106, 123, 125, 130, 143, 153, 162, 170, 183, 195, 198, 204, 209, 211, 217, 227, 229], "compar": [4, 8, 15, 41, 98, 99, 104, 105, 106, 133, 135, 137, 145, 150, 155, 176, 196, 198, 203, 206, 209, 221, 222, 227, 229], "previou": [4, 15, 202, 221, 227, 229], "same": [4, 5, 7, 12, 15, 33, 34, 41, 105, 106, 123, 200, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 227, 228, 229], "baseline_dir": [4, 41, 98, 99, 104], "mani": [4, 6, 7, 123, 200, 202, 204, 206, 207, 209, 210, 222, 226], "valid": [4, 5, 6, 8, 41, 184, 185, 186, 187, 188, 189, 190, 191, 195, 198, 206, 207, 210, 219, 222], "sure": [4, 10, 14, 15, 106, 120, 134, 144, 154, 192, 195, 202, 206, 207, 209, 211, 216, 217, 222, 223], "timer": [4, 41, 44, 105, 203, 204, 206], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 83, 91, 106, 116, 118, 119, 125, 138, 177, 192, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 219, 222, 227], "both": [4, 5, 6, 11, 12, 15, 24, 106, 123, 140, 147, 195, 201, 202, 205, 207, 210, 211, 221, 225], "custom": [4, 6, 11, 14, 50, 51, 98, 99, 104, 192, 199, 211, 217, 227], "order": [4, 6, 11, 12, 123, 199, 202, 203, 207, 225, 227], "give": [4, 12, 15, 202, 206, 207, 211, 227], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 120, 123, 125, 184, 190, 191, 192, 195, 199, 202, 204, 206, 207, 209, 211, 216, 217, 219, 222, 223, 225, 227, 229], "after": [4, 5, 12, 14, 16, 32, 34, 35, 72, 91, 120, 185, 186, 192, 199, 202, 204, 207, 211, 213, 217, 227], "c": [4, 99, 120, 202, 207, 212, 213, 214, 215, 216, 217, 221, 227, 229], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 82, 107, 195, 202, 204, 206, 207, 226, 229], "resid": [4, 34], "test_suit": [4, 202], "build": [4, 8, 11, 12, 62, 67, 116, 117, 118, 119, 120, 121, 192, 196, 199, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217], "mpas_model": [4, 211], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 62, 65, 66, 67, 123, 143, 153, 202, 204, 206, 211, 217, 227], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 107, 120, 123, 192, 194, 202, 203, 204, 205, 207, 208, 209, 211, 217, 223, 225, 226, 227, 228], "baselin": [4, 6, 8, 15, 41, 98, 99, 104, 105, 106, 133, 135, 137, 145, 150, 155, 161, 176, 195, 198, 203, 206, 209, 221, 227], "comparison": [4, 15, 41, 105, 106, 204, 211], "against": [4, 6, 8, 15, 106, 161, 195, 198, 202, 221], "oppos": [4, 24, 126, 139, 140, 147, 159, 162, 166, 167], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 38, 39, 82, 85, 123, 125, 127, 129, 138, 177, 195, 202, 206, 209, 210, 212, 213, 214, 215, 216, 217], "parallel": [4, 14, 19, 29, 32, 38, 39, 125, 202, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 227, 228], "been": [4, 12, 15, 32, 41, 43, 91, 98, 99, 104, 116, 118, 119, 123, 162, 192, 199, 202, 204, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 227], "no_step": 4, "wherea": [4, 10, 202, 221, 228], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 97, 123, 199, 200, 202, 205, 207, 209, 211, 216, 219, 225, 227, 228], "clone": [4, 192, 200, 207, 227], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 120, 138, 177, 195, 202, 203, 206, 207, 208, 219, 222, 225, 229], "just": [4, 12, 19, 29, 32, 39, 54, 120, 125, 202, 206, 207, 209, 213, 217], "pickl": [4, 6, 202, 227], "latter": [4, 41, 120], "conveni": [4, 14, 184, 190, 191, 202, 209, 211, 227], "tab": [4, 227], "complet": [4, 6, 21, 22, 23, 227], "explicitli": [4, 5, 15, 123, 195, 202, 211, 227], "select": [4, 6, 108, 202, 207], "two": [4, 8, 144, 195, 196, 199, 202, 203, 205, 206, 207, 222, 223, 228], "edit": [4, 5, 106, 207, 227], "steps_to_run": [4, 15, 41, 97, 106, 202, 204, 211], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 58, 65, 71, 84, 85, 98, 99, 105, 106, 125, 138, 141, 146, 151, 156, 162, 165, 168, 170, 172, 177, 178, 180, 202, 204, 211, 227], "initial_st": [4, 5, 16, 132, 194, 196, 202, 204, 206, 211, 222, 223], "full_run": [4, 145, 222], "restart_run": [4, 145, 222], "Or": [4, 202, 211], "accomplish": [4, 202, 206], "thing": [4, 116, 117, 118, 119, 120, 121, 123, 202, 206, 210], "skip": [4, 6, 15, 106, 204, 229], "take": [4, 5, 9, 11, 12, 15, 50, 202, 203, 205, 207, 223, 229], "preced": [4, 50], "over": [4, 7, 12, 50, 107, 202, 206, 210, 219, 222, 225, 227], "special": [4, 209, 226], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 125, 202, 216], "polaris_cach": [4, 6, 17, 202], "symlink": [4, 6, 12, 32, 34, 204, 206, 207], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 75, 143, 153, 195, 198], "structur": [4, 11, 25, 128, 201, 204, 210], "without": [4, 15, 34, 202, 206, 207, 211, 215, 216, 226, 227], "redund": [4, 184, 190, 191, 195], "stamp": 4, "revis": [4, 211], "remov": [4, 12, 15, 97, 195], "older": 4, "ones": [4, 184, 190, 191, 206], "version": [4, 13, 27, 50, 84, 105, 106, 192, 195, 199, 200, 202, 205, 206, 207, 210, 211, 216, 217, 220, 222, 227], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 41, 45, 49, 50, 54, 58, 59, 62, 65, 66, 67, 71, 77, 82, 84, 85, 86, 87, 88, 89, 93, 94, 95, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 128, 131, 134, 138, 141, 144, 146, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 174, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 222, 223, 225, 226, 227], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 101, 119, 127, 138, 177, 192, 195, 202, 208, 210, 227], "cached_fil": [4, 17, 202], "json": [4, 6, 17, 48, 202, 217], "anvil": [4, 120, 202, 211, 216, 227], "chrysali": [4, 120, 202, 211, 216, 227], "sinc": [4, 12, 15, 115, 123, 195, 202, 204, 206, 207, 222, 223, 226], "copi": [4, 6, 34, 48, 98, 99, 104, 213, 227], "onto": [4, 207], "lcrc": [4, 6, 9, 48, 202, 206, 211, 212, 214, 216, 227], "server": [4, 6, 34, 48, 202, 206, 211, 217], "whose": [4, 202], "global_ocean": [4, 7, 9, 12, 199, 202, 204, 206, 207, 211, 227, 229], "qu240": [4, 12, 202, 206, 207, 211, 227, 229], "mesh": [4, 5, 8, 14, 19, 32, 75, 87, 94, 108, 123, 125, 126, 127, 129, 136, 139, 141, 159, 162, 163, 165, 166, 168, 170, 172, 175, 178, 184, 190, 191, 194, 195, 198, 200, 202, 204, 205, 206, 207, 209, 210, 211, 219, 221, 227, 229], "phc": [4, 202, 219, 229], "init": [4, 12, 16, 29, 39, 192, 199, 202, 204, 206, 207, 211, 227, 229], "ocean_cached_fil": 4, "pr": [4, 227, 229], "look": [4, 5, 9, 15, 205, 206, 211], "someth": [4, 5, 86, 90, 93, 207], "culled_mesh": [4, 202], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 85, 202, 204, 206], "210803": 4, "culled_graph": [4, 202], "info": [4, 10, 12, 19, 26, 75, 125, 202], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 202], "date_str": [4, 48], "let": [4, 202, 207, 209, 211, 217], "string": [4, 7, 12, 34, 89, 95], "choos": [4, 202, 206, 212, 213, 214, 215, 217, 228], "todai": [4, 48], "dry_run": [4, 48], "saniti": 4, "check": [4, 15, 80, 106, 207, 209, 211, 213, 217, 227, 229], "print": [4, 10, 15, 54, 106, 111, 202, 206, 229], "stdout": [4, 10, 32, 41, 202], "translat": [4, 25, 123, 128], "compass": [4, 57, 85, 192, 202, 206, 209], "convert": [4, 7, 11, 12, 123, 202], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 98, 99, 104, 114, 115, 125, 128, 129, 140, 143, 147, 153, 192, 195, 196, 199, 202, 204, 205, 206, 210, 211, 225], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 109, 114, 115, 129, 140, 143, 147, 153, 192, 194, 195, 198, 199, 202, 204, 205, 206, 211, 226], "yaml": [4, 8, 19, 20, 23, 24, 25, 125, 128, 129, 140, 147, 195, 198, 202, 210, 213, 217], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 109, 120, 123, 128, 192, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 217, 219, 222, 223, 225, 226, 227, 228, 229], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 109, 120, 123, 128, 192, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 219, 222, 223, 225, 226, 227, 229], "forward": [4, 5, 12, 15, 32, 130, 136, 137, 146, 148, 150, 175, 176, 192, 199, 202, 204, 206, 211, 222, 223, 226], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 194, 202, 204, 206, 207, 213, 215, 217, 227], "don": [4, 5, 12, 123, 202, 204, 206, 207, 215, 227, 228], "format": [4, 5, 9, 11, 12, 109, 115, 202, 203, 204, 205, 207, 211, 213], "note": [4, 5, 14, 15, 177, 217], "keyword": [4, 5, 12, 15, 16, 196, 202, 204, 223], "top": [4, 16, 184, 185, 186, 187, 188, 189, 190, 191, 194, 200, 219], "ignor": [4, 89, 95], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 60, 81, 91, 96, 120, 123, 125, 201, 202, 204, 205, 206, 207, 209, 211, 219, 227], "pars": [4, 7, 12, 20, 21, 22, 23, 77, 100, 102], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 106, 107, 108, 111, 128, 148, 195, 199, 202, 204, 205, 206, 210, 211, 219, 222, 223, 225], "doesn": [4, 7, 115, 202, 204, 211, 216, 227], "matter": 4, "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 107, 108, 202, 204], "myst": 5, "tip": [5, 207], "easi": [5, 34, 206], "start": [5, 6, 12, 101, 194, 195, 203, 205, 206, 210, 213, 216, 217, 220], "exist": [5, 7, 25, 32, 35, 53, 100, 102, 104, 128, 195, 202, 206, 207, 208, 216, 229], "tree": [5, 100, 102, 115], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 131, 132, 134, 136, 138, 144, 148, 151, 154, 156, 158, 159, 174, 175, 180, 192, 195, 196, 198, 199, 200, 201, 202, 204, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229], "pull": [5, 206, 207, 211], "request": [5, 12, 19, 26, 28, 125, 185, 186, 202, 206, 207, 208, 211, 223], "guid": [5, 123, 195, 198, 203, 206, 213, 216, 220], "baroclinic_channel": [5, 12, 15, 192, 197, 199, 202, 204, 205, 206, 209, 220, 224, 227, 228, 229], "label": [5, 107, 216, 227], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 120, 125, 196, 199, 202, 204, 205, 206, 207, 209, 215, 216, 221, 227, 228], "baroclin": [5, 45, 131, 132, 134, 136, 138, 141, 144, 148, 151, 154, 156, 177, 180, 195, 202, 204, 205, 222], "channel": [5, 45, 131, 132, 134, 136, 138, 141, 144, 148, 151, 154, 156, 177, 180, 195, 202, 204, 208, 222], "And": [5, 12, 207], "becom": [5, 202, 204], "who": [5, 207, 211, 217], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 65, 89, 95, 98, 99, 104, 120, 192, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 216, 219, 222, 223, 225, 228, 229], "brief": 5, "overview": [5, 210, 213, 217], "comment": [5, 203, 211], "appli": [5, 11, 12, 54, 194, 205, 222, 226], "vertic": [5, 16, 194, 195, 198, 202, 211, 218, 220], "grid": [5, 11, 14, 59, 66, 70, 73, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 123, 170, 173, 182, 183, 184, 185, 186, 187, 190, 191, 195, 196, 198, 202, 211], "initi": [5, 6, 32, 130, 133, 136, 141, 158, 168, 175, 178, 195, 196, 198, 202, 204, 205, 206, 208, 209, 210, 211, 219, 221, 228], "condit": [5, 32, 133, 136, 141, 158, 168, 175, 178, 195, 196, 198, 202, 203, 204, 205, 206, 209, 210, 211, 221, 228], "forc": [5, 15, 228], "common": [5, 7, 10, 38, 41, 45, 195, 196, 198, 202, 203, 204, 205, 206, 208, 209, 211, 216, 217, 227, 228, 229], "refer": [5, 12, 32, 130, 148, 184, 187, 190, 191, 202, 204, 206, 207, 209, 210, 219, 222, 227], "awar": [5, 120, 199, 216], "wish": [5, 12, 202, 207, 227, 229], "test_group_nam": 5, "specif": [5, 7, 12, 43, 120, 192, 199, 200, 205, 210, 211, 213, 216, 222, 226, 227, 229], "share": [5, 16, 123, 132, 192, 195, 198, 199, 200, 202, 204, 205, 207, 210, 212, 213, 214, 215, 216, 217, 218, 222, 226, 227], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 59, 66, 120, 123, 132, 143, 153, 202, 204, 205, 206, 210, 223, 228], "public": [5, 9, 202, 211], "api": [5, 10, 210], "underscor": 5, "md": 5, "eval": 5, "rst": [5, 12], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 132, 134, 136, 144, 148, 154, 195, 199, 204], "baroclinicchanneltestcas": [5, 195], "compute_cell_count": [5, 123, 195], "dynamic_model_config": [5, 195], "initialst": [5, 195, 198, 202, 204], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 123, 126, 139, 140, 147, 166, 167, 195, 198, 204, 206, 207, 209, 210, 211, 223, 227, 228], "across": [5, 12, 16, 195, 202, 203, 204, 205, 206, 209, 218, 222, 223], "ot": 5, "automat": [5, 7, 10, 12, 16, 123, 204, 206, 207, 211, 212, 214, 215, 216, 217, 227], "python": [5, 6, 7, 20, 38, 43, 200, 202, 204, 205, 206, 207, 209, 210, 211, 216, 217, 227], "begin": [5, 15, 195, 202, 207, 210, 216, 222, 223, 225], "numpydoc": 5, "text": [5, 6, 222, 223, 225], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 123, 184, 186, 187, 188, 189, 190, 191, 192, 204, 211, 213, 217], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 70, 80, 120, 123, 125, 126, 130, 139, 163, 166, 187, 188, 189, 195, 196, 198, 202, 207, 213, 214, 216, 217, 222, 227], "pressur": [5, 192, 211], "overli": 5, "ic": [5, 123, 192, 206, 207, 210, 211, 213, 219, 228], "shelf": [5, 123, 205, 206, 211, 219], "draft": [5, 219], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 57, 58, 60, 61, 62, 65, 70, 71, 73, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 123, 125, 126, 128, 130, 132, 134, 136, 138, 139, 140, 141, 144, 146, 147, 148, 151, 154, 156, 159, 162, 163, 165, 166, 167, 168, 170, 172, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 202, 204, 205, 222, 223, 225], "xarrai": [5, 14, 16, 108, 184, 185, 186, 187, 188, 189, 190, 191, 202], "dataarrai": [5, 185, 186, 187, 188, 189, 202], "sea": [5, 123, 186, 187, 188, 189, 192, 211, 219], "surfac": [5, 123, 186, 187, 188, 189, 192, 194, 211, 219, 222, 225], "height": [5, 123, 186, 187, 188, 189, 192, 211, 219], "mask": [5, 184, 187, 190, 191, 202, 211, 219], "landicepressur": [5, 204], "deviat": 5, "float": [5, 7, 12, 20, 58, 60, 61, 65, 70, 90, 106, 108, 132, 134, 136, 138, 141, 144, 148, 151, 154, 163, 177, 178, 202, 204], "densiti": [5, 11, 123], "seawat": 5, "displac": 5, "land": [5, 123, 192, 210, 211, 219, 228], "landicedraft": 5, "equal": [5, 206, 225], "entri": [5, 47, 78, 98, 99], "alwai": [5, 7, 10, 15, 50, 123, 192, 199, 206, 207, 211], "own": [5, 6, 9, 10, 16, 32, 202, 204, 206, 207, 209, 211, 223, 227, 228], "line": [5, 8, 30, 32, 82, 202, 203, 206, 207, 210, 227], "type": [5, 12, 14, 16, 20, 87, 94, 115, 175, 178, 202, 204, 205, 206, 207, 208, 209, 211, 222, 223, 225, 226, 229], "side": 5, "colon": 5, "doubl": [5, 123, 202, 203], "back": [5, 213, 227], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 61, 83, 192, 206, 207, 208, 211, 227], "arg": [5, 10, 32, 82, 202], "indic": [5, 6, 12, 14, 15, 32, 33, 99, 106, 108, 187, 200, 202, 208, 211, 219], "On": [5, 11, 207, 216], "next": [5, 205, 219, 227], "indent": [5, 202], "obviou": [5, 12], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 54, 56, 58, 65, 71, 75, 84, 85, 86, 89, 90, 93, 95, 97, 99, 100, 104, 105, 106, 107, 108, 110, 114, 125, 126, 138, 139, 166, 177, 202, 219, 222, 223, 225, 226], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 77, 100, 110, 111, 128, 140, 147, 204, 206, 211, 227], "els": [5, 6, 202], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 106, 107, 108, 111, 116, 117, 118, 119, 121, 123, 125, 194, 202, 204, 205, 207, 211, 212, 213, 214, 215, 216, 217, 222, 227, 228], "further": [5, 204, 205, 217, 226], "necessari": [5, 11, 199], "rais": [5, 7, 15, 32, 35, 51, 53, 80, 106, 123, 202, 204, 205, 206], "list_cas": 6, "list_machin": [6, 206], "list_suit": 6, "anywher": [6, 10, 207], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 77, 100, 105, 106, 109, 110, 114, 115, 199, 204, 205, 206], "later": [6, 15, 19, 29, 32, 39, 50, 106, 125, 202, 211], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 76, 77, 109, 123, 194, 202, 204], "properti": [6, 12, 194, 202, 216, 223], "clean_cas": 6, "delet": [6, 206, 207, 208, 227], "constant": [6, 58, 65, 66, 123, 194, 222, 223, 225, 226], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 109, 183, 202, 204, 207], "out": [6, 11, 79, 83, 108, 200, 202, 206, 207, 211, 219, 227], "proven": [6, 8, 50, 210, 211], "save": [6, 16, 51, 73, 195, 202, 204, 205, 216, 221, 222], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 41, 45, 50, 77, 84, 99, 100, 106, 109, 110, 111, 128, 196, 202, 204, 205, 206, 223], "target": [6, 9, 14, 19, 34, 53, 85, 120, 123, 125, 195, 202, 204, 223], "minimum": [6, 108, 123, 125, 195, 202, 211, 219, 222, 223, 225, 226], "determin": [6, 11, 12, 16, 34, 38, 41, 80, 115, 123, 129, 195, 196, 202, 205, 219, 222, 223, 226, 227], "maximum": [6, 15, 106, 108, 211, 219], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 82, 85, 123, 125, 138, 177, 202, 204], "cpus_per_task": [6, 12, 32, 36, 39, 82, 202], "attribut": [6, 10, 11, 12, 15, 38, 89, 95, 205], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 219, 222, 223, 225, 226], "runtim": [6, 24, 38, 123, 126, 139, 140, 147, 166, 167, 202, 204], "min_task": [6, 12, 14, 19, 29, 32, 39, 82, 85, 123, 125, 138, 177, 202, 204], "min_cpus_per_task": [6, 12, 32, 39, 82, 202], "fewest": 6, "least": [6, 11, 15, 199, 207], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 106, 125, 138, 177, 202, 210, 211, 223], "run_test": [6, 202, 204], "run_single_step": 6, "oper": [6, 40, 143, 153, 202, 204, 229], "log": [6, 8, 15, 16, 32, 41, 82, 106, 107, 108, 202, 204, 207, 210, 227], "figur": [6, 198, 200, 202, 205, 211], "cpu": [6, 12, 120, 202, 227], "per": [6, 12, 19, 29, 31, 32, 39, 82, 123, 125, 202, 211, 212, 213, 214, 215, 216, 217, 222, 223, 226], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 57, 58, 62, 65, 66, 67, 71, 72, 85, 91, 109, 123, 124, 125, 126, 128, 131, 132, 134, 136, 138, 139, 140, 141, 144, 146, 147, 148, 151, 154, 156, 158, 159, 162, 165, 166, 167, 168, 170, 172, 174, 175, 177, 178, 180, 195, 196, 199, 202, 204, 206, 223, 226], "wa": [6, 15, 51, 105, 106, 120, 133, 135, 137, 145, 150, 155, 176, 202, 204, 206, 207, 208, 211, 219, 227], "retriev": [6, 208], "store": [6, 15, 43, 123, 202, 204, 227], "dure": [6, 9, 12, 24, 32, 41, 123, 126, 139, 140, 147, 166, 167, 202, 204, 206, 211, 227, 228, 229], "txt": [6, 104, 203, 208], "case_output": [6, 10], "individu": [6, 7, 16, 106, 204, 206, 216, 217, 222, 227, 228], "involv": [6, 12, 15, 106, 202, 204, 209], "implement": [6, 7, 195, 196, 198, 206, 222, 223], "termin": [6, 15, 202, 207], "window": 6, "update_cach": 6, "_cached_fil": [6, 202], "map": [6, 14, 17, 25, 65, 66, 85, 107, 108, 128, 170, 172, 196, 207, 211], "origin": [6, 48, 207, 227], "enabl": [6, 16, 202, 208, 211, 217], "consum": [6, 202, 204, 229], "faster": [6, 207], "debug": [6, 116, 117, 118, 119, 121, 212, 213, 214, 215, 217], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 195, 198, 201, 202, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 225, 226, 227, 229], "mpas_tool": [7, 10, 11, 70, 195, 198, 202], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 80, 81, 83, 84, 107, 182, 184, 185, 186, 190, 191], "certain": [7, 15, 50, 202, 207, 211, 226], "add_from_packag": [7, 206], "content": [7, 12, 100, 102, 115, 200, 202, 206, 227], "found": [7, 12, 110, 206, 207, 210, 212, 213, 214, 215, 216, 217], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 73, 123, 199, 202, 204, 205, 206, 211], "cfg": [7, 43, 199, 204, 205, 206, 211, 227], "except": [7, 15, 32, 35, 51, 106, 202, 206], "first": [7, 12, 98, 99, 195, 198, 202, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 222, 223, 227], "second": [7, 11, 12, 138, 177, 202, 206, 222], "know": [7, 9, 11, 123, 202, 206, 207], "behavior": [7, 12, 97, 202, 203, 204], "noth": [7, 208, 223], "being": [7, 24, 32, 41, 96, 99, 106, 126, 139, 140, 147, 166, 167, 202, 204, 205, 206, 207, 219], "test_group": [7, 17, 18, 32, 41, 132, 134, 136, 144, 148, 154, 159, 175, 202, 204, 205], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 54, 56, 96, 97, 99, 104, 106, 108, 123, 125, 194, 202, 204, 205, 211, 213, 215, 217, 222], "happen": [7, 10, 12, 14, 106, 202, 204, 223], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 57, 58, 65, 71, 85, 109, 123, 124, 125, 131, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 174, 175, 177, 178, 180, 192, 195, 196, 198, 199, 202, 204, 205], "larg": [7, 15, 202, 204, 212], "those": [7, 12, 15, 41, 105, 106, 120, 204, 205, 206, 207, 210, 223, 226, 229], "configpars": [7, 82, 205], "getinteg": 7, "getfloat": [7, 10, 12, 14, 202], "getboolean": [7, 202], "getlist": 7, "comma": [7, 223], "integ": [7, 11], "boolean": [7, 108, 187], "etc": [7, 12, 101, 104, 199, 202, 204, 222], "getexpress": 7, "tupl": 7, "rang": [7, 108, 223], "numpi": [7, 11, 59, 66, 67, 73, 107, 123, 130, 182, 183, 202], "linspac": [7, 16, 196, 223], "arang": 7, "arrai": [7, 59, 66, 67, 73, 107, 123, 182, 183, 185, 186, 187, 188], "One": [7, 11, 227, 229], "advantag": [7, 12, 120, 206, 216], "track": [7, 19, 202, 204, 207], "associ": [7, 11, 12, 16, 184, 190, 191, 195, 204, 205, 209], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 58, 65, 71, 85, 125, 131, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 174, 175, 177, 178, 180, 199, 202, 204, 205, 206, 229], "command": [8, 13, 30, 32, 38, 82, 84, 202, 206, 207, 209, 210, 213, 216, 217, 227], "while": [8, 14, 16, 194, 195, 202, 205, 208, 209], "meant": [8, 206, 211], "simplifi": 8, "verifi": [8, 203, 211], "io": [8, 202, 204, 206, 210, 211, 220], "remap": [8, 16, 170, 196, 210, 223, 226], "visual": [8, 11, 14, 162, 196, 202, 204, 205, 209, 210, 223, 226], "lot": [9, 123, 202, 206], "o": [9, 10, 100, 102, 115, 206, 207, 211, 227], "relat": [9, 11, 12, 123, 192, 195, 198, 202, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 227], "handl": [9, 10, 204, 216], "intern": [9, 19, 41, 202, 207, 208], "lower": [9, 204, 222], "directli": [9, 11, 12, 14, 32, 200, 202, 206, 209, 210, 213], "aren": [9, 32, 33, 202, 206, 207, 229], "readm": [9, 204], "importlib": [9, 204], "resourc": [9, 12, 29, 39, 52, 82, 126, 138, 139, 166, 177, 195, 202, 204], "import": [9, 10, 11, 12, 14, 16, 199, 202, 204, 205, 206, 207, 209], "files_for_e3sm": [9, 204, 211], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 58, 65, 71, 75, 77, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 125, 130, 132, 138, 146, 163, 165, 168, 170, 172, 177, 183, 202, 204, 205], "did": [9, 15, 106], "add_input_fil": [9, 14, 33, 202, 204], "collect": [9, 45, 88, 124, 199, 201, 209], "though": [9, 32, 204, 206], "whenev": [9, 202], "flexibl": [9, 196, 204, 207], "care": [9, 11, 202, 205, 207], "No": [9, 210], "step_dir": 9, "database_root": [9, 202, 211, 212, 213, 214, 215, 216, 217, 227], "download_path": 9, "join": 9, "bathymetry_databas": [9, 202, 211], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 187, 202, 205, 219, 222, 223, 225, 226, 228], "url": [9, 34, 51, 202, 208, 211], "web": [9, 202, 211], "anl": [9, 202, 211], "gov": [9, 202, 208, 211, 213, 217], "mpas_standalonedata": [9, 211, 216], "dest_path": [9, 51], "remot": [9, 34, 207], "bathymetri": [9, 202, 211], "strategi": 10, "stderr": [10, 32, 41, 202], "loggingcontext": 10, "check_cal": [10, 202], "most": [10, 38, 120, 192, 199, 202, 205, 206, 207, 209, 211, 216, 217, 219, 220, 228], "won": [10, 206, 211], "logger": [10, 32, 41, 57, 82, 202, 204], "full": [10, 32, 97, 185, 186, 195, 196, 202, 204, 207, 210, 216, 219, 221, 222, 223, 225, 226, 227], "although": 10, "captur": 10, "insid": [10, 202, 206], "good": [10, 32, 202, 207], "idea": 10, "explicit": [10, 206], "go": [10, 202, 204, 205, 206, 207, 217], "even": [10, 11, 12, 15, 34, 50, 120, 202, 206, 207, 211, 216, 227], "subprocess": [10, 32, 82, 96, 202, 206, 208], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 123, 134, 144, 154, 195, 196, 198, 202, 206, 207, 227], "otherwis": [10, 15, 202, 204, 212, 213, 214, 215, 216, 217, 222], "intent": 10, "desir": [10, 11, 12, 15, 16, 106, 123, 202, 203, 211, 227], "trick": [10, 202], "direct": [10, 11, 12, 70, 195, 204, 217, 222], "snippet": 10, "dome": [10, 57, 202, 204, 205, 209, 227, 228], "setup_mesh": [10, 202], "setupmesh": [10, 202, 204], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 57, 120, 199, 205, 206, 207, 209, 211], "mpas_grid": [10, 202], "landice_grid": [10, 202], "l": [10, 106, 217], "sever": [10, 202, 204, 205, 206, 207, 209, 210, 226, 227, 229], "global": [11, 14, 45, 89, 95, 158, 159, 196, 202, 203, 205, 206, 209, 210, 211, 217, 223, 226, 227, 228], "quasiuniformsphericalmeshstep": [11, 196], "icosahedralmeshstep": [11, 196], "jigsaw": [11, 58, 62, 64, 65, 67, 69, 71, 159, 162, 202], "complex": [11, 15, 66, 204, 206], "build_cell_width_lat_lon": [11, 65], "opt": [11, 71], "make_jigsaw_mesh": [11, 65], "icosahedr": [11, 58, 60, 159, 162, 223], "significantli": [11, 219], "smooth": 11, "cell": [11, 12, 16, 58, 59, 60, 61, 65, 66, 67, 70, 73, 87, 94, 123, 125, 126, 139, 163, 166, 184, 185, 186, 187, 190, 191, 195, 202, 204, 205, 219, 222, 223, 225, 226], "quasi": [11, 65, 211, 223, 226], "hand": [11, 206], "restrict": [11, 226], "resolut": [11, 12, 14, 58, 61, 65, 66, 70, 86, 90, 93, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 159, 162, 163, 165, 175, 177, 178, 195, 196, 198, 200, 202, 204, 205, 211, 222, 223, 225, 226, 228], "subdivis": [11, 58, 59, 60, 61, 62], "icosahedron": [11, 59, 60, 61, 62], "tabl": [11, 207, 216, 227], "approxim": [11, 58, 60, 61, 65, 123, 126, 139, 166, 207], "width": [11, 58, 59, 60, 65, 66, 67, 73, 222], "km": [11, 58, 59, 60, 61, 65, 66, 67, 70, 73, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 165, 177, 178, 195, 196, 211, 222, 223, 225, 226, 228], "5": [11, 60, 123, 148, 195, 196, 202, 203, 204, 206, 208, 211, 222, 223, 226, 227], "240": [11, 60, 196, 211, 223], "6": [11, 60, 202, 220, 222, 227], "120": [11, 60, 203, 223], "7": [11, 60, 217, 223, 227], "60": [11, 12, 60, 196, 219, 223], "8": [11, 60, 195, 204, 207, 211, 222, 223, 227], "30": [11, 60, 205, 217, 222, 223, 225, 226], "9": [11, 16, 60, 196, 223, 227], "15": [11, 12, 60, 195, 222, 223, 226, 227], "10": [11, 15, 60, 192, 195, 204, 205, 211, 216, 219, 222, 225, 228], "11": [11, 60, 227], "3": [11, 60, 195, 202, 203, 205, 207, 208, 211, 216, 217, 219, 222, 223, 226, 227], "12": [11, 60, 213], "13": [11, 60, 222], "94": [11, 60], "spherical_mesh": [11, 66], "cell_width": [11, 58, 59, 60, 61, 65, 66, 67, 73], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 58, 65, 202], "plot": [11, 73, 107, 108, 123, 151, 156, 170, 180, 195, 196, 223, 228], "plot_cell_width": 11, "cell_width_filenam": [11, 73], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 59, 65, 66, 67, 73, 86, 88, 90, 93, 107, 170, 196, 211, 223], "lon": [11, 14, 59, 65, 66, 67, 73, 86, 88, 90, 93, 107, 170, 196, 211, 223], "sphere": [11, 196, 223], "vtk_lat_lon": 11, "far": [11, 184, 190, 191, 206], "But": [11, 120, 202, 205, 206, 211, 216], "hexagon": [11, 70], "planar_hex": [11, 70, 195, 198, 202], "make_planar_hex_mesh": [11, 70, 195, 198, 202], "x": [11, 16, 59, 66, 67, 70, 73, 89, 95, 108, 130, 202, 204, 222, 225], "y": [11, 12, 16, 70, 89, 95, 108, 195, 202, 204, 217, 222], "nx": [11, 70, 202, 205], "ny": [11, 70, 202, 205], "dc": [11, 202, 205], "distanc": [11, 70, 222], "adjac": [11, 219], "center": [11, 16, 70, 205, 219, 222], "admittedli": 11, "oddli": 11, "period": [11, 194, 195, 202, 222], "nonperiodic_x": [11, 202], "nonperiodic_i": [11, 202], "consider": [11, 184, 190, 191, 194], "compute_planar_hex_nx_ni": 11, "lx": [11, 70, 222, 225], "ly": [11, 70, 222, 225], "explan": 11, "subtleti": 11, "account": [11, 70, 212, 213, 215, 216, 217, 227], "behav": 11, "stagger": [11, 70], "strictli": [11, 206], "physic": [11, 70], "howev": [11, 202, 203, 204], "np": [11, 16, 196, 223], "sqrt": 11, "domain": [11, 19, 26, 70, 108, 123, 125, 130, 194, 205, 222, 223, 225, 226, 228], "extra": [11, 207], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 205], "max": [11, 123, 202, 223], "int": [11, 12, 19, 20, 29, 32, 36, 39, 54, 58, 59, 60, 61, 62, 70, 81, 82, 85, 108, 125, 126, 138, 139, 159, 162, 163, 165, 166, 177, 202, 225], "ds_mesh": [11, 16, 108], "creation": [11, 202, 211], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 82, 125, 202, 205, 206], "distant": 11, "futur": [11, 38, 202, 206, 209, 210, 211, 225, 227, 228], "descend": [12, 14, 123, 199, 202, 204, 205, 206], "modelstep": [12, 123, 202, 204], "update_pio": [12, 19, 125], "librari": [12, 116, 120, 207, 212, 213, 214, 215, 216, 217, 227], "make_graph": [12, 19, 125], "mpi": [12, 14, 85, 116, 119, 120, 125, 127, 129, 195, 202, 207, 208, 210, 212, 213, 214, 215, 217, 227], "construct": [12, 124, 182, 184, 185, 186, 190, 191, 194, 199, 204, 205, 222], "non": [12, 15, 194, 202, 227], "At": [12, 32, 41, 200, 201], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 82, 125, 138, 154, 177, 195, 202, 203, 209, 211, 213, 217, 222], "openmp_thread": [12, 19, 29, 32, 39, 82, 125, 138, 177, 202, 204], "definit": 12, "prefix": [12, 34, 207, 211], "end": [12, 195, 202, 204, 206, 207, 209, 213, 222, 223, 225], "yml": 12, "reason": [12, 14, 38, 202, 206, 229], "add_namelist_fil": [12, 19, 123, 202, 204], "add_yaml_fil": [12, 19, 202, 204], "add_model_config_opt": [12, 19, 202, 204], "add_streams_fil": [12, 19, 123, 202, 204], "themselv": [12, 206, 210], "question": [12, 202, 211], "constructor": [12, 195, 199, 205], "simpli": [12, 50, 136, 175, 199, 202, 204, 205, 207, 219, 227, 229], "safe": [12, 15, 202, 207, 222], "never": [12, 209], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": 12, "config_run_dur": [12, 204], "0024_00": 12, "00": [12, 15, 204, 217, 227], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 134, 209], "config_block_decomp_file_prefix": 12, "time_integr": 12, "config_time_integr": 12, "rk4": [12, 206, 229], "filename_templ": 12, "restart": [12, 41, 144, 146, 195, 198, 203, 206, 209, 222], "output_interv": 12, "0030_00": 12, "clobber_mod": 12, "truncat": 12, "reference_tim": 12, "0001": 12, "01": [12, 225], "01_00": 12, "tracer": [12, 16, 195, 196, 223], "xtime": 12, "normalveloc": [12, 15, 16, 135, 137, 145, 150, 155, 176, 194, 195, 198, 202, 225], "layerthick": [12, 15, 123, 133, 135, 137, 145, 150, 155, 176, 184, 188, 189, 190, 191, 195, 198, 202, 204], "refzmid": [12, 184, 190, 191, 202], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15], "clariti": [12, 202], "guarante": [12, 192, 207], "uniqu": [12, 204], "global_converg": [12, 192, 197, 220, 221, 224], "cosine_bel": [12, 226], "substitut": 12, "config_write_output_on_startup": 12, "0000_00": 12, "config_use_mom_del2": 12, "config_implicit_bottom_drag_coeff": 12, "0e": [12, 225], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": 12, "config_cvmix_background_viscos": 12, "worri": 12, "sometim": [12, 184, 190, 191, 202, 204, 209], "easier": [12, 202, 206, 207, 211, 227, 229], "togeth": [12, 209, 229], "seem": [12, 213, 217], "overkil": 12, "reli": [12, 202], "differ": [12, 14, 15, 50, 62, 67, 106, 120, 123, 138, 148, 192, 195, 199, 200, 202, 203, 204, 205, 206, 207, 209, 211, 213, 217, 222, 223, 226], "along": [12, 16, 195, 202, 204, 210], "could": [12, 14, 16, 196, 202, 203, 204, 206, 207, 223], "nu": [12, 138, 151, 177, 195, 202, 204], "viscos": [12, 138, 148, 151, 195, 202, 204, 206, 222], "hmix": 12, "config_mom_del2": [12, 195, 202], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 54, 96, 97, 98, 99, 104, 106, 107, 111, 125, 126, 138, 139, 140, 147, 159, 162, 166, 167, 177], "cannot": [12, 15], "known": [12, 32, 33, 196, 202], "beforehand": 12, "particularli": [12, 208, 226], "openmp": [12, 19, 29, 32, 39, 82, 116, 118, 119, 125, 138, 177, 202, 212, 213, 214, 215, 217], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 206, 209, 222, 227], "complic": [12, 205, 206, 207], "xml": [12, 100, 102, 103, 115, 209], "slightli": [12, 15], "sophist": 12, "immutable_stream": 12, "var_struct": 12, "var": [12, 101], "var_arrai": 12, "tag": [12, 210], "taken": [12, 19, 125, 196, 202, 217, 227], "past": 12, "experi": [12, 120, 206, 219], "shown": [12, 200, 204, 225], "featur": [12, 206, 207, 209, 211, 222, 225], "difficult": [12, 120, 216], "synchron": [12, 210], "equival": [12, 207, 212], "try": [12, 53, 206, 207, 208, 211, 213, 217, 227], "template_replac": [12, 22, 23], "treat": [12, 203, 206], "jinja2": [12, 22, 23, 100], "render": [12, 22, 23, 100], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 211], "qu240dynamicadjust": 12, "seri": [12, 123, 151, 156, 180, 196, 221], "dynam": [12, 125, 158, 192, 198, 211, 222, 223, 225, 226], "adjust": [12, 123, 158, 192, 211], "durat": [12, 195, 198, 203], "interv": 12, "spin": 12, "reus": [12, 202, 206, 211, 227], "qualit": [12, 15], "affect": [12, 15, 202, 207], "update_streams_at_runtim": 12, "fairli": [12, 204, 206, 207], "hour": [12, 203, 213, 217, 227], "turn": [12, 32, 49, 202, 208], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 219, 222, 225], "minut": [12, 195, 203, 222, 229], "dai": [12, 148, 195, 196, 198, 204, 222, 223, 225], "03d": 12, "_": [12, 85, 202, 204, 207, 225], "02d": 12, "forgotten": 12, "broken": [12, 202, 206], "immedi": [12, 57, 207], "miss": [12, 15, 202, 211], "detect": [12, 16, 211, 212, 214, 215, 216, 227], "gpmeti": [12, 211], "divid": [12, 219], "partition_graph": [12, 19, 125], "circumst": [12, 15, 32, 33, 202], "wast": 12, "manual": [12, 15, 41, 42, 202, 204, 228], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 39, 80, 81, 82, 120, 125, 203, 206, 207, 211, 212, 213, 214, 215, 216, 217, 227], "v1": [12, 219], "better": [12, 14, 120, 227], "v2": [12, 211, 219], "littl": [12, 206, 207, 210], "feel": [12, 202], "runtime_setup": [12, 29, 39, 204], "onc": [12, 195, 207, 211, 223, 227], "yourself": [12, 216], "fact": [12, 32], "culler": 12, "cull": [12, 195, 202], "model_step": [12, 202], "make_graph_fil": [12, 202], "field": [12, 15, 73, 75, 108, 170, 184, 190, 191, 194, 195, 198, 222, 223], "weight": [12, 14, 75, 184, 190, 191, 219], "weight_field": [12, 75], "frequent": [14, 192], "observ": [14, 210], "dataset": [14, 108, 184, 190, 191, 202], "region": [14, 16, 210, 211], "pyremap": [14, 91], "interpol": [14, 85, 196, 211], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 202, 207], "mappingfilestep": [14, 16], "woa": 14, "2023": 14, "__init__": [14, 17, 19, 32, 41, 45, 50, 57, 58, 65, 71, 85, 109, 124, 125, 131, 132, 134, 136, 138, 141, 144, 146, 148, 151, 154, 156, 158, 159, 162, 165, 168, 170, 172, 174, 175, 177, 178, 180, 199, 202, 204, 205, 206, 209], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 219], "bilinear": [14, 85, 196, 223, 226], "filenam": [14, 34, 35, 79, 86, 87, 88, 89, 93, 94, 95, 106, 110, 112, 202, 207], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 211], "destin": [14, 85, 86, 87, 88, 89, 90, 91, 173], "src_from_lon_lat": 14, "lon_var": [14, 86, 88, 93], "lat_var": [14, 86, 88, 93], "dst_from_mpa": 14, "mesh_nam": [14, 86, 87, 88, 89, 90, 93, 94, 95, 163, 165, 168, 170, 172], "qu60": 14, "subclass": [14, 62, 65, 66, 67, 72, 123], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 170, 196], "super": [14, 199, 202, 204, 205, 206], "128": [14, 203, 213, 214, 217], "cosine_bell_viz": [14, 16, 196, 223, 226], "dlon": [14, 90, 196, 223, 226], "dlat": [14, 90, 196, 223, 226], "remap_method": [14, 196, 223, 226], "src_from_mpa": 14, "dst_global_lon_lat": 14, "With": [14, 207], "approach": [14, 202, 205, 206, 207, 208, 219], "perhap": [14, 16, 35, 205], "cover": 14, "nearli": [14, 202, 209, 210], "situat": [14, 25, 128, 227], "workflow": [14, 202, 207], "critic": 15, "compare_vari": [15, 204], "filename1": [15, 106, 204], "filename2": [15, 106], "simpl": [15, 206, 227], "temperatur": [15, 133, 135, 137, 145, 150, 155, 176, 194, 195, 198, 202, 204, 222, 223, 225, 226], "salin": [15, 133, 135, 137, 145, 150, 155, 176, 194, 195, 198, 202, 204, 222, 223, 225, 226], "prognost": [15, 222], "4proc": [15, 135, 222], "8proc": [15, 135, 222], "alter": [15, 185, 186, 202, 204, 210, 219, 222, 223, 225, 226], "skip_if_step_not_run": [15, 106, 204], "possibli": [15, 202, 207], "failur": 15, "valueerror": [15, 80, 204, 205, 206], "quiet": [15, 97, 106, 111], "report": 15, "threshold": [15, 223], "l1": [15, 106], "00000000000000e": 15, "l2": [15, 106], "l_infin": 15, "linf": [15, 106], "home": [15, 207, 211, 213, 216, 217], "xylar": [15, 211, 216], "test_nightly_latest": 15, "10km": [15, 195, 204, 205, 222, 227, 228, 229], "threads_test": [15, 227, 229], "1thread": [15, 155, 195, 222], "2thread": [15, 155, 222], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 202, 204], "disabl": [15, 16, 194, 223, 228], "check_output": [15, 106], "zero": [15, 185, 186, 187, 188, 189, 194, 195, 223], "l1_norm": [15, 106], "l2_norm": [15, 106], "linf_norm": [15, 106], "nonzero": [15, 106], "easiest": [15, 207], "solut": [15, 119, 196, 203, 208], "clobber": 15, "error": [15, 32, 41, 123, 163, 196, 202, 207, 210], "judgment": 15, "enough": [15, 195, 202, 206], "problem": [15, 202, 207, 208], "compare_tim": 15, "integr": [15, 148, 195, 204, 206, 222, 223, 226], "rundir1": [15, 105], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": 16, "often": [16, 32, 202, 203, 204, 205, 206, 209, 211, 228, 229], "analysi": [16, 123, 195, 204, 206, 209, 210, 211, 223, 228], "routin": 16, "viz": 16, "plot_horiz_field": 16, "patch": [16, 108], "style": [16, 123, 210], "edg": [16, 87, 94, 108, 194], "polygon": 16, "character": 16, "accordingli": [16, 83], "d": [16, 108, 184, 190, 191, 194, 202, 225], "final_normalveloc": 16, "t_index": [16, 108], "vmin": [16, 108, 196, 223], "max_veloc": 16, "vmax": [16, 108, 196, 223], "cmap": [16, 108], "cmo": 16, "balanc": 16, "show_patch_edg": [16, 108], "globe": [16, 196, 223], "plot_glob": 16, "plot_land": [16, 107], "contin": [16, 107], "overlain": 16, "usag": [16, 211, 213, 217], "cmocean": 16, "noqa": [16, 57, 162, 165, 168], "f401": 16, "xr": 16, "open_dataset": [16, 202], "tracer1": 16, "isel": 16, "nvertlevel": [16, 108, 184, 190, 191, 202, 219], "out_filenam": [16, 103, 107, 183], "colormap_sect": [16, 107], "titl": [16, 107, 108], "colormap": [16, 107, 108, 196, 223], "cosin": [16, 162, 165, 168, 170, 172, 196, 223, 226], "bell": [16, 162, 165, 168, 170, 172, 196, 223, 226], "converg": [16, 196, 200, 203, 210, 223, 226], "colormap_nam": [16, 107, 196, 223], "viridi": [16, 196, 223], "norm": [16, 106, 107, 196, 223], "norm_typ": [16, 107, 196, 223], "linear": [16, 107, 108, 196, 222, 223], "norm_arg": [16, 107, 196, 223], "colorbar": [16, 107, 108, 196, 223], "tick": [16, 107, 196, 223], "mark": [16, 196, 207, 223], "ll": [16, 196, 206, 217, 223], "colorbar_tick": [16, 107, 196, 223], "matplotlib": 16, "standard": [16, 206, 207, 213, 227], "symlog": [16, 107], "symmetr": 16, "central": [16, 223], "logarithm": [16, 108], "color": [16, 108], "normal": [16, 194, 202, 203, 207, 216], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 202, 227], "dict": [17, 20, 22, 23, 25, 32, 41, 45, 77, 78, 84, 85, 99, 100, 107, 109, 110, 111, 128, 204], "kei": [17, 41, 45, 99, 204], "cach": [17, 19, 32, 34, 98, 99, 125, 210, 211, 216, 221, 227, 229], "testgroup": [18, 32, 41, 205, 206], "max_memori": [19, 29, 32, 39, 125], "mesh_filenam": [19, 75, 125], "graph_filenam": [19, 75, 125], "graph": [19, 26, 28, 38, 75, 125, 195, 202, 211], "make_yaml": 19, "pio": [19, 28, 31, 125, 195], "stride": [19, 31, 125], "consist": [19, 31, 125, 192, 207, 211, 222], "partit": [19, 28, 38, 75, 125, 195, 202, 211, 212, 213, 214, 215, 217, 227], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 82, 85, 123, 125, 138, 177, 202, 205, 206, 210, 211, 228], "accommod": [19, 29, 32, 39, 82, 125], "fewer": [19, 29, 32, 39, 82, 125, 138, 177, 202, 227], "amount": [19, 29, 32, 39, 125, 202, 218, 225], "memori": [19, 29, 32, 39, 125, 202, 211], "mb": [19, 29, 32, 39, 125, 211], "placehold": [19, 29, 32, 39, 125, 202, 227], "at_setup": [24, 123, 126, 139, 140, 147, 166, 167], "overridden": [25, 128, 202, 204], "diverg": [25, 128], "counterpart": [25, 123, 128], "nest": [25, 109, 111, 128], "graph_fil": 26, "parent": [27, 199, 202, 205], "done": [29, 39, 202, 227], "run_as_subprocess": [32, 202], "smallest": [32, 202, 209, 219, 228], "unit": [32, 86, 90, 93, 202, 209, 222, 228], "term": [32, 209], "necessarili": [32, 34, 209], "input_data": 32, "until": [32, 33, 202, 204, 227], "finish": [32, 33, 72], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 84, 109, 202, 203, 204, 208, 211, 227], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 202, 204], "base_work_dir": [32, 41, 202, 204], "log_filenam": [32, 41, 202], "redirect": [32, 202], "extern": [32, 192, 199, 202, 220], "access": [33, 204, 206, 207, 212, 216, 217], "database_compon": [34, 202], "work_dir_target": [34, 202], "come": [34, 202, 207, 212, 213, 214, 215, 216, 217, 220], "root": [34, 163, 192, 196, 199, 202, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 219, 227], "suffix": [34, 99, 202], "_database_root": 34, "append": 34, "available_cor": [36, 127], "constrain": [36, 126, 139, 166, 195], "total": [36, 81, 202, 203, 206, 211, 213, 227], "everi": [37, 195, 202, 204, 206, 208, 209, 222], "child": [37, 199, 202, 204, 206], "serial": [38, 202, 204, 210, 227], "subtask": 39, "stdout_logg": 41, "goe": [41, 202], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 130, 204, 206, 227], "statu": 41, "run_by_default": [42, 202, 204], "assum": [43, 100, 110, 204, 217, 222], "prior": [43, 202, 204], "greenland": [45, 205, 209, 210, 228], "eismint2": 45, "step_path": 48, "variant": [48, 195, 203, 205, 206, 207, 216, 219, 222, 223], "uncach": 48, "datestamp": 48, "yymmdd": [48, 211], "dry": [48, 203], "meta": 50, "empti": [50, 202, 206, 207, 209], "link_nam": 53, "overwrit": 53, "stackoverflow": 53, "55742015": 53, "7728169": 53, "symbol": [53, 202], "fileexistserror": 53, "unless": [53, 97, 207], "isadirectoryerror": 53, "decomposition_test": [57, 205, 227], "decompositiontest": [57, 205], "e501": [57, 162, 165, 168], "turquois": [57, 213], "usr": [57, 213, 227], "climat": [57, 212, 213, 214, 216, 227], "mhoffman": 57, "latitud": [59, 66, 86, 88, 90, 93, 107, 196, 223, 226], "longitud": [59, 66, 67, 73, 86, 88, 90, 93, 107, 196, 223, 226], "ndarrai": [59, 66, 67, 73, 107, 130, 182, 183], "degre": [59, 66, 67, 73, 90, 211, 222], "length": [59, 66, 67, 73], "180": [59, 66, 67, 73, 223], "90": [59, 66, 67, 73, 202, 223], "static": [60, 61], "rule": 60, "thumb": 60, "achiev": [61, 203], "close": [61, 210, 223], "uniform": [65, 70, 165, 195, 196, 205, 211, 222, 223, 225, 226], "natur": 70, "jigsawpi": [71, 202], "jigsaw_jig_t": 71, "meti": 75, "defaults_filenam": 76, "state": [80, 130, 194, 195, 196, 198, 202, 203, 223], "queu": 80, "slurm": [80, 83, 210, 211, 212, 213, 214, 215, 217, 227], "interact": [80, 213, 216, 217, 227], "batch": [80, 213], "job": [80, 120, 207, 210, 212, 213, 214, 215, 217], "slurm_job_id": 80, "substep": 82, "cpus_per_nod": 83, "map_filenam": 85, "src_grid_info": 85, "dst_grid_info": 85, "neareststod": [85, 196, 223, 226], "conserv": [85, 196, 223, 226], "map_": 85, "source_typ": 85, "dest_typ": 85, "1d": [86, 90, 93, 107, 123, 182, 183, 184, 185, 186, 187, 188, 190, 191], "2d": [86, 90, 93, 107], "5x0": [86, 90, 93], "5degre": [86, 90, 93], "coordin": [86, 88, 89, 93, 95, 107, 108, 184, 190, 191, 218, 220, 222, 223, 225, 226], "mesh_typ": [87, 94, 202, 204, 205], "vertex": [87, 94], "x_var": [89, 95], "y_var": [89, 95], "proj_attr": [89, 95], "proj_str": [89, 95], "proj": [89, 95], "remapp": 91, "remap_fil": 91, "step_is_subprocess": 96, "is_test_cas": 97, "steps_not_to_run": 97, "progress": 97, "cached_step": 98, "copy_execut": [98, 99, 104, 227], "serv": [98, 99, 104, 205], "_all": [98, 99], "streams_filenam": 100, "lxml": [100, 102, 115], "etre": [100, 102, 115], "new_child": 101, "children": 101, "sub": 101, "new_tre": 102, "rundir2": 105, "infin": 106, "toler": 106, "exclud": [106, 227], "data_arrai": 107, "colorbar_label": 107, "subtitl": 107, "field_nam": 108, "out_file_nam": 108, "z_index": 108, "cmap_set_und": 108, "cmap_scal": 108, "horizont": [108, 123, 194, 195, 198, 222, 225], "planar": [108, 123, 194, 225, 226], "depth": [108, 123, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 211, 219, 222, 223, 225, 226], "slice": 108, "fieldnam": 108, "present": [108, 207], "visibl": 108, "ax": 108, "classmethod": 110, "jinja": 110, "namelist_templ": 114, "polarisyaml": [114, 115], "processed_registry_filenam": 115, "registri": [115, 194], "steam": 115, "load_dev_polaris_0": [116, 117, 118, 119, 120, 121], "alpha": [116, 117, 118, 119, 120, 121], "1_anvil_intel_impi": [116, 120], "sh": [116, 117, 118, 119, 120, 121, 207, 208, 212, 213, 214, 215, 217, 227], "openmpi": [116, 120, 207, 210, 212, 214, 215, 227], "mvapich": [116, 120, 212], "impi": [116, 120, 212, 215], "ifort": [116, 118, 120, 212, 214], "ve": [116, 117, 118, 119, 121, 202, 207], "1_anvil_gnu_openmpi": 116, "gfortran": [116, 118, 119, 120, 207, 212, 214], "load": [117, 120, 121, 207, 210, 211, 212, 213, 214, 215, 216, 217], "1_chicoma": 117, "cpu_gnu_mpich": [117, 121], "crai": [117, 120, 121, 213, 217], "1_chrysalis_intel_openmpi": 118, "1_chrysalis_gnu_openmpi": 118, "yet": [119, 123, 202, 206], "again": [119, 192, 202, 207, 208, 227], "soon": [119, 227], "1_compy_intel_impi": 119, "1_compy_gnu_openmpi": 119, "attempt": [120, 210, 216], "particular": [120, 205, 207, 210, 213, 216, 227], "activ": [120, 216, 217, 227], "load_polaris_env": [120, 207, 227], "were": [120, 138, 177, 202, 206, 209, 211, 215, 219], "right": [120, 123, 204, 207, 211, 219, 223, 227], "therefor": [120, 202, 209], "gnu": [120, 207, 215, 216, 227], "lib": 120, "intel": [120, 216], "chicoma": [120, 216, 227], "mpich": [120, 207, 210, 213, 217, 227], "compi": [120, 215, 227], "pm": [120, 217, 227], "compymcnodefac": [120, 216], "perlmutt": [120, 213, 216, 227], "pretti": [120, 202, 206, 211], "forg": [120, 210, 227], "linux": [120, 207, 216], "configure_polaris_env": [120, 207, 208], "conda_path": [120, 207], "osx": [120, 216], "clang": [120, 207], "had": 120, "1_": 120, "1_pm": 121, "ever": [123, 206], "expand": [123, 219], "oceanmodelstep": 123, "decid": 123, "veri": [123, 199, 202, 206, 207, 225], "earli": [123, 220, 227], "stage": [123, 194, 202, 204, 207, 220, 227], "map_yaml_to_namelist": 123, "count": [123, 203], "heurist": 123, "exact": [123, 196, 206], "algorithm": [123, 138, 177, 195, 202], "200": [123, 204, 222], "round": [123, 223], "cell_count": [123, 126, 139, 166], "goal_cells_per_cor": [123, 223, 226], "pinch": 123, "2000": [123, 205], "max_cells_per_cor": [123, 223, 226], "seciton": 123, "control": [123, 196, 202, 211, 222, 223, 227], "scale": [123, 222, 227], "tri": [123, 206], "apport": 123, "precis": [123, 202], "caviti": [123, 206, 211, 219], "frazil": 123, "flux": [123, 194], "grid_1d": 123, "generate_1d_grid": 123, "vertical_grid": [123, 182, 184, 190, 191, 205, 211, 219, 222, 223, 225, 226], "z": [123, 185, 186, 187, 188, 189, 190, 191, 222, 223, 225, 226, 229], "star": [123, 189, 191, 222, 223, 225, 226, 229], "init_vertical_coord": 123, "minlevelcel": [123, 184, 186, 187, 188, 189, 190, 191], "maxlevelcel": [123, 184, 185, 186, 187, 188, 189, 190, 191, 202], "cellmask": [123, 184, 187, 190, 191], "zmid": [123, 184, 190, 191], "restingthick": [123, 184, 189, 190, 191, 202], "bottomdepth": [123, 184, 185, 187, 188, 189, 190, 191, 202], "entir": [123, 222, 229], "petersen": [123, 207, 222], "et": [123, 219, 222, 223], "al": [123, 219, 222, 223], "2015": [123, 222], "int_": 123, "rho": 123, "left": [123, 219, 223], "dv": 123, "sort": [123, 200, 206, 207], "increas": [123, 206], "compute_rp": 123, "csv": 123, "dynamic_ntask": 125, "estim": [127, 129], "initial_state_file_nam": 130, "output_fil": [130, 202], "rest": [130, 189, 219, 223], "potenti": [130, 148, 202, 204, 222], "energi": [130, 148, 204, 210, 222], "netcdf": [130, 211, 212, 213, 214, 215, 216, 217], "len": [130, 202], "superclass": [132, 195, 202], "run_time_step": [138, 177], "resources_fix": [138, 177], "shouldn": [138, 177], "dt": [138, 177, 222, 223, 226], "btr_dt": [138, 177, 222], "barotrop": [138, 177, 222, 225], "longer": [144, 195, 203, 222, 223, 229], "shorter": [144, 203], "rpe": [148, 151, 156, 180, 204, 222], "20": [148, 195, 203, 204, 222, 225], "less": [159, 162, 202, 219, 225], "globalocean": [159, 199], "cosinebel": [162, 165, 168, 196], "rmsevalu": 163, "squar": [163, 196], "ncell": [163, 202], "viz_map": 170, "column": [174, 175, 178, 207, 225, 227], "param": [175, 178, 204, 205], "singlecolumn": [175, 198], "ivar": 178, "posit": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 219], "layer": [182, 183, 184, 188, 189, 190, 191, 194, 195, 198, 211, 219, 222, 223, 225, 226], "meter": [182, 183], "bottom": [184, 185, 186, 187, 188, 189, 190, 191, 194, 211, 219, 222, 223, 225, 226], "thick": [184, 188, 189, 190, 191, 195, 198, 211, 219, 222], "stretch": [184, 190, 191, 219], "elev": [184, 190, 191, 219], "midpoint": [184, 190, 191], "reftopdepth": [184, 187, 188, 190, 191], "down": [184, 185, 186, 187, 188, 189, 190, 191, 219], "ref": [184, 190, 191], "middl": [184, 190, 191], "refbottomdepth": [184, 185, 186, 187, 188, 190, 191, 202], "refinterfac": [184, 190, 191], "element": [184, 190, 191], "vertcoordmovementweight": [184, 190, 191, 202], "movement": [184, 190, 191], "partial": [185, 186, 219, 222, 223, 225, 226], "seafloor": [185, 187, 188, 189, 219], "unstretch": 189, "shelv": [192, 211, 219], "ssh_adjust": [192, 202, 204, 211], "iter": [192, 211], "compass_branch": 192, "default_input": [192, 199, 211], "ocean_model": [192, 207, 211], "submodul": [192, 199, 207, 227], "latest": [192, 207, 210, 220, 227], "master": 192, "compat": [192, 207, 208, 210], "verison": 192, "maintain": [192, 227], "recurs": [192, 206, 207, 227], "whichev": [192, 219], "single_column": [192, 197, 220, 224], "design": [193, 202, 204, 206, 210, 216, 222], "minim": 194, "fcell": [194, 202, 223], "fedg": [194, 202, 223], "fvertex": [194, 202, 223], "free": [194, 211], "slip": 194, "solid": [194, 222, 223], "tangenti": 194, "enforc": [194, 207], "nonperiod": 194, "drag": 194, "mass": 194, "momentum": [194, 195], "scalar": 194, "rigid": 194, "veloc": [194, 195, 204, 207, 223, 227], "solv": [194, 208, 219], "mid": [194, 222], "vari": [194, 196, 202, 208, 216, 219, 223], "consult": 194, "tidal_forc": 194, "eddi": [195, 222], "addition": [195, 198, 212, 213, 214, 215, 217], "diffus": [195, 198], "50": [195, 205, 222], "prescrib": 195, "runtime_steup": 195, "decomptest": 195, "restarttest": [195, 205], "frequenc": 195, "threadstest": 195, "thread_test": 195, "rpetest": [195, 204], "intens": 195, "globalconverg": [196, 206], "studi": [196, 223], "advect": [196, 223, 225], "qu": [196, 211, 221, 223], "ico": [196, 221, 223], "fix": [196, 205], "spheric": [196, 223], "24": [196, 223], "shape": [196, 223], "blob": 196, "around": [196, 211, 222, 223], "rate": [196, 223], "distribut": 196, "dt_per_km": [196, 222, 223, 226], "rmse": 196, "exercis": [198, 223, 225], "kpp_test": 198, "mixedlayerdepthsoutput": 198, "100": [198, 219, 225], "dimens": [198, 222, 225], "profil": [198, 208, 225], "encompass": 199, "perspect": 199, "four": 199, "major": [199, 202], "add_test_group": [199, 206], "variou": [199, 202, 207], "univers": 199, "mix": [199, 205, 225], "ice_shelf_2d": [199, 229], "iceshelf2d": 199, "ziso": [199, 219, 228, 229], "landice_model": [199, 207], "organ": [200, 203, 205, 210], "green": 200, "blue": [200, 212, 227], "orang": 200, "red": 200, "repositori": [200, 210, 227], "laid": 200, "fig": 200, "among": [200, 205, 207], "organiz": 200, "concept": [200, 206, 209, 228], "simul": [202, 209, 221, 222, 226, 227], "multiprocess": [202, 206, 211], "outsid": 202, "emploi": 202, "prevent": 202, "unwant": 202, "outer": 202, "inner": 202, "variable_resolut": [202, 205, 227], "dome_varres_grid": 202, "calcul": [202, 204], "signific": [202, 203, 204], "neglig": 202, "meshstep": 202, "getint": 202, "mesh_cpus_per_task": 202, "mesh_min_cpus_per_task": 202, "previous": 202, "processor": [202, 222], "readi": [202, 217], "write_netcdf": 202, "convers": 202, "generate_grid": 202, "dsmesh": 202, "graphinfofilenam": 202, "use_dist": [202, 222], "gradient_width_dist": [202, 222], "gradient_width_frac": [202, 222], "bottom_temperatur": [202, 222], "surface_temperatur": [202, 222, 225], "temperature_differ": [202, 222], "coriolis_paramet": [202, 222, 225], "bottom_depth": [202, 211, 219, 222, 223, 225, 226], "vert_level": [202, 211, 219, 222, 223, 225, 226], "ones_lik": 202, "xcell": 202, "ycell": 202, "xmin": 202, "min": [202, 222, 225], "xmax": 202, "ymin": 202, "ymax": 202, "ymid": 202, "xperturbmin": 202, "xperturbmax": 202, "perturbationwidth": 202, "yoffset": 202, "sin": [202, 222], "pi": [202, 219, 222, 223], "temp_vert": 202, "frac": [202, 219, 222], "logical_and": 202, "transpos": 202, "3rd": 202, "crest": [202, 222], "wave": [202, 222], "expand_dim": 202, "dim": 202, "axi": 202, "broadcast": 202, "zeros_lik": 202, "xedg": 202, "nedg": 202, "dtype": 202, "xvertex": 202, "commandlin": 202, "explor": [202, 205, 219], "harm": 202, "likewis": 202, "subsequ": [202, 209, 229], "arisen": 202, "now": [202, 207, 211, 216], "omit": [202, 227], "problemat": 202, "usual": [202, 204, 207, 227], "isn": [202, 206], "forwardstep": 202, "mesh_path": 202, "mesh_step": 202, "with_ice_shelf_cav": [202, 204], "initial_state_target": 202, "adjusted_init": [202, 204], "forcing_data": 202, "entha_analy_result": 202, "mat": 202, "enthalpy_benchmark": 202, "ourselv": 202, "reduc": 202, "firewal": 202, "bedmachineantarctica_v2_and_gebco_2022_0": 202, "05_degree_20220729": 202, "slate": 202, "icepresent_qu60km_polar": 202, "practic": [202, 206, 207], "u": [202, 216, 217], "straightforward": 202, "commonli": [202, 209], "expens": [202, 203], "mechan": 202, "notat": [202, 226], "That": [202, 206, 209, 227], "word": 202, "ff": 202, "quwisc240": [202, 206, 227, 229], "90c": 202, "91c": 202, "92": [202, 219], "91": 202, "sowisc12to60": [202, 227, 229], "performance_test": [202, 229], "effici": 202, "transfer": 202, "feasibl": 202, "nor": 202, "add_depend": 202, "unpickl": 202, "overhead": 202, "philosophi": [203, 206], "context": 203, "namesak": 203, "256": [203, 213, 217], "quicker": 203, "32": [203, 227], "exce": 203, "limit": [203, 207, 222], "offer": 203, "benefit": [203, 210], "catch": 203, "bug": 203, "covereag": 203, "timestep": 203, "exhaust": 203, "recent": [203, 220], "merg": 203, "reach": 203, "steadi": 203, "encount": [203, 208], "wet": 203, "fundament": 204, "incorpor": 204, "deprec": 204, "constrain_resourc": 204, "smoke_test": [204, 205], "smoketest": [204, 205], "velo_solv": 204, "sia": [204, 207], "fo": 204, "add_step": 204, "runmodel": 204, "run_step": 204, "0200": 204, "00_00": 204, "fine": [204, 225], "recip": 204, "rpe_test": [204, 206, 227], "res_param": [204, 205], "144": 204, "36": [204, 212, 216, 227], "4km": [204, 205, 222, 227], "unsupport": [204, 205], "enumer": 204, "rpe_test_": 204, "_nu_": 204, "deliber": 204, "chosen": [204, 225], "demonstr": 204, "clumsi": [204, 206], "rpe_test_1_nu_1": [204, 222], "rpe_test_2_nu_5": [204, 222], "filesfore3sm": 204, "configure_global_ocean": 204, "with_bgc": 204, "po4": 204, "no3": 204, "sio3": 204, "nh4": 204, "fe": [204, 213], "o2": 204, "dic": 204, "dic_alt_co2": 204, "alk": 204, "dofe": 204, "dop": 204, "dopr": 204, "donr": 204, "zooc": 204, "spchl": 204, "spc": 204, "spfe": 204, "spcaco3": 204, "diatchl": 204, "diatc": 204, "diatf": 204, "diatsi": 204, "diazchl": 204, "diazc": 204, "diazf": 204, "phaeochl": 204, "phaeoc": 204, "phaeof": 204, "dm": 204, "dmsp": 204, "prot": 204, "poli": 204, "lip": 204, "conceptu": [205, 206], "realist": [205, 210, 228], "2000m": [205, 227], "34": [205, 227], "halfar": 205, "cism": 205, "dome_typ": 205, "closest": 205, "put_origin_on_a_cel": 205, "hydrologi": 205, "hydro": [205, 228], "dome_viz": 205, "time_slic": 205, "save_imag": 205, "hide": 205, "hide_fig": 205, "add_test_cas": 205, "restart_test": [205, 227, 229], "talk": 205, "16": [205, 211, 225, 227], "10e3": 205, "40": [205, 215], "126": 205, "4e3": 205, "160": [205, 222], "500": [205, 211, 219, 222], "held": 205, "initial_condit": 206, "dig": [206, 211], "infrastructur": 206, "background": 206, "behind": 206, "adher": 206, "pep8": [206, 207], "bot": [206, 219], "violat": 206, "pleas": [206, 207, 227], "consid": 206, "editor": 206, "pycharm": [206, 207], "spyder": 206, "linter": 206, "flake8": [206, 207], "discourag": 206, "reformat": 206, "autopep8": 206, "undesir": 206, "util": 206, "lint": 206, "wildcard": 206, "vim": 206, "plugin": 206, "id": [206, 207], "commit": [206, 207], "why": 206, "sound": 206, "subpackag": 206, "understand": [206, 211], "releas": [206, 210, 216, 220, 227], "our": [206, 227], "downstream": 206, "tutori": [206, 207], "clu": 206, "intro": 206, "docstr": [206, 210], "strip": 206, "mpas_ocean": 206, "hidden": 206, "shortcut": [206, 227], "referenc": 206, "mention": 206, "dot": 206, "charact": 206, "unix": [206, 210], "distinct": 206, "mayb": 206, "machine_config": 206, "endswith": 206, "splitext": 206, "exactli": [206, 207, 219], "move": [206, 226], "renam": 206, "visa": 206, "versa": 206, "comfort": 206, "inherit": 206, "orient": 206, "program": [206, 211], "led": 206, "felt": 206, "contribut": 206, "hesit": 206, "predecessor": [206, 209, 210], "harder": 206, "outcom": 206, "augment": 206, "explain": 206, "hope": 206, "dens": 206, "learn": 206, "curv": 206, "worth": 206, "skill": 206, "broadli": 206, "applic": [206, 207, 226], "endeavor": 206, "readabl": 206, "manipul": 206, "get_available_cores_and_nod": 206, "theoret": 206, "dozen": 206, "split": 206, "theori": 206, "biogeochemistri": 206, "bash": [207, 208, 227], "ksh": 207, "mac": [207, 210], "csh": 207, "tcsh": 207, "temporarili": 207, "switch": [207, 211], "bin": [207, 217, 227], "obtain": [207, 213], "recogn": [207, 211, 227], "mambaforg": [207, 216, 227], "permiss": 207, "miniconda3": 207, "unifi": [207, 217], "anyon": 207, "caus": [207, 213, 217, 219], "person": [207, 208], "base_path_to_install_or_update_conda": 207, "with_albani": 207, "with_netlib_lapack": 207, "with_petsc": 207, "flavor": 207, "login": [207, 213, 217], "troubl": 207, "recognit": 207, "trilino": 207, "downsid": 207, "unneed": 207, "laptop": [207, 211], "workstat": 207, "deploy": 207, "shallow": [207, 223, 226], "hpc": [207, 213, 216], "touch": 207, "update_spack": 207, "reinstal": 207, "scorpio": [207, 216, 227], "esmf": [207, 227], "caution": 207, "deploi": [207, 212, 213, 214, 215, 216, 217], "load_": 207, "encod": 207, "load_dev_polaris_": 207, "env_nam": 207, "dev_polaris_": [207, 208], "safest": 207, "rerun": 207, "load_dev_polari": 207, "echo": 207, "rememb": 207, "recreat": [207, 208], "incorrect": 207, "unus": 207, "session": 207, "pip": 207, "substanti": 207, "risk": 207, "rare": 207, "correct": 207, "wih": 207, "env_onli": 207, "mpas_make_target": [207, 227], "scientif": [207, 227], "_albani": 207, "instruct": 207, "proce": 207, "workdir": [207, 227], "es3m": 207, "compli": 207, "convent": 207, "memor": 207, "guidelin": 207, "stai": 207, "complianc": 207, "checker": 207, "pre": 207, "isort": 207, "mypi": 207, "77": 207, "e302": 207, "blank": 207, "resolv": 207, "simpler": 207, "mkdir": 207, "fetch": 207, "new_branch_nam": 207, "put": 207, "elsewher": 207, "disk": [207, 211, 213, 217], "respons": 207, "simplest": 207, "your_new_branch": 207, "checkout": 207, "suggest": 208, "geo": 208, "cartopi": 208, "14": 208, "np110py27_4": 208, "calledprocesserror": 208, "deploy_tmp": 208, "spec": [208, 217], "vpn": 208, "occur": 208, "site": 208, "shell": [208, 210], "honor": 208, "wide": 208, "coupl": [208, 210], "spawn": 208, "usernam": [208, 213, 217], "proxy_en": 208, "export": 208, "all_proxi": 208, "proxyout": 208, "8080": 208, "no_proxi": 208, "localhost": [208, 211, 216, 217, 227], "127": 208, "proxy_dis": 208, "unset": 208, "anytim": 208, "fatal": 208, "mpi_init": 208, "stack": 208, "mpir_init_thread": 208, "159": 208, "mpid_init": 208, "164": 208, "mpidi_ch3_init": 208, "95": 208, "mpid_nem_init": 208, "314": 208, "mpid_nem_tcp_init": 208, "173": 208, "mpid_nem_tcp_get_business_card": 208, "395": 208, "getsockinterfaceaddr": 208, "369": 208, "pn2034311": 208, "errno": 208, "host": [208, 211, 216, 227], "mpirun": [208, 211, 212, 213, 214, 215, 216, 217, 227], "srun": [208, 211, 212, 213, 214, 215, 216, 217, 227], "parallel_execut": [208, 211, 212, 213, 214, 215, 216, 217, 227], "unexpect": 209, "plu": 209, "autom": 210, "exascal": 210, "earth": 210, "kept": 210, "sens": 210, "boundari": [210, 222, 228], "expert": 210, "team": 210, "launch": 210, "uncoupl": 210, "evolv": [210, 219, 223, 225], "quick": [210, 220, 229], "queue": 210, "beginn": 210, "worktre": 210, "advanc": 210, "mpas_to_yaml": 210, "troubleshoot": 210, "proxi": 210, "lanl": [210, 211, 213], "gethostbynam": 210, "extens": 211, "single_nod": [211, 212, 213, 214, 215, 216, 217, 227], "multinod": [211, 227], "cores_per_nod": [211, 212, 213, 214, 215, 216, 217, 227], "hopefulli": 211, "explanatori": 211, "my_machin": 211, "fit": 211, "extend": 211, "gitconfig": 211, "enter": 211, "author": 211, "asai": 211, "davi": 211, "email": 211, "pull_request": 211, "28": 211, "address": 211, "metadata": 211, "customize_config_pars": 211, "server_base_url": 211, "inej": 211, "check_siz": 211, "ssl": 211, "certif": 211, "core_path": 211, "partition_execut": 211, "dask": 211, "netcdf4": 211, "netcdf4_class": 211, "netcdf3_64bit": 211, "netcdf3_class": 211, "engin": 211, "scipi": 211, "mesh_databas": 211, "ocean_database_root": 211, "landice_database_root": 211, "mesh_cor": 211, "18": [211, 213], "mesh_min_cor": 211, "mesh_max_memori": 211, "1000": [211, 219, 222], "mesh_max_disk": 211, "init_cor": 211, "init_min_cor": 211, "init_max_memori": 211, "init_max_disk": 211, "init_thread": 211, "forward_cor": 211, "forward_min_cor": 211, "forward_thread": 211, "forward_max_memori": 211, "forward_max_disk": 211, "add_metadata": 211, "ec": 211, "wc": 211, "mesh_descript": 211, "autodetect": 211, "bathy_descript": 211, "gebco": 211, "2022": 211, "bedmachin": 211, "antarctica": 211, "init_descript": 211, "e3sm_vers": 211, "increment": 211, "mesh_revis": 211, "finest": 211, "min_r": 211, "coarsest": 211, "max_r": 211, "max_depth": 211, "creation_d": 211, "peopl": 211, "contact": 211, "temperaturemax": 211, "statist": 211, "temperature_max": 211, "33": [211, 227], "diagnost": [211, 212, 213, 215, 216, 217, 227], "enable_ocean_initial_condit": 211, "enable_ocean_graph_partit": 211, "enable_seaice_initial_condit": 211, "scrip": 211, "enable_scrip": 211, "transect": 211, "onlin": 211, "member": 211, "offlin": 211, "enable_diagnostics_fil": 211, "coarser": [211, 223], "finer": 211, "comparisonlatresolut": 211, "comparisonlonresolut": 211, "antarct": 211, "polar": [211, 212, 214, 219], "stereograph": 211, "comparisonantarcticstereowidth": 211, "6000": [211, 219], "comparisonantarcticstereoresolut": 211, "arctic": 211, "comparisonarcticstereowidth": 211, "comparisonarcticstereoresolut": 211, "grid_typ": [211, 219, 222, 223, 225, 226], "tanh_dz": 211, "3000": 211, "min_layer_thick": [211, 219], "max_layer_thick": [211, 219], "retain": 211, "ecosystem": 212, "gain": 212, "confluenc": 212, "public_html": [212, 214, 216], "polaris_env": [212, 213, 214, 215, 216, 217], "soft": [212, 214, 216, 227], "mpi_intel": [212, 214, 215, 216], "mpi_gnu": [212, 213, 214, 215, 216, 217], "hdf5": [212, 213, 214, 215, 216, 217], "fortran": [212, 213, 214, 215, 216, 217], "pnetcdf": [212, 213, 214, 215, 216, 217], "use_e3sm_hdf5_netcdf": [212, 213, 214, 215, 216, 217], "cobalt": [212, 213, 214, 215, 216, 217], "condo": [212, 227], "acm": [212, 227], "medium": 212, "qualiti": [212, 213, 215, 216, 217, 227], "servic": [212, 213, 215, 216, 217, 227], "qo": [212, 213, 215, 216, 217, 227], "acme_high": 212, "load_latest_polaris_intel_impi": [212, 215], "load_latest_polaris_gnu_openmpi": [212, 214, 227], "dst": 213, "calendar": 213, "network": 213, "introduct": 213, "platform": 213, "wtrw": 213, "ch": 213, "lustr": 213, "scratch4": 213, "scratch5": 213, "sacctmgr": 213, "assoc": 213, "cluster": 213, "45": 213, "my": 213, "sshare": 213, "grep": [213, 227], "sreport": 213, "accountutilizationbyus": 213, "2019": 213, "02": 213, "prioriti": 213, "yellow": 213, "chkhome": 213, "petabyt": 213, "df": 213, "bp": 213, "archiv": [213, 217], "hpss": [213, 217], "front": 213, "tn": 213, "storag": 213, "project_nam": 213, "salloc": [213, 216, 217], "account_nam": 213, "gpu": [213, 217], "hyperthread": [213, 217], "hang": [213, 217], "threads_per_cor": [213, 217], "modules_befor": [213, 217], "modules_aft": [213, 217], "shared_clim": [213, 227], "load_latest_polaris_gnu_mpich": [213, 217], "high": [214, 216], "load_latest_polaris_intel_openmpi": 214, "compyf": 215, "app": [215, 227], "pmi2": 215, "conda_env": [215, 227], "sai": 216, "submit": 216, "workload": 216, "sbatch": [216, 227], "squeue": 216, "my_usernam": [216, 217], "scancel": 216, "jobid": 216, "cancel": 216, "emtpi": 216, "probabl": 216, "three": 216, "mpi_mpich": [216, 227], "mpi_openmpi": [216, 227], "nompi": [216, 227], "p1": 217, "nersc": 217, "iri": 217, "filesystem": 217, "myquota": 217, "prjquota": 217, "projectid": 217, "m1795": 217, "hsi": 217, "htar": 217, "zstash": 217, "cf": [217, 227], "cdir": [217, 227], "constraint": [217, 227], "premium": 217, "cray_compil": 217, "8844": 217, "monik": 217, "browser": 217, "port": 217, "realli": 217, "nice": 217, "grab": 217, "logon": 217, "kernel": 217, "connect": 217, "myenv": 217, "ipykernel": 217, "kernelspec": 217, "u1": 217, "Be": 217, "interpret": 217, "argv": 217, "env": 217, "ipykernel_launch": 217, "connection_fil": 217, "display_nam": 217, "languag": 217, "2500": 219, "coord_typ": [219, 222, 223, 225, 226], "partial_cell_typ": [219, 222, 223, 225, 226], "min_pc_fract": [219, 222, 223, 225, 226], "deepest": 219, "stewart": 219, "2017": 219, "z_2": 219, "z_1": 219, "mathrm": 219, "tanh": 219, "rightarrow": 219, "infti": 219, "z_k": 219, "z_0": 219, "z_": [219, 225], "k": 219, "finder": 219, "n_z": 219, "h_": 219, "210": [219, 223], "scienc": 219, "hydrograph": 219, "climatologi": 219, "250": 219, "5500": 219, "renorm": 219, "51": 219, "221": 219, "63": 219, "floor": 219, "flat": [219, 222], "collaps": 219, "adcroft": 219, "campin": 219, "2004": 219, "absenc": 219, "squash": 219, "proport": [219, 222, 223, 226], "watercolumn": 219, "press": 219, "depress": 219, "batymetri": 219, "repres": [219, 223], "stair": 219, "still": [220, 226, 227], "month": 220, "year": 220, "websit": 220, "release_6": 220, "ilicak": 222, "2012": 222, "distinguish": 222, "zonal": 222, "northern": 222, "southern": 222, "meridion": 222, "throughout": 222, "35": [222, 223, 225, 226, 227], "psu": [222, 225], "cooler": 222, "half": 222, "north": 222, "gradient": [222, 225], "halv": 222, "sinusoid": 222, "perturb": [222, 223], "t_0": 222, "t_b": 222, "t_": 222, "z_b": 222, "y_": 222, "l_x": 222, "perturb_width": 222, "warmer": 222, "ge": [222, 223], "gradient_width_fract": 222, "l_y": 222, "hard": [222, 225], "le": [222, 225], "flow": [222, 223], "stationari": [222, 225], "corioli": [222, 223, 225], "btr_dt_per_km": 222, "logic": 222, "08": 222, "500km": 222, "40e3": 222, "water": [222, 223, 225, 226], "2e": 222, "literatur": 222, "break": 222, "mk": 222, "celsiu": 222, "spuriou": 222, "dissip": 222, "pop": 222, "mom": 222, "mitgcm": 222, "williamson": 223, "1992": 223, "sec": 223, "3a": 223, "skamarock": 223, "gassmann": 223, "bodi": 223, "rotat": 223, "transport": 223, "psi": 223, "proportion": 223, "icosohydr": 223, "480": 223, "150": 223, "nearest": 223, "insensit": [223, 225], "choic": 223, "300": [223, 226], "passiv": 223, "psi_0": 223, "co": 223, "radiu": 223, "assign": 223, "debug_tracers_1": 223, "equatori": 223, "u_0": 223, "tau": 223, "transit": 223, "equat": [223, 225], "vel_pd": 223, "tendenc": 223, "remain": [223, 225], "multipli": 223, "rad": 223, "lat_cent": 223, "lon_cent": 223, "14159265": 223, "2123666": 223, "6667": 223, "hill": 223, "psi0": 223, "qu_conv_thresh": 223, "warn": 223, "qu_conv_max": 223, "icos_conv_thresh": 223, "icos_conv_max": 223, "roughli": 223, "span": 225, "arbitrarili": 225, "virtu": 225, "examin": 225, "400": 225, "phi": 225, "phi_0": 225, "dz": 225, "ml": 225, "mld": 225, "surface_x": 225, "x_gradient_mixed_lay": 225, "mixed_layer_depth_x": 225, "x_difference_across_mixed_lay": 225, "x_gradient_interior": 225, "spatial": 225, "degc": 225, "temperature_gradient_mixed_lay": 225, "temperature_difference_across_mixed_lay": 225, "temperature_gradient_interior": 225, "mixed_layer_depth_temperatur": 225, "25": 225, "surface_salin": 225, "salinity_gradient_mixed_lay": 225, "salinity_difference_across_mixed_lay": 225, "salinity_gradient_interior": 225, "mixed_layer_depth_salin": 225, "scheme": 225, "dictat": 225, "kpp": 225, "characterist": 226, "welcom": 226, "icosohedr": 226, "pertain": 226, "inher": 226, "warrant": 226, "investig": 226, "effect": 226, "load_latest_polari": 227, "minu": 227, "create_polaris_load_script": 227, "load_polaris_1": 227, "0_mpich": 227, "wiki": 227, "circular_shelf": 227, "sia_smoke_test": 227, "sia_decomposition_test": 227, "sia_restart_test": 227, "fo_smoke_test": 227, "fo_decomposition_test": 227, "fo_restart_test": 227, "decomp_test": [227, 229], "37": 227, "38": 227, "17": 227, "210131_test_new_branch": 227, "fall": 227, "my_config": 227, "smaller": 227, "previous_workdir": 227, "paper": 227, "recompil": 227, "live": 227, "safer": 227, "preserv": 227, "test_subdir": 227, "whatev": 227, "job_script": 227, "wall": 227, "clock": 227, "accord": 227, "j": 227, "exclus": 227, "job_nam": 227, "wall_tim": 227, "fo_integr": [227, 229], "full_integr": [227, 229], "sia_integr": [227, 229], "cosine_bell_cached_init": [227, 229], "ec30to60": [227, 229], "ecwisc30to60": [227, 229], "qu240_for_e3sm": [227, 229], "quwisc240_for_e3sm": [227, 229], "wc14": [227, 229], "suitenam": 227, "radial": 228, "analyt": 228, "form": 228, "identifi": 228, "analysis_test": 229, "5km": 229, "20km": 229, "with_frazil": 229, "prohibit": 229}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.list": [[54, 2, 1, "", "list_cases"], [55, 2, 1, "", "list_machines"], [56, 2, 1, "", "list_suites"]], "polaris.logging": [[57, 2, 1, "", "log_method_call"]], "polaris.mesh": [[58, 0, 1, "", "IcosahedralMeshStep"], [65, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [60, 1, 1, "", "get_cell_width"], [61, 1, 1, "", "get_subdivisions"], [62, 1, 1, "", "make_jigsaw_mesh"], [63, 1, 1, "", "run"], [64, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, 1, 1, "", "__init__"], [66, 1, 1, "", "build_cell_width_lat_lon"], [67, 1, 1, "", "make_jigsaw_mesh"], [68, 1, 1, "", "run"], [69, 1, 1, "", "setup"]], "polaris.mesh.planar": [[70, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[71, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "run"], [73, 1, 1, "", "save_and_plot_cell_width"], [74, 1, 1, "", "setup"]], "polaris.model_step": [[75, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[76, 2, 1, "", "ingest"], [77, 2, 1, "", "parse_replacements"], [78, 2, 1, "", "replace"], [79, 2, 1, "", "write"]], "polaris.ocean": [[124, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[124, 1, 1, "", "__init__"]], "polaris.ocean.model": [[125, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "compute_cell_count"], [127, 1, 1, "", "constrain_resources"], [128, 1, 1, "", "map_yaml_to_namelist"], [129, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[130, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[131, 0, 1, "", "BaroclinicChannel"], [132, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[131, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[134, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[134, 1, 1, "", "__init__"], [135, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[136, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[138, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "compute_cell_count"], [140, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[141, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "run"], [143, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[144, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[144, 1, 1, "", "__init__"], [145, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[146, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[148, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "configure"], [150, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[151, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "run"], [153, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[154, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[156, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[158, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[158, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[159, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "configure"], [161, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[162, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "rmse"], [164, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[165, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[168, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[170, 0, 1, "", "Viz"], [172, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[174, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[174, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[175, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[177, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[177, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.initial_state": [[178, 0, 1, "", "InitialState"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[180, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[182, 2, 1, "", "generate_1d_grid"], [183, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[184, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[185, 2, 1, "", "alter_bottom_depth"], [186, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[187, 2, 1, "", "compute_min_max_level_cell"], [188, 2, 1, "", "compute_z_level_layer_thickness"], [189, 2, 1, "", "compute_z_level_resting_thickness"], [190, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[191, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[80, 2, 1, "", "check_parallel_system"], [81, 2, 1, "", "get_available_cores_and_nodes"], [82, 2, 1, "", "run_command"], [83, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[84, 2, 1, "", "write"]], "polaris.remap": [[85, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "dst_from_lon_lat"], [87, 1, 1, "", "dst_from_mpas"], [88, 1, 1, "", "dst_from_points"], [89, 1, 1, "", "dst_from_proj"], [90, 1, 1, "", "dst_global_lon_lat"], [91, 1, 1, "", "get_remapper"], [92, 1, 1, "", "run"], [93, 1, 1, "", "src_from_lon_lat"], [94, 1, 1, "", "src_from_mpas"], [95, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[96, 2, 1, "", "run_single_step"], [97, 2, 1, "", "run_tests"]], "polaris.setup": [[98, 2, 1, "", "setup_case"], [99, 2, 1, "", "setup_cases"]], "polaris.streams": [[100, 2, 1, "", "read"], [101, 2, 1, "", "update_defaults"], [102, 2, 1, "", "update_tree"], [103, 2, 1, "", "write"]], "polaris.suite": [[104, 2, 1, "", "setup_suite"]], "polaris.validate": [[105, 2, 1, "", "compare_timers"], [106, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[107, 2, 1, "", "plot_global"]], "polaris.viz": [[108, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[109, 0, 1, "", "PolarisYaml"], [113, 2, 1, "", "main_mpas_to_yaml"], [114, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [115, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[109, 1, 1, "", "__init__"], [110, 1, 1, "", "read"], [111, 1, 1, "", "update"], [112, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 123, 207, 212, 213, 214, 215, 216, 217, 222, 223, 225, 226], "same": 1, "implement": 1, "test": [1, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 197, 201, 203, 204, 205, 206, 211, 221, 224, 227, 228, 229], "valid": [1, 2, 15, 44, 105, 106, 133, 135, 137, 145, 150, 155, 161, 176, 204, 227], "api": 2, "refer": [2, 122, 123], "compon": [2, 12, 17, 18, 49, 123, 192, 199, 206, 207, 220, 227], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 202, 206, 207, 210, 227], "framework": [2, 8, 122, 123, 195, 198, 206, 218], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 54, 55, 56], "setup": [2, 4, 6, 30, 40, 64, 69, 74, 98, 99, 129, 143, 153, 202], "suit": [2, 4, 6, 104, 203, 221, 227, 229], "run": [2, 6, 12, 37, 63, 68, 72, 92, 96, 97, 123, 142, 152, 157, 164, 169, 171, 173, 179, 181, 202, 207, 222, 223, 225, 226, 227], "cach": [2, 4, 6, 48, 202], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 206], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 204], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 202, 222, 223, 225, 226], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 123, 211, 212, 213, 214, 215, 216, 217, 222, 223, 225, 226], "io": [2, 9, 51, 52, 53], "log": [2, 10, 57], "mesh": [2, 11, 12, 16, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 196, 222, 223, 225, 226], "model_step": [2, 75], "namelist": [2, 12, 76, 77, 78, 79, 123], "parallel": [2, 80, 81, 82, 83], "proven": [2, 13, 84], "remap": [2, 14, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "stream": [2, 12, 100, 101, 102, 103, 123], "viz": [2, 107, 108, 156, 157, 170, 171, 172, 173, 180, 181, 196, 198], "yaml": [2, 12, 109, 110, 111, 112, 113, 114, 115, 123], "build": [3, 207, 227], "serial": [4, 6, 96, 97], "docstr": 5, "modul": [6, 206, 207], "clean": 6, "file": [7, 12, 123, 202, 211], "comment": 7, "symlink": [9, 53, 202], "download": [9, 51, 202], "spheric": [11, 16, 71, 72, 73, 74], "planar": [11, 16, 70], "uniform": [11, 219], "gener": 11, "model": [12, 123, 125, 126, 127, 128, 129, 193, 227], "an": [12, 123], "e3sm": [12, 123, 207, 227], "ad": [12, 202], "updat": [12, 111, 207], "runtim": 12, "input": [12, 202], "partit": [12, 26], "pio": 12, "make": 12, "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": 16, "horizont": 16, "field": 16, "from": [16, 123, 202, 207, 216], "global": 16, "lat": 16, "lon": 16, "plot": 16, "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 140, 147, 167], "map_yaml_to_namelist": [25, 128], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 202], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 127, 202], "set_resourc": 39, "add_step": 42, "configur": [43, 149, 160, 204, 208], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "list_cas": 54, "list_machin": 55, "list_suit": 56, "log_method_cal": 57, "icosahedralmeshstep": [58, 59, 60, 61, 62, 63, 64], "build_subdivisions_cell_width_lat_lon": 59, "get_cell_width": 60, "get_subdivis": 61, "make_jigsaw_mesh": [62, 67], "quasiuniformsphericalmeshstep": [65, 66, 67, 68, 69], "build_cell_width_lat_lon": 66, "compute_planar_hex_nx_ni": 70, "sphericalbasestep": [71, 72, 73, 74], "save_and_plot_cell_width": 73, "make_graph_fil": 75, "ingest": 76, "parse_replac": 77, "replac": 78, "write": [79, 84, 103, 112], "check_parallel_system": 80, "get_available_cores_and_nod": 81, "run_command": 82, "set_cores_per_nod": 83, "mappingfilestep": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "dst_from_lon_lat": 86, "dst_from_mpa": 87, "dst_from_point": 88, "dst_from_proj": 89, "dst_global_lon_lat": 90, "get_remapp": 91, "src_from_lon_lat": 93, "src_from_mpa": 94, "src_from_proj": 95, "run_single_step": 96, "run_test": 97, "setup_cas": [98, 99], "read": [100, 110], "update_default": 101, "update_tre": 102, "setup_suit": 104, "compare_tim": 105, "compare_vari": 106, "globe": 107, "plot_glob": 107, "plot_horiz_field": 108, "polarisyaml": [109, 110, 111, 112], "main_mpas_to_yaml": 113, "mpas_namelist_and_streams_to_yaml": 114, "yaml_to_mpas_stream": 115, "anvil": [116, 212], "intel": [116, 118, 119, 212, 214, 215], "gnu": [116, 117, 118, 119, 121, 212, 213, 214, 217], "chicoma": [117, 213], "cpu": [117, 121, 213, 217], "chrysali": [118, 214], "compymcnodefac": [119, 215], "machin": [120, 207, 216, 227], "support": [120, 193, 207, 216, 227], "other": [120, 202, 216, 227], "perlmutt": [121, 217], "pm": 121, "ocean": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 220], "group": [122, 197, 205, 206, 224], "baroclinic_channel": [122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 195, 222], "global_converg": [122, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 196, 223], "cosine_bel": [122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 196, 221, 223], "single_column": [122, 174, 175, 176, 177, 178, 179, 180, 181, 198, 225], "oceanmodelstep": [122, 125, 126, 127, 128, 129], "potenti": [122, 123], "energi": [122, 123], "rpe": [122, 123, 130], "vertic": [122, 123, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 219, 222, 223, 225, 226], "coordin": [122, 123, 219], "v": 123, "map": 123, "omega": 123, "mpa": [123, 194], "set": [123, 207, 227], "mpi": [123, 216], "resourc": 123, "rest": 123, "compute_cell_count": [126, 139, 166], "compute_rp": 130, "baroclinicchannel": 131, "baroclinicchanneltestcas": [132, 133], "decomp_test": [134, 135, 195, 222], "decomptest": [134, 135], "default": [136, 137, 195, 222], "forward": [138, 139, 140, 165, 166, 167, 177, 195, 196, 198], "initial_st": [141, 142, 143, 178, 179, 195, 198], "initialst": [141, 142, 143, 178, 179], "restart_test": [144, 145, 146, 147, 195, 222], "restarttest": [144, 145], "restart_step": [146, 147], "restartstep": [146, 147], "rpe_test": [148, 149, 150, 151, 152, 153, 195, 222], "rpetest": [148, 149, 150], "analysi": [151, 152, 153, 162, 163, 164, 196], "threads_test": [154, 155, 195], "threadstest": [154, 155], "globalconverg": 158, "cosinebel": [159, 160, 161], "rmse": 163, "init": [168, 169, 196], "vizmap": [172, 173], "singlecolumn": 174, "cvmix": [175, 176, 198, 225], "grid_1d": [182, 183], "generate_1d_grid": 182, "write_1d_grid": 183, "init_vertical_coord": 184, "partial_cel": [185, 186], "alter_bottom_depth": 185, "alter_ssh": 186, "zlevel": [187, 188, 189, 190], "compute_min_max_level_cel": 187, "compute_z_level_layer_thick": 188, "compute_z_level_resting_thick": 189, "init_z_level_vertical_coord": 190, "zstar": 191, "init_z_star_vertical_coord": 191, "initi": [194, 222, 223, 225, 226], "condit": [194, 222, 223, 225, 226], "boundari": 194, "forc": [194, 222, 223, 225, 226], "baroclinic_channel_test_cas": 195, "type": [196, 219], "directori": 200, "structur": 200, "organ": 201, "attribut": [202, 204], "constructor": [202, 204], "output": 202, "copi": 202, "depend": 202, "pull": 203, "request": 203, "pr": 203, "nightli": 203, "case": [204, 206, 211, 227, 228], "overview": 206, "code": [206, 207], "style": [206, 207], "packag": 206, "share": 206, "within": 206, "quick": [207, 227], "start": [207, 227], "develop": [207, 210], "unix": 207, "shell": 207, "up": [207, 227], "repositori": 207, "beginn": 207, "conda": [207, 208, 216, 227], "environ": [207, 208, 227], "spack": [207, 227], "compil": 207, "system": 207, "albani": 207, "petsc": 207, "netlib": 207, "lapack": 207, "unknown": 207, "what": 207, "script": [207, 227], "doe": 207, "flag": 207, "activ": 207, "troubleshoot": [207, 208], "creat": 207, "onli": 207, "repo": 207, "worktre": 207, "advanc": 207, "user": [207, 210, 211, 227], "solver": 208, "error": 208, "when": 208, "proxi": 208, "lanl": 208, "mac": 208, "gethostbynam": 208, "fail": 208, "glossari": [209, 210], "": 210, "guid": 210, "compass": 210, "A": 211, "slurm": 216, "job": [216, 227], "queue": 216, "mpich": 216, "openmpi": 216, "No": 216, "forg": 216, "jupyt": 217, "notebook": 217, "remot": 217, "data": 217, "1d": 219, "grid": [219, 222, 223, 225, 226], "tanh_dz": 219, "60layerphc": 219, "100layere3smv1": 219, "3d": 219, "z": 219, "star": 219, "level": 219, "cosine_bell_cached_init": 221, "descript": [222, 223, 225, 226], "time": [222, 223, 225, 226], "durat": [222, 223, 225, 226], "core": [222, 223, 225, 226], "thread_test": 222, "test_group_nam": 226, "test_case_nam": 226, "i": 227, "yet": 227, "load": 227, "standalon": 227}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [199, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [196, "mesh"], [222, "mesh"], [222, "id2"], [222, "id9"], [222, "id17"], [222, "id25"], [222, "id32"], [223, "mesh"], [225, "mesh"], [225, "id3"], [226, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [196, "viz"], [198, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [218, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [123, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [123, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.list.list_cases": [[54, "polaris-list-list-cases"]], "polaris.list.list_machines": [[55, "polaris-list-list-machines"]], "polaris.list.list_suites": [[56, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[57, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[58, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[59, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[60, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[61, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[62, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[63, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[64, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[70, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[72, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[73, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[74, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[75, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[76, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[77, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[78, "polaris-namelist-replace"]], "polaris.namelist.write": [[79, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[80, "polaris-parallel-check-parallel-system"]], "polaris.parallel.get_available_cores_and_nodes": [[81, "polaris-parallel-get-available-cores-and-nodes"]], "polaris.parallel.run_command": [[82, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[83, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[84, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[85, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[86, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[87, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[88, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[89, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[90, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[91, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.run": [[92, "polaris-remap-mappingfilestep-run"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[93, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[94, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[95, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[96, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[97, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[98, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[99, "polaris-setup-setup-cases"]], "polaris.streams.read": [[100, "polaris-streams-read"]], "polaris.streams.update_defaults": [[101, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[102, "polaris-streams-update-tree"]], "polaris.streams.write": [[103, "polaris-streams-write"]], "polaris.suite.setup_suite": [[104, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[105, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[106, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[107, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[108, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[109, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[110, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[111, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[112, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[113, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[114, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[115, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[116, "anvil"], [212, "anvil"]], "intel": [[116, "intel"], [118, "intel"], [119, "intel"]], "gnu": [[116, "gnu"], [118, "gnu"], [119, "gnu"]], "Chicoma": [[117, "chicoma"], [213, "chicoma"]], "chicoma-cpu, gnu": [[117, "chicoma-cpu-gnu"]], "Chrysalis": [[118, "chrysalis"], [214, "chrysalis"]], "CompyMcNodeFace": [[119, "compymcnodeface"], [215, "compymcnodeface"]], "Machines": [[120, "machines"], [216, "machines"]], "Supported Machines": [[120, "supported-machines"], [216, "supported-machines"]], "Other Machines": [[120, "other-machines"], [216, "other-machines"]], "Perlmutter": [[121, "perlmutter"], [217, "perlmutter"]], "pm-cpu, gnu": [[121, "pm-cpu-gnu"]], "ocean": [[122, "ocean"]], "Test Groups": [[122, "test-groups"], [205, "test-groups"]], "baroclinic_channel": [[122, "baroclinic-channel"], [195, "baroclinic-channel"], [222, "baroclinic-channel"]], "global_convergence": [[122, "global-convergence"], [196, "global-convergence"], [223, "global-convergence"]], "cosine_bell": [[122, "cosine-bell"], [196, "cosine-bell"], [223, "cosine-bell"]], "single_column": [[122, "single-column"], [198, "single-column"], [225, "single-column"]], "Ocean Framework": [[122, "ocean-framework"]], "OceanModelStep": [[122, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[122, "reference-potential-energy-rpe"]], "Vertical coordinates": [[122, "vertical-coordinates"]], "Ocean framework": [[123, "ocean-framework"]], "YAML files vs. namelists and streams": [[123, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[123, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[123, "setting-mpi-resources"]], "Model config options and streams": [[123, "model-config-options-and-streams"]], "Vertical coordinate": [[123, "vertical-coordinate"], [219, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[123, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[124, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[125, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[126, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[127, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[128, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[129, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[130, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[131, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[132, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[133, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[134, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[135, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[136, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[137, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[138, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[139, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[140, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[141, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[142, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[143, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[144, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[145, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[146, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[147, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[148, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[149, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[150, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[151, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[154, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[155, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[156, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[157, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[158, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[159, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[160, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[161, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[162, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[174, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[175, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[176, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[177, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[178, "polaris-ocean-tests-single-column-initial-state-initialstate"]], "polaris.ocean.tests.single_column.initial_state.InitialState.run": [[179, "polaris-ocean-tests-single-column-initial-state-initialstate-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[180, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[181, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[182, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[183, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[184, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[185, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[186, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[187, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[188, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[189, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[190, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[191, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[192, "ocean-component"], [220, "ocean-component"]], "Models": [[193, "models"]], "Supported Models": [[193, "supported-models"]], "MPAS-Ocean": [[194, "mpas-ocean"]], "Initial conditions": [[194, "initial-conditions"]], "Boundary conditions": [[194, "boundary-conditions"]], "Forcing": [[194, "forcing"]], "framework": [[195, "framework"], [198, "framework"]], "baroclinic_channel_test_case": [[195, "baroclinic-channel-test-case"]], "initial_state": [[195, "initial-state"], [198, "initial-state"]], "forward": [[195, "forward"], [196, "forward"], [198, "forward"]], "default": [[195, "default"], [222, "default"]], "decomp_test": [[195, "decomp-test"], [222, "decomp-test"]], "restart_test": [[195, "restart-test"], [222, "restart-test"]], "threads_test": [[195, "threads-test"]], "rpe_test": [[195, "rpe-test"], [222, "rpe-test"]], "mesh types": [[196, "mesh-types"]], "init": [[196, "init"]], "analysis": [[196, "analysis"]], "Test groups": [[197, "test-groups"], [224, "test-groups"]], "cvmix": [[198, "cvmix"], [225, "cvmix"]], "Directory structure": [[200, "directory-structure"]], "Organization of Tests": [[201, "organization-of-tests"]], "Steps": [[202, "steps"]], "Step attributes": [[202, "step-attributes"]], "constructor": [[202, "constructor"], [204, "constructor"]], "constrain_resources()": [[202, "constrain-resources"]], "setup()": [[202, "setup"]], "runtime_setup()": [[202, "runtime-setup"]], "run()": [[202, "run"]], "inputs and outputs": [[202, "inputs-and-outputs"]], "Input files": [[202, "input-files"]], "Symlinks to input files": [[202, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[202, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[202, "downloading-and-symlinking-input-files"]], "Copying input files": [[202, "copying-input-files"]], "Output files": [[202, "output-files"]], "Cached output files": [[202, "cached-output-files"]], "Adding other steps as dependencies": [[202, "adding-other-steps-as-dependencies"]], "Test Suites": [[203, "test-suites"], [227, "test-suites"], [229, "test-suites"]], "Pull-Request (PR) suite": [[203, "pull-request-pr-suite"]], "Nightly suite": [[203, "nightly-suite"]], "Test cases": [[204, "test-cases"]], "TestCase attributes": [[204, "testcase-attributes"]], "configure()": [[204, "configure"]], "validate()": [[204, "validate"]], "Overview": [[206, "overview"]], "Code Style": [[206, "code-style"]], "Packages and Modules": [[206, "packages-and-modules"]], "Packages": [[206, "packages"]], "Modules": [[206, "modules"]], "Classes": [[206, "classes"]], "Code sharing": [[206, "code-sharing"]], "\u2026in the polaris framework": [[206, "in-the-polaris-framework"]], "\u2026within a component": [[206, "within-a-component"]], "\u2026within a test group": [[206, "within-a-test-group"]], "\u2026within a test case": [[206, "within-a-test-case"]], "Quick Start for Developers": [[207, "quick-start-for-developers"]], "Unix Shell": [[207, "unix-shell"]], "Set up a polaris repository: for beginners": [[207, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[207, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[207, "supported-machines"]], "Environments with Albany": [[207, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[207, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[207, "unknown-machines"]], "What the script does": [[207, "what-the-script-does"]], "Optional flags": [[207, "optional-flags"]], "Activating the environment": [[207, "activating-the-environment"]], "Troubleshooting": [[207, "troubleshooting"], [208, "troubleshooting"]], "Creating/updating only the polaris environment": [[207, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[207, "building-e3sm-components"]], "Running polaris from the repo": [[207, "running-polaris-from-the-repo"]], "Code style for polaris": [[207, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[207, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[208, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[208, "proxy-on-lanl-macs"]], "gethostbyname failed": [[208, "gethostbyname-failed"]], "Glossary": [[209, "glossary"], [210, null]], "Polaris": [[210, "polaris"]], "User's guide": [[210, null]], "Developer's guide": [[210, null]], "Compass": [[210, "compass"]], "Config Files": [[211, "config-files"]], "A \u201cuser\u201d config file": [[211, "a-user-config-file"]], "Test-case config files": [[211, "test-case-config-files"]], "config options": [[212, "config-options"], [213, "config-options"], [214, "config-options"], [215, "config-options"], [216, "config-options"], [217, "config-options"], [222, "config-options"], [222, "id7"], [222, "id14"], [222, "id22"], [222, "id30"], [222, "id37"], [223, "config-options"], [225, "config-options"], [225, "id1"], [225, "id6"], [226, "config-options"]], "Intel on Anvil": [[212, "intel-on-anvil"]], "Gnu on Anvil": [[212, "gnu-on-anvil"]], "Chicoma-CPU": [[213, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[213, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[214, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[214, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[215, "intel-on-compymcnodeface"]], "Slurm job queueing": [[216, "slurm-job-queueing"]], "MPICH": [[216, "mpich"]], "OpenMPI": [[216, "openmpi"]], "No MPI from conda-forge": [[216, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[217, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[217, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[217, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[219, "d-grid-type"]], "uniform": [[219, "uniform"]], "tanh_dz": [[219, "tanh-dz"]], "60layerPHC": [[219, "layerphc"]], "100layerE3SMv1": [[219, "layere3smv1"]], "3D vertical coordinates": [[219, "d-vertical-coordinates"]], "z-star": [[219, "z-star"]], "z-level": [[219, "z-level"]], "Test suites": [[221, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[221, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[222, "description"], [222, "id1"], [222, "id8"], [222, "id16"], [222, "id24"], [225, "description"], [225, "id2"], [226, "description"]], "vertical grid": [[222, "vertical-grid"], [222, "id3"], [222, "id10"], [222, "id18"], [222, "id26"], [222, "id33"], [223, "vertical-grid"], [225, "vertical-grid"], [225, "id4"], [226, "vertical-grid"]], "initial conditions": [[222, "initial-conditions"], [222, "id4"], [222, "id11"], [222, "id19"], [222, "id27"], [222, "id34"], [223, "initial-conditions"], [225, "initial-conditions"], [225, "id5"], [226, "initial-conditions"]], "forcing": [[222, "forcing"], [222, "id5"], [222, "id12"], [222, "id20"], [222, "id28"], [222, "id35"], [223, "forcing"], [225, "forcing"], [226, "forcing"]], "time step and run duration": [[222, "time-step-and-run-duration"], [222, "id6"], [222, "id13"], [222, "id21"], [222, "id29"], [222, "id36"], [223, "time-step-and-run-duration"], [225, "time-step-and-run-duration"], [226, "time-step-and-run-duration"]], "cores": [[222, "cores"], [222, "id15"], [222, "id23"], [222, "id31"], [222, "id38"], [223, "cores"], [225, "cores"], [226, "cores"]], "thread_test": [[222, "thread-test"]], "Description": [[223, "description"]], "test_group_name": [[226, "test-group-name"]], "test_case_name": [[226, "test-case-name"]], "Quick Start for Users": [[227, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[227, null]], "Loading polaris conda and spack environments": [[227, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[227, "e3sm-supported-machines"]], "Other machines": [[227, "other-machines"]], "Building supported E3SM components as standalone models": [[227, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[227, "setting-up-test-cases"]], "Running a test case": [[227, "running-a-test-case"]], "Running with a job script": [[227, "running-with-a-job-script"]], "Test Cases": [[228, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[54, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[55, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[56, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[57, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[58, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[70, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[71, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[75, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[76, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[77, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[78, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[79, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[80, "polaris.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module polaris.parallel)": [[81, "polaris.parallel.get_available_cores_and_nodes"]], "run_command() (in module polaris.parallel)": [[82, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[83, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[84, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[85, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[85, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.get_remapper"]], "run() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.run"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[96, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[97, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[98, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[99, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[100, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[101, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[102, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[103, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[104, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[105, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[106, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[107, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[108, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[109, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[109, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[110, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[111, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[112, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[113, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[114, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[115, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[124, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[124, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[125, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[125, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[126, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[130, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[131, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[134, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[134, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[135, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[136, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[136, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[137, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[138, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[138, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[140, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[141, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[141, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[142, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[143, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[144, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[144, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[147, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[148, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[148, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[149, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[154, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[154, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[155, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[156, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[156, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[157, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[158, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[158, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[159, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[159, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[160, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[174, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[174, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[175, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[175, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[176, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[177, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[177, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "initialstate (class in polaris.ocean.tests.single_column.initial_state)": [[178, "polaris.ocean.tests.single_column.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[178, "polaris.ocean.tests.single_column.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[179, "polaris.ocean.tests.single_column.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[180, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[180, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[181, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[182, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[183, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[184, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[185, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[186, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[187, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[188, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[189, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[190, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[191, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})