Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/global_convergence", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/models/index", "developers_guide/seaice/models/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/global_convergence", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/global_convergence.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/models/index.md", "developers_guide/seaice/models/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/global_convergence.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_task", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks", "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init", "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.convergence.Convergence", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "Seaice framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "Seaice component", "Models", "MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "Baroclinic channel", "global_convergence", "Tasks", "inertial gravity wave", "manufactured_solution", "single_column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single_column", "<Category of task>", "Suites", "Tasks"], "terms": {"templat": [0, 4, 5, 6, 23, 24, 25, 103, 112, 116, 122, 139, 145, 253, 254, 255], "date": [1, 4, 46, 217, 234, 246, 255], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 39, 41, 42, 43, 46, 48, 49, 51, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 75, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 116, 117, 122, 125, 126, 127, 128, 133, 135, 136, 137, 138, 140, 142, 143, 144, 146, 148, 150, 151, 152, 154, 157, 159, 160, 162, 163, 165, 167, 169, 172, 174, 178, 179, 181, 183, 186, 188, 192, 193, 195, 197, 200, 201, 202, 203, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 236, 237, 240, 242, 243, 244, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279], "purpos": [1, 226, 233, 254, 279], "thi": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 20, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 53, 57, 59, 62, 63, 66, 67, 68, 72, 81, 82, 84, 85, 91, 98, 108, 118, 119, 120, 121, 122, 123, 125, 127, 130, 133, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 149, 150, 151, 155, 157, 159, 161, 164, 166, 168, 170, 173, 174, 178, 180, 182, 184, 187, 188, 192, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 217, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 236, 245, 246, 251, 252, 253, 254, 255, 257, 260, 261, 263, 266, 267, 269, 270, 271, 272, 273, 277, 278], "section": [1, 2, 4, 5, 6, 8, 11, 13, 15, 20, 26, 66, 109, 113, 122, 125, 127, 130, 207, 209, 215, 216, 217, 225, 226, 227, 230, 231, 233, 234, 246, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 267, 271, 272, 273, 277], "i": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 20, 25, 30, 33, 34, 35, 36, 39, 40, 42, 43, 46, 49, 51, 65, 66, 71, 81, 82, 85, 89, 95, 97, 98, 103, 105, 108, 110, 112, 117, 118, 120, 121, 122, 125, 127, 133, 135, 136, 137, 139, 140, 143, 144, 145, 146, 148, 151, 152, 154, 164, 178, 180, 192, 194, 201, 209, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 240, 242, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 276, 277, 278, 279], "summar": 1, "what": [1, 5, 10, 12, 15, 122, 232, 233, 254, 261, 272, 273, 277], "capabl": [1, 5, 15, 122, 230, 233, 254, 260, 273], "ad": [1, 4, 5, 6, 8, 9, 10, 15, 16, 34, 35, 41, 43, 44, 48, 133, 134, 142, 150, 156, 159, 171, 185, 199, 209, 215, 216, 226, 227, 232, 234, 238, 248, 253, 256, 257, 258, 259, 261, 273], "polari": [1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 118, 120, 121, 122, 125, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 236, 246, 247, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 274, 278, 279], "through": [1, 102, 233, 234, 248, 254], "process": [1, 5, 7, 13, 28, 81, 82, 117, 230, 233, 234, 246, 252, 253, 254], "It": [1, 4, 5, 13, 15, 33, 39, 109, 220, 223, 224, 226, 230, 231, 232, 233, 234, 252, 254, 255, 260, 269, 270], "should": [1, 4, 5, 6, 8, 11, 13, 16, 21, 26, 33, 34, 35, 41, 42, 44, 49, 53, 66, 101, 102, 109, 110, 118, 119, 120, 121, 122, 123, 125, 130, 142, 150, 203, 205, 217, 226, 227, 230, 231, 232, 234, 236, 246, 248, 251, 252, 254, 255, 266, 267, 271, 272, 273, 277], "clear": [1, 233, 254], "new": [1, 4, 13, 18, 21, 33, 42, 48, 51, 58, 65, 71, 85, 104, 105, 137, 144, 162, 175, 178, 189, 192, 201, 209, 215, 216, 230, 233, 234, 248, 251, 252, 253, 273], "code": [1, 4, 6, 8, 11, 13, 33, 125, 217, 227, 230, 231, 232, 236, 246, 252, 253, 255, 262, 266, 271, 273], "do": [1, 4, 8, 10, 13, 15, 16, 112, 122, 226, 230, 232, 234, 251, 252, 253, 254, 260, 267, 273], "current": [1, 4, 5, 7, 10, 20, 30, 33, 40, 108, 122, 127, 217, 221, 225, 227, 230, 233, 234, 236, 246, 248, 252, 253, 254, 255, 260, 263, 266, 267, 269, 270, 271, 273, 278, 279], "doe": [1, 5, 8, 11, 13, 230, 253, 254, 260], "primari": [1, 4, 8, 254, 278], "challeng": 1, "respect": [1, 7, 8, 13, 17, 125, 230, 233, 267, 272, 277], "softwar": [1, 75, 261, 273], "also": [1, 4, 5, 6, 8, 12, 13, 17, 28, 39, 48, 108, 109, 122, 125, 167, 209, 215, 216, 217, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 254, 255, 260, 261, 263, 267, 269, 270, 272, 273, 277, 279], "appropri": [1, 4, 5, 13, 21, 70, 122, 217, 220, 223, 224, 225, 227, 230, 234, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 272, 273, 277], "final": [1, 5, 6, 7, 122, 220, 221, 223, 224, 225, 228, 230, 232, 250, 254, 267], "statement": [1, 11, 230, 252], "contain": [1, 4, 5, 6, 7, 8, 15, 17, 18, 22, 23, 24, 37, 47, 50, 77, 80, 86, 87, 88, 89, 93, 94, 95, 103, 110, 111, 125, 132, 209, 215, 216, 227, 228, 229, 230, 233, 234, 236, 246, 248, 252, 254, 255, 260, 264, 272, 273, 274, 277], "gener": [1, 2, 3, 6, 7, 11, 13, 17, 21, 22, 23, 24, 28, 41, 65, 108, 125, 142, 150, 207, 217, 219, 220, 221, 223, 224, 225, 227, 230, 234, 236, 246, 254, 255, 260, 267, 269, 270, 273], "regard": 1, "success": [1, 7, 49, 217, 227, 246, 254, 255], "last": [1, 231, 234, 266, 273], "modifi": [1, 7, 8, 12, 13, 20, 32, 44, 103, 105, 127, 147, 220, 223, 224, 230, 232, 234, 253, 254, 255, 266, 273], "add": [1, 4, 5, 6, 8, 12, 13, 16, 19, 21, 22, 23, 24, 25, 34, 35, 36, 43, 44, 64, 69, 74, 103, 104, 105, 112, 113, 116, 117, 122, 134, 139, 145, 156, 171, 185, 199, 220, 226, 227, 230, 232, 233, 234, 238, 252, 254, 255, 261, 267], "your": [1, 3, 4, 5, 10, 122, 217, 233, 234, 246, 251, 254, 255, 256, 257, 260, 261, 267, 273], "list": [1, 5, 6, 8, 13, 16, 20, 33, 36, 42, 43, 46, 47, 81, 82, 98, 101, 102, 107, 108, 132, 148, 152, 157, 159, 172, 183, 186, 188, 197, 201, 230, 231, 232, 233, 234, 240, 252, 253, 254, 255, 257, 260, 261, 267, 273, 278, 279], "appear": [1, 122, 230, 254], "each": [1, 4, 5, 6, 7, 11, 12, 13, 15, 16, 33, 39, 42, 54, 60, 61, 70, 96, 102, 117, 122, 125, 152, 153, 157, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 240, 241, 250, 252, 254, 255, 260, 263, 266, 267, 269, 270, 272, 273, 277, 278], "under": [1, 15, 33, 34, 122, 125, 219, 230, 231, 234, 253, 263, 279], "head": [1, 219, 257], "one": [1, 4, 5, 6, 9, 13, 15, 16, 17, 20, 32, 33, 35, 36, 42, 46, 51, 101, 102, 107, 122, 125, 127, 143, 201, 217, 220, 223, 224, 225, 226, 230, 232, 233, 234, 239, 250, 251, 252, 253, 255, 260, 261, 263, 266, 267, 269, 270, 272, 273, 276, 277, 278, 279], "correspond": [1, 5, 6, 108, 122, 125, 217, 230, 234, 246, 266], "between": [1, 4, 5, 6, 7, 11, 12, 13, 15, 16, 20, 32, 35, 59, 66, 67, 70, 73, 85, 91, 108, 127, 143, 152, 175, 189, 209, 215, 216, 221, 227, 230, 233, 239, 240, 260, 263, 266, 269, 270], "propos": 1, "discuss": [1, 5, 125, 230, 232, 233, 254, 266, 267], "technic": [1, 6], "issu": [1, 5, 230, 231, 234, 267, 269, 270], "rather": [1, 5, 7, 8, 10, 12, 13, 33, 35, 48, 122, 220, 230, 234, 251, 254, 263], "focu": [1, 254], "model": [1, 4, 9, 20, 21, 25, 26, 28, 33, 35, 101, 102, 107, 111, 116, 118, 119, 120, 121, 122, 123, 135, 137, 139, 143, 144, 145, 146, 151, 164, 180, 194, 201, 217, 220, 223, 224, 225, 227, 231, 233, 234, 239, 246, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 266, 269, 270, 272, 277], "To": [1, 4, 5, 11, 15, 16, 108, 122, 125, 217, 230, 233, 234, 246, 248, 254, 256, 257, 258, 259, 260, 261, 263, 267, 273], "extent": [1, 12, 15, 254, 266], "possibl": [1, 7, 10, 61, 125, 219, 230, 231, 233, 254, 263], "rel": [1, 4, 8, 15, 16, 35, 36, 43, 46, 48, 101, 102, 107, 108, 217, 227, 230, 233, 234, 240, 246, 252, 254, 266, 273, 279], "independ": [1, 4, 231, 252], "other": [1, 4, 5, 6, 7, 8, 9, 12, 15, 17, 33, 34, 36, 48, 118, 153, 221, 225, 226, 227, 228, 232, 233, 234, 241, 251, 252, 253, 255, 256, 266, 279], "thu": [1, 6, 13, 254], "allow": [1, 7, 15, 16, 20, 30, 33, 40, 48, 108, 122, 125, 127, 230, 252, 254, 255, 260, 263, 267, 279], "clean": [1, 5, 102, 107, 230, 232, 234], "plan": [1, 12, 217, 223, 224, 230, 246, 252, 269, 270, 279], "For": [1, 2, 4, 5, 6, 11, 13, 15, 17, 102, 118, 122, 219, 220, 223, 224, 225, 230, 233, 234, 254, 255, 256, 264, 267, 269, 270, 273, 274, 279], "you": [1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 118, 119, 120, 121, 122, 123, 217, 227, 230, 232, 233, 234, 246, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 267, 273, 278, 279], "can": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 30, 33, 34, 35, 36, 40, 42, 62, 65, 67, 86, 90, 91, 93, 101, 102, 107, 118, 119, 120, 121, 122, 123, 125, 217, 220, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 269, 270, 273, 278, 279], "provid": [1, 2, 4, 7, 8, 13, 15, 16, 17, 20, 33, 35, 36, 42, 85, 89, 95, 108, 112, 122, 125, 127, 137, 201, 217, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 246, 250, 251, 252, 253, 254, 255, 260, 264, 267, 272, 273], "an": [1, 2, 4, 5, 6, 8, 10, 12, 15, 16, 17, 20, 28, 33, 34, 35, 36, 51, 58, 60, 61, 87, 94, 103, 105, 109, 116, 122, 127, 165, 220, 225, 226, 227, 228, 230, 231, 232, 233, 234, 251, 252, 253, 255, 257, 260, 263, 269, 273, 278, 279], "intend": [1, 5, 7, 8, 231, 255, 270, 279], "meet": 1, "includ": [1, 4, 5, 6, 7, 8, 12, 13, 16, 17, 35, 41, 42, 49, 97, 98, 109, 122, 125, 133, 142, 150, 157, 203, 205, 220, 221, 225, 226, 228, 230, 231, 232, 233, 234, 236, 251, 252, 253, 254, 255, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 276, 277, 278, 279], "detail": [1, 2, 4, 6, 8, 10, 11, 12, 54, 108, 219, 221, 228, 230, 233, 234, 251, 254, 267, 273], "pde": 1, "solver": [1, 232, 234, 253, 273], "similar": [1, 4, 8, 11, 12, 13, 119, 122, 123, 226, 228, 232, 233, 234, 254, 255, 273], "well": [1, 5, 8, 11, 12, 122, 125, 212, 220, 223, 224, 225, 230, 234, 252, 254, 255, 267, 273, 279], "perform": [1, 4, 7, 13, 15, 16, 33, 38, 39, 41, 58, 108, 122, 136, 137, 142, 146, 150, 162, 170, 178, 192, 200, 201, 202, 217, 220, 221, 223, 224, 225, 230, 231, 232, 243, 252, 253, 254, 255, 260, 266, 278], "In": [1, 5, 6, 7, 8, 10, 13, 15, 16, 33, 122, 125, 221, 226, 228, 230, 231, 232, 233, 234, 253, 254, 255, 260, 263, 267, 269, 272, 273, 277, 278, 279], "steer": 1, "awai": 1, "from": [1, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 20, 22, 23, 26, 33, 34, 35, 42, 44, 46, 49, 51, 75, 77, 82, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 102, 103, 104, 105, 108, 110, 112, 113, 116, 117, 122, 127, 130, 137, 159, 164, 167, 172, 180, 183, 186, 194, 197, 213, 217, 219, 220, 221, 223, 224, 225, 226, 227, 232, 233, 236, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 265, 266, 267, 269, 270, 272, 273, 276, 277, 278, 279], "low": [1, 110], "level": [1, 10, 11, 12, 16, 17, 125, 209, 210, 211, 212, 213, 214, 215, 216, 220, 226, 228, 229, 230, 232, 254, 255, 266, 267, 269, 270, 271, 272, 277], "variabl": [1, 4, 12, 17, 18, 20, 33, 36, 42, 58, 65, 71, 75, 85, 86, 90, 93, 108, 110, 111, 112, 117, 122, 125, 127, 133, 137, 140, 148, 152, 157, 159, 162, 167, 169, 172, 175, 178, 181, 183, 186, 188, 189, 192, 195, 197, 201, 202, 209, 215, 216, 219, 225, 233, 234, 240, 241, 246, 251, 254, 256, 257, 258, 259, 260, 261, 264, 266, 272, 273, 274, 277], "declar": [1, 6], "interfac": [1, 9, 207, 208, 209, 215, 216, 230, 233, 234, 253, 254, 263], "sequenc": [1, 4, 13, 229, 230, 233, 252, 254, 273, 278, 279], "If": [1, 4, 5, 6, 7, 8, 11, 13, 16, 17, 20, 30, 33, 35, 40, 42, 43, 44, 51, 81, 82, 83, 85, 108, 110, 118, 119, 120, 121, 122, 123, 127, 137, 178, 192, 201, 220, 230, 232, 233, 234, 248, 251, 252, 254, 255, 260, 261, 263, 267, 272, 273, 277], "want": [1, 4, 5, 10, 13, 15, 16, 44, 122, 125, 230, 234, 251, 254, 255, 260, 261, 271, 273, 279], "math": 1, "syntax": [1, 254], "almost": [1, 8], "ident": [1, 4, 16, 135, 143, 151, 220, 231, 233, 239, 254, 266], "latex": 1, "b": [1, 4, 5, 234, 252, 254, 273], "2": [1, 5, 12, 13, 16, 34, 122, 151, 219, 220, 228, 231, 234, 240, 248, 254, 255, 257, 260, 263, 266, 267, 269, 270, 273], "2ab": 1, "imag": [1, 6, 17, 109, 110, 226, 254, 272, 277], "keep": [1, 4, 5, 8, 13, 20, 48, 226, 227, 230, 232, 234, 254, 272, 277], "mind": [1, 4, 254], "quit": [1, 228, 230, 232, 254], "small": [1, 8, 39, 122, 226, 230, 254, 256, 257, 262, 263, 271, 273], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 29, 30, 33, 35, 39, 40, 42, 48, 70, 81, 82, 85, 97, 98, 102, 113, 122, 125, 127, 137, 178, 192, 201, 209, 212, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 269, 270, 271, 272, 273, 276, 277, 278, 279], "prefer": [1, 122, 230, 231, 254, 255], "png": [1, 12, 17, 221, 254], "okai": [1, 5, 230, 254], "size": [1, 12, 60, 61, 70, 125, 129, 131, 132, 220, 226, 254, 255, 266, 267, 269, 270, 271, 272, 277], "repo": [1, 4, 5, 122, 217, 246, 253, 254, 274], "exampl": [1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 122, 226, 227, 228, 230, 231, 232, 233, 234, 251, 252, 254, 255, 257, 263, 272, 273, 278, 279], "centric": 1, "pseudo": 1, "link": [1, 6, 10, 13, 35, 51, 122, 226, 230, 234, 254, 260, 264, 273, 274], "actual": [1, 4, 5, 11, 230, 232, 234, 254], "sourc": [1, 5, 6, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 230, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 254, 255, 256, 257, 258, 259, 260, 261, 273], "project": [1, 4, 5, 6, 57, 89, 95, 217, 233, 234, 246, 248, 254, 255, 256, 257, 260, 273, 274], "manag": [1, 251, 260], "item": [1, 254], "git": [1, 5, 14, 84, 217, 234, 246, 254, 255, 273], "branch": [1, 4, 122, 217, 227, 230, 234, 246, 253, 254, 273], "timelin": 1, "staf": 1, "via": [1, 4, 5, 13, 230, 234, 260], "block": [1, 232], "like": [1, 4, 5, 6, 7, 8, 9, 10, 13, 16, 86, 90, 93, 122, 125, 226, 228, 230, 233, 234, 251, 253, 254, 255, 260, 266, 267, 273, 279], "def": [1, 6, 8, 10, 11, 15, 16, 17, 226, 227, 230, 232, 233, 254], "example_funct": 1, "foo": [1, 233], "return": [1, 6, 26, 47, 49, 52, 59, 60, 61, 66, 70, 77, 80, 81, 91, 99, 100, 102, 103, 105, 108, 112, 116, 117, 125, 128, 130, 132, 138, 160, 163, 176, 177, 179, 190, 191, 193, 207, 210, 211, 212, 213, 214, 232, 233, 254, 267], "0": [1, 4, 5, 6, 12, 13, 15, 16, 17, 60, 86, 90, 93, 108, 110, 118, 119, 120, 121, 122, 123, 125, 209, 214, 215, 216, 219, 221, 226, 230, 233, 248, 251, 254, 255, 257, 260, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 277], "how": [1, 4, 5, 11, 13, 65, 125, 229, 230, 232, 233, 234, 255, 260, 261], "show": [1, 6, 12, 230, 254, 260, 261, 266, 267, 272, 277], "we": [1, 4, 6, 8, 10, 12, 13, 15, 16, 17, 121, 122, 125, 131, 220, 221, 223, 224, 225, 226, 229, 230, 232, 233, 234, 250, 253, 254, 255, 257, 259, 260, 261, 263, 267, 271, 273, 278], "have": [1, 3, 4, 5, 6, 8, 10, 11, 13, 15, 26, 33, 34, 96, 101, 102, 107, 121, 122, 125, 130, 159, 172, 183, 186, 197, 217, 220, 223, 224, 226, 228, 230, 231, 232, 233, 234, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 273, 278, 279], "met": 1, "which": [1, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 20, 23, 24, 26, 33, 35, 42, 47, 85, 87, 94, 101, 102, 103, 107, 110, 112, 122, 125, 127, 130, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 159, 176, 177, 190, 191, 201, 217, 219, 226, 227, 229, 230, 232, 234, 239, 240, 242, 244, 254, 255, 257, 260, 263, 266, 267, 269, 270, 271, 272, 273], "regress": [1, 220, 221, 231, 252, 253, 254, 266, 267, 273, 278], "suit": [1, 5, 6, 11, 16, 33, 42, 53, 54, 97, 98, 100, 102, 122, 220, 229, 230, 232, 234, 252, 253, 254, 255, 256, 257, 258, 259, 261, 264, 266], "would": [1, 4, 8, 13, 16, 20, 30, 33, 40, 43, 81, 82, 85, 122, 125, 127, 137, 178, 192, 201, 220, 228, 230, 232, 233, 234, 251, 254, 260, 263, 273], "thei": [1, 4, 5, 6, 7, 11, 12, 13, 17, 33, 34, 35, 44, 48, 65, 98, 113, 122, 125, 217, 220, 221, 226, 229, 230, 232, 233, 234, 248, 252, 253, 254, 255, 260, 263, 266, 267, 273], "need": [1, 3, 4, 5, 6, 10, 11, 12, 13, 15, 16, 25, 43, 48, 66, 122, 125, 139, 145, 217, 226, 227, 230, 232, 233, 234, 246, 248, 251, 253, 254, 255, 256, 260, 261, 263, 266, 267, 273, 278], "configur": [1, 4, 5, 6, 8, 10, 13, 15, 30, 33, 40, 42, 49, 53, 80, 81, 82, 83, 84, 101, 102, 107, 122, 125, 207, 209, 210, 211, 215, 216, 220, 226, 230, 233, 253, 254, 255, 257, 260, 261, 263, 269, 270, 272, 273, 277, 279], "work": [1, 4, 5, 7, 10, 11, 13, 14, 15, 33, 35, 36, 38, 41, 42, 43, 46, 53, 84, 97, 101, 102, 107, 121, 122, 142, 150, 167, 170, 228, 229, 230, 231, 232, 233, 234, 251, 252, 254, 255, 260, 267, 271, 273, 279], "properli": [1, 118, 120, 121, 254, 255, 273], "addit": [1, 6, 8, 16, 33, 225, 226, 227, 228, 230, 232, 233, 234, 254], "modif": [1, 6, 230, 248], "nightli": [1, 234, 273, 278], "anoth": [1, 5, 6, 8, 9, 12, 15, 16, 33, 34, 35, 108, 217, 226, 230, 232, 233, 234, 252, 254, 255, 266, 273, 278, 279], "might": [1, 5, 10, 13, 15, 17, 122, 226, 230, 234, 254, 255, 260, 273], "made": [1, 4, 15, 33, 36, 42, 108, 230, 232, 233, 248, 250, 252, 254, 279], "ensur": [1, 8, 13, 48, 122, 220, 233, 234, 267, 271], "continu": [1, 5, 230, 254], "expect": [1, 11, 15, 122, 227, 230, 234, 254, 267, 271], "page": [2, 6, 122, 256], "auto": 2, "summari": [2, 257], "more": [2, 4, 5, 8, 10, 11, 12, 13, 15, 33, 42, 46, 66, 101, 102, 122, 125, 219, 220, 221, 226, 228, 230, 231, 233, 234, 236, 252, 260, 264, 266, 267, 272, 273, 274, 277, 279], "relev": [2, 6, 8, 125, 223, 224, 254, 256, 257, 258, 259, 260, 261, 272, 273, 277], "main": [2, 5, 6, 8, 13, 38, 122, 170, 226, 227, 233, 234, 254, 279], "part": [2, 4, 5, 6, 11, 13, 16, 17, 33, 42, 137, 162, 178, 192, 201, 220, 223, 224, 230, 231, 233, 234, 253, 254, 263], "document": [2, 8, 13, 230, 233, 253, 255, 273], "ocean": [2, 4, 6, 8, 9, 10, 12, 13, 16, 17, 18, 26, 35, 107, 122, 218, 220, 221, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 252, 253, 254, 255, 260, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 278, 279], "seaic": [2, 18, 35, 230, 247, 250, 252, 253, 273, 274, 277, 279], "As": [3, 4, 5, 12, 16, 60, 125, 226, 230, 231, 232, 233, 234, 254, 255, 263, 267, 271, 278], "long": [3, 20, 30, 33, 40, 81, 82, 127, 137, 178, 192, 201, 230, 254, 266, 273], "follow": [3, 4, 6, 12, 13, 17, 57, 122, 209, 215, 216, 217, 219, 220, 230, 231, 232, 234, 246, 248, 251, 254, 255, 260, 261, 263, 265, 267, 269, 270, 271, 273, 276], "procedur": [3, 122, 234, 254, 261], "conda": [3, 4, 14, 84, 118, 120, 121, 122, 217, 227, 233, 246, 253, 254, 255, 256, 257, 258, 259, 261], "environ": [3, 4, 118, 120, 121, 217, 227, 233, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261], "spack": [3, 4, 118, 120, 121, 251, 253, 254, 256, 257, 258, 259, 260, 261], "compil": [3, 4, 5, 13, 118, 119, 120, 121, 122, 123, 251, 253, 254, 256, 257, 258, 259, 260, 261, 273], "system": [3, 4, 5, 20, 30, 33, 40, 81, 82, 83, 118, 120, 121, 122, 127, 137, 178, 192, 201, 230, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 273], "modul": [3, 4, 8, 9, 11, 13, 14, 22, 23, 24, 57, 77, 103, 118, 120, 121, 122, 125, 226, 227, 228, 230, 232, 236, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 273], "set": [3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 21, 22, 23, 24, 25, 33, 35, 41, 66, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 99, 101, 102, 103, 105, 107, 108, 109, 110, 118, 119, 120, 121, 122, 123, 137, 139, 142, 145, 150, 158, 164, 180, 194, 201, 209, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 229, 230, 232, 233, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 269, 270, 271, 272, 277, 278], "up": [3, 4, 5, 6, 7, 9, 10, 13, 15, 21, 22, 23, 24, 33, 41, 42, 72, 84, 96, 99, 101, 102, 107, 108, 118, 119, 120, 121, 122, 123, 125, 142, 150, 217, 220, 221, 223, 224, 225, 229, 230, 232, 233, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 267, 272, 277, 278, 279], "alreadi": [3, 5, 10, 13, 43, 44, 51, 122, 125, 137, 201, 232, 233, 234, 254, 255, 260, 263, 267, 273], "packag": [3, 4, 5, 6, 8, 9, 12, 13, 14, 22, 23, 24, 35, 44, 50, 77, 84, 103, 107, 112, 122, 226, 227, 228, 229, 230, 232, 234, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 273], "avail": [3, 4, 6, 10, 13, 17, 20, 30, 33, 36, 37, 40, 47, 54, 80, 81, 82, 122, 127, 137, 178, 192, 201, 221, 230, 232, 233, 234, 254, 256, 257, 258, 259, 261, 266, 273, 278], "Then": [3, 5, 6, 10, 13, 118, 119, 120, 121, 122, 123, 217, 220, 223, 224, 225, 227, 230, 232, 234, 246, 254, 260, 266, 273], "run": [3, 4, 5, 6, 9, 11, 15, 16, 17, 20, 25, 30, 33, 34, 36, 39, 40, 42, 43, 46, 57, 80, 81, 82, 91, 101, 102, 107, 121, 122, 127, 136, 137, 139, 143, 145, 148, 152, 154, 159, 162, 164, 172, 178, 180, 183, 186, 192, 194, 197, 200, 201, 202, 217, 220, 221, 223, 224, 225, 228, 229, 231, 232, 233, 239, 240, 243, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 278, 279], "script": [3, 4, 5, 11, 17, 45, 53, 119, 122, 123, 233, 252, 253, 254, 257, 260], "doc": [3, 6, 254, 261], "cd": [3, 5, 217, 234, 246, 254, 257, 273], "rm": 3, "rf": 3, "developers_guid": [3, 254], "_build": 3, "make": [3, 4, 5, 6, 10, 11, 15, 16, 20, 29, 35, 48, 59, 60, 62, 75, 118, 119, 120, 121, 122, 123, 127, 131, 135, 143, 151, 169, 209, 215, 216, 217, 220, 226, 230, 232, 233, 234, 239, 246, 252, 255, 256, 257, 258, 259, 260, 261, 266, 267, 273, 278], "html": [3, 264], "view": [3, 223, 224, 234, 269, 270], "open": [3, 5, 234, 254], "index": [3, 16, 110, 209, 210, 211, 212, 213, 214, 215, 216, 226, 254], "act": [4, 233, 263], "essenti": [4, 13], "4": [4, 6, 12, 13, 122, 135, 136, 220, 223, 224, 225, 227, 230, 232, 254, 255, 260, 266, 269, 270, 271, 273], "These": [4, 5, 7, 13, 18, 33, 122, 125, 217, 219, 227, 230, 232, 233, 234, 246, 248, 253, 254, 255, 260, 266, 270, 273, 278, 279], "user": [4, 5, 6, 7, 8, 10, 13, 15, 33, 42, 43, 48, 53, 84, 122, 125, 220, 223, 224, 225, 230, 231, 232, 251, 252, 254, 257, 260, 261, 264, 266, 267, 274], "describ": [4, 6, 13, 15, 84, 103, 105, 117, 125, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 267, 273], "below": [4, 5, 13, 20, 30, 33, 40, 81, 82, 122, 127, 137, 178, 192, 201, 217, 226, 228, 230, 232, 234, 254, 255, 260, 263, 267, 269, 270, 271, 273], "when": [4, 5, 11, 13, 15, 16, 21, 22, 23, 24, 26, 33, 34, 39, 42, 43, 48, 49, 51, 54, 97, 108, 122, 125, 130, 214, 220, 221, 223, 224, 225, 226, 230, 232, 233, 234, 253, 254, 256, 257, 258, 259, 261, 263, 266, 267, 271, 273, 279], "instal": [4, 5, 122, 234, 254, 260, 261, 273], "abov": [4, 6, 13, 16, 122, 226, 228, 230, 231, 232, 233, 234, 254, 255, 267, 269, 270, 271, 273, 278], "develop": [4, 5, 6, 7, 11, 12, 17, 122, 125, 217, 219, 227, 230, 231, 233, 248, 251, 255, 260, 264, 273], "local": [4, 5, 7, 10, 16, 33, 35, 42, 217, 228, 230, 232, 234, 246, 251, 254, 255, 260, 261, 263], "off": [4, 5, 234, 251], "http": [4, 6, 10, 51, 230, 233, 251, 253, 254, 255, 261, 264, 273, 274], "github": [4, 5, 6, 233, 234, 253, 254, 255, 264, 273, 274], "com": [4, 5, 6, 51, 233, 234, 253, 254, 255, 273, 274], "e3sm": [4, 6, 9, 10, 33, 111, 122, 217, 227, 230, 231, 233, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 274], "creat": [4, 7, 10, 11, 12, 13, 14, 15, 16, 18, 20, 33, 35, 39, 42, 51, 58, 59, 65, 66, 71, 85, 92, 101, 102, 107, 111, 122, 125, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 157, 159, 162, 165, 167, 169, 172, 174, 175, 178, 181, 183, 186, 188, 189, 192, 195, 197, 200, 201, 202, 203, 205, 209, 215, 216, 221, 225, 226, 230, 231, 232, 233, 239, 240, 242, 243, 244, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 267, 273, 278], "see": [4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 118, 120, 121, 122, 220, 221, 224, 230, 232, 234, 236, 251, 254, 255, 260, 264, 265, 266, 271, 272, 273, 274, 276, 277, 278, 279], "mode": [4, 13, 227, 234, 252, 253, 254, 273], "mean": [4, 160, 221, 223, 224, 234, 254, 263, 266, 269, 270, 278], "chang": [4, 5, 7, 13, 15, 65, 96, 217, 227, 230, 231, 232, 233, 234, 236, 246, 252, 254, 255, 257, 261, 263, 266, 273, 278], "reflect": [4, 234], "call": [4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 28, 33, 39, 42, 43, 44, 57, 91, 97, 122, 125, 220, 223, 224, 225, 227, 230, 231, 232, 233, 234, 251, 252, 253, 254, 255, 260, 261, 273], "tool": [4, 5, 8, 11, 13, 15, 217, 227, 230, 234, 246, 253, 254, 255], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 25, 26, 30, 33, 34, 35, 39, 40, 42, 43, 46, 49, 53, 66, 75, 78, 81, 82, 85, 91, 97, 108, 109, 110, 111, 112, 117, 118, 122, 125, 127, 128, 129, 130, 131, 137, 138, 139, 145, 152, 157, 159, 163, 167, 178, 179, 185, 188, 192, 193, 201, 207, 209, 210, 211, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 240, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 269, 270, 271, 272, 273, 276, 278, 279], "task": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 30, 32, 33, 36, 37, 39, 40, 41, 47, 54, 57, 63, 68, 80, 81, 82, 84, 85, 97, 98, 101, 102, 107, 122, 125, 127, 129, 131, 217, 219, 220, 221, 223, 224, 225, 227, 228, 230, 231, 234, 236, 246, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 274, 278], "support": [4, 5, 7, 12, 15, 33, 125, 209, 215, 216, 219, 221, 230, 233, 252, 253, 254, 255, 257, 261, 263, 266, 271, 279], "machin": [4, 7, 33, 35, 42, 52, 53, 84, 101, 102, 107, 217, 230, 232, 233, 246, 253, 254, 255, 256, 257, 258, 259, 261], "option": [4, 6, 8, 12, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 40, 42, 43, 44, 46, 48, 49, 51, 52, 53, 54, 58, 64, 65, 66, 69, 71, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 122, 127, 130, 137, 139, 145, 147, 158, 164, 175, 178, 180, 189, 192, 194, 201, 203, 205, 207, 209, 210, 211, 215, 216, 217, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 242, 246, 248, 251, 253, 255, 263, 265, 273, 279], "h": [4, 13, 254], "t": [4, 5, 6, 8, 10, 11, 13, 33, 34, 117, 122, 125, 137, 176, 177, 190, 191, 201, 223, 224, 230, 232, 233, 234, 251, 254, 255, 257, 259, 260, 265, 266, 269, 270, 273, 278, 279], "test": [4, 6, 7, 8, 17, 42, 43, 46, 53, 80, 81, 82, 100, 108, 122, 126, 133, 134, 136, 137, 143, 144, 146, 147, 148, 149, 151, 156, 157, 158, 159, 161, 162, 165, 167, 168, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 242, 243, 244, 245, 246, 250, 252, 253, 259, 260, 261, 263, 266, 267, 269, 270, 271, 272, 273, 274, 277, 278], "n": [4, 5, 59, 66, 67, 73, 230, 254, 257, 260, 261, 266, 267, 269, 270, 272, 273, 277], "number": [4, 5, 7, 12, 13, 20, 27, 30, 32, 33, 37, 39, 40, 52, 53, 54, 58, 59, 60, 61, 62, 70, 80, 81, 82, 85, 102, 122, 125, 127, 128, 129, 131, 137, 138, 152, 160, 163, 175, 178, 179, 189, 192, 193, 201, 217, 220, 223, 224, 226, 230, 231, 232, 233, 240, 252, 254, 255, 260, 263, 265, 266, 267, 269, 270, 271, 272, 273, 277], "v": [4, 234, 254, 269, 270, 278], "By": [4, 13, 16, 34, 35, 125, 217, 227, 232, 246, 254, 255, 266, 271], "default": [4, 6, 8, 13, 16, 17, 20, 33, 34, 35, 42, 46, 53, 66, 71, 76, 84, 85, 86, 90, 93, 98, 101, 102, 104, 107, 110, 118, 120, 121, 122, 125, 137, 217, 221, 223, 224, 225, 226, 227, 230, 232, 234, 246, 248, 253, 255, 256, 257, 258, 259, 260, 261, 263, 267, 271, 272, 273, 277, 279], "all": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 20, 33, 40, 42, 47, 81, 82, 84, 102, 108, 122, 125, 126, 127, 133, 137, 178, 192, 201, 209, 215, 216, 217, 220, 226, 227, 228, 230, 231, 232, 233, 234, 237, 246, 252, 253, 254, 255, 260, 263, 264, 266, 267, 272, 273, 274, 277, 279], "testcas": [4, 254, 255, 266, 271, 273], "example_compact": [4, 217, 227, 246, 255], "1km": [4, 254, 266, 273], "test1": 4, "1": [4, 6, 12, 13, 15, 16, 17, 33, 60, 118, 119, 120, 121, 122, 123, 125, 135, 137, 151, 178, 192, 200, 201, 202, 209, 215, 216, 220, 221, 223, 224, 225, 226, 227, 228, 230, 232, 234, 248, 251, 254, 255, 257, 260, 261, 263, 266, 267, 269, 270, 271, 272, 273], "test2": 4, "displai": [4, 7, 261], "path": [4, 5, 8, 10, 13, 16, 33, 35, 36, 42, 43, 46, 48, 49, 51, 54, 57, 84, 101, 102, 107, 108, 110, 122, 217, 226, 227, 230, 232, 233, 234, 240, 246, 252, 254, 255, 256, 257, 258, 259, 260, 261, 273, 279], "directori": [4, 5, 7, 10, 11, 13, 14, 17, 20, 33, 35, 36, 41, 42, 43, 46, 51, 53, 84, 85, 97, 101, 102, 107, 108, 122, 127, 133, 135, 136, 137, 140, 142, 143, 144, 146, 148, 150, 151, 152, 154, 167, 201, 217, 220, 227, 229, 230, 231, 232, 233, 234, 240, 242, 244, 246, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 267, 273, 279], "help": [4, 5, 12, 122, 226, 228, 230, 234, 253, 254, 260, 264, 274], "messag": [4, 7, 122, 230, 251, 261], "task_expr": [4, 54], "flag": [4, 5, 122, 230, 233, 251, 252, 254, 255, 264, 266, 273, 274], "suppli": [4, 5, 6, 16, 117, 122, 230, 234, 254], "substr": [4, 122], "regular": [4, 17, 54, 59, 66, 157, 159, 254, 256, 259, 260, 261, 273], "express": [4, 54], "subset": 4, "think": [4, 254], "search": [4, 54, 257], "within": [4, 6, 8, 9, 10, 11, 13, 18, 30, 33, 35, 36, 40, 42, 43, 50, 107, 108, 122, 220, 223, 224, 226, 227, 228, 230, 231, 232, 234, 236, 248, 252, 254, 255, 257, 260, 267, 271, 272, 277], "name": [4, 6, 7, 8, 12, 13, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 33, 34, 35, 36, 42, 44, 49, 51, 52, 53, 54, 58, 65, 71, 75, 77, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 116, 122, 125, 127, 130, 132, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 159, 160, 162, 165, 167, 169, 201, 208, 226, 227, 230, 232, 233, 234, 240, 242, 244, 252, 254, 255, 261, 266, 273, 278], "singl": [4, 7, 17, 110, 122, 199, 200, 202, 203, 205, 225, 230, 232, 233, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 252, 254, 260, 267, 269, 270, 271, 276], "given": [4, 6, 7, 12, 13, 15, 16, 18, 20, 49, 60, 70, 77, 81, 82, 98, 103, 105, 108, 112, 125, 127, 146, 160, 212, 220, 221, 225, 230, 232, 251, 253, 254, 255, 266, 267, 271, 272, 273, 277, 278], "instead": [4, 5, 11, 13, 20, 98, 118, 122, 230, 233, 234, 252, 254, 256, 273, 278], "pass": [4, 7, 11, 12, 13, 16, 70, 108, 109, 226, 227, 230, 232, 233, 234, 252, 273], "similarli": [4, 7, 217, 230, 234, 260, 273], "compon": [4, 5, 6, 7, 9, 12, 20, 33, 35, 42, 43, 53, 56, 58, 65, 71, 84, 85, 101, 107, 111, 122, 127, 133, 134, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 156, 157, 159, 162, 165, 167, 169, 171, 172, 174, 178, 181, 183, 185, 186, 188, 192, 195, 197, 199, 200, 201, 202, 203, 205, 226, 228, 229, 230, 231, 232, 237, 238, 239, 240, 242, 243, 244, 248, 252, 253, 254, 255, 260, 262, 265, 278, 279], "result": [4, 12, 16, 49, 61, 70, 122, 125, 135, 143, 148, 151, 154, 205, 220, 221, 230, 231, 233, 234, 239, 244, 252, 254, 255, 266, 267, 272, 277, 278], "verbos": [4, 5, 54, 56, 122, 230, 254, 278], "about": [4, 5, 6, 7, 11, 13, 33, 85, 111, 125, 226, 230, 232, 233, 234, 254, 255, 257], "its": [4, 5, 6, 7, 11, 15, 17, 33, 44, 91, 96, 104, 122, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 252, 254, 255, 256, 267, 273, 279], "descript": [4, 6, 254, 255, 264, 274], "short": [4, 136, 200, 202, 230, 231, 232, 233, 243, 254, 266], "core": [4, 6, 7, 13, 20, 30, 32, 33, 35, 37, 39, 40, 42, 53, 80, 81, 82, 107, 122, 125, 126, 127, 135, 136, 200, 202, 220, 225, 226, 227, 230, 231, 232, 233, 248, 252, 254, 255, 256, 257, 258, 259, 260, 261, 273, 278], "subdirectori": [4, 6, 7, 12, 18, 20, 33, 35, 42, 43, 54, 58, 65, 71, 85, 101, 127, 137, 159, 162, 165, 167, 169, 172, 178, 181, 183, 186, 192, 195, 197, 201, 203, 205, 220, 226, 228, 230, 232, 233, 254, 272, 273, 277, 279], "step": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 42, 43, 46, 58, 63, 65, 68, 71, 72, 80, 82, 84, 85, 91, 96, 97, 98, 101, 102, 122, 125, 127, 132, 133, 137, 139, 140, 141, 142, 144, 145, 148, 149, 150, 152, 153, 154, 155, 157, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 178, 180, 181, 182, 183, 184, 186, 187, 192, 194, 195, 196, 197, 198, 201, 203, 204, 205, 206, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 232, 233, 236, 240, 241, 242, 244, 245, 250, 252, 253, 255, 261, 263, 278, 279], "tempat": 4, "subdir": [4, 15, 20, 33, 42, 43, 58, 65, 71, 85, 127, 137, 162, 165, 167, 169, 201, 226, 230, 232, 240, 254], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 6, 8, 11, 12, 13, 97, 217, 226, 227, 230, 232, 246, 252, 253, 254, 264, 271, 272, 274, 277, 279], "must": [4, 6, 10, 13, 17, 20, 23, 24, 33, 36, 38, 107, 109, 110, 122, 125, 127, 170, 219, 230, 232, 234, 254, 263, 279], "built": [4, 13, 101, 102, 107, 122, 217, 227, 234, 246, 253, 255, 260, 273], "execut": [4, 7, 13, 20, 101, 102, 107, 122, 127, 217, 227, 230, 234, 246, 254, 255, 256, 257, 258, 259, 260, 261, 273], "standalon": [4, 13, 121, 122, 227, 234, 252, 253, 260, 274], "mpa": [4, 8, 10, 11, 12, 13, 15, 16, 17, 20, 26, 33, 35, 57, 75, 87, 94, 103, 105, 107, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 157, 167, 175, 189, 208, 217, 218, 220, 221, 223, 224, 225, 227, 230, 233, 234, 236, 237, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 269, 271, 272, 273, 274, 277, 278, 279], "befor": [4, 5, 7, 13, 15, 39, 102, 107, 122, 230, 232, 233, 234, 251, 254, 257, 261, 263, 267, 273], "w": [4, 5, 234, 252, 254, 273], "num": 4, "f": [4, 8, 10, 13, 16, 226, 232, 233, 234, 254, 255, 261, 266, 269, 273], "file": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 33, 34, 35, 36, 39, 41, 42, 44, 46, 49, 51, 57, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 127, 131, 132, 139, 142, 145, 150, 167, 169, 208, 217, 220, 221, 223, 224, 225, 226, 227, 231, 232, 233, 234, 236, 240, 246, 248, 250, 251, 252, 253, 257, 260, 261, 263, 266, 267, 272, 273, 276, 277, 279], "m": [4, 5, 13, 59, 66, 67, 73, 220, 225, 226, 234, 254, 256, 257, 258, 259, 261, 263, 266, 267, 271, 273], "mach": [4, 33, 122, 253, 256, 257, 258, 259, 260, 261, 273], "p": [4, 5, 234, 254, 255, 273], "suite_nam": [4, 7, 98, 100, 102, 107, 273], "specifi": [4, 5, 13, 15, 16, 17, 35, 122, 219, 230, 234, 250, 254, 255, 261, 266, 267, 272, 273, 277], "either": [4, 5, 6, 7, 11, 12, 13, 15, 60, 122, 125, 217, 230, 232, 234, 252, 254, 255, 263, 271, 273], "case": [4, 5, 6, 7, 8, 13, 17, 23, 24, 42, 43, 46, 53, 80, 81, 82, 103, 108, 122, 125, 126, 133, 136, 143, 144, 146, 147, 148, 149, 151, 156, 157, 158, 159, 161, 162, 165, 167, 168, 172, 173, 174, 175, 178, 181, 182, 183, 184, 186, 187, 188, 189, 192, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 220, 221, 223, 224, 225, 226, 227, 228, 230, 232, 234, 236, 237, 239, 242, 243, 245, 252, 253, 254, 260, 261, 263, 266, 267, 269, 270, 271, 272, 273, 277, 278], "onli": [4, 5, 6, 7, 13, 15, 16, 42, 122, 217, 219, 221, 225, 227, 230, 232, 233, 236, 246, 250, 253, 254, 255, 257, 260, 261, 263, 265, 266, 267, 269, 270, 271, 273, 276], "time": [4, 5, 6, 7, 13, 16, 17, 33, 42, 52, 110, 122, 125, 132, 137, 146, 164, 176, 177, 180, 190, 191, 194, 201, 219, 220, 221, 223, 224, 226, 230, 231, 232, 233, 234, 250, 251, 252, 255, 257, 261, 273, 278], "wai": [4, 6, 12, 13, 33, 62, 67, 122, 230, 232, 233, 234, 251, 253, 254, 260, 263, 271], "altern": [4, 12, 248, 273], "ani": [4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 29, 41, 101, 102, 142, 150, 226, 227, 228, 230, 231, 232, 233, 234, 254, 255, 260, 266, 267, 271, 272, 273, 276, 277], "case_numb": 4, "multipl": [4, 13, 122, 218, 231, 233, 234, 254, 260, 266, 273], "separ": [4, 6, 8, 13, 15, 16, 230, 231, 252, 254, 267, 273], "space": [4, 5, 6, 8, 12, 122, 223, 224, 230, 234, 254, 257, 260, 273], "requir": [4, 5, 7, 13, 20, 30, 33, 34, 40, 85, 127, 137, 178, 192, 201, 217, 226, 227, 230, 231, 232, 233, 234, 246, 248, 251, 253, 254, 255, 260, 263, 264, 272, 273, 274, 277, 279], "few": [4, 12, 13, 20, 30, 33, 40, 81, 82, 122, 127, 220, 223, 224, 225, 230, 233, 254, 255, 260], "basic": [4, 6, 255, 257, 260, 273], "piec": [4, 226, 227, 254], "inform": [4, 6, 7, 33, 85, 108, 117, 175, 189, 230, 232, 234, 255, 257, 264, 273, 274], "abl": [4, 118, 119, 120, 121, 123, 125, 230, 231, 234, 254, 260, 273], "place": [4, 5, 13, 109, 122, 226, 230, 232, 248, 254, 260], "download": [4, 5, 7, 9, 33, 35, 41, 122, 142, 150, 232, 233, 234, 255, 273, 278], "some": [4, 5, 7, 8, 9, 10, 12, 13, 42, 122, 219, 220, 226, 228, 230, 232, 233, 234, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 273, 274, 278, 279], "data": [4, 9, 12, 15, 16, 17, 21, 33, 34, 35, 91, 103, 105, 106, 109, 110, 111, 117, 122, 167, 209, 215, 216, 230, 234, 253, 255, 256, 257, 258, 259, 260, 273, 278, 279], "locat": [4, 5, 13, 17, 33, 43, 101, 102, 107, 217, 230, 234, 236, 246, 252, 254, 255, 257, 260, 263, 266, 267, 273], "where": [4, 6, 13, 16, 33, 35, 42, 49, 53, 84, 101, 102, 107, 109, 122, 125, 209, 212, 215, 216, 217, 227, 229, 230, 232, 234, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 271, 272, 273, 277, 278], "There": [4, 5, 12, 209, 215, 216, 225, 226, 228, 230, 233, 234, 236, 251, 254, 255, 273], "r": [4, 261, 267], "tell": [4, 5, 122, 234], "re": [4, 5, 230, 233, 234, 252, 254, 255, 260, 261, 267], "leav": [4, 17, 221, 255, 267], "unknown": [4, 122, 233, 260], "component_path": [4, 101, 102, 107, 217, 227, 246, 255, 273], "absolut": [4, 8, 33, 35, 48, 101, 102, 107, 217, 227, 230, 234, 246, 273], "landic": [4, 5, 9, 11, 18, 35, 57, 107, 226, 227, 229, 230, 232, 234, 252, 253, 254, 255, 273, 279], "e3sm_submodul": [4, 217, 227, 234, 246, 248, 254], "mali": [4, 122, 227, 230, 234, 252, 254, 255, 273, 279], "dev": [4, 5, 6, 226, 227, 229, 230, 233, 234, 253, 264, 273, 274], "albani": [4, 118, 120, 121, 122, 227, 255, 256, 257, 258, 261, 273], "depend": [4, 13, 15, 17, 33, 34, 41, 96, 122, 142, 150, 221, 232, 234, 252, 253, 254, 255, 260, 261, 263, 267, 273, 279], "whether": [4, 7, 12, 17, 20, 25, 33, 35, 42, 43, 46, 49, 51, 54, 97, 98, 101, 102, 107, 108, 109, 110, 113, 122, 125, 127, 137, 139, 145, 157, 159, 164, 180, 194, 201, 203, 205, 223, 224, 226, 230, 232, 234, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 269, 270, 271, 272, 273, 277], "omega": [4, 26, 111, 127, 130, 175, 189, 217, 227, 233, 234, 252, 254, 264, 269, 270, 273], "config": [4, 6, 7, 9, 10, 11, 12, 15, 17, 20, 21, 24, 25, 26, 33, 34, 35, 42, 44, 49, 52, 53, 64, 66, 69, 80, 81, 82, 83, 84, 99, 101, 102, 107, 109, 111, 112, 113, 114, 116, 117, 127, 130, 139, 145, 158, 164, 175, 180, 189, 194, 207, 209, 210, 211, 215, 216, 217, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 246, 248, 251, 253, 263, 273, 279], "point": [4, 5, 45, 51, 88, 122, 217, 219, 226, 227, 232, 233, 234, 246, 254, 255, 260, 273], "much": [4, 5, 13, 230, 254], "config_fil": [4, 101, 102, 107], "work_dir": [4, 10, 33, 42, 53, 84, 101, 102, 107, 108, 230, 232, 254], "base": [4, 7, 12, 13, 14, 16, 18, 33, 35, 37, 42, 46, 64, 69, 71, 101, 102, 107, 122, 129, 131, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 223, 224, 225, 227, 229, 230, 232, 233, 234, 246, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 279], "": [4, 5, 6, 7, 10, 11, 13, 15, 33, 35, 36, 42, 43, 44, 46, 72, 97, 104, 107, 122, 125, 167, 217, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 246, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 267, 269, 270, 272, 273, 274, 277], "recommend": [4, 6, 10, 17, 122, 230, 231, 233, 234, 254, 260], "itself": [4, 5, 6, 8, 33, 226, 227, 229, 230, 232, 234, 254, 273], "temp": 4, "scratch": [4, 5, 234, 254, 257, 261, 273], "avoid": [4, 230, 254], "confus": [4, 13, 233, 234, 254], "output": [4, 6, 7, 9, 11, 12, 13, 16, 18, 20, 33, 34, 36, 41, 42, 46, 74, 75, 82, 85, 97, 98, 108, 125, 127, 132, 142, 150, 152, 153, 159, 167, 172, 183, 186, 197, 208, 220, 223, 224, 225, 232, 240, 241, 250, 252, 255, 261, 273, 278], "compar": [4, 9, 16, 33, 36, 101, 102, 107, 108, 152, 153, 201, 221, 225, 231, 232, 233, 234, 240, 241, 250, 252, 254, 265, 266, 273, 276, 278], "previou": [4, 153, 230, 234, 241, 254, 265, 273, 278], "same": [4, 6, 8, 13, 16, 33, 34, 35, 108, 122, 125, 225, 228, 230, 231, 232, 233, 234, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 271, 273, 278, 279], "baseline_dir": [4, 33, 101, 102, 107], "mani": [4, 5, 7, 8, 125, 228, 230, 232, 233, 234, 253, 254, 266, 272, 277], "valid": [4, 9, 33, 36, 209, 210, 211, 212, 213, 214, 215, 216, 220, 223, 224, 225, 226, 233, 234, 253, 263, 266], "sure": [4, 5, 6, 11, 15, 16, 122, 135, 143, 151, 217, 220, 230, 233, 234, 239, 246, 252, 254, 255, 260, 261, 266, 267], "timer": [4, 16, 33, 231, 233], "ha": [4, 5, 8, 13, 20, 30, 33, 34, 36, 40, 42, 43, 44, 83, 91, 118, 120, 121, 122, 127, 137, 178, 192, 201, 217, 227, 228, 229, 230, 231, 232, 233, 234, 246, 248, 251, 252, 254, 255, 263, 266, 271, 273], "both": [4, 5, 6, 7, 12, 13, 25, 122, 125, 139, 145, 220, 226, 227, 229, 230, 234, 253, 254, 255, 265, 269, 270, 271], "custom": [4, 5, 7, 12, 15, 48, 49, 101, 102, 107, 217, 227, 234, 246, 255, 261, 273], "order": [4, 7, 12, 13, 125, 221, 227, 230, 231, 234, 254, 267, 270, 271, 273], "give": [4, 13, 16, 122, 230, 233, 234, 254, 255, 273], "predefin": 4, "so": [4, 5, 6, 8, 11, 12, 13, 16, 17, 20, 32, 122, 125, 127, 209, 215, 216, 217, 220, 223, 224, 226, 227, 230, 232, 233, 234, 246, 252, 254, 255, 260, 261, 263, 266, 267, 271, 273, 278], "after": [4, 5, 6, 13, 15, 16, 17, 33, 35, 36, 72, 91, 122, 210, 211, 217, 227, 230, 232, 234, 246, 254, 255, 257, 261, 273, 276], "c": [4, 5, 102, 122, 230, 234, 256, 257, 258, 259, 260, 261, 265, 273, 278], "argument": [4, 6, 8, 11, 13, 16, 17, 31, 33, 81, 82, 92, 109, 220, 227, 230, 232, 233, 234, 254, 272, 277, 278], "resid": [4, 35], "test_suit": [4, 100, 230], "build": [4, 5, 9, 12, 13, 62, 67, 118, 119, 120, 121, 123, 217, 221, 227, 232, 233, 246, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261], "mpas_model": [4, 255], "overrid": [4, 12, 13, 38, 39, 41, 44, 48, 62, 65, 66, 67, 125, 142, 150, 170, 230, 232, 233, 254, 255, 261, 273], "mai": [4, 5, 6, 7, 11, 12, 13, 16, 34, 36, 39, 96, 109, 122, 217, 219, 226, 230, 231, 232, 234, 236, 246, 248, 251, 252, 254, 255, 261, 267, 271, 272, 273, 277, 279], "baselin": [4, 5, 7, 9, 33, 36, 101, 102, 107, 108, 201, 220, 223, 224, 225, 226, 231, 233, 250, 252, 254, 265, 273], "comparison": [4, 7, 16, 33, 108, 254, 255], "against": [4, 9, 36, 108, 220, 223, 224, 225, 226, 230, 250, 254, 265], "oppos": [4, 25, 139, 145, 157, 159, 164, 180, 194, 254], "parallel": [4, 15, 20, 30, 33, 39, 40, 122, 127, 230, 233, 234, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 273, 279], "been": [4, 5, 13, 33, 36, 42, 43, 44, 91, 101, 102, 107, 118, 120, 121, 122, 125, 159, 172, 183, 186, 197, 217, 227, 230, 232, 233, 234, 246, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 273], "skip_step": 4, "wherea": [4, 11, 230, 252, 254, 265, 279], "typic": [4, 6, 8, 12, 13, 15, 16, 17, 33, 43, 98, 122, 226, 227, 228, 230, 234, 252, 254, 255, 260, 263, 271, 273, 279], "clone": [4, 5, 122, 217, 228, 234, 246, 254, 273], "than": [4, 5, 7, 8, 10, 12, 13, 33, 35, 40, 48, 122, 137, 178, 192, 201, 220, 230, 231, 233, 234, 251, 254, 263, 266, 271], "just": [4, 13, 20, 30, 33, 40, 54, 122, 127, 230, 232, 233, 234, 252, 254, 257, 261], "pickl": [4, 7, 96, 230, 254, 273], "latter": [4, 42, 122], "conveni": [4, 15, 209, 215, 216, 226, 230, 254, 255, 273, 279], "tab": [4, 273], "complet": [4, 7, 22, 23, 24, 254, 273], "explicitli": [4, 6, 125, 220, 223, 224, 230, 234, 254, 255, 273], "select": [4, 7, 110, 230, 234, 254], "two": [4, 9, 16, 108, 143, 153, 220, 221, 223, 224, 225, 226, 227, 230, 231, 233, 234, 239, 241, 254, 266, 267, 269, 270, 276], "edit": [4, 6, 234, 254, 273], "steps_to_run": [4, 42, 98, 230, 232, 254, 255], "init": [4, 5, 6, 13, 16, 17, 30, 40, 133, 217, 219, 226, 227, 230, 232, 233, 234, 246, 248, 255, 266, 267, 269, 270, 273], "full_run": [4, 16, 250, 266, 276], "restart_run": [4, 16, 250, 266, 276], "Or": [4, 230, 255], "accomplish": [4, 230, 233], "thing": [4, 118, 119, 120, 121, 122, 123, 125, 226, 230, 233, 253, 278], "skip": [4, 7, 108, 278], "take": [4, 5, 6, 10, 12, 13, 48, 122, 226, 230, 231, 232, 234, 254, 267, 278], "preced": [4, 48], "over": [4, 8, 13, 48, 109, 230, 232, 233, 253, 254, 263, 266, 271, 273], "special": [4, 252, 272], "databas": [4, 5, 7, 10, 15, 18, 20, 33, 35, 127, 230, 260], "polaris_cach": [4, 7, 18, 230], "symlink": [4, 7, 13, 16, 33, 35, 42, 43, 232, 233, 234], "input": [4, 7, 9, 10, 15, 28, 33, 34, 35, 36, 41, 75, 142, 150, 220, 223, 224, 225, 254, 271], "structur": [4, 12, 26, 130, 229, 232, 253, 254], "without": [4, 35, 230, 233, 234, 254, 255, 259, 260, 269, 270, 272, 273], "redund": [4, 209, 215, 216, 220, 254], "stamp": 4, "revis": [4, 255], "remov": [4, 13, 98, 220, 223, 224, 234, 254], "older": 4, "ones": [4, 209, 215, 216, 233, 254], "version": [4, 5, 14, 28, 48, 84, 108, 122, 217, 220, 226, 227, 228, 230, 232, 233, 234, 246, 247, 253, 254, 255, 260, 261, 264, 266, 267, 273, 274], "A": [4, 5, 6, 7, 10, 12, 13, 15, 17, 18, 21, 23, 24, 26, 33, 34, 35, 36, 37, 42, 43, 47, 48, 54, 58, 59, 62, 65, 66, 67, 71, 77, 80, 82, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 122, 130, 135, 137, 140, 143, 144, 148, 151, 152, 154, 157, 159, 162, 165, 167, 169, 172, 178, 181, 183, 186, 192, 195, 197, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 220, 221, 223, 224, 225, 227, 230, 231, 232, 233, 234, 239, 240, 242, 244, 252, 253, 254, 256, 257, 258, 259, 260, 261, 266, 267, 269, 270, 272, 273, 276, 277], "aid": 4, "updat": [4, 6, 7, 20, 22, 24, 29, 30, 39, 40, 104, 121, 122, 129, 137, 201, 217, 220, 223, 224, 230, 246, 251, 253, 254, 273], "cached_fil": [4, 18, 230], "json": [4, 7, 18, 46, 230, 261], "anvil": [4, 5, 122, 230, 255, 260, 273], "chrysali": [4, 5, 122, 230, 254, 255, 260, 273], "sinc": [4, 13, 96, 117, 220, 230, 232, 233, 234, 254, 266, 267, 269, 270, 272, 277], "copi": [4, 5, 7, 35, 46, 101, 102, 107, 254, 257, 273], "onto": [4, 159, 234], "lcrc": [4, 5, 7, 10, 46, 230, 233, 255, 256, 258, 260, 273], "server": [4, 7, 35, 46, 230, 233, 255, 261], "whose": [4, 230], "global_ocean": [4, 8, 10, 13, 230, 232, 233, 234, 255, 273], "qu240": [4, 13, 230, 233, 234, 255, 273], "mesh": [4, 6, 9, 15, 20, 33, 75, 87, 94, 110, 125, 127, 128, 129, 131, 136, 138, 140, 157, 159, 160, 162, 163, 167, 169, 172, 175, 179, 181, 183, 186, 189, 193, 195, 197, 200, 202, 203, 209, 215, 216, 219, 220, 223, 224, 225, 226, 228, 230, 232, 233, 234, 242, 243, 252, 253, 255, 263, 265, 273, 278], "phc": [4, 230, 263], "ocean_cached_fil": 4, "pr": [4, 5, 273, 278], "look": [4, 5, 6, 10, 16, 233, 254, 255], "someth": [4, 6, 86, 90, 93, 122, 234, 254], "culled_mesh": [4, 230, 254], "nc": [4, 10, 11, 12, 13, 15, 16, 17, 85, 230, 233, 254], "210803": 4, "culled_graph": [4, 230, 254], "info": [4, 11, 13, 20, 27, 75, 122, 127, 230, 254], "critical_passages_mask_fin": 4, "initial_st": [4, 16, 17, 230, 254], "init_mode_forcing_data": [4, 230], "date_str": [4, 46], "let": [4, 230, 234, 252, 254, 255, 261], "string": [4, 8, 13, 35, 89, 95, 122, 234], "choos": [4, 230, 233, 234, 254, 256, 257, 258, 259, 261, 279], "todai": [4, 46], "dry_run": [4, 46], "saniti": [4, 254], "check": [4, 5, 16, 108, 234, 254, 255, 257, 261, 273, 278], "print": [4, 11, 16, 54, 108, 113, 230, 233, 278], "stdout": [4, 11, 33, 42, 230], "translat": [4, 26, 125, 130], "compass": [4, 217, 230, 233, 252, 254], "convert": [4, 8, 12, 13, 125, 230, 254], "namelist": [4, 6, 7, 9, 20, 21, 22, 25, 26, 28, 29, 32, 41, 101, 102, 107, 116, 117, 127, 130, 131, 139, 142, 145, 150, 217, 220, 221, 223, 224, 226, 227, 230, 232, 233, 236, 246, 248, 250, 253, 254, 255, 271], "stream": [4, 6, 7, 9, 20, 23, 25, 28, 41, 111, 116, 117, 131, 139, 142, 145, 150, 217, 219, 220, 223, 224, 225, 226, 227, 230, 232, 233, 246, 250, 255, 272, 277], "yaml": [4, 9, 20, 21, 24, 25, 26, 122, 127, 130, 131, 139, 145, 220, 223, 224, 225, 230, 253, 254, 257, 261], "e": [4, 5, 6, 10, 13, 26, 33, 34, 44, 57, 111, 122, 130, 217, 226, 228, 230, 231, 233, 234, 246, 251, 252, 253, 254, 255, 261, 263, 266, 267, 269, 270, 271, 272, 273, 277, 279], "g": [4, 5, 6, 10, 13, 26, 33, 34, 44, 57, 111, 122, 125, 130, 217, 226, 228, 230, 231, 233, 234, 246, 251, 252, 253, 254, 255, 263, 266, 267, 269, 270, 271, 272, 273, 277], "forward": [4, 6, 13, 33, 132, 136, 144, 146, 200, 202, 217, 227, 230, 232, 233, 243, 246, 255, 266, 267, 269, 270, 272, 277], "becaus": [4, 5, 6, 10, 11, 12, 13, 33, 34, 219, 230, 232, 233, 234, 254, 257, 259, 261, 273], "don": [4, 5, 6, 13, 122, 125, 230, 232, 233, 234, 254, 259, 273, 279], "format": [4, 6, 10, 12, 13, 111, 117, 230, 231, 232, 234, 254, 255, 257], "note": [4, 6, 15, 16, 254, 261], "keyword": [4, 6, 13, 16, 17, 221, 230, 267], "top": [4, 17, 209, 210, 211, 212, 213, 214, 215, 216, 219, 228, 254, 263], "ignor": [4, 89, 95], "get": [4, 5, 6, 8, 10, 11, 13, 15, 20, 21, 22, 23, 24, 33, 42, 43, 47, 52, 60, 80, 91, 97, 122, 125, 127, 226, 229, 230, 232, 233, 234, 252, 255, 263, 273], "pars": [4, 8, 13, 21, 22, 23, 24, 77, 103, 105], "valu": [4, 6, 8, 13, 16, 17, 21, 26, 108, 109, 110, 113, 130, 146, 220, 227, 230, 232, 233, 253, 254, 255, 263, 266, 267, 271], "doesn": [4, 5, 8, 117, 122, 230, 232, 254, 255, 260, 273], "matter": [4, 254], "usabl": 4, "try": [5, 13, 51, 122, 233, 234, 251, 254, 255, 257, 261, 273], "stai": [5, 234], "sync": 5, "mpi": [5, 13, 15, 85, 118, 121, 122, 127, 129, 131, 220, 223, 224, 230, 234, 251, 253, 254, 256, 257, 258, 259, 261, 273], "librari": [5, 13, 118, 122, 234, 254, 256, 257, 258, 259, 260, 261, 273], "netcdf": [5, 122, 132, 225, 255, 256, 257, 258, 259, 260, 261], "fortran": [5, 122, 256, 257, 258, 259, 260, 261], "pnetcdf": [5, 122, 256, 257, 258, 259, 260, 261], "mkl": [5, 122], "linear": [5, 17, 109, 110, 221, 223, 254, 266, 267, 269], "algebra": 5, "lib": [5, 122], "esmf": [5, 234, 273], "scorpio": [5, 234, 260, 273], "forg": [5, 122, 253, 273], "python": [5, 6, 7, 8, 21, 39, 44, 226, 228, 230, 232, 233, 234, 252, 253, 254, 255, 260, 261, 273], "relat": [5, 6, 10, 12, 13, 122, 125, 217, 220, 223, 224, 225, 226, 230, 234, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 271, 272, 273, 274], "aren": [5, 10, 33, 34, 122, 230, 233, 234, 254, 278], "brief": [5, 6, 254], "tour": 5, "login": [5, 122, 234, 257, 261], "node": [5, 13, 20, 32, 33, 37, 40, 52, 80, 81, 82, 122, 127, 230, 231, 233, 234, 254, 255, 256, 257, 258, 259, 260, 261, 273], "bootstrap": 5, "rest": [5, 132, 214, 263, 267], "setup": [5, 6, 8, 10, 13, 16, 25, 30, 33, 34, 40, 42, 122, 139, 145, 164, 180, 194, 220, 223, 224, 225, 232, 233, 234, 236, 252, 253, 254, 255, 267, 273, 279], "u": [5, 230, 254, 260, 261, 269, 270], "unifi": [5, 122, 234, 261], "find": [5, 6, 49, 61, 83, 122, 217, 233, 234, 251, 254, 255, 273], "diagnost": [5, 255, 256, 257, 259, 260, 261, 273], "across": [5, 6, 13, 17, 220, 226, 230, 231, 232, 233, 234, 252, 254, 262, 266, 267], "analysi": [5, 17, 125, 220, 232, 233, 252, 253, 255, 267, 269, 270, 279], "e3sm_diag": 5, "zppy": 5, "know": [5, 8, 10, 12, 125, 230, 233, 234, 254], "job": [5, 122, 234, 253, 254, 256, 257, 258, 259, 261], "cach": [5, 18, 20, 33, 35, 101, 102, 127, 253, 255, 260, 265, 273, 278], "own": [5, 6, 7, 10, 11, 17, 33, 122, 230, 232, 233, 234, 252, 254, 255, 267, 273, 279], "config_machin": 5, "xml": [5, 13, 103, 105, 106, 117, 246], "here": [5, 8, 11, 13, 15, 16, 122, 220, 223, 224, 225, 226, 229, 230, 233, 234, 250, 254, 255, 256, 257, 258, 259, 260, 261, 271, 272, 273, 277, 278], "close": [5, 61, 122, 253, 267], "ey": 5, "master": [5, 217, 246, 274], "happen": [5, 8, 11, 13, 15, 96, 230, 232, 254, 267], "me": [5, 254], "dev_quick_start": 5, "function": [5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 41, 59, 66, 122, 125, 133, 142, 150, 226, 227, 230, 232, 233, 252, 253, 254, 267, 279], "fork": [5, 254], "haven": [5, 254], "xylar": [5, 16, 122, 254, 255, 260], "mkdir": [5, 234], "now": [5, 122, 230, 234, 254, 255, 260], "involv": [5, 13, 230, 252, 254], "coupl": [5, 251, 253], "alpha": [5, 118, 119, 120, 121, 122, 123, 254], "beta": 5, "rc": 5, "simplify_local_mach": 5, "often": [5, 16, 17, 33, 226, 230, 231, 232, 233, 234, 254, 255, 278, 279], "stand": 5, "omit": [5, 230, 273], "suffix": [5, 35, 102, 230], "onc": [5, 13, 36, 220, 234, 254, 255, 267, 273], "releas": [5, 122, 233, 253, 260, 264, 273], "spack_for_mache_1": 5, "12": [5, 12, 60, 250, 254, 257, 276], "worktre": [5, 253, 254], "my": [5, 122, 257], "fetch": [5, 234, 254], "out": [5, 7, 12, 79, 83, 110, 122, 228, 230, 233, 234, 255, 263, 273], "checkout": [5, 234, 254], "mambaforg": [5, 234, 254, 260, 273], "manual": [5, 13, 42, 43, 230, 232, 279], "linux": [5, 122, 234, 260], "x86_64": [5, 122], "our": [5, 122, 233, 254, 273], "found": [5, 8, 13, 112, 122, 233, 234, 253, 254, 256, 257, 258, 259, 260, 261], "exist": [5, 6, 8, 26, 33, 36, 51, 103, 105, 107, 122, 130, 220, 230, 233, 234, 251, 254, 260, 278], "miniconda3": [5, 234], "alwai": [5, 6, 8, 11, 48, 122, 125, 217, 227, 230, 232, 233, 234, 246, 252, 254, 255], "pleas": [5, 122, 227, 233, 234, 254, 273], "start": [5, 6, 7, 13, 104, 122, 219, 220, 226, 231, 232, 233, 253, 257, 260, 261, 264, 274, 276], "definit": [5, 13, 254], "defin": [5, 6, 7, 8, 12, 13, 14, 17, 33, 42, 65, 89, 95, 101, 102, 107, 122, 156, 171, 185, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 238, 246, 248, 250, 252, 253, 255, 260, 263, 266, 267, 271, 278, 279], "export": [5, 251], "conda_bas": 5, "home": [5, 16, 122, 234, 254, 255, 257, 260, 261], "readi": [5, 230, 254, 261], "configure_polaris_env": [5, 122, 234, 251, 254], "py": [5, 11, 13, 16, 57, 122, 226, 227, 233, 234, 252, 254, 255], "mache_fork": 5, "mache_branch": 5, "update_spack": [5, 122, 234], "tmpdir": [5, 122], "group": [5, 6, 226, 236, 253, 256, 258, 260, 261, 272, 273, 279], "spack_temp": 5, "spack_test": 5, "intel": [5, 122, 260], "gnu": [5, 122, 234, 259, 260, 273], "openmpi": [5, 118, 122, 234, 253, 256, 258, 259, 273], "impi": [5, 118, 122, 256, 259], "recreat": [5, 234, 251], "request": [5, 6, 13, 20, 27, 29, 122, 127, 210, 211, 230, 233, 234, 251, 254, 255, 267], "twice": [5, 254], "deploy": [5, 234], "even": [5, 11, 12, 13, 35, 48, 122, 230, 233, 234, 254, 255, 260, 273], "prebootstrap": 5, "load": [5, 96, 119, 122, 123, 234, 253, 254, 255, 256, 257, 258, 259, 260, 261], "activ": [5, 122, 260, 261, 273], "differ": [5, 13, 15, 16, 48, 62, 67, 108, 122, 125, 134, 137, 146, 217, 220, 226, 227, 228, 230, 231, 232, 233, 246, 252, 254, 255, 257, 261, 266, 267, 269, 270, 272, 277], "On": [5, 6, 12, 122, 234, 260], "tmp": [5, 122], "safe": [5, 13, 230, 234, 266], "strictli": [5, 12, 233, 254], "necessari": [5, 6, 12, 122, 254], "good": [5, 11, 33, 230, 234, 254], "idea": [5, 11, 254], "fresh": [5, 232, 254], "Be": [5, 261], "awar": [5, 6, 122, 254, 260], "with_petsc": [5, 234], "wa": [5, 7, 49, 108, 122, 230, 232, 233, 234, 251, 252, 254, 255, 263, 273], "limit": [5, 231, 234, 266], "amount": [5, 20, 30, 33, 40, 127, 230, 262, 271], "team": [5, 122, 253], "petsc_support": 5, "txt": [5, 7, 107, 231, 251], "with_albani": [5, 234], "albany_support": 5, "encount": [5, 231, 251], "error": [5, 7, 33, 42, 122, 125, 160, 221, 223, 224, 230, 234, 253, 254, 269, 270], "dev_polaris_0_2_0_gnu_mpich": 5, "armpl": 5, "dure": [5, 7, 10, 13, 16, 25, 33, 42, 139, 145, 164, 180, 194, 230, 232, 233, 234, 254, 255, 273, 278, 279], "attempt": [5, 122, 253, 260], "first": [5, 8, 13, 102, 122, 220, 223, 224, 225, 230, 232, 233, 234, 251, 254, 256, 257, 258, 259, 260, 261, 266, 267, 271, 273], "sh": [5, 118, 119, 120, 121, 122, 123, 234, 251, 254, 256, 257, 258, 259, 261, 273], "build_": 5, "command": [5, 9, 14, 31, 33, 39, 81, 82, 84, 92, 122, 230, 233, 234, 252, 253, 254, 257, 260, 261, 273], "pscratch": 5, "suggest": [5, 122, 251], "correctli": 5, "seem": [5, 13, 254, 257, 261], "switch": [5, 254, 255], "v0": 5, "18": [5, 255, 257], "19": 5, "submodul": [5, 217, 227, 234, 246, 254, 273], "serv": [5, 101, 102, 107, 226, 254], "kind": [5, 254], "whichev": [5, 217, 246, 263], "load_dev_polaris_0": [5, 118, 119, 120, 121, 122, 123, 254], "0_chrysalis_intel_openmpi": 5, "recurs": [5, 217, 233, 234, 246, 254, 273], "pio": [5, 20, 29, 32, 127, 220, 223, 224], "openmp": [5, 13, 20, 30, 33, 40, 82, 118, 120, 121, 127, 137, 178, 192, 201, 230, 254, 256, 257, 258, 259, 261], "ifort": [5, 118, 120, 122, 254, 256, 258], "ac": [5, 254], "test_20230202": 5, "ocean_pr_chrys_intel_openmpi": 5, "sbatch": [5, 254, 260, 273], "job_script": [5, 254, 273], "bash": [5, 234, 251, 254, 273], "termin": [5, 7, 122, 230, 234, 254], "isn": [5, 230, 233, 254], "ll": [5, 17, 122, 221, 233, 254, 261, 267], "warn": [5, 267, 269, 270], "0_chrysalis_gnu_openmpi": 5, "e3sm_chrys_gnu_openmpi": 5, "gfortran": [5, 118, 120, 121, 122, 234, 256, 258], "ocean_pr_chrys_gnu_openmpi": 5, "explor": [5, 226, 230, 254, 263], "util": [5, 233, 270], "matrix": 5, "sever": [5, 11, 122, 226, 230, 233, 234, 253, 254, 272, 273, 278], "automat": [5, 6, 8, 11, 13, 17, 122, 125, 230, 232, 233, 234, 254, 255, 256, 258, 259, 260, 261, 273], "0_chrysalis_gnu_openmpi_albani": 5, "true": [5, 6, 8, 12, 13, 16, 17, 20, 43, 49, 51, 108, 109, 110, 113, 118, 119, 120, 121, 122, 123, 127, 202, 219, 226, 230, 234, 254, 255, 256, 257, 258, 259, 260, 261, 266, 273, 279], "full_integr": [5, 273], "landice_full_chrys_gnu_openmpi": 5, "nonhydrostat": 5, "yet": [5, 121, 122, 125, 230, 233, 254], "integr": [5, 146, 220, 233, 254, 266, 267, 272, 277], "sara": 5, "calandrini": 5, "nonhydro": 5, "0_chrysalis_intel_openmpi_petsc": 5, "scalandr": 5, "nonhydro_chrys_intel_openmpi": 5, "grep": [5, 257, 273], "245": 5, "246": 5, "non": [5, 13, 16, 219, 230, 254, 273], "care": [5, 10, 12, 226, 230, 234, 254], "affect": [5, 13, 230, 234, 254], "temporari": [5, 122], "begin": [5, 6, 16, 220, 230, 234, 248, 253, 254, 260, 266, 267, 271], "anymor": 5, "best": [5, 15, 122, 230, 234], "hard": [5, 254, 266, 271], "reset": 5, "sphinx": 6, "written": [6, 7, 33, 42, 53, 109, 110, 230, 232, 254, 276], "myst": [6, 254], "tip": [6, 234], "easi": [6, 35, 233, 254], "tree": [6, 103, 105, 117, 274], "pull": [6, 122, 233, 234, 254, 255], "guid": [6, 125, 220, 223, 224, 225, 231, 233, 254, 257, 260, 264, 274], "baroclin": [6, 133, 134, 135, 136, 137, 140, 143, 146, 148, 151, 152, 154, 201, 220, 226, 227, 230, 254, 264, 268, 279], "channel": [6, 133, 134, 135, 136, 137, 140, 143, 146, 148, 151, 152, 154, 201, 220, 226, 227, 230, 251, 254, 264, 268, 279], "baroclinic_channel": [6, 13, 16, 217, 222, 226, 227, 230, 232, 233, 254, 266, 273, 278, 279], "label": [6, 109, 260, 273], "prepend": 6, "them": [6, 7, 13, 15, 16, 20, 32, 122, 127, 221, 230, 232, 233, 234, 252, 254, 259, 260, 265, 273, 279], "categori": [6, 227, 228, 229, 232, 253, 279], "uniqu": [6, 13, 122, 232, 254], "And": [6, 13, 234, 254], "becom": [6, 230, 232, 254], "who": [6, 234, 254, 255, 261], "citat": 6, "basi": [6, 254], "overview": [6, 253, 257, 261], "common": [6, 8, 11, 13, 39, 42, 122, 220, 221, 223, 224, 225, 226, 230, 231, 232, 233, 251, 252, 254, 255, 260, 261, 272, 273, 277, 278, 279], "characterist": [6, 272, 277], "comment": [6, 231, 232, 255], "appli": [6, 12, 13, 54, 219, 226, 254, 266, 271, 272, 277], "vertic": [6, 17, 200, 219, 220, 223, 224, 225, 230, 255, 262, 264], "grid": [6, 12, 15, 59, 66, 70, 73, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 125, 167, 207, 208, 209, 210, 211, 212, 215, 216, 220, 221, 223, 224, 225, 230, 248, 254, 255], "initi": [6, 7, 33, 110, 132, 136, 140, 165, 181, 195, 200, 202, 203, 205, 220, 221, 223, 224, 225, 226, 230, 232, 233, 243, 251, 252, 253, 255, 263, 265, 278, 279], "condit": [6, 33, 136, 140, 165, 181, 195, 200, 202, 203, 205, 220, 221, 223, 224, 225, 226, 230, 231, 232, 233, 243, 250, 252, 253, 255, 265, 278, 279], "forc": [6, 225, 250, 254, 279], "refer": [6, 13, 33, 132, 146, 209, 212, 215, 216, 230, 233, 234, 252, 253, 254, 263, 266, 273], "wish": [6, 13, 43, 230, 234, 254, 273], "specif": [6, 8, 13, 44, 122, 217, 226, 227, 228, 246, 248, 253, 254, 255, 257, 260, 266, 272, 273, 277, 278], "share": [6, 17, 42, 43, 122, 125, 133, 217, 220, 225, 226, 227, 228, 230, 232, 234, 236, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 266, 271, 272, 273, 277, 279], "public": [6, 10, 230, 254, 255], "api": [6, 11, 253, 254], "underscor": [6, 254], "md": [6, 254], "eval": 6, "rst": [6, 13, 254], "currentmodul": 6, "autosummari": 6, "toctre": 6, "baroclinicchannel": [6, 254], "baroclinicchanneltestcas": [6, 220, 226, 232], "compute_cell_count": [6, 125, 220, 223, 224, 254], "dynamic_model_config": [6, 220, 223, 224, 254], "ot": [6, 254], "numpydoc": [6, 254], "text": [6, 7, 266, 267, 271], "restructuredtext": 6, "compute_land_ice_pressure_and_draft": 6, "ssh": [6, 125, 209, 211, 212, 213, 214, 215, 216, 217, 223, 224, 254, 255, 257, 261, 269, 270], "modifysshmask": 6, "ref_dens": 6, "comput": [6, 12, 70, 122, 125, 127, 128, 132, 138, 160, 163, 175, 179, 189, 193, 212, 213, 214, 220, 221, 223, 224, 225, 230, 234, 257, 258, 260, 261, 266, 269, 270, 273], "pressur": [6, 217, 255, 269, 270], "overli": [6, 254], "ic": [6, 125, 217, 232, 233, 234, 248, 250, 253, 254, 255, 257, 263, 276, 279], "shelf": [6, 125, 226, 233, 254, 255, 263], "draft": [6, 263], "paramet": [6, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 40, 42, 43, 46, 49, 51, 52, 53, 54, 57, 58, 60, 61, 62, 65, 70, 71, 73, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 116, 117, 127, 130, 132, 133, 135, 136, 137, 139, 140, 143, 144, 145, 146, 148, 151, 152, 154, 157, 159, 160, 162, 164, 165, 167, 169, 172, 174, 175, 176, 177, 178, 180, 181, 183, 186, 188, 189, 190, 191, 192, 194, 195, 197, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 223, 224, 226, 230, 232, 238, 239, 240, 242, 243, 244, 266, 267, 269, 270, 271], "xarrai": [6, 15, 17, 110, 209, 210, 211, 212, 213, 214, 215, 216, 230, 254], "dataarrai": [6, 175, 176, 177, 189, 190, 191, 210, 211, 212, 213, 214, 230], "sea": [6, 125, 175, 177, 189, 191, 211, 212, 213, 214, 217, 248, 250, 253, 254, 255, 263, 269, 270, 276, 279], "surfac": [6, 125, 175, 177, 189, 191, 211, 212, 213, 214, 217, 219, 225, 250, 254, 255, 263, 266, 269, 270, 271], "height": [6, 125, 175, 177, 189, 191, 211, 212, 213, 214, 217, 254, 255, 263, 269, 270], "mask": [6, 209, 212, 215, 216, 230, 254, 255, 263], "landicepressur": 6, "deviat": 6, "float": [6, 8, 13, 21, 58, 60, 61, 65, 70, 90, 108, 110, 133, 135, 136, 137, 140, 143, 146, 148, 151, 160, 175, 176, 177, 178, 181, 188, 189, 190, 191, 192, 195, 201, 202, 203, 230, 254], "densiti": [6, 12, 125, 254], "seawat": 6, "displac": 6, "land": [6, 125, 217, 232, 253, 254, 255, 263], "landicedraft": 6, "equal": [6, 225, 230, 233, 271], "entri": [6, 45, 78, 102], "line": [6, 9, 31, 33, 81, 82, 92, 122, 230, 231, 233, 234, 253, 273], "type": [6, 13, 15, 16, 17, 21, 87, 94, 117, 122, 200, 202, 226, 230, 232, 233, 234, 246, 251, 252, 254, 255, 266, 267, 269, 270, 271, 272, 278], "side": 6, "colon": 6, "doubl": [6, 125, 230, 231, 254], "back": [6, 232, 254, 257, 273], "quot": 6, "interfer": 6, "abil": 6, "arg": [6, 11, 33, 81, 82, 230], "indic": [6, 7, 13, 15, 16, 33, 34, 102, 110, 122, 212, 228, 230, 251, 254, 255, 263, 271], "next": [6, 122, 254, 263, 273], "indent": [6, 230], "obviou": [6, 13, 254], "none": [6, 13, 16, 20, 23, 24, 30, 33, 34, 35, 36, 40, 42, 43, 46, 49, 53, 54, 56, 58, 65, 71, 75, 84, 85, 86, 89, 90, 93, 95, 98, 102, 103, 107, 108, 109, 110, 112, 116, 127, 128, 137, 138, 163, 178, 179, 189, 192, 193, 201, 230, 242, 254, 263, 266, 267, 269, 270, 271, 272, 276], "replac": [6, 8, 13, 21, 22, 23, 24, 25, 26, 42, 51, 77, 103, 112, 113, 122, 130, 139, 145, 232, 233, 254, 255, 273], "els": [6, 7, 122, 226, 230, 232, 254], "further": [6, 226, 232, 261, 272, 277], "rais": [6, 8, 16, 33, 36, 49, 51, 125, 230, 233, 254], "list_cas": 7, "list_machin": [7, 233], "list_suit": 7, "anywher": [7, 11, 122, 234], "setup_task": [7, 8], "object": [7, 11, 15, 22, 23, 24, 43, 77, 96, 99, 103, 111, 112, 116, 117, 175, 189, 227, 232, 233, 254], "later": [7, 16, 20, 30, 33, 40, 48, 122, 127, 230, 254, 255], "contrast": 7, "read": [7, 18, 22, 23, 24, 33, 34, 42, 50, 76, 77, 111, 219, 230, 232, 254], "properti": [7, 13, 219, 230, 260, 267], "clean_cas": 7, "delet": [7, 102, 107, 233, 234, 251, 273], "constant": [7, 58, 65, 66, 125, 219, 254, 266, 267, 269, 271, 272, 277], "setup_suit": 7, "clean_suit": 7, "write": [7, 11, 12, 14, 17, 111, 208, 230, 232, 234, 250, 254], "proven": [7, 9, 48, 253, 255], "save": [7, 17, 49, 73, 122, 220, 226, 230, 232, 254, 260, 265, 266], "dictionari": [7, 8, 13, 17, 18, 21, 23, 24, 26, 33, 34, 37, 42, 48, 77, 80, 84, 102, 103, 111, 112, 113, 130, 221, 230, 232, 233, 254, 267], "target": [7, 10, 15, 16, 20, 35, 51, 53, 85, 122, 125, 127, 220, 223, 224, 230, 232, 254, 267], "minimum": [7, 53, 110, 125, 127, 220, 223, 224, 230, 254, 255, 263, 266, 267, 269, 270, 271, 272, 277], "determin": [7, 12, 13, 17, 35, 39, 117, 122, 125, 131, 220, 221, 223, 224, 230, 254, 263, 266, 267, 269, 270, 272, 273, 277], "maximum": [7, 16, 108, 110, 254, 255, 263], "product": 7, "ntask": [7, 13, 15, 20, 30, 33, 37, 40, 81, 82, 85, 125, 127, 137, 178, 192, 201, 230, 232, 254], "cpus_per_task": [7, 13, 33, 37, 40, 81, 82, 230], "attribut": [7, 11, 12, 13, 39, 89, 95, 223, 224, 254], "quickli": 7, "caveat": 7, "sit": 7, "idl": 7, "fraction": [7, 254, 263, 266, 267, 269, 270, 271, 272], "runtim": [7, 25, 39, 139, 145, 164, 180, 194, 230, 254], "min_task": [7, 13, 15, 20, 30, 33, 40, 81, 82, 85, 125, 127, 137, 178, 192, 201, 230, 254], "min_cpus_per_task": [7, 13, 33, 40, 81, 82, 230], "fewest": 7, "least": [7, 12, 227, 234, 266], "fail": [7, 13, 16, 20, 30, 33, 40, 49, 122, 127, 137, 178, 192, 201, 230, 253, 254, 255, 267, 269, 270], "run_task": [7, 230, 232], "run_single_step": 7, "oper": [7, 41, 122, 142, 150, 230, 232, 278], "log": [7, 9, 17, 33, 42, 82, 108, 109, 110, 230, 232, 234, 253, 273], "figur": [7, 225, 226, 228, 230, 255], "cpu": [7, 13, 122, 230, 254, 273], "per": [7, 13, 20, 30, 32, 33, 40, 81, 82, 122, 125, 127, 230, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 269, 270, 272, 277], "method": [7, 8, 12, 13, 15, 16, 18, 20, 25, 26, 33, 34, 38, 39, 42, 43, 44, 48, 57, 58, 62, 65, 66, 67, 71, 72, 85, 91, 111, 125, 126, 127, 130, 133, 135, 136, 137, 139, 140, 143, 144, 145, 146, 148, 151, 152, 154, 157, 159, 162, 164, 165, 167, 169, 170, 172, 174, 175, 178, 180, 181, 183, 185, 186, 188, 189, 192, 194, 195, 197, 200, 201, 202, 203, 205, 220, 221, 223, 224, 227, 230, 232, 233, 237, 239, 240, 242, 243, 244, 254, 267, 272, 277], "retriev": [7, 251], "store": [7, 44, 122, 125, 223, 224, 230, 232, 254, 273], "case_output": [7, 11], "individu": [7, 8, 17, 232, 233, 254, 260, 261, 266, 273, 279], "overal": 7, "whole": [7, 42, 132, 226, 232, 233, 254, 273], "window": 7, "update_cach": 7, "_cached_fil": [7, 230], "map": [7, 15, 18, 26, 65, 66, 85, 109, 110, 130, 167, 169, 221, 232, 234, 255], "origin": [7, 46, 234, 254, 273], "enabl": [7, 17, 225, 230, 251, 255, 261, 269, 270], "consum": [7, 230, 232, 254, 278], "faster": [7, 234], "debug": [7, 118, 119, 120, 121, 122, 123, 254, 256, 257, 258, 259, 261], "parser": [8, 48], "mpas_tool": [8, 11, 12, 70, 220, 223, 224, 225, 230, 254], "mpasconfigpars": 8, "polarisconfigpars": [8, 33, 42, 49, 52, 53, 80, 83, 84, 99, 109, 175, 189, 207, 209, 210, 211, 215, 216, 232, 254], "certain": [8, 16, 48, 122, 230, 234, 255, 272, 277], "add_from_packag": [8, 226, 232, 233, 254], "content": [8, 13, 102, 103, 105, 107, 117, 228, 230, 233, 250, 254, 273, 276], "make_diagnostics_fil": 8, "makediagnosticsfil": 8, "self": [8, 10, 11, 13, 15, 16, 17, 44, 73, 125, 226, 227, 230, 232, 233, 254, 255], "cfg": [8, 44, 226, 227, 232, 233, 254, 255, 273], "except": [8, 33, 36, 49, 230, 233, 254], "second": [8, 12, 13, 137, 201, 225, 230, 233, 266, 271, 276], "behavior": [8, 13, 98, 230, 231, 232, 234, 254], "noth": [8, 122, 251, 267], "being": [8, 25, 33, 42, 97, 102, 108, 122, 139, 145, 164, 180, 194, 230, 232, 233, 234, 254, 263], "__module__": 8, "fals": [8, 12, 13, 16, 17, 20, 33, 35, 43, 46, 54, 56, 97, 98, 102, 107, 108, 110, 122, 127, 203, 205, 219, 226, 230, 232, 248, 254, 255, 257, 259, 261, 266], "class": [8, 10, 12, 13, 15, 16, 17, 18, 20, 28, 33, 38, 42, 48, 57, 58, 65, 71, 85, 111, 125, 126, 127, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 157, 159, 162, 165, 167, 169, 170, 172, 174, 175, 178, 181, 183, 186, 188, 189, 192, 195, 197, 200, 201, 202, 203, 205, 217, 220, 221, 223, 224, 225, 226, 227, 230, 232, 236, 237, 239, 240, 242, 243, 244, 246, 250, 254], "larg": [8, 230, 232, 254, 256], "those": [8, 13, 42, 108, 122, 232, 233, 234, 253, 254, 267, 272, 277, 278], "configpars": [8, 81, 82], "getinteg": 8, "getfloat": [8, 11, 13, 15, 230, 254], "getboolean": [8, 230, 254], "implement": [8, 233, 266, 267, 269, 270], "getlist": [8, 232, 254], "comma": [8, 267], "integ": [8, 12], "boolean": [8, 110, 212], "etc": [8, 13, 104, 107, 227, 230, 266], "getexpress": 8, "tupl": 8, "rang": [8, 110, 254, 267], "numpi": [8, 12, 59, 66, 67, 73, 109, 125, 132, 207, 208, 230, 254], "linspac": [8, 17, 221, 267], "arang": 8, "arrai": [8, 59, 66, 67, 73, 109, 125, 207, 208, 210, 211, 212, 213, 254], "One": [8, 12, 254, 273, 278], "advantag": [8, 13, 122, 233, 254, 260], "track": [8, 20, 230, 232, 234], "associ": [8, 12, 13, 17, 209, 215, 216, 220, 232, 234, 252], "belong": [9, 11, 13, 20, 30, 33, 40, 42, 58, 65, 71, 85, 127, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 157, 159, 162, 165, 167, 169, 172, 174, 178, 181, 183, 186, 188, 192, 195, 197, 200, 201, 202, 203, 205, 226, 227, 230, 232, 233, 239, 240, 242, 243, 244, 254, 278], "while": [9, 15, 17, 219, 220, 230, 251, 254], "meant": [9, 233, 255], "simplifi": 9, "verifi": [9, 231, 255], "io": [9, 230, 232, 233, 253, 254, 255, 264, 274], "remap": [9, 17, 167, 221, 253, 267, 272, 277], "visual": [9, 12, 15, 159, 183, 197, 221, 223, 224, 226, 230, 232, 252, 253, 267, 269, 270, 272, 277], "lot": [10, 125, 230, 233, 254], "o": [10, 11, 103, 105, 117, 122, 226, 233, 234, 254, 255, 273], "handl": [10, 11, 234, 254, 260], "intern": [10, 20, 230, 234, 251], "lower": [10, 232, 254, 266], "directli": [10, 12, 13, 15, 33, 228, 230, 233, 252, 253, 254, 257], "readm": [10, 232], "importlib": [10, 232], "resourc": [10, 13, 30, 37, 40, 50, 80, 81, 82, 128, 137, 138, 163, 179, 193, 201, 220, 223, 224, 230, 232, 254], "import": [10, 11, 12, 13, 15, 16, 17, 226, 227, 230, 232, 233, 234, 252, 254], "files_for_e3sm": [10, 232, 255], "str": [10, 13, 18, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 42, 43, 46, 49, 51, 52, 53, 54, 58, 65, 71, 75, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 114, 116, 117, 127, 132, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 159, 160, 162, 165, 167, 169, 172, 178, 181, 183, 186, 192, 195, 197, 201, 203, 205, 208, 230, 232, 240, 242, 244, 254], "did": [10, 252, 254], "add_input_fil": [10, 15, 16, 34, 230, 232, 254], "collect": [10, 88, 126, 227, 229, 237, 252, 254], "though": [10, 33, 232, 233, 254], "whenev": [10, 230, 254], "flexibl": [10, 221, 232, 234, 254], "No": [10, 253, 269, 270], "step_dir": 10, "database_root": [10, 122, 230, 255, 256, 257, 258, 259, 260, 261, 273], "download_path": 10, "join": [10, 226, 254], "bathymetry_databas": [10, 230, 255], "remote_filenam": 10, "bedmachineantarctica_and_gebco_2019_0": 10, "05_degre": 10, "200128": 10, "local_filenam": 10, "topographi": [10, 212, 226, 230, 254, 263, 266, 267, 269, 270, 271, 272, 279], "url": [10, 35, 49, 230, 251, 255], "web": [10, 230, 255], "anl": [10, 230, 255], "gov": [10, 230, 251, 255, 257, 261], "mpas_standalonedata": [10, 122, 255, 260], "dest_path": [10, 49], "remot": [10, 35, 234, 253], "bathymetri": [10, 230, 255], "strategi": 11, "stderr": [11, 33, 42, 230], "loggingcontext": 11, "check_cal": [11, 230], "most": [11, 39, 122, 217, 226, 227, 230, 233, 234, 246, 254, 255, 260, 261, 263, 264, 274, 279], "won": [11, 233, 254, 255], "logger": [11, 16, 33, 42, 57, 82, 108, 230, 232, 254], "full": [11, 33, 81, 98, 210, 211, 220, 221, 230, 232, 234, 250, 253, 254, 260, 263, 265, 266, 267, 269, 270, 271, 272, 273], "although": 11, "captur": 11, "insid": [11, 230, 233], "explicit": [11, 233], "go": [11, 203, 205, 226, 230, 232, 233, 234, 254, 261], "subprocess": [11, 33, 81, 82, 97, 230, 233, 251], "produc": [11, 13, 15, 17, 33, 34, 36, 46, 125, 135, 143, 151, 220, 221, 223, 224, 225, 230, 233, 234, 239, 250, 254, 269, 270, 273, 276], "otherwis": [11, 122, 230, 232, 254, 256, 257, 258, 259, 260, 261, 266], "intent": 11, "desir": [11, 12, 13, 16, 17, 108, 125, 221, 230, 231, 232, 254, 255, 273], "trick": [11, 230], "direct": [11, 12, 13, 70, 175, 189, 220, 223, 224, 254, 261, 266, 269, 270], "snippet": [11, 254], "dome": [11, 57, 226, 230, 232, 273, 279], "setup_mesh": [11, 230], "setupmesh": [11, 230, 232], "create_landice_grid_from_generic_mpas_grid": 11, "mpas_grid": [11, 230], "landice_grid": [11, 230, 254], "l": [11, 108, 254, 261], "global": [12, 15, 89, 90, 95, 157, 221, 226, 230, 231, 233, 252, 253, 254, 255, 261, 267, 272, 273, 277, 279], "quasiuniformsphericalmeshstep": [12, 221, 232], "icosahedralmeshstep": [12, 221, 232], "jigsaw": [12, 58, 62, 64, 65, 67, 69, 71, 157, 159, 230], "complex": [12, 66, 232, 233, 254], "build_cell_width_lat_lon": [12, 65], "opt": [12, 71], "make_jigsaw_mesh": [12, 65], "icosahedr": [12, 58, 60, 157, 159, 232, 267], "significantli": [12, 263], "smooth": 12, "cell": [12, 13, 17, 58, 59, 60, 61, 65, 66, 67, 70, 73, 87, 94, 125, 127, 128, 138, 160, 163, 175, 177, 179, 189, 191, 193, 209, 210, 211, 212, 215, 216, 220, 223, 224, 226, 230, 248, 263, 266, 267, 269, 270, 271, 272, 276], "quasi": [12, 65, 232, 255, 267, 272, 277], "hand": [12, 90, 233], "restrict": [12, 254, 272], "resolut": [12, 13, 15, 58, 61, 65, 66, 70, 86, 90, 93, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 157, 159, 160, 162, 172, 178, 181, 183, 186, 188, 192, 195, 197, 200, 202, 203, 220, 221, 223, 224, 225, 226, 227, 228, 230, 232, 255, 266, 267, 269, 270, 271, 272, 277, 279], "subdivis": [12, 58, 59, 60, 61, 62], "icosahedron": [12, 59, 60, 61, 62], "tabl": [12, 234, 260, 273], "approxim": [12, 58, 60, 61, 65, 125, 128, 138, 163, 179, 193, 220, 223, 224, 234, 254], "width": [12, 58, 59, 60, 65, 66, 67, 73, 254, 266], "km": [12, 58, 59, 60, 61, 65, 66, 67, 70, 73, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 162, 178, 181, 188, 192, 195, 202, 203, 220, 221, 223, 224, 226, 232, 254, 255, 266, 267, 269, 270, 271, 272, 277, 279], "5": [12, 60, 122, 125, 146, 220, 221, 230, 231, 233, 251, 254, 255, 266, 267, 272, 273, 277], "240": [12, 60, 221, 232, 255, 267], "6": [12, 60, 230, 254, 264, 266, 271, 273, 274], "120": [12, 60, 231, 232, 267], "7": [12, 60, 122, 254, 261, 267, 273], "60": [12, 13, 60, 221, 232, 263, 267], "8": [12, 60, 122, 220, 234, 254, 255, 266, 267, 269, 270, 273], "30": [12, 60, 226, 254, 261, 266, 267, 271, 272, 277], "9": [12, 17, 60, 122, 221, 254, 267, 273], "15": [12, 13, 60, 220, 254, 266, 267, 271, 272, 273, 277], "10": [12, 60, 122, 217, 220, 223, 224, 226, 227, 254, 255, 260, 263, 266, 269, 270, 271, 279], "11": [12, 60, 122, 254, 273], "3": [12, 60, 122, 220, 230, 231, 234, 251, 254, 255, 260, 261, 263, 266, 267, 269, 270, 272, 273], "13": [12, 60, 254, 266], "94": [12, 60], "spherical_mesh": [12, 66], "cell_width": [12, 58, 59, 60, 61, 65, 66, 67, 73, 232], "icosahedral_method": 12, "jigsaw_mesh_filenam": 12, "msh": 12, "jigsaw_geom_filenam": 12, "geom": 12, "jigsaw_jcfg_filenam": 12, "jig": 12, "jigsaw_hfun_filenam": 12, "spac": 12, "triangles_filenam": 12, "mesh_triangl": 12, "mpas_mesh_filenam": 12, "base_mesh": [12, 58, 65, 230, 254], "plot": [12, 73, 109, 110, 125, 148, 154, 167, 205, 220, 221, 223, 224, 244, 267, 269, 270, 276, 279], "plot_cell_width": 12, "cell_width_filenam": [12, 73], "cellwidthvslatlon": 12, "cell_width_image_filenam": 12, "cellwidthglob": 12, "cell_width_colormap": 12, "3wbgy5": 12, "add_mesh_dens": 12, "vtk": 12, "convert_to_vtk": 12, "vtk_dir": 12, "base_mesh_vtk": 12, "extract": 12, "lat": [12, 15, 59, 65, 66, 67, 73, 86, 88, 90, 93, 109, 167, 221, 255, 267], "lon": [12, 15, 59, 65, 66, 67, 73, 86, 88, 90, 93, 109, 167, 221, 255, 267], "sphere": [12, 221, 267], "vtk_lat_lon": 12, "far": [12, 122, 209, 215, 216, 233, 254], "But": [12, 122, 226, 230, 233, 234, 254, 255, 260], "hexagon": [12, 70, 254, 269, 270], "planar_hex": [12, 70, 220, 223, 224, 225, 230, 254], "make_planar_hex_mesh": [12, 70, 220, 223, 224, 225, 230, 254], "x": [12, 17, 59, 66, 67, 70, 73, 89, 95, 110, 132, 175, 189, 230, 254, 266, 269, 270, 271], "y": [12, 13, 17, 70, 89, 95, 110, 175, 189, 220, 223, 224, 230, 254, 261, 266, 269, 270], "nx": [12, 70, 226, 230, 254], "ny": [12, 70, 226, 230, 254], "dc": [12, 226, 230, 254], "distanc": [12, 70, 254, 266], "adjac": [12, 263], "center": [12, 17, 70, 175, 189, 226, 254, 263, 266], "admittedli": 12, "oddli": 12, "period": [12, 219, 220, 223, 224, 230, 254, 266, 269, 270], "nonperiodic_x": [12, 230, 254], "nonperiodic_i": [12, 230, 254], "consider": [12, 209, 215, 216, 219, 248], "compute_planar_hex_nx_ni": [12, 254], "lx": [12, 70, 254, 266, 269, 270, 271], "ly": [12, 70, 254, 266, 271], "explan": 12, "subtleti": 12, "account": [12, 70, 234, 254, 256, 257, 259, 260, 261, 273], "behav": 12, "stagger": [12, 70], "physic": [12, 70, 243, 250, 254], "howev": [12, 230, 231, 232, 234, 254], "np": [12, 17, 221, 254, 267], "sqrt": [12, 269], "domain": [12, 20, 27, 70, 110, 125, 127, 132, 219, 226, 248, 254, 266, 267, 269, 270, 271, 272, 277, 279], "extra": [12, 234], "factor": 12, "500e3": 12, "160e3": 12, "1e3": [12, 254], "max": [12, 125, 230, 254, 266, 267], "int": [12, 13, 20, 21, 30, 33, 40, 52, 53, 54, 58, 59, 60, 61, 62, 70, 81, 82, 85, 110, 127, 128, 137, 138, 157, 159, 160, 162, 163, 172, 178, 179, 183, 186, 192, 193, 197, 201, 230, 232, 254, 271], "ds_mesh": [12, 17, 110, 254], "creation": [12, 230, 255], "build_mesh": 12, "build_planar_mesh": 12, "too": [12, 13, 20, 30, 33, 40, 81, 82, 127, 226, 230, 233, 254], "distant": 12, "futur": [12, 39, 230, 233, 252, 253, 254, 255, 271, 273, 279], "descend": [13, 15, 125, 227, 230, 232, 233, 236, 254], "modelstep": [13, 125, 230, 232, 236, 254], "update_pio": [13, 20, 127], "make_graph": [13, 20, 127], "construct": [13, 126, 207, 209, 210, 211, 215, 216, 219, 225, 227, 232, 237, 254, 266], "At": [13, 33, 42, 228, 229, 254], "set_model_resourc": 13, "thread": [13, 20, 30, 33, 39, 40, 42, 82, 127, 137, 178, 192, 201, 227, 230, 231, 252, 254, 255, 257, 261, 273, 278], "openmp_thread": [13, 20, 30, 33, 40, 82, 127, 137, 178, 192, 201, 230, 232, 254], "prefix": [13, 35, 122, 234, 255], "end": [13, 220, 230, 232, 233, 234, 250, 252, 254, 257, 266, 267, 269, 270, 271, 276], "yml": 13, "reason": [13, 15, 39, 122, 230, 233, 254, 278], "add_namelist_fil": [13, 20, 125, 230, 232], "add_yaml_fil": [13, 20, 230, 232, 254], "add_model_config_opt": [13, 20, 230, 232, 254], "add_streams_fil": [13, 20, 125, 230, 232], "themselv": [13, 233, 253], "question": [13, 230, 255], "constructor": [13, 220, 223, 224, 226, 227, 254], "simpli": [13, 16, 48, 122, 136, 227, 230, 234, 254, 263, 273, 278], "never": [13, 122, 252], "hierarch": 13, "run_mod": 13, "config_ocean_run_mod": 13, "time_manag": [13, 254], "config_run_dur": [13, 232, 254], "0024_00": 13, "00": [13, 16, 232, 248, 254, 261, 273], "ale_vertical_grid": 13, "config_vert_coord_mov": 13, "impermeable_interfac": 13, "decomposit": [13, 42, 135, 252, 254], "config_block_decomp_file_prefix": [13, 254], "time_integr": [13, 254], "config_time_integr": 13, "rk4": [13, 233], "filename_templ": [13, 254], "restart": [13, 16, 42, 223, 224, 225, 227, 231, 233, 239, 240, 250, 252, 254, 273, 278], "output_interv": [13, 254], "0030_00": 13, "clobber_mod": [13, 254], "truncat": [13, 254], "reference_tim": 13, "0001": [13, 254], "01": [13, 248, 254, 271, 276], "01_00": [13, 248, 254], "tracer": [13, 17, 202, 203, 205, 220, 221, 223, 224, 225, 254, 267, 269, 270, 271], "xtime": [13, 254], "normalveloc": [13, 16, 17, 153, 190, 219, 220, 223, 224, 225, 230, 254, 271], "layerthick": [13, 16, 125, 153, 209, 213, 214, 215, 216, 220, 223, 224, 225, 230, 254], "refzmid": [13, 209, 215, 216, 230, 254], "reflayerthick": 13, "kineticenergycel": 13, "relativevorticitycel": 13, "unlik": [13, 254], "clariti": [13, 230], "guarante": [13, 122, 217, 234, 246], "global_converg": [13, 217, 222, 227, 232, 254, 264, 265, 268, 278], "cosine_bel": [13, 232, 254, 272, 277, 278], "substitut": 13, "config_write_output_on_startup": [13, 254], "0000_00": [13, 254], "config_use_mom_del2": [13, 254], "config_implicit_bottom_drag_coeff": [13, 254], "0e": [13, 270, 271], "config_use_cvmix_background": 13, "config_cvmix_background_diffus": [13, 254], "config_cvmix_background_viscos": [13, 254], "worri": 13, "sometim": [13, 209, 215, 216, 226, 230, 232, 252, 254, 278], "easier": [13, 230, 233, 234, 255, 273, 278], "togeth": [13, 16, 122, 226, 252, 254, 278], "overkil": 13, "reli": [13, 230, 254], "along": [13, 17, 122, 220, 230, 253, 254], "could": [13, 15, 17, 122, 221, 230, 231, 233, 234, 254, 267], "spefic": 13, "nu": [13, 137, 148, 220, 230, 254], "viscos": [13, 137, 146, 148, 220, 230, 233, 254, 266], "hmix": 13, "config_mom_del2": [13, 220, 230, 254], "bool": [13, 20, 21, 25, 33, 35, 42, 43, 46, 49, 51, 54, 97, 98, 101, 102, 107, 108, 109, 113, 127, 137, 139, 145, 157, 159, 164, 180, 194, 201, 203, 205, 254], "cannot": [13, 254], "known": [13, 33, 34, 122, 221, 230, 254], "beforehand": 13, "particularli": [13, 251, 254, 272, 277], "update_namelist_at_runtim": 13, "update_yaml_at_runtim": 13, "config_pio_num_iotask": 13, "pio_num_iotask": 13, "config_pio_strid": 13, "pio_strid": 13, "out_nam": 13, "bit": [13, 122, 233, 252, 254, 266, 273], "complic": [13, 233, 234, 236, 254], "slightli": [13, 234], "sophist": 13, "immutable_stream": [13, 254], "var_struct": [13, 246], "var": [13, 104, 246, 254], "var_arrai": [13, 246], "tag": [13, 253], "taken": [13, 20, 127, 221, 230, 254, 261, 273], "past": 13, "experi": [13, 122, 233, 263], "shown": [13, 122, 228, 232, 271], "featur": [13, 233, 234, 252, 254, 255, 266, 271], "difficult": [13, 122, 260], "synchron": [13, 253], "equival": [13, 234, 254, 256], "template_replac": [13, 23, 24], "treat": [13, 231, 233], "jinja2": [13, 23, 24, 103], "render": [13, 23, 24, 103], "d_": 13, "restart_interv": 13, "stream_replac": 13, "dynamic_adjust": [13, 255], "qu240dynamicadjust": 13, "seri": [13, 125, 148, 154, 221, 223, 250, 254, 265], "dynam": [13, 127, 217, 225, 255, 266, 267, 271, 272], "adjust": [13, 122, 125, 217, 255], "durat": [13, 220, 223, 224, 225, 231, 254], "interv": 13, "spin": 13, "reus": [13, 230, 233, 234, 254, 255, 273], "qualit": 13, "update_streams_at_runtim": 13, "fairli": [13, 232, 233, 234, 254], "hour": [13, 122, 223, 224, 231, 250, 257, 261, 269, 270, 273, 276], "turn": [13, 33, 47, 227, 230, 251, 254, 271], "datetim": 13, "timedelta": 13, "3600": 13, "planar_converg": 13, "delta": [13, 263, 266, 271], "minut": [13, 122, 220, 231, 266, 278], "dai": [13, 146, 220, 221, 225, 250, 254, 266, 267, 271, 276], "03d": 13, "_": [13, 85, 122, 230, 232, 234, 254, 271], "02d": 13, "forgotten": 13, "broken": [13, 230, 233], "immedi": [13, 57, 234, 254], "miss": [13, 230, 254, 255], "detect": [13, 17, 255, 256, 258, 259, 260, 273], "gpmeti": [13, 255], "divid": [13, 263], "partition_graph": [13, 20, 127], "circumst": [13, 16, 33, 34, 230, 254], "wast": 13, "update_namelist_pio": 13, "v1": [13, 263], "better": [13, 15, 122, 273], "v2": [13, 255, 263], "littl": [13, 233, 234, 253, 254], "feel": [13, 122, 230, 254], "runtime_setup": [13, 15, 30, 40, 220, 223, 224, 232], "yourself": [13, 254, 260], "fact": [13, 33, 122], "culler": 13, "cull": [13, 220, 223, 224, 230, 254], "model_step": [13, 230], "make_graph_fil": [13, 230], "field": [13, 16, 73, 75, 110, 167, 209, 215, 216, 219, 220, 223, 224, 225, 254, 266, 267, 269, 270], "weight": [13, 15, 75, 209, 215, 216, 254, 263], "weight_field": [13, 75], "frequent": [15, 217, 246], "observ": [15, 253], "dataset": [15, 110, 175, 189, 209, 215, 216, 230, 254], "region": [15, 17, 253, 255], "pyremap": [15, 91], "interpol": [15, 85, 221, 255], "hood": 15, "esmf_regridweightgen": 15, "mappingfilestep": [15, 17], "woa": 15, "2023": [15, 269, 270], "__init__": [15, 16, 18, 20, 33, 42, 48, 57, 58, 65, 71, 85, 111, 126, 127, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 157, 159, 162, 165, 167, 169, 172, 174, 175, 178, 181, 183, 186, 188, 189, 192, 195, 197, 200, 201, 202, 203, 205, 226, 227, 230, 232, 233, 237, 239, 240, 242, 243, 244, 252, 254], "mytestcas": 15, "__int__": 15, "make_map": 15, "64": [15, 263], "bilinear": [15, 85, 221, 267, 272, 277], "filenam": [15, 16, 35, 36, 79, 86, 87, 88, 89, 93, 94, 95, 99, 108, 112, 114, 230, 234, 254], "woa23_decav_0": 15, "25_extrap": 15, "20230414": 15, "initial_condition_databas": [15, 255], "destin": [15, 85, 86, 87, 88, 89, 90, 91], "src_from_lon_lat": 15, "lon_var": [15, 86, 88, 93], "lat_var": [15, 86, 88, 93], "dst_from_mpa": 15, "mesh_nam": [15, 86, 87, 88, 89, 90, 93, 94, 95, 160, 162, 167, 169, 232], "qu60": 15, "subclass": [15, 62, 65, 66, 67, 72, 125, 254], "src_": 15, "dst_": 15, "pick": [15, 96], "vizmap": [15, 157, 167, 221, 232], "super": [15, 16, 226, 227, 230, 232, 233, 254], "128": [15, 231, 257, 258, 261], "cosine_bell_viz": [15, 17, 221, 267, 272, 277], "dlon": [15, 90, 221, 267, 272, 277], "dlat": [15, 90, 221, 267, 272, 277], "remap_method": [15, 221, 267, 272, 277], "src_from_mpa": 15, "dst_global_lon_lat": 15, "lon_min": [15, 90], "With": [15, 234], "approach": [15, 230, 233, 234, 251, 254, 263], "perhap": [15, 17, 36, 226, 232], "cover": [15, 248, 254], "nearli": [15, 230, 232, 252, 253, 254], "situat": [15, 26, 130, 254, 273], "workflow": [15, 230, 234], "critic": [16, 254], "easiest": [16, 122, 234], "validate_var": [16, 33, 36, 201], "meth": 16, "add_output_fil": [16, 34, 230, 232, 254], "temperatur": [16, 153, 219, 220, 224, 225, 230, 250, 254, 266, 267, 271, 272, 277], "salin": [16, 153, 219, 220, 225, 230, 254, 266, 267, 271, 272, 277], "done": [16, 30, 40, 230, 234, 254, 273], "compare_vari": [16, 254], "filename1": [16, 108, 254], "filename2": [16, 108, 254], "compact": [16, 254], "output_full_run": 16, "output_restart_run": 16, "all_pass": [16, 108], "valueerror": [16, 233], "quiet": [16, 97, 98, 108, 113], "report": 16, "threshold": [16, 267, 269, 270], "l1": [16, 108], "00000000000000e": 16, "l2": [16, 108], "l_infin": 16, "linf": [16, 108], "test_nightly_latest": 16, "10km": [16, 220, 254, 266, 273, 278, 279], "threads_test": 16, "1thread": [16, 220, 266], "2thread": [16, 266], "test_20210616": 16, "further_valid": 16, "zero": [16, 210, 211, 212, 213, 214, 219, 220, 225, 254, 267, 271], "l1_norm": [16, 108], "l2_norm": [16, 108], "linf_norm": [16, 108], "nonzero": [16, 108], "solut": [16, 121, 175, 176, 177, 185, 186, 188, 189, 190, 191, 192, 195, 197, 221, 223, 224, 231, 251, 254, 269, 270], "aspect": [17, 254], "routin": 17, "viz": [17, 157, 232], "plot_horiz_field": [17, 254], "patch": [17, 110, 254], "style": [17, 125, 253, 254], "edg": [17, 87, 90, 94, 110, 175, 176, 189, 190, 219, 254], "polygon": 17, "character": 17, "accordingli": [17, 83], "d": [17, 110, 175, 189, 209, 215, 216, 219, 230, 254, 271], "final_normalveloc": [17, 254], "t_index": [17, 110, 254], "vmin": [17, 110, 221, 254, 267], "max_veloc": [17, 254], "vmax": [17, 110, 221, 254, 267], "cmap": [17, 110, 254], "cmo": [17, 254], "balanc": [17, 254], "show_patch_edg": [17, 110, 254], "globe": [17, 221, 267], "plot_glob": 17, "plot_land": [17, 109], "disabl": [17, 219, 267, 279], "contin": [17, 109], "overlain": 17, "usag": [17, 255, 257, 261], "cmocean": [17, 254], "noqa": [17, 57, 254], "f401": [17, 254], "xr": [17, 175, 176, 177, 189, 190, 191, 254], "open_dataset": [17, 230, 254], "tracer1": 17, "isel": 17, "nvertlevel": [17, 110, 209, 215, 216, 230, 254, 263], "out_filenam": [17, 106, 109, 208], "colormap_sect": [17, 109], "titl": [17, 109, 110], "colormap": [17, 109, 110, 221, 254, 267], "cosin": [17, 156, 159, 162, 165, 167, 169, 221, 267, 272, 277], "bell": [17, 156, 159, 162, 165, 167, 169, 221, 267, 272, 277], "converg": [17, 171, 185, 221, 228, 231, 253, 254, 267, 272, 277, 278], "colormap_nam": [17, 109, 221, 267], "viridi": [17, 221, 254, 267], "norm": [17, 108, 109, 221, 267], "norm_typ": [17, 109, 221, 267], "norm_arg": [17, 109, 221, 267], "colorbar": [17, 109, 110, 221, 267], "tick": [17, 109, 221, 267], "mark": [17, 221, 234, 267], "colorbar_tick": [17, 109, 221, 267], "matplotlib": [17, 254], "standard": [17, 233, 234, 243, 254, 257, 273], "symlog": [17, 109], "symmetr": 17, "central": [17, 267], "logarithm": [17, 110], "color": [17, 110], "normal": [17, 175, 176, 189, 190, 219, 230, 231, 234, 254, 260], "symlognorm": 17, "lognorm": 17, "hous": 18, "dict": [18, 21, 23, 24, 26, 33, 37, 42, 77, 78, 80, 84, 85, 100, 102, 103, 109, 111, 112, 113, 130, 232, 254], "kei": [18, 42, 102, 232], "indir": [20, 33, 42, 85, 127, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 201, 203, 205, 240, 242, 244], "max_memori": [20, 30, 33, 40, 127], "mesh_filenam": [20, 75, 127], "graph_filenam": [20, 75, 127], "graph": [20, 27, 29, 39, 75, 127, 220, 223, 224, 230, 254, 255], "make_yaml": 20, "stride": [20, 32, 127], "consist": [20, 32, 122, 127, 217, 234, 254, 255, 266], "partit": [20, 29, 39, 52, 75, 127, 220, 223, 224, 230, 255, 256, 257, 258, 259, 261, 273], "model_config_data": 20, "streams_data": 20, "neither": [20, 33, 42, 85, 127, 137, 201], "nor": [20, 33, 42, 85, 127, 137, 201, 230, 254], "append": [20, 33, 35, 42, 85, 127, 133, 135, 136, 137, 140, 143, 144, 146, 148, 151, 152, 154, 201, 240, 242, 244], "ideal": [20, 30, 33, 40, 81, 82, 85, 125, 127, 137, 178, 192, 201, 202, 203, 205, 226, 230, 233, 253, 254, 255, 279], "accommod": [20, 30, 33, 40, 81, 82, 127], "fewer": [20, 30, 33, 40, 81, 82, 127, 137, 178, 192, 201, 230, 254, 273], "memori": [20, 30, 33, 40, 127, 230, 255], "mb": [20, 30, 33, 40, 127, 255], "placehold": [20, 30, 33, 40, 127, 230, 273], "at_setup": [25, 139, 145, 164, 180, 194, 254], "overridden": [26, 130, 230, 232, 254], "diverg": [26, 130], "counterpart": [26, 125, 130], "nest": [26, 111, 113, 130], "graph_fil": 27, "parent": [28, 226, 227, 230, 232], "run_as_subprocess": [33, 230], "smallest": [33, 230, 252, 263, 279], "unit": [33, 86, 90, 93, 230, 252, 266, 279], "term": [33, 252, 254, 269, 270], "necessarili": [33, 35], "input_data": 33, "until": [33, 34, 230, 232, 273], "finish": [33, 34, 72, 254], "suffici": 33, "establish": [33, 34], "is_depend": 33, "combin": [33, 35, 42, 48, 53, 84, 111, 230, 231, 232, 251, 254, 255, 273], "machine_info": 33, "machineinfo": 33, "config_filenam": [33, 42, 99, 230, 232], "base_work_dir": [33, 42, 230, 232], "log_filenam": [33, 42, 230], "redirect": [33, 230], "extern": [33, 122, 217, 227, 230, 246, 264, 274], "access": [34, 232, 233, 234, 254, 256, 260, 261], "database_compon": [35, 230], "work_dir_target": [35, 230], "come": [35, 122, 230, 234, 254, 256, 257, 258, 259, 260, 261, 264], "root": [35, 122, 160, 217, 221, 223, 224, 227, 230, 233, 234, 246, 252, 255, 256, 257, 258, 259, 260, 261, 263, 269, 270, 273], "_database_root": 35, "available_resourc": [37, 80], "constrain": [37, 128, 138, 163, 179, 193, 220, 223, 224, 230, 254], "cores_per_nod": [37, 80, 83, 122, 255, 256, 257, 258, 259, 260, 261, 273], "everi": [38, 170, 220, 230, 232, 233, 250, 251, 252, 254, 266, 271], "child": [38, 170, 227, 230, 232, 233], "serial": [39, 230, 232, 253, 254, 273], "subtask": 40, "step_symlink": 42, "outsid": [42, 43, 226, 230, 234], "stdout_logg": 42, "goe": [42, 230, 254], "regardless": 42, "new_step_log_fil": 42, "run_by_default": [43, 230, 232], "present": [43, 110, 234, 254], "live": [43, 273], "assum": [44, 103, 112, 122, 232, 234, 254, 261, 266], "prior": [44, 230, 232], "step_path": 46, "variant": [46, 156, 220, 226, 231, 233, 234, 254, 260, 263, 266, 267], "uncach": 46, "datestamp": 46, "yymmdd": [46, 255], "dry": [46, 231], "meta": 48, "empti": [48, 230, 233, 234, 252, 254], "link_nam": 51, "overwrit": 51, "stackoverflow": [51, 254], "55742015": 51, "7728169": [51, 254], "symbol": [51, 230], "fileexistserror": 51, "unless": [51, 98, 234], "isadirectoryerror": 51, "slurm": [52, 83, 122, 230, 253, 255, 256, 257, 258, 259, 261, 273], "qo": [52, 256, 257, 259, 260, 261, 273], "qualiti": [52, 256, 257, 259, 260, 261, 273], "servic": [52, 256, 257, 259, 260, 261, 273], "constraint": [52, 261, 273], "wall_tim": [52, 273], "wall": [52, 273], "target_cor": 53, "min_cor": 53, "decomposition_test": [57, 226, 273], "decompositiontest": [57, 226], "e501": [57, 254], "turquois": [57, 257], "usr": [57, 122, 257, 273], "climat": [57, 256, 257, 258, 260, 273], "mhoffman": 57, "latitud": [59, 66, 86, 88, 90, 93, 109, 221, 267, 272, 277], "longitud": [59, 66, 67, 73, 86, 88, 90, 93, 109, 221, 267, 272, 277], "ndarrai": [59, 66, 67, 73, 109, 132, 207, 208, 254], "degre": [59, 66, 67, 73, 90, 255, 266], "length": [59, 66, 67, 73], "180": [59, 66, 67, 73, 90, 232, 267], "90": [59, 66, 67, 73, 230, 232, 267], "static": [60, 61], "rule": 60, "thumb": 60, "achiev": [61, 231], "uniform": [65, 70, 162, 220, 221, 223, 224, 226, 232, 254, 255, 266, 267, 269, 270, 271, 272, 277], "natur": 70, "jigsawpi": [71, 230], "jigsaw_jig_t": 71, "meti": 75, "defaults_filenam": 76, "total": [80, 230, 231, 233, 254, 255, 257, 273], "substep": [81, 82], "command_line_arg": 81, "cpus_per_nod": 83, "map_filenam": 85, "src_grid_info": 85, "dst_grid_info": 85, "neareststod": [85, 221, 267, 272, 277], "conserv": [85, 221, 267, 272, 277], "map_": 85, "source_typ": 85, "dest_typ": 85, "1d": [86, 90, 93, 109, 125, 207, 208, 209, 210, 211, 212, 213, 215, 216], "2d": [86, 90, 93, 109], "5x0": [86, 90, 93], "5degre": [86, 90, 93], "coordin": [86, 88, 89, 93, 95, 109, 110, 175, 189, 209, 215, 216, 262, 264, 266, 267, 269, 270, 271, 272, 276], "mesh_typ": [87, 94, 226, 230, 232], "vertex": [87, 94], "x_var": [89, 95], "y_var": [89, 95], "proj_attr": [89, 95], "proj_str": [89, 95], "proj": [89, 95], "left": [90, 125, 254, 263, 266, 267], "remapp": [91, 92], "remap_fil": 91, "ran": 96, "step_is_subprocess": 97, "progress": [97, 98], "is_task": 98, "steps_to_skip": 98, "unpickl": [100, 230], "cached_step": 101, "copy_execut": [101, 102, 107, 273], "identifi": [101, 122, 227, 246, 279], "task_list": 102, "_all": 102, "streams_filenam": 103, "lxml": [103, 105, 117], "etre": [103, 105, 117], "new_child": 104, "children": 104, "sub": [104, 254], "new_tre": 105, "infin": 108, "toler": 108, "data_arrai": 109, "colorbar_label": 109, "subtitl": 109, "field_nam": 110, "out_file_nam": 110, "ax": 110, "z_index": 110, "cmap_set_und": 110, "cmap_scal": 110, "cmap_titl": 110, "horizont": [110, 125, 202, 219, 220, 223, 224, 225, 266, 269, 270, 271], "planar": [110, 125, 219, 254, 269, 270, 271, 272, 277], "depth": [110, 125, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 254, 255, 263, 266, 267, 269, 270, 271, 272], "slice": 110, "fieldnam": 110, "visibl": 110, "bar": 110, "classmethod": 112, "jinja": 112, "namelist_templ": 116, "polarisyaml": [116, 117], "processed_registry_filenam": 117, "registri": [117, 219, 246], "steam": 117, "1_anvil_intel_impi": [118, 122], "mvapich": [118, 122, 256], "ve": [118, 119, 120, 121, 123, 230, 234, 254], "1_anvil_gnu_openmpi": 118, "1_chicoma": 119, "cpu_gnu_mpich": [119, 123], "crai": [119, 122, 123, 257, 261], "1_chrysalis_intel_openmpi": 120, "1_chrysalis_gnu_openmpi": 120, "again": [121, 217, 230, 234, 251, 273], "soon": [121, 122, 254, 273], "1_compy_intel_impi": 121, "1_compy_gnu_openmpi": 121, "particular": [122, 226, 234, 253, 257, 260, 273], "load_polaris_env": [122, 234, 254, 273], "were": [122, 137, 201, 230, 233, 252, 254, 255, 259, 263], "right": [122, 125, 232, 234, 254, 255, 263, 266, 267, 273], "therefor": [122, 230, 236, 252, 254], "chicoma": [122, 260, 273], "mpich": [122, 234, 253, 257, 261, 273], "compi": [122, 259, 273], "pm": [122, 261, 273], "compymcnodefac": [122, 260], "perlmutt": [122, 257, 260, 273], "pretti": [122, 230, 233, 254, 255], "conda_path": [122, 234], "osx": [122, 260], "clang": [122, 234], "had": 122, "1_": 122, "morpheu": 122, "cobalt": [122, 256, 257, 258, 259, 260, 261], "single_nod": [122, 255, 256, 257, 258, 259, 260, 261, 273], "mpirun": [122, 251, 255, 256, 257, 258, 259, 260, 261, 273], "srun": [122, 251, 254, 255, 256, 257, 258, 259, 260, 261, 273], "parallel_execut": [122, 251, 255, 256, 257, 258, 259, 260, 261, 273], "modules_befor": [122, 257, 261], "modules_aft": [122, 257, 261], "polaris_env": [122, 256, 257, 258, 259, 260, 261], "deploi": [122, 234, 253, 256, 257, 258, 259, 260, 261], "mpi_gnu": [122, 256, 257, 258, 259, 260, 261], "hdf5": [122, 256, 257, 258, 259, 260, 261], "use_e3sm_hdf5_netcdf": [122, 256, 257, 258, 259, 260, 261], "discoveri": 122, "hostnam": 122, "hostname_contain": 122, "queu": 122, "laptop": [122, 234, 254, 255], "workstat": [122, 234], "high": [122, 230, 258, 260], "hpc": [122, 234, 257, 260], "safest": [122, 234], "mpi_": 122, "simpl": [122, 125, 233, 246, 254, 273], "compiler_gnu": 122, "compiler_intel": 122, "hopefulli": [122, 255], "pre": [122, 234], "parlanc": 122, "concret": 122, "ubuntu": 122, "spec": [122, 251, 261], "gcc": 122, "curl": 122, "81": 122, "buildabl": 122, "install_missing_compil": 122, "cc": 122, "bin": [122, 234, 261, 273], "cxx": 122, "f77": 122, "fc": 122, "operating_system": 122, "ubuntu22": 122, "04": 122, "extra_rpath": 122, "luck": 122, "catch": [122, 231], "22": 122, "design": [122, 218, 230, 232, 233, 247, 253, 260, 266], "guess": [122, 254], "correct": [122, 234], "potenti": [122, 132, 146, 230, 254, 266], "purg": 122, "perl": 122, "32": [122, 231, 273], "bsnc6lt": 122, "ugetvbp": 122, "sxfyy4k": 122, "2020": 122, "304": 122, "n3b5fye": 122, "j3zxncu": 122, "7ohuiwq": 122, "k2zu3y5": 122, "mirrcz7": 122, "shouldn": [122, 137, 201, 254], "variou": [122, 199, 227, 230, 234, 238], "ask": 122, "gb": 122, "zlib": 122, "incompat": 122, "ubuntu20": 122, "readlin": 122, "pkgconf": 122, "spackdir": 122, "env": [122, 261], "arch": 122, "repositori": [122, 228, 253, 254, 273], "x86_64_v4": 122, "free": [122, 219, 254, 255], "touch": [122, 234], "everyth": 122, "1_pm": 123, "ever": [125, 233, 236], "expand": [125, 236, 263], "oceanmodelstep": [125, 254], "decid": [125, 254], "veri": [125, 227, 230, 233, 234, 246, 254, 271], "earli": [125, 264, 273], "stage": [125, 219, 230, 232, 234, 242, 250, 264, 273], "map_yaml_to_namelist": 125, "heurist": 125, "algorithm": [125, 137, 201, 220, 223, 224, 230, 254], "200": [125, 223, 224, 254, 266, 269, 270, 271], "round": [125, 267], "cell_count": [125, 128, 138, 163, 179, 193, 254], "goal_cells_per_cor": [125, 254, 267, 269, 270, 272, 277], "pinch": 125, "2000": [125, 226, 248, 250, 254, 276], "max_cells_per_cor": [125, 254, 267, 269, 270, 272, 277], "seciton": 125, "control": [125, 221, 230, 255, 266, 267, 271, 273], "scale": [125, 266, 273], "tri": [125, 233], "apport": 125, "precis": [125, 230, 254], "caviti": [125, 233, 254, 255, 263], "frazil": 125, "flux": [125, 219, 271], "grid_1d": 125, "generate_1d_grid": 125, "vertical_grid": [125, 207, 209, 215, 216, 226, 254, 255, 263, 266, 267, 269, 270, 271, 272], "z": [125, 210, 211, 212, 213, 214, 215, 216, 254, 266, 267, 269, 270, 271, 272], "star": [125, 214, 216, 254, 266, 267, 269, 270, 271, 272], "init_vertical_coord": [125, 254], "minlevelcel": [125, 209, 211, 212, 213, 214, 215, 216, 254], "maxlevelcel": [125, 209, 210, 211, 212, 213, 214, 215, 216, 230, 254], "cellmask": [125, 209, 212, 215, 216, 254], "zmid": [125, 209, 215, 216, 254], "restingthick": [125, 209, 214, 215, 216, 230, 254], "bottomdepth": [125, 209, 210, 212, 213, 214, 215, 216, 230, 254], "entir": [125, 254, 266, 278], "petersen": [125, 234, 254, 266], "et": [125, 254, 263, 266, 267, 269, 270], "al": [125, 254, 263, 266, 267, 269, 270], "2015": [125, 254, 266], "int_": 125, "rho": 125, "dv": 125, "sort": [125, 228, 233, 234], "increas": [125, 233], "compute_rp": [125, 254], "csv": [125, 254], "dynamic_ntask": 127, "available_cor": 129, "estim": [129, 131, 254], "initial_state_file_nam": [132, 254], "output_fil": [132, 230, 254], "energi": [132, 146, 253, 254, 266], "state": [132, 219, 220, 221, 223, 224, 225, 226, 230, 231, 254, 267], "len": [132, 230, 254], "superclass": [133, 220, 230], "run_time_step": [137, 254], "resources_fix": [137, 201], "dt": [137, 201, 254, 266, 267, 269, 270, 272, 277], "btr_dt": [137, 201, 254, 266], "barotrop": [137, 201, 254, 266, 271], "longer": [143, 220, 231, 239, 254, 266, 267], "shorter": [143, 231, 239], "20": [146, 220, 231, 254, 266, 271], "step_subdir": [152, 240], "processor": [152, 230, 240, 266], "rpe": [154, 227, 232, 233, 254, 273], "include_viz": [157, 232], "less": [157, 159, 230, 263, 271], "taskdir": [159, 172, 178, 181, 183, 186, 192, 195, 197], "rmsevalu": 160, "squar": [160, 221, 223, 224, 269, 270], "ncell": [160, 230, 254], "viz_map": [167, 232], "inerti": [171, 172, 174, 175, 178, 181, 183, 223, 264, 268], "graviti": [171, 172, 174, 175, 178, 181, 183, 223, 264, 268], "wave": [171, 172, 174, 175, 178, 181, 183, 189, 223, 230, 254, 264, 266, 268, 270], "analys": [172, 186], "exact": [175, 176, 177, 189, 190, 191, 221, 223, 224, 233, 269, 270], "angleedg": [175, 189], "angl": [175, 189], "posit": [175, 189, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 254, 263, 271], "xcell": [175, 189, 230, 254], "ycell": [175, 189, 230, 254], "xedg": [175, 189, 230, 254], "yedg": [175, 189], "f0": 175, "corioli": [175, 223, 224, 254, 266, 267, 270, 271], "eta0": [175, 189], "amplitid": [175, 189], "kx": [175, 189], "ky": [175, 189], "angular": [175, 189], "frequenc": [175, 189, 220], "veloc": [176, 190, 219, 220, 223, 224, 232, 234, 254, 267, 271, 273], "evalu": [176, 177, 190, 191], "norm_vel": 176, "eta": [177, 191, 269, 270], "manufactur": [185, 186, 188, 189, 192, 195, 197, 224, 270], "column": [199, 200, 202, 203, 205, 225, 234, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 271, 273, 276], "mix": [200, 226, 227, 269, 270, 271], "param": [200, 202], "ag": [202, 203, 205], "evolv": [202, 253, 263, 267, 271], "ideal_ag": [203, 205], "ivar": 203, "layer": [207, 208, 209, 213, 214, 215, 216, 219, 220, 223, 224, 225, 254, 255, 263, 266, 267, 269, 270, 271, 272], "meter": [207, 208], "bottom": [209, 210, 211, 212, 213, 214, 215, 216, 219, 254, 255, 263, 266, 267, 269, 270, 271, 272], "thick": [209, 213, 214, 215, 216, 220, 225, 248, 254, 255, 263, 266, 269, 276], "stretch": [209, 215, 216, 254, 263], "elev": [209, 215, 216, 254, 263], "midpoint": [209, 215, 216, 254], "reftopdepth": [209, 212, 213, 215, 216, 254], "down": [209, 210, 211, 212, 213, 214, 215, 216, 221, 254, 263, 267], "ref": [209, 215, 216, 254], "middl": [209, 215, 216, 254], "refbottomdepth": [209, 210, 211, 212, 213, 215, 216, 230, 254], "refinterfac": [209, 215, 216, 254], "element": [209, 215, 216, 254], "vertcoordmovementweight": [209, 215, 216, 230, 254], "movement": [209, 215, 216, 254], "alter": [210, 211, 230, 232, 253, 254, 263, 266, 267, 269, 270, 271, 272], "partial": [210, 211, 254, 263, 266, 267, 269, 270, 271, 272], "seafloor": [210, 212, 213, 214, 263], "unstretch": 214, "shelv": [217, 255, 263], "ssh_adjust": [217, 230, 255], "iter": [217, 255], "compass_branch": 217, "default_input": [217, 227, 246, 254, 255], "ocean_model": [217, 234, 255], "latest": [217, 234, 246, 253, 264, 273], "compat": [217, 234, 246, 251, 253], "verison": 217, "maintain": [217, 273], "inertial_gravity_wav": [217, 222, 227, 269, 278], "manufactured_solut": [217, 222, 227, 264, 268], "single_column": [217, 222, 227, 246, 249, 264, 268, 274, 275], "minim": 219, "fcell": [219, 230, 254, 267], "fedg": [219, 230, 254, 267], "fvertex": [219, 230, 254, 267], "slip": 219, "solid": [219, 248, 266, 267], "tangenti": 219, "enforc": [219, 234], "nonperiod": 219, "drag": 219, "mass": 219, "momentum": [219, 220, 223, 224, 269, 270], "scalar": 219, "rigid": 219, "solv": [219, 251, 263], "mid": [219, 266], "vari": [219, 221, 230, 251, 260, 263, 267], "consult": [219, 254], "tidal_forc": 219, "eddi": [220, 266], "addition": [220, 223, 224, 225, 256, 257, 258, 259, 261], "diffus": [220, 223, 224, 225], "50": [220, 223, 224, 254, 266, 269, 270, 271], "prescrib": [220, 223, 224], "intens": 220, "enough": [220, 230, 233, 254], "studi": [221, 267], "advect": [221, 267, 269, 270, 271], "qu": [221, 232, 254, 255, 265, 267, 278], "ico": [221, 232, 254, 265, 267, 278], "fix": [221, 254], "spheric": [221, 232, 267], "cosinebel": [221, 232], "24": [221, 267, 276], "shape": [221, 267], "blob": 221, "around": [221, 254, 255, 266, 267], "rate": [221, 223, 224, 254, 267, 269, 270, 271], "cosine_bell_with_viz": [221, 265], "distribut": 221, "dt_per_km": [221, 254, 266, 267, 269, 270, 272, 277], "rmse": [221, 223, 224, 269, 270], "slow": [221, 267], "shallow": [223, 234, 267, 269, 270, 272], "water": [223, 254, 266, 267, 269, 270, 271, 272], "100": [223, 224, 225, 263, 269, 270, 271], "25": [223, 224, 269, 270, 271], "exactsolut": [223, 224], "obtain": [223, 224, 234, 257], "assign": [223, 224, 267], "simul": [223, 224, 230, 252, 254, 265, 266, 269, 270, 272, 273, 277], "fall": [223, 224, 273], "accept": [223, 224], "bound": [223, 224], "calcul": [223, 230, 232], "exercis": [225, 250, 267, 271], "kpp_test": 225, "mixedlayerdepthsoutput": 225, "idealagetrac": [225, 271], "dimens": [225, 266, 271], "single_column_forc": [225, 271], "profil": [225, 251, 271], "throughout": [225, 266, 271], "idealag": 225, "enabel": 225, "formal": 226, "organ": [226, 228, 231, 253], "conceptu": [226, 233], "broadli": [226, 227, 233], "realist": [226, 253, 279], "greenland": [226, 253, 279], "2000m": [226, 273], "34": [226, 273], "halfar": 226, "cism": 226, "dome_typ": 226, "closest": 226, "put_origin_on_a_cel": 226, "hydrologi": 226, "hydro": [226, 279], "dome_viz": 226, "time_slic": 226, "save_imag": 226, "hide": [226, 254], "hide_fig": 226, "helper": [226, 227], "clutter": 226, "smoke_test": [226, 232], "smoketest": [226, 232], "restart_test": 226, "restarttest": 226, "add_dome_task": 226, "variable_resolut": [226, 230, 273], "add_test_cas": [226, 254], "talk": 226, "baroclinic_channel_test_cas": 226, "res_str": [226, 254], "1000": [226, 254, 255, 263, 266, 269, 270], "add_step": [226, 232, 254], "among": [226, 228, 234, 254], "encompass": 227, "perspect": 227, "four": 227, "major": [227, 230], "add_task": 227, "univers": 227, "add_baroclinic_channel_task": [227, 233], "add_cosine_bell_task": 227, "add_inertial_gravity_wave_task": 227, "add_manufactured_solution_task": 227, "add_single_column_task": 227, "alphabet": [227, 254], "decomp": [227, 254, 273, 278], "landice_model": [227, 234], "green": 228, "blue": [228, 256, 273], "orang": 228, "red": 228, "laid": 228, "fig": 228, "organiz": 228, "concept": [228, 233, 254, 279], "test_group": [230, 232, 254], "multiprocess": [230, 233, 255], "emploi": 230, "prevent": 230, "unwant": 230, "outer": 230, "inner": 230, "dome_varres_grid": 230, "possibli": [230, 234, 254], "signific": [230, 231, 232], "neglig": 230, "convent": [230, 234, 254], "fit": [230, 255], "applic": [230, 233, 234, 272, 277], "meshstep": 230, "getint": 230, "mesh_cpus_per_task": 230, "mesh_min_cpus_per_task": 230, "previous": [230, 254], "write_netcdf": [230, 254], "convers": [230, 254], "generate_grid": 230, "dsmesh": 230, "graphinfofilenam": [230, 254], "use_dist": [230, 254, 266], "gradient_width_dist": [230, 254, 266], "gradient_width_frac": [230, 254, 266], "bottom_temperatur": [230, 254, 266], "surface_temperatur": [230, 254, 266, 271], "temperature_differ": [230, 254, 266], "coriolis_paramet": [230, 254, 266, 269, 270, 271], "bottom_depth": [230, 254, 255, 263, 266, 267, 269, 270, 271, 272], "vert_level": [230, 254, 255, 263, 266, 267, 269, 270, 271, 272], "ones_lik": [230, 254], "xmin": 230, "min": [230, 254, 266, 271], "xmax": 230, "ymin": 230, "ymax": 230, "ymid": 230, "xperturbmin": 230, "xperturbmax": 230, "perturbationwidth": 230, "yoffset": 230, "sin": [230, 254, 266, 269, 270], "pi": [230, 254, 263, 266, 267], "temp_vert": [230, 254], "frac": [230, 254, 263, 266, 269], "logical_and": [230, 254], "transpos": [230, 254], "3rd": [230, 254], "crest": [230, 254, 266], "expand_dim": [230, 254], "dim": [230, 254], "axi": [230, 254], "broadcast": [230, 254], "zeros_lik": [230, 254], "nedg": [230, 254], "dtype": [230, 232, 254], "xvertex": [230, 254], "commandlin": 230, "harm": 230, "likewis": [230, 254], "subsequ": [230, 278], "arisen": 230, "problemat": 230, "usual": [230, 232, 234, 254, 273], "forwardstep": 230, "mesh_path": 230, "mesh_step": 230, "with_ice_shelf_cav": 230, "initial_state_target": 230, "adjusted_init": 230, "forcing_data": 230, "entha_analy_result": 230, "mat": 230, "enthalpy_benchmark": 230, "ourselv": 230, "reduc": 230, "problem": [230, 234, 251, 254], "firewal": 230, "bedmachineantarctica_v2_and_gebco_2022_0": 230, "05_degree_20220729": 230, "slate": 230, "icepresent_qu60km_polar": 230, "practic": [230, 233, 234], "straightforward": 230, "commonli": [230, 252], "expens": [230, 231], "mechan": 230, "notat": [230, 272, 277], "That": [230, 233, 252, 254, 273], "word": 230, "ff": 230, "quwisc240": [230, 233, 273], "90c": 230, "91c": 230, "92": [230, 263], "91": 230, "sowisc12to60": [230, 273], "performance_test": 230, "effici": [230, 254], "transfer": 230, "feasibl": 230, "add_depend": 230, "overhead": 230, "philosophi": [231, 233, 254], "context": [231, 254], "namesak": 231, "256": [231, 257, 261], "count": [231, 252], "quicker": 231, "exce": 231, "offer": 231, "benefit": [231, 253], "bug": 231, "covereag": 231, "timestep": 231, "exhaust": 231, "recent": [231, 264, 274], "merg": 231, "reach": 231, "steadi": 231, "wet": 231, "fundament": 232, "incorpor": 232, "velo_solv": 232, "sia": [232, 234], "fo": 232, "runmodel": 232, "run_step": 232, "0200": 232, "00_00": [232, 248, 254], "fine": [232, 254, 271], "recip": 232, "demonstr": [232, 254], "_with_viz": 232, "_setup_step": [232, 254], "default_resolut": 232, "480": [232, 267], "150": [232, 267], "210": [232, 263, 267], "prioriti": [232, 257], "_mesh": 232, "_map": 232, "_viz": 232, "rare": [232, 234], "form": [232, 279], "_add_step": [232, 254], "filesfore3sm": 232, "configure_global_ocean": 232, "initial_condit": 233, "dig": [233, 255], "infrastructur": [233, 254], "background": 233, "behind": 233, "adher": [233, 254], "pep8": [233, 234], "bot": [233, 263], "violat": 233, "consid": 233, "editor": 233, "pycharm": [233, 234, 254], "spyder": 233, "linter": 233, "flake8": [233, 234], "discourag": [233, 252], "reformat": 233, "autopep8": 233, "undesir": 233, "lint": 233, "wildcard": 233, "vim": [233, 254], "plugin": 233, "id": [233, 234], "commit": [233, 234], "why": 233, "sound": 233, "subpackag": 233, "understand": [233, 255], "downstream": 233, "tutori": [233, 234], "clu": 233, "intro": 233, "docstr": [233, 253, 254], "strip": 233, "mpas_ocean": 233, "hidden": 233, "shortcut": [233, 273], "referenc": [233, 254], "mention": 233, "dot": 233, "charact": 233, "unix": [233, 253], "distinct": 233, "mayb": [233, 254], "machine_config": 233, "endswith": 233, "splitext": 233, "exactli": [233, 234, 254, 263], "move": [233, 234, 254, 272, 277], "renam": 233, "visa": 233, "versa": 233, "comfort": [233, 254], "inherit": [233, 254], "orient": 233, "program": [233, 255], "led": 233, "felt": 233, "contribut": 233, "hesit": 233, "predecessor": [233, 252, 253], "clumsi": 233, "harder": 233, "outcom": 233, "augment": 233, "explain": 233, "hope": 233, "dens": 233, "learn": [233, 254], "curv": 233, "worth": [233, 254], "skill": 233, "endeavor": 233, "readabl": 233, "manipul": 233, "get_available_cores_and_nod": 233, "theoret": 233, "dozen": 233, "split": 233, "theori": 233, "biogeochemistri": 233, "ksh": 234, "mac": [234, 253], "csh": 234, "tcsh": 234, "temporarili": 234, "recogn": [234, 255, 273], "permiss": 234, "anyon": 234, "caus": [234, 257, 261, 263], "person": [234, 251], "base_path_to_install_or_update_conda": 234, "with_netlib_lapack": 234, "flavor": [234, 254], "troubl": [234, 254], "recognit": 234, "trilino": 234, "downsid": 234, "unneed": 234, "reinstal": 234, "caution": 234, "load_": 234, "encod": 234, "load_dev_polaris_": [234, 254], "env_nam": 234, "dev_polaris_": [234, 251], "workdir": [234, 273], "unexpect": [234, 252, 254], "occur": [234, 251], "rerun": 234, "echo": 234, "proceed": 234, "notic": 234, "conda_env": [234, 259, 273], "rememb": 234, "incorrect": 234, "unus": 234, "session": [234, 254], "pip": 234, "substanti": 234, "risk": [234, 254], "unsupport": 234, "env_onli": 234, "mpas_make_target": [234, 273], "scientif": [234, 273], "_albani": 234, "instruct": [234, 254], "proce": 234, "es3m": 234, "compli": 234, "memor": 234, "guidelin": 234, "complianc": 234, "checker": 234, "isort": 234, "flynt": 234, "mypi": 234, "77": 234, "e302": 234, "blank": 234, "resolv": 234, "simpler": [234, 254], "new_branch_nam": 234, "put": [234, 254], "elsewher": 234, "disk": [234, 255, 257, 261], "respons": 234, "simplest": 234, "your_new_branch": 234, "seaicemodelstep": 236, "concern": 236, "restart_filenam": 240, "polaris_branch": 246, "post": 246, "src": 246, "registry_process": 246, "seaice_model": 246, "1m": [248, 276], "disc": [248, 276], "condidion": 248, "config_initial_ice_area": 248, "config_initial_ice_volum": 248, "config_atmospheric_forcing_typ": 248, "config_forcing_start_tim": 248, "config_forcing_cycle_start": 248, "config_forcing_cycle_dur": 248, "config_forcing_precipitation_unit": 248, "mm_per_sec": 248, "config_forcing_sst_typ": 248, "ncar": 248, "config_update_ocean_flux": 248, "config_include_pond_freshwater_feedback": 248, "standard_phys": 250, "standardphys": 250, "year": [250, 264, 276], "volum": 250, "snow": 250, "exact_restart": 250, "exactrestart": 250, "geo": 251, "cartopi": 251, "14": 251, "np110py27_4": 251, "calledprocesserror": 251, "deploy_tmp": 251, "vpn": 251, "site": 251, "shell": [251, 253], "honor": 251, "wide": 251, "spawn": 251, "usernam": [251, 254, 257, 261], "proxy_en": 251, "all_proxi": 251, "proxyout": 251, "8080": 251, "no_proxi": 251, "localhost": [251, 255, 260, 261, 273], "127": 251, "proxy_dis": 251, "unset": 251, "anytim": 251, "fatal": 251, "mpi_init": 251, "stack": 251, "mpir_init_thread": 251, "159": 251, "mpid_init": 251, "164": 251, "mpidi_ch3_init": 251, "95": 251, "mpid_nem_init": 251, "314": 251, "mpid_nem_tcp_init": 251, "173": 251, "mpid_nem_tcp_get_business_card": 251, "395": 251, "getsockinterfaceaddr": 251, "369": 251, "pn2034311": 251, "errno": 251, "host": [251, 255, 260, 273], "focus": 252, "plu": 252, "autom": 253, "exascal": 253, "earth": 253, "kept": 253, "sens": [253, 254], "boundari": [253, 266, 279], "expert": 253, "launch": 253, "uncoupl": 253, "quick": [253, 254, 264, 274], "queue": 253, "beginn": [253, 254], "advanc": [253, 254], "mpas_to_yaml": 253, "troubleshoot": 253, "proxi": 253, "lanl": [253, 255, 257], "gethostbynam": 253, "glossari": 254, "port": [254, 261], "stick": 254, "miniconda": 254, "3_chrysalis_intel_openmpi": 254, "strict": 254, "push": 254, "lowercas": 254, "hyphen": 254, "settl": 254, "desktop": 254, "realli": [254, 261], "nice": [254, 261], "supercomput": 254, "yet_another_channel": 254, "testgroup": 254, "vi": 254, "polaris_head": 254, "yetanotherchannel": 254, "instanc": 254, "repres": [254, 263, 267], "highli": 254, "camelcas": 254, "capit": 254, "letter": 254, "cap": 254, "awkward": 254, "encourag": 254, "enclos": 254, "briefli": 254, "globalconverg": 254, "add_test_group": 254, "interest": 254, "anyth": 254, "probabl": [254, 260], "suppos": 254, "easili": 254, "tide": 254, "analyz": 254, "sai": [254, 260], "still": [254, 264, 272, 273, 277], "ti": 254, "loop": 254, "4km": [254, 266, 273], "coarsest": [254, 255], "especi": 254, "anticip": 254, "promot": 254, "pattern": 254, "familiar": 254, "seen": 254, "brows": 254, "row": 254, "greater": 254, "disadvantag": 254, "foremost": 254, "magic": 254, "effect": [254, 272], "pain": 254, "160": [254, 266], "500": [254, 255, 263, 266], "path_to_mpas_ocean": 254, "path_to_working_dir": 254, "cat": 254, "slurm_jobid": 254, "_run_test": 254, "gpf": 254, "fs1": 254, "cbegeman": 254, "successfulli": 254, "x_cell": 254, "y_cell": 254, "grid_typ": [254, 255, 263, 266, 267, 269, 270, 271, 272], "coord_typ": [254, 263, 266, 267, 269, 270, 271, 272], "partial_cell_typ": [254, 263, 266, 267, 269, 270, 271, 272], "min_pc_fract": [254, 263, 266, 267, 269, 270, 271, 272], "everywher": 254, "depress": [254, 263], "x_min": 254, "x_max": 254, "y_min": 254, "y_max": 254, "y_mid": 254, "x_perturb_min": 254, "x_perturb_max": 254, "perturb_width": [254, 266], "y_offset": 254, "normal_veloc": 254, "attr": 254, "mostli": 254, "logic": [254, 266], "northern": [254, 266], "half": [254, 266], "southern": [254, 266], "halv": [254, 266], "gradient": [254, 266, 269, 270, 271], "08": [254, 266], "500km": [254, 266], "40e3": [254, 266], "35": [254, 266, 267, 271, 272, 273, 277], "2e": [254, 266], "initial_temperatur": 254, "initial_normal_veloc": 254, "connect": [254, 261], "match": 254, "light": 254, "fast": 254, "e3sm_compon": 254, "interact": [254, 257, 260, 261, 273], "interrupt": 254, "pty": 254, "navig": 254, "newli": 254, "bunch": 254, "didn": 254, "mistak": 254, "finger": 254, "cross": 254, "initial_normalveloc": 254, "initial_salin": 254, "btr_dt_per_km": [254, 266], "obvious": 254, "stress": [254, 271], "bring": 254, "landicemodelstep": 254, "huge": 254, "cp": 254, "config_dt": 254, "05": 254, "split_explicit_t": 254, "config_btr_dt": 254, "hmix_del2": 254, "bottom_drag": 254, "cvmix": 254, "0002": 254, "filename_interv": 254, "0100": 254, "input_interv": 254, "initial_onli": 254, "basicmesh": 254, "dayssincestart": 254, "surfacespe": 254, "lowersurfac": 254, "uppersurfac": 254, "ureconstructx": 254, "ureconstructi": 254, "great": 254, "remain": [254, 267, 271], "load_dataset": 254, "final_temperatur": 254, "ab": 254, "proc": 254, "area": 254, "4proc": [254, 266], "8proc": [254, 266], "markdown": 254, "users_guid": 254, "daunt": 254, "flesh": 254, "bonu": 254, "improv": 254, "introduc": 254, "techniqu": 254, "proport": [254, 263, 266, 267, 269, 270, 272, 277], "1384565": 254, "strftime": 254, "gmtime": 254, "run_second": 254, "aim": 254, "constrain_resourc": 254, "becam": 254, "mainten": 254, "counter": 254, "thought": 254, "yet_another_channel_test_cas": 254, "yetanotherchanneltestcas": 254, "choic": [254, 267], "spuriou": [254, 266], "dissip": [254, 266], "pop": [254, 266], "mom": [254, 266], "mitgcm": [254, 266], "higher": 254, "heavi": 254, "analogi": 254, "tet": 254, "bear": 254, "late": 254, "startswith": 254, "enumer": 254, "rpe_": 254, "_nu_": 254, "privat": 254, "break": [254, 266], "unusu": 254, "rpe_1_nu_1": [254, 266], "rpe_2_nu_5": [254, 266], "rpe_3_nu_10": 254, "rpe_4_nu_20": 254, "rpe_5_nu_200": 254, "20_00": 254, "0000": 254, "dayssincestartofsim": 254, "relativevort": 254, "pyplot": 254, "plt": 254, "output_": 254, "sections_yet_another_channel_": 254, "rpe_t": 254, "init_filenam": 254, "ds_init": 254, "_plot": 254, "dirti": 254, "adopt": 254, "lesson": 254, "tricki": 254, "commun": 254, "nuanc": 254, "fake": 254, "wasn": 254, "fold": 254, "proper": 254, "third": 254, "extens": 255, "multinod": [255, 273], "explanatori": 255, "my_machin": 255, "extend": 255, "gitconfig": 255, "enter": 255, "author": 255, "asai": 255, "davi": 255, "email": 255, "pull_request": 255, "28": 255, "address": 255, "metadata": 255, "customize_config_pars": 255, "server_base_url": 255, "inej": 255, "check_siz": 255, "ssl": 255, "certif": 255, "core_path": 255, "partition_execut": 255, "dask": 255, "netcdf4": 255, "netcdf4_class": 255, "netcdf3_64bit": 255, "netcdf3_class": 255, "engin": 255, "scipi": 255, "mesh_databas": 255, "ocean_database_root": 255, "landice_database_root": 255, "mesh_cor": 255, "mesh_min_cor": 255, "mesh_max_memori": 255, "mesh_max_disk": 255, "init_cor": 255, "init_min_cor": 255, "init_max_memori": 255, "init_max_disk": 255, "init_thread": 255, "forward_cor": 255, "forward_min_cor": 255, "forward_thread": 255, "forward_max_memori": 255, "forward_max_disk": 255, "add_metadata": 255, "ec": 255, "wc": 255, "mesh_descript": 255, "autodetect": 255, "bathy_descript": 255, "gebco": 255, "2022": 255, "bedmachin": 255, "antarctica": 255, "init_descript": 255, "e3sm_vers": 255, "increment": 255, "mesh_revis": 255, "finest": 255, "min_r": 255, "max_r": 255, "max_depth": 255, "creation_d": 255, "peopl": 255, "contact": 255, "temperaturemax": 255, "statist": 255, "temperature_max": 255, "33": [255, 273], "enable_ocean_initial_condit": 255, "enable_ocean_graph_partit": 255, "enable_seaice_initial_condit": 255, "scrip": 255, "enable_scrip": 255, "transect": 255, "onlin": 255, "member": 255, "offlin": 255, "enable_diagnostics_fil": 255, "coarser": [255, 267], "finer": 255, "comparisonlatresolut": 255, "comparisonlonresolut": 255, "antarct": 255, "polar": [255, 256, 258, 263], "stereograph": 255, "comparisonantarcticstereowidth": 255, "6000": [255, 263], "comparisonantarcticstereoresolut": 255, "arctic": [255, 276], "comparisonarcticstereowidth": 255, "comparisonarcticstereoresolut": 255, "tanh_dz": 255, "16": [255, 271, 273], "3000": 255, "min_layer_thick": [255, 263], "max_layer_thick": [255, 263], "retain": 255, "ecosystem": 256, "gain": 256, "confluenc": 256, "public_html": [256, 258, 260], "soft": [256, 258, 260, 273], "mpi_intel": [256, 258, 259, 260], "36": [256, 260, 271, 273], "condo": [256, 273], "acm": [256, 273], "medium": 256, "acme_high": 256, "load_latest_polaris_intel_impi": [256, 259], "load_latest_polaris_gnu_openmpi": [256, 258, 273], "dst": 257, "calendar": 257, "network": 257, "introduct": 257, "platform": 257, "batch": 257, "wtrw": 257, "ch": 257, "fe": 257, "lustr": 257, "scratch4": 257, "scratch5": 257, "sacctmgr": 257, "assoc": 257, "cluster": 257, "45": 257, "sshare": 257, "sreport": 257, "accountutilizationbyus": 257, "2019": 257, "02": 257, "yellow": 257, "chkhome": 257, "petabyt": 257, "df": 257, "bp": 257, "archiv": [257, 261], "hpss": [257, 261], "front": 257, "tn": 257, "storag": 257, "project_nam": 257, "salloc": [257, 260, 261], "account_nam": 257, "gpu": [257, 261], "hyperthread": [257, 261], "hang": [257, 261], "threads_per_cor": [257, 261], "shared_clim": [257, 273], "load_latest_polaris_gnu_mpich": [257, 261], "load_latest_polaris_intel_openmpi": 258, "compyf": 259, "app": [259, 273], "pmi2": 259, "40": 259, "submit": 260, "workload": 260, "squeue": 260, "my_usernam": [260, 261], "scancel": 260, "jobid": 260, "cancel": 260, "emtpi": 260, "three": [260, 279], "mpi_mpich": [260, 273], "mpi_openmpi": [260, 273], "nompi": [260, 273], "p1": 261, "nersc": 261, "iri": 261, "filesystem": 261, "myquota": 261, "prjquota": 261, "projectid": 261, "m1795": 261, "hsi": 261, "htar": 261, "zstash": 261, "cf": [261, 273], "cdir": [261, 273], "premium": 261, "cray_compil": 261, "8844": 261, "monik": 261, "browser": 261, "grab": 261, "logon": 261, "kernel": 261, "myenv": 261, "ipykernel": 261, "kernelspec": 261, "u1": 261, "interpret": 261, "argv": 261, "ipykernel_launch": 261, "connection_fil": 261, "display_nam": 261, "languag": 261, "2500": 263, "deepest": 263, "stewart": 263, "2017": 263, "z_2": 263, "z_1": 263, "mathrm": 263, "tanh": 263, "rightarrow": 263, "infti": 263, "z_k": 263, "z_0": 263, "z_": [263, 271], "k": 263, "finder": 263, "n_z": 263, "h_": 263, "scienc": 263, "hydrograph": 263, "climatologi": 263, "250": 263, "5500": 263, "renorm": 263, "51": 263, "221": 263, "ziso": [263, 279], "63": 263, "floor": 263, "flat": [263, 266], "collaps": 263, "adcroft": 263, "campin": 263, "2004": 263, "absenc": 263, "squash": 263, "watercolumn": 263, "press": 263, "batymetri": 263, "stair": 263, "month": 264, "websit": [264, 274], "release_6": 264, "ilicak": 266, "2012": 266, "variat": 266, "distinguish": 266, "zonal": [266, 271], "meridion": [266, 271], "psu": [266, 271], "cooler": 266, "north": 266, "sinusoid": 266, "perturb": [266, 267, 270], "t_0": 266, "t_b": 266, "t_": 266, "z_b": 266, "y_": 266, "l_x": 266, "warmer": 266, "ge": [266, 267], "gradient_width_fract": 266, "l_y": 266, "le": [266, 271], "flow": [266, 267], "stationari": [266, 271], "literatur": 266, "mk": 266, "celsiu": 266, "prognost": 266, "williamson": 267, "1992": 267, "sec": 267, "3a": 267, "skamarock": 267, "gassmann": 267, "bodi": 267, "rotat": [267, 269, 270], "transport": 267, "psi": 267, "proportion": 267, "icosohydr": 267, "nearest": 267, "insensit": [267, 271], "300": [267, 272], "passiv": 267, "psi_0": 267, "co": [267, 269, 270], "radiu": 267, "debug_tracers_1": 267, "equatori": 267, "u_0": 267, "tau": 267, "transit": 267, "equat": [267, 269, 270, 271], "vel_pd": 267, "tendenc": [267, 270], "multipli": 267, "rad": 267, "lat_cent": 267, "lon_cent": 267, "14159265": 267, "2123666": 267, "6667": 267, "hill": 267, "psi0": 267, "qu_conv_thresh": 267, "qu_conv_max": 267, "icos_conv_thresh": 267, "icos_conv_max": 267, "roughli": 267, "propag": [269, 270], "doubli": [269, 270], "assess": [269, 270], "numer": [269, 270], "accuraci": [269, 270], "discret": [269, 270], "bishnu": [269, 270], "friction": [269, 270], "neglect": [269, 270], "nonlinear": [269, 270], "analyt": [269, 279], "k_x": [269, 270], "k_y": [269, 270], "accord": [269, 270, 273], "availi": [269, 270], "10000": [269, 270], "coriloi": 269, "1e": 269, "amplitud": [269, 270], "ssh_amplitud": [269, 270], "wavelength": [269, 270], "n_wavelengths_x": [269, 270], "n_wavelengths_i": [269, 270], "conv_thresh": [269, 270], "conv_max": [269, 270], "embed": 270, "eta_0": 270, "span": 271, "arbitrarili": 271, "chosen": 271, "virtu": 271, "examin": 271, "400": 271, "phi": 271, "phi_0": 271, "dz": 271, "ml": 271, "mld": 271, "surface_x": 271, "x_gradient_mixed_lay": 271, "mixed_layer_depth_x": 271, "x_difference_across_mixed_lay": 271, "x_gradient_interior": 271, "spatial": 271, "degc": 271, "temperature_gradient_mixed_lay": 271, "temperature_difference_across_mixed_lay": 271, "temperature_gradient_interior": 271, "mixed_layer_depth_temperatur": 271, "surface_salin": 271, "salinity_gradient_mixed_lay": 271, "salinity_difference_across_mixed_lay": 271, "salinity_gradient_interior": 271, "mixed_layer_depth_salin": 271, "scheme": 271, "dictat": 271, "kpp": 271, "restor": 271, "piston": 271, "toward": 271, "temperature_surface_restoring_valu": 271, "temperature_piston_veloc": 271, "salinity_surface_restoring_valu": 271, "salinity_piston_veloc": 271, "temperature_interior_restoring_r": 271, "salinity_interior_restoring_r": 271, "net": 271, "latent": 271, "heat": 271, "bulk": 271, "latent_heat_flux": 271, "sensibl": 271, "sensible_heat_flux": 271, "solar": 271, "shortwav": 271, "shortwave_heat_flux": 271, "evapor": 271, "evaporation_flux": 271, "5e": 271, "rain": 271, "rain_flux": 271, "wind": 271, "wind_stress_zon": 271, "wind_stress_meridion": 271, "welcom": [272, 277], "icosohedr": [272, 277], "pertain": [272, 277], "inher": 272, "warrant": 272, "investig": 272, "load_latest_polari": 273, "minu": 273, "create_polaris_load_script": 273, "load_polaris_1": 273, "0_mpich": 273, "exclud": 273, "wiki": 273, "circular_shelf": 273, "sia_smoke_test": 273, "sia_decomposition_test": 273, "sia_restart_test": 273, "fo_smoke_test": 273, "fo_decomposition_test": 273, "fo_restart_test": 273, "37": 273, "38": 273, "17": 273, "210131_test_new_branch": 273, "my_config": 273, "smaller": 273, "previous_workdir": 273, "paper": 273, "recompil": 273, "safer": 273, "preserv": 273, "test_subdir": 273, "whatev": 273, "clock": 273, "j": 273, "exclus": 273, "job_nam": 273, "fo_integr": 273, "sia_integr": 273, "cosine_bell_cached_init": [273, 278], "ec30to60": 273, "ecwisc30to60": 273, "qu240_for_e3sm": 273, "quwisc240_for_e3sm": 273, "wc14": 273, "suitenam": 273, "seaice_standalone_framework": 274, "71": 276, "35n": 276, "156": 276, "5w": 276, "atmospher": 276, "timeseri": 276, "pair": 276, "prohibit": 278, "speed": 278, "radial": 279}, "objects": {"polaris": [[18, 0, 1, "", "Component"], [20, 0, 1, "", "ModelStep"], [33, 0, 1, "", "Step"], [42, 0, 1, "", "Task"]], "polaris.Component": [[18, 1, 1, "", "__init__"], [19, 1, 1, "", "add_task"]], "polaris.ModelStep": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_model_config_options"], [22, 1, 1, "", "add_namelist_file"], [23, 1, 1, "", "add_streams_file"], [24, 1, 1, "", "add_yaml_file"], [25, 1, 1, "", "dynamic_model_config"], [26, 1, 1, "", "map_yaml_to_namelist"], [27, 1, 1, "", "partition"], [28, 1, 1, "", "process_inputs_and_outputs"], [29, 1, 1, "", "runtime_setup"], [30, 1, 1, "", "set_model_resources"], [31, 1, 1, "", "setup"], [32, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[33, 1, 1, "", "__init__"], [34, 1, 1, "", "add_dependency"], [35, 1, 1, "", "add_input_file"], [36, 1, 1, "", "add_output_file"], [37, 1, 1, "", "constrain_resources"], [38, 1, 1, "", "run"], [39, 1, 1, "", "runtime_setup"], [40, 1, 1, "", "set_resources"], [41, 1, 1, "", "setup"]], "polaris.Task": [[42, 1, 1, "", "__init__"], [43, 1, 1, "", "add_step"], [44, 1, 1, "", "configure"]], "polaris.__main__": [[45, 2, 1, "", "main"]], "polaris.cache": [[46, 2, 1, "", "update_cache"]], "polaris.components": [[47, 2, 1, "", "get_components"]], "polaris.config": [[48, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[48, 1, 1, "", "__init__"]], "polaris.io": [[49, 2, 1, "", "download"], [50, 3, 0, "-", "imp_res"], [51, 2, 1, "", "symlink"]], "polaris.job": [[52, 2, 1, "", "get_slurm_options"], [53, 2, 1, "", "write_job_script"]], "polaris.list": [[54, 2, 1, "", "list_cases"], [55, 2, 1, "", "list_machines"], [56, 2, 1, "", "list_suites"]], "polaris.logging": [[57, 2, 1, "", "log_method_call"]], "polaris.mesh": [[58, 0, 1, "", "IcosahedralMeshStep"], [65, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [60, 1, 1, "", "get_cell_width"], [61, 1, 1, "", "get_subdivisions"], [62, 1, 1, "", "make_jigsaw_mesh"], [63, 1, 1, "", "run"], [64, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, 1, 1, "", "__init__"], [66, 1, 1, "", "build_cell_width_lat_lon"], [67, 1, 1, "", "make_jigsaw_mesh"], [68, 1, 1, "", "run"], [69, 1, 1, "", "setup"]], "polaris.mesh.planar": [[70, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[71, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "run"], [73, 1, 1, "", "save_and_plot_cell_width"], [74, 1, 1, "", "setup"]], "polaris.model_step": [[75, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[76, 2, 1, "", "ingest"], [77, 2, 1, "", "parse_replacements"], [78, 2, 1, "", "replace"], [79, 2, 1, "", "write"]], "polaris.ocean": [[126, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[126, 1, 1, "", "__init__"]], "polaris.ocean.model": [[127, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "compute_cell_count"], [129, 1, 1, "", "constrain_resources"], [130, 1, 1, "", "map_yaml_to_namelist"], [131, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[132, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[133, 0, 1, "", "BaroclinicChannelTestCase"], [134, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase": [[133, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[135, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[135, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[136, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[136, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[137, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "compute_cell_count"], [139, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[140, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "run"], [142, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[143, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[143, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[144, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[144, 1, 1, "", "__init__"], [145, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[146, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[148, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "run"], [150, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[151, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[151, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[152, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[154, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence": [[156, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.global_convergence.cosine_bell": [[157, 0, 1, "", "CosineBell"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell": [[157, 1, 1, "", "__init__"], [158, 1, 1, "", "configure"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis": [[159, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis": [[159, 1, 1, "", "__init__"], [160, 1, 1, "", "rmse"], [161, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward": [[162, 0, 1, "", "Forward"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "compute_cell_count"], [164, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init": [[165, 0, 1, "", "Init"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz": [[167, 0, 1, "", "Viz"], [169, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[171, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[172, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence": [[174, 0, 1, "", "Convergence"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence": [[174, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[175, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "normal_velocity"], [177, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[178, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[178, 1, 1, "", "__init__"], [179, 1, 1, "", "compute_cell_count"], [180, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[181, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[183, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[185, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[186, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.convergence": [[188, 0, 1, "", "Convergence"]], "polaris.ocean.tasks.manufactured_solution.convergence.Convergence": [[188, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[189, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "normal_velocity"], [191, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[192, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "compute_cell_count"], [194, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[195, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[197, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[199, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[200, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[200, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[201, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[201, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[202, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[202, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[203, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[203, 1, 1, "", "__init__"], [204, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[205, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[207, 2, 1, "", "generate_1d_grid"], [208, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[209, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[210, 2, 1, "", "alter_bottom_depth"], [211, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[212, 2, 1, "", "compute_min_max_level_cell"], [213, 2, 1, "", "compute_z_level_layer_thickness"], [214, 2, 1, "", "compute_z_level_resting_thickness"], [215, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[216, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[80, 2, 1, "", "get_available_parallel_resources"], [81, 2, 1, "", "get_parallel_command"], [82, 2, 1, "", "run_command"], [83, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[84, 2, 1, "", "write"]], "polaris.remap": [[85, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "dst_from_lon_lat"], [87, 1, 1, "", "dst_from_mpas"], [88, 1, 1, "", "dst_from_points"], [89, 1, 1, "", "dst_from_proj"], [90, 1, 1, "", "dst_global_lon_lat"], [91, 1, 1, "", "get_remapper"], [92, 1, 1, "", "runtime_setup"], [93, 1, 1, "", "src_from_lon_lat"], [94, 1, 1, "", "src_from_mpas"], [95, 1, 1, "", "src_from_proj"]], "polaris.run": [[96, 2, 1, "", "load_dependencies"], [99, 2, 1, "", "setup_config"], [100, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[97, 2, 1, "", "run_single_step"], [98, 2, 1, "", "run_tasks"]], "polaris.seaice": [[237, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[237, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[238, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[239, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[239, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[240, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[240, 1, 1, "", "__init__"], [241, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[242, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[242, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[243, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[243, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[244, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[244, 1, 1, "", "__init__"], [245, 1, 1, "", "run"]], "polaris.setup": [[101, 2, 1, "", "setup_task"], [102, 2, 1, "", "setup_tasks"]], "polaris.streams": [[103, 2, 1, "", "read"], [104, 2, 1, "", "update_defaults"], [105, 2, 1, "", "update_tree"], [106, 2, 1, "", "write"]], "polaris.suite": [[107, 2, 1, "", "setup_suite"]], "polaris.validate": [[108, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[109, 2, 1, "", "plot_global"]], "polaris.viz": [[110, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[111, 0, 1, "", "PolarisYaml"], [115, 2, 1, "", "main_mpas_to_yaml"], [116, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [117, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "read"], [113, 1, 1, "", "update"], [114, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 6, 254], "templat": [1, 13], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 5, 13, 125, 234, 236, 254, 256, 257, 258, 259, 260, 261, 266, 267, 269, 270, 271, 272, 276, 277], "same": 1, "implement": 1, "test": [1, 5, 254, 255, 276], "valid": [1, 2, 16, 108, 152, 153, 240, 241, 254, 273], "api": 2, "refer": [2, 124, 125], "compon": [2, 13, 18, 19, 47, 125, 217, 227, 233, 234, 236, 246, 264, 273, 274], "polari": [2, 4, 5, 7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 230, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 253, 273], "framework": [2, 9, 124, 125, 220, 223, 224, 225, 233, 236, 250, 262], "command": [2, 4, 7], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 7, 54, 55, 56], "setup": [2, 4, 7, 31, 41, 64, 69, 74, 101, 102, 131, 142, 150, 230], "suit": [2, 4, 7, 107, 231, 265, 273, 278], "run": [2, 7, 13, 38, 63, 68, 72, 96, 97, 98, 99, 100, 125, 141, 149, 153, 155, 161, 166, 168, 170, 173, 182, 184, 187, 196, 198, 204, 206, 230, 234, 236, 241, 245, 266, 267, 269, 270, 271, 272, 273, 276, 277], "cach": [2, 4, 7, 46, 230], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 233], "task": [2, 42, 43, 44, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 222, 226, 229, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 249, 254, 268, 272, 273, 275, 277, 279], "step": [2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 230, 254, 266, 267, 269, 270, 271, 272, 277], "modelstep": [2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "config": [2, 5, 8, 13, 48, 122, 125, 236, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 269, 270, 271, 272, 276, 277], "io": [2, 10, 49, 50, 51], "job": [2, 52, 53, 260, 273], "log": [2, 11, 57], "mesh": [2, 12, 13, 17, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 221, 254, 266, 267, 269, 270, 271, 272, 276, 277], "model_step": [2, 75], "namelist": [2, 13, 76, 77, 78, 79, 125], "parallel": [2, 80, 81, 82, 83], "proven": [2, 14, 84], "remap": [2, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "stream": [2, 13, 103, 104, 105, 106, 125, 236, 254], "viz": [2, 109, 110, 154, 155, 167, 168, 169, 170, 183, 184, 197, 198, 205, 206, 221, 223, 224, 225, 244, 245, 250, 254], "yaml": [2, 13, 111, 112, 113, 114, 115, 116, 117, 125], "build": [3, 122, 234, 273], "serial": [4, 7, 97, 98], "deploi": 5, "new": [5, 122, 254], "spack": [5, 122, 234, 273], "environ": [5, 122, 234, 251, 273], "where": 5, "do": 5, "we": 5, "updat": [5, 13, 113, 234], "depend": [5, 230], "mach": 5, "conda": [5, 234, 251, 260, 273], "identifi": 5, "e3sm": [5, 13, 125, 234, 236, 273], "machin": [5, 122, 234, 260, 273], "describ": [5, 122], "modul": [5, 7, 233, 234], "env": 5, "variabl": [5, 16], "etc": 5, "creat": [5, 234, 254], "from": [5, 17, 125, 230, 234, 260], "remot": [5, 261], "branch": 5, "petsc": [5, 234], "netlib": [5, 234], "lapack": [5, 234], "albani": [5, 234], "troubleshoot": [5, 234, 251], "mpa": [5, 125, 219, 248], "ocean": [5, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 264], "without": 5, "mali": 5, "share": [5, 233, 254], "docstr": 6, "clean": 7, "file": [8, 13, 122, 125, 230, 254, 255], "comment": 8, "symlink": [10, 51, 230], "download": [10, 49, 230], "spheric": [12, 17, 71, 72, 73, 74], "planar": [12, 17, 70], "uniform": [12, 263], "gener": 12, "model": [13, 125, 127, 128, 129, 130, 131, 218, 236, 247, 254, 273], "an": [13, 125, 236, 254], "ad": [13, 122, 230, 254], "runtim": 13, "input": [13, 230], "partit": [13, 27], "pio": 13, "make": [13, 254], "graph": 13, "against": 16, "baselin": 16, "norm": 16, "visual": [17, 254, 276], "horizont": [17, 254], "field": 17, "global": 17, "lat": 17, "lon": 17, "plot": [17, 254], "add_task": 19, "add_model_config_opt": 21, "add_namelist_fil": 22, "add_streams_fil": 23, "add_yaml_fil": 24, "dynamic_model_config": [25, 139, 145, 164, 180, 194], "map_yaml_to_namelist": [26, 130], "process_inputs_and_output": 28, "runtime_setup": [29, 39, 92, 230], "set_model_resourc": 30, "update_namelist_pio": 32, "add_depend": 34, "add_input_fil": 35, "add_output_fil": 36, "constrain_resourc": [37, 129, 230], "set_resourc": 40, "add_step": 43, "configur": [44, 147, 158, 232, 251], "__main__": 45, "main": 45, "update_cach": 46, "get_compon": 47, "polarisconfigpars": 48, "imp_r": 50, "get_slurm_opt": 52, "write_job_script": 53, "list_cas": 54, "list_machin": 55, "list_suit": 56, "log_method_cal": 57, "icosahedralmeshstep": [58, 59, 60, 61, 62, 63, 64], "build_subdivisions_cell_width_lat_lon": 59, "get_cell_width": 60, "get_subdivis": 61, "make_jigsaw_mesh": [62, 67], "quasiuniformsphericalmeshstep": [65, 66, 67, 68, 69], "build_cell_width_lat_lon": 66, "compute_planar_hex_nx_ni": 70, "sphericalbasestep": [71, 72, 73, 74], "save_and_plot_cell_width": 73, "make_graph_fil": 75, "ingest": 76, "parse_replac": 77, "replac": 78, "write": [79, 84, 106, 114], "get_available_parallel_resourc": 80, "get_parallel_command": 81, "run_command": 82, "set_cores_per_nod": 83, "mappingfilestep": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "dst_from_lon_lat": 86, "dst_from_mpa": 87, "dst_from_point": 88, "dst_from_proj": 89, "dst_global_lon_lat": 90, "get_remapp": 91, "src_from_lon_lat": 93, "src_from_mpa": 94, "src_from_proj": 95, "load_depend": 96, "run_single_step": 97, "run_task": 98, "setup_config": 99, "unpickle_suit": 100, "setup_task": [101, 102], "read": [103, 112], "update_default": 104, "update_tre": 105, "setup_suit": 107, "compare_vari": 108, "globe": 109, "plot_glob": 109, "plot_horiz_field": 110, "polarisyaml": [111, 112, 113, 114], "main_mpas_to_yaml": 115, "mpas_namelist_and_streams_to_yaml": 116, "yaml_to_mpas_stream": 117, "anvil": [118, 256], "intel": [118, 120, 121, 256, 258, 259], "gnu": [118, 119, 120, 121, 123, 256, 257, 258, 261], "chicoma": [119, 257], "cpu": [119, 123, 257, 261], "chrysali": [120, 258], "compymcnodefac": [121, 259], "support": [122, 218, 234, 247, 260, 273], "other": [122, 230, 254, 260, 273], "perlmutt": [123, 261], "pm": 123, "baroclinic_channel": [124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 220], "inertial_gravity_wav": [124, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 223], "global_converg": [124, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 221, 267], "cosine_bel": [124, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 221, 265, 267], "manufactured_solut": [124, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 224, 270], "single_column": [124, 199, 200, 201, 202, 203, 204, 205, 206, 225, 235, 238, 239, 240, 241, 242, 243, 244, 245, 250, 271, 276], "oceanmodelstep": [124, 127, 128, 129, 130, 131], "potenti": [124, 125], "energi": [124, 125], "rpe": [124, 125, 132, 146, 147, 148, 149, 150, 220, 266], "vertic": [124, 125, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 254, 263, 266, 267, 269, 270, 271, 272], "coordin": [124, 125, 254, 263], "v": 125, "map": 125, "omega": 125, "set": [125, 234, 236, 273], "mpi": [125, 236, 260], "resourc": [125, 236], "rest": 125, "compute_cell_count": [128, 138, 163, 179, 193], "compute_rp": 132, "baroclinicchanneltestcas": 133, "add_baroclinic_channel_task": 134, "decomp": [135, 220, 266], "default": [136, 220, 254, 266], "forward": [137, 138, 139, 162, 163, 164, 178, 179, 180, 192, 193, 194, 201, 220, 221, 223, 224, 225, 242, 250, 254], "init": [140, 141, 142, 165, 166, 181, 182, 195, 196, 203, 204, 220, 221, 223, 224, 225, 254], "restart": [143, 144, 145, 220, 266, 276], "restart_step": [144, 145], "restartstep": [144, 145], "analysi": [148, 149, 150, 159, 160, 161, 172, 173, 186, 187, 221, 223, 224, 254], "thread": [151, 220, 266], "add_cosine_bell_task": 156, "cosinebel": [157, 158], "rmse": 160, "vizmap": [169, 170], "add_inertial_gravity_wave_task": 171, "converg": [174, 188, 223, 224, 269, 270], "exact_solut": [175, 176, 177, 189, 190, 191, 223, 224], "exactsolut": [175, 176, 177, 189, 190, 191], "normal_veloc": [176, 190], "ssh": [177, 191], "add_manufactured_solution_task": 185, "add_single_column_task": [199, 238], "cvmix": [200, 225, 271], "ideal_ag": 202, "idealag": 202, "grid_1d": [207, 208], "generate_1d_grid": 207, "write_1d_grid": 208, "init_vertical_coord": 209, "partial_cel": [210, 211], "alter_bottom_depth": 210, "alter_ssh": 211, "zlevel": [212, 213, 214, 215], "compute_min_max_level_cel": 212, "compute_z_level_layer_thick": 213, "compute_z_level_resting_thick": 214, "init_z_level_vertical_coord": 215, "zstar": 216, "init_z_star_vertical_coord": 216, "initi": [219, 248, 254, 266, 267, 269, 270, 271, 272, 276, 277], "condit": [219, 248, 254, 266, 267, 269, 270, 271, 272, 276, 277], "boundari": 219, "forc": [219, 248, 266, 267, 269, 270, 271, 272, 276, 277], "baroclinic_channel_test_cas": 220, "type": [221, 263], "ideal": [225, 271], "ag": [225, 271], "categori": [226, 272, 277], "directori": 228, "structur": 228, "organ": 229, "attribut": [230, 232], "constructor": [230, 232], "output": [230, 254], "copi": 230, "pull": 231, "request": 231, "pr": 231, "nightli": 231, "overview": 233, "code": [233, 234, 254], "style": [233, 234], "packag": 233, "within": 233, "group": [233, 254], "relat": 233, "quick": [234, 273], "start": [234, 254, 273], "develop": [234, 253, 254], "unix": 234, "shell": 234, "up": [234, 273], "repositori": 234, "beginn": 234, "compil": 234, "system": 234, "unknown": 234, "what": 234, "script": [234, 273], "doe": 234, "flag": 234, "activ": 234, "switch": 234, "between": [234, 254], "differ": 234, "onli": 234, "repo": 234, "worktre": 234, "advanc": 234, "user": [234, 253, 255, 273], "seaic": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248], "exact_restart": [239, 240, 241], "exactrestart": 239, "standard_phys": [243, 244, 245], "standardphys": 243, "standard_physics_test": 250, "exact_restart_test": 250, "solver": 251, "error": 251, "when": 251, "proxi": 251, "lanl": 251, "mac": 251, "gethostbynam": 251, "fail": 251, "glossari": [252, 253], "": 253, "guid": 253, "tutori": [253, 254], "compass": 253, "get": 254, "vari": 254, "resolut": 254, "paramet": 254, "thing": 254, "out": 254, "defin": 254, "more": 254, "again": 254, "one": 254, "time": [254, 266, 267, 269, 270, 271, 272, 277], "second": 254, "enhanc": 254, "dynam": 254, "comput": 254, "cell": 254, "count": 254, "superclass": 254, "studi": 254, "how": 254, "pass": 254, "data": [254, 261], "A": 255, "case": 255, "slurm": 260, "queue": 260, "mpich": 260, "openmpi": 260, "No": 260, "forg": 260, "jupyt": 261, "notebook": 261, "1d": 263, "grid": [263, 266, 267, 269, 270, 271, 272], "tanh_dz": 263, "60layerphc": 263, "100layere3smv1": 263, "3d": 263, "z": 263, "star": 263, "level": 263, "cosine_bell_cached_init": 265, "baroclin": 266, "channel": 266, "descript": [266, 267, 269, 270, 271, 272, 276, 277], "durat": [266, 267, 269, 270, 271, 272, 276, 277], "core": [266, 267, 269, 270, 271, 272, 276, 277], "cosine_bell_with_viz": 267, "inerti": 269, "graviti": 269, "wave": 269, "task_nam": [272, 277], "i": 273, "yet": 273, "load": 273, "standalon": 273, "sea": 274, "ic": 274, "standard": 276, "physic": 276, "timestep": 276, "exact": 276}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [227, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "Task": [[2, "task"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [221, "mesh"], [266, "mesh"], [266, "id2"], [266, "id9"], [266, "id17"], [266, "id25"], [266, "id32"], [267, "mesh"], [269, "mesh"], [270, "mesh"], [271, "mesh"], [271, "id3"], [271, "id8"], [272, "mesh"], [276, "mesh"], [276, "id1"], [276, "id6"], [277, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [221, "viz"], [223, "viz"], [224, "viz"], [225, "viz"], [250, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Deploying a new spack environment": [[5, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[5, "where-do-we-update-polaris-dependencies"]], "Mache": [[5, "mache"], [5, "id1"]], "Spack": [[5, "spack"]], "Conda": [[5, "conda"]], "Identifying E3SM machines": [[5, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[5, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[5, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[5, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[5, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[5, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[5, "testing-spack-with-albany"]], "Troubleshooting spack": [[5, "troubleshooting-spack"]], "Testing polaris": [[5, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[5, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[5, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[5, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[5, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[5, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[5, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[5, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[6, "documentation"], [254, "documentation"]], "Docstrings": [[6, "docstrings"]], "Modules for polaris commands": [[7, "modules-for-polaris-commands"]], "list module": [[7, "list-module"]], "setup module": [[7, "setup-module"]], "clean module": [[7, "clean-module"]], "suite module": [[7, "suite-module"]], "run.serial module": [[7, "run-serial-module"]], "cache module": [[7, "cache-module"]], "Config files": [[8, "config-files"]], "Comments in config files": [[8, "comments-in-config-files"]], "Framework": [[9, "framework"], [262, "framework"]], "IO": [[10, "io"]], "Symlinks": [[10, "symlinks"]], "Download": [[10, "download"]], "Logging": [[11, "logging"]], "Mesh": [[12, "mesh"]], "Spherical Meshes": [[12, "spherical-meshes"]], "Planar Meshes": [[12, "planar-meshes"]], "Uniform planar meshes": [[12, "uniform-planar-meshes"]], "General planar meshes": [[12, "general-planar-meshes"]], "Model": [[13, "model"], [125, "model"], [236, "model"]], "Running an E3SM component": [[13, "running-an-e3sm-component"], [125, "running-an-e3sm-component"], [236, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[13, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[13, "adding-a-yaml-file"]], "Adding a namelist file": [[13, "adding-a-namelist-file"]], "Adding model config options": [[13, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[13, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[13, "adding-a-streams-file"]], "Adding a template streams file": [[13, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[13, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[13, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[13, "partitioning-the-mesh"]], "Updating PIO namelist options": [[13, "updating-pio-namelist-options"]], "Making a graph file": [[13, "making-a-graph-file"]], "Provenance": [[14, "provenance"]], "Remapping": [[15, "remapping"]], "Validation": [[16, "validation"]], "Validating variables against a baseline": [[16, "validating-variables-against-a-baseline"]], "Validating variables": [[16, "validating-variables"]], "Norms": [[16, "norms"]], "Visualization": [[17, "visualization"]], "horizontal fields from planar meshes": [[17, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[17, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[18, "polaris-component"]], "polaris.Component.add_task": [[19, "polaris-component-add-task"]], "polaris.ModelStep": [[20, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[21, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[22, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[23, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[24, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[25, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[26, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[27, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[28, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[29, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[30, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[31, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[32, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[33, "polaris-step"]], "polaris.Step.add_dependency": [[34, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[35, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[36, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[37, "polaris-step-constrain-resources"]], "polaris.Step.run": [[38, "polaris-step-run"]], "polaris.Step.runtime_setup": [[39, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[40, "polaris-step-set-resources"]], "polaris.Step.setup": [[41, "polaris-step-setup"]], "polaris.Task": [[42, "polaris-task"]], "polaris.Task.add_step": [[43, "polaris-task-add-step"]], "polaris.Task.configure": [[44, "polaris-task-configure"]], "polaris.__main__.main": [[45, "polaris-main-main"]], "polaris.cache.update_cache": [[46, "polaris-cache-update-cache"]], "polaris.components.get_components": [[47, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[48, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[49, "polaris-io-download"]], "polaris.io.imp_res": [[50, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[51, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[52, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[53, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[54, "polaris-list-list-cases"]], "polaris.list.list_machines": [[55, "polaris-list-list-machines"]], "polaris.list.list_suites": [[56, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[57, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[58, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[59, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[60, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[61, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[62, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[63, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[64, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[70, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[72, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[73, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[74, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[75, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[76, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[77, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[78, "polaris-namelist-replace"]], "polaris.namelist.write": [[79, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[80, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[81, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[82, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[83, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[84, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[85, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[86, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[87, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[88, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[89, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[90, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[91, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[92, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[93, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[94, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[95, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.load_dependencies": [[96, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[97, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[98, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[99, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[100, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[101, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[102, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[103, "polaris-streams-read"]], "polaris.streams.update_defaults": [[104, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[105, "polaris-streams-update-tree"]], "polaris.streams.write": [[106, "polaris-streams-write"]], "polaris.suite.setup_suite": [[107, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[108, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[109, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[110, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[111, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[112, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[113, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[114, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[115, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[116, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[117, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[118, "anvil"], [256, "anvil"]], "intel": [[118, "intel"], [120, "intel"], [121, "intel"]], "gnu": [[118, "gnu"], [120, "gnu"], [121, "gnu"]], "Chicoma": [[119, "chicoma"], [257, "chicoma"]], "chicoma-cpu, gnu": [[119, "chicoma-cpu-gnu"]], "Chrysalis": [[120, "chrysalis"], [258, "chrysalis"]], "CompyMcNodeFace": [[121, "compymcnodeface"], [259, "compymcnodeface"]], "Machines": [[122, "machines"], [260, "machines"]], "Supported Machines": [[122, "supported-machines"], [260, "supported-machines"]], "Other Machines": [[122, "other-machines"], [260, "other-machines"]], "Adding a New Supported Machine": [[122, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[122, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[122, "describing-a-spack-environment"]], "Building the Spack Environment": [[122, "building-the-spack-environment"]], "Perlmutter": [[123, "perlmutter"], [261, "perlmutter"]], "pm-cpu, gnu": [[123, "pm-cpu-gnu"]], "ocean": [[124, "ocean"]], "Tasks": [[124, "tasks"], [222, "tasks"], [232, "tasks"], [235, "tasks"], [249, "tasks"], [268, "tasks"], [275, "tasks"], [279, "tasks"]], "baroclinic_channel": [[124, "baroclinic-channel"], [220, "baroclinic-channel"]], "inertial_gravity_wave": [[124, "inertial-gravity-wave"], [223, "inertial-gravity-wave"]], "global_convergence": [[124, "global-convergence"], [221, "global-convergence"], [267, "global-convergence"]], "cosine_bell": [[124, "cosine-bell"], [221, "cosine-bell"]], "manufactured_solution": [[124, "manufactured-solution"], [224, "manufactured-solution"], [270, "manufactured-solution"]], "single_column": [[124, "single-column"], [225, "single-column"], [235, "single-column"], [250, "single-column"], [271, "single-column"], [276, "single-column"]], "Ocean Framework": [[124, "ocean-framework"]], "OceanModelStep": [[124, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[124, "reference-potential-energy-rpe"]], "Vertical coordinates": [[124, "vertical-coordinates"]], "Ocean framework": [[125, "ocean-framework"]], "YAML files vs. namelists and streams": [[125, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[125, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[125, "setting-mpi-resources"], [236, "setting-mpi-resources"]], "Model config options and streams": [[125, "model-config-options-and-streams"], [236, "model-config-options-and-streams"]], "Vertical coordinate": [[125, "vertical-coordinate"], [263, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[125, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[126, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[127, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[128, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[129, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[130, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[131, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[132, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase": [[133, "polaris-ocean-tasks-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[134, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[135, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[136, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[137, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[138, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[139, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[140, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[141, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[142, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[143, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[144, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[145, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[146, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[147, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[148, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[149, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[150, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[151, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[152, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[153, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[154, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[155, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks": [[156, "polaris-ocean-tasks-global-convergence-add-cosine-bell-tasks"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell": [[157, "polaris-ocean-tasks-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure": [[158, "polaris-ocean-tasks-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis": [[159, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse": [[160, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run": [[161, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward": [[162, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[163, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[164, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init": [[165, "polaris-ocean-tasks-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run": [[166, "polaris-ocean-tasks-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz": [[167, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run": [[168, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap": [[169, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run": [[170, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[171, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[172, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[173, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence": [[174, "polaris-ocean-tasks-inertial-gravity-wave-convergence-convergence"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[175, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[176, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[177, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[178, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[179, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[180, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[181, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[182, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[183, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[184, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[185, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[186, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[187, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.convergence.Convergence": [[188, "polaris-ocean-tasks-manufactured-solution-convergence-convergence"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[189, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[190, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[191, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[192, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[193, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[194, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[195, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[196, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[197, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[198, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[199, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[200, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[201, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[202, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[203, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[204, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[205, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[206, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[207, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[208, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[209, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[210, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[211, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[212, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[213, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[214, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[215, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[216, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[217, "ocean-component"], [264, "ocean-component"]], "Models": [[218, "models"], [247, "models"]], "Supported Models": [[218, "supported-models"], [247, "supported-models"]], "MPAS-Ocean": [[219, "mpas-ocean"]], "Initial conditions": [[219, "initial-conditions"], [248, "initial-conditions"]], "Boundary conditions": [[219, "boundary-conditions"]], "Forcing": [[219, "forcing"], [248, "forcing"]], "framework": [[220, "framework"], [223, "framework"], [224, "framework"], [225, "framework"], [250, "framework"]], "baroclinic_channel_test_case": [[220, "baroclinic-channel-test-case"]], "init": [[220, "init"], [221, "init"], [223, "init"], [224, "init"], [225, "init"]], "forward": [[220, "forward"], [221, "forward"], [223, "forward"], [224, "forward"], [225, "forward"], [250, "forward"]], "default": [[220, "default"], [266, "default"]], "decomp": [[220, "decomp"], [266, "decomp"]], "restart": [[220, "restart"], [266, "restart"]], "threads": [[220, "threads"]], "rpe": [[220, "rpe"], [266, "rpe"]], "mesh types": [[221, "mesh-types"]], "analysis": [[221, "analysis"], [223, "analysis"], [224, "analysis"]], "exact_solution": [[223, "exact-solution"], [224, "exact-solution"]], "convergence": [[223, "convergence"], [224, "convergence"], [269, "convergence"], [270, "convergence"]], "cvmix": [[225, "cvmix"], [271, "cvmix"]], "ideal age": [[225, "ideal-age"], [271, "ocean-single-column-ideal-age"]], "Categories of tasks": [[226, "categories-of-tasks"]], "Directory structure": [[228, "directory-structure"]], "Organization of Tasks": [[229, "organization-of-tasks"]], "Steps": [[230, "steps"]], "Step attributes": [[230, "step-attributes"]], "constructor": [[230, "constructor"], [232, "constructor"]], "constrain_resources()": [[230, "constrain-resources"]], "setup()": [[230, "setup"]], "runtime_setup()": [[230, "runtime-setup"]], "run()": [[230, "run"]], "inputs and outputs": [[230, "inputs-and-outputs"]], "Input files": [[230, "input-files"]], "Symlinks to input files": [[230, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[230, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[230, "downloading-and-symlinking-input-files"]], "Copying input files": [[230, "copying-input-files"]], "Output files": [[230, "output-files"]], "Cached output files": [[230, "cached-output-files"]], "Adding other steps as dependencies": [[230, "adding-other-steps-as-dependencies"]], "Suites": [[231, "suites"], [265, "suites"], [273, "suites"], [278, "suites"]], "Pull-Request (PR) suite": [[231, "pull-request-pr-suite"]], "Nightly suite": [[231, "nightly-suite"]], "Task attributes": [[232, "task-attributes"]], "configure()": [[232, "configure"]], "Overview": [[233, "overview"]], "Code Style": [[233, "code-style"]], "Packages and Modules": [[233, "packages-and-modules"]], "Packages": [[233, "packages"]], "Modules": [[233, "modules"]], "Classes": [[233, "classes"]], "Code sharing": [[233, "code-sharing"]], "\u2026in the polaris framework": [[233, "in-the-polaris-framework"]], "\u2026within a component": [[233, "within-a-component"]], "\u2026within a group of related tasks": [[233, "within-a-group-of-related-tasks"]], "\u2026within a task": [[233, "within-a-task"]], "Quick Start for Developers": [[234, "quick-start-for-developers"]], "Unix Shell": [[234, "unix-shell"]], "Set up a polaris repository: for beginners": [[234, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[234, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[234, "supported-machines"]], "Environments with Albany": [[234, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[234, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[234, "unknown-machines"]], "What the script does": [[234, "what-the-script-does"]], "Optional flags": [[234, "optional-flags"]], "Activating the environment": [[234, "activating-the-environment"]], "Switching between different polaris environments": [[234, "switching-between-different-polaris-environments"]], "Troubleshooting": [[234, "troubleshooting"], [251, "troubleshooting"]], "Creating/updating only the polaris environment": [[234, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[234, "building-e3sm-components"]], "Running polaris from the repo": [[234, "running-polaris-from-the-repo"]], "Code style for polaris": [[234, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[234, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[235, "seaice"]], "Seaice framework": [[236, "seaice-framework"]], "polaris.seaice.SeaIce": [[237, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[238, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[239, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[240, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[241, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[242, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[243, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[244, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[245, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "Seaice component": [[246, "seaice-component"]], "MPAS-Seaice": [[248, "mpas-seaice"]], "standard_physics_test": [[250, "standard-physics-test"]], "exact_restart_test": [[250, "exact-restart-test"]], "Solver errors when configuring conda environment": [[251, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[251, "proxy-on-lanl-macs"]], "gethostbyname failed": [[251, "gethostbyname-failed"]], "Glossary": [[252, "glossary"], [253, null]], "Polaris": [[253, "polaris"]], "User's guide": [[253, null]], "Developer's guide": [[253, null]], "Tutorials": [[253, null]], "Compass": [[253, "compass"]], "Developer Tutorial: Adding a new test group": [[254, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[254, "getting-started"]], "Making a new test group": [[254, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[254, "adding-a-default-task"]], "Varying resolution and other parameters": [[254, "varying-resolution-and-other-parameters"]], "Adding the init step": [[254, "adding-the-init-step"]], "Creating a horizontal mesh": [[254, "creating-a-horizontal-mesh"]], "Adding a config file": [[254, "adding-a-config-file"]], "Adding the step to the task": [[254, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[254, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[254, "creating-an-initial-condition"]], "Adding plots": [[254, "adding-plots"]], "Adding step outputs": [[254, "adding-step-outputs"]], "Adding validation": [[254, "adding-validation"], [254, "id1"]], "Test things out!": [[254, "test-things-out"]], "Adding the forward step": [[254, "adding-the-forward-step"]], "Defining model config options and streams": [[254, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[254, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[254, "adding-more-validation"]], "Test the task again!": [[254, "test-the-task-again"]], "Adding a visualization step": [[254, "adding-a-visualization-step"]], "Adding the viz step to the task": [[254, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[254, "test-the-task-one-more-time"]], "Adding a second task": [[254, "adding-a-second-task"]], "Enhancements": [[254, "enhancements"]], "Adding model config options in code": [[254, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[254, "adding-dynamic-model-config-options"]], "Computing the cell count": [[254, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[254, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[254, "adding-a-parameter-study"]], "Adding the steps to the task": [[254, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[254, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[254, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[255, "config-files"]], "A \u201cuser\u201d config file": [[255, "a-user-config-file"]], "Test-case config files": [[255, "test-case-config-files"]], "config options": [[256, "config-options"], [257, "config-options"], [258, "config-options"], [259, "config-options"], [260, "config-options"], [261, "config-options"], [266, "config-options"], [266, "id7"], [266, "id14"], [266, "id22"], [266, "id30"], [266, "id37"], [267, "config-options"], [269, "config-options"], [270, "config-options"], [271, "config-options"], [271, "id1"], [271, "id6"], [271, "id13"], [272, "config-options"], [276, "config-options"], [276, "id5"], [276, "id10"], [277, "config-options"]], "Intel on Anvil": [[256, "intel-on-anvil"]], "Gnu on Anvil": [[256, "gnu-on-anvil"]], "Chicoma-CPU": [[257, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[257, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[258, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[258, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[259, "intel-on-compymcnodeface"]], "Slurm job queueing": [[260, "slurm-job-queueing"]], "MPICH": [[260, "mpich"]], "OpenMPI": [[260, "openmpi"]], "No MPI from conda-forge": [[260, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[261, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[261, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[261, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[263, "d-grid-type"]], "uniform": [[263, "uniform"]], "tanh_dz": [[263, "tanh-dz"]], "60layerPHC": [[263, "layerphc"]], "100layerE3SMv1": [[263, "layere3smv1"]], "3D vertical coordinates": [[263, "d-vertical-coordinates"]], "z-star": [[263, "z-star"]], "z-level": [[263, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[265, "cosine-bell-and-cosine-bell-cached-init-suite"]], "Baroclinic channel": [[266, "baroclinic-channel"]], "description": [[266, "description"], [266, "id1"], [266, "id8"], [266, "id16"], [266, "id24"], [269, "description"], [270, "description"], [271, "description"], [271, "id2"], [271, "id7"], [272, "description"], [276, "description"], [277, "description"]], "vertical grid": [[266, "vertical-grid"], [266, "id3"], [266, "id10"], [266, "id18"], [266, "id26"], [266, "id33"], [267, "vertical-grid"], [269, "vertical-grid"], [270, "vertical-grid"], [271, "vertical-grid"], [271, "id4"], [271, "id9"], [272, "vertical-grid"]], "initial conditions": [[266, "initial-conditions"], [266, "id4"], [266, "id11"], [266, "id19"], [266, "id27"], [266, "id34"], [267, "initial-conditions"], [269, "initial-conditions"], [270, "initial-conditions"], [271, "initial-conditions"], [271, "id5"], [271, "id10"], [272, "initial-conditions"], [276, "initial-conditions"], [276, "id2"], [276, "id7"], [277, "initial-conditions"]], "forcing": [[266, "forcing"], [266, "id5"], [266, "id12"], [266, "id20"], [266, "id28"], [266, "id35"], [267, "forcing"], [269, "forcing"], [270, "forcing"], [271, "forcing"], [271, "id11"], [272, "forcing"], [276, "forcing"], [276, "id3"], [276, "id8"], [277, "forcing"]], "time step and run duration": [[266, "time-step-and-run-duration"], [266, "id6"], [266, "id13"], [266, "id21"], [266, "id29"], [266, "id36"], [267, "time-step-and-run-duration"], [269, "time-step-and-run-duration"], [270, "time-step-and-run-duration"], [271, "time-step-and-run-duration"], [271, "id12"], [272, "time-step-and-run-duration"], [277, "time-step-and-run-duration"]], "cores": [[266, "cores"], [266, "id15"], [266, "id23"], [266, "id31"], [266, "id38"], [267, "cores"], [269, "cores"], [270, "cores"], [271, "cores"], [271, "id14"], [272, "cores"], [276, "cores"], [276, "id4"], [276, "id9"], [277, "cores"]], "thread": [[266, "thread"]], "cosine_bell and cosine_bell_with_viz": [[267, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[267, "description"]], "inertial gravity wave": [[269, "inertial-gravity-wave"]], "<Category of task>": [[272, "ocean-category-of-task"], [277, "seaice-category-of-task"]], "task_name": [[272, "task-name"], [277, "task-name"]], "Quick Start for Users": [[273, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[273, null]], "Loading polaris conda and spack environments": [[273, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[273, "e3sm-supported-machines"]], "Other machines": [[273, "other-machines"]], "Building supported E3SM components as standalone models": [[273, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[273, "setting-up-tasks"]], "Running a task": [[273, "running-a-task"]], "Running with a job script": [[273, "running-with-a-job-script"]], "Sea ice component": [[274, "sea-ice-component"]], "standard physics test": [[276, "standard-physics-test"]], "timestep and run duration": [[276, "timestep-and-run-duration"], [276, "id11"]], "visualization": [[276, "visualization"]], "exact restart test": [[276, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[18, "polaris.Component"]], "__init__() (polaris.component method)": [[18, "polaris.Component.__init__"]], "add_task() (polaris.component method)": [[19, "polaris.Component.add_task"]], "modelstep (class in polaris)": [[20, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[20, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[24, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[25, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[26, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[27, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[28, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[29, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[30, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[31, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[32, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[33, "polaris.Step"]], "__init__() (polaris.step method)": [[33, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[34, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[35, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[36, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[37, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[38, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[39, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[40, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[41, "polaris.Step.setup"]], "task (class in polaris)": [[42, "polaris.Task"]], "__init__() (polaris.task method)": [[42, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[43, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[44, "polaris.Task.configure"]], "main() (in module polaris.__main__)": [[45, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[46, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[47, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[48, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[48, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[49, "polaris.io.download"]], "module": [[50, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[50, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[51, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[52, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[53, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[54, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[55, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[56, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[57, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[58, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[70, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[71, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[75, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[76, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[77, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[78, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[79, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[80, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[81, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[82, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[83, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[84, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[85, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[85, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_proj"]], "load_dependencies() (in module polaris.run)": [[96, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[97, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[98, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[99, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[100, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[101, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[102, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[103, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[104, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[105, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[106, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[107, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[108, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[109, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[110, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[111, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[111, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[112, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[114, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[115, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[116, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[117, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[126, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[126, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[127, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[132, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchanneltestcase (class in polaris.ocean.tasks.baroclinic_channel)": [[133, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.baroclinicchanneltestcase method)": [[133, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[134, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[135, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[135, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[136, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[136, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[137, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[137, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[138, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[140, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[140, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[141, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[142, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[143, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[143, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[144, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[144, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[145, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[146, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[146, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[147, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[148, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[148, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[149, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[150, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[151, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[151, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[152, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[152, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[153, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[154, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[154, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[155, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.global_convergence)": [[156, "polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks"]], "cosinebell (class in polaris.ocean.tasks.global_convergence.cosine_bell)": [[157, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.cosinebell method)": [[157, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.global_convergence.cosine_bell.cosinebell method)": [[158, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure"]], "analysis (class in polaris.ocean.tasks.global_convergence.cosine_bell.analysis)": [[159, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[159, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[160, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[161, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tasks.global_convergence.cosine_bell.forward)": [[162, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[162, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[163, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[164, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.global_convergence.cosine_bell.init)": [[165, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.init.init method)": [[165, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.init.init method)": [[166, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tasks.global_convergence.cosine_bell.viz)": [[167, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.viz method)": [[167, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.viz method)": [[168, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.global_convergence.cosine_bell.viz)": [[169, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.vizmap method)": [[169, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.vizmap method)": [[170, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[171, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[172, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[172, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[173, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tasks.inertial_gravity_wave.convergence)": [[174, "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.convergence.convergence method)": [[174, "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.__init__"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[175, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[175, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[176, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[177, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[178, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[178, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[179, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[180, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[181, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[181, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[182, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[184, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[185, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[186, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[186, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[187, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tasks.manufactured_solution.convergence)": [[188, "polaris.ocean.tasks.manufactured_solution.convergence.Convergence"]], "__init__() (polaris.ocean.tasks.manufactured_solution.convergence.convergence method)": [[188, "polaris.ocean.tasks.manufactured_solution.convergence.Convergence.__init__"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[189, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[189, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[190, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[191, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[192, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[192, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[193, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[194, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[195, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[195, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[196, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[197, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[197, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[198, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[199, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[200, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[200, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[201, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[201, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[202, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[202, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[203, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[203, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[204, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[205, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[205, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[206, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[207, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[208, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[209, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[210, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[211, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[212, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[213, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[214, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[215, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[216, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[237, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[237, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[238, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[239, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[239, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[240, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[240, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[241, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[242, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[242, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[243, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[243, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[244, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[244, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[245, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})