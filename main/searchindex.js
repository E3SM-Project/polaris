Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.ideal_age.IdealAge", "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tests.single_column.initial_state.InitialState", "polaris.ocean.tests.single_column.initial_state.InitialState.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "test_group_name", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 102, 112, 116, 142, 149, 214, 215, 216], "date": [1, 4, 48, 196, 211, 216], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 72, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 116, 117, 122, 125, 126, 127, 128, 134, 136, 138, 140, 141, 143, 145, 146, 148, 150, 153, 155, 156, 158, 161, 164, 165, 167, 168, 170, 172, 174, 177, 179, 180, 182, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233], "purpos": [1, 45, 209, 210, 213, 215, 233], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 55, 59, 60, 61, 64, 65, 67, 68, 69, 70, 73, 74, 83, 84, 86, 87, 93, 99, 107, 108, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 196, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 224, 227, 228, 230, 231, 232, 234], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 68, 109, 113, 125, 127, 130, 186, 188, 194, 195, 196, 202, 203, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 224, 228, 230, 231, 232], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 67, 68, 73, 83, 84, 87, 91, 97, 98, 99, 100, 102, 104, 107, 108, 110, 112, 117, 118, 120, 121, 122, 125, 127, 128, 140, 141, 142, 149, 168, 169, 179, 188, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 233, 234], "summar": 1, "what": [1, 9, 11, 14, 122, 210, 215, 222, 231, 232], "capabl": [1, 14, 122, 206, 210, 215, 221, 232], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 108, 134, 145, 155, 188, 194, 195, 208, 209, 211, 214, 217, 218, 219, 220, 222, 232], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 118, 120, 121, 122, 125, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 233, 234], "through": [1, 101, 210, 211, 215], "process": [1, 6, 12, 27, 83, 84, 117, 206, 210, 211, 213, 214, 215], "It": [1, 4, 12, 14, 32, 38, 109, 199, 206, 207, 208, 209, 210, 211, 213, 215, 216, 221], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 55, 68, 100, 101, 108, 109, 110, 118, 119, 120, 121, 122, 123, 125, 130, 145, 155, 196, 203, 206, 207, 208, 209, 211, 212, 215, 216, 227, 228, 230, 231, 232], "clear": [1, 210, 215], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 60, 67, 73, 87, 103, 104, 140, 148, 167, 179, 188, 194, 195, 206, 210, 211, 212, 213, 214, 232], "code": [1, 4, 5, 7, 10, 12, 32, 125, 196, 203, 206, 207, 208, 213, 214, 216, 223, 227, 230, 232], "do": [1, 4, 7, 9, 12, 14, 15, 112, 206, 208, 211, 212, 213, 215, 221, 228, 232], "current": [1, 4, 6, 9, 19, 29, 32, 39, 107, 108, 122, 127, 179, 196, 200, 202, 203, 206, 210, 211, 213, 214, 215, 216, 221, 224, 227, 228, 230, 232, 233, 234], "doe": [1, 7, 10, 12, 206, 214, 215, 221], "primari": [1, 4, 7, 215, 234], "challeng": 1, "respect": [1, 6, 7, 12, 16, 125, 206, 210, 228, 231], "softwar": [1, 77, 222, 232], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 107, 108, 109, 125, 172, 188, 194, 195, 196, 202, 203, 204, 206, 208, 209, 210, 211, 215, 216, 221, 222, 224, 228, 231, 232, 233], "appropri": [1, 4, 12, 20, 72, 122, 196, 199, 202, 203, 206, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 231, 232], "final": [1, 5, 199, 200, 202, 204, 206, 208, 215, 228], "statement": [1, 10, 206, 213], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 36, 49, 52, 79, 82, 88, 89, 90, 91, 95, 96, 97, 102, 110, 111, 125, 132, 188, 194, 195, 203, 204, 205, 206, 210, 211, 213, 215, 216, 221, 225, 231, 232], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 67, 108, 125, 145, 155, 186, 196, 198, 199, 200, 202, 203, 206, 211, 215, 216, 221, 228, 232], "regard": 1, "success": [1, 51, 196, 203, 215, 216], "last": [1, 207, 211, 227, 232], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 102, 104, 127, 151, 199, 206, 208, 209, 211, 214, 215, 216, 227, 232], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 66, 71, 76, 102, 103, 104, 112, 113, 116, 117, 142, 149, 199, 203, 206, 208, 209, 210, 211, 213, 215, 216, 222, 228], "your": [1, 3, 4, 9, 122, 196, 210, 211, 212, 215, 216, 217, 218, 221, 222, 228, 232], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 83, 84, 99, 100, 101, 106, 107, 108, 132, 153, 161, 164, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 218, 221, 222, 228, 232, 233, 234], "appear": [1, 122, 206, 215], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 56, 62, 63, 72, 101, 117, 122, 125, 137, 147, 157, 161, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 221, 224, 227, 228, 231, 232, 234], "under": [1, 14, 32, 33, 107, 122, 125, 198, 206, 207, 211, 214, 224, 233], "head": [1, 198, 218], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 100, 101, 106, 108, 125, 127, 135, 137, 139, 146, 147, 152, 157, 178, 181, 196, 199, 202, 206, 208, 209, 210, 211, 212, 213, 214, 216, 221, 222, 224, 227, 228, 231, 232, 233, 234], "correspond": [1, 5, 15, 107, 108, 125, 196, 206, 211, 227], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 61, 68, 69, 72, 75, 87, 93, 107, 108, 127, 146, 188, 194, 195, 200, 203, 206, 209, 210, 221, 224, 227], "propos": 1, "discuss": [1, 125, 206, 208, 209, 210, 215, 227, 228], "technic": [1, 5], "issu": [1, 206, 207, 211, 228], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 122, 199, 206, 208, 209, 211, 212, 215, 224], "focu": [1, 215], "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 100, 101, 106, 111, 116, 118, 119, 120, 121, 122, 123, 136, 140, 142, 146, 148, 149, 150, 156, 169, 179, 196, 199, 202, 203, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 227, 231], "To": [1, 4, 10, 14, 15, 108, 122, 125, 196, 206, 210, 211, 215, 217, 218, 219, 220, 221, 222, 224, 228, 232], "extent": [1, 11, 14, 215, 227], "possibl": [1, 6, 9, 63, 125, 198, 206, 207, 210, 215, 224], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 100, 101, 106, 107, 108, 196, 203, 206, 210, 211, 213, 215, 227, 232, 233], "independ": [1, 4, 207, 213], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 118, 137, 147, 157, 200, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 216, 217, 227, 233], "thu": [1, 5, 12, 215], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 108, 125, 127, 206, 209, 213, 215, 216, 221, 224, 228, 233], "clean": [1, 206, 208, 211], "plan": [1, 11, 196, 206, 213, 233], "For": [1, 2, 4, 5, 10, 12, 14, 16, 101, 118, 198, 199, 202, 206, 210, 211, 213, 215, 216, 217, 225, 228, 232, 233], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 118, 119, 120, 121, 122, 123, 196, 203, 206, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 228, 232, 233, 234], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 64, 67, 69, 88, 92, 93, 95, 100, 101, 106, 108, 118, 119, 120, 121, 122, 123, 125, 196, 199, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 232, 233, 234], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 91, 97, 107, 108, 112, 125, 135, 137, 139, 147, 152, 157, 178, 181, 196, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 221, 225, 228, 231, 232], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 60, 62, 63, 89, 96, 102, 104, 107, 108, 109, 116, 122, 127, 170, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 224, 232, 233, 234], "intend": [1, 6, 7, 207, 216, 233], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 99, 109, 122, 125, 134, 145, 155, 161, 199, 200, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 56, 108, 198, 200, 204, 206, 208, 210, 211, 212, 215, 228, 232], "pde": 1, "solver": [1, 208, 211, 214, 232], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 119, 122, 123, 204, 208, 209, 210, 211, 215, 232], "well": [1, 6, 7, 10, 11, 125, 191, 199, 202, 206, 211, 213, 215, 216, 228, 232, 233], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 60, 107, 108, 138, 140, 145, 150, 155, 160, 167, 175, 177, 179, 180, 196, 199, 200, 202, 206, 207, 208, 213, 214, 215, 216, 221, 227, 234], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 125, 200, 204, 206, 207, 208, 209, 210, 211, 214, 215, 216, 221, 224, 228, 231, 232, 233, 234], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 77, 79, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 107, 108, 110, 112, 113, 116, 117, 122, 127, 130, 135, 140, 164, 169, 172, 192, 196, 198, 199, 200, 202, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 226, 227, 228, 231, 232, 233, 234], "low": [1, 110], "level": [1, 9, 10, 11, 15, 16, 125, 188, 189, 190, 191, 192, 193, 194, 195, 199, 204, 205, 206, 208, 209, 215, 216, 227, 228, 230, 231, 234], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 60, 67, 73, 77, 87, 88, 92, 95, 107, 108, 110, 111, 112, 117, 122, 125, 127, 134, 140, 143, 153, 161, 163, 164, 167, 172, 174, 179, 180, 188, 194, 195, 198, 202, 208, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 225, 227, 231, 232], "declar": [1, 5], "interfac": [1, 8, 186, 187, 188, 194, 195, 206, 210, 211, 214, 215, 224], "sequenc": [1, 4, 12, 205, 206, 210, 213, 215, 232, 233, 234], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 83, 84, 85, 100, 107, 108, 110, 118, 119, 120, 121, 122, 123, 127, 140, 179, 199, 206, 208, 209, 210, 211, 212, 213, 215, 216, 221, 222, 224, 228, 231, 232], "want": [1, 4, 9, 12, 14, 15, 43, 125, 206, 209, 211, 212, 215, 216, 221, 222, 230, 232, 233], "math": 1, "syntax": [1, 215], "almost": [1, 7], "ident": [1, 4, 15, 136, 146, 156, 199, 207, 210, 215, 227], "latex": 1, "b": [1, 4, 211, 213, 215, 232], "2": [1, 11, 12, 15, 33, 156, 198, 199, 204, 207, 211, 215, 216, 218, 221, 224, 227, 228, 232], "2ab": 1, "imag": [1, 5, 16, 109, 110, 209, 215, 231], "keep": [1, 4, 7, 12, 19, 50, 206, 208, 211, 215, 231], "mind": [1, 4, 215], "quit": [1, 204, 206, 208, 215], "small": [1, 7, 38, 206, 209, 215, 217, 218, 223, 224, 230, 232], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 72, 83, 84, 99, 101, 108, 113, 122, 125, 127, 140, 179, 188, 191, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 230, 231, 232, 233, 234], "prefer": [1, 206, 207, 215, 216], "png": [1, 11, 16, 200, 215], "okai": [1, 206, 215], "size": [1, 11, 62, 63, 72, 125, 129, 131, 132, 199, 209, 215, 216, 227, 228, 230, 231], "repo": [1, 4, 196, 214, 215], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 224, 231, 232, 233, 234], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 122, 206, 209, 211, 215, 221, 225, 232], "actual": [1, 4, 10, 206, 208, 211, 215], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 211, 215, 216, 217, 218, 219, 220, 221, 222, 232], "project": [1, 4, 5, 59, 91, 97, 196, 210, 211, 215, 216, 217, 218, 221, 232], "manag": [1, 212, 221], "item": [1, 215], "git": [1, 13, 86, 196, 211, 215, 216, 232], "branch": [1, 4, 122, 196, 203, 206, 211, 215, 232], "timelin": 1, "staf": 1, "via": [1, 4, 12, 206, 211, 221], "block": [1, 208], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 88, 92, 95, 125, 204, 206, 209, 210, 211, 212, 214, 215, 216, 221, 227, 228, 232, 233], "def": [1, 5, 7, 9, 10, 14, 16, 203, 206, 208, 209, 210, 215], "example_funct": 1, "foo": [1, 210], "return": [1, 5, 25, 49, 51, 54, 61, 62, 63, 68, 72, 79, 82, 83, 93, 101, 102, 104, 112, 116, 117, 125, 128, 130, 132, 141, 165, 168, 186, 189, 190, 191, 192, 193, 210, 215, 228], "0": [1, 4, 5, 11, 12, 14, 15, 16, 62, 88, 92, 95, 108, 118, 119, 120, 121, 122, 123, 125, 188, 193, 194, 195, 198, 200, 206, 209, 210, 212, 215, 216, 218, 221, 224, 225, 227, 228, 230, 231, 232], "how": [1, 4, 10, 12, 67, 125, 205, 206, 208, 210, 211, 216, 221, 222], "show": [1, 5, 11, 206, 215, 221, 222, 227, 228, 231], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 121, 122, 125, 131, 199, 200, 202, 205, 206, 208, 209, 210, 211, 215, 216, 218, 220, 221, 222, 224, 228, 230, 232, 234], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 100, 101, 106, 121, 122, 125, 130, 164, 196, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 232, 233, 234], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 89, 96, 100, 101, 102, 106, 108, 110, 112, 125, 130, 136, 146, 156, 196, 198, 203, 205, 206, 208, 209, 210, 211, 215, 216, 218, 221, 224, 227, 228, 230, 231, 232, 233, 234], "regress": [1, 160, 199, 200, 207, 213, 214, 215, 227, 228, 232, 234], "suit": [1, 5, 10, 15, 32, 41, 55, 56, 98, 99, 101, 122, 199, 205, 206, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 227], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 83, 84, 87, 108, 125, 127, 140, 179, 199, 204, 206, 208, 209, 210, 211, 212, 215, 221, 224, 232], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 67, 99, 113, 125, 196, 199, 200, 203, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 221, 224, 227, 228, 232, 234], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 68, 125, 142, 149, 196, 203, 206, 208, 210, 211, 212, 214, 215, 216, 217, 221, 222, 224, 227, 228, 232, 234], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 55, 82, 83, 84, 85, 86, 100, 101, 106, 122, 125, 186, 188, 189, 190, 194, 195, 199, 206, 209, 210, 214, 215, 216, 218, 221, 222, 224, 231, 232, 233], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 55, 86, 98, 100, 101, 106, 121, 122, 145, 155, 172, 174, 175, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 221, 228, 230, 232, 233], "properli": [1, 118, 120, 121, 215, 216, 232], "addit": [1, 5, 7, 32, 202, 203, 204, 206, 208, 209, 210, 211, 215], "modif": [1, 5, 206], "nightli": [1, 211, 232, 234], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 107, 108, 196, 206, 208, 209, 210, 211, 213, 215, 216, 227, 232, 233, 234], "might": [1, 9, 12, 14, 16, 206, 209, 211, 215, 216, 221, 232], "made": [1, 4, 14, 32, 35, 41, 108, 206, 208, 210, 213, 215, 233], "ensur": [1, 7, 12, 50, 199, 210, 211, 228, 230], "continu": [1, 206, 215], "expect": [1, 10, 14, 203, 206, 211, 215, 228, 230], "page": [2, 5, 217], "auto": 2, "summari": [2, 218], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 68, 100, 101, 125, 198, 199, 200, 204, 206, 207, 208, 210, 211, 213, 221, 225, 227, 228, 231, 232, 233], "relev": [2, 5, 7, 125, 215, 217, 218, 219, 220, 221, 222, 231, 232], "main": [2, 5, 7, 12, 37, 122, 175, 203, 209, 210, 211, 215, 233], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 140, 167, 179, 199, 206, 207, 210, 211, 214, 215, 224], "document": [2, 7, 12, 206, 210, 214, 216, 232], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 106, 197, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234], "As": [3, 4, 11, 15, 62, 125, 206, 207, 208, 209, 210, 211, 215, 216, 224, 228, 230, 234], "long": [3, 19, 29, 32, 39, 83, 84, 127, 140, 179, 206, 215, 227, 232], "follow": [3, 4, 5, 11, 12, 16, 59, 122, 188, 194, 195, 196, 198, 199, 206, 207, 208, 211, 212, 215, 216, 221, 222, 224, 226, 228, 230, 232], "procedur": [3, 122, 211, 215, 222], "conda": [3, 4, 13, 86, 118, 120, 121, 122, 196, 203, 210, 214, 215, 216, 217, 218, 219, 220, 222], "environ": [3, 4, 118, 120, 121, 122, 196, 203, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222], "spack": [3, 4, 118, 120, 121, 122, 212, 214, 215, 217, 218, 219, 220, 221, 222], "compil": [3, 4, 12, 118, 119, 120, 121, 122, 123, 212, 214, 215, 217, 218, 219, 220, 221, 222, 232], "system": [3, 4, 19, 29, 32, 39, 83, 84, 85, 118, 120, 121, 122, 127, 140, 179, 206, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 232], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 59, 79, 102, 118, 120, 121, 122, 125, 203, 204, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 232], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 68, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 101, 102, 104, 106, 107, 108, 109, 110, 118, 119, 120, 121, 122, 123, 140, 142, 145, 149, 155, 160, 162, 169, 179, 188, 194, 195, 196, 198, 199, 200, 202, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 230, 231, 234], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 74, 86, 100, 101, 106, 107, 108, 118, 119, 120, 121, 122, 123, 125, 145, 155, 160, 196, 199, 200, 202, 205, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 228, 231, 233], "alreadi": [3, 9, 12, 43, 53, 125, 140, 179, 208, 210, 211, 215, 216, 221, 224, 228, 232], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 79, 86, 102, 106, 112, 122, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 232], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 56, 82, 83, 84, 127, 140, 179, 200, 206, 208, 210, 211, 215, 217, 218, 219, 220, 222, 227, 232, 234], "Then": [3, 5, 9, 118, 119, 120, 121, 122, 123, 125, 196, 199, 202, 203, 206, 208, 209, 211, 215, 221, 227, 232], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 59, 82, 83, 84, 93, 100, 101, 106, 108, 121, 122, 127, 128, 138, 140, 141, 142, 146, 149, 153, 158, 164, 167, 168, 169, 177, 179, 180, 184, 196, 199, 200, 202, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 233, 234], "script": [3, 4, 10, 16, 47, 55, 119, 122, 123, 210, 213, 214, 215, 218, 221], "doc": [3, 5, 208, 215, 222], "cd": [3, 196, 211, 215, 218, 232], "rm": 3, "rf": 3, "developers_guid": [3, 215], "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 61, 62, 64, 77, 108, 118, 119, 120, 121, 122, 123, 127, 131, 136, 146, 156, 174, 188, 194, 195, 196, 199, 206, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 227, 228, 232, 234], "html": [3, 225], "view": [3, 211], "open": [3, 211, 215], "index": [3, 15, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 215], "act": [4, 210, 224], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 136, 138, 177, 180, 199, 202, 206, 208, 215, 216, 221, 227, 230, 232], "These": [4, 6, 12, 15, 17, 32, 125, 196, 198, 203, 206, 208, 210, 211, 214, 215, 216, 221, 227, 232, 233, 234], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 55, 86, 108, 122, 125, 199, 202, 206, 207, 208, 209, 212, 213, 215, 218, 221, 222, 225, 227, 228], "describ": [4, 5, 12, 14, 86, 102, 104, 107, 108, 117, 122, 125, 199, 200, 202, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 224, 228, 232], "below": [4, 12, 19, 29, 32, 39, 83, 84, 122, 127, 140, 179, 196, 204, 206, 208, 209, 211, 215, 216, 221, 224, 228, 230, 232], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 56, 98, 107, 108, 122, 125, 130, 193, 199, 200, 202, 206, 208, 209, 210, 211, 214, 215, 217, 218, 219, 220, 222, 224, 227, 228, 230, 232, 233], "instal": [4, 211, 215, 221, 222, 232], "abov": [4, 5, 12, 15, 204, 206, 207, 208, 209, 210, 211, 215, 216, 228, 230, 232, 234], "develop": [4, 5, 6, 10, 11, 16, 122, 125, 196, 198, 203, 206, 207, 210, 212, 216, 221, 225, 232], "local": [4, 6, 9, 32, 34, 41, 196, 204, 206, 208, 211, 212, 215, 216, 221, 222, 224], "off": [4, 211, 212], "http": [4, 5, 9, 53, 206, 210, 212, 214, 215, 216, 222, 225, 232], "github": [4, 5, 210, 211, 214, 215, 216, 225, 232], "com": [4, 5, 53, 210, 211, 214, 215, 216, 232], "e3sm": [4, 5, 8, 9, 32, 111, 196, 203, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 60, 61, 67, 68, 73, 87, 94, 100, 101, 106, 111, 122, 125, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 158, 161, 164, 167, 170, 172, 174, 177, 179, 180, 182, 184, 188, 194, 195, 200, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 228, 232], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 118, 120, 121, 199, 200, 206, 208, 211, 212, 215, 216, 221, 225, 226, 227, 230, 231, 232, 233, 234], "mode": [4, 12, 203, 211, 213, 214, 215, 232], "mean": [4, 15, 165, 200, 211, 215, 224, 227, 234], "chang": [4, 6, 12, 14, 15, 67, 196, 203, 206, 207, 208, 210, 211, 213, 215, 216, 218, 222, 224, 227, 232, 234], "reflect": [4, 211], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 59, 93, 98, 122, 125, 199, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 232], "tool": [4, 7, 10, 12, 14, 196, 203, 206, 211, 214, 215, 216], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 55, 68, 77, 80, 83, 84, 87, 93, 98, 108, 109, 110, 111, 112, 117, 118, 122, 125, 127, 128, 129, 130, 131, 140, 141, 142, 149, 161, 164, 168, 172, 179, 186, 188, 189, 190, 194, 195, 196, 198, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 234], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 55, 56, 59, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 100, 101, 106, 107, 108, 122, 125, 126, 127, 186, 196, 198, 199, 200, 202, 203, 204, 206, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 55, 56, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 100, 101, 102, 106, 107, 108, 122, 125, 126, 127, 133, 134, 136, 138, 140, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 158, 159, 161, 162, 164, 166, 167, 170, 172, 173, 174, 176, 177, 179, 180, 182, 183, 184, 185, 186, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 211, 213, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 234], "support": [4, 6, 11, 14, 32, 125, 188, 194, 195, 198, 200, 206, 208, 209, 210, 214, 215, 216, 218, 222, 224, 227, 230, 233], "machin": [4, 6, 32, 34, 41, 54, 55, 86, 100, 101, 106, 196, 206, 208, 210, 214, 215, 216, 217, 218, 219, 220, 222], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 55, 56, 60, 66, 67, 68, 71, 73, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 122, 127, 130, 140, 142, 149, 151, 162, 169, 179, 186, 188, 189, 190, 194, 195, 196, 199, 200, 202, 203, 206, 207, 208, 209, 210, 212, 214, 216, 224, 226, 232, 233], "h": [4, 12, 215], "t": [4, 5, 7, 9, 10, 12, 32, 33, 117, 125, 140, 179, 206, 208, 210, 211, 212, 215, 216, 218, 220, 221, 226, 227, 232, 233, 234], "n": [4, 61, 68, 69, 75, 206, 215, 218, 221, 222, 227, 228, 231, 232], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 82, 83, 84, 87, 101, 125, 127, 128, 129, 131, 140, 141, 165, 168, 179, 196, 199, 206, 207, 208, 209, 210, 213, 215, 216, 221, 224, 226, 227, 228, 230, 231, 232], "v": [4, 211, 215, 234], "By": [4, 12, 15, 33, 34, 125, 196, 203, 208, 215, 216, 227, 230], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 55, 68, 73, 78, 86, 87, 88, 92, 95, 99, 100, 101, 103, 106, 118, 120, 121, 125, 127, 140, 177, 179, 180, 196, 200, 202, 203, 206, 208, 209, 211, 214, 216, 217, 218, 219, 220, 221, 222, 224, 228, 230, 231, 232, 233, 234], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 83, 84, 86, 100, 101, 125, 126, 127, 134, 140, 179, 188, 194, 195, 196, 199, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 221, 224, 225, 227, 228, 231, 232, 233], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 60, 67, 73, 87, 100, 101, 107, 108, 127, 140, 143, 148, 153, 158, 171, 172, 174, 179, 182, 184, 206, 210, 215, 216, 227, 230, 232], "example_compact": [4, 196, 203, 216], "1km": [4, 208, 209, 215, 227, 232], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 62, 118, 119, 120, 121, 122, 123, 125, 136, 140, 156, 179, 188, 194, 195, 199, 200, 202, 204, 206, 208, 211, 212, 215, 216, 218, 221, 222, 224, 227, 228, 230, 231, 232], "test2": 4, "displai": [4, 6, 222], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 56, 59, 86, 100, 101, 106, 107, 108, 110, 196, 203, 206, 208, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 232, 233], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 55, 86, 98, 100, 101, 106, 107, 108, 122, 145, 155, 172, 174, 196, 199, 203, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 228, 232, 233], "help": [4, 11, 204, 206, 211, 214, 215, 221, 225], "messag": [4, 6, 15, 206, 208, 212, 222], "test_expr": [4, 56], "flag": [4, 206, 210, 212, 213, 215, 216, 225, 227, 232], "suppli": [4, 5, 15, 117, 206, 211, 215], "substr": 4, "regular": [4, 16, 56, 61, 68, 161, 164, 215, 217, 220, 221, 222, 232], "express": [4, 56], "subset": 4, "think": [4, 215], "search": [4, 56, 218], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 106, 107, 108, 199, 203, 204, 206, 207, 208, 209, 211, 213, 215, 216, 218, 221, 228, 230, 231], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 116, 125, 127, 130, 132, 134, 140, 148, 165, 167, 170, 172, 174, 179, 187, 203, 206, 208, 209, 210, 211, 213, 215, 216, 222, 227, 232, 234], "singl": [4, 6, 16, 110, 176, 177, 180, 182, 202, 206, 208, 210, 213, 215, 221, 228, 230], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 62, 72, 79, 83, 84, 99, 102, 104, 107, 108, 112, 125, 127, 150, 165, 191, 199, 200, 202, 206, 208, 212, 214, 215, 216, 227, 228, 230, 231, 232, 234], "instead": [4, 10, 12, 19, 99, 118, 122, 206, 208, 210, 211, 215, 217, 232, 234], "pass": [4, 6, 10, 11, 12, 15, 41, 72, 108, 109, 203, 206, 208, 209, 210, 211, 213, 232], "similarli": [4, 6, 196, 206, 211, 221, 232], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 55, 58, 86, 106, 111, 127, 133, 140, 160, 167, 176, 179, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 221, 223, 226, 233], "result": [4, 11, 15, 51, 63, 72, 107, 108, 122, 125, 136, 146, 153, 156, 158, 184, 199, 200, 206, 207, 210, 211, 213, 215, 216, 227, 228, 231, 234], "verbos": [4, 56, 58, 206, 215, 234], "about": [4, 5, 6, 10, 12, 15, 32, 87, 111, 125, 206, 208, 209, 210, 211, 215, 216, 218], "its": [4, 5, 6, 10, 14, 16, 32, 43, 93, 103, 203, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 228, 232, 233], "descript": [4, 5, 215, 216, 225], "short": [4, 138, 177, 180, 206, 207, 208, 210, 215, 227], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 55, 82, 83, 84, 106, 125, 126, 127, 136, 138, 177, 180, 199, 202, 203, 204, 206, 207, 208, 209, 210, 213, 215, 216, 217, 218, 219, 220, 221, 222, 232, 234], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 56, 60, 67, 73, 87, 127, 140, 172, 174, 179, 199, 204, 206, 208, 210, 215, 232, 233], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 60, 65, 67, 70, 73, 74, 82, 84, 86, 87, 93, 98, 99, 100, 101, 108, 125, 127, 128, 132, 134, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 213, 214, 216, 222, 224, 233, 234], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 60, 67, 73, 87, 127, 140, 172, 174, 179, 206, 208, 215], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 98, 108, 196, 203, 206, 208, 209, 213, 214, 215, 225], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 106, 109, 110, 125, 127, 175, 198, 206, 208, 209, 211, 215, 224, 233], "built": [4, 12, 100, 101, 106, 196, 203, 211, 214, 216, 221, 232], "execut": [4, 6, 12, 15, 19, 100, 101, 106, 127, 196, 203, 206, 211, 215, 216, 217, 218, 219, 220, 221, 222, 232], "standalon": [4, 12, 121, 203, 211, 213, 214, 221], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 59, 77, 89, 96, 102, 104, 106, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 160, 161, 172, 187, 196, 197, 199, 200, 202, 203, 204, 206, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 230, 231, 232, 233, 234], "befor": [4, 6, 12, 14, 38, 206, 209, 210, 211, 212, 215, 218, 222, 224, 228, 232], "w": [4, 211, 213, 215, 232], "num": 4, "f": [4, 7, 9, 12, 208, 210, 211, 215, 216, 222, 227, 232], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 59, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 116, 117, 122, 127, 131, 132, 142, 145, 149, 155, 172, 174, 187, 196, 199, 200, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 218, 221, 222, 224, 227, 228, 231, 232, 233], "m": [4, 12, 61, 68, 69, 75, 199, 202, 209, 211, 215, 217, 218, 219, 220, 222, 224, 227, 228, 230, 232], "mach": [4, 32, 217, 218, 219, 220, 221, 222, 232], "p": [4, 211, 215, 216, 232], "suite_nam": [4, 6, 99, 101, 106, 232], "specifi": [4, 12, 14, 15, 16, 34, 198, 206, 211, 215, 216, 222, 227, 228, 231, 232], "either": [4, 5, 6, 10, 11, 12, 14, 62, 125, 196, 206, 211, 213, 215, 216, 224, 230, 232], "onli": [4, 5, 6, 12, 14, 15, 41, 122, 196, 198, 200, 202, 203, 206, 208, 210, 214, 215, 216, 218, 221, 222, 224, 226, 227, 228, 230, 232], "time": [4, 5, 6, 12, 15, 16, 32, 41, 54, 110, 125, 132, 140, 150, 169, 179, 198, 199, 200, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 222, 232, 234], "wai": [4, 5, 11, 12, 32, 64, 69, 122, 125, 206, 208, 209, 210, 211, 212, 214, 215, 221, 224, 230], "altern": [4, 11, 232], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 100, 101, 145, 155, 203, 204, 206, 207, 208, 209, 210, 211, 215, 216, 221, 227, 228, 230, 231, 232], "case_numb": 4, "multipl": [4, 5, 12, 15, 197, 207, 210, 211, 215, 221, 227, 232], "separ": [4, 5, 7, 12, 14, 15, 206, 207, 213, 215, 228, 232], "space": [4, 5, 7, 11, 206, 211, 215, 218, 221, 232], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 87, 127, 140, 179, 196, 203, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 221, 224, 225, 231, 232, 233], "few": [4, 11, 12, 19, 29, 32, 39, 83, 84, 122, 127, 199, 202, 206, 210, 215, 216, 221], "basic": [4, 5, 216, 218, 221, 232], "piec": [4, 203, 215], "inform": [4, 5, 6, 32, 87, 108, 117, 206, 208, 211, 216, 218, 225, 232], "abl": [4, 118, 119, 120, 121, 123, 125, 206, 207, 209, 211, 215, 221, 232], "place": [4, 12, 15, 109, 206, 208, 215, 221], "download": [4, 6, 8, 32, 34, 40, 145, 155, 208, 210, 211, 216, 232, 234], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 198, 199, 204, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 232, 233, 234], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 93, 102, 104, 105, 109, 110, 111, 117, 122, 172, 188, 194, 195, 206, 211, 214, 216, 217, 218, 219, 220, 221, 232, 233, 234], "locat": [4, 12, 15, 16, 41, 100, 101, 106, 196, 206, 211, 213, 215, 216, 218, 221, 224, 227, 228, 232], "where": [4, 5, 12, 15, 32, 34, 41, 51, 55, 86, 100, 101, 106, 109, 125, 188, 191, 194, 195, 196, 203, 205, 206, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 230, 231, 232, 234], "There": [4, 11, 188, 194, 195, 202, 204, 206, 210, 211, 212, 215, 216, 232], "r": [4, 222, 228], "tell": [4, 211], "re": [4, 206, 210, 211, 213, 215, 216, 221, 222, 228], "leav": [4, 16, 200, 208, 216, 228], "unknown": [4, 122, 210, 221], "component_path": [4, 100, 101, 106, 196, 203, 216, 232], "absolut": [4, 7, 32, 34, 50, 100, 101, 106, 196, 203, 206, 211, 232], "landic": [4, 8, 10, 17, 34, 59, 106, 203, 205, 206, 208, 209, 211, 213, 214, 215, 216, 232, 233, 234], "e3sm_submodul": [4, 196, 203, 211, 215], "mali": [4, 122, 203, 206, 211, 213, 215, 216, 232, 233], "dev": [4, 5, 203, 205, 206, 209, 210, 211, 214, 225, 232], "albani": [4, 118, 120, 121, 122, 203, 216, 217, 218, 219, 222, 232], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 145, 155, 200, 208, 211, 213, 215, 216, 221, 222, 224, 228, 232, 233], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 100, 101, 106, 108, 109, 110, 113, 125, 127, 128, 140, 141, 142, 149, 161, 164, 168, 169, 179, 206, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 230, 231, 232], "omega": [4, 25, 111, 127, 130, 196, 203, 210, 211, 213, 215, 225, 232], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 54, 55, 66, 68, 71, 82, 83, 84, 85, 86, 100, 101, 106, 108, 109, 111, 112, 113, 114, 116, 117, 122, 127, 130, 142, 149, 162, 169, 186, 188, 189, 190, 194, 195, 196, 199, 200, 202, 203, 206, 207, 208, 209, 210, 211, 212, 214, 224, 232, 233], "point": [4, 47, 53, 90, 196, 198, 203, 208, 209, 210, 211, 215, 216, 221, 232], "much": [4, 12, 206, 215], "config_fil": [4, 100, 101, 106], "work_dir": [4, 9, 15, 32, 41, 55, 86, 100, 101, 106, 107, 108, 206, 208, 215], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 66, 71, 73, 100, 101, 106, 122, 129, 131, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 233], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 74, 98, 103, 106, 108, 125, 172, 174, 196, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 231, 232], "recommend": [4, 5, 9, 16, 206, 207, 210, 211, 215, 221], "itself": [4, 5, 7, 32, 203, 205, 206, 208, 209, 211, 215, 232], "temp": 4, "scratch": [4, 211, 215, 218, 222, 232], "avoid": [4, 206, 215], "confus": [4, 12, 210, 211, 215], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 76, 77, 84, 87, 99, 108, 125, 127, 132, 145, 155, 164, 172, 187, 199, 202, 208, 213, 216, 222, 232, 234], "compar": [4, 8, 15, 41, 100, 101, 106, 107, 108, 135, 137, 139, 147, 152, 157, 178, 181, 200, 202, 207, 210, 211, 213, 215, 226, 227, 232, 234], "previou": [4, 15, 206, 211, 215, 226, 232, 234], "same": [4, 5, 7, 12, 15, 33, 34, 41, 107, 108, 125, 202, 204, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 230, 232, 233, 234], "baseline_dir": [4, 41, 100, 101, 106], "mani": [4, 6, 7, 125, 204, 206, 208, 210, 211, 213, 214, 215, 227, 231], "valid": [4, 5, 6, 8, 41, 188, 189, 190, 191, 192, 193, 194, 195, 199, 202, 210, 211, 214, 224, 227], "sure": [4, 10, 14, 15, 108, 122, 136, 146, 156, 196, 199, 206, 210, 211, 213, 215, 216, 221, 222, 227, 228], "timer": [4, 41, 44, 107, 207, 208, 210], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 85, 93, 108, 118, 120, 121, 127, 140, 179, 196, 199, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 224, 227, 230, 232], "both": [4, 5, 6, 11, 12, 15, 24, 108, 125, 142, 149, 199, 205, 206, 209, 211, 214, 215, 216, 226, 230], "custom": [4, 6, 11, 14, 50, 51, 100, 101, 106, 196, 203, 211, 216, 222, 232], "order": [4, 6, 11, 12, 125, 200, 203, 206, 207, 211, 215, 228, 230, 232], "give": [4, 12, 15, 206, 210, 211, 215, 216, 232], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 122, 125, 127, 188, 194, 195, 196, 199, 203, 206, 208, 210, 211, 213, 215, 216, 221, 222, 224, 227, 228, 230, 232, 234], "after": [4, 5, 12, 14, 16, 32, 34, 35, 74, 93, 122, 189, 190, 196, 203, 206, 208, 211, 215, 216, 218, 222, 232], "c": [4, 101, 122, 206, 211, 217, 218, 219, 220, 221, 222, 226, 232, 234], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 83, 84, 94, 109, 199, 206, 208, 210, 211, 215, 231, 234], "resid": [4, 34], "test_suit": [4, 206], "build": [4, 8, 11, 12, 64, 69, 118, 119, 120, 121, 122, 123, 196, 200, 203, 208, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222], "mpas_model": [4, 216], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 64, 67, 68, 69, 125, 145, 155, 175, 206, 208, 210, 215, 216, 222, 232], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 109, 122, 125, 196, 198, 206, 207, 208, 209, 211, 212, 213, 215, 216, 222, 228, 230, 231, 232, 233], "baselin": [4, 6, 8, 15, 41, 100, 101, 106, 107, 108, 135, 137, 139, 147, 152, 157, 163, 178, 181, 199, 202, 207, 210, 213, 215, 226, 232], "comparison": [4, 15, 41, 107, 108, 208, 215, 216], "against": [4, 6, 8, 15, 108, 163, 199, 202, 206, 215, 226], "oppos": [4, 24, 128, 141, 142, 149, 161, 164, 168, 169, 215], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 36, 38, 39, 82, 83, 84, 87, 125, 127, 129, 131, 140, 179, 199, 206, 210, 213, 214, 215, 217, 218, 219, 220, 221, 222], "parallel": [4, 14, 19, 29, 32, 38, 39, 127, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 232, 233], "been": [4, 12, 15, 32, 41, 43, 93, 100, 101, 106, 118, 120, 121, 125, 164, 196, 203, 206, 208, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 232], "skip_step": 4, "wherea": [4, 10, 206, 215, 226, 233], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 99, 125, 203, 204, 206, 209, 211, 213, 215, 216, 221, 224, 230, 232, 233], "clone": [4, 196, 204, 211, 215, 232], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 122, 140, 179, 199, 206, 207, 210, 211, 212, 215, 224, 227, 230, 234], "just": [4, 12, 19, 29, 32, 39, 56, 122, 127, 206, 210, 211, 213, 215, 218, 222], "pickl": [4, 6, 206, 215, 232], "latter": [4, 41, 122], "conveni": [4, 14, 188, 194, 195, 206, 213, 215, 216, 232], "tab": [4, 232], "complet": [4, 6, 21, 22, 23, 215, 232], "explicitli": [4, 5, 15, 125, 199, 206, 211, 215, 216, 232], "select": [4, 6, 110, 206, 211, 215], "two": [4, 8, 146, 199, 200, 202, 203, 206, 207, 209, 210, 211, 215, 227, 228, 233], "edit": [4, 5, 108, 211, 215, 232], "steps_to_run": [4, 15, 41, 99, 108, 206, 208, 215, 216], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 60, 67, 73, 86, 87, 100, 101, 107, 108, 127, 140, 143, 148, 153, 158, 164, 167, 170, 172, 174, 179, 182, 184, 206, 208, 215, 216, 232], "initial_st": [4, 5, 16, 134, 198, 200, 206, 208, 210, 216, 227, 228], "full_run": [4, 147, 227], "restart_run": [4, 147, 227], "Or": [4, 206, 216], "accomplish": [4, 206, 210], "thing": [4, 118, 119, 120, 121, 122, 123, 125, 206, 210, 214], "skip": [4, 6, 15, 108, 208, 234], "take": [4, 5, 9, 11, 12, 15, 50, 206, 207, 209, 211, 215, 228, 234], "preced": [4, 50], "over": [4, 7, 12, 50, 109, 206, 210, 214, 215, 224, 227, 230, 232], "special": [4, 213, 231], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 127, 206, 221], "polaris_cach": [4, 6, 17, 206], "symlink": [4, 6, 12, 32, 34, 208, 210, 211], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 77, 145, 155, 199, 202, 215, 230], "structur": [4, 11, 25, 130, 205, 208, 214, 215], "without": [4, 15, 34, 206, 210, 211, 215, 216, 220, 221, 231, 232], "redund": [4, 188, 194, 195, 199, 215], "stamp": 4, "revis": [4, 215, 216], "remov": [4, 12, 15, 99, 199, 211, 215], "older": 4, "ones": [4, 188, 194, 195, 210, 215], "version": [4, 13, 27, 50, 86, 107, 108, 196, 199, 203, 204, 206, 209, 210, 211, 214, 215, 216, 221, 222, 225, 227, 228, 232], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 36, 41, 45, 49, 50, 56, 60, 61, 64, 67, 68, 69, 73, 79, 82, 84, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 130, 133, 136, 140, 143, 146, 148, 153, 156, 158, 160, 161, 164, 167, 170, 172, 174, 176, 179, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 199, 200, 202, 203, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 227, 228, 231, 232], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 103, 121, 129, 140, 179, 196, 199, 206, 212, 214, 215, 232], "cached_fil": [4, 17, 206], "json": [4, 6, 17, 48, 206, 222], "anvil": [4, 122, 206, 216, 221, 232], "chrysali": [4, 122, 206, 215, 216, 221, 232], "sinc": [4, 12, 15, 117, 125, 199, 206, 208, 210, 211, 215, 227, 228, 231], "copi": [4, 6, 34, 48, 100, 101, 106, 215, 218, 232], "onto": [4, 211], "lcrc": [4, 6, 9, 48, 206, 210, 216, 217, 219, 221, 232], "server": [4, 6, 34, 48, 206, 210, 216, 222], "whose": [4, 206], "global_ocean": [4, 7, 9, 12, 203, 206, 208, 210, 211, 216, 232, 234], "qu240": [4, 12, 206, 210, 211, 216, 232, 234], "mesh": [4, 5, 8, 14, 19, 32, 77, 89, 96, 110, 125, 127, 128, 129, 131, 138, 141, 143, 161, 164, 165, 167, 168, 170, 172, 174, 177, 180, 182, 188, 194, 195, 198, 199, 202, 204, 206, 208, 209, 210, 211, 213, 214, 216, 224, 226, 232, 234], "phc": [4, 206, 224, 234], "init": [4, 12, 16, 29, 39, 196, 203, 206, 208, 210, 211, 215, 216, 232, 234], "ocean_cached_fil": 4, "pr": [4, 232, 234], "look": [4, 5, 9, 15, 209, 210, 215, 216], "someth": [4, 5, 88, 92, 95, 211, 215], "culled_mesh": [4, 206, 215], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 87, 206, 208, 210, 215], "210803": 4, "culled_graph": [4, 206, 215], "info": [4, 10, 12, 19, 26, 77, 127, 206, 215], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 206], "date_str": [4, 48], "let": [4, 206, 211, 213, 215, 216, 222], "string": [4, 7, 12, 34, 91, 97], "choos": [4, 206, 210, 211, 215, 217, 218, 219, 220, 222, 233], "todai": [4, 48], "dry_run": [4, 48], "saniti": [4, 215], "check": [4, 15, 108, 211, 213, 215, 216, 218, 222, 232, 234], "print": [4, 10, 15, 56, 108, 113, 206, 210, 234], "stdout": [4, 10, 32, 41, 206], "translat": [4, 25, 125, 130], "compass": [4, 87, 196, 206, 210, 213, 215], "convert": [4, 7, 11, 12, 125, 206, 215], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 100, 101, 106, 116, 117, 127, 130, 131, 142, 145, 149, 155, 196, 199, 200, 203, 206, 208, 209, 210, 214, 215, 216, 230], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 111, 116, 117, 131, 142, 145, 149, 155, 196, 198, 199, 202, 203, 206, 208, 209, 210, 216, 231], "yaml": [4, 8, 19, 20, 23, 24, 25, 127, 130, 131, 142, 149, 199, 202, 206, 214, 215, 218, 222], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 111, 122, 125, 130, 196, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 222, 224, 227, 228, 230, 231, 232, 233, 234], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 111, 122, 125, 130, 196, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 224, 227, 228, 230, 231, 232, 234], "forward": [4, 5, 12, 15, 32, 132, 138, 139, 148, 150, 152, 177, 178, 180, 181, 196, 203, 206, 208, 210, 216, 227, 228, 231], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 198, 206, 208, 210, 211, 215, 218, 220, 222, 232], "don": [4, 5, 12, 125, 206, 208, 210, 211, 215, 220, 232, 233], "format": [4, 5, 9, 11, 12, 111, 117, 206, 207, 208, 209, 211, 215, 216, 218], "note": [4, 5, 14, 15, 179, 215, 222], "keyword": [4, 5, 12, 15, 16, 200, 206, 208, 228], "top": [4, 16, 188, 189, 190, 191, 192, 193, 194, 195, 198, 204, 215, 224], "ignor": [4, 91, 97], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 54, 62, 82, 93, 98, 122, 125, 127, 205, 206, 208, 209, 210, 211, 213, 216, 224, 232], "pars": [4, 7, 12, 20, 21, 22, 23, 79, 102, 104], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 108, 109, 110, 113, 130, 150, 199, 203, 206, 208, 209, 210, 214, 215, 216, 224, 227, 228, 230], "doesn": [4, 7, 117, 206, 208, 215, 216, 221, 232], "matter": [4, 215], "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 55, 109, 110, 206, 208, 215], "myst": [5, 215], "tip": [5, 211], "easi": [5, 34, 210, 215], "start": [5, 6, 12, 103, 198, 199, 207, 209, 210, 214, 218, 221, 222, 225], "exist": [5, 7, 25, 32, 35, 53, 102, 104, 106, 130, 199, 206, 210, 211, 212, 215, 221, 234], "tree": [5, 102, 104, 117], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 133, 134, 136, 138, 140, 146, 150, 153, 156, 158, 160, 161, 176, 177, 180, 184, 196, 199, 200, 202, 203, 204, 205, 206, 208, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234], "pull": [5, 210, 211, 215, 216], "request": [5, 12, 19, 26, 28, 127, 189, 190, 206, 210, 211, 212, 215, 216, 228], "guid": [5, 125, 199, 202, 207, 210, 215, 218, 221, 225], "baroclinic_channel": [5, 12, 15, 196, 201, 203, 206, 208, 209, 210, 213, 215, 225, 229, 232, 233, 234], "label": [5, 109, 221, 232], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 122, 127, 200, 203, 206, 208, 209, 210, 211, 213, 215, 220, 221, 226, 232, 233], "baroclin": [5, 45, 133, 134, 136, 138, 140, 143, 146, 150, 153, 156, 158, 179, 184, 199, 206, 208, 209, 215, 227], "channel": [5, 45, 133, 134, 136, 138, 140, 143, 146, 150, 153, 156, 158, 179, 184, 199, 206, 208, 212, 215, 227], "And": [5, 12, 211, 215], "becom": [5, 206, 208, 215], "who": [5, 211, 215, 216, 222], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 67, 91, 97, 100, 101, 106, 122, 196, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 221, 224, 227, 228, 230, 233, 234], "brief": [5, 215], "overview": [5, 214, 218, 222], "comment": [5, 207, 216], "appli": [5, 11, 12, 56, 198, 209, 215, 227, 230, 231], "vertic": [5, 16, 198, 199, 202, 206, 216, 223, 225], "grid": [5, 11, 14, 61, 68, 72, 75, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 125, 172, 186, 187, 188, 189, 190, 191, 194, 195, 199, 200, 202, 206, 215, 216], "initi": [5, 6, 32, 132, 135, 138, 143, 160, 170, 177, 180, 182, 199, 200, 202, 206, 208, 209, 210, 212, 213, 214, 216, 224, 226, 233], "condit": [5, 32, 135, 138, 143, 160, 170, 177, 180, 182, 199, 200, 202, 206, 207, 208, 209, 210, 213, 214, 216, 226, 233], "forc": [5, 15, 202, 215, 233], "common": [5, 7, 10, 38, 41, 45, 199, 200, 202, 206, 207, 208, 209, 210, 212, 213, 215, 216, 221, 222, 232, 233, 234], "refer": [5, 12, 32, 132, 150, 188, 191, 194, 195, 206, 208, 210, 211, 213, 214, 215, 224, 227, 232], "awar": [5, 122, 203, 215, 221], "wish": [5, 12, 206, 211, 215, 232, 234], "test_group_nam": 5, "specif": [5, 7, 12, 43, 122, 196, 203, 204, 209, 214, 215, 216, 218, 221, 227, 231, 232, 234], "share": [5, 16, 125, 134, 196, 199, 202, 203, 204, 206, 208, 209, 211, 214, 217, 218, 219, 220, 221, 222, 223, 227, 231, 232], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 61, 68, 122, 125, 134, 145, 155, 206, 208, 209, 210, 214, 215, 228, 233], "public": [5, 9, 206, 215, 216], "api": [5, 10, 214, 215], "underscor": [5, 215], "md": [5, 215], "eval": 5, "rst": [5, 12, 215], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 134, 136, 138, 146, 150, 156, 199, 203, 208, 215], "baroclinicchanneltestcas": [5, 199], "compute_cell_count": [5, 125, 199, 215], "dynamic_model_config": [5, 199, 215], "initialst": [5, 199, 202, 206, 208, 215], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 125, 128, 141, 142, 149, 168, 169, 199, 202, 208, 210, 211, 213, 214, 215, 216, 228, 232, 233], "across": [5, 12, 16, 199, 206, 207, 208, 209, 210, 211, 213, 215, 223, 227, 228], "ot": [5, 215], "automat": [5, 7, 10, 12, 16, 125, 206, 208, 210, 211, 215, 216, 217, 219, 220, 221, 222, 232], "python": [5, 6, 7, 20, 38, 43, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 221, 222, 232], "begin": [5, 15, 199, 206, 211, 214, 215, 221, 227, 228, 230], "numpydoc": [5, 215], "text": [5, 6, 227, 228, 230], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 125, 188, 190, 191, 192, 193, 194, 195, 196, 208, 215, 216, 218, 222], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 72, 122, 125, 127, 128, 132, 141, 165, 168, 191, 192, 193, 199, 200, 202, 206, 211, 218, 219, 221, 222, 227, 232], "pressur": [5, 196, 216], "overli": [5, 215], "ic": [5, 125, 196, 210, 211, 214, 215, 216, 218, 224, 233], "shelf": [5, 125, 209, 210, 215, 216, 224], "draft": [5, 224], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 67, 72, 73, 75, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 125, 127, 128, 130, 132, 134, 136, 138, 140, 141, 142, 143, 146, 148, 149, 150, 153, 156, 158, 161, 164, 165, 167, 168, 169, 170, 172, 174, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 208, 209, 227, 228, 230], "xarrai": [5, 14, 16, 110, 188, 189, 190, 191, 192, 193, 194, 195, 206, 215], "dataarrai": [5, 189, 190, 191, 192, 193, 206], "sea": [5, 125, 190, 191, 192, 193, 196, 215, 216, 224], "surfac": [5, 125, 190, 191, 192, 193, 196, 198, 202, 215, 216, 224, 227, 230], "height": [5, 125, 190, 191, 192, 193, 196, 215, 216, 224], "mask": [5, 188, 191, 194, 195, 206, 215, 216, 224], "landicepressur": [5, 208], "deviat": 5, "float": [5, 7, 12, 20, 60, 62, 63, 67, 72, 92, 108, 110, 134, 136, 138, 140, 143, 146, 150, 153, 156, 165, 179, 180, 182, 206, 208, 215], "densiti": [5, 11, 125, 215], "seawat": 5, "displac": 5, "land": [5, 125, 196, 214, 215, 216, 224, 233], "landicedraft": 5, "equal": [5, 202, 206, 210, 230], "entri": [5, 47, 80, 100, 101], "alwai": [5, 7, 10, 15, 50, 125, 196, 203, 206, 210, 211, 215, 216], "own": [5, 6, 9, 10, 16, 32, 206, 208, 210, 211, 213, 215, 216, 228, 232, 233], "line": [5, 8, 30, 32, 83, 84, 94, 206, 207, 210, 211, 214, 232], "type": [5, 12, 14, 16, 20, 89, 96, 117, 177, 180, 182, 206, 208, 209, 210, 211, 212, 213, 215, 216, 227, 228, 230, 231, 234], "side": 5, "colon": 5, "doubl": [5, 125, 206, 207, 215], "back": [5, 215, 218, 232], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 63, 85, 196, 210, 211, 212, 215, 216, 232], "arg": [5, 10, 32, 83, 84, 206], "indic": [5, 6, 12, 14, 15, 32, 33, 101, 108, 110, 191, 204, 206, 212, 215, 216, 224, 230], "On": [5, 11, 211, 221], "next": [5, 209, 215, 224, 232], "indent": [5, 206], "obviou": [5, 12, 215], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 55, 56, 58, 60, 67, 73, 77, 86, 87, 88, 91, 92, 95, 97, 99, 101, 102, 106, 107, 108, 109, 110, 112, 116, 127, 128, 140, 141, 168, 179, 206, 215, 224, 227, 228, 230, 231], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 79, 102, 112, 113, 130, 142, 149, 208, 210, 215, 216, 232], "els": [5, 6, 206, 215], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 108, 109, 110, 113, 118, 119, 120, 121, 123, 125, 127, 180, 198, 206, 208, 209, 211, 215, 216, 217, 218, 219, 220, 221, 222, 227, 232, 233], "further": [5, 208, 209, 222, 231], "necessari": [5, 11, 203, 215], "rais": [5, 7, 15, 32, 35, 51, 53, 108, 125, 206, 208, 209, 210, 215], "list_cas": 6, "list_machin": [6, 210], "list_suit": 6, "anywher": [6, 10, 211], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 79, 102, 107, 108, 111, 112, 116, 117, 203, 208, 209, 210, 215], "later": [6, 15, 19, 29, 32, 39, 50, 108, 127, 206, 215, 216], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 78, 79, 111, 125, 198, 206, 208, 215], "properti": [6, 12, 198, 206, 221, 228], "clean_cas": 6, "delet": [6, 210, 211, 212, 232], "constant": [6, 60, 67, 68, 125, 198, 215, 227, 228, 230, 231], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 111, 187, 206, 208, 211, 215], "out": [6, 11, 81, 85, 110, 204, 206, 210, 211, 216, 224, 232], "proven": [6, 8, 50, 214, 216], "save": [6, 16, 51, 75, 199, 206, 208, 209, 215, 221, 226, 227], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 36, 41, 45, 50, 79, 82, 86, 101, 102, 108, 111, 112, 113, 130, 200, 206, 208, 209, 210, 215, 228], "target": [6, 9, 14, 19, 34, 53, 55, 87, 122, 125, 127, 199, 206, 208, 215, 228], "minimum": [6, 55, 110, 125, 127, 199, 206, 215, 216, 224, 227, 228, 230, 231], "determin": [6, 11, 12, 16, 34, 38, 41, 117, 125, 131, 199, 200, 206, 209, 215, 224, 227, 228, 231, 232], "maximum": [6, 15, 108, 110, 215, 216, 224], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 83, 84, 87, 125, 127, 140, 179, 206, 208, 215], "cpus_per_task": [6, 12, 32, 36, 39, 83, 84, 206], "attribut": [6, 10, 11, 12, 15, 38, 91, 97, 209, 215], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 215, 224, 227, 228, 230, 231], "runtim": [6, 24, 38, 125, 128, 141, 142, 149, 168, 169, 206, 208, 215], "min_task": [6, 12, 14, 19, 29, 32, 39, 83, 84, 87, 125, 127, 140, 179, 206, 208, 215], "min_cpus_per_task": [6, 12, 32, 39, 83, 84, 206], "fewest": 6, "least": [6, 11, 15, 203, 211], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 108, 127, 140, 179, 206, 214, 215, 216, 228], "run_test": [6, 206, 208], "run_single_step": 6, "oper": [6, 40, 145, 155, 206, 208, 234], "log": [6, 8, 15, 16, 32, 41, 84, 108, 109, 110, 206, 208, 211, 214, 232], "figur": [6, 202, 204, 206, 209, 216], "cpu": [6, 12, 122, 206, 215, 232], "per": [6, 12, 19, 29, 31, 32, 39, 83, 84, 125, 127, 206, 215, 216, 217, 218, 219, 220, 221, 222, 227, 228, 231], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 59, 60, 64, 67, 68, 69, 73, 74, 87, 93, 111, 125, 126, 127, 128, 130, 133, 134, 136, 138, 140, 141, 142, 143, 146, 148, 149, 150, 153, 156, 158, 160, 161, 164, 167, 168, 169, 170, 172, 174, 175, 176, 177, 179, 180, 182, 184, 199, 200, 203, 206, 208, 210, 215, 228, 231], "wa": [6, 15, 51, 107, 108, 122, 135, 137, 139, 147, 152, 157, 178, 181, 206, 208, 210, 211, 212, 215, 216, 224, 232], "retriev": [6, 212], "store": [6, 15, 43, 125, 206, 208, 215, 232], "dure": [6, 9, 12, 24, 32, 41, 125, 128, 141, 142, 149, 168, 169, 206, 208, 210, 211, 215, 216, 232, 233, 234], "txt": [6, 106, 207, 212], "case_output": [6, 10], "individu": [6, 7, 16, 108, 208, 210, 215, 221, 222, 227, 232, 233], "involv": [6, 12, 15, 108, 206, 208, 213, 215], "implement": [6, 7, 199, 200, 202, 210, 227, 228], "termin": [6, 15, 206, 211, 215], "window": 6, "update_cach": 6, "_cached_fil": [6, 206], "map": [6, 14, 17, 25, 67, 68, 87, 109, 110, 130, 172, 174, 200, 211, 216], "origin": [6, 48, 211, 215, 232], "enabl": [6, 16, 206, 212, 216, 222], "consum": [6, 206, 208, 215, 234], "faster": [6, 211], "debug": [6, 118, 119, 120, 121, 123, 215, 217, 218, 219, 220, 222], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 199, 202, 205, 206, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 230, 231, 232, 234], "mpas_tool": [7, 10, 11, 72, 199, 202, 206, 215], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 54, 55, 82, 85, 86, 109, 186, 188, 189, 190, 194, 195, 215], "certain": [7, 15, 50, 206, 211, 216, 231], "add_from_packag": [7, 210, 215], "content": [7, 12, 102, 104, 117, 204, 206, 210, 215, 232], "found": [7, 12, 112, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 75, 125, 203, 206, 208, 209, 210, 215, 216], "cfg": [7, 43, 203, 208, 209, 210, 215, 216, 232], "except": [7, 15, 32, 35, 51, 108, 206, 210, 215], "first": [7, 12, 100, 101, 199, 202, 206, 208, 209, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 227, 228, 230, 232], "second": [7, 11, 12, 140, 179, 202, 206, 210, 227, 230], "know": [7, 9, 11, 125, 206, 210, 211, 215], "behavior": [7, 12, 99, 206, 207, 208, 211, 215], "noth": [7, 212, 228], "being": [7, 24, 32, 41, 98, 101, 108, 128, 141, 142, 149, 168, 169, 206, 208, 209, 210, 211, 215, 224], "test_group": [7, 17, 18, 32, 41, 134, 136, 138, 146, 150, 156, 161, 177, 180, 206, 208, 209, 215], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 56, 58, 98, 99, 101, 106, 108, 110, 125, 127, 182, 184, 198, 206, 208, 209, 215, 216, 218, 220, 222, 227], "happen": [7, 10, 12, 14, 108, 206, 208, 215, 228], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 59, 60, 67, 73, 87, 111, 125, 126, 127, 133, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 158, 160, 161, 164, 167, 170, 172, 174, 175, 176, 177, 179, 180, 182, 184, 196, 199, 200, 202, 203, 206, 208, 209, 215], "larg": [7, 15, 206, 208, 215, 217], "those": [7, 12, 15, 41, 107, 108, 122, 208, 209, 210, 211, 214, 215, 228, 231, 234], "configpars": [7, 83, 84, 209], "getinteg": 7, "getfloat": [7, 10, 12, 14, 206, 215], "getboolean": [7, 206, 215], "getlist": [7, 215], "comma": [7, 228], "integ": [7, 11], "boolean": [7, 110, 191], "etc": [7, 12, 103, 106, 203, 206, 208, 227], "getexpress": 7, "tupl": 7, "rang": [7, 110, 215, 228], "numpi": [7, 11, 61, 68, 69, 75, 109, 125, 132, 186, 187, 206, 215], "linspac": [7, 16, 200, 228], "arang": 7, "arrai": [7, 61, 68, 69, 75, 109, 125, 186, 187, 189, 190, 191, 192, 215], "One": [7, 11, 215, 232, 234], "advantag": [7, 12, 122, 210, 215, 221], "track": [7, 19, 206, 208, 211], "associ": [7, 11, 12, 16, 188, 194, 195, 199, 208, 209, 211, 213], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 60, 67, 73, 87, 127, 133, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 158, 160, 161, 164, 167, 170, 172, 174, 176, 177, 179, 180, 182, 184, 203, 206, 208, 209, 210, 215, 234], "command": [8, 13, 30, 32, 38, 83, 84, 86, 94, 206, 210, 211, 213, 214, 215, 218, 221, 222, 232], "while": [8, 14, 16, 198, 199, 206, 209, 212, 213, 215], "meant": [8, 210, 216], "simplifi": 8, "verifi": [8, 207, 216], "io": [8, 206, 208, 210, 214, 215, 216, 225], "remap": [8, 16, 172, 200, 214, 228, 231], "visual": [8, 11, 14, 164, 200, 206, 208, 209, 213, 214, 228, 231], "lot": [9, 125, 206, 210, 215], "o": [9, 10, 102, 104, 117, 210, 211, 215, 216, 232], "relat": [9, 11, 12, 125, 196, 199, 202, 206, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 228, 230, 231, 232], "handl": [9, 10, 208, 211, 215, 221], "intern": [9, 19, 41, 206, 211, 212], "lower": [9, 208, 215, 227], "directli": [9, 11, 12, 14, 32, 204, 206, 210, 213, 214, 215, 218], "aren": [9, 32, 33, 206, 210, 211, 215, 234], "readm": [9, 208], "importlib": [9, 208], "resourc": [9, 12, 29, 36, 39, 52, 82, 83, 84, 128, 140, 141, 168, 179, 199, 206, 208, 215], "import": [9, 10, 11, 12, 14, 16, 203, 206, 208, 209, 210, 211, 213, 215], "files_for_e3sm": [9, 208, 216], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 127, 132, 134, 140, 148, 165, 167, 170, 172, 174, 179, 187, 206, 208, 209, 215], "did": [9, 15, 108, 215], "add_input_fil": [9, 14, 33, 206, 208, 215], "collect": [9, 45, 90, 126, 203, 205, 213, 215], "though": [9, 32, 208, 210, 215], "whenev": [9, 206, 215], "flexibl": [9, 200, 208, 211, 215], "care": [9, 11, 206, 209, 211, 215], "No": [9, 214], "step_dir": 9, "database_root": [9, 206, 216, 217, 218, 219, 220, 221, 222, 232], "download_path": 9, "join": [9, 215], "bathymetry_databas": [9, 206, 216], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 191, 206, 209, 215, 224, 227, 228, 230, 231, 233], "url": [9, 34, 51, 206, 212, 216], "web": [9, 206, 216], "anl": [9, 206, 216], "gov": [9, 206, 212, 216, 218, 222], "mpas_standalonedata": [9, 216, 221], "dest_path": [9, 51], "remot": [9, 34, 211], "bathymetri": [9, 206, 216], "strategi": 10, "stderr": [10, 32, 41, 206], "loggingcontext": 10, "check_cal": [10, 206], "most": [10, 38, 122, 196, 203, 206, 209, 210, 211, 213, 215, 216, 221, 222, 224, 225, 233], "won": [10, 210, 215, 216], "logger": [10, 32, 41, 59, 84, 206, 208, 215], "full": [10, 32, 83, 99, 189, 190, 199, 200, 206, 208, 211, 214, 215, 221, 224, 226, 227, 228, 230, 231, 232], "although": 10, "captur": 10, "insid": [10, 206, 210], "good": [10, 32, 206, 211, 215], "idea": [10, 215], "explicit": [10, 210], "go": [10, 206, 208, 209, 210, 211, 215, 222], "even": [10, 11, 12, 15, 34, 50, 122, 206, 210, 211, 215, 216, 221, 232], "subprocess": [10, 32, 83, 84, 98, 206, 210, 212], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 125, 136, 146, 156, 199, 200, 202, 206, 210, 211, 215, 232], "otherwis": [10, 15, 206, 208, 215, 217, 218, 219, 220, 221, 222, 227], "intent": 10, "desir": [10, 11, 12, 15, 16, 108, 125, 200, 206, 207, 215, 216, 232], "trick": [10, 206], "direct": [10, 11, 12, 72, 199, 208, 215, 222, 227], "snippet": [10, 215], "dome": [10, 59, 206, 208, 209, 213, 232, 233], "setup_mesh": [10, 206], "setupmesh": [10, 206, 208], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 59, 122, 203, 209, 210, 211, 213, 215, 216], "mpas_grid": [10, 206], "landice_grid": [10, 206, 215], "l": [10, 108, 215, 222], "sever": [10, 206, 208, 209, 210, 211, 213, 214, 215, 231, 232, 234], "global": [11, 14, 45, 91, 92, 97, 160, 161, 200, 206, 207, 209, 210, 213, 214, 215, 216, 222, 228, 231, 232, 233], "quasiuniformsphericalmeshstep": [11, 200], "icosahedralmeshstep": [11, 200], "jigsaw": [11, 60, 64, 66, 67, 69, 71, 73, 161, 164, 206], "complex": [11, 15, 68, 208, 210, 215], "build_cell_width_lat_lon": [11, 67], "opt": [11, 73], "make_jigsaw_mesh": [11, 67], "icosahedr": [11, 60, 62, 161, 164, 228], "significantli": [11, 224], "smooth": 11, "cell": [11, 12, 16, 60, 61, 62, 63, 67, 68, 69, 72, 75, 89, 96, 125, 127, 128, 141, 165, 168, 188, 189, 190, 191, 194, 195, 199, 206, 208, 209, 224, 227, 228, 230, 231], "quasi": [11, 67, 216, 228, 231], "hand": [11, 92, 210], "restrict": [11, 215, 231], "resolut": [11, 12, 14, 60, 63, 67, 68, 72, 88, 92, 95, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 161, 164, 165, 167, 177, 179, 180, 182, 199, 200, 202, 204, 206, 208, 209, 216, 227, 228, 230, 231, 233], "subdivis": [11, 60, 61, 62, 63, 64], "icosahedron": [11, 61, 62, 63, 64], "tabl": [11, 211, 221, 232], "approxim": [11, 60, 62, 63, 67, 125, 128, 141, 168, 211, 215], "width": [11, 60, 61, 62, 67, 68, 69, 75, 215, 227], "km": [11, 60, 61, 62, 63, 67, 68, 69, 72, 75, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 167, 179, 180, 182, 199, 200, 215, 216, 227, 228, 230, 231, 233], "5": [11, 62, 125, 150, 199, 200, 206, 207, 208, 210, 212, 215, 216, 227, 228, 231, 232], "240": [11, 62, 200, 216, 228], "6": [11, 62, 206, 215, 225, 227, 230, 232], "120": [11, 62, 207, 228], "7": [11, 62, 215, 222, 228, 232], "60": [11, 12, 62, 200, 224, 228], "8": [11, 62, 199, 208, 211, 215, 216, 227, 228, 232], "30": [11, 62, 209, 215, 222, 227, 228, 230, 231], "9": [11, 16, 62, 200, 215, 228, 232], "15": [11, 12, 62, 199, 215, 227, 228, 230, 231, 232], "10": [11, 15, 62, 196, 199, 208, 209, 215, 216, 221, 224, 227, 230, 233], "11": [11, 62, 215, 232], "3": [11, 62, 199, 206, 207, 209, 211, 212, 215, 216, 221, 222, 224, 227, 228, 231, 232], "12": [11, 62, 215, 218], "13": [11, 62, 215, 227], "94": [11, 62], "spherical_mesh": [11, 68], "cell_width": [11, 60, 61, 62, 63, 67, 68, 69, 75], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 60, 67, 206, 215], "plot": [11, 75, 109, 110, 125, 153, 158, 172, 184, 199, 200, 228, 233], "plot_cell_width": 11, "cell_width_filenam": [11, 75], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 109, 172, 200, 216, 228], "lon": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 109, 172, 200, 216, 228], "sphere": [11, 200, 228], "vtk_lat_lon": 11, "far": [11, 188, 194, 195, 210, 215], "But": [11, 122, 206, 209, 210, 211, 215, 216, 221], "hexagon": [11, 72, 215], "planar_hex": [11, 72, 199, 202, 206, 215], "make_planar_hex_mesh": [11, 72, 199, 202, 206, 215], "x": [11, 16, 61, 68, 69, 72, 75, 91, 97, 110, 132, 206, 208, 215, 227, 230], "y": [11, 12, 16, 72, 91, 97, 110, 199, 206, 208, 215, 222, 227], "nx": [11, 72, 206, 209, 215], "ny": [11, 72, 206, 209, 215], "dc": [11, 206, 209, 215], "distanc": [11, 72, 215, 227], "adjac": [11, 224], "center": [11, 16, 72, 209, 215, 224, 227], "admittedli": 11, "oddli": 11, "period": [11, 198, 199, 206, 215, 227], "nonperiodic_x": [11, 206, 215], "nonperiodic_i": [11, 206, 215], "consider": [11, 188, 194, 195, 198], "compute_planar_hex_nx_ni": [11, 215], "lx": [11, 72, 215, 227, 230], "ly": [11, 72, 215, 227, 230], "explan": 11, "subtleti": 11, "account": [11, 72, 211, 215, 217, 218, 220, 221, 222, 232], "behav": 11, "stagger": [11, 72], "strictli": [11, 210, 215], "physic": [11, 72, 215], "howev": [11, 206, 207, 208, 211, 215], "np": [11, 16, 200, 215, 228], "sqrt": 11, "domain": [11, 19, 26, 72, 110, 125, 127, 132, 198, 209, 215, 227, 228, 230, 231, 233], "extra": [11, 211], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 209, 215], "max": [11, 125, 206, 215, 228], "int": [11, 12, 19, 20, 29, 32, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 83, 84, 87, 110, 127, 128, 140, 141, 161, 164, 165, 167, 168, 179, 206, 215, 230], "ds_mesh": [11, 16, 110, 215], "creation": [11, 206, 216], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 83, 84, 127, 206, 209, 210, 215], "distant": 11, "futur": [11, 38, 206, 210, 213, 214, 215, 216, 230, 232, 233], "descend": [12, 14, 125, 203, 206, 208, 209, 210, 215], "modelstep": [12, 125, 206, 208, 215], "update_pio": [12, 19, 127], "librari": [12, 118, 122, 211, 215, 217, 218, 219, 220, 221, 222, 232], "make_graph": [12, 19, 127], "mpi": [12, 14, 87, 118, 121, 122, 127, 129, 131, 199, 206, 211, 212, 214, 215, 217, 218, 219, 220, 222, 232], "construct": [12, 126, 186, 188, 189, 190, 194, 195, 198, 202, 203, 208, 209, 215, 227], "non": [12, 15, 198, 206, 215, 232], "At": [12, 32, 41, 204, 205, 215], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 84, 127, 140, 156, 179, 199, 206, 207, 213, 215, 216, 218, 222, 227], "openmp_thread": [12, 19, 29, 32, 39, 84, 127, 140, 179, 206, 208, 215], "definit": [12, 215], "prefix": [12, 34, 211, 216], "end": [12, 199, 206, 208, 210, 211, 213, 215, 218, 227, 228, 230], "yml": 12, "reason": [12, 14, 38, 206, 210, 215, 234], "add_namelist_fil": [12, 19, 125, 206, 208], "add_yaml_fil": [12, 19, 206, 208, 215], "add_model_config_opt": [12, 19, 206, 208, 215], "add_streams_fil": [12, 19, 125, 206, 208], "themselv": [12, 210, 214], "question": [12, 206, 216], "constructor": [12, 199, 203, 209, 215], "simpli": [12, 50, 138, 177, 180, 203, 206, 208, 209, 211, 215, 224, 232, 234], "safe": [12, 15, 206, 211, 227], "never": [12, 213], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": [12, 215], "config_run_dur": [12, 208, 215], "0024_00": 12, "00": [12, 15, 208, 215, 222, 232], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 136, 213, 215], "config_block_decomp_file_prefix": [12, 215], "time_integr": [12, 215], "config_time_integr": 12, "rk4": [12, 210, 234], "filename_templ": [12, 215], "restart": [12, 41, 146, 148, 199, 202, 207, 210, 213, 215, 227], "output_interv": [12, 215], "0030_00": 12, "clobber_mod": [12, 215], "truncat": [12, 215], "reference_tim": 12, "0001": [12, 215], "01": [12, 215, 230], "01_00": [12, 215], "tracer": [12, 16, 199, 200, 202, 215, 228, 230], "xtime": [12, 215], "normalveloc": [12, 15, 16, 137, 139, 147, 152, 157, 178, 198, 199, 202, 206, 215, 230], "layerthick": [12, 15, 125, 135, 137, 139, 147, 152, 157, 178, 188, 192, 193, 194, 195, 199, 202, 206, 208, 215], "refzmid": [12, 188, 194, 195, 206, 215], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15, 215], "clariti": [12, 206], "guarante": [12, 196, 211], "uniqu": [12, 208, 215], "global_converg": [12, 196, 201, 215, 225, 226, 229], "cosine_bel": [12, 215, 231], "substitut": 12, "config_write_output_on_startup": [12, 215], "0000_00": [12, 215], "config_use_mom_del2": [12, 215], "config_implicit_bottom_drag_coeff": [12, 215], "0e": [12, 230], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": [12, 215], "config_cvmix_background_viscos": [12, 215], "worri": 12, "sometim": [12, 188, 194, 195, 206, 208, 213, 215], "easier": [12, 206, 210, 211, 216, 232, 234], "togeth": [12, 213, 215, 234], "seem": [12, 215, 218, 222], "overkil": 12, "reli": [12, 206, 215], "differ": [12, 14, 15, 50, 64, 69, 108, 122, 125, 140, 150, 196, 199, 203, 204, 206, 207, 208, 209, 210, 213, 215, 216, 218, 222, 227, 228, 231], "along": [12, 16, 199, 206, 208, 214, 215], "could": [12, 14, 16, 200, 206, 207, 208, 210, 211, 215, 228], "nu": [12, 140, 153, 179, 199, 206, 208, 215], "viscos": [12, 140, 150, 153, 199, 206, 208, 210, 215, 227], "hmix": 12, "config_mom_del2": [12, 199, 206, 215], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 100, 101, 106, 108, 109, 113, 127, 128, 140, 141, 142, 149, 161, 164, 168, 169, 179, 215], "cannot": [12, 15], "known": [12, 32, 33, 200, 206, 215], "beforehand": 12, "particularli": [12, 212, 215, 231], "openmp": [12, 19, 29, 32, 39, 84, 118, 120, 121, 127, 140, 179, 206, 215, 217, 218, 219, 220, 222], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 210, 213, 215, 227, 232], "complic": [12, 209, 210, 211, 215], "xml": [12, 102, 104, 105, 117, 213], "slightli": [12, 15, 211], "sophist": 12, "immutable_stream": [12, 215], "var_struct": 12, "var": [12, 103, 215], "var_arrai": 12, "tag": [12, 214], "taken": [12, 19, 127, 200, 206, 215, 222, 232], "past": 12, "experi": [12, 122, 210, 224], "shown": [12, 204, 208, 230], "featur": [12, 210, 211, 213, 215, 216, 227, 230], "difficult": [12, 122, 221], "synchron": [12, 214], "equival": [12, 211, 215, 217], "try": [12, 53, 210, 211, 212, 215, 216, 218, 222, 232], "template_replac": [12, 22, 23], "treat": [12, 207, 210], "jinja2": [12, 22, 23, 102], "render": [12, 22, 23, 102], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 216], "qu240dynamicadjust": 12, "seri": [12, 125, 153, 158, 184, 200, 215, 226], "dynam": [12, 127, 160, 196, 202, 216, 227, 228, 230, 231], "adjust": [12, 125, 160, 196, 216], "durat": [12, 199, 202, 207, 215], "interv": 12, "spin": 12, "reus": [12, 206, 210, 211, 215, 216, 232], "qualit": [12, 15], "affect": [12, 15, 206, 211, 215], "update_streams_at_runtim": 12, "fairli": [12, 208, 210, 211, 215], "hour": [12, 207, 218, 222, 232], "turn": [12, 32, 49, 206, 212, 215, 230], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 224, 227, 230], "minut": [12, 199, 207, 227, 234], "dai": [12, 150, 199, 200, 202, 208, 215, 227, 228, 230], "03d": 12, "_": [12, 87, 206, 208, 211, 215, 230], "02d": 12, "forgotten": 12, "broken": [12, 206, 210], "immedi": [12, 59, 211, 215], "miss": [12, 15, 206, 215, 216], "detect": [12, 16, 216, 217, 219, 220, 221, 232], "gpmeti": [12, 216], "divid": [12, 224], "partition_graph": [12, 19, 127], "circumst": [12, 15, 32, 33, 206, 215], "wast": 12, "manual": [12, 15, 41, 42, 206, 208, 233], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 36, 39, 54, 82, 83, 84, 122, 127, 206, 207, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 232], "v1": [12, 224], "better": [12, 14, 122, 232], "v2": [12, 216, 224], "littl": [12, 210, 211, 214, 215], "feel": [12, 206, 215], "runtime_setup": [12, 14, 29, 39, 199, 208], "onc": [12, 199, 211, 215, 216, 228, 232], "yourself": [12, 215, 221], "fact": [12, 32], "culler": 12, "cull": [12, 199, 206, 215], "model_step": [12, 206], "make_graph_fil": [12, 206], "field": [12, 15, 75, 77, 110, 172, 188, 194, 195, 198, 199, 202, 215, 227, 228], "weight": [12, 14, 77, 188, 194, 195, 215, 224], "weight_field": [12, 77], "frequent": [14, 196], "observ": [14, 214], "dataset": [14, 110, 188, 194, 195, 206, 215], "region": [14, 16, 214, 216], "pyremap": [14, 93], "interpol": [14, 87, 200, 216], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 206, 211], "mappingfilestep": [14, 16], "woa": 14, "2023": 14, "__init__": [14, 17, 19, 32, 41, 45, 50, 59, 60, 67, 73, 87, 111, 126, 127, 133, 134, 136, 138, 140, 143, 146, 148, 150, 153, 156, 158, 160, 161, 164, 167, 170, 172, 174, 176, 177, 179, 180, 182, 184, 203, 206, 208, 209, 210, 213, 215], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 224], "bilinear": [14, 87, 200, 228, 231], "filenam": [14, 34, 35, 81, 88, 89, 90, 91, 95, 96, 97, 108, 112, 114, 206, 211, 215], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 216], "destin": [14, 87, 88, 89, 90, 91, 92, 93], "src_from_lon_lat": 14, "lon_var": [14, 88, 90, 95], "lat_var": [14, 88, 90, 95], "dst_from_mpa": 14, "mesh_nam": [14, 88, 89, 90, 91, 92, 95, 96, 97, 165, 167, 170, 172, 174], "qu60": 14, "subclass": [14, 64, 67, 68, 69, 74, 125, 215], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 161, 172, 200], "super": [14, 203, 206, 208, 209, 210, 215], "128": [14, 207, 218, 219, 222], "cosine_bell_viz": [14, 16, 200, 228, 231], "dlon": [14, 92, 200, 228, 231], "dlat": [14, 92, 200, 228, 231], "remap_method": [14, 200, 228, 231], "src_from_mpa": 14, "dst_global_lon_lat": 14, "lon_min": [14, 92], "With": [14, 211], "approach": [14, 206, 209, 210, 211, 212, 215, 224], "perhap": [14, 16, 35, 209], "cover": [14, 215], "nearli": [14, 206, 213, 214, 215], "situat": [14, 25, 130, 215, 232], "workflow": [14, 206, 211], "critic": [15, 215], "compare_vari": [15, 208, 215], "filename1": [15, 108, 208, 215], "filename2": [15, 108, 215], "simpl": [15, 210, 215, 232], "temperatur": [15, 135, 137, 139, 147, 152, 157, 178, 181, 198, 199, 202, 206, 208, 215, 227, 228, 230, 231], "salin": [15, 135, 137, 139, 147, 152, 157, 178, 181, 198, 199, 202, 206, 208, 215, 227, 228, 230, 231], "prognost": [15, 227], "4proc": [15, 137, 215, 227], "8proc": [15, 137, 215, 227], "alter": [15, 189, 190, 206, 208, 214, 215, 224, 227, 228, 230, 231], "skip_if_step_not_run": [15, 108, 208], "possibli": [15, 206, 211, 215], "failur": 15, "valueerror": [15, 208, 209, 210], "quiet": [15, 99, 108, 113], "report": 15, "threshold": [15, 228], "l1": [15, 108], "00000000000000e": 15, "l2": [15, 108], "l_infin": 15, "linf": [15, 108], "home": [15, 211, 215, 216, 218, 221, 222], "xylar": [15, 215, 216, 221], "test_nightly_latest": 15, "10km": [15, 199, 208, 209, 215, 227, 232, 233, 234], "threads_test": [15, 215, 232, 234], "1thread": [15, 157, 199, 227], "2thread": [15, 157, 227], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 206, 208, 215], "disabl": [15, 16, 198, 228, 233], "check_output": [15, 108], "zero": [15, 189, 190, 191, 192, 193, 198, 199, 202, 215, 228, 230], "l1_norm": [15, 108], "l2_norm": [15, 108], "linf_norm": [15, 108], "nonzero": [15, 108], "easiest": [15, 211], "solut": [15, 121, 200, 207, 212, 215], "clobber": 15, "error": [15, 32, 41, 125, 165, 200, 206, 211, 214, 215], "judgment": 15, "enough": [15, 199, 206, 210, 215], "problem": [15, 206, 211, 212, 215], "compare_tim": 15, "integr": [15, 150, 199, 208, 210, 215, 227, 228, 231], "rundir1": [15, 107], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": [16, 215], "often": [16, 32, 206, 207, 208, 209, 210, 211, 213, 215, 216, 233, 234], "analysi": [16, 125, 199, 208, 210, 213, 214, 216, 228, 233], "routin": 16, "viz": [16, 161], "plot_horiz_field": [16, 215], "patch": [16, 110, 215], "style": [16, 125, 214, 215], "edg": [16, 89, 92, 96, 110, 198, 215], "polygon": 16, "character": 16, "accordingli": [16, 85], "d": [16, 110, 188, 194, 195, 198, 206, 215, 230], "final_normalveloc": [16, 215], "t_index": [16, 110, 215], "vmin": [16, 110, 200, 215, 228], "max_veloc": [16, 215], "vmax": [16, 110, 200, 215, 228], "cmap": [16, 110, 215], "cmo": [16, 215], "balanc": [16, 215], "show_patch_edg": [16, 110, 215], "globe": [16, 200, 228], "plot_glob": 16, "plot_land": [16, 109], "contin": [16, 109], "overlain": 16, "usag": [16, 216, 218, 222], "cmocean": [16, 215], "noqa": [16, 59, 164, 167, 170, 215], "f401": [16, 215], "xr": [16, 215], "open_dataset": [16, 206, 215], "tracer1": 16, "isel": 16, "nvertlevel": [16, 110, 188, 194, 195, 206, 215, 224], "out_filenam": [16, 105, 109, 187], "colormap_sect": [16, 109], "titl": [16, 109, 110], "colormap": [16, 109, 110, 200, 215, 228], "cosin": [16, 164, 167, 170, 172, 174, 200, 228, 231], "bell": [16, 164, 167, 170, 172, 174, 200, 228, 231], "converg": [16, 200, 204, 207, 214, 215, 228, 231], "colormap_nam": [16, 109, 200, 228], "viridi": [16, 200, 215, 228], "norm": [16, 108, 109, 200, 228], "norm_typ": [16, 109, 200, 228], "linear": [16, 109, 110, 200, 215, 227, 228], "norm_arg": [16, 109, 200, 228], "colorbar": [16, 109, 110, 200, 228], "tick": [16, 109, 200, 228], "mark": [16, 200, 211, 228], "ll": [16, 200, 210, 215, 222, 228], "colorbar_tick": [16, 109, 200, 228], "matplotlib": [16, 215], "standard": [16, 210, 211, 215, 218, 232], "symlog": [16, 109], "symmetr": 16, "central": [16, 228], "logarithm": [16, 110], "color": [16, 110], "normal": [16, 198, 206, 207, 211, 215, 221], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 206, 232], "dict": [17, 20, 22, 23, 25, 32, 36, 41, 45, 79, 80, 82, 86, 87, 101, 102, 109, 111, 112, 113, 130, 208, 215], "kei": [17, 41, 45, 101, 208], "cach": [17, 19, 32, 34, 100, 101, 127, 214, 216, 221, 226, 232, 234], "testgroup": [18, 32, 41, 209, 210, 215], "max_memori": [19, 29, 32, 39, 127], "mesh_filenam": [19, 77, 127], "graph_filenam": [19, 77, 127], "graph": [19, 26, 28, 38, 77, 127, 199, 206, 215, 216], "make_yaml": 19, "pio": [19, 28, 31, 127, 199], "stride": [19, 31, 127], "consist": [19, 31, 127, 196, 211, 215, 216, 227], "partit": [19, 28, 38, 54, 77, 127, 199, 206, 216, 217, 218, 219, 220, 222, 232], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 83, 84, 87, 125, 127, 140, 179, 206, 209, 210, 214, 215, 216, 233], "accommod": [19, 29, 32, 39, 83, 84, 127], "fewer": [19, 29, 32, 39, 83, 84, 127, 140, 179, 206, 215, 232], "amount": [19, 29, 32, 39, 127, 206, 223, 230], "memori": [19, 29, 32, 39, 127, 206, 216], "mb": [19, 29, 32, 39, 127, 216], "placehold": [19, 29, 32, 39, 127, 206, 232], "at_setup": [24, 125, 128, 141, 142, 149, 168, 169, 215], "overridden": [25, 130, 206, 208, 215], "diverg": [25, 130], "counterpart": [25, 125, 130], "nest": [25, 111, 113, 130], "graph_fil": 26, "parent": [27, 203, 206, 209], "done": [29, 39, 206, 211, 215, 232], "run_as_subprocess": [32, 206], "smallest": [32, 206, 213, 224, 233], "unit": [32, 88, 92, 95, 206, 213, 227, 233], "term": [32, 213, 215], "necessarili": [32, 34, 213], "input_data": 32, "until": [32, 33, 206, 208, 232], "finish": [32, 33, 74, 215], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 55, 86, 111, 206, 207, 208, 212, 215, 216, 232], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 206, 208], "base_work_dir": [32, 41, 206, 208], "log_filenam": [32, 41, 206], "redirect": [32, 206], "extern": [32, 196, 203, 206, 225], "access": [33, 208, 210, 211, 215, 217, 221, 222], "database_compon": [34, 206], "work_dir_target": [34, 206], "come": [34, 206, 211, 215, 217, 218, 219, 220, 221, 222, 225], "root": [34, 165, 196, 200, 203, 206, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 224, 232], "suffix": [34, 101, 206], "_database_root": 34, "append": 34, "available_resourc": [36, 82], "constrain": [36, 128, 141, 168, 199, 206, 215], "cores_per_nod": [36, 82, 85, 216, 217, 218, 219, 220, 221, 222, 232], "everi": [37, 175, 199, 206, 208, 210, 212, 213, 215, 227, 230], "child": [37, 175, 203, 206, 208, 210], "serial": [38, 206, 208, 214, 215, 232], "subtask": 39, "stdout_logg": 41, "goe": [41, 206, 215], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 132, 208, 210, 215, 232], "statu": 41, "run_by_default": [42, 206, 208], "assum": [43, 102, 112, 208, 211, 215, 222, 227], "prior": [43, 206, 208], "greenland": [45, 209, 213, 214, 233], "eismint2": 45, "step_path": 48, "variant": [48, 199, 207, 209, 210, 211, 215, 221, 224, 227, 228], "uncach": 48, "datestamp": 48, "yymmdd": [48, 216], "dry": [48, 207], "meta": 50, "empti": [50, 206, 210, 211, 213, 215], "link_nam": 53, "overwrit": 53, "stackoverflow": [53, 215], "55742015": 53, "7728169": [53, 215], "symbol": [53, 206], "fileexistserror": 53, "unless": [53, 99, 211], "isadirectoryerror": 53, "slurm": [54, 85, 206, 214, 216, 217, 218, 219, 220, 222, 232], "qo": [54, 217, 218, 220, 221, 222, 232], "qualiti": [54, 217, 218, 220, 221, 222, 232], "servic": [54, 217, 218, 220, 221, 222, 232], "constraint": [54, 222, 232], "wall_tim": [54, 232], "wall": [54, 232], "target_cor": 55, "min_cor": 55, "decomposition_test": [59, 209, 232], "decompositiontest": [59, 209], "e501": [59, 164, 167, 170, 215], "turquois": [59, 218], "usr": [59, 218, 232], "climat": [59, 217, 218, 219, 221, 232], "mhoffman": 59, "latitud": [61, 68, 88, 90, 92, 95, 109, 200, 228, 231], "longitud": [61, 68, 69, 75, 88, 90, 92, 95, 109, 200, 228, 231], "ndarrai": [61, 68, 69, 75, 109, 132, 186, 187, 215], "degre": [61, 68, 69, 75, 92, 216, 227], "length": [61, 68, 69, 75], "180": [61, 68, 69, 75, 92, 228], "90": [61, 68, 69, 75, 206, 228], "static": [62, 63], "rule": 62, "thumb": 62, "achiev": [63, 207], "close": [63, 214, 228], "uniform": [67, 72, 167, 199, 200, 209, 215, 216, 227, 228, 230, 231], "natur": 72, "jigsawpi": [73, 206], "jigsaw_jig_t": 73, "meti": 77, "defaults_filenam": 78, "total": [82, 206, 207, 210, 215, 216, 218, 232], "substep": [83, 84], "command_line_arg": 83, "cpus_per_nod": 85, "map_filenam": 87, "src_grid_info": 87, "dst_grid_info": 87, "neareststod": [87, 200, 228, 231], "conserv": [87, 200, 228, 231], "map_": 87, "source_typ": 87, "dest_typ": 87, "1d": [88, 92, 95, 109, 125, 186, 187, 188, 189, 190, 191, 192, 194, 195], "2d": [88, 92, 95, 109], "5x0": [88, 92, 95], "5degre": [88, 92, 95], "coordin": [88, 90, 91, 95, 97, 109, 110, 188, 194, 195, 223, 225, 227, 228, 230, 231], "mesh_typ": [89, 96, 206, 208, 209], "vertex": [89, 96], "x_var": [91, 97], "y_var": [91, 97], "proj_attr": [91, 97], "proj_str": [91, 97], "proj": [91, 97], "left": [92, 125, 215, 224, 228], "remapp": [93, 94], "remap_fil": 93, "step_is_subprocess": 98, "is_test_cas": 99, "steps_to_skip": 99, "progress": 99, "cached_step": 100, "copy_execut": [100, 101, 106, 232], "serv": [100, 101, 106, 209, 215], "_all": [100, 101], "streams_filenam": 102, "lxml": [102, 104, 117], "etre": [102, 104, 117], "new_child": 103, "children": 103, "sub": [103, 215], "new_tre": 104, "rundir2": 107, "infin": 108, "toler": 108, "exclud": [108, 232], "data_arrai": 109, "colorbar_label": 109, "subtitl": 109, "field_nam": 110, "out_file_nam": 110, "z_index": 110, "cmap_set_und": 110, "cmap_scal": 110, "horizont": [110, 125, 180, 198, 199, 202, 227, 230], "planar": [110, 125, 198, 215, 230, 231], "depth": [110, 125, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 215, 216, 224, 227, 228, 230, 231], "slice": 110, "fieldnam": 110, "present": [110, 211, 215], "visibl": 110, "ax": 110, "classmethod": 112, "jinja": 112, "namelist_templ": 116, "polarisyaml": [116, 117], "processed_registry_filenam": 117, "registri": [117, 198], "steam": 117, "load_dev_polaris_0": [118, 119, 120, 121, 122, 123, 215], "alpha": [118, 119, 120, 121, 122, 123, 215], "1_anvil_intel_impi": [118, 122], "sh": [118, 119, 120, 121, 122, 123, 211, 212, 215, 217, 218, 219, 220, 222, 232], "openmpi": [118, 122, 211, 214, 217, 219, 220, 232], "mvapich": [118, 122, 217], "impi": [118, 122, 217, 220], "ifort": [118, 120, 122, 215, 217, 219], "ve": [118, 119, 120, 121, 123, 206, 211, 215], "1_anvil_gnu_openmpi": 118, "gfortran": [118, 120, 121, 122, 211, 217, 219], "load": [119, 122, 123, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222], "1_chicoma": 119, "cpu_gnu_mpich": [119, 123], "crai": [119, 122, 123, 218, 222], "1_chrysalis_intel_openmpi": 120, "1_chrysalis_gnu_openmpi": 120, "yet": [121, 125, 206, 210, 215], "again": [121, 196, 206, 211, 212, 232], "soon": [121, 215, 232], "1_compy_intel_impi": 121, "1_compy_gnu_openmpi": 121, "attempt": [122, 214, 221], "particular": [122, 209, 211, 214, 218, 221, 232], "activ": [122, 221, 222, 232], "load_polaris_env": [122, 211, 215, 232], "were": [122, 140, 179, 206, 210, 213, 215, 216, 220, 224], "job": [122, 211, 214, 215, 217, 218, 219, 220, 222], "right": [122, 125, 208, 211, 215, 216, 224, 228, 232], "therefor": [122, 206, 213, 215], "gnu": [122, 211, 220, 221, 232], "lib": 122, "intel": [122, 221], "chicoma": [122, 221, 232], "mpich": [122, 211, 214, 218, 222, 232], "compi": [122, 220, 232], "pm": [122, 222, 232], "compymcnodefac": [122, 221], "perlmutt": [122, 218, 221, 232], "pretti": [122, 206, 210, 215, 216], "forg": [122, 214, 232], "linux": [122, 211, 221], "configure_polaris_env": [122, 211, 212, 215], "conda_path": [122, 211], "osx": [122, 221], "clang": [122, 211], "had": 122, "1_": 122, "1_pm": 123, "ever": [125, 210], "expand": [125, 224], "oceanmodelstep": [125, 215], "decid": [125, 215], "veri": [125, 203, 206, 210, 211, 215, 230], "earli": [125, 225, 232], "stage": [125, 198, 206, 208, 211, 225, 232], "map_yaml_to_namelist": 125, "count": [125, 207], "heurist": 125, "exact": [125, 200, 210], "algorithm": [125, 140, 179, 199, 206, 215], "200": [125, 208, 215, 227, 230], "round": [125, 228], "cell_count": [125, 128, 141, 168, 215], "goal_cells_per_cor": [125, 215, 228, 231], "pinch": 125, "2000": [125, 209, 215], "max_cells_per_cor": [125, 215, 228, 231], "seciton": 125, "control": [125, 200, 206, 216, 227, 228, 230, 232], "scale": [125, 227, 232], "tri": [125, 210], "apport": 125, "precis": [125, 206, 215], "caviti": [125, 210, 215, 216, 224], "frazil": 125, "flux": [125, 198, 230], "grid_1d": 125, "generate_1d_grid": 125, "vertical_grid": [125, 186, 188, 194, 195, 209, 215, 216, 224, 227, 228, 230, 231], "z": [125, 189, 190, 191, 192, 193, 194, 195, 215, 227, 228, 230, 231, 234], "star": [125, 193, 195, 215, 227, 228, 230, 231, 234], "init_vertical_coord": [125, 215], "minlevelcel": [125, 188, 190, 191, 192, 193, 194, 195, 215], "maxlevelcel": [125, 188, 189, 190, 191, 192, 193, 194, 195, 206, 215], "cellmask": [125, 188, 191, 194, 195, 215], "zmid": [125, 188, 194, 195, 215], "restingthick": [125, 188, 193, 194, 195, 206, 215], "bottomdepth": [125, 188, 189, 191, 192, 193, 194, 195, 206, 215], "entir": [125, 215, 227, 234], "petersen": [125, 211, 215, 227], "et": [125, 215, 224, 227, 228], "al": [125, 215, 224, 227, 228], "2015": [125, 215, 227], "int_": 125, "rho": 125, "dv": 125, "sort": [125, 204, 210, 211], "increas": [125, 210], "compute_rp": [125, 215], "csv": [125, 215], "dynamic_ntask": 127, "available_cor": 129, "estim": [129, 131, 215], "initial_state_file_nam": [132, 215], "output_fil": [132, 206, 215], "rest": [132, 193, 224, 228], "potenti": [132, 150, 206, 208, 215, 227], "energi": [132, 150, 208, 214, 215, 227], "netcdf": [132, 202, 216, 217, 218, 219, 220, 221, 222], "state": [132, 198, 199, 200, 202, 206, 207, 215, 228], "len": [132, 206, 215], "superclass": [134, 199, 206], "run_time_step": [140, 179, 215], "resources_fix": [140, 179], "shouldn": [140, 179, 215], "dt": [140, 179, 215, 227, 228, 231], "btr_dt": [140, 179, 215, 227], "barotrop": [140, 179, 215, 227, 230], "longer": [146, 199, 207, 215, 227, 228, 234], "shorter": [146, 207], "rpe": [150, 153, 158, 184, 208, 215, 227], "20": [150, 199, 207, 208, 215, 227, 230], "include_viz": 161, "less": [161, 164, 206, 224, 230], "globalocean": [161, 203], "cosinebel": [164, 167, 170, 200], "rmsevalu": 165, "squar": [165, 200], "ncell": [165, 206, 215], "viz_map": 172, "column": [176, 177, 180, 182, 202, 211, 230, 232], "param": [177, 180, 182, 208, 209], "singlecolumn": [177, 180, 202], "iag": 181, "ideal_ag": [182, 184], "ivar": 182, "posit": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 215, 224, 230], "layer": [186, 187, 188, 192, 193, 194, 195, 198, 199, 202, 215, 216, 224, 227, 228, 230, 231], "meter": [186, 187], "bottom": [188, 189, 190, 191, 192, 193, 194, 195, 198, 215, 216, 224, 227, 228, 230, 231], "thick": [188, 192, 193, 194, 195, 199, 202, 215, 216, 224, 227], "stretch": [188, 194, 195, 215, 224], "elev": [188, 194, 195, 215, 224], "midpoint": [188, 194, 195, 215], "reftopdepth": [188, 191, 192, 194, 195, 215], "down": [188, 189, 190, 191, 192, 193, 194, 195, 200, 215, 224, 228], "ref": [188, 194, 195, 215], "middl": [188, 194, 195, 215], "refbottomdepth": [188, 189, 190, 191, 192, 194, 195, 206, 215], "refinterfac": [188, 194, 195, 215], "element": [188, 194, 195, 215], "vertcoordmovementweight": [188, 194, 195, 206, 215], "movement": [188, 194, 195, 215], "partial": [189, 190, 215, 224, 227, 228, 230, 231], "seafloor": [189, 191, 192, 193, 224], "unstretch": 193, "shelv": [196, 216, 224], "ssh_adjust": [196, 206, 208, 216], "iter": [196, 216], "compass_branch": 196, "default_input": [196, 203, 215, 216], "ocean_model": [196, 211, 216], "submodul": [196, 203, 211, 215, 232], "latest": [196, 211, 214, 225, 232], "master": 196, "compat": [196, 211, 212, 214], "verison": 196, "maintain": [196, 232], "recurs": [196, 210, 211, 215, 232], "whichev": [196, 224], "single_column": [196, 201, 225, 229], "design": [197, 206, 208, 210, 214, 221, 227], "minim": 198, "fcell": [198, 206, 215, 228], "fedg": [198, 206, 215, 228], "fvertex": [198, 206, 215, 228], "free": [198, 215, 216], "slip": 198, "solid": [198, 227, 228], "tangenti": 198, "enforc": [198, 211], "nonperiod": 198, "drag": 198, "mass": 198, "momentum": [198, 199], "scalar": 198, "rigid": 198, "veloc": [198, 199, 208, 211, 215, 228, 230, 232], "solv": [198, 212, 224], "mid": [198, 227], "vari": [198, 200, 206, 212, 221, 224, 228], "consult": [198, 215], "tidal_forc": 198, "eddi": [199, 227], "addition": [199, 202, 217, 218, 219, 220, 222], "diffus": [199, 202], "50": [199, 209, 215, 227, 230], "prescrib": 199, "decomptest": [199, 215], "restarttest": [199, 209], "frequenc": 199, "threadstest": 199, "thread_test": 199, "rpetest": [199, 208, 215], "intens": 199, "globalconverg": [200, 210, 215], "studi": [200, 228], "advect": [200, 228, 230], "qu": [200, 215, 216, 226, 228], "ico": [200, 215, 226, 228], "fix": [200, 209, 215], "spheric": [200, 228], "24": [200, 228], "shape": [200, 228], "blob": 200, "around": [200, 215, 216, 227, 228], "rate": [200, 215, 228, 230], "cosine_bell_with_viz": [200, 226], "distribut": 200, "dt_per_km": [200, 215, 227, 228, 231], "rmse": 200, "slow": [200, 228], "exercis": [202, 228, 230], "kpp_test": 202, "mixedlayerdepthsoutput": 202, "enabel": 202, "idealagetrac": [202, 230], "100": [202, 224, 230], "dimens": [202, 227, 230], "single_column_forc": [202, 230], "profil": [202, 212, 230], "throughout": [202, 227, 230], "idealag": 202, "encompass": 203, "perspect": 203, "four": 203, "major": [203, 206], "add_test_group": [203, 210, 215], "variou": [203, 206, 211], "univers": 203, "mix": [203, 209, 230], "ice_shelf_2d": [203, 234], "iceshelf2d": 203, "ziso": [203, 224, 233, 234], "landice_model": [203, 211], "organ": [204, 207, 209, 214], "green": 204, "blue": [204, 217, 232], "orang": 204, "red": 204, "repositori": [204, 214, 215, 232], "laid": 204, "fig": 204, "among": [204, 209, 211, 215], "organiz": 204, "concept": [204, 210, 213, 215, 233], "simul": [206, 213, 215, 226, 227, 231, 232], "multiprocess": [206, 210, 216], "outsid": [206, 211], "emploi": 206, "prevent": 206, "unwant": 206, "outer": 206, "inner": 206, "variable_resolut": [206, 209, 232], "dome_varres_grid": 206, "calcul": [206, 208], "signific": [206, 207, 208], "neglig": 206, "convent": [206, 211, 215], "high": [206, 219, 221], "fit": [206, 216], "applic": [206, 210, 211, 231], "meshstep": 206, "getint": 206, "mesh_cpus_per_task": 206, "mesh_min_cpus_per_task": 206, "previous": [206, 215], "processor": [206, 227], "readi": [206, 215, 222], "write_netcdf": [206, 215], "convers": [206, 215], "generate_grid": 206, "dsmesh": 206, "graphinfofilenam": [206, 215], "use_dist": [206, 215, 227], "gradient_width_dist": [206, 215, 227], "gradient_width_frac": [206, 215, 227], "bottom_temperatur": [206, 215, 227], "surface_temperatur": [206, 215, 227, 230], "temperature_differ": [206, 215, 227], "coriolis_paramet": [206, 215, 227, 230], "bottom_depth": [206, 215, 216, 224, 227, 228, 230, 231], "vert_level": [206, 215, 216, 224, 227, 228, 230, 231], "ones_lik": [206, 215], "xcell": [206, 215], "ycell": [206, 215], "xmin": 206, "min": [206, 215, 227, 230], "xmax": 206, "ymin": 206, "ymax": 206, "ymid": 206, "xperturbmin": 206, "xperturbmax": 206, "perturbationwidth": 206, "yoffset": 206, "sin": [206, 215, 227], "pi": [206, 215, 224, 227, 228], "temp_vert": [206, 215], "frac": [206, 215, 224, 227], "logical_and": [206, 215], "transpos": [206, 215], "3rd": [206, 215], "crest": [206, 215, 227], "wave": [206, 215, 227], "expand_dim": [206, 215], "dim": [206, 215], "axi": [206, 215], "broadcast": [206, 215], "zeros_lik": [206, 215], "xedg": [206, 215], "nedg": [206, 215], "dtype": [206, 215], "xvertex": [206, 215], "commandlin": 206, "explor": [206, 209, 215, 224], "harm": 206, "likewis": [206, 215], "subsequ": [206, 213, 234], "arisen": 206, "now": [206, 211, 215, 216, 221], "omit": [206, 232], "problemat": 206, "usual": [206, 208, 211, 215, 232], "isn": [206, 210, 215], "forwardstep": 206, "mesh_path": 206, "mesh_step": 206, "with_ice_shelf_cav": [206, 208], "initial_state_target": 206, "adjusted_init": [206, 208], "forcing_data": 206, "entha_analy_result": 206, "mat": 206, "enthalpy_benchmark": 206, "ourselv": 206, "reduc": 206, "firewal": 206, "bedmachineantarctica_v2_and_gebco_2022_0": 206, "05_degree_20220729": 206, "slate": 206, "icepresent_qu60km_polar": 206, "practic": [206, 210, 211], "u": [206, 215, 221, 222], "straightforward": 206, "commonli": [206, 213], "expens": [206, 207], "mechan": 206, "notat": [206, 231], "That": [206, 210, 213, 215, 232], "word": 206, "ff": 206, "quwisc240": [206, 210, 232, 234], "90c": 206, "91c": 206, "92": [206, 224], "91": 206, "sowisc12to60": [206, 232, 234], "performance_test": [206, 234], "effici": [206, 215], "transfer": 206, "feasibl": 206, "nor": [206, 215], "add_depend": 206, "unpickl": 206, "overhead": 206, "philosophi": [207, 210, 215], "context": [207, 215], "namesak": 207, "256": [207, 218, 222], "quicker": 207, "32": [207, 232], "exce": 207, "limit": [207, 211, 227], "offer": 207, "benefit": [207, 214], "catch": 207, "bug": 207, "covereag": 207, "timestep": 207, "exhaust": 207, "recent": [207, 225], "merg": 207, "reach": 207, "steadi": 207, "encount": [207, 212], "wet": 207, "fundament": 208, "incorpor": 208, "deprec": 208, "constrain_resourc": [208, 215], "smoke_test": [208, 209], "smoketest": [208, 209], "velo_solv": 208, "sia": [208, 211], "fo": 208, "add_step": [208, 215], "runmodel": 208, "run_step": 208, "0200": 208, "00_00": [208, 215], "fine": [208, 215, 230], "recip": 208, "rpe_test": [208, 210, 215, 232], "res_param": [208, 209], "144": 208, "36": [208, 217, 221, 230, 232], "4km": [208, 209, 215, 227, 232], "unsupport": [208, 209, 211], "enumer": [208, 215], "rpe_test_": [208, 215], "_nu_": [208, 215], "deliber": 208, "chosen": [208, 230], "demonstr": [208, 215], "clumsi": [208, 210], "rpe_test_1_nu_1": [208, 215, 227], "rpe_test_2_nu_5": [208, 215, 227], "filesfore3sm": 208, "configure_global_ocean": 208, "with_bgc": 208, "po4": 208, "no3": 208, "sio3": 208, "nh4": 208, "fe": [208, 218], "o2": 208, "dic": 208, "dic_alt_co2": 208, "alk": 208, "dofe": 208, "dop": 208, "dopr": 208, "donr": 208, "zooc": 208, "spchl": 208, "spc": 208, "spfe": 208, "spcaco3": 208, "diatchl": 208, "diatc": 208, "diatf": 208, "diatsi": 208, "diazchl": 208, "diazc": 208, "diazf": 208, "phaeochl": 208, "phaeoc": 208, "phaeof": 208, "dm": 208, "dmsp": 208, "prot": 208, "poli": 208, "lip": 208, "conceptu": [209, 210], "realist": [209, 214, 233], "2000m": [209, 232], "34": [209, 232], "halfar": 209, "cism": 209, "dome_typ": 209, "closest": 209, "put_origin_on_a_cel": 209, "hydrologi": 209, "hydro": [209, 233], "dome_viz": 209, "time_slic": 209, "save_imag": 209, "hide": [209, 215], "hide_fig": 209, "add_test_cas": [209, 215], "restart_test": [209, 215, 232, 234], "talk": 209, "16": [209, 216, 230, 232], "10e3": 209, "40": [209, 220], "126": 209, "4e3": 209, "160": [209, 215, 227], "500": [209, 215, 216, 224, 227], "held": 209, "initial_condit": 210, "dig": [210, 216], "infrastructur": [210, 215], "background": 210, "behind": 210, "adher": [210, 215], "pep8": [210, 211], "bot": [210, 224], "violat": 210, "pleas": [210, 211, 215, 232], "consid": 210, "editor": 210, "pycharm": [210, 211, 215], "spyder": 210, "linter": 210, "flake8": [210, 211], "discourag": 210, "reformat": 210, "autopep8": 210, "undesir": 210, "util": 210, "lint": 210, "wildcard": 210, "vim": [210, 215], "plugin": 210, "id": [210, 211], "commit": [210, 211], "why": 210, "sound": 210, "subpackag": 210, "understand": [210, 216], "releas": [210, 214, 221, 225, 232], "our": [210, 215, 232], "downstream": 210, "tutori": [210, 211], "clu": 210, "intro": 210, "docstr": [210, 214, 215], "strip": 210, "mpas_ocean": 210, "hidden": 210, "shortcut": [210, 232], "referenc": [210, 215], "mention": 210, "dot": 210, "charact": 210, "unix": [210, 214], "distinct": 210, "mayb": [210, 215], "machine_config": 210, "endswith": 210, "splitext": 210, "exactli": [210, 211, 215, 224], "move": [210, 211, 215, 231], "renam": 210, "visa": 210, "versa": 210, "comfort": [210, 215], "inherit": [210, 215], "orient": 210, "program": [210, 216], "led": 210, "felt": 210, "contribut": 210, "hesit": 210, "predecessor": [210, 213, 214], "harder": 210, "outcom": 210, "augment": 210, "explain": 210, "hope": 210, "dens": 210, "learn": [210, 215], "curv": 210, "worth": [210, 215], "skill": 210, "broadli": 210, "endeavor": 210, "readabl": 210, "manipul": 210, "get_available_cores_and_nod": 210, "theoret": 210, "dozen": 210, "split": 210, "theori": 210, "biogeochemistri": 210, "bash": [211, 212, 215, 232], "ksh": 211, "mac": [211, 214], "csh": 211, "tcsh": 211, "temporarili": 211, "bin": [211, 222, 232], "obtain": [211, 218], "recogn": [211, 216, 232], "mambaforg": [211, 215, 221, 232], "permiss": 211, "miniconda3": 211, "unifi": [211, 222], "anyon": 211, "caus": [211, 218, 222, 224], "person": [211, 212], "base_path_to_install_or_update_conda": 211, "with_albani": 211, "with_netlib_lapack": 211, "with_petsc": 211, "flavor": [211, 215], "login": [211, 218, 222], "troubl": [211, 215], "recognit": 211, "trilino": 211, "downsid": 211, "unneed": 211, "laptop": [211, 215, 216], "workstat": 211, "deploy": 211, "shallow": [211, 228, 231], "hpc": [211, 218, 221], "touch": 211, "update_spack": 211, "reinstal": 211, "scorpio": [211, 221, 232], "esmf": [211, 232], "caution": 211, "deploi": [211, 217, 218, 219, 220, 221, 222], "load_": 211, "encod": 211, "load_dev_polaris_": [211, 215], "env_nam": 211, "dev_polaris_": [211, 212], "workdir": [211, 232], "unexpect": [211, 213, 215], "occur": [211, 212], "safest": 211, "rerun": 211, "echo": 211, "correct": 211, "checkout": [211, 215], "proceed": 211, "notic": 211, "conda_env": [211, 220, 232], "rememb": 211, "recreat": [211, 212], "incorrect": 211, "unus": 211, "session": [211, 215], "pip": 211, "substanti": 211, "risk": [211, 215], "rare": 211, "env_onli": 211, "mpas_make_target": [211, 232], "scientif": [211, 232], "_albani": 211, "instruct": [211, 215], "proce": 211, "es3m": 211, "compli": 211, "memor": 211, "guidelin": 211, "stai": 211, "complianc": 211, "checker": 211, "pre": 211, "isort": 211, "mypi": 211, "77": 211, "e302": 211, "blank": 211, "resolv": 211, "simpler": [211, 215], "mkdir": 211, "fetch": [211, 215], "new_branch_nam": 211, "put": [211, 215], "elsewher": 211, "disk": [211, 216, 218, 222], "respons": 211, "simplest": 211, "your_new_branch": 211, "suggest": 212, "geo": 212, "cartopi": 212, "14": 212, "np110py27_4": 212, "calledprocesserror": 212, "deploy_tmp": 212, "spec": [212, 222], "vpn": 212, "site": 212, "shell": [212, 214], "honor": 212, "wide": 212, "coupl": [212, 214], "spawn": 212, "usernam": [212, 215, 218, 222], "proxy_en": 212, "export": 212, "all_proxi": 212, "proxyout": 212, "8080": 212, "no_proxi": 212, "localhost": [212, 216, 221, 222, 232], "127": 212, "proxy_dis": 212, "unset": 212, "anytim": 212, "fatal": 212, "mpi_init": 212, "stack": 212, "mpir_init_thread": 212, "159": 212, "mpid_init": 212, "164": 212, "mpidi_ch3_init": 212, "95": 212, "mpid_nem_init": 212, "314": 212, "mpid_nem_tcp_init": 212, "173": 212, "mpid_nem_tcp_get_business_card": 212, "395": 212, "getsockinterfaceaddr": 212, "369": 212, "pn2034311": 212, "errno": 212, "host": [212, 216, 221, 232], "mpirun": [212, 216, 217, 218, 219, 220, 221, 222, 232], "srun": [212, 215, 216, 217, 218, 219, 220, 221, 222, 232], "parallel_execut": [212, 216, 217, 218, 219, 220, 221, 222, 232], "plu": 213, "autom": 214, "exascal": 214, "earth": 214, "kept": 214, "sens": [214, 215], "boundari": [214, 227, 233], "expert": 214, "team": 214, "launch": 214, "uncoupl": 214, "evolv": [214, 224, 228, 230], "quick": [214, 215, 225, 234], "queue": 214, "beginn": [214, 215], "worktre": [214, 215], "advanc": [214, 215], "mpas_to_yaml": 214, "troubleshoot": 214, "proxi": 214, "lanl": [214, 216, 218], "gethostbynam": 214, "glossari": 215, "port": [215, 222], "stick": 215, "miniconda": 215, "haven": 215, "3_chrysalis_intel_openmpi": 215, "switch": [215, 216], "strict": 215, "fork": 215, "push": 215, "lowercas": 215, "hyphen": 215, "settl": 215, "desktop": 215, "realli": [215, 222], "nice": [215, 222], "supercomput": 215, "yet_another_channel": 215, "vi": 215, "polaris_head": 215, "yetanotherchannel": 215, "instanc": 215, "repres": [215, 224, 228], "highli": 215, "camelcas": 215, "capit": 215, "letter": 215, "cap": 215, "awkward": 215, "encourag": 215, "enclos": 215, "briefli": 215, "alphabet": 215, "interest": 215, "anyth": 215, "probabl": [215, 221], "suppos": 215, "easili": 215, "tide": 215, "analyz": 215, "hard": [215, 227, 230], "sai": [215, 221], "res_str": 215, "1000": [215, 216, 224, 227], "still": [215, 225, 231, 232], "ti": 215, "loop": 215, "coarsest": [215, 216], "especi": 215, "anticip": 215, "promot": 215, "pattern": 215, "familiar": 215, "seen": 215, "brows": 215, "row": 215, "greater": 215, "disadvantag": 215, "foremost": 215, "magic": 215, "effect": [215, 231], "kind": 215, "pain": 215, "path_to_mpas_ocean": 215, "path_to_working_dir": 215, "sbatch": [215, 221, 232], "job_script": [215, 232], "cat": 215, "slurm_jobid": 215, "_run_test": 215, "gpf": 215, "fs1": 215, "ac": 215, "cbegeman": 215, "successfulli": 215, "x_cell": 215, "y_cell": 215, "grid_typ": [215, 216, 224, 227, 228, 230, 231], "coord_typ": [215, 224, 227, 228, 230, 231], "partial_cell_typ": [215, 224, 227, 228, 230, 231], "min_pc_fract": [215, 224, 227, 228, 230, 231], "everywher": 215, "depress": [215, 224], "x_min": 215, "x_max": 215, "y_min": 215, "y_max": 215, "y_mid": 215, "x_perturb_min": 215, "x_perturb_max": 215, "perturb_width": [215, 227], "y_offset": 215, "normal_veloc": 215, "attr": 215, "mostli": 215, "logic": [215, 227], "northern": [215, 227], "half": [215, 227], "southern": [215, 227], "halv": [215, 227], "gradient": [215, 227, 230], "08": [215, 227], "500km": [215, 227], "40e3": [215, 227], "water": [215, 227, 228, 230, 231], "35": [215, 227, 228, 230, 231, 232], "corioli": [215, 227, 228, 230], "2e": [215, 227], "initial_temperatur": 215, "initial_normal_veloc": 215, "connect": [215, 222], "match": 215, "decomp_test": [215, 232, 234], "light": 215, "fast": 215, "e3sm_compon": 215, "interact": [215, 218, 221, 222, 232], "interrupt": 215, "pty": 215, "navig": 215, "newli": 215, "bunch": 215, "didn": 215, "mistak": 215, "finger": 215, "cross": 215, "initial_normalveloc": 215, "initial_salin": 215, "btr_dt_per_km": [215, 227], "obvious": 215, "stress": [215, 230], "steem": 215, "bring": 215, "landicemodelstep": 215, "huge": 215, "cp": 215, "config_dt": 215, "05": 215, "split_explicit_t": 215, "config_btr_dt": 215, "hmix_del2": 215, "bottom_drag": 215, "cvmix": 215, "0002": 215, "filename_interv": 215, "0100": 215, "input_interv": 215, "initial_onli": 215, "basicmesh": 215, "dayssincestart": 215, "surfacespe": 215, "lowersurfac": 215, "uppersurfac": 215, "ureconstructx": 215, "ureconstructi": 215, "great": 215, "remain": [215, 228, 230], "load_dataset": 215, "final_temperatur": 215, "ab": 215, "fresh": 215, "decomp": 215, "proc": 215, "area": 215, "markdown": 215, "users_guid": 215, "daunt": 215, "flesh": 215, "bonu": 215, "improv": 215, "introduc": 215, "techniqu": 215, "proport": [215, 224, 227, 228, 231], "1384565": 215, "strftime": 215, "gmtime": 215, "run_second": 215, "twice": 215, "guess": 215, "recomput": 215, "aim": 215, "becam": 215, "mainten": 215, "counter": 215, "thought": 215, "yet_another_channel_test_cas": 215, "yetanotherchanneltestcas": 215, "choic": [215, 228], "spuriou": [215, 227], "dissip": [215, 227], "pop": [215, 227], "mom": [215, 227], "mitgcm": [215, 227], "higher": 215, "heavi": 215, "analogi": 215, "tet": 215, "bear": 215, "me": 215, "late": 215, "_add_step": 215, "startswith": 215, "privat": 215, "break": [215, 227], "unusu": 215, "rpe_test_3_nu_10": 215, "rpe_test_4_nu_20": 215, "rpe_test_5_nu_200": 215, "_setup_step": 215, "20_00": 215, "0000": 215, "dayssincestartofsim": 215, "relativevort": 215, "pyplot": 215, "plt": 215, "output_": 215, "sections_yet_another_channel_": 215, "rpe_t": 215, "init_filenam": 215, "ds_init": 215, "_plot": 215, "compact": 215, "dirti": 215, "adopt": 215, "lesson": 215, "tricki": 215, "commun": 215, "nuanc": 215, "fake": 215, "wasn": 215, "fold": 215, "proper": 215, "third": 215, "extens": 216, "single_nod": [216, 217, 218, 219, 220, 221, 222, 232], "multinod": [216, 232], "hopefulli": 216, "explanatori": 216, "my_machin": 216, "extend": 216, "gitconfig": 216, "enter": 216, "author": 216, "asai": 216, "davi": 216, "email": 216, "pull_request": 216, "28": 216, "address": 216, "metadata": 216, "customize_config_pars": 216, "server_base_url": 216, "inej": 216, "check_siz": 216, "ssl": 216, "certif": 216, "core_path": 216, "partition_execut": 216, "dask": 216, "netcdf4": 216, "netcdf4_class": 216, "netcdf3_64bit": 216, "netcdf3_class": 216, "engin": 216, "scipi": 216, "mesh_databas": 216, "ocean_database_root": 216, "landice_database_root": 216, "mesh_cor": 216, "18": [216, 218], "mesh_min_cor": 216, "mesh_max_memori": 216, "mesh_max_disk": 216, "init_cor": 216, "init_min_cor": 216, "init_max_memori": 216, "init_max_disk": 216, "init_thread": 216, "forward_cor": 216, "forward_min_cor": 216, "forward_thread": 216, "forward_max_memori": 216, "forward_max_disk": 216, "add_metadata": 216, "ec": 216, "wc": 216, "mesh_descript": 216, "autodetect": 216, "bathy_descript": 216, "gebco": 216, "2022": 216, "bedmachin": 216, "antarctica": 216, "init_descript": 216, "e3sm_vers": 216, "increment": 216, "mesh_revis": 216, "finest": 216, "min_r": 216, "max_r": 216, "max_depth": 216, "creation_d": 216, "peopl": 216, "contact": 216, "temperaturemax": 216, "statist": 216, "temperature_max": 216, "33": [216, 232], "diagnost": [216, 217, 218, 220, 221, 222, 232], "enable_ocean_initial_condit": 216, "enable_ocean_graph_partit": 216, "enable_seaice_initial_condit": 216, "scrip": 216, "enable_scrip": 216, "transect": 216, "onlin": 216, "member": 216, "offlin": 216, "enable_diagnostics_fil": 216, "coarser": [216, 228], "finer": 216, "comparisonlatresolut": 216, "comparisonlonresolut": 216, "antarct": 216, "polar": [216, 217, 219, 224], "stereograph": 216, "comparisonantarcticstereowidth": 216, "6000": [216, 224], "comparisonantarcticstereoresolut": 216, "arctic": 216, "comparisonarcticstereowidth": 216, "comparisonarcticstereoresolut": 216, "tanh_dz": 216, "3000": 216, "min_layer_thick": [216, 224], "max_layer_thick": [216, 224], "retain": 216, "ecosystem": 217, "gain": 217, "confluenc": 217, "public_html": [217, 219, 221], "polaris_env": [217, 218, 219, 220, 221, 222], "soft": [217, 219, 221, 232], "mpi_intel": [217, 219, 220, 221], "mpi_gnu": [217, 218, 219, 220, 221, 222], "hdf5": [217, 218, 219, 220, 221, 222], "fortran": [217, 218, 219, 220, 221, 222], "pnetcdf": [217, 218, 219, 220, 221, 222], "use_e3sm_hdf5_netcdf": [217, 218, 219, 220, 221, 222], "cobalt": [217, 218, 219, 220, 221, 222], "condo": [217, 232], "acm": [217, 232], "medium": 217, "acme_high": 217, "load_latest_polaris_intel_impi": [217, 220], "load_latest_polaris_gnu_openmpi": [217, 219, 232], "dst": 218, "calendar": 218, "network": 218, "introduct": 218, "platform": 218, "batch": 218, "wtrw": 218, "ch": 218, "lustr": 218, "scratch4": 218, "scratch5": 218, "sacctmgr": 218, "assoc": 218, "cluster": 218, "45": 218, "my": 218, "sshare": 218, "grep": [218, 232], "sreport": 218, "accountutilizationbyus": 218, "2019": 218, "02": 218, "prioriti": 218, "yellow": 218, "chkhome": 218, "petabyt": 218, "df": 218, "bp": 218, "archiv": [218, 222], "hpss": [218, 222], "front": 218, "tn": 218, "storag": 218, "project_nam": 218, "salloc": [218, 221, 222], "account_nam": 218, "gpu": [218, 222], "hyperthread": [218, 222], "hang": [218, 222], "threads_per_cor": [218, 222], "modules_befor": [218, 222], "modules_aft": [218, 222], "shared_clim": [218, 232], "load_latest_polaris_gnu_mpich": [218, 222], "load_latest_polaris_intel_openmpi": 219, "compyf": 220, "app": [220, 232], "pmi2": 220, "submit": 221, "workload": 221, "squeue": 221, "my_usernam": [221, 222], "scancel": 221, "jobid": 221, "cancel": 221, "emtpi": 221, "three": 221, "mpi_mpich": [221, 232], "mpi_openmpi": [221, 232], "nompi": [221, 232], "p1": 222, "nersc": 222, "iri": 222, "filesystem": 222, "myquota": 222, "prjquota": 222, "projectid": 222, "m1795": 222, "hsi": 222, "htar": 222, "zstash": 222, "cf": [222, 232], "cdir": [222, 232], "premium": 222, "cray_compil": 222, "8844": 222, "monik": 222, "browser": 222, "grab": 222, "logon": 222, "kernel": 222, "myenv": 222, "ipykernel": 222, "kernelspec": 222, "u1": 222, "Be": 222, "interpret": 222, "argv": 222, "env": 222, "ipykernel_launch": 222, "connection_fil": 222, "display_nam": 222, "languag": 222, "2500": 224, "deepest": 224, "stewart": 224, "2017": 224, "z_2": 224, "z_1": 224, "mathrm": 224, "tanh": 224, "rightarrow": 224, "infti": 224, "z_k": 224, "z_0": 224, "z_": [224, 230], "k": 224, "finder": 224, "n_z": 224, "h_": 224, "210": [224, 228], "scienc": 224, "hydrograph": 224, "climatologi": 224, "250": 224, "5500": 224, "renorm": 224, "51": 224, "221": 224, "63": 224, "floor": 224, "flat": [224, 227], "collaps": 224, "adcroft": 224, "campin": 224, "2004": 224, "absenc": 224, "squash": 224, "watercolumn": 224, "press": 224, "batymetri": 224, "stair": 224, "month": 225, "year": 225, "websit": 225, "release_6": 225, "ilicak": 227, "2012": 227, "distinguish": 227, "zonal": [227, 230], "meridion": [227, 230], "psu": [227, 230], "cooler": 227, "north": 227, "sinusoid": 227, "perturb": [227, 228], "t_0": 227, "t_b": 227, "t_": 227, "z_b": 227, "y_": 227, "l_x": 227, "warmer": 227, "ge": [227, 228], "gradient_width_fract": 227, "l_y": 227, "le": [227, 230], "flow": [227, 228], "stationari": [227, 230], "literatur": 227, "mk": 227, "celsiu": 227, "williamson": 228, "1992": 228, "sec": 228, "3a": 228, "skamarock": 228, "gassmann": 228, "bodi": 228, "rotat": 228, "transport": 228, "psi": 228, "proportion": 228, "icosohydr": 228, "480": 228, "150": 228, "nearest": 228, "insensit": [228, 230], "300": [228, 231], "passiv": 228, "psi_0": 228, "co": 228, "radiu": 228, "assign": 228, "debug_tracers_1": 228, "equatori": 228, "u_0": 228, "tau": 228, "transit": 228, "equat": [228, 230], "vel_pd": 228, "tendenc": 228, "multipli": 228, "rad": 228, "lat_cent": 228, "lon_cent": 228, "14159265": 228, "2123666": 228, "6667": 228, "hill": 228, "psi0": 228, "qu_conv_thresh": 228, "warn": 228, "qu_conv_max": 228, "icos_conv_thresh": 228, "icos_conv_max": 228, "roughli": 228, "span": 230, "arbitrarili": 230, "virtu": 230, "examin": 230, "400": 230, "phi": 230, "phi_0": 230, "dz": 230, "ml": 230, "mld": 230, "surface_x": 230, "x_gradient_mixed_lay": 230, "mixed_layer_depth_x": 230, "x_difference_across_mixed_lay": 230, "x_gradient_interior": 230, "spatial": 230, "degc": 230, "temperature_gradient_mixed_lay": 230, "temperature_difference_across_mixed_lay": 230, "temperature_gradient_interior": 230, "mixed_layer_depth_temperatur": 230, "25": 230, "surface_salin": 230, "salinity_gradient_mixed_lay": 230, "salinity_difference_across_mixed_lay": 230, "salinity_gradient_interior": 230, "mixed_layer_depth_salin": 230, "scheme": 230, "dictat": 230, "kpp": 230, "restor": 230, "piston": 230, "toward": 230, "temperature_surface_restoring_valu": 230, "temperature_piston_veloc": 230, "salinity_surface_restoring_valu": 230, "salinity_piston_veloc": 230, "temperature_interior_restoring_r": 230, "salinity_interior_restoring_r": 230, "net": 230, "latent": 230, "heat": 230, "bulk": 230, "latent_heat_flux": 230, "sensibl": 230, "sensible_heat_flux": 230, "solar": 230, "shortwav": 230, "shortwave_heat_flux": 230, "evapor": 230, "evaporation_flux": 230, "5e": 230, "rain": 230, "rain_flux": 230, "wind": 230, "wind_stress_zon": 230, "wind_stress_meridion": 230, "characterist": 231, "welcom": 231, "icosohedr": 231, "pertain": 231, "inher": 231, "warrant": 231, "investig": 231, "load_latest_polari": 232, "minu": 232, "create_polaris_load_script": 232, "load_polaris_1": 232, "0_mpich": 232, "wiki": 232, "circular_shelf": 232, "sia_smoke_test": 232, "sia_decomposition_test": 232, "sia_restart_test": 232, "fo_smoke_test": 232, "fo_decomposition_test": 232, "fo_restart_test": 232, "37": 232, "38": 232, "17": 232, "210131_test_new_branch": 232, "fall": 232, "my_config": 232, "smaller": 232, "previous_workdir": 232, "paper": 232, "recompil": 232, "live": 232, "safer": 232, "preserv": 232, "test_subdir": 232, "whatev": 232, "clock": 232, "accord": 232, "j": 232, "exclus": 232, "job_nam": 232, "fo_integr": [232, 234], "full_integr": [232, 234], "sia_integr": [232, 234], "cosine_bell_cached_init": [232, 234], "ec30to60": [232, 234], "ecwisc30to60": [232, 234], "qu240_for_e3sm": [232, 234], "quwisc240_for_e3sm": [232, 234], "wc14": [232, 234], "suitenam": 232, "radial": 233, "analyt": 233, "form": 233, "identifi": 233, "analysis_test": 234, "5km": 234, "20km": 234, "with_frazil": 234, "prohibit": 234}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.job": [[54, 2, 1, "", "get_slurm_options"], [55, 2, 1, "", "write_job_script"]], "polaris.list": [[56, 2, 1, "", "list_cases"], [57, 2, 1, "", "list_machines"], [58, 2, 1, "", "list_suites"]], "polaris.logging": [[59, 2, 1, "", "log_method_call"]], "polaris.mesh": [[60, 0, 1, "", "IcosahedralMeshStep"], [67, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[60, 1, 1, "", "__init__"], [61, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [62, 1, 1, "", "get_cell_width"], [63, 1, 1, "", "get_subdivisions"], [64, 1, 1, "", "make_jigsaw_mesh"], [65, 1, 1, "", "run"], [66, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_cell_width_lat_lon"], [69, 1, 1, "", "make_jigsaw_mesh"], [70, 1, 1, "", "run"], [71, 1, 1, "", "setup"]], "polaris.mesh.planar": [[72, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[73, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, 1, 1, "", "__init__"], [74, 1, 1, "", "run"], [75, 1, 1, "", "save_and_plot_cell_width"], [76, 1, 1, "", "setup"]], "polaris.model_step": [[77, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[78, 2, 1, "", "ingest"], [79, 2, 1, "", "parse_replacements"], [80, 2, 1, "", "replace"], [81, 2, 1, "", "write"]], "polaris.ocean": [[126, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[126, 1, 1, "", "__init__"]], "polaris.ocean.model": [[127, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "compute_cell_count"], [129, 1, 1, "", "constrain_resources"], [130, 1, 1, "", "map_yaml_to_namelist"], [131, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[132, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[133, 0, 1, "", "BaroclinicChannel"], [134, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[133, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[134, 1, 1, "", "__init__"], [135, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[136, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[138, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[140, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "compute_cell_count"], [142, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[143, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "run"], [145, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[146, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[148, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[150, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "configure"], [152, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[153, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "run"], [155, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[156, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[158, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[160, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[160, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[161, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "configure"], [163, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[164, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "rmse"], [166, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[167, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "compute_cell_count"], [169, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[170, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[172, 0, 1, "", "Viz"], [174, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[176, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[176, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[177, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[179, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[179, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.ideal_age": [[180, 0, 1, "", "IdealAge"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.initial_state": [[182, 0, 1, "", "InitialState"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[184, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[186, 2, 1, "", "generate_1d_grid"], [187, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[188, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[189, 2, 1, "", "alter_bottom_depth"], [190, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[191, 2, 1, "", "compute_min_max_level_cell"], [192, 2, 1, "", "compute_z_level_layer_thickness"], [193, 2, 1, "", "compute_z_level_resting_thickness"], [194, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[195, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[82, 2, 1, "", "get_available_parallel_resources"], [83, 2, 1, "", "get_parallel_command"], [84, 2, 1, "", "run_command"], [85, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[86, 2, 1, "", "write"]], "polaris.remap": [[87, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "dst_from_lon_lat"], [89, 1, 1, "", "dst_from_mpas"], [90, 1, 1, "", "dst_from_points"], [91, 1, 1, "", "dst_from_proj"], [92, 1, 1, "", "dst_global_lon_lat"], [93, 1, 1, "", "get_remapper"], [94, 1, 1, "", "runtime_setup"], [95, 1, 1, "", "src_from_lon_lat"], [96, 1, 1, "", "src_from_mpas"], [97, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[98, 2, 1, "", "run_single_step"], [99, 2, 1, "", "run_tests"]], "polaris.setup": [[100, 2, 1, "", "setup_case"], [101, 2, 1, "", "setup_cases"]], "polaris.streams": [[102, 2, 1, "", "read"], [103, 2, 1, "", "update_defaults"], [104, 2, 1, "", "update_tree"], [105, 2, 1, "", "write"]], "polaris.suite": [[106, 2, 1, "", "setup_suite"]], "polaris.validate": [[107, 2, 1, "", "compare_timers"], [108, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[109, 2, 1, "", "plot_global"]], "polaris.viz": [[110, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[111, 0, 1, "", "PolarisYaml"], [115, 2, 1, "", "main_mpas_to_yaml"], [116, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [117, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[111, 1, 1, "", "__init__"], [112, 1, 1, "", "read"], [113, 1, 1, "", "update"], [114, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5, 215], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 125, 211, 215, 217, 218, 219, 220, 221, 222, 227, 228, 230, 231], "same": 1, "implement": 1, "test": [1, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 201, 205, 207, 208, 209, 210, 215, 216, 226, 229, 232, 233, 234], "valid": [1, 2, 15, 44, 107, 108, 135, 137, 139, 147, 152, 157, 163, 178, 181, 208, 215, 232], "api": 2, "refer": [2, 124, 125], "compon": [2, 12, 17, 18, 49, 125, 196, 203, 210, 211, 225, 232], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 206, 210, 211, 214, 232], "framework": [2, 8, 124, 125, 199, 202, 210, 223], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 56, 57, 58], "setup": [2, 4, 6, 30, 40, 66, 71, 76, 100, 101, 131, 145, 155, 206], "suit": [2, 4, 6, 106, 207, 226, 232, 234], "run": [2, 6, 12, 37, 65, 70, 74, 98, 99, 125, 144, 154, 159, 166, 171, 173, 175, 183, 185, 206, 211, 227, 228, 230, 231, 232], "cach": [2, 4, 6, 48, 206], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 210], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 208], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 206, 215, 227, 228, 230, 231], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 125, 215, 216, 217, 218, 219, 220, 221, 222, 227, 228, 230, 231], "io": [2, 9, 51, 52, 53], "job": [2, 54, 55, 221, 232], "log": [2, 10, 59], "mesh": [2, 11, 12, 16, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 200, 215, 227, 228, 230, 231], "model_step": [2, 77], "namelist": [2, 12, 78, 79, 80, 81, 125], "parallel": [2, 82, 83, 84, 85], "proven": [2, 13, 86], "remap": [2, 14, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "stream": [2, 12, 102, 103, 104, 105, 125, 215], "viz": [2, 109, 110, 158, 159, 172, 173, 174, 175, 184, 185, 200, 202, 215], "yaml": [2, 12, 111, 112, 113, 114, 115, 116, 117, 125], "build": [3, 211, 232], "serial": [4, 6, 98, 99], "docstr": 5, "modul": [6, 210, 211], "clean": 6, "file": [7, 12, 125, 206, 215, 216], "comment": 7, "symlink": [9, 53, 206], "download": [9, 51, 206], "spheric": [11, 16, 73, 74, 75, 76], "planar": [11, 16, 72], "uniform": [11, 224], "gener": 11, "model": [12, 125, 127, 128, 129, 130, 131, 197, 215, 232], "an": [12, 125, 215], "e3sm": [12, 125, 211, 232], "ad": [12, 206, 215], "updat": [12, 113, 211], "runtim": 12, "input": [12, 206], "partit": [12, 26], "pio": 12, "make": [12, 215], "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": [16, 215], "horizont": [16, 215], "field": 16, "from": [16, 125, 206, 211, 221], "global": 16, "lat": 16, "lon": 16, "plot": [16, 215], "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 142, 149, 169], "map_yaml_to_namelist": [25, 130], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 94, 206], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 129, 206], "set_resourc": 39, "add_step": 42, "configur": [43, 151, 162, 208, 212], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "get_slurm_opt": 54, "write_job_script": 55, "list_cas": 56, "list_machin": 57, "list_suit": 58, "log_method_cal": 59, "icosahedralmeshstep": [60, 61, 62, 63, 64, 65, 66], "build_subdivisions_cell_width_lat_lon": 61, "get_cell_width": 62, "get_subdivis": 63, "make_jigsaw_mesh": [64, 69], "quasiuniformsphericalmeshstep": [67, 68, 69, 70, 71], "build_cell_width_lat_lon": 68, "compute_planar_hex_nx_ni": 72, "sphericalbasestep": [73, 74, 75, 76], "save_and_plot_cell_width": 75, "make_graph_fil": 77, "ingest": 78, "parse_replac": 79, "replac": 80, "write": [81, 86, 105, 114], "get_available_parallel_resourc": 82, "get_parallel_command": 83, "run_command": 84, "set_cores_per_nod": 85, "mappingfilestep": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "dst_from_lon_lat": 88, "dst_from_mpa": 89, "dst_from_point": 90, "dst_from_proj": 91, "dst_global_lon_lat": 92, "get_remapp": 93, "src_from_lon_lat": 95, "src_from_mpa": 96, "src_from_proj": 97, "run_single_step": 98, "run_test": 99, "setup_cas": [100, 101], "read": [102, 112], "update_default": 103, "update_tre": 104, "setup_suit": 106, "compare_tim": 107, "compare_vari": 108, "globe": 109, "plot_glob": 109, "plot_horiz_field": 110, "polarisyaml": [111, 112, 113, 114], "main_mpas_to_yaml": 115, "mpas_namelist_and_streams_to_yaml": 116, "yaml_to_mpas_stream": 117, "anvil": [118, 217], "intel": [118, 120, 121, 217, 219, 220], "gnu": [118, 119, 120, 121, 123, 217, 218, 219, 222], "chicoma": [119, 218], "cpu": [119, 123, 218, 222], "chrysali": [120, 219], "compymcnodefac": [121, 220], "machin": [122, 211, 221, 232], "support": [122, 197, 211, 221, 232], "other": [122, 206, 215, 221, 232], "perlmutt": [123, 222], "pm": 123, "ocean": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 225], "group": [124, 201, 209, 210, 215, 229], "baroclinic_channel": [124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 199, 227], "global_converg": [124, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 200, 228], "cosine_bel": [124, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 200, 226, 228], "single_column": [124, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 202, 230], "oceanmodelstep": [124, 127, 128, 129, 130, 131], "potenti": [124, 125], "energi": [124, 125], "rpe": [124, 125, 132], "vertic": [124, 125, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 215, 224, 227, 228, 230, 231], "coordin": [124, 125, 215, 224], "v": 125, "map": 125, "omega": 125, "mpa": [125, 198], "set": [125, 211, 232], "mpi": [125, 221], "resourc": 125, "rest": 125, "compute_cell_count": [128, 141, 168], "compute_rp": 132, "baroclinicchannel": 133, "baroclinicchanneltestcas": [134, 135], "decomp_test": [136, 137, 199, 227], "decomptest": [136, 137], "default": [138, 139, 199, 215, 227], "forward": [140, 141, 142, 167, 168, 169, 179, 199, 200, 202, 215], "initial_st": [143, 144, 145, 182, 183, 199, 202, 215], "initialst": [143, 144, 145, 182, 183], "restart_test": [146, 147, 148, 149, 199, 227], "restarttest": [146, 147], "restart_step": [148, 149], "restartstep": [148, 149], "rpe_test": [150, 151, 152, 153, 154, 155, 199, 227], "rpetest": [150, 151, 152], "analysi": [153, 154, 155, 164, 165, 166, 200, 215], "threads_test": [156, 157, 199], "threadstest": [156, 157], "globalconverg": 160, "cosinebel": [161, 162, 163], "rmse": 165, "init": [170, 171, 200], "vizmap": [174, 175], "singlecolumn": 176, "cvmix": [177, 178, 202, 230], "ideal_ag": [180, 181], "idealag": [180, 181], "grid_1d": [186, 187], "generate_1d_grid": 186, "write_1d_grid": 187, "init_vertical_coord": 188, "partial_cel": [189, 190], "alter_bottom_depth": 189, "alter_ssh": 190, "zlevel": [191, 192, 193, 194], "compute_min_max_level_cel": 191, "compute_z_level_layer_thick": 192, "compute_z_level_resting_thick": 193, "init_z_level_vertical_coord": 194, "zstar": 195, "init_z_star_vertical_coord": 195, "initi": [198, 215, 227, 228, 230, 231], "condit": [198, 215, 227, 228, 230, 231], "boundari": 198, "forc": [198, 227, 228, 230, 231], "baroclinic_channel_test_cas": 199, "type": [200, 224], "ideal": [202, 230], "ag": [202, 230], "directori": 204, "structur": 204, "organ": 205, "attribut": [206, 208], "constructor": [206, 208], "output": [206, 215], "copi": 206, "depend": 206, "pull": 207, "request": 207, "pr": 207, "nightli": 207, "case": [208, 210, 215, 216, 232, 233], "overview": 210, "code": [210, 211, 215], "style": [210, 211], "packag": 210, "share": [210, 215], "within": 210, "quick": [211, 232], "start": [211, 215, 232], "develop": [211, 214, 215], "unix": 211, "shell": 211, "up": [211, 232], "repositori": 211, "beginn": 211, "conda": [211, 212, 221, 232], "environ": [211, 212, 232], "spack": [211, 232], "compil": 211, "system": 211, "albani": 211, "petsc": 211, "netlib": 211, "lapack": 211, "unknown": 211, "what": 211, "script": [211, 232], "doe": 211, "flag": 211, "activ": 211, "switch": 211, "between": [211, 215], "differ": 211, "troubleshoot": [211, 212], "creat": [211, 215], "onli": 211, "repo": 211, "worktre": 211, "advanc": 211, "user": [211, 214, 216, 232], "solver": 212, "error": 212, "when": 212, "proxi": 212, "lanl": 212, "mac": 212, "gethostbynam": 212, "fail": 212, "glossari": [213, 214], "": 214, "guid": 214, "tutori": [214, 215], "compass": 214, "new": 215, "get": 215, "vari": 215, "resolut": 215, "paramet": 215, "thing": 215, "out": 215, "defin": 215, "more": 215, "again": 215, "one": 215, "time": [215, 227, 228, 230, 231], "second": 215, "enhanc": 215, "dynam": 215, "comput": 215, "cell": 215, "count": 215, "superclass": 215, "studi": 215, "how": 215, "pass": 215, "data": [215, 222], "A": 216, "slurm": 221, "queue": 221, "mpich": 221, "openmpi": 221, "No": 221, "forg": 221, "jupyt": 222, "notebook": 222, "remot": 222, "1d": 224, "grid": [224, 227, 228, 230, 231], "tanh_dz": 224, "60layerphc": 224, "100layere3smv1": 224, "3d": 224, "z": 224, "star": 224, "level": 224, "cosine_bell_cached_init": 226, "descript": [227, 228, 230, 231], "durat": [227, 228, 230, 231], "core": [227, 228, 230, 231], "thread_test": 227, "cosine_bell_with_viz": 228, "test_group_nam": 231, "test_case_nam": 231, "i": 232, "yet": 232, "load": 232, "standalon": 232}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [203, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [200, "mesh"], [227, "mesh"], [227, "id2"], [227, "id9"], [227, "id17"], [227, "id25"], [227, "id32"], [228, "mesh"], [230, "mesh"], [230, "id3"], [230, "id8"], [231, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [200, "viz"], [202, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"], [215, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [223, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [125, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [125, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[54, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[55, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[56, "polaris-list-list-cases"]], "polaris.list.list_machines": [[57, "polaris-list-list-machines"]], "polaris.list.list_suites": [[58, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[59, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[60, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[61, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[62, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[63, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[64, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[65, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[66, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[71, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[72, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[74, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[75, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[76, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[77, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[78, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[79, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[80, "polaris-namelist-replace"]], "polaris.namelist.write": [[81, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[82, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[83, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[84, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[85, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[86, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[87, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[88, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[89, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[90, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[91, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[92, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[93, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[94, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[95, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[96, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[97, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[98, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[99, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[100, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[101, "polaris-setup-setup-cases"]], "polaris.streams.read": [[102, "polaris-streams-read"]], "polaris.streams.update_defaults": [[103, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[104, "polaris-streams-update-tree"]], "polaris.streams.write": [[105, "polaris-streams-write"]], "polaris.suite.setup_suite": [[106, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[107, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[108, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[109, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[110, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[111, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[112, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[113, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[114, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[115, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[116, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[117, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[118, "anvil"], [217, "anvil"]], "intel": [[118, "intel"], [120, "intel"], [121, "intel"]], "gnu": [[118, "gnu"], [120, "gnu"], [121, "gnu"]], "Chicoma": [[119, "chicoma"], [218, "chicoma"]], "chicoma-cpu, gnu": [[119, "chicoma-cpu-gnu"]], "Chrysalis": [[120, "chrysalis"], [219, "chrysalis"]], "CompyMcNodeFace": [[121, "compymcnodeface"], [220, "compymcnodeface"]], "Machines": [[122, "machines"], [221, "machines"]], "Supported Machines": [[122, "supported-machines"], [221, "supported-machines"]], "Other Machines": [[122, "other-machines"], [221, "other-machines"]], "Perlmutter": [[123, "perlmutter"], [222, "perlmutter"]], "pm-cpu, gnu": [[123, "pm-cpu-gnu"]], "ocean": [[124, "ocean"]], "Test Groups": [[124, "test-groups"], [209, "test-groups"]], "baroclinic_channel": [[124, "baroclinic-channel"], [199, "baroclinic-channel"], [227, "baroclinic-channel"]], "global_convergence": [[124, "global-convergence"], [200, "global-convergence"], [228, "global-convergence"]], "cosine_bell": [[124, "cosine-bell"], [200, "cosine-bell"]], "single_column": [[124, "single-column"], [202, "single-column"], [230, "single-column"]], "Ocean Framework": [[124, "ocean-framework"]], "OceanModelStep": [[124, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[124, "reference-potential-energy-rpe"]], "Vertical coordinates": [[124, "vertical-coordinates"]], "Ocean framework": [[125, "ocean-framework"]], "YAML files vs. namelists and streams": [[125, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[125, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[125, "setting-mpi-resources"]], "Model config options and streams": [[125, "model-config-options-and-streams"]], "Vertical coordinate": [[125, "vertical-coordinate"], [224, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[125, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[126, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[127, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[128, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[129, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[130, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[131, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[132, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[133, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[134, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[135, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[136, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[137, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[138, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[139, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[140, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[141, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[142, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[143, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[144, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[145, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[146, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[147, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[148, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[149, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[150, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[151, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[154, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[155, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[156, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[157, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[158, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[159, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[160, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[161, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[162, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[174, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[175, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[176, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[177, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[178, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[179, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[180, "polaris-ocean-tests-single-column-ideal-age-idealage"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate": [[181, "polaris-ocean-tests-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[182, "polaris-ocean-tests-single-column-initial-state-initialstate"]], "polaris.ocean.tests.single_column.initial_state.InitialState.run": [[183, "polaris-ocean-tests-single-column-initial-state-initialstate-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[184, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[185, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[186, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[187, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[188, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[189, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[190, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[191, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[192, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[193, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[194, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[195, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[196, "ocean-component"], [225, "ocean-component"]], "Models": [[197, "models"]], "Supported Models": [[197, "supported-models"]], "MPAS-Ocean": [[198, "mpas-ocean"]], "Initial conditions": [[198, "initial-conditions"]], "Boundary conditions": [[198, "boundary-conditions"]], "Forcing": [[198, "forcing"]], "framework": [[199, "framework"], [202, "framework"]], "baroclinic_channel_test_case": [[199, "baroclinic-channel-test-case"]], "initial_state": [[199, "initial-state"], [202, "initial-state"]], "forward": [[199, "forward"], [200, "forward"], [202, "forward"]], "default": [[199, "default"], [227, "default"]], "decomp_test": [[199, "decomp-test"], [227, "decomp-test"]], "restart_test": [[199, "restart-test"], [227, "restart-test"]], "threads_test": [[199, "threads-test"]], "rpe_test": [[199, "rpe-test"], [227, "rpe-test"]], "mesh types": [[200, "mesh-types"]], "init": [[200, "init"]], "analysis": [[200, "analysis"]], "Test groups": [[201, "test-groups"], [229, "test-groups"]], "cvmix": [[202, "cvmix"], [230, "cvmix"]], "ideal age": [[202, "ideal-age"], [230, "ocean-single-column-ideal-age"]], "Directory structure": [[204, "directory-structure"]], "Organization of Tests": [[205, "organization-of-tests"]], "Steps": [[206, "steps"]], "Step attributes": [[206, "step-attributes"]], "constructor": [[206, "constructor"], [208, "constructor"]], "constrain_resources()": [[206, "constrain-resources"]], "setup()": [[206, "setup"]], "runtime_setup()": [[206, "runtime-setup"]], "run()": [[206, "run"]], "inputs and outputs": [[206, "inputs-and-outputs"]], "Input files": [[206, "input-files"]], "Symlinks to input files": [[206, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[206, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[206, "downloading-and-symlinking-input-files"]], "Copying input files": [[206, "copying-input-files"]], "Output files": [[206, "output-files"]], "Cached output files": [[206, "cached-output-files"]], "Adding other steps as dependencies": [[206, "adding-other-steps-as-dependencies"]], "Test Suites": [[207, "test-suites"], [232, "test-suites"], [234, "test-suites"]], "Pull-Request (PR) suite": [[207, "pull-request-pr-suite"]], "Nightly suite": [[207, "nightly-suite"]], "Test cases": [[208, "test-cases"]], "TestCase attributes": [[208, "testcase-attributes"]], "configure()": [[208, "configure"]], "validate()": [[208, "validate"]], "Overview": [[210, "overview"]], "Code Style": [[210, "code-style"]], "Packages and Modules": [[210, "packages-and-modules"]], "Packages": [[210, "packages"]], "Modules": [[210, "modules"]], "Classes": [[210, "classes"]], "Code sharing": [[210, "code-sharing"]], "\u2026in the polaris framework": [[210, "in-the-polaris-framework"]], "\u2026within a component": [[210, "within-a-component"]], "\u2026within a test group": [[210, "within-a-test-group"]], "\u2026within a test case": [[210, "within-a-test-case"]], "Quick Start for Developers": [[211, "quick-start-for-developers"]], "Unix Shell": [[211, "unix-shell"]], "Set up a polaris repository: for beginners": [[211, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[211, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[211, "supported-machines"]], "Environments with Albany": [[211, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[211, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[211, "unknown-machines"]], "What the script does": [[211, "what-the-script-does"]], "Optional flags": [[211, "optional-flags"]], "Activating the environment": [[211, "activating-the-environment"]], "Switching between different polaris environments": [[211, "switching-between-different-polaris-environments"]], "Troubleshooting": [[211, "troubleshooting"], [212, "troubleshooting"]], "Creating/updating only the polaris environment": [[211, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[211, "building-e3sm-components"]], "Running polaris from the repo": [[211, "running-polaris-from-the-repo"]], "Code style for polaris": [[211, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[211, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[212, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[212, "proxy-on-lanl-macs"]], "gethostbyname failed": [[212, "gethostbyname-failed"]], "Glossary": [[213, "glossary"], [214, null]], "Polaris": [[214, "polaris"]], "User's guide": [[214, null]], "Developer's guide": [[214, null]], "Tutorials": [[214, null]], "Compass": [[214, "compass"]], "Developer Tutorial: Adding a new test group": [[215, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[215, "getting-started"]], "Making a new test group": [[215, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[215, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[215, "varying-resolution-and-other-parameters"]], "Adding the initial_state step": [[215, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[215, "creating-a-horizontal-mesh"]], "Adding a config file": [[215, "adding-a-config-file"]], "Adding the step to the test case": [[215, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[215, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[215, "creating-an-initial-condition"]], "Adding plots": [[215, "adding-plots"]], "Adding step outputs": [[215, "adding-step-outputs"]], "Adding validation": [[215, "adding-validation"], [215, "id1"]], "Test things out!": [[215, "test-things-out"]], "Adding the forward step": [[215, "adding-the-forward-step"]], "Defining model config options and streams": [[215, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[215, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[215, "adding-more-validation"]], "Test the test case again!": [[215, "test-the-test-case-again"]], "Adding a visualization step": [[215, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[215, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[215, "test-the-test-case-one-more-time"]], "Adding a second test case": [[215, "adding-a-second-test-case"]], "Enhancements": [[215, "enhancements"]], "Adding model config options in code": [[215, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[215, "adding-dynamic-model-config-options"]], "Computing the cell count": [[215, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[215, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[215, "adding-a-parameter-study"]], "Adding the steps to the test case": [[215, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[215, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[215, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[216, "config-files"]], "A \u201cuser\u201d config file": [[216, "a-user-config-file"]], "Test-case config files": [[216, "test-case-config-files"]], "config options": [[217, "config-options"], [218, "config-options"], [219, "config-options"], [220, "config-options"], [221, "config-options"], [222, "config-options"], [227, "config-options"], [227, "id7"], [227, "id14"], [227, "id22"], [227, "id30"], [227, "id37"], [228, "config-options"], [230, "config-options"], [230, "id1"], [230, "id6"], [230, "id13"], [231, "config-options"]], "Intel on Anvil": [[217, "intel-on-anvil"]], "Gnu on Anvil": [[217, "gnu-on-anvil"]], "Chicoma-CPU": [[218, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[218, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[219, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[219, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[220, "intel-on-compymcnodeface"]], "Slurm job queueing": [[221, "slurm-job-queueing"]], "MPICH": [[221, "mpich"]], "OpenMPI": [[221, "openmpi"]], "No MPI from conda-forge": [[221, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[222, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[222, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[222, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[224, "d-grid-type"]], "uniform": [[224, "uniform"]], "tanh_dz": [[224, "tanh-dz"]], "60layerPHC": [[224, "layerphc"]], "100layerE3SMv1": [[224, "layere3smv1"]], "3D vertical coordinates": [[224, "d-vertical-coordinates"]], "z-star": [[224, "z-star"]], "z-level": [[224, "z-level"]], "Test suites": [[226, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[226, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[227, "description"], [227, "id1"], [227, "id8"], [227, "id16"], [227, "id24"], [230, "description"], [230, "id2"], [230, "id7"], [231, "description"]], "vertical grid": [[227, "vertical-grid"], [227, "id3"], [227, "id10"], [227, "id18"], [227, "id26"], [227, "id33"], [228, "vertical-grid"], [230, "vertical-grid"], [230, "id4"], [230, "id9"], [231, "vertical-grid"]], "initial conditions": [[227, "initial-conditions"], [227, "id4"], [227, "id11"], [227, "id19"], [227, "id27"], [227, "id34"], [228, "initial-conditions"], [230, "initial-conditions"], [230, "id5"], [230, "id10"], [231, "initial-conditions"]], "forcing": [[227, "forcing"], [227, "id5"], [227, "id12"], [227, "id20"], [227, "id28"], [227, "id35"], [228, "forcing"], [230, "forcing"], [230, "id11"], [231, "forcing"]], "time step and run duration": [[227, "time-step-and-run-duration"], [227, "id6"], [227, "id13"], [227, "id21"], [227, "id29"], [227, "id36"], [228, "time-step-and-run-duration"], [230, "time-step-and-run-duration"], [230, "id12"], [231, "time-step-and-run-duration"]], "cores": [[227, "cores"], [227, "id15"], [227, "id23"], [227, "id31"], [227, "id38"], [228, "cores"], [230, "cores"], [230, "id14"], [231, "cores"]], "thread_test": [[227, "thread-test"]], "cosine_bell and cosine_bell_with_viz": [[228, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[228, "description"]], "test_group_name": [[231, "test-group-name"]], "test_case_name": [[231, "test-case-name"]], "Quick Start for Users": [[232, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[232, null]], "Loading polaris conda and spack environments": [[232, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[232, "e3sm-supported-machines"]], "Other machines": [[232, "other-machines"]], "Building supported E3SM components as standalone models": [[232, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[232, "setting-up-test-cases"]], "Running a test case": [[232, "running-a-test-case"]], "Running with a job script": [[232, "running-with-a-job-script"]], "Test Cases": [[233, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[54, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[55, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[56, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[57, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[58, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[59, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[60, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[60, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[62, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[63, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[66, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[71, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[72, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[73, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[76, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[77, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[78, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[79, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[80, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[81, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[82, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[83, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[84, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[85, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[86, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[87, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[98, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[99, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[100, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[101, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[102, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[103, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[104, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[105, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[106, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[107, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[108, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[109, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[110, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[111, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[111, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[112, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[114, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[115, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[116, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[117, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[126, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[126, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[127, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[132, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[134, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[134, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[135, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[136, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[136, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[137, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[138, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[138, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[139, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[140, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[140, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[141, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[142, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[143, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[143, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[144, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[145, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[147, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[149, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[154, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[156, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[156, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[157, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[158, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[158, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[159, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[160, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[160, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[175, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[176, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[176, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[177, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[177, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[178, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[179, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[179, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tests.single_column.ideal_age)": [[180, "polaris.ocean.tests.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[180, "polaris.ocean.tests.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[181, "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate"]], "initialstate (class in polaris.ocean.tests.single_column.initial_state)": [[182, "polaris.ocean.tests.single_column.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[182, "polaris.ocean.tests.single_column.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[183, "polaris.ocean.tests.single_column.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[184, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[184, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[185, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[186, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[187, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[188, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[189, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[190, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[191, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[192, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[193, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[194, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[195, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})