Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.viz.compute_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.plot_transect.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.make_triangle_tree.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.horiz.mesh_to_triangles.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.find_transect_levels_and_weights.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells.rst", "developers_guide/ocean/generated/polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "polaris.ocean.viz.compute_transect", "polaris.ocean.viz.plot_transect", "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights", "polaris.ocean.viz.transect.horiz.make_triangle_tree", "polaris.ocean.viz.transect.horiz.mesh_to_triangles", "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells", "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "Tasks", "inertial_gravity_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "Tasks", "inertial gravity wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 19, 21, 38, 46, 49, 50, 53, 136, 139, 154, 163, 164, 171, 174, 179, 184, 197, 242, 275, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 293, 295, 297, 299, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 336, 337, 338, 339, 340, 344, 346], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 67, 72, 74, 77, 80, 81, 91, 93, 95, 96, 102, 107, 108, 109, 110, 113, 114, 136, 139, 141, 147, 149, 151, 152, 154, 155, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 191, 192, 193, 195, 196, 197, 200, 203, 204, 205, 206, 207, 210, 215, 217, 218, 219, 220, 223, 228, 230, 231, 232, 233, 236, 238, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 303, 304, 305, 307, 308, 312, 314, 315, 317, 323, 325, 345, 346], "templat": [0, 5, 6, 7, 28, 29, 30, 115, 126, 130, 136, 139, 149, 152, 167, 173, 279, 280, 281, 286, 287, 315, 316, 317], "date": [1, 2, 5, 55, 275, 291, 297, 309, 317], "2023": [1, 17, 334, 335], "08": [1, 316, 328], "18": [1, 6, 317, 319], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 136, 316, 317, 322], "asai": [1, 317], "davi": [1, 317], "capabl": [1, 2, 6, 17, 136, 293, 296, 316, 322, 340], "design": [1, 136, 276, 293, 295, 296, 315, 322, 328], "here": [1, 6, 9, 12, 14, 17, 18, 136, 139, 278, 288, 289, 292, 293, 295, 296, 297, 312, 316, 317, 318, 319, 320, 321, 322, 323, 329, 330, 331, 332, 336, 337, 338, 339, 340, 344, 345], "abil": [1, 7, 329, 336], "across": [1, 6, 7, 9, 14, 19, 139, 278, 289, 293, 294, 295, 296, 297, 314, 316, 324, 328, 329, 330, 331, 336, 337], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 136, 139, 268, 269, 272, 289, 291, 293, 294, 295, 296, 297, 315, 316, 317, 322, 325, 330, 332, 339, 340, 344, 345, 346], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 62, 66, 68, 71, 72, 75, 76, 77, 81, 92, 93, 95, 96, 102, 107, 110, 120, 132, 133, 134, 135, 136, 137, 139, 141, 147, 151, 155, 158, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 177, 178, 179, 183, 184, 187, 191, 193, 196, 197, 200, 205, 207, 208, 210, 218, 220, 221, 223, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 251, 252, 253, 255, 266, 268, 269, 272, 275, 278, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 308, 309, 313, 314, 315, 316, 317, 319, 322, 323, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 344, 345], "document": [1, 3, 9, 14, 293, 296, 315, 317, 340], "refer": [1, 7, 14, 38, 161, 174, 258, 261, 264, 265, 293, 296, 297, 314, 315, 316, 325, 328, 332, 340], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 34, 47, 107, 113, 114, 170, 178, 289, 290, 291, 293, 294, 295, 296, 297, 299, 316, 317, 322, 328, 330, 338, 339, 340, 343, 344], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 85, 96, 98, 105, 113, 114, 115, 119, 123, 126, 136, 139, 141, 142, 143, 144, 145, 146, 148, 155, 158, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 188, 201, 202, 211, 213, 214, 215, 224, 226, 227, 228, 236, 242, 246, 267, 268, 269, 271, 272, 275, 277, 279, 281, 286, 287, 289, 290, 292, 293, 295, 297, 302, 303, 305, 307, 316, 317, 319, 322, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 63, 91, 92, 93, 136, 139, 155, 165, 236, 278, 279, 280, 281, 282, 286, 287, 293, 295, 296, 297, 316, 318, 319, 320, 321, 323, 328, 340, 345], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 132, 134, 135, 136, 139, 275, 276, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 341, 345, 346], "main": [1, 3, 6, 7, 9, 14, 43, 136, 289, 290, 295, 296, 297, 316, 346], "motiv": 1, "behind": [1, 296], "comput": [1, 7, 13, 14, 15, 79, 136, 139, 142, 143, 146, 150, 153, 155, 156, 161, 166, 190, 194, 212, 216, 225, 229, 261, 262, 263, 272, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 297, 319, 320, 322, 323, 328, 329, 330, 331, 332, 334, 335, 336, 337, 340], "expens": [1, 293, 294], "could": [1, 14, 17, 19, 136, 293, 294, 295, 296, 297, 316, 330], "time": [1, 5, 6, 7, 8, 14, 18, 19, 38, 49, 61, 86, 123, 136, 144, 145, 151, 160, 161, 165, 174, 188, 191, 201, 202, 211, 213, 214, 224, 226, 227, 236, 266, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 293, 294, 295, 296, 297, 312, 313, 314, 317, 319, 323, 340, 345], "order": [1, 5, 8, 13, 14, 139, 268, 269, 279, 280, 281, 282, 286, 287, 290, 293, 294, 297, 316, 329, 330, 331, 332, 335, 336, 337, 338, 340], "reflect": [1, 5, 297], "fact": [1, 14, 38, 136], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 135, 136, 139, 143, 144, 145, 159, 188, 201, 202, 211, 224, 246, 278, 288, 289, 292, 293, 295, 296, 297, 312, 315, 316, 317, 319, 321, 322, 323, 325, 330, 332, 340, 345], "present": [1, 50, 123, 297, 316], "new": [1, 2, 5, 20, 26, 38, 49, 57, 60, 67, 74, 80, 96, 116, 117, 139, 149, 152, 165, 172, 189, 203, 212, 215, 225, 228, 236, 249, 258, 264, 265, 293, 295, 296, 297, 310, 313, 314, 315, 340], "success": [1, 2, 8, 48, 59, 275, 290, 309, 316, 317], "insofar": 1, "guarante": [1, 14, 136, 271, 275, 297, 309], "per": [1, 8, 14, 25, 35, 37, 38, 45, 92, 93, 122, 136, 139, 155, 267, 293, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 344], "slurm": [1, 61, 94, 136, 293, 315, 317, 318, 319, 320, 321, 323, 340], "job": [1, 6, 136, 297, 315, 316, 318, 319, 320, 321, 323], "role": 1, "clear": [1, 2, 296, 316], "should": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 62, 75, 113, 114, 121, 123, 132, 133, 134, 135, 136, 137, 139, 141, 146, 158, 170, 178, 238, 240, 268, 269, 275, 289, 290, 291, 293, 294, 295, 297, 309, 310, 313, 314, 316, 317, 328, 329, 330, 331, 332, 336, 337, 338, 339, 340, 344], "invoc": 1, "serial": [1, 44, 293, 295, 315, 316, 340], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 63, 67, 68, 71, 74, 75, 76, 80, 88, 91, 93, 95, 96, 97, 98, 99, 100, 104, 105, 106, 110, 113, 114, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 139, 141, 149, 152, 158, 160, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 210, 215, 217, 219, 223, 228, 230, 232, 236, 238, 240, 242, 245, 247, 249, 250, 252, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 278, 284, 285, 288, 290, 293, 294, 295, 296, 297, 302, 303, 305, 307, 314, 315, 316, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 343, 344], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 81, 109, 111, 116, 119, 136, 139, 195, 206, 254, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 341, 344], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 66, 67, 74, 80, 96, 125, 139, 140, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 208, 210, 212, 215, 217, 219, 221, 223, 225, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 293, 295, 300, 302, 303, 305, 306, 307, 309, 312, 316], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 100, 106, 107, 141, 269, 284, 285, 316], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 40, 47, 49, 59, 109, 110, 121, 122, 136, 139, 170, 178, 184, 197, 238, 240, 242, 267, 268, 269, 271, 278, 279, 280, 281, 282, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 313, 314, 315, 316, 317, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346], "relat": [1, 6, 7, 11, 13, 14, 136, 139, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 297, 313, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 336, 337, 338, 339, 340, 341], "inform": [1, 5, 7, 8, 38, 96, 120, 131, 212, 225, 293, 295, 297, 317, 319, 326, 340, 341], "belong": [1, 10, 12, 14, 25, 35, 38, 45, 49, 67, 74, 80, 96, 111, 139, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 208, 210, 215, 217, 219, 221, 223, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 268, 269, 289, 290, 293, 295, 296, 302, 303, 305, 306, 307, 316, 345], "locat": [1, 5, 6, 9, 14, 19, 38, 50, 113, 114, 119, 139, 275, 293, 295, 297, 309, 314, 316, 317, 319, 322, 325, 328, 330, 340], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 123, 139, 144, 145, 188, 201, 202, 211, 224, 258, 259, 260, 261, 262, 263, 264, 265, 272, 278, 289, 291, 292, 293, 295, 316, 317, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 344], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 62, 95, 111, 114, 119, 121, 123, 136, 139, 258, 261, 264, 265, 268, 269, 275, 290, 292, 293, 295, 297, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 330, 331, 332, 336, 338, 339, 340, 344, 345], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 92, 93, 95, 114, 120, 136, 139, 140, 143, 144, 155, 165, 188, 201, 211, 224, 236, 246, 258, 264, 265, 275, 278, 289, 290, 291, 293, 294, 295, 296, 297, 300, 309, 314, 315, 316, 317, 322, 325, 326, 328, 329, 330, 331, 332, 336, 337, 339, 340, 341, 344, 346], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 92, 93, 136, 139, 155, 165, 236, 272, 275, 289, 291, 293, 295, 297, 316, 317, 322, 325, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340], "There": [1, 5, 6, 13, 258, 264, 265, 272, 288, 289, 291, 293, 296, 297, 313, 316, 317, 340], "wai": [1, 5, 7, 13, 14, 38, 71, 76, 136, 139, 293, 295, 296, 297, 313, 315, 316, 322, 325, 332, 338], "list": [1, 2, 6, 7, 9, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 86, 92, 93, 110, 113, 114, 119, 120, 123, 139, 141, 149, 152, 161, 176, 180, 184, 187, 197, 200, 210, 219, 221, 223, 232, 236, 242, 245, 247, 252, 293, 294, 295, 296, 297, 303, 314, 315, 316, 317, 319, 322, 323, 329, 330, 331, 336, 337, 340, 345, 346], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 111, 119, 120, 136, 139, 268, 269, 271, 278, 284, 285, 289, 290, 291, 293, 294, 295, 297, 310, 314, 316, 317, 319, 322, 338, 339, 344], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 63, 69, 70, 79, 108, 114, 131, 136, 139, 141, 146, 180, 181, 184, 197, 242, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 303, 304, 312, 314, 316, 317, 322, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 344, 345], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 120, 121, 136, 139, 258, 264, 265, 267, 268, 269, 272, 275, 284, 285, 288, 289, 290, 291, 293, 295, 296, 297, 316, 317, 322, 323, 325, 330, 332, 334, 335, 339, 340, 344, 346], "find": [1, 6, 7, 15, 59, 70, 94, 136, 268, 269, 270, 275, 295, 296, 297, 313, 316, 317, 340], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 123, 136, 139, 275, 277, 279, 280, 281, 282, 286, 287, 288, 290, 293, 295, 296, 309, 312, 315, 316, 317, 319, 322, 323, 325, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 340, 343], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 102, 107, 108, 116, 136, 139, 289, 290, 291, 293, 294, 295, 296, 297, 314, 316, 317, 318, 330, 340, 346], "would": [1, 2, 5, 9, 14, 18, 19, 25, 35, 38, 45, 50, 92, 93, 96, 136, 139, 155, 165, 236, 278, 291, 293, 295, 296, 297, 313, 316, 322, 325, 340], "ident": [1, 2, 5, 18, 163, 171, 179, 278, 293, 294, 296, 302, 316, 328], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 82, 139, 290, 293, 295, 296, 316, 317], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 88, 91, 97, 98, 99, 100, 104, 105, 106, 115, 122, 123, 125, 139, 141, 149, 152, 161, 258, 264, 265, 266, 268, 269, 272, 290, 291, 292, 293, 296, 297, 299, 309, 310, 314, 316, 317, 322, 326, 339, 340, 341, 344], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 69, 136, 139, 275, 293, 297, 314, 316, 317, 325, 332, 338, 340], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 74, 110, 127, 136, 139, 160, 270, 275, 278, 289, 292, 293, 295, 296, 297, 310, 314, 315, 316, 317, 322, 325, 328, 329, 330, 331, 332, 336, 337, 340], "As": [1, 4, 5, 6, 9, 13, 18, 69, 139, 289, 293, 294, 295, 296, 297, 316, 317, 325, 329, 330, 331, 332, 336, 337, 338, 345], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 136, 139, 151, 167, 173, 191, 278, 284, 285, 288, 295, 296, 297, 314, 315, 316, 317, 329, 330, 331, 332, 336, 337, 340, 346], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 62, 63, 109, 110, 111, 112, 114, 136, 278, 292, 293, 295, 297, 314, 315, 316, 317, 318, 319, 320, 321, 323, 326, 328], "proce": [1, 297], "iter": [1, 275, 317], "through": [1, 2, 114, 139, 296, 297, 310, 316], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 60, 67, 69, 70, 98, 105, 115, 117, 121, 130, 136, 141, 146, 155, 192, 204, 250, 267, 268, 269, 270, 271, 273, 274, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 313, 314, 315, 317, 319, 322, 325, 332, 334, 337, 340, 345, 346], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 94, 102, 107, 123, 132, 134, 135, 136, 154, 155, 165, 236, 268, 269, 275, 279, 280, 281, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 309, 310, 313, 314, 316, 317, 325, 328, 330, 334, 338, 340], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 102, 114, 119, 132, 134, 135, 136, 139, 141, 148, 154, 187, 200, 210, 219, 223, 232, 245, 247, 252, 275, 290, 293, 295, 296, 297, 309, 313, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 340], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 139, 154, 160, 162, 170, 178, 186, 199, 209, 222, 234, 244, 258, 264, 265, 289, 290, 295, 297, 301, 310, 315, 318, 319, 320, 321, 323, 340], "initi": [1, 7, 8, 38, 123, 139, 144, 161, 163, 164, 168, 171, 174, 179, 188, 192, 201, 204, 211, 215, 217, 224, 228, 230, 235, 237, 238, 240, 250, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 295, 296, 306, 313, 314, 315, 317, 325, 327, 345, 346], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 63, 65, 109, 110, 114, 119, 120, 123, 136, 139, 155, 238, 240, 266, 267, 277, 289, 293, 295, 310, 316, 317, 319, 321, 323, 328], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 68, 75, 136, 139, 170, 178, 194, 289, 290, 293, 295, 296, 314, 315, 316, 325, 329, 330, 331, 332, 336, 337, 346], "skip": [1, 5, 8, 120, 345], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 60, 120, 121, 122, 123, 127, 132, 133, 134, 135, 136, 137, 139, 155, 237, 267, 269, 277, 289, 293, 297, 316, 317, 318, 319, 320, 321, 322, 323, 328, 340, 346], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 60, 63, 109, 120, 136, 139, 158, 263, 268, 269, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 295, 296, 297, 315, 316, 318, 319, 320, 321, 323, 325, 328, 330, 332, 338, 340, 346], "complet": [1, 5, 8, 27, 28, 29, 107, 316, 340], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 60, 136, 139, 154, 236, 293, 295, 296, 297, 316, 317, 322, 325, 329, 330, 331, 336, 337, 340], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 139, 149, 152, 165, 189, 203, 215, 228, 236, 249, 267, 271, 278, 284, 285, 293, 294, 295, 296, 297, 315, 316, 325], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 136, 155, 293, 296, 297, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 340, 346], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 68, 69, 71, 84, 123, 132, 133, 134, 135, 136, 137, 139, 155, 159, 163, 171, 179, 258, 264, 265, 267, 268, 269, 270, 272, 275, 278, 289, 293, 295, 296, 297, 302, 309, 314, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 336, 337, 340, 345], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 60, 66, 83, 84, 87, 88, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 141, 144, 145, 146, 148, 149, 152, 155, 159, 161, 167, 170, 173, 178, 188, 201, 202, 211, 224, 257, 267, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 294, 295, 296, 297, 303, 309, 310, 312, 313, 314, 315, 319, 322, 323, 325, 328, 329, 330, 331, 332, 336, 337, 339, 340, 343, 344, 346], "mode": [1, 5, 14, 290, 297, 314, 315, 316, 340], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 136, 139, 163, 171, 179, 275, 278, 293, 296, 297, 302, 309, 314, 316, 317, 322, 323, 328, 329, 330, 331, 336, 337], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 88, 91, 95, 114, 115, 125, 126, 127, 139, 149, 152, 158, 293, 295, 296, 316, 330], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 37, 136, 139, 155, 279, 280, 281, 282, 286, 287, 290, 291, 293, 295, 296, 297, 314, 316, 321, 322, 327, 340, 346], "constructor": [1, 9, 14, 139, 278, 284, 285, 289, 316], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 92, 93, 103, 121, 278, 290, 293, 295, 296, 297, 316, 339, 344, 345], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 60, 88, 115, 126, 127, 136, 139, 149, 152, 158, 167, 173, 295, 296, 316, 317, 340], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 62, 65, 67, 74, 80, 95, 96, 111, 113, 119, 125, 136, 141, 149, 152, 154, 155, 162, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 186, 187, 189, 192, 195, 197, 199, 200, 203, 204, 206, 208, 209, 210, 215, 217, 219, 221, 222, 223, 228, 230, 232, 234, 235, 236, 237, 238, 240, 242, 244, 245, 247, 249, 250, 252, 254, 289, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 305, 306, 307, 310, 314, 315, 316, 317, 322, 324, 327, 345, 346], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 67, 74, 80, 96, 139, 141, 149, 152, 155, 165, 187, 189, 192, 195, 200, 203, 204, 206, 210, 215, 223, 228, 236, 245, 247, 249, 250, 252, 254, 293, 295, 303, 316], "now": [1, 6, 136, 293, 297, 316, 317, 322], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 113, 114, 119, 120, 275, 290, 293, 295, 296, 297, 303, 309, 314, 316, 328, 332, 340, 346], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 136, 139, 278, 293, 297, 313, 316, 325], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 136, 165, 236, 278, 293, 294, 296, 297, 313, 316, 325, 328], "parent": [1, 33, 139, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 293], "resid": [1, 5, 9, 40, 139, 141, 187, 200, 210, 223, 245, 247, 252, 291, 293, 295], "insid": [1, 12, 291, 293, 296, 329, 330, 331, 336, 337], "situat": [1, 17, 31, 158, 316, 340], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 38, 39, 40, 120, 275, 278, 289, 291, 293, 295, 296, 297, 314, 316, 317, 328, 340, 345, 346], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 139, 246, 275, 283, 290, 295, 316, 330, 337, 339, 344, 345], "with_viz": [1, 279, 280, 281, 282, 286, 287, 295, 329, 330, 331, 332, 336, 337], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 73, 78, 80, 111, 113, 114, 119, 123, 136, 139, 148, 154, 157, 159, 189, 192, 195, 203, 204, 206, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 292, 293, 295, 296, 297, 309, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 331, 332, 336, 337, 346], "mesh": [1, 5, 7, 10, 17, 25, 38, 84, 85, 96, 98, 105, 122, 123, 141, 142, 144, 145, 149, 150, 152, 153, 155, 156, 157, 159, 161, 164, 166, 168, 184, 187, 188, 189, 190, 192, 195, 197, 200, 201, 202, 203, 204, 206, 210, 211, 212, 215, 216, 217, 219, 223, 224, 225, 228, 229, 230, 232, 235, 237, 238, 242, 245, 247, 249, 250, 252, 254, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 291, 293, 295, 296, 297, 305, 306, 314, 315, 317, 325, 327, 340, 345], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 139, 141, 149, 152, 163, 164, 171, 174, 179, 189, 195, 203, 206, 215, 228, 249, 254, 275, 277, 290, 293, 295, 296, 297, 309, 317, 328, 330, 334, 335, 340], "forward": [1, 5, 7, 9, 14, 38, 139, 141, 149, 152, 161, 164, 172, 174, 195, 206, 235, 237, 254, 275, 290, 293, 295, 296, 306, 309, 317, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 344], "resolut": [1, 9, 13, 14, 17, 67, 70, 74, 75, 79, 97, 101, 104, 139, 141, 142, 146, 148, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 184, 187, 189, 197, 200, 203, 210, 215, 217, 219, 221, 223, 228, 230, 232, 242, 245, 247, 249, 252, 268, 269, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 317, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 344, 346], "singl": [1, 5, 8, 9, 19, 123, 136, 234, 235, 237, 238, 240, 288, 293, 295, 296, 301, 302, 303, 305, 306, 307, 309, 310, 314, 316, 322, 326, 329, 330, 331, 333, 334, 335, 336, 337, 341, 342], "analysi": [1, 6, 9, 19, 139, 278, 295, 296, 314, 315, 317, 329, 330, 331, 334, 335, 336, 337, 346], "add": [1, 2, 5, 6, 7, 9, 13, 14, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 73, 78, 83, 115, 116, 117, 126, 127, 130, 131, 136, 139, 148, 154, 162, 167, 173, 186, 199, 209, 222, 234, 244, 289, 290, 293, 295, 296, 297, 301, 314, 316, 317, 323, 329, 330, 331, 336, 337], "remap": [1, 10, 19, 315, 330, 332, 339, 344], "visual": [1, 10, 13, 17, 219, 232, 279, 280, 281, 282, 284, 285, 286, 287, 289, 293, 295, 314, 315, 329, 330, 331, 332, 334, 335, 336, 337, 339, 344], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 119, 136, 276, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 295, 296, 297, 314, 315, 316, 317, 322, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 345, 346], "spheric": [1, 5, 149, 266, 279, 280, 281, 282, 286, 287, 295, 329, 330, 331, 336, 337, 345], "qu": [1, 5, 139, 295, 316, 317, 327, 329, 330, 331, 332, 336, 337, 345], "base_mesh": [1, 5, 13, 67, 74, 141, 154, 192, 195, 204, 206, 249, 250, 254, 293, 295, 316, 329, 330, 331, 336, 337], "60km": [1, 5, 295, 329, 330, 331, 336, 337], "90km": [1, 5], "120km": [1, 5, 295], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 154, 295], "map": [1, 8, 17, 20, 31, 74, 75, 96, 121, 122, 123, 158, 295, 297, 317], "viz": [1, 5, 19, 139, 184, 197, 242, 293, 295, 329, 331, 336, 337], "two": [1, 5, 10, 18, 120, 139, 171, 181, 268, 269, 278, 279, 288, 289, 290, 293, 294, 296, 297, 302, 304, 316, 328, 329, 330, 331, 334, 335, 336, 337, 343], "first": [1, 6, 9, 14, 15, 86, 114, 136, 139, 268, 269, 278, 284, 285, 288, 293, 295, 296, 297, 313, 316, 318, 319, 320, 321, 322, 323, 328, 330, 332, 338, 340], "verbos": [1, 5, 6, 63, 65, 136, 293, 316, 345], "10": [1, 9, 13, 69, 136, 275, 278, 284, 285, 289, 290, 316, 317, 322, 325, 328, 329, 331, 332, 334, 335, 336, 338, 346], "name": [1, 5, 7, 8, 9, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 60, 61, 62, 63, 67, 74, 80, 84, 88, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 130, 136, 139, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 158, 161, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 188, 189, 192, 195, 201, 202, 203, 204, 206, 211, 215, 224, 228, 236, 242, 245, 246, 247, 249, 250, 252, 254, 257, 267, 289, 290, 293, 295, 296, 297, 303, 305, 307, 314, 316, 317, 323, 328, 340, 345], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 86, 139, 144, 145, 160, 165, 188, 201, 202, 211, 224, 236, 268, 269, 288, 293, 296, 328, 329, 331, 336, 338, 343], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 295, 296, 297, 329, 330, 331, 336, 337], "what": [1, 2, 6, 11, 13, 17, 136, 242, 295, 296, 316, 323, 339, 340, 344], "follow": [1, 4, 5, 7, 9, 13, 14, 19, 66, 136, 141, 258, 264, 265, 275, 277, 293, 294, 295, 297, 309, 310, 313, 316, 317, 322, 323, 325, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 343], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 63, 67, 74, 80, 96, 113, 139, 141, 149, 152, 155, 165, 187, 189, 192, 195, 200, 203, 204, 206, 210, 215, 217, 219, 223, 228, 230, 232, 236, 238, 240, 245, 247, 249, 250, 252, 254, 289, 291, 293, 295, 296, 316, 339, 340, 344, 346], "bold": [1, 295], "elsewher": [1, 297], "tree": [1, 7, 115, 117, 131, 268, 269, 270, 295, 341], "thu": [1, 2, 7, 14, 316, 329, 330, 331, 336, 337], "similar": [1, 2, 5, 9, 12, 13, 14, 133, 136, 137, 139, 289, 291, 296, 297, 316, 317, 325, 329, 331, 336, 337, 340], "had": [1, 136], "maintain": [1, 275, 329, 340], "local": [1, 5, 6, 8, 9, 11, 18, 40, 275, 291, 293, 297, 309, 313, 316, 317, 322, 323, 325], "debug": [1, 8, 132, 133, 134, 135, 136, 137, 316, 318, 319, 320, 321, 323, 329, 336], "easier": [1, 14, 293, 295, 296, 297, 317, 340, 345], "symbol": [1, 60, 293], "link": [1, 2, 7, 9, 11, 14, 40, 46, 53, 60, 136, 289, 293, 295, 297, 316, 322, 326, 340, 341], "were": [1, 48, 136, 236, 273, 274, 293, 296, 314, 316, 317, 321, 325], "even": [1, 6, 12, 13, 14, 40, 57, 136, 293, 296, 297, 316, 317, 322, 340], "compass": [1, 5, 275, 293, 295, 296, 314, 316], "though": [1, 11, 38, 295, 296, 316], "global": [1, 13, 17, 100, 101, 106, 242, 269, 279, 280, 281, 282, 286, 287, 289, 293, 294, 296, 314, 315, 316, 317, 323, 329, 330, 331, 332, 336, 337, 339, 340, 344, 346], "dynamic_adjust": [1, 14, 317], "allow": [1, 2, 8, 17, 18, 25, 35, 38, 45, 57, 120, 136, 139, 155, 268, 269, 293, 314, 316, 317, 322, 325, 329, 330, 331, 336, 337, 338, 346], "one": [1, 2, 5, 6, 7, 10, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 60, 113, 114, 119, 136, 139, 154, 155, 171, 236, 268, 269, 275, 278, 279, 281, 284, 285, 286, 287, 288, 289, 291, 293, 295, 296, 297, 302, 312, 313, 314, 315, 317, 322, 323, 325, 328, 329, 330, 331, 335, 336, 337, 339, 340, 343, 344, 345, 346], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 84, 139, 148, 170, 178, 272, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 316, 338], "port": [1, 316, 323], "instead": [1, 5, 6, 12, 14, 15, 25, 110, 132, 136, 293, 296, 297, 314, 316, 318, 329, 330, 331, 336, 337, 340, 345], "seri": [1, 14, 139, 176, 182, 280, 282, 284, 312, 316, 327], "indic": [1, 7, 8, 14, 17, 18, 19, 38, 39, 107, 114, 123, 136, 139, 261, 268, 269, 271, 291, 293, 313, 316, 317, 325, 338], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 277, 293, 295, 296, 297, 316, 319, 321, 323, 340], "ran": [1, 108], "ico": [1, 5, 139, 295, 316, 327, 329, 330, 331, 336, 337, 345], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 114, 119, 136, 155, 275, 290, 293, 297, 309, 316, 317, 318, 319, 320, 321, 322, 323, 340], "runtim": [1, 8, 14, 30, 44, 139, 151, 167, 173, 191, 293, 316], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 69, 97, 101, 104, 120, 122, 123, 132, 133, 134, 135, 136, 137, 139, 258, 263, 264, 265, 267, 268, 269, 277, 279, 280, 281, 286, 287, 289, 293, 296, 310, 313, 316, 317, 319, 322, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 344], "01": [1, 14, 139, 310, 316, 338, 343], "00": [1, 14, 18, 139, 295, 310, 316, 323, 340], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 340], "02": [1, 319], "59": 1, "icos_map_60km": 1, "20": [1, 174, 278, 294, 316, 328, 338], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 57, 136, 278, 296, 297, 329, 330, 331, 336, 337, 338], "mechan": [1, 293], "prevent": [1, 293], "expect": [1, 2, 12, 17, 136, 139, 290, 293, 297, 316], "affect": [1, 6, 279, 281, 286, 287, 293, 297, 316, 332], "howev": [1, 13, 293, 294, 295, 297, 316], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 67, 120, 136, 139, 149, 152, 164, 165, 170, 174, 178, 189, 203, 215, 228, 235, 236, 237, 249, 272, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 294, 295, 306, 314, 315, 316, 317, 322, 328, 345], "successfulli": [1, 48, 316], "after": [1, 5, 6, 7, 9, 17, 18, 19, 38, 40, 41, 81, 102, 107, 136, 259, 260, 275, 279, 281, 282, 286, 287, 290, 293, 295, 297, 309, 316, 317, 319, 323, 330, 332, 340, 343], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 108, 114, 119, 123, 135, 136, 139, 141, 146, 148, 158, 187, 200, 210, 219, 223, 232, 245, 247, 252, 271, 275, 278, 284, 285, 289, 291, 293, 294, 295, 296, 297, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 336, 337, 340, 345, 346], "remov": [1, 5, 14, 24, 52, 110, 278, 284, 285, 295, 297, 316], "longer": [1, 171, 278, 294, 302, 316, 328, 329, 330, 331, 332, 336, 337], "about": [1, 5, 6, 7, 8, 12, 14, 38, 96, 125, 139, 289, 293, 295, 296, 297, 316, 317, 319, 332, 337], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 50, 57, 75, 136, 139, 167, 173, 275, 279, 280, 281, 282, 286, 287, 290, 293, 295, 296, 297, 309, 310, 313, 315, 316, 317, 318, 322, 323, 325, 328, 329, 330, 331, 336, 337, 340, 345], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 136, 139, 275, 277, 290, 293, 294, 295, 296, 310, 313, 317, 322, 326, 340], "enforc": [1, 277, 297], "framework": [1, 5, 7, 9, 12, 13, 14, 109, 275, 289, 290, 293, 295, 309, 314, 315, 316, 326, 338, 339, 341, 344, 346], "propos": [1, 2], "close": [1, 6, 70, 136, 315, 329, 330, 331, 336, 337], "root": [1, 40, 136, 275, 290, 293, 296, 297, 309, 314, 317, 318, 319, 320, 321, 322, 323, 325, 340], "live": [1, 50, 295, 340], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 68, 75, 76, 79, 82, 96, 102, 120, 139, 155, 171, 180, 212, 225, 258, 264, 265, 267, 268, 269, 272, 274, 279, 280, 281, 282, 286, 287, 290, 291, 293, 295, 296, 302, 303, 322, 325, 328, 329, 332, 334, 335], "think": [1, 5, 316], "condit": [1, 7, 38, 139, 144, 164, 168, 188, 192, 201, 204, 211, 215, 217, 224, 228, 230, 235, 237, 238, 240, 250, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 306, 312, 314, 315, 317, 327, 345, 346], "shown": [1, 14, 19, 136, 291, 338], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 71, 74, 76, 97, 101, 102, 104, 113, 114, 119, 123, 132, 133, 134, 135, 136, 137, 139, 266, 268, 269, 272, 275, 278, 284, 285, 289, 290, 291, 293, 294, 295, 296, 297, 309, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 335, 336, 337, 340, 345, 346], "simpli": [1, 14, 18, 57, 136, 164, 290, 293, 295, 297, 316, 325, 340, 345], "prefer": [1, 2, 136, 293, 294, 316, 317], "convent": [1, 293, 297, 316], "futur": [1, 13, 44, 123, 293, 296, 314, 315, 316, 317, 332, 338, 340, 346], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 120, 136, 139, 155, 275, 288, 290, 293, 296, 297, 299, 309, 310, 314, 315, 316, 317, 322, 325, 328, 335, 338, 340, 345, 346], "independ": [1, 2, 5, 294, 314], "yyyi": 2, "mm": [2, 139, 160], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 84, 85, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 130, 131, 136, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 156, 160, 163, 164, 165, 166, 168, 170, 171, 172, 174, 176, 178, 179, 180, 182, 184, 187, 188, 189, 190, 192, 195, 197, 200, 201, 202, 203, 204, 206, 208, 210, 211, 215, 216, 217, 219, 221, 223, 224, 228, 229, 230, 232, 235, 236, 237, 238, 240, 242, 245, 246, 247, 249, 250, 252, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 299, 300, 303, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346], "purpos": [2, 289, 296, 316, 346], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 75, 121, 122, 127, 136, 139, 155, 158, 256, 258, 264, 265, 275, 279, 280, 281, 282, 286, 287, 288, 289, 290, 293, 294, 296, 297, 309, 313, 316, 317, 318, 319, 320, 321, 322, 323, 325, 329, 330, 331, 332, 336, 337, 338, 339, 340, 344], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 60, 74, 75, 80, 86, 92, 93, 96, 100, 106, 107, 109, 110, 115, 117, 120, 123, 126, 131, 132, 134, 135, 136, 139, 144, 145, 149, 151, 152, 154, 155, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 188, 191, 201, 202, 211, 224, 236, 258, 264, 265, 267, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 303, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346], "summar": 2, "process": [2, 6, 8, 14, 33, 92, 93, 131, 293, 296, 297, 309, 314, 315, 316], "It": [2, 5, 6, 9, 14, 17, 38, 44, 121, 139, 279, 280, 281, 282, 284, 285, 286, 287, 289, 293, 294, 295, 296, 297, 314, 316, 317, 322, 330, 334, 335, 336, 337], "code": [2, 5, 7, 9, 12, 14, 38, 139, 275, 289, 290, 293, 294, 295, 299, 309, 314, 315, 317, 324, 328, 338, 340], "do": [2, 5, 9, 11, 14, 17, 18, 126, 136, 139, 289, 293, 295, 297, 313, 314, 315, 316, 322, 329, 330, 331, 332, 336, 337, 340], "doe": [2, 6, 9, 12, 14, 293, 299, 315, 316, 322], "primari": [2, 5, 9, 316, 345], "challeng": 2, "respect": [2, 8, 9, 14, 19, 139, 142, 268, 269, 293, 296, 329, 330, 331, 336, 337, 339, 344], "softwar": [2, 84, 323, 340], "appropri": [2, 5, 6, 14, 15, 26, 79, 85, 136, 139, 275, 278, 284, 285, 288, 290, 291, 293, 297, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323, 339, 340, 344], "final": [2, 5, 6, 7, 8, 136, 268, 269, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 295, 312, 316, 330, 336], "statement": [2, 12, 293, 314], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 74, 120, 139, 170, 178, 215, 228, 256, 275, 277, 278, 284, 285, 288, 290, 293, 297, 309, 316, 317, 322, 329, 330, 331, 332, 334, 335, 336, 337, 340], "regard": 2, "last": [2, 294, 297, 328, 340], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 115, 117, 139, 155, 175, 278, 284, 285, 293, 295, 297, 315, 316, 317, 328, 340], "your": [2, 4, 5, 6, 11, 136, 275, 296, 297, 309, 313, 316, 317, 318, 319, 322, 323, 329, 330, 331, 336, 337, 340], "appear": [2, 136, 293, 316], "under": [2, 17, 38, 39, 136, 139, 277, 293, 294, 297, 315, 325, 346], "head": [2, 277, 319], "correspond": [2, 6, 7, 120, 136, 139, 141, 271, 275, 293, 297, 309, 328], "discuss": [2, 6, 139, 279, 280, 281, 282, 286, 287, 293, 296, 316, 328], "technic": [2, 7], "issu": [2, 6, 293, 294, 297], "focu": [2, 316], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 114, 119, 125, 130, 132, 133, 134, 135, 136, 137, 145, 149, 151, 152, 163, 165, 167, 171, 172, 173, 174, 179, 191, 202, 236, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 293, 294, 296, 297, 302, 309, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 328, 334, 335, 339], "To": [2, 5, 6, 12, 17, 18, 120, 136, 139, 275, 293, 296, 297, 309, 310, 316, 318, 319, 320, 321, 322, 323, 325, 329, 330, 331, 336, 337, 340], "extent": [2, 13, 17, 316, 328], "possibl": [2, 8, 11, 70, 139, 277, 279, 280, 281, 282, 286, 287, 293, 294, 295, 296, 316, 325, 332], "other": [2, 5, 6, 7, 8, 9, 10, 13, 15, 17, 19, 38, 39, 41, 49, 57, 107, 123, 132, 181, 273, 274, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 295, 296, 297, 304, 313, 314, 315, 317, 318, 328, 329, 330, 331, 336, 337, 346], "clean": [2, 4, 5, 6, 114, 119, 293, 295, 297], "plan": [2, 13, 139, 275, 284, 285, 293, 309, 314, 334, 335, 346], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 114, 132, 136, 139, 143, 144, 188, 201, 211, 224, 246, 277, 278, 284, 285, 288, 293, 296, 297, 316, 317, 318, 326, 329, 330, 331, 332, 334, 335, 336, 337, 340, 341, 346], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 132, 133, 134, 135, 136, 137, 139, 275, 290, 293, 295, 296, 297, 309, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 329, 330, 331, 332, 336, 337, 340, 345, 346], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 96, 100, 106, 120, 126, 136, 139, 155, 160, 165, 236, 268, 269, 275, 278, 284, 285, 288, 289, 290, 291, 293, 294, 295, 296, 297, 309, 312, 313, 314, 315, 316, 317, 322, 326, 330, 336, 339, 340], "intend": [2, 6, 8, 9, 294, 317, 335, 346], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 63, 120, 266, 277, 279, 280, 281, 282, 286, 287, 291, 293, 296, 297, 313, 316, 332, 340], "pde": 2, "solver": [2, 295, 297, 315, 340], "well": [2, 6, 9, 12, 13, 136, 139, 261, 271, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 297, 314, 316, 317, 330, 340, 346], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 60, 84, 88, 93, 97, 98, 99, 100, 101, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 120, 123, 126, 127, 130, 131, 136, 141, 144, 145, 151, 155, 158, 165, 187, 191, 194, 195, 200, 202, 206, 210, 211, 219, 223, 224, 232, 245, 247, 252, 254, 262, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 295, 296, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 343, 344, 345, 346], "low": [2, 123, 332], "variabl": [2, 5, 13, 19, 20, 25, 38, 41, 48, 49, 57, 67, 74, 80, 84, 96, 97, 101, 104, 120, 123, 125, 126, 131, 136, 139, 141, 142, 143, 144, 145, 146, 149, 152, 155, 161, 165, 168, 174, 176, 180, 184, 188, 195, 197, 201, 202, 206, 210, 211, 212, 215, 217, 219, 221, 223, 224, 225, 228, 230, 232, 236, 242, 245, 246, 247, 252, 254, 258, 264, 265, 271, 272, 277, 288, 293, 296, 297, 303, 304, 309, 313, 316, 318, 319, 320, 321, 322, 323, 326, 328, 339, 340, 341, 344], "declar": [2, 7], "interfac": [2, 10, 256, 257, 258, 264, 265, 267, 272, 296, 297, 315, 316, 325], "sequenc": [2, 5, 14, 139, 266, 279, 280, 281, 282, 286, 287, 292, 293, 296, 314, 316, 340, 345, 346], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 60, 92, 93, 94, 96, 107, 120, 123, 132, 133, 134, 135, 136, 137, 139, 155, 160, 165, 236, 278, 293, 295, 296, 297, 310, 313, 314, 316, 317, 322, 323, 325, 329, 330, 331, 332, 336, 337, 339, 340, 344], "want": [2, 5, 6, 11, 14, 17, 18, 51, 136, 139, 293, 295, 297, 313, 316, 317, 322, 323, 338, 340, 346], "math": 2, "syntax": [2, 139, 316], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 297, 314, 316, 340], "2": [2, 6, 13, 14, 15, 18, 39, 123, 136, 139, 179, 277, 278, 281, 286, 287, 291, 294, 297, 303, 310, 316, 317, 319, 322, 325, 326, 328, 330, 332, 333, 334, 335, 340], "2ab": 2, "imag": [2, 7, 19, 121, 122, 123, 267, 289, 316, 339, 344], "keep": [2, 5, 6, 9, 14, 25, 57, 279, 280, 281, 282, 286, 287, 289, 290, 293, 295, 297, 316, 339, 344], "mind": [2, 5, 316], "quit": [2, 291, 293, 295, 316], "small": [2, 9, 44, 136, 268, 269, 289, 293, 316, 318, 319, 324, 325, 336, 338, 340], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 79, 92, 93, 96, 109, 110, 111, 114, 123, 127, 136, 139, 141, 155, 160, 165, 236, 258, 261, 264, 265, 266, 268, 269, 270, 272, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346], "png": [2, 13, 19, 267, 279, 280, 281, 282, 286, 287, 293, 316], "okai": [2, 6, 293, 316], "size": [2, 13, 19, 69, 70, 79, 122, 123, 139, 157, 159, 161, 267, 289, 316, 317, 328, 330, 332, 334, 335, 338, 339, 344], "repo": [2, 5, 6, 136, 275, 309, 315, 316, 341], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 136, 139, 289, 290, 291, 293, 294, 295, 296, 297, 313, 314, 316, 317, 319, 325, 339, 340, 345, 346], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 293, 295, 297, 316], "sourc": [2, 6, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 293, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 316, 317, 318, 319, 320, 321, 322, 323, 340], "project": [2, 5, 6, 7, 66, 100, 106, 275, 296, 297, 309, 310, 316, 317, 318, 319, 322, 340, 341], "manag": [2, 313, 322], "item": [2, 316], "git": [2, 6, 16, 95, 275, 297, 309, 316, 317, 340], "branch": [2, 5, 136, 275, 290, 293, 297, 309, 315, 316, 340], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 293, 297, 322], "block": [2, 295], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 97, 101, 104, 136, 139, 289, 291, 293, 295, 296, 297, 313, 315, 316, 317, 322, 328, 329, 330, 331, 332, 336, 337, 340, 346], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 139, 289, 290, 293, 295, 296, 316], "example_funct": 2, "foo": [2, 296], "return": [2, 7, 15, 31, 48, 56, 59, 61, 68, 69, 70, 75, 79, 85, 86, 88, 91, 92, 102, 111, 112, 114, 115, 117, 120, 123, 126, 130, 131, 139, 142, 143, 144, 145, 150, 153, 154, 156, 158, 160, 161, 166, 188, 190, 194, 201, 202, 211, 213, 214, 216, 224, 226, 227, 229, 246, 256, 259, 260, 261, 262, 263, 266, 268, 269, 270, 271, 272, 273, 274, 295, 296, 316, 330], "how": [2, 5, 6, 12, 14, 74, 139, 292, 293, 295, 296, 297, 317, 322, 323], "show": [2, 7, 13, 266, 267, 293, 316, 322, 323, 328, 329, 330, 331, 332, 336, 337, 339, 344], "met": 2, "regress": [2, 278, 279, 280, 281, 282, 286, 287, 294, 314, 315, 316, 328, 330, 340, 345], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 62, 91, 92, 93, 94, 95, 114, 119, 136, 139, 197, 242, 256, 258, 259, 260, 264, 265, 293, 296, 315, 316, 317, 319, 322, 323, 325, 334, 335, 339, 340, 344, 346], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 62, 95, 109, 111, 114, 119, 135, 136, 170, 178, 195, 206, 254, 291, 292, 293, 294, 295, 296, 297, 313, 314, 316, 317, 322, 329, 330, 331, 332, 336, 337, 338, 340, 346], "properli": [2, 132, 134, 135, 316, 317, 340], "addit": [2, 7, 9, 18, 38, 139, 272, 273, 274, 288, 289, 290, 291, 293, 295, 296, 297, 316, 332], "modif": [2, 7, 293, 310], "nightli": [2, 297, 340, 345], "might": [2, 6, 11, 14, 17, 19, 136, 139, 270, 289, 293, 297, 316, 317, 322, 340], "made": [2, 5, 17, 38, 41, 49, 120, 293, 295, 296, 310, 312, 314, 316, 346], "continu": [2, 6, 293, 316], "page": [3, 7, 136, 318], "auto": 3, "summari": [3, 319], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 75, 113, 114, 136, 139, 277, 278, 279, 280, 281, 282, 286, 287, 289, 291, 293, 294, 295, 296, 297, 314, 322, 326, 328, 332, 339, 340, 341, 344, 346], "relev": [3, 7, 9, 139, 279, 280, 281, 282, 284, 285, 286, 287, 316, 318, 319, 320, 321, 322, 323, 339, 340, 344], "seaic": [3, 10, 20, 40, 290, 293, 312, 314, 315, 340, 341, 344, 346], "long": [4, 25, 35, 38, 45, 92, 93, 155, 165, 236, 293, 316, 328, 340], "procedur": [4, 136, 297, 316, 323], "conda": [4, 5, 16, 95, 132, 134, 135, 136, 275, 290, 296, 309, 315, 316, 317, 318, 319, 320, 321, 323], "environ": [4, 5, 132, 134, 135, 275, 290, 296, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323], "spack": [4, 5, 132, 134, 135, 313, 315, 316, 318, 319, 320, 321, 322, 323], "compil": [4, 5, 6, 14, 132, 133, 134, 135, 136, 137, 313, 315, 316, 318, 319, 320, 321, 322, 323, 340], "system": [4, 5, 6, 25, 35, 38, 45, 92, 93, 94, 132, 134, 135, 136, 155, 165, 236, 293, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 340], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 66, 88, 115, 132, 134, 135, 136, 139, 149, 152, 289, 290, 291, 293, 295, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 327, 340], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 75, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 111, 113, 114, 115, 117, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 137, 151, 167, 170, 173, 178, 185, 191, 198, 236, 243, 258, 264, 265, 268, 269, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 295, 296, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 344, 345], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 81, 95, 107, 108, 111, 113, 114, 119, 120, 132, 133, 134, 135, 136, 137, 139, 170, 178, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 292, 293, 295, 296, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 329, 330, 331, 336, 337, 339, 344, 345, 346], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 88, 95, 115, 119, 126, 136, 139, 149, 152, 289, 290, 291, 292, 293, 295, 297, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 340], "Then": [4, 6, 7, 11, 14, 132, 133, 134, 135, 136, 137, 275, 278, 284, 285, 288, 290, 293, 295, 297, 309, 316, 322, 328, 332, 340], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 66, 91, 92, 93, 102, 114, 119, 135, 136, 141, 149, 151, 152, 155, 164, 165, 167, 171, 173, 176, 180, 182, 187, 189, 191, 200, 203, 210, 215, 219, 223, 228, 232, 235, 236, 237, 245, 247, 249, 252, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 292, 294, 295, 296, 302, 303, 306, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 327, 345, 346], "script": [4, 5, 6, 12, 19, 54, 62, 133, 136, 137, 296, 314, 315, 316, 319, 322], "doc": [4, 7, 316, 323], "cd": [4, 6, 275, 297, 309, 316, 319, 340], "html": [4, 326], "view": [4, 284, 285, 297, 334, 335], "open": [4, 6, 297, 316], "_build": 4, "index": [4, 15, 18, 86, 139, 141, 142, 144, 145, 146, 188, 201, 202, 211, 224, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 289, 316, 325], "act": [5, 296, 325], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 122, 136, 163, 164, 278, 284, 285, 288, 290, 293, 295, 316, 317, 322, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340], "These": [5, 6, 8, 9, 14, 20, 38, 136, 139, 275, 277, 290, 293, 295, 296, 297, 309, 310, 315, 316, 317, 322, 328, 332, 335, 336, 340, 345, 346], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 62, 95, 136, 139, 148, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 294, 295, 313, 314, 316, 319, 322, 323, 326, 328, 329, 330, 331, 332, 336, 337, 341], "describ": [5, 7, 14, 17, 19, 95, 115, 117, 131, 139, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 325, 329, 330, 331, 332, 336, 340], "instal": [5, 6, 136, 297, 316, 322, 323, 340], "abov": [5, 7, 14, 18, 19, 136, 272, 289, 291, 293, 294, 295, 296, 297, 316, 317, 329, 330, 331, 332, 336, 338, 340, 345], "off": [5, 6, 297, 313], "http": [5, 7, 11, 14, 60, 293, 296, 313, 315, 316, 317, 323, 326, 340, 341], "github": [5, 6, 7, 296, 297, 315, 316, 317, 326, 340, 341], "com": [5, 6, 7, 14, 60, 296, 297, 315, 316, 317, 340, 341], "e3sm": [5, 7, 10, 11, 38, 125, 136, 275, 290, 293, 294, 296, 309, 310, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 341], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 60, 67, 68, 74, 75, 80, 96, 103, 113, 114, 119, 125, 136, 139, 141, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 208, 210, 212, 215, 217, 219, 221, 223, 225, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 258, 264, 265, 279, 280, 281, 282, 286, 287, 288, 289, 293, 294, 295, 296, 302, 303, 305, 306, 307, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 329, 330, 331, 336, 337, 340, 345], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 132, 134, 135, 136, 266, 278, 279, 280, 281, 282, 285, 286, 287, 293, 297, 313, 316, 317, 322, 326, 327, 328, 329, 330, 331, 332, 336, 337, 338, 339, 340, 341, 343, 345, 346], "mean": [5, 267, 297, 316, 325, 328, 329, 330, 331, 332, 336, 337, 345], "chang": [5, 6, 8, 17, 74, 107, 108, 139, 148, 275, 290, 293, 294, 295, 296, 297, 309, 314, 316, 317, 319, 323, 325, 328, 329, 330, 331, 336, 337, 340, 345], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 66, 102, 109, 123, 136, 139, 268, 269, 270, 273, 274, 278, 284, 285, 288, 290, 293, 294, 295, 296, 297, 313, 314, 315, 316, 317, 322, 323, 340], "tool": [5, 6, 9, 12, 14, 17, 275, 290, 293, 297, 309, 315, 316, 317], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 62, 75, 84, 89, 92, 93, 96, 102, 109, 120, 121, 122, 123, 124, 125, 126, 131, 132, 136, 139, 141, 142, 143, 144, 146, 150, 153, 155, 156, 157, 158, 159, 160, 165, 166, 167, 173, 180, 184, 188, 190, 197, 201, 211, 216, 221, 222, 224, 229, 236, 242, 246, 247, 252, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 303, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 343, 345, 346], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 63, 66, 72, 77, 91, 92, 93, 95, 96, 109, 110, 111, 113, 114, 119, 136, 139, 155, 157, 159, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 293, 294, 297, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 345], "support": [5, 6, 8, 13, 17, 38, 139, 258, 264, 265, 277, 293, 296, 309, 314, 315, 316, 317, 319, 323, 325, 328, 338, 346], "machin": [5, 8, 9, 38, 40, 61, 62, 95, 113, 114, 119, 275, 293, 296, 309, 315, 316, 317, 318, 319, 320, 321, 323], "option": [5, 7, 9, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 67, 73, 74, 75, 78, 80, 84, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 110, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 142, 144, 145, 148, 149, 151, 152, 155, 158, 160, 165, 167, 173, 175, 185, 188, 191, 198, 201, 202, 211, 212, 224, 225, 236, 238, 240, 243, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 305, 309, 310, 313, 315, 317, 325, 327, 340, 346], "help": [5, 6, 13, 136, 289, 290, 291, 293, 297, 315, 316, 322, 326, 341], "usag": [5, 15, 19, 295, 317, 319, 323], "h": [5, 14, 316, 332], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 131, 136, 139, 141, 146, 213, 214, 226, 227, 236, 279, 280, 281, 282, 286, 287, 293, 295, 296, 297, 313, 316, 317, 319, 321, 322, 327, 328, 329, 331, 334, 335, 336, 340, 345, 346], "n": [5, 6, 68, 75, 76, 82, 293, 316, 319, 322, 323, 328, 330, 332, 334, 335, 339, 340, 344], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 61, 62, 63, 67, 68, 69, 70, 71, 79, 91, 92, 93, 96, 114, 136, 139, 150, 153, 155, 156, 157, 159, 165, 166, 180, 190, 212, 216, 225, 229, 236, 275, 278, 284, 285, 289, 293, 294, 295, 296, 303, 314, 316, 317, 322, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 344], "v": [5, 297, 316, 329, 331, 332, 334, 335, 336, 345], "By": [5, 14, 18, 39, 40, 139, 275, 290, 293, 295, 309, 316, 317, 328, 330, 338], "default": [5, 7, 9, 14, 15, 18, 19, 25, 39, 40, 49, 55, 62, 75, 80, 86, 87, 95, 96, 97, 101, 104, 110, 114, 116, 119, 123, 132, 134, 135, 136, 139, 143, 144, 165, 188, 201, 211, 224, 275, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 297, 309, 310, 315, 317, 318, 319, 320, 321, 322, 323, 325, 329, 330, 331, 336, 337, 338, 339, 340, 344, 346], "planar": [5, 9, 123, 139, 268, 277, 290, 293, 316, 334, 335, 338, 339, 344, 345, 346], "baroclinic_channel": [5, 7, 9, 14, 18, 275, 283, 289, 290, 293, 296, 316, 328, 340, 345, 346], "10km": [5, 18, 278, 316, 328, 340, 345, 346], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 69, 132, 133, 134, 135, 136, 137, 139, 163, 165, 179, 235, 236, 237, 258, 264, 265, 267, 268, 269, 278, 279, 280, 281, 284, 285, 286, 287, 288, 290, 291, 293, 295, 297, 310, 313, 316, 317, 319, 322, 323, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340], "decomp": [5, 290, 316, 340, 345], "displai": [5, 8, 267, 323], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 60, 63, 66, 95, 111, 113, 114, 119, 120, 123, 136, 141, 275, 290, 293, 295, 296, 297, 303, 309, 314, 316, 317, 318, 319, 320, 321, 322, 323, 340, 346], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 60, 62, 95, 96, 109, 111, 113, 114, 119, 120, 136, 155, 163, 164, 165, 168, 170, 171, 172, 174, 176, 178, 179, 180, 182, 195, 206, 236, 254, 275, 278, 290, 292, 293, 294, 295, 296, 297, 303, 305, 307, 309, 310, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 329, 330, 331, 332, 336, 337, 340, 346], "messag": [5, 8, 136, 293, 313, 323], "task_expr": [5, 63], "flag": [5, 6, 136, 293, 296, 313, 314, 316, 317, 326, 328, 340, 341], "suppli": [5, 6, 7, 15, 18, 123, 131, 136, 293, 297, 316], "substr": [5, 136], "regular": [5, 19, 63, 68, 75, 184, 197, 242, 247, 252, 316, 318, 321, 322, 323, 332, 340], "express": [5, 63], "subset": 5, "search": [5, 63, 319], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 69, 79, 85, 88, 92, 93, 110, 115, 117, 120, 126, 139, 141, 142, 145, 146, 154, 155, 174, 202, 261, 268, 269, 272, 278, 288, 293, 295, 313, 315, 316, 317, 328, 329, 330, 331, 332, 336, 337, 338, 339, 340, 344, 345], "pass": [5, 8, 9, 12, 13, 14, 18, 79, 120, 121, 139, 289, 290, 293, 295, 296, 297, 314, 340], "similarli": [5, 8, 123, 272, 275, 293, 295, 297, 322, 340], "result": [5, 13, 18, 59, 70, 79, 136, 139, 163, 171, 176, 179, 182, 240, 268, 269, 270, 273, 274, 278, 279, 280, 281, 282, 286, 287, 293, 294, 296, 297, 302, 307, 314, 316, 317, 328, 329, 330, 331, 332, 336, 337, 339, 344, 345], "descript": [5, 7, 316, 317, 326, 341], "short": [5, 164, 235, 237, 293, 294, 295, 296, 306, 316, 328], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 62, 91, 92, 93, 119, 136, 139, 140, 155, 163, 164, 235, 237, 278, 288, 289, 290, 293, 294, 295, 296, 310, 314, 316, 317, 318, 319, 320, 321, 322, 323, 340, 345], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 119, 121, 122, 123, 136, 139, 141, 155, 277, 293, 295, 297, 316, 325, 332, 346], "built": [5, 14, 114, 119, 136, 275, 290, 297, 309, 315, 317, 322, 340], "standalon": [5, 14, 135, 136, 290, 297, 314, 315, 322, 341], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 38, 40, 66, 84, 98, 105, 115, 117, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 140, 155, 158, 161, 212, 225, 242, 257, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 293, 296, 297, 300, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 332, 334, 338, 339, 340, 341, 344, 345, 346], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 114, 119, 136, 293, 295, 296, 297, 313, 316, 319, 323, 325, 329, 330, 331, 332, 336, 337, 340], "num": 5, "f": [5, 9, 11, 18, 139, 194, 290, 293, 295, 296, 297, 316, 317, 323, 328, 332, 334, 340], "m": [5, 6, 14, 68, 75, 76, 82, 268, 269, 278, 288, 289, 297, 316, 318, 319, 320, 321, 323, 325, 328, 330, 331, 332, 336, 338, 340], "mach": [5, 9, 38, 136, 315, 318, 319, 320, 321, 322, 323, 340], "w": [5, 6, 297, 314, 316, 340], "p": [5, 6, 297, 316, 317, 340], "suite_nam": [5, 8, 110, 112, 114, 119, 340], "copy_execut": [5, 114, 119, 340], "specifi": [5, 6, 14, 17, 18, 19, 40, 136, 139, 277, 293, 297, 312, 316, 317, 323, 328, 329, 330, 331, 336, 337, 339, 340, 344], "altern": [5, 13, 293, 310, 340], "task_numb": 5, "multipl": [5, 9, 14, 136, 276, 294, 295, 296, 297, 316, 322, 328, 340], "test": [5, 7, 8, 9, 19, 49, 50, 55, 62, 91, 92, 93, 112, 120, 136, 140, 141, 147, 149, 152, 162, 164, 165, 171, 172, 174, 175, 176, 177, 179, 184, 185, 186, 187, 189, 192, 195, 196, 197, 198, 199, 200, 203, 204, 206, 207, 208, 209, 210, 212, 215, 217, 218, 219, 220, 221, 222, 223, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 301, 302, 305, 306, 307, 308, 309, 312, 314, 315, 321, 322, 323, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345], "separ": [5, 7, 9, 14, 17, 18, 19, 141, 293, 294, 314, 316, 329, 330, 331, 336, 337, 340], "space": [5, 6, 7, 9, 13, 136, 284, 285, 293, 297, 316, 319, 322, 325, 332, 340], "requir": [5, 6, 8, 14, 25, 35, 38, 39, 45, 96, 139, 155, 165, 236, 275, 289, 290, 293, 294, 295, 296, 297, 309, 310, 313, 315, 316, 317, 322, 325, 326, 339, 340, 341, 344, 346], "few": [5, 13, 14, 25, 35, 38, 45, 92, 93, 136, 155, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 296, 316, 317, 322], "basic": [5, 7, 317, 319, 322, 332, 340], "piec": [5, 289, 290, 316], "abl": [5, 132, 133, 134, 135, 137, 139, 293, 294, 297, 316, 322, 340], "place": [5, 6, 14, 121, 136, 289, 293, 295, 310, 316, 322], "download": [5, 6, 8, 10, 38, 40, 47, 136, 170, 178, 295, 296, 297, 317, 340, 345], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 136, 139, 268, 269, 277, 279, 280, 281, 282, 286, 287, 289, 291, 293, 295, 296, 297, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 340, 341, 345, 346], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 102, 115, 117, 118, 121, 122, 123, 125, 131, 136, 139, 258, 264, 265, 266, 268, 269, 271, 273, 274, 293, 297, 315, 317, 318, 319, 320, 321, 322, 340, 345, 346], "r": [5, 194, 323, 329, 330, 331, 336], "tell": [5, 6, 136, 297], "re": [5, 6, 9, 295, 296, 297, 314, 316, 317, 322, 323, 329, 330, 331, 336, 337], "leav": [5, 19, 317, 330], "unknown": [5, 136, 296, 322], "component_path": [5, 9, 114, 119, 275, 290, 309, 317, 340], "absolut": [5, 9, 38, 40, 57, 114, 119, 275, 290, 293, 297, 309, 340], "landic": [5, 6, 12, 20, 40, 66, 119, 289, 290, 292, 293, 295, 297, 314, 315, 316, 317, 340, 346], "e3sm_submodul": [5, 275, 290, 297, 309, 310, 316], "mali": [5, 136, 290, 293, 297, 314, 316, 317, 340, 346], "dev": [5, 6, 7, 279, 281, 282, 286, 287, 289, 290, 292, 293, 296, 297, 315, 316, 326, 340, 341], "albani": [5, 132, 134, 135, 136, 290, 317, 318, 319, 320, 323, 340], "depend": [5, 14, 17, 19, 38, 39, 47, 107, 108, 136, 139, 141, 170, 178, 187, 200, 210, 223, 245, 247, 252, 295, 297, 314, 315, 316, 317, 322, 323, 325, 329, 330, 331, 336, 337, 340, 346], "whether": [5, 8, 13, 14, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 60, 63, 109, 110, 114, 119, 120, 121, 122, 123, 127, 136, 139, 151, 154, 155, 167, 173, 184, 191, 197, 236, 238, 240, 242, 247, 252, 266, 267, 269, 284, 285, 289, 293, 295, 297, 313, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344], "omega": [5, 31, 125, 155, 158, 212, 225, 275, 290, 296, 297, 314, 316, 326, 332, 334, 335, 340], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 61, 62, 73, 75, 78, 91, 92, 93, 94, 95, 111, 113, 114, 119, 121, 122, 125, 126, 127, 128, 130, 131, 148, 149, 151, 152, 155, 158, 160, 167, 173, 174, 184, 185, 191, 197, 198, 212, 225, 242, 243, 256, 258, 259, 260, 264, 265, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 309, 310, 313, 315, 325, 340, 346], "point": [5, 6, 9, 54, 60, 99, 136, 268, 269, 272, 275, 277, 289, 290, 295, 296, 297, 309, 316, 317, 322, 336, 340], "much": [5, 6, 14, 293, 316], "config_fil": [5, 9, 114, 119], "work_dir": [5, 11, 38, 49, 62, 95, 113, 114, 119, 120, 293, 295, 316], "recommend": [5, 7, 11, 19, 136, 293, 294, 296, 297, 316, 322], "itself": [5, 6, 7, 9, 38, 46, 53, 289, 290, 292, 293, 295, 297, 316, 340], "temp": 5, "scratch": [5, 6, 297, 316, 319, 323, 340], "avoid": [5, 293, 316], "confus": [5, 14, 296, 297, 316], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 83, 84, 93, 96, 109, 110, 120, 122, 139, 141, 145, 146, 149, 152, 155, 161, 170, 178, 180, 181, 187, 195, 200, 202, 206, 210, 219, 223, 232, 245, 247, 252, 254, 257, 272, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 295, 303, 304, 312, 314, 317, 323, 329, 330, 331, 332, 336, 337, 340, 345], "compar": [5, 10, 18, 38, 41, 48, 113, 114, 119, 120, 139, 180, 181, 236, 279, 280, 281, 282, 286, 287, 288, 293, 294, 295, 296, 297, 303, 304, 312, 314, 316, 327, 328, 340, 343, 345], "previou": [5, 123, 181, 293, 297, 304, 316, 327, 340, 345], "same": [5, 7, 9, 14, 18, 38, 39, 40, 48, 120, 122, 136, 139, 143, 144, 188, 201, 211, 224, 246, 278, 288, 289, 291, 293, 294, 295, 296, 297, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 336, 337, 338, 340, 345, 346], "baseline_dir": [5, 38, 113, 114, 119, 293], "mani": [5, 6, 8, 9, 139, 289, 291, 293, 295, 296, 297, 315, 316, 328, 339, 344], "valid": [5, 10, 19, 38, 41, 48, 123, 139, 149, 152, 258, 259, 260, 261, 262, 263, 264, 265, 272, 284, 285, 288, 293, 296, 297, 315, 325, 328], "timer": [5, 18, 38, 293, 294, 296], "both": [5, 6, 7, 8, 13, 14, 30, 123, 136, 139, 160, 167, 173, 267, 278, 289, 290, 292, 293, 297, 315, 316, 317, 327, 330, 334, 335, 338], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 114, 119, 275, 290, 297, 309, 317, 323, 340], "give": [5, 14, 18, 136, 293, 296, 297, 316, 317, 340], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 18, 19, 25, 37, 107, 136, 139, 155, 258, 264, 265, 275, 278, 284, 285, 289, 290, 293, 295, 296, 297, 309, 314, 316, 317, 322, 323, 325, 328, 329, 330, 331, 332, 336, 337, 338, 340, 345], "case": [5, 6, 7, 8, 9, 14, 19, 28, 29, 49, 50, 55, 62, 91, 92, 93, 115, 120, 136, 139, 140, 147, 164, 171, 172, 174, 175, 176, 177, 179, 185, 186, 187, 189, 192, 195, 196, 198, 200, 203, 204, 206, 207, 208, 210, 212, 215, 217, 218, 219, 220, 221, 223, 225, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 268, 269, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 300, 302, 305, 306, 308, 314, 315, 316, 322, 323, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 344, 345], "pre": [5, 136, 297], "copi": [5, 6, 8, 40, 55, 114, 119, 316, 319, 340], "just": [5, 14, 25, 35, 38, 45, 63, 136, 155, 293, 296, 297, 314, 316, 319, 323], "wish": [5, 7, 14, 50, 268, 269, 293, 297, 316, 340], "again": [5, 14, 135, 139, 275, 293, 295, 297, 313, 340], "later": [5, 8, 18, 25, 35, 38, 45, 57, 136, 155, 293, 316, 317], "anticip": [5, 316], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 108, 121, 136, 148, 268, 269, 275, 277, 289, 293, 294, 295, 297, 309, 310, 313, 314, 316, 317, 323, 329, 330, 331, 332, 336, 337, 338, 339, 340, 344, 346], "delet": [5, 114, 119, 296, 297, 313, 340], "fresh": [5, 6, 295, 316], "sinc": [5, 14, 86, 108, 131, 139, 278, 293, 295, 296, 297, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 344], "rerun": [5, 297], "c": [5, 6, 114, 136, 293, 297, 318, 319, 320, 321, 322, 323, 327, 329, 331, 336, 337, 340, 345], "test_suit": [5, 112, 293], "build": [5, 6, 10, 13, 14, 71, 76, 132, 133, 134, 135, 137, 266, 275, 290, 295, 296, 309, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323], "mpas_model": [5, 317], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 71, 74, 75, 76, 139, 170, 178, 293, 295, 296, 316, 317, 323, 340], "baselin": [5, 6, 8, 10, 38, 41, 48, 113, 114, 119, 120, 139, 149, 152, 236, 278, 284, 285, 288, 293, 294, 296, 312, 314, 316, 327, 340], "comparison": [5, 8, 18, 38, 48, 120, 293, 316, 317, 336], "against": [5, 10, 41, 48, 120, 139, 149, 152, 278, 284, 285, 288, 293, 312, 316, 327], "oppos": [5, 14, 30, 151, 154, 167, 173, 184, 191, 197, 242, 247, 252, 269, 316], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 109], "wherea": [5, 12, 293, 314, 316, 327, 346], "typic": [5, 7, 9, 13, 14, 17, 18, 19, 38, 50, 110, 136, 139, 267, 268, 269, 289, 290, 291, 293, 295, 297, 314, 316, 317, 322, 325, 338, 340, 346], "clone": [5, 6, 136, 275, 291, 297, 309, 316, 340], "pickl": [5, 8, 107, 108, 293, 316, 340], "latter": [5, 49, 136], "conveni": [5, 9, 17, 258, 264, 265, 289, 293, 316, 317, 329, 330, 331, 336, 337, 340, 346], "tab": [5, 340], "explicitli": [5, 7, 139, 278, 284, 285, 293, 297, 316, 317, 340], "select": [5, 8, 123, 266, 293, 297, 316], "edit": [5, 7, 297, 316, 340], "steps_to_run": [5, 49, 110, 293, 295, 316, 317], "full_run": [5, 18, 312, 328, 343], "restart_run": [5, 18, 312, 328, 343], "Or": [5, 293, 317], "accomplish": [5, 293, 296], "thing": [5, 132, 133, 134, 135, 136, 137, 139, 289, 293, 296, 315, 345], "take": [5, 6, 7, 11, 13, 14, 57, 136, 139, 145, 202, 289, 293, 294, 295, 297, 316, 329, 330, 331, 336, 345], "preced": [5, 57, 139], "over": [5, 9, 14, 57, 96, 121, 122, 267, 293, 296, 315, 316, 325, 328, 338, 340], "intern": [5, 11, 25, 268, 269, 293, 297, 313], "shouldn": [5, 136, 236, 316], "special": [5, 314, 339], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 155, 293, 322], "polaris_cach": [5, 8, 20, 293], "structur": [5, 13, 31, 158, 292, 295, 315, 316], "without": [5, 40, 267, 293, 296, 297, 316, 317, 321, 322, 334, 335, 339, 340], "redund": [5, 258, 264, 265, 278, 289, 316], "stamp": 5, "revis": [5, 317], "older": 5, "ones": [5, 258, 264, 265, 296, 316], "version": [5, 6, 16, 33, 57, 95, 120, 136, 275, 278, 289, 290, 291, 293, 295, 296, 297, 309, 315, 316, 317, 322, 323, 326, 328, 330, 340, 341], "updat": [5, 7, 8, 25, 27, 29, 34, 35, 44, 45, 116, 135, 136, 157, 236, 275, 278, 279, 280, 281, 284, 285, 286, 287, 293, 309, 313, 315, 316, 340], "cached_fil": [5, 20, 293], "json": [5, 8, 20, 55, 293, 323], "anvil": [5, 6, 136, 293, 317, 322, 340], "chrysali": [5, 6, 136, 293, 316, 317, 322, 340], "onto": [5, 297], "lcrc": [5, 6, 8, 11, 55, 293, 296, 317, 318, 320, 322, 340], "server": [5, 8, 40, 55, 293, 296, 317, 323], "d": [5, 19, 123, 212, 225, 258, 264, 265, 277, 281, 286, 287, 293, 316, 326, 333, 338], "whose": [5, 46, 53, 85, 293], "ocean_cached_fil": 5, "pr": [5, 6, 340, 345], "look": [5, 6, 7, 11, 18, 268, 269, 295, 296, 316, 317], "someth": [5, 7, 97, 101, 104, 136, 297, 316], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 96, 139, 141, 149, 152, 278, 293, 296, 316], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 84, 149, 152, 155, 278, 284, 285, 293, 316, 317], "info": [5, 12, 14, 25, 32, 84, 136, 149, 152, 155, 293, 316], "initial_st": [5, 18, 19, 141, 278, 293, 316], "date_str": [5, 55], "let": [5, 293, 297, 314, 316, 317, 323], "string": [5, 9, 15, 40, 100, 106, 136, 139, 160, 242, 267, 297], "choos": [5, 293, 296, 297, 316, 318, 319, 320, 321, 323, 346], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 316], "check": [5, 6, 18, 120, 293, 297, 316, 317, 319, 323, 340, 345], "print": [5, 12, 18, 63, 120, 127, 293, 296, 345], "stdout": [5, 12, 38, 49, 293, 295], "translat": [5, 31, 139, 158], "convert": [5, 9, 13, 14, 139, 160, 293, 316], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 114, 119, 130, 131, 155, 158, 159, 167, 170, 173, 178, 275, 278, 284, 285, 289, 290, 293, 295, 296, 309, 310, 312, 315, 316, 317, 338], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 125, 130, 131, 159, 167, 170, 173, 178, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 309, 312, 317, 339, 344], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 136, 149, 152, 155, 158, 159, 167, 173, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 293, 295, 315, 316, 319, 323], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 66, 125, 136, 139, 154, 158, 268, 269, 275, 289, 291, 293, 294, 296, 297, 309, 313, 314, 315, 316, 317, 323, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 346], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 66, 125, 136, 139, 154, 158, 268, 269, 275, 289, 291, 293, 294, 296, 297, 309, 313, 314, 315, 316, 317, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 344], "don": [5, 6, 7, 14, 136, 139, 141, 146, 293, 295, 296, 297, 316, 321, 340, 346], "format": [5, 7, 11, 13, 14, 125, 131, 160, 294, 295, 297, 316, 317, 319], "note": [5, 7, 17, 18, 316, 323], "keyword": [5, 7, 14, 18, 19, 293, 330], "top": [5, 19, 123, 258, 259, 260, 261, 262, 263, 264, 265, 267, 277, 291, 316, 325], "ignor": [5, 100, 106], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 61, 69, 85, 91, 102, 109, 136, 139, 143, 144, 145, 155, 188, 201, 202, 211, 224, 246, 289, 292, 293, 295, 296, 297, 314, 317, 325, 340], "pars": [5, 9, 14, 26, 27, 28, 29, 88, 115, 117], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 86, 120, 121, 122, 123, 127, 139, 141, 149, 152, 158, 174, 194, 267, 268, 269, 272, 278, 286, 290, 293, 295, 296, 315, 316, 317, 325, 328, 329, 330, 331, 332, 336, 337, 338], "doesn": [5, 6, 131, 136, 293, 295, 316, 317, 322, 340], "matter": [5, 316], "usabl": 5, "try": [6, 14, 60, 136, 296, 297, 313, 316, 317, 319, 323, 340], "stai": [6, 297], "sync": 6, "mpi": [6, 14, 17, 96, 132, 135, 136, 155, 157, 159, 278, 284, 285, 293, 297, 313, 315, 316, 318, 319, 320, 321, 323, 340], "librari": [6, 14, 132, 136, 297, 316, 318, 319, 320, 321, 322, 323, 340], "netcdf": [6, 136, 141, 146, 161, 288, 317, 318, 319, 320, 321, 322, 323], "fortran": [6, 136, 318, 319, 320, 321, 322, 323], "pnetcdf": [6, 136, 318, 319, 320, 321, 322, 323], "mkl": [6, 136], "linear": [6, 19, 121, 122, 123, 268, 269, 279, 280, 281, 284, 286, 287, 316, 328, 329, 330, 331, 332, 334, 336, 337], "algebra": 6, "lib": [6, 136], "esmf": [6, 297, 340], "scorpio": [6, 297, 322, 340], "forg": [6, 136, 315, 340], "python": [6, 7, 8, 9, 26, 44, 51, 139, 289, 291, 293, 295, 296, 297, 314, 315, 316, 317, 322, 323, 340], "aren": [6, 11, 38, 39, 136, 293, 296, 297, 316, 345], "brief": [6, 7, 316], "tour": 6, "login": [6, 136, 297, 319, 323], "node": [6, 14, 25, 37, 38, 42, 45, 61, 91, 92, 93, 136, 155, 268, 269, 271, 272, 274, 293, 294, 296, 297, 316, 317, 318, 319, 320, 321, 322, 323, 340], "bootstrap": 6, "rest": [6, 161, 263, 325, 330], "u": [6, 293, 316, 322, 323, 329, 331, 332, 334, 335, 336], "unifi": [6, 136, 297, 323], "diagnost": [6, 286, 317, 318, 319, 321, 322, 323, 329, 340], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 139, 293, 295, 296, 297, 316], "cach": [6, 20, 25, 38, 40, 113, 114, 155, 315, 317, 322, 327, 340, 345], "own": [6, 7, 8, 9, 11, 12, 19, 38, 136, 139, 293, 295, 296, 297, 314, 316, 317, 329, 330, 331, 336, 337, 340, 346], "config_machin": 6, "xml": [6, 14, 115, 117, 118, 131, 309], "ey": 6, "master": [6, 275, 309, 341], "happen": [6, 9, 12, 17, 108, 293, 316, 329, 330, 331, 336, 337], "me": [6, 316], "dev_quick_start": 6, "fork": [6, 316], "haven": [6, 316], "mkdir": [6, 297], "involv": [6, 14, 272, 293, 314, 316], "coupl": [6, 313, 315], "alpha": [6, 132, 133, 134, 135, 136, 137, 316, 332], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 139, 289, 291, 293, 294, 295, 296, 297, 316, 317, 345, 346], "stand": 6, "omit": [6, 293, 340], "suffix": [6, 40, 114, 293], "onc": [6, 14, 41, 268, 269, 278, 297, 316, 317, 329, 330, 331, 336, 337, 340], "releas": [6, 136, 296, 315, 322, 326, 340], "spack_for_mache_1": 6, "12": [6, 13, 69, 123, 267, 272, 279, 281, 286, 287, 312, 316, 319, 329, 331, 332, 336, 337, 343], "worktre": [6, 315, 316], "my": [6, 136, 319], "fetch": [6, 297, 316], "out": [6, 8, 9, 13, 57, 90, 94, 123, 136, 149, 152, 267, 291, 293, 296, 297, 317, 325, 340], "checkout": [6, 297, 316], "miniforge3": [6, 297, 316, 322, 340], "manual": [6, 14, 49, 50, 293, 295, 346], "linux": [6, 136, 297, 322], "x86_64": [6, 136], "our": [6, 136, 296, 316, 340], "found": [6, 9, 14, 126, 136, 268, 269, 296, 297, 315, 316, 318, 319, 320, 321, 322, 323], "exist": [6, 7, 9, 31, 38, 41, 60, 115, 117, 119, 136, 158, 278, 293, 295, 296, 297, 313, 316, 322, 345], "miniconda3": [6, 297], "alwai": [6, 7, 9, 12, 57, 136, 139, 144, 188, 201, 211, 224, 271, 275, 290, 293, 295, 296, 297, 309, 314, 316, 317], "pleas": [6, 136, 290, 296, 297, 316, 340], "start": [6, 7, 8, 14, 15, 86, 116, 123, 136, 267, 277, 278, 282, 289, 294, 295, 296, 315, 319, 322, 323, 326, 341, 343], "definit": [6, 14, 316], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 74, 100, 106, 113, 114, 119, 136, 139, 186, 199, 209, 222, 244, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 301, 309, 310, 312, 314, 315, 317, 322, 325, 328, 330, 337, 338, 345, 346], "export": [6, 313], "conda_bas": 6, "home": [6, 18, 136, 297, 316, 317, 319, 322, 323], "readi": [6, 316, 323], "configure_polaris_env": [6, 136, 297, 313, 316], "py": [6, 12, 14, 18, 66, 136, 289, 290, 296, 297, 314, 316, 317], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 136, 297], "tmpdir": [6, 136], "group": [6, 7, 289, 315, 318, 320, 322, 323, 339, 340, 346], "spack_temp": 6, "spack_test": 6, "intel": [6, 136, 322], "gnu": [6, 136, 297, 321, 322, 340], "openmpi": [6, 132, 136, 297, 315, 318, 320, 321, 340], "impi": [6, 132, 136, 318, 321], "recreat": [6, 295, 297, 313], "request": [6, 7, 14, 15, 25, 32, 34, 136, 139, 149, 152, 155, 259, 260, 293, 295, 296, 297, 313, 316, 317, 329, 330, 331, 336, 337], "twice": [6, 268, 269, 316], "deploy": [6, 297], "prebootstrap": 6, "load": [6, 19, 108, 133, 136, 137, 293, 297, 315, 316, 317, 318, 319, 320, 321, 322, 323], "activ": [6, 19, 136, 322, 323, 340], "differ": [6, 14, 15, 17, 18, 57, 71, 76, 120, 136, 139, 162, 165, 174, 272, 275, 278, 289, 290, 291, 293, 294, 295, 296, 309, 314, 316, 317, 319, 323, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 344], "On": [6, 7, 13, 136, 297, 322], "tmp": [6, 136], "safe": [6, 14, 293, 297, 328], "strictli": [6, 13, 296, 316], "necessari": [6, 7, 13, 136, 316], "good": [6, 12, 38, 293, 297, 316], "idea": [6, 12, 316], "Be": [6, 323], "awar": [6, 7, 136, 316, 322], "with_petsc": [6, 297], "wa": [6, 8, 48, 59, 120, 136, 293, 295, 296, 297, 313, 314, 316, 317, 325, 340], "limit": [6, 19, 279, 280, 281, 286, 287, 294, 297, 328, 329, 331, 332, 336, 337], "amount": [6, 25, 35, 38, 45, 155, 293, 324, 338], "team": [6, 136, 315], "petsc_support": 6, "txt": [6, 8, 119, 294, 313], "with_albani": [6, 297], "albany_support": 6, "encount": [6, 294, 313], "error": [6, 8, 15, 38, 49, 136, 139, 142, 143, 146, 279, 280, 281, 282, 284, 285, 286, 287, 293, 295, 297, 315, 316, 329, 330, 331, 332, 336, 337], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 151, 167, 173, 191, 293, 295, 296, 297, 316, 317, 340, 345, 346], "attempt": [6, 136, 315, 322], "sh": [6, 132, 133, 134, 135, 136, 137, 297, 313, 316, 318, 319, 320, 321, 323, 340], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 92, 93, 95, 103, 136, 293, 296, 297, 314, 315, 316, 319, 322, 323, 340], "pscratch": 6, "suggest": [6, 136, 313], "correctli": 6, "seem": [6, 14, 316, 319, 323], "switch": [6, 316, 317], "v0": 6, "19": 6, "submodul": [6, 275, 290, 297, 309, 316, 340], "serv": [6, 113, 114, 119, 139, 289, 316], "kind": [6, 316], "whichev": [6, 275, 309, 325], "load_dev_polaris_0": [6, 132, 133, 134, 135, 136, 137, 316], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 275, 296, 297, 309, 316, 340], "pio": [6, 25, 34, 37, 155, 278, 284, 285], "openmp": [6, 25, 35, 38, 45, 93, 132, 134, 135, 155, 165, 236, 293, 316, 318, 319, 320, 321, 323], "ifort": [6, 132, 134, 136, 316, 318, 320], "ac": [6, 316], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 316, 322, 340], "job_script": [6, 316, 340], "bash": [6, 297, 313, 316, 340], "termin": [6, 8, 136, 293, 297, 316], "isn": [6, 9, 15, 279, 280, 281, 282, 286, 287, 293, 296, 316], "ll": [6, 19, 136, 296, 316, 323, 330], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 132, 134, 135, 136, 297, 318, 320], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 289, 293, 316, 325, 336], "util": [6, 296, 335], "matrix": 6, "sever": [6, 12, 136, 139, 289, 293, 295, 296, 297, 315, 316, 339, 340, 345], "automat": [6, 7, 9, 12, 14, 19, 136, 139, 293, 296, 297, 316, 317, 318, 320, 321, 322, 323, 340], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 340], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 135, 136, 139, 293, 296, 316], "integr": [6, 15, 139, 174, 278, 296, 316, 328, 329, 330, 331, 332, 336, 337, 339, 344], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 319, 340], "245": 6, "246": 6, "non": [6, 14, 18, 277, 293, 316, 329, 336, 340], "care": [6, 11, 13, 139, 289, 293, 297, 316], "temporari": [6, 136], "begin": [6, 7, 18, 278, 293, 297, 310, 315, 316, 322, 328, 330, 338], "anymor": 6, "best": [6, 17, 136, 293, 297], "hard": [6, 293, 316, 328, 338], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 62, 121, 122, 123, 149, 152, 293, 295, 316, 343], "myst": [7, 316], "tip": [7, 297], "easi": [7, 9, 40, 296, 316], "pull": [7, 136, 296, 297, 316, 317], "guid": [7, 139, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 294, 296, 316, 319, 322, 326, 341], "baroclin": [7, 9, 14, 162, 163, 164, 165, 168, 171, 174, 176, 179, 180, 182, 236, 278, 290, 293, 316, 326, 333, 346], "channel": [7, 9, 14, 162, 163, 164, 165, 168, 171, 174, 176, 179, 180, 182, 236, 278, 290, 293, 313, 316, 326, 333, 346], "label": [7, 121, 122, 267, 322, 332, 340], "prepend": 7, "categori": [7, 290, 291, 292, 315, 346], "uniqu": [7, 14, 136, 295, 316], "And": [7, 14, 297, 316], "becom": [7, 293, 295, 316], "who": [7, 297, 316, 317, 323], "citat": 7, "basi": [7, 316], "overview": [7, 315, 319, 323], "common": [7, 12, 14, 44, 49, 136, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 313, 314, 316, 317, 322, 323, 339, 340, 344, 345, 346], "characterist": [7, 325, 339, 344], "comment": [7, 294, 317], "appli": [7, 13, 14, 63, 277, 289, 316, 328, 338, 339, 344], "vertic": [7, 15, 19, 85, 123, 144, 145, 188, 201, 202, 211, 224, 235, 266, 267, 268, 269, 271, 272, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 317, 324, 326], "grid": [7, 13, 17, 68, 75, 79, 82, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 139, 256, 257, 258, 259, 260, 261, 264, 265, 278, 284, 285, 288, 293, 310, 316, 317], "forc": [7, 288, 312, 316, 346], "specif": [7, 9, 14, 19, 51, 136, 139, 275, 289, 290, 291, 293, 309, 310, 315, 316, 317, 319, 322, 328, 339, 340, 344, 345], "public": [7, 11, 293, 316, 317], "api": [7, 12, 315, 316], "underscor": [7, 316], "md": [7, 316], "eval": 7, "rst": [7, 14, 316], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 290, 296], "compute_cell_count": [7, 139, 278, 284, 285, 316], "dynamic_model_config": [7, 14, 278, 316], "ot": [7, 316], "numpydoc": [7, 316], "text": [7, 8, 328, 330, 332, 338], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 19, 139, 258, 260, 261, 262, 263, 264, 265, 267, 272, 275, 284, 285, 293, 316, 317, 319, 323, 325, 332, 334, 335], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 275, 317, 334, 335], "overli": [7, 316], "ic": [7, 139, 275, 295, 296, 297, 310, 312, 315, 316, 317, 319, 325, 343, 346], "shelf": [7, 139, 289, 296, 316, 317, 325], "draft": [7, 325], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 79, 80, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 149, 151, 152, 154, 155, 158, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 184, 187, 188, 189, 191, 192, 194, 195, 197, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 224, 225, 226, 227, 228, 230, 232, 236, 238, 240, 242, 245, 246, 247, 249, 250, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 284, 285, 289, 293, 295, 301, 302, 303, 305, 306, 307, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338], "xarrai": [7, 15, 17, 19, 85, 122, 123, 139, 144, 145, 188, 201, 202, 211, 224, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 293, 316], "dataarrai": [7, 85, 122, 123, 144, 145, 188, 201, 202, 211, 212, 213, 214, 224, 225, 226, 227, 259, 260, 261, 262, 263, 266, 267, 268, 269, 272, 273, 274], "sea": [7, 139, 212, 214, 225, 227, 260, 261, 262, 263, 266, 267, 272, 275, 310, 312, 315, 316, 317, 325, 334, 335, 343, 346], "surfac": [7, 139, 212, 214, 225, 227, 260, 261, 262, 263, 266, 267, 272, 275, 277, 288, 312, 316, 317, 325, 328, 334, 335, 338], "height": [7, 123, 139, 212, 214, 225, 227, 260, 261, 262, 263, 267, 272, 275, 316, 317, 325, 334, 335], "mask": [7, 123, 258, 261, 264, 265, 293, 316, 317, 325], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 26, 67, 69, 70, 74, 79, 86, 96, 101, 120, 122, 123, 139, 141, 142, 143, 144, 145, 149, 152, 154, 160, 163, 164, 165, 168, 171, 174, 176, 179, 184, 187, 188, 189, 194, 197, 200, 201, 202, 203, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 224, 225, 226, 227, 228, 230, 232, 236, 242, 245, 246, 247, 249, 252, 267, 268, 269, 293, 295, 316], "densiti": [7, 13, 139, 316], "seawat": 7, "displac": 7, "land": [7, 139, 275, 295, 315, 316, 317, 325], "landicedraft": 7, "equal": [7, 288, 293, 296, 338], "entri": [7, 54, 86, 89, 114, 123], "line": [7, 10, 36, 38, 92, 93, 103, 123, 136, 293, 294, 296, 297, 315, 340], "type": [7, 14, 17, 18, 19, 26, 98, 105, 131, 136, 139, 142, 194, 235, 237, 267, 279, 280, 281, 286, 287, 289, 293, 295, 296, 297, 309, 313, 314, 316, 317, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 345], "side": 7, "colon": 7, "doubl": [7, 14, 139, 293, 294, 316], "back": [7, 316, 319, 340], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 92, 93, 293], "next": [7, 136, 278, 316, 325, 340], "indent": [7, 293], "obviou": [7, 14, 316], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 62, 63, 65, 67, 74, 80, 84, 86, 95, 96, 97, 100, 101, 104, 106, 110, 114, 115, 119, 120, 121, 122, 123, 126, 130, 139, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 155, 156, 160, 165, 166, 188, 190, 201, 202, 211, 216, 224, 225, 229, 236, 246, 267, 269, 293, 295, 305, 316, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 343], "els": [7, 8, 136, 293, 295, 316], "further": [7, 289, 295, 323, 339, 344], "rais": [7, 9, 18, 38, 41, 59, 60, 139, 293, 296, 316, 332], "list_cas": 8, "list_machin": [8, 296], "list_suit": 8, "anywher": [8, 12, 136, 297], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 88, 107, 108, 111, 115, 125, 126, 130, 131, 149, 152, 212, 225, 290, 295, 296, 316], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 87, 88, 125, 139, 277, 293, 295, 316], "properti": [8, 242, 277, 293, 322, 329, 330, 331, 336, 337], "setup_suit": 8, "write": [8, 12, 13, 16, 19, 107, 125, 257, 267, 293, 295, 297, 312, 316], "proven": [8, 10, 57, 315, 317], "save": [8, 19, 59, 82, 136, 267, 278, 279, 280, 281, 282, 286, 287, 289, 293, 295, 316, 322, 327, 328], "target": [8, 11, 17, 18, 25, 40, 60, 62, 86, 96, 136, 139, 155, 278, 284, 285, 293, 295, 316, 329, 330, 331, 336, 337], "minimum": [8, 62, 122, 123, 139, 143, 155, 246, 267, 278, 284, 285, 293, 316, 317, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 344], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 85, 86, 123, 131, 136, 139, 159, 242, 278, 279, 280, 281, 282, 284, 285, 286, 287, 293, 316, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 344], "maximum": [8, 18, 120, 122, 123, 194, 246, 267, 316, 317, 325], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 92, 93, 96, 139, 155, 165, 236, 293, 295, 316], "cpus_per_task": [8, 14, 38, 42, 45, 92, 93, 293], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 316, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 92, 93, 96, 139, 155, 165, 236, 293, 316], "min_cpus_per_task": [8, 14, 38, 45, 92, 93, 293], "fewest": 8, "least": [8, 13, 290, 297, 328, 332], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 136, 139, 155, 165, 236, 293, 315, 316, 317, 329, 330, 331, 332, 334, 335, 336, 337], "run_task": [8, 293, 295], "run_single_step": 8, "oper": [8, 47, 136, 170, 178, 293, 295, 345], "log": [8, 10, 19, 38, 49, 93, 120, 121, 122, 123, 293, 295, 297, 315, 340], "figur": [8, 19, 122, 123, 267, 284, 285, 288, 289, 291, 293, 317, 329, 331, 336, 337], "cpu": [8, 136, 293, 316, 340], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 66, 67, 71, 74, 75, 76, 80, 81, 96, 102, 125, 139, 140, 141, 143, 144, 149, 151, 152, 155, 158, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 184, 187, 188, 189, 191, 192, 195, 197, 200, 201, 203, 204, 206, 208, 210, 211, 212, 215, 217, 219, 221, 222, 223, 224, 225, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 267, 284, 285, 290, 293, 295, 296, 300, 302, 303, 305, 306, 307, 316, 330, 339, 344], "retriev": [8, 313], "store": [8, 19, 51, 136, 139, 284, 285, 293, 316, 329, 331, 336, 337, 340], "case_output": [8, 12], "individu": [8, 9, 19, 290, 295, 296, 316, 322, 323, 328, 340, 346], "overal": 8, "whole": [8, 49, 161, 289, 295, 296, 316, 340], "window": 8, "update_cach": 8, "_cached_fil": [8, 293], "origin": [8, 55, 266, 268, 269, 272, 297, 316, 325, 340], "enabl": [8, 19, 288, 293, 313, 317, 323, 334, 335], "consum": [8, 293, 295, 316, 345], "faster": [8, 297], "parser": [9, 46, 53, 57, 174, 184, 197, 242], "mpas_tool": [9, 12, 13, 79, 278, 284, 285, 288, 293, 295, 316], "mpasconfigpars": [9, 293, 295], "polarisconfigpars": [9, 21, 38, 46, 49, 53, 59, 61, 62, 91, 94, 95, 111, 121, 122, 139, 174, 184, 197, 212, 225, 242, 256, 258, 259, 260, 264, 265, 316], "certain": [9, 18, 57, 136, 293, 297, 317, 339, 344], "filepath": [9, 46, 53, 57, 139], "overridden": [9, 31, 58, 139, 158, 316], "algorithm": [9, 14, 139, 236, 278, 284, 285, 293, 316], "featur": [9, 14, 296, 297, 314, 316, 317, 328, 338], "accommod": [9, 25, 35, 38, 45, 92, 93, 155], "add_from_packag": [9, 139, 293, 295, 296, 316], "content": [9, 14, 114, 115, 117, 119, 131, 139, 289, 291, 293, 296, 312, 316, 340, 343], "inertial_gravity_wav": [9, 275, 283, 285, 290, 295, 334, 345], "inertialgravitywav": [9, 284, 295], "import": [9, 11, 12, 13, 15, 17, 18, 19, 139, 289, 290, 293, 295, 296, 297, 314, 316], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 66, 67, 74, 80, 96, 125, 139, 140, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 208, 210, 212, 215, 217, 219, 221, 223, 225, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 289, 290, 293, 295, 296, 300, 302, 303, 305, 306, 307, 314, 316], "super": [9, 14, 17, 18, 139, 290, 293, 295, 296, 316], "cfg": [9, 51, 139, 290, 295, 296, 316, 317, 329, 331, 336, 337, 340], "except": [9, 38, 41, 59, 267, 293, 296, 316, 337], "behavior": [9, 14, 110, 139, 293, 294, 297, 316], "noth": [9, 136, 313, 329, 330, 331, 336, 337], "particular": [9, 136, 266, 289, 297, 315, 319, 322, 340], "fine": [9, 295, 316, 338], "_get_basic_config": 9, "larg": [9, 293, 295, 316, 318, 336], "those": [9, 14, 49, 120, 136, 139, 278, 295, 296, 297, 315, 316, 329, 330, 331, 332, 336, 337, 339, 344, 345], "configpars": [9, 92, 93], "getinteg": 9, "getfloat": [9, 12, 14, 17, 139, 293, 316], "getboolean": [9, 293, 316], "implement": [9, 290, 293, 296, 328, 329, 330, 331, 332, 334, 335, 336, 337], "getlist": [9, 295, 316], "comma": [9, 329, 330, 331, 336, 337], "integ": [9, 13], "boolean": [9, 123, 261], "etc": [9, 14, 116, 119, 290, 293, 328], "getexpress": 9, "tupl": [9, 122, 123, 267], "rang": [9, 19, 123, 316], "numpi": [9, 13, 15, 68, 75, 76, 82, 86, 121, 123, 139, 161, 256, 257, 268, 269, 293, 316], "linspac": [9, 19, 330], "arang": 9, "arrai": [9, 15, 68, 75, 76, 82, 121, 139, 256, 257, 259, 260, 261, 262, 266, 273, 274, 316], "sens": [9, 315, 316], "set_shared_config": [9, 295], "intuit": 9, "resolution_to_subdir": [9, 290], "rpe": [9, 182, 290, 296, 316, 340], "resdir": [9, 290], "config_filenam": [9, 38, 49, 293, 295], "indir": [9, 25, 38, 49, 96, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 236, 238, 240, 290, 293, 303, 305, 307], "add_task": [9, 289, 290], "most": [9, 12, 44, 136, 275, 289, 290, 293, 296, 297, 309, 316, 317, 322, 323, 325, 326, 341, 346], "construct": [9, 14, 140, 256, 258, 259, 260, 264, 265, 271, 272, 277, 288, 290, 295, 300, 316, 328, 332], "bring": [9, 139, 316], "add_step": [9, 295, 316], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 165, 176, 278, 293, 316], "baroclinic_channel_rp": 9, "viscos": [9, 14, 165, 174, 176, 278, 293, 296, 316, 328], "dtype": [9, 295, 316], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 93, 155, 165, 236, 293, 295, 316], "add_yaml_fil": [9, 14, 25, 139, 293, 295, 316], "One": [9, 13, 316, 340, 345], "advantag": [9, 14, 136, 295, 296, 316, 322], "track": [9, 25, 293, 295, 297], "associ": [9, 13, 14, 15, 19, 139, 258, 264, 265, 268, 269, 278, 279, 281, 286, 287, 293, 295, 297, 314], "while": [10, 17, 19, 277, 278, 293, 313, 316], "meant": [10, 296, 317], "simplifi": 10, "verifi": [10, 294, 317], "io": [10, 293, 295, 296, 315, 316, 317, 326, 341], "lot": [11, 139, 293, 296, 316], "o": [11, 12, 115, 117, 131, 136, 296, 297, 316, 317, 340], "handl": [11, 12, 297, 316, 322, 332], "lower": [11, 19, 295, 316, 328], "directli": [11, 13, 14, 17, 38, 139, 291, 293, 296, 314, 315, 316, 319], "readm": [11, 295], "importlib": 11, "resourc": [11, 14, 35, 42, 45, 91, 92, 93, 150, 153, 156, 166, 190, 216, 229, 236, 278, 284, 285, 293, 295, 316], "global_ocean": [11, 14, 293, 295, 296, 297, 317, 340], "files_for_e3sm": [11, 293, 295, 317], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 60, 61, 62, 63, 67, 74, 80, 84, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 160, 161, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 187, 188, 189, 192, 195, 200, 201, 202, 203, 204, 206, 210, 211, 215, 217, 219, 223, 224, 228, 230, 232, 236, 238, 240, 245, 246, 247, 249, 250, 252, 254, 257, 267, 293, 295, 303, 305, 307, 316], "did": [11, 314, 316], "add_input_fil": [11, 17, 18, 39, 293, 295, 316], "collect": [11, 99, 140, 290, 292, 300, 314, 316], "whenev": [11, 293, 316], "flexibl": [11, 139, 293, 295, 297, 316], "No": [11, 315, 334, 335], "step_dir": 11, "database_root": [11, 136, 293, 317, 318, 319, 320, 321, 322, 323, 340], "download_path": 11, "join": [11, 316], "bathymetry_databas": [11, 293, 317], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 261, 289, 293, 316, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 346], "url": [11, 40, 59, 293, 313, 317], "web": [11, 293, 317], "anl": [11, 293, 317], "gov": [11, 293, 313, 317, 319, 323], "mpas_standalonedata": [11, 136, 317, 322], "dest_path": [11, 59], "remot": [11, 40, 297, 315], "bathymetri": [11, 266, 272, 293, 317], "strategi": 12, "stderr": [12, 38, 49, 293, 295], "loggingcontext": 12, "check_cal": [12, 293], "won": [12, 296, 316, 317], "logger": [12, 18, 38, 49, 66, 93, 120, 293, 295, 316], "full": [12, 38, 92, 110, 259, 260, 268, 269, 278, 293, 295, 297, 312, 315, 316, 322, 325, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340], "although": [12, 139], "captur": 12, "explicit": [12, 296], "go": [12, 46, 53, 238, 240, 289, 293, 295, 296, 297, 316, 323], "subprocess": [12, 38, 92, 93, 109, 293, 296, 313], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 139, 146, 163, 171, 179, 272, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 296, 297, 302, 312, 316, 329, 331, 334, 335, 336, 337, 340, 343], "otherwis": [12, 19, 136, 293, 295, 316, 318, 319, 320, 321, 322, 323, 328], "intent": 12, "desir": [12, 13, 14, 18, 19, 120, 139, 293, 294, 295, 316, 317, 340], "trick": [12, 293], "direct": [12, 13, 14, 79, 212, 225, 278, 284, 285, 316, 323, 328, 334, 335], "snippet": [12, 316], "dome": [12, 66, 289, 293, 295, 340, 346], "setup_mesh": [12, 293], "setupmesh": [12, 293, 295], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 293], "landice_grid": [12, 293, 316], "l": [12, 120, 139, 316, 323], "quasiuniformsphericalmeshstep": [13, 139, 295], "icosahedralmeshstep": [13, 139, 295], "jigsaw": [13, 67, 71, 73, 74, 76, 78, 80, 184, 197, 242, 247, 252, 293], "complex": [13, 75, 295, 296, 316], "build_cell_width_lat_lon": [13, 74], "opt": [13, 80], "make_jigsaw_mesh": [13, 74], "icosahedr": [13, 67, 69, 154, 184, 197, 242, 247, 252, 279, 280, 281, 282, 286, 287, 295, 329, 330, 331, 332, 336, 337], "significantli": [13, 325, 332], "smooth": [13, 96, 267], "cell": [13, 14, 15, 19, 67, 68, 69, 70, 74, 75, 76, 79, 82, 85, 96, 98, 105, 123, 139, 150, 153, 155, 156, 166, 190, 212, 214, 216, 225, 227, 229, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 278, 284, 285, 289, 310, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 343], "quasi": [13, 74, 279, 280, 281, 282, 286, 287, 295, 317, 329, 330, 331, 332, 336, 337, 339, 344], "hand": [13, 101, 296], "restrict": [13, 316, 339], "subdivis": [13, 67, 68, 69, 70, 71], "icosahedron": [13, 68, 69, 70, 71], "tabl": [13, 297, 322, 340], "approxim": [13, 67, 69, 70, 74, 139, 150, 153, 156, 166, 190, 216, 229, 278, 284, 285, 297, 316], "width": [13, 67, 68, 69, 74, 75, 76, 82, 123, 267, 316, 328], "km": [13, 14, 67, 68, 69, 70, 74, 75, 76, 79, 82, 139, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 189, 203, 215, 217, 221, 228, 230, 249, 278, 279, 280, 281, 282, 284, 285, 286, 287, 293, 316, 317, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 344, 346], "5": [13, 14, 69, 122, 136, 139, 174, 278, 282, 293, 294, 296, 313, 316, 317, 328, 329, 330, 331, 332, 336, 337, 339, 340, 344], "240": [13, 69, 139, 279, 280, 281, 282, 286, 287, 317, 329, 330, 331, 336, 337], "6": [13, 69, 267, 268, 269, 293, 316, 326, 328, 329, 336, 338, 340, 341], "120": [13, 69, 139, 294, 329, 330, 331, 332, 336, 337], "7": [13, 69, 136, 316, 323, 329, 330, 337, 340], "60": [13, 69, 139, 279, 280, 281, 282, 286, 287, 325, 329, 330, 331, 336, 337], "8": [13, 69, 122, 136, 278, 297, 316, 317, 328, 330, 334, 335, 337, 340], "30": [13, 14, 69, 139, 289, 316, 323, 328, 338, 339, 344], "9": [13, 19, 69, 136, 316, 329, 330, 331, 336, 337, 340], "15": [13, 14, 69, 278, 316, 328, 329, 330, 331, 332, 336, 337, 338, 339, 340, 344], "11": [13, 69, 136, 316, 340], "3": [13, 69, 136, 139, 268, 269, 278, 293, 294, 297, 313, 316, 317, 322, 323, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340], "13": [13, 69, 316, 328], "94": [13, 69, 332], "spherical_mesh": [13, 75], "cell_width": [13, 67, 68, 69, 70, 74, 75, 76, 82], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 82, 121, 122, 123, 139, 141, 146, 176, 182, 195, 206, 240, 254, 266, 267, 268, 269, 272, 278, 279, 280, 281, 282, 286, 287, 307, 329, 330, 331, 332, 334, 335, 336, 337, 343, 346], "plot_cell_width": 13, "cell_width_filenam": [13, 82], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 68, 74, 75, 76, 82, 97, 99, 101, 104, 121, 269, 279, 280, 281, 282, 286, 287, 317, 330], "lon": [13, 17, 68, 74, 75, 76, 82, 97, 99, 101, 104, 121, 269, 279, 280, 281, 282, 286, 287, 317, 330], "sphere": [13, 244, 245, 247, 249, 252, 279, 280, 281, 282, 286, 287, 329, 330, 331, 336, 337], "vtk_lat_lon": 13, "far": [13, 136, 258, 264, 265, 296, 316], "But": [13, 136, 289, 293, 296, 297, 316, 317, 322], "hexagon": [13, 79, 316, 334, 335], "planar_hex": [13, 79, 278, 284, 285, 288, 293, 316], "make_planar_hex_mesh": [13, 79, 278, 284, 285, 288, 293, 316], "x": [13, 19, 68, 75, 76, 79, 82, 100, 106, 123, 139, 161, 212, 225, 266, 268, 293, 316, 328, 334, 335, 338], "y": [13, 14, 19, 79, 100, 106, 123, 139, 212, 225, 266, 268, 278, 284, 285, 293, 316, 323, 328, 334, 335], "nx": [13, 79, 289, 293, 316, 338], "ny": [13, 79, 289, 293, 316, 338], "dc": [13, 289, 293, 316], "distanc": [13, 79, 96, 194, 268, 269, 316, 328], "adjac": [13, 271, 325], "center": [13, 19, 79, 122, 194, 212, 225, 267, 268, 269, 270, 271, 289, 316, 325, 328], "admittedli": 13, "oddli": 13, "period": [13, 277, 278, 279, 281, 284, 285, 286, 287, 293, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337], "nonperiodic_x": [13, 293, 316], "nonperiodic_i": [13, 293, 316], "consider": [13, 258, 264, 265, 277, 310], "compute_planar_hex_nx_ni": [13, 293, 316], "lx": [13, 79, 293, 316, 328, 334, 335, 338], "ly": [13, 79, 293, 316, 328, 338], "explan": 13, "subtleti": 13, "account": [13, 79, 297, 316, 318, 319, 321, 322, 323, 340], "behav": 13, "stagger": [13, 79], "physic": [13, 79, 306, 312, 316, 325], "np": [13, 15, 19, 194, 293, 316, 330], "sqrt": [13, 15, 334], "domain": [13, 25, 32, 79, 123, 139, 155, 161, 277, 289, 310, 316, 328, 330, 332, 334, 335, 338, 339, 344, 346], "extra": [13, 297], "factor": [13, 96], "500e3": 13, "160e3": 13, "1e3": [13, 293, 316], "max": [13, 139, 293, 316, 325, 328, 330], "int": [13, 14, 25, 26, 35, 38, 45, 61, 62, 63, 67, 68, 69, 70, 71, 79, 86, 92, 93, 96, 122, 123, 141, 142, 144, 145, 146, 150, 153, 155, 156, 165, 166, 188, 190, 201, 202, 211, 216, 224, 229, 236, 267, 293, 316, 338], "ds_mesh": [13, 15, 19, 85, 123, 268, 269, 271, 293, 316], "creation": [13, 293, 317], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 92, 93, 155, 289, 293, 296, 316], "distant": 13, "descend": [14, 17, 139, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 293, 295, 296, 316], "modelstep": [14, 139, 293, 295, 316], "update_pio": [14, 25, 155], "make_graph": [14, 25, 155], "At": [14, 38, 49, 291, 292, 295, 316, 332], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 93, 155, 165, 236, 290, 293, 294, 314, 316, 317, 319, 323, 340, 345], "prefix": [14, 40, 136, 139, 144, 145, 188, 201, 202, 211, 224, 295, 297, 317], "end": [14, 123, 149, 152, 267, 268, 269, 293, 295, 296, 297, 312, 314, 316, 319, 328, 329, 330, 334, 335, 338, 343], "yml": 14, "reason": [14, 17, 44, 136, 293, 296, 316, 345], "add_namelist_fil": [14, 25, 139, 293, 295], "add_model_config_opt": [14, 25, 139, 293, 295, 316], "add_streams_fil": [14, 25, 139, 293, 295], "themselv": [14, 296, 315], "question": [14, 293, 317], "never": [14, 136, 314], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 139, 316], "config_run_dur": [14, 139, 295, 316], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 163, 314, 316], "config_block_decomp_file_prefix": [14, 316], "time_integr": [14, 139, 316, 329, 330, 331, 332, 336, 337], "config_time_integr": [14, 139], "rk4": [14, 139, 296, 329, 330, 331, 332, 336, 337], "filename_templ": [14, 139, 316], "restart": [14, 18, 49, 139, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 294, 296, 302, 303, 312, 314, 316, 340, 345], "output_interv": [14, 139, 316, 329, 330, 331, 332, 336, 337], "0030_00": 14, "clobber_mod": [14, 139, 316], "truncat": [14, 139, 316], "reference_tim": [14, 139], "0001": [14, 139, 316], "01_00": [14, 139, 310, 316], "tracer": [14, 19, 184, 194, 237, 238, 240, 242, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 316, 326, 330, 331, 333, 334, 335, 336, 337, 338], "xtime": [14, 15, 86, 139, 316], "normalveloc": [14, 18, 19, 139, 181, 226, 277, 278, 284, 285, 288, 293, 316, 338], "layerthick": [14, 18, 139, 181, 258, 262, 263, 264, 265, 266, 278, 284, 285, 288, 293, 316], "refzmid": [14, 258, 264, 265, 293, 316], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 316], "clariti": [14, 293], "global_converg": [14, 295, 316, 327], "substitut": 14, "config_write_output_on_startup": [14, 316], "0000_00": [14, 316], "config_use_mom_del2": [14, 316], "config_implicit_bottom_drag_coeff": [14, 316], "0e": [14, 335, 338], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 316], "config_cvmix_background_viscos": [14, 316], "worri": 14, "sometim": [14, 258, 264, 265, 289, 291, 293, 295, 314, 316, 345], "togeth": [14, 18, 136, 289, 314, 316, 345], "overkil": 14, "reli": [14, 293, 295, 316], "along": [14, 19, 136, 267, 268, 269, 278, 293, 315, 316], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 88, 89, 91, 95, 96, 112, 114, 115, 121, 125, 126, 127, 139, 141, 149, 152, 158, 187, 200, 210, 223, 245, 247, 252, 293, 295, 316], "config_mom_del2": [14, 278, 293, 316], "precis": [14, 139, 293, 316], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 60, 63, 109, 110, 114, 119, 120, 121, 122, 123, 127, 151, 154, 155, 167, 173, 184, 191, 197, 236, 238, 240, 242, 247, 252, 266, 267, 269, 316], "possibli": [14, 38, 49, 273, 274, 290, 293, 295, 297, 316], "at_setup": [14, 30, 151, 167, 173, 191, 316], "being": [14, 30, 38, 49, 109, 111, 114, 120, 136, 139, 151, 167, 173, 191, 267, 293, 295, 296, 297, 316, 325], "dt": [14, 139, 165, 236, 293, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 344], "proport": [14, 139, 316, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 344], "dt_per_km": [14, 139, 279, 280, 281, 282, 286, 287, 316, 328, 334, 335, 339, 344], "stackoverflow": [14, 60, 316], "1384565": [14, 316], "7728169": [14, 60, 316], "config_dt": [14, 139, 316], "strftime": [14, 316], "gmtime": [14, 316], "run_time_step": [14, 165, 293, 316], "durat": [14, 139, 278, 284, 285, 288, 294, 316], "run_second": [14, 316], "btr_dt": [14, 139, 165, 236, 293, 316, 328], "btr_dt_per_km": [14, 139, 316, 328], "config_btr_dt": [14, 139, 316], "bit": [14, 136, 296, 314, 316, 328, 340], "complic": [14, 296, 297, 316], "slightli": [14, 297], "sophist": 14, "immutable_stream": [14, 316], "var_struct": [14, 309], "var": [14, 116, 309, 316], "var_arrai": [14, 309], "tag": [14, 315], "taken": [14, 25, 155, 269, 279, 280, 281, 282, 286, 287, 293, 316, 323, 340], "past": 14, "experi": [14, 136, 296, 325], "difficult": [14, 136, 322], "synchron": [14, 315], "out_nam": 14, "equival": [14, 297, 316, 318], "template_replac": [14, 28, 29, 139], "treat": [14, 294, 296], "jinja2": [14, 28, 29, 115, 149, 152], "render": [14, 28, 29, 115], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 293, 296, 297, 317, 340], "qu240dynamicadjust": 14, "adjust": [14, 136, 139, 275, 317], "interv": [14, 15, 160, 329, 330, 331, 332, 336, 337], "spin": 14, "reus": [14, 19, 123, 293, 296, 297, 316, 317, 340], "qualit": 14, "forgotten": 14, "broken": [14, 293, 296], "immedi": [14, 66, 297, 316], "miss": [14, 293, 316, 317], "detect": [14, 19, 317, 318, 320, 321, 322, 332, 340], "gpmeti": [14, 317], "divid": [14, 19, 271, 325], "partition_graph": [14, 25, 155], "circumst": [14, 18, 38, 39, 293, 316], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 313, 316, 339, 344], "v1": [14, 325], "better": [14, 17, 136, 340], "v2": [14, 317, 325], "littl": [14, 296, 297, 315, 316], "feel": [14, 136, 293, 316], "runtime_setup": [14, 17, 35, 45, 278, 284, 285, 295], "yourself": [14, 316, 322], "culler": 14, "cull": [14, 278, 284, 285, 293, 316], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 82, 84, 85, 122, 123, 139, 142, 143, 144, 145, 188, 195, 201, 202, 206, 211, 224, 246, 254, 258, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 278, 282, 284, 285, 288, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337], "weight": [14, 15, 17, 84, 258, 264, 265, 268, 269, 271, 272, 316, 325], "weight_field": [14, 84], "helper": [15, 289, 290], "handi": 15, "area_for_field": 15, "right": [15, 136, 139, 267, 295, 297, 316, 317, 325, 328, 330, 340], "edg": [15, 19, 85, 98, 101, 105, 122, 123, 212, 213, 225, 226, 268, 269, 270, 277, 316], "dimens": [15, 19, 85, 123, 139, 141, 146, 188, 201, 266, 273, 274, 288, 328], "statist": [15, 317], "calcul": [15, 284, 293, 295], "xr": [15, 19, 212, 213, 214, 225, 226, 227, 293, 316], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 145, 202], "mesh_filenam": [15, 19, 25, 84, 122, 155, 161], "open_dataset": [15, 19, 293, 316], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 86, 139, 274, 289], "get_output_field": [15, 139], "field_nam": [15, 19, 123, 143, 144, 145, 188, 201, 202, 211, 224, 246], "output_filenam": [15, 139, 149, 152, 161], "ds_out": [15, 268, 269], "time_index": [15, 86], "isel": [15, 19, 266], "frequent": [17, 275, 309], "observ": [17, 268, 269, 272, 315], "dataset": [17, 85, 86, 123, 212, 225, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 293, 316], "region": [17, 19, 315, 317], "pyremap": [17, 102], "interpol": [17, 96, 267, 268, 269, 271, 272, 273, 274, 317], "hood": 17, "esmf_regridweightgen": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 325], "bilinear": [17, 96, 267, 330, 339, 344], "filenam": [17, 18, 38, 40, 41, 49, 90, 97, 98, 99, 100, 104, 105, 106, 120, 122, 126, 128, 293, 295, 297, 316], "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 317], "destin": [17, 96, 97, 98, 99, 100, 101, 102], "src_from_lon_lat": 17, "lon_var": [17, 97, 99, 104], "lat_var": [17, 97, 99, 104], "dst_from_mpa": 17, "mesh_nam": [17, 97, 98, 99, 100, 101, 104, 105, 106, 142, 144, 145, 154, 188, 195, 201, 202, 206, 211, 224, 254, 295], "qu60": 17, "subclass": [17, 71, 74, 75, 76, 81, 139, 316], "src_": 17, "dst_": 17, "pick": [17, 107, 108], "vizmap": [17, 184, 197, 242, 295], "128": [17, 294, 319, 320, 323], "cosine_bell_viz": [17, 19, 280, 330, 339, 344], "dlon": [17, 101, 330, 339, 344], "dlat": [17, 101, 330, 339, 344], "remap_method": [17, 330, 339, 344], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 101], "With": [17, 297], "approach": [17, 293, 296, 297, 313, 316, 325], "perhap": [17, 19, 41, 267, 289, 291], "cover": [17, 310, 316], "nearli": [17, 293, 295, 314, 315, 316], "workflow": [17, 293, 297], "critic": [18, 316], "easiest": [18, 136, 297], "validate_var": [18, 38, 41, 139, 149, 152, 236, 293], "meth": 18, "add_output_fil": [18, 39, 293, 295, 316], "temperatur": [18, 181, 277, 278, 285, 288, 293, 312, 316, 328, 329, 330, 331, 332, 336, 337, 338, 339, 344], "salin": [18, 181, 277, 278, 288, 293, 316, 328, 329, 330, 331, 332, 336, 337, 338, 339, 344], "done": [18, 35, 45, 293, 295, 297, 316, 340], "compare_vari": [18, 316], "filename1": [18, 120, 316], "filename2": [18, 120, 316], "compact": [18, 316], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 120], "valueerror": [18, 296], "quiet": [18, 109, 110, 120, 127], "report": 18, "threshold": [18, 139, 286, 329, 330, 331, 332, 334, 335, 336, 337], "l1": [18, 120], "00000000000000e": 18, "l2": [18, 120, 139, 142, 143, 279, 280, 281, 282, 286, 287, 329, 330, 331, 332, 334, 335, 336, 337], "l_infin": 18, "linf": [18, 120], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 278, 328], "2thread": [18, 328], "test_20210616": 18, "further_valid": 18, "zero": [18, 259, 260, 261, 262, 263, 266, 268, 269, 272, 277, 278, 288, 316, 329, 330, 331, 336, 337, 338], "l1_norm": [18, 120], "l2_norm": [18, 120], "linf_norm": [18, 120], "nonzero": [18, 120], "solut": [18, 135, 142, 144, 145, 188, 201, 202, 211, 212, 213, 214, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 280, 282, 284, 285, 294, 313, 316, 326, 332, 333, 334], "aspect": [19, 123, 316], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 136, 155, 275, 297, 316, 317, 328], "plot_horiz_field": [19, 293, 316], "patch": [19, 122, 123, 316], "polygon": 19, "character": [19, 329, 331, 336, 337], "accordingli": [19, 94], "cell_mask": [19, 123], "ds_init": [19, 316], "maxlevelcel": [19, 139, 258, 259, 260, 261, 262, 263, 264, 265, 316], "final_normalveloc": [19, 316], "t_index": [19, 123, 316], "vmin": [19, 123, 267, 316, 330], "max_veloc": [19, 316], "vmax": [19, 123, 267, 316, 330], "cmap": [19, 123, 267, 293, 316], "cmo": [19, 293, 316, 329, 331, 332, 336, 337], "balanc": [19, 197, 282, 293, 316, 329, 331, 332, 336, 337], "show_patch_edg": [19, 123, 293, 316], "water": [19, 282, 284, 316, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339], "column": [19, 234, 235, 237, 238, 240, 282, 288, 297, 301, 302, 303, 305, 306, 307, 309, 310, 312, 325, 326, 332, 333, 340, 341, 342], "increas": [19, 139, 296], "effici": [19, 293, 316], "patch_mask": [19, 123], "subsequ": [19, 293, 345], "ncell": [19, 139, 188, 201, 266, 273, 274, 293, 316], "nedg": [19, 293, 316], "cell_patch": 19, "cell_patch_mask": 19, "out_file_nam": [19, 123], "720": 19, "figsiz": [19, 122, 123, 267], "bottomdepth": [19, 139, 258, 259, 261, 262, 263, 264, 265, 293, 316, 325, 332], "edge_patch": 19, "edge_patch_mask": 19, "plot_global_mpas_field": 19, "cmocean": [19, 293, 316], "noqa": [19, 66, 293, 316], "f401": [19, 293, 316], "da": [19, 122, 273, 274], "tracer1": [19, 139, 329, 331, 336, 337], "nvertlevel": [19, 123, 139, 141, 146, 258, 264, 265, 266, 273, 274, 293, 316, 325], "out_filenam": [19, 118, 121, 122, 257, 267], "colormap_sect": [19, 121, 122], "titl": [19, 121, 122, 123, 139, 141, 146, 267], "plot_land": [19, 121, 122], "central_longitud": [19, 122], "180": [19, 68, 75, 76, 82, 101, 139, 271, 329, 330, 331, 336, 337], "disabl": [19, 277, 330, 346], "contin": [19, 121, 122], "overlain": 19, "degre": [19, 68, 75, 76, 82, 101, 266, 269, 271, 317, 328], "quantiti": 19, "antimeridian": 19, "colormap": [19, 121, 122, 123, 267, 279, 280, 281, 282, 286, 287, 316, 329, 330, 331, 332, 336, 337], "cosin": [19, 139, 184, 186, 187, 189, 192, 194, 195, 203, 206, 250, 254, 280, 295, 316, 326, 327, 329, 331, 332, 333, 336, 337, 339, 344], "bell": [19, 139, 184, 186, 187, 189, 192, 194, 195, 203, 206, 250, 254, 280, 295, 316, 326, 327, 329, 331, 332, 333, 336, 337, 339, 344], "converg": [19, 184, 188, 197, 201, 202, 208, 209, 211, 221, 222, 224, 246, 279, 280, 281, 282, 284, 285, 286, 287, 291, 294, 315, 316, 329, 330, 331, 332, 334, 336, 337, 339, 344], "colormap_nam": [19, 121, 122, 279, 280, 281, 286, 287, 329, 330, 331, 332, 336, 337], "viridi": [19, 279, 280, 281, 286, 287, 316, 329, 330, 331, 336, 337], "norm": [19, 120, 121, 122, 139, 143, 146, 279, 280, 281, 282, 286, 287, 329, 330, 331, 332, 334, 335, 336, 337], "norm_typ": [19, 121, 122, 279, 280, 281, 286, 287, 329, 330, 331, 332, 336, 337], "colorbar": [19, 121, 122, 123, 267, 279, 280, 281, 286, 287, 329, 330, 331, 332, 336, 337], "colorbar_limit": [19, 122, 279, 280, 281, 286, 287, 329, 331, 332, 336, 337], "standard": [19, 296, 297, 306, 316, 319, 340], "logarithm": [19, 123], "upper": [19, 123], "bound": [19, 272, 284, 285], "plot_global_lat_lon_field": 19, "norm_arg": [19, 121, 330], "tick": [19, 121, 330], "mark": [19, 123, 267, 297, 330], "colorbar_tick": [19, 121, 330], "symlog": [19, 121], "symmetr": 19, "central": [19, 330], "color": [19, 122, 123, 267], "normal": [19, 212, 213, 225, 226, 277, 282, 293, 294, 297, 316, 322, 332], "symlognorm": 19, "lognorm": 19, "hous": [20, 329, 330, 331, 336, 337], "kei": [20, 49, 114, 139, 141, 295], "max_memori": [25, 35, 38, 45, 155, 293], "graph_filenam": [25, 84, 149, 152, 155], "make_yaml": 25, "stride": [25, 37, 155], "partit": [25, 34, 44, 61, 84, 155, 278, 284, 285, 293, 317, 318, 319, 320, 321, 323, 340], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 96, 155, 165, 236, 293], "nor": [25, 38, 49, 96, 155, 165, 236, 293, 316], "append": [25, 38, 40, 49, 96, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 236, 293, 303, 305, 307], "ideal": [25, 35, 38, 45, 92, 93, 96, 139, 155, 165, 236, 237, 238, 240, 289, 293, 296, 315, 316, 317, 346], "fewer": [25, 35, 38, 45, 92, 93, 155, 165, 236, 293, 316, 340], "memori": [25, 35, 38, 45, 155, 293, 317], "mb": [25, 35, 38, 45, 155, 293, 317], "placehold": [25, 35, 38, 45, 155, 293, 340], "diverg": [31, 158, 281, 326, 329, 332, 333, 336], "counterpart": [31, 139, 158], "nest": [31, 125, 127, 158], "graph_fil": 32, "run_as_subprocess": [38, 293], "smallest": [38, 293, 314, 325, 346], "unit": [38, 97, 101, 104, 293, 314, 328, 346], "term": [38, 314, 316, 334, 335], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 293, 295, 340], "finish": [38, 39, 81, 293, 316], "known": [38, 39, 136, 280, 293, 316], "suffici": [38, 293], "establish": [38, 39, 293], "has_shared_config": 38, "is_depend": [38, 293], "machine_info": [38, 293], "machineinfo": 38, "combin": [38, 40, 49, 57, 62, 95, 125, 293, 294, 295, 313, 316, 317, 340], "base_work_dir": [38, 49, 111, 293, 295], "log_filenam": [38, 49, 293, 295], "redirect": [38, 293], "extern": [38, 136, 275, 290, 293, 295, 309, 326, 341], "turn": [38, 56, 290, 293, 313, 316, 338], "access": [39, 295, 296, 297, 316, 318, 322, 323], "database_compon": [40, 293], "work_dir_target": [40, 293], "come": [40, 136, 293, 297, 316, 318, 319, 320, 321, 322, 323, 326], "_database_root": 40, "available_resourc": [42, 91], "constrain": [42, 150, 153, 156, 166, 190, 216, 229, 278, 284, 285, 293, 316], "cores_per_nod": [42, 91, 94, 136, 317, 318, 319, 320, 321, 322, 323, 340], "everi": [43, 278, 293, 295, 296, 312, 313, 314, 316, 328, 338], "child": [43, 139, 290, 293, 295, 296], "subtask": 45, "step_symlink": [49, 295], "outsid": [49, 50, 289, 291, 293, 295, 297], "stdout_logg": [49, 295], "goe": [49, 293, 295, 316], "regardless": [49, 295], "new_step_log_fil": [49, 295], "run_by_default": [50, 295], "assum": [51, 115, 126, 136, 297, 316, 323, 328], "prior": [51, 293], "step_path": 55, "variant": [55, 186, 199, 242, 244, 278, 289, 294, 296, 297, 316, 322, 325, 328, 329, 330, 331, 336, 337], "uncach": 55, "datestamp": 55, "yymmdd": [55, 317], "dry": [55, 294], "meta": 57, "empti": [57, 267, 293, 296, 297, 314, 316], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 110, 297], "isadirectoryerror": 60, "qo": [61, 318, 319, 321, 322, 323, 340], "qualiti": [61, 318, 319, 321, 322, 323, 340], "servic": [61, 318, 319, 321, 322, 323, 340], "constraint": [61, 323, 340], "wall_tim": [61, 340], "wall": [61, 340], "target_cor": 62, "min_cor": 62, "decomposition_test": [66, 289, 340], "decompositiontest": [66, 289], "e501": [66, 316], "turquois": [66, 319], "usr": [66, 136, 319, 340], "climat": [66, 318, 319, 320, 322, 340], "mhoffman": 66, "constant": [67, 74, 75, 139, 267, 268, 269, 277, 287, 316, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 344], "latitud": [68, 75, 97, 99, 101, 104, 121, 122, 139, 266, 269, 329, 330, 331, 332, 336, 339, 344], "longitud": [68, 75, 76, 82, 97, 99, 101, 104, 121, 122, 139, 266, 269, 329, 330, 331, 332, 336, 339, 344], "ndarrai": [68, 75, 76, 82, 86, 121, 123, 161, 194, 256, 257, 316], "length": [68, 75, 76, 82], "90": [68, 75, 76, 82, 139, 293, 329, 330, 331, 336, 337], "static": [69, 70], "rule": 69, "thumb": 69, "achiev": [70, 294], "uniform": [74, 79, 149, 152, 189, 203, 249, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 295, 316, 317, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 344], "natur": 79, "jigsawpi": [80, 293], "jigsaw_jig_t": 80, "meti": 84, "area": [85, 268, 269, 316], "dt_target": 86, "start_xtim": 86, "char": 86, "defaults_filenam": 87, "total": [91, 293, 294, 296, 316, 317, 319, 340], "substep": [92, 93], "command_line_arg": 92, "cpus_per_nod": 94, "map_filenam": 96, "src_grid_info": 96, "dst_grid_info": 96, "neareststod": [96, 330, 339, 344], "conserv": [96, 330, 339, 344], "expand_dist": 96, "meter": [96, 194, 256, 257, 269, 329, 331, 336], "expand": [96, 139, 325], "expand_factor": 96, "src_mesh_filenam": 96, "scrip": [96, 317], "dst_mesh_filenam": 96, "map_": 96, "source_typ": 96, "_": [96, 136, 293, 295, 297, 316, 338], "dest_typ": 96, "1d": [97, 101, 104, 121, 139, 256, 257, 258, 259, 260, 261, 262, 264, 265], "2d": [97, 101, 104, 121, 272, 279], "5x0": [97, 101, 104], "5degre": [97, 101, 104], "coordin": [97, 99, 100, 104, 106, 121, 123, 212, 225, 258, 264, 265, 266, 268, 269, 271, 272, 324, 326, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 343], "mesh_typ": [98, 105, 289, 293, 295], "vertex": [98, 105], "x_var": [100, 106], "y_var": [100, 106], "proj_attr": [100, 106], "proj_str": [100, 106], "proj": [100, 106], "left": [101, 139, 267, 316, 325, 328, 330], "remapp": [102, 103], "remap_fil": 102, "progress": [109, 110], "is_task": 110, "steps_to_skip": 110, "component_nam": 111, "config_filepath": 111, "unpickl": [112, 293], "cached_step": 113, "identifi": [113, 136, 290, 309, 346], "task_list": 114, "_all": 114, "streams_filenam": 115, "lxml": [115, 117, 131], "etre": [115, 117, 131], "new_child": 116, "children": 116, "sub": [116, 316], "new_tre": 117, "infin": [120, 329, 331, 336, 337], "toler": 120, "data_arrai": 121, "colorbar_label": [121, 122, 267], "subtitl": [121, 122], "dpi": [122, 267], "200": [122, 139, 267, 284, 285, 316, 328, 334, 335, 338], "patch_edge_color": 122, "horizont": [122, 123, 139, 161, 266, 267, 272, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 328, 329, 331, 334, 335, 336, 337, 338], "inch": [122, 123, 267], "dot": [122, 123, 267, 296], "face": 122, "ax": [123, 267], "z_index": 123, "cmap_set_und": 123, "cmap_set_ov": 123, "cmap_scal": 123, "cmap_titl": 123, "vert_dim": 123, "transect_x": 123, "transect_i": 123, "transect_color": 123, "black": [123, 267], "transect_start": 123, "red": [123, 267, 291], "transect_end": 123, "green": [123, 267, 291], "transect_linewidth": 123, "transect_markers": 123, "depth": [123, 139, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 316, 317, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339], "slice": [123, 142], "fieldnam": 123, "matplotlib": [123, 124, 267, 316], "multi": [123, 267], "panel": [123, 267], "visibl": 123, "bar": 123, "ratio": 123, "Not": 123, "transect": [123, 139, 266, 267, 317], "marker": 123, "style": [124, 139, 315, 316], "classmethod": 126, "jinja": [126, 139, 279, 280, 281, 286, 287], "namelist_templ": 130, "polarisyaml": [130, 131], "processed_registry_filenam": 131, "registri": [131, 277, 309], "steam": 131, "1_anvil_intel_impi": [132, 136], "mvapich": [132, 136, 318], "ve": [132, 133, 134, 135, 137, 297, 316], "1_anvil_gnu_openmpi": 132, "1_chicoma": 133, "cpu_gnu_mpich": [133, 137], "crai": [133, 136, 137, 319, 323], "1_chrysalis_intel_openmpi": 134, "1_chrysalis_gnu_openmpi": 134, "soon": [135, 136, 316, 340], "1_compy_intel_impi": 135, "1_compy_gnu_openmpi": 135, "load_polaris_env": [136, 297, 316, 340], "therefor": [136, 293, 314, 316], "chicoma": [136, 322, 340], "mpich": [136, 297, 315, 319, 323, 340], "compi": [136, 321, 340], "pm": [136, 323, 340], "compymcnodefac": [136, 322], "perlmutt": [136, 319, 322, 340], "pretti": [136, 293, 296, 316, 317], "conda_path": [136, 297], "osx": [136, 322], "clang": [136, 297], "1_": 136, "morpheu": 136, "cobalt": [136, 318, 319, 320, 321, 322, 323], "single_nod": [136, 317, 318, 319, 320, 321, 322, 323, 340], "mpirun": [136, 313, 317, 318, 319, 320, 321, 322, 323, 340], "srun": [136, 293, 313, 316, 317, 318, 319, 320, 321, 322, 323, 340], "parallel_execut": [136, 313, 317, 318, 319, 320, 321, 322, 323, 340], "modules_befor": [136, 319, 323], "modules_aft": [136, 319, 323], "polaris_env": [136, 318, 319, 320, 321, 322, 323], "deploi": [136, 297, 315, 318, 319, 320, 321, 322, 323], "mpi_gnu": [136, 318, 319, 320, 321, 322, 323], "hdf5": [136, 318, 319, 320, 321, 322, 323], "use_e3sm_hdf5_netcdf": [136, 318, 319, 320, 321, 322, 323], "discoveri": 136, "hostnam": 136, "hostname_contain": 136, "queu": 136, "laptop": [136, 297, 316, 317], "workstat": [136, 297], "high": [136, 293, 320, 322], "hpc": [136, 297, 319, 322], "safest": [136, 297], "mpi_": 136, "simpl": [136, 139, 296, 309, 316, 340], "compiler_gnu": 136, "compiler_intel": 136, "hopefulli": [136, 317], "parlanc": 136, "concret": 136, "ubuntu": 136, "spec": [136, 313, 323], "gcc": 136, "curl": 136, "81": 136, "buildabl": 136, "install_missing_compil": 136, "cc": 136, "bin": [136, 297, 323, 340], "cxx": 136, "f77": 136, "fc": 136, "operating_system": 136, "ubuntu22": 136, "04": 136, "extra_rpath": 136, "luck": 136, "catch": [136, 294], "22": 136, "guess": [136, 316], "correct": [136, 297], "potenti": [136, 161, 174, 293, 316, 328], "purg": 136, "perl": 136, "32": [136, 294, 340], "bsnc6lt": 136, "ugetvbp": 136, "sxfyy4k": 136, "2020": 136, "304": 136, "n3b5fye": 136, "j3zxncu": 136, "7ohuiwq": 136, "k2zu3y5": 136, "mirrcz7": 136, "variou": [136, 234, 293, 297, 301], "ask": 136, "gb": 136, "minut": [136, 278, 294, 328, 345], "hour": [136, 139, 284, 285, 294, 312, 319, 323, 329, 330, 331, 332, 334, 335, 336, 337, 340, 343], "zlib": 136, "incompat": 136, "ubuntu20": 136, "readlin": 136, "pkgconf": 136, "spackdir": 136, "env": [136, 323], "arch": 136, "repositori": [136, 291, 315, 316, 340], "x86_64_v4": 136, "free": [136, 277, 316, 317], "touch": [136, 268, 269, 297], "everyth": 136, "1_pm": 137, "ever": [139, 296], "oceanmodelstep": [139, 293, 316], "decid": [139, 316], "veri": [139, 290, 293, 296, 297, 309, 316, 332, 338], "earli": [139, 326, 340], "stage": [139, 277, 293, 295, 297, 305, 312, 326, 340], "map_yaml_to_namelist": 139, "heurist": 139, "round": [139, 329, 330, 331, 336, 337], "cell_count": [139, 150, 153, 156, 166, 190, 216, 229, 316], "goal_cells_per_cor": [139, 316, 329, 330, 331, 334, 335, 336, 337, 339, 344], "pinch": 139, "2000": [139, 289, 310, 312, 316, 343], "max_cells_per_cor": [139, 316, 329, 330, 331, 334, 335, 336, 337, 339, 344], "seciton": 139, "control": [139, 279, 280, 281, 282, 286, 287, 293, 317, 328, 329, 330, 331, 336, 337, 338, 340], "scale": [139, 328, 336, 340], "tri": [139, 296], "apport": 139, "dai": [139, 160, 174, 278, 279, 280, 281, 282, 286, 287, 288, 312, 316, 328, 329, 330, 331, 332, 336, 337, 338, 343], "form": [139, 346], "dddd_hh": [139, 160], "ss": [139, 160], "get_time_interval_str": 139, "run_dur": [139, 329, 330, 331, 332, 336, 337], "fill": 139, "dt_str": 139, "run_duration_str": 139, "output_interval_str": 139, "yaml_filenam": [139, 149, 152], "caviti": [139, 296, 316, 317, 325], "frazil": 139, "flux": [139, 277, 338], "fix": [139, 316], "add_spherical_base_mesh_step": [139, 295], "spherical_converg": [139, 282, 295, 329, 330, 331, 336, 337], "icos_resolut": [139, 329, 330, 331, 336, 337], "480": [139, 329, 330, 331, 336, 337], "qu_resolut": [139, 329, 330, 331, 336, 337], "150": [139, 329, 330, 331, 336, 337], "210": [139, 325, 329, 330, 331, 336, 337], "evalu": [139, 142, 143, 144, 145, 188, 201, 202, 211, 213, 214, 224, 226, 227, 246, 279, 281, 286, 287, 329, 330, 331, 332, 336, 337], "convergence_eval_tim": [139, 329, 330, 331, 332, 336, 337], "24": [139, 280, 330, 343], "convergence_thresh": [139, 330], "error_typ": [139, 142, 143, 329, 330, 331, 332, 336, 337], "convergence_forward": [139, 279, 280, 281, 286, 287, 330, 332], "split_explicit": [139, 329, 330, 331, 332, 336, 337], "rk4_dt_per_km": [139, 329, 330, 331, 332, 336, 337], "split": [139, 296], "split_dt_per_km": 139, "barotrop": [139, 165, 236, 293, 316, 328, 338], "simul": [139, 284, 285, 293, 314, 316, 327, 328, 329, 332, 334, 335, 339, 340, 344], "numer": [139, 279, 281, 286, 287, 329, 331, 334, 335, 336, 337], "infti": [139, 325], "inf": [139, 142, 143, 332], "infrastructur": [139, 296, 316], "add_cosine_bell_task": [139, 290], "sphericalconvergenceforward": [139, 279, 280, 281, 282, 286, 287], "invok": 139, "analyz": [139, 141, 187, 200, 245, 247, 252, 316, 329, 330, 331, 336, 337], "split_explicit_t": [139, 316], "convergenceforward": [139, 284, 285], "convergenceanalysi": [139, 279, 280, 281, 282, 284, 285, 286, 287], "convergence_var": [139, 141], "zidx": [139, 141, 142, 144, 145, 146, 188, 201, 202, 211, 224], "exact_solut": 139, "state": [139, 144, 161, 163, 164, 171, 174, 179, 188, 201, 211, 224, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 294, 316, 330, 332], "put": [139, 297, 316], "grid_1d": 139, "generate_1d_grid": 139, "vertical_grid": [139, 256, 258, 264, 265, 289, 293, 316, 317, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "z": [139, 141, 142, 144, 145, 146, 188, 201, 202, 211, 224, 259, 260, 261, 262, 263, 264, 265, 316, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "star": [139, 263, 265, 316, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "init_vertical_coord": [139, 293, 316], "minlevelcel": [139, 258, 260, 261, 262, 263, 264, 265, 316], "cellmask": [139, 258, 261, 264, 265, 316], "zmid": [139, 258, 264, 265, 316], "restingthick": [139, 258, 263, 264, 265, 316], "entir": [139, 316, 328, 345], "petersen": [139, 297, 316, 328], "et": [139, 316, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337], "al": [139, 316, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337], "2015": [139, 316, 328], "int_": 139, "rho": 139, "dv": 139, "sort": [139, 290, 291, 296, 297], "compute_rp": [139, 316], "csv": [139, 279, 280, 281, 282, 286, 287, 316], "compute_transect": [139, 267], "plot_transect": [139, 266], "dependencies_dict": 141, "rate": [141, 143, 144, 188, 201, 211, 224, 246, 279, 280, 281, 282, 284, 285, 286, 287, 316, 329, 330, 331, 332, 334, 335, 336, 337, 338], "variable_nam": [142, 146], "exact": [142, 144, 145, 188, 201, 202, 211, 212, 213, 214, 224, 225, 226, 227, 280, 282, 284, 285, 296, 334, 335], "conv_thresh": [143, 246, 334, 335], "deriv": [144, 211, 224], "subdivid": [154, 268, 269, 295], "dynamic_ntask": 155, "dynam": [155, 275, 288, 317, 328, 329, 330, 331, 332, 336, 337, 338, 339], "available_cor": 157, "estim": [157, 159, 316], "time_str": 160, "initial_state_filenam": 161, "energi": [161, 174, 315, 316, 328], "len": [161, 316], "output_fil": [161, 293, 316], "shorter": [171, 294, 302], "step_subdir": [180, 303], "processor": [180, 293, 303, 328], "include_viz": [184, 197, 242, 295], "advect": [184, 242, 279, 280, 281, 282, 286, 287, 329, 330, 331, 334, 335, 336, 337, 338], "less": [184, 197, 242, 247, 252, 293, 325], "max_valu": 194, "ri": 194, "accord": [194, 332, 334, 335, 340], "radiu": [194, 269, 329, 330, 331, 336, 337], "testcas": [205, 316, 317, 328, 338, 340], "inerti": [208, 209, 210, 212, 215, 217, 219, 284, 295, 326, 333], "graviti": [208, 209, 210, 212, 215, 217, 219, 284, 295, 326, 333], "wave": [208, 209, 210, 212, 215, 217, 219, 225, 284, 293, 295, 316, 326, 328, 333, 335], "analys": [210, 223], "angleedg": [212, 225], "angl": [212, 225, 332], "posit": [212, 225, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 316, 325, 338], "xcell": [212, 225, 293, 316], "ycell": [212, 225, 293, 316], "xedg": [212, 225, 293, 316], "yedg": [212, 225], "f0": 212, "corioli": [212, 284, 285, 316, 328, 329, 330, 331, 332, 335, 336, 337, 338], "eta0": [212, 225], "amplitid": [212, 225], "kx": [212, 225], "ky": [212, 225], "angular": [212, 225], "frequenc": [212, 225, 278], "veloc": [213, 226, 277, 278, 282, 284, 285, 295, 297, 316, 329, 330, 331, 332, 336, 337, 338, 340], "norm_vel": 213, "eta": [214, 227, 334, 335], "taskdir": [217, 219, 230, 232], "manufactur": [221, 222, 223, 225, 228, 230, 232, 285, 326, 333], "mix": [235, 289, 290, 329, 334, 335, 338], "param": [235, 237], "resources_fix": 236, "ag": [237, 238, 240], "evolv": [237, 315, 325, 329, 330, 331, 336, 337, 338], "ideal_ag": [238, 240], "case_nam": [242, 245, 247, 249, 250, 252], "transport": [244, 245, 247, 249, 252, 279, 281, 286, 287, 329, 330, 331, 336, 337], "nondivergent_2d": [244, 275, 283, 336], "divergent_2d": [244, 275, 283, 331], "correlated_tracers_2d": [244, 275, 283, 329], "rotation_2d": [244, 275, 283, 337], "layer": [256, 257, 258, 262, 263, 264, 265, 266, 267, 272, 277, 278, 279, 281, 284, 285, 286, 287, 288, 316, 317, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "bottom": [258, 259, 260, 261, 262, 263, 264, 265, 277, 316, 317, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339], "thick": [258, 262, 263, 264, 265, 266, 272, 278, 279, 281, 282, 286, 287, 288, 310, 316, 317, 325, 328, 329, 331, 332, 334, 336, 337, 343], "stretch": [258, 264, 265, 316, 325], "elev": [258, 264, 265, 316, 325], "midpoint": [258, 264, 265, 316], "reftopdepth": [258, 261, 262, 264, 265, 316], "down": [258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 316, 325, 330], "ref": [258, 264, 265, 316], "middl": [258, 264, 265, 267, 316], "refbottomdepth": [258, 259, 260, 261, 262, 264, 265, 293, 316], "refinterfac": [258, 264, 265, 316], "element": [258, 264, 265, 316], "vertcoordmovementweight": [258, 264, 265, 316], "movement": [258, 264, 265, 316], "alter": [259, 260, 293, 295, 315, 316, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339], "partial": [259, 260, 316, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "seafloor": [259, 261, 262, 263, 266, 267, 272, 325], "unstretch": 263, "ds_horiz_mesh": 266, "layer_thick": [266, 272], "bottom_depth": [266, 272, 293, 316, 317, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339], "min_level_cel": [266, 272], "max_level_cel": [266, 272], "quad": 266, "intersect": [266, 268, 269, 270], "instant": 266, "tidx": 266, "ds_transect": [266, 267, 272, 273, 274], "vert": 266, "find_transect_levels_and_weight": [266, 273, 274], "mpas_field": 267, "flat": [267, 325, 328, 332], "outline_color": 267, "ssh_color": 267, "seafloor_color": 267, "interface_color": 267, "cell_boundary_color": 267, "linewidth": 267, "color_start_and_end": 267, "start_color": 267, "end_color": 267, "3d": 267, "outlin": 267, "boundari": [267, 272, 315, 328, 346], "inset": 267, "axi": [267, 293, 316, 337], "plot_start_end": 267, "x_transect": 268, "y_transect": 268, "ds_tri": [268, 269, 270, 271], "subdivision_r": [268, 269], "10000": [268, 269, 334, 335], "triangl": [268, 269, 270, 271, 272], "segment": [268, 269, 270, 272], "mesh_to_triangl": [268, 269, 270], "scipi": [268, 269, 270, 317], "spatial": [268, 269, 270, 338], "ckdtree": [268, 269, 270], "make_triangle_tre": [268, 269], "candid": [268, 269], "enough": [268, 269, 270, 278, 293, 296, 316], "curvatur": [268, 269], "lie": [268, 269], "purposefulli": [268, 269], "repeat": [268, 269], "discontinu": [268, 269, 331, 336, 337], "xnode": [268, 271], "ynode": [268, 271], "dnode": [268, 269], "horiztriangleindic": [268, 269], "horiztrianglenodeindic": [268, 269], "mod": [268, 269], "horizcellindic": [268, 269], "interphorizcellindic": [268, 269], "interphorizcellweight": [268, 269], "averag": [268, 269], "xtransect": 268, "ytransect": 268, "dtransect": [268, 269], "transectindicesonhoriznod": [268, 269], "transectweightsonhoriznod": [268, 269], "nodevalu": [268, 269], "transectvalu": [268, 269], "lon_transect": 269, "lat_transect": 269, "earth_radiu": 269, "radian": [269, 271], "earth": [269, 315], "sphere_radiu": 269, "cartesian": [269, 271, 337], "xcartnod": 269, "ycartnod": 269, "zcartnod": 269, "lonnod": [269, 271], "latnod": [269, 271], "lontransect": 269, "lattransect": 269, "xcarttransect": 269, "ycarttransect": 269, "zcarttransect": 269, "great": [269, 316], "circl": 269, "kd": 270, "connect": [271, 316, 323], "pair": [271, 329, 331, 336, 337, 343], "tricellindic": 271, "nodecellindic": 271, "nodecellweight": 271, "znode": 271, "counterclockwis": 271, "wind": [271, 332, 338], "ds_horiz_transect": 272, "horiz": 272, "find_spherical_transect_cells_and_weight": 272, "find_planar_transect_cells_and_weight": 272, "transectz": 272, "bilinearli": 272, "nsegment": [272, 273], "nhalflevel": [272, 273], "quadrilater": 272, "nhoriznod": [272, 274], "nvertnod": [272, 274], "corner": 272, "validcel": 272, "validnod": 272, "ztransectnod": 272, "zseafloor": 272, "floor": [272, 325], "cellindic": 272, "levelindic": 272, "interpcellindic": 272, "interplevelindic": 272, "nhorizweight": 272, "nvertweight": 272, "interpcellweight": 272, "multipli": [272, 329, 330, 331, 332, 336, 337], "dinterfaceseg": 272, "zinterfaceseg": 272, "dcellboundari": 272, "zcellboundari": 272, "interp_mpas_to_transect_cel": 272, "interp_mpas_to_transect_nod": 272, "among": [273, 274, 289, 291, 297, 316], "da_cel": 273, "whatev": [273, 274, 340], "besid": [273, 274], "linearli": 274, "neighbor": 274, "da_nod": 274, "shelv": [275, 317, 325], "ssh_adjust": [275, 293, 317], "compass_branch": 275, "example_compact": [275, 290, 309, 317], "default_input": [275, 290, 309, 316, 317], "ocean_model": [275, 297, 317], "latest": [275, 297, 309, 315, 326, 340], "compat": [275, 297, 309, 313, 315], "verison": 275, "geostroph": [275, 283, 326, 333], "manufactured_solut": [275, 283, 290, 335], "single_column": [275, 283, 290, 309, 311, 338], "minim": 277, "fcell": [277, 293, 316, 329, 330, 331, 336, 337], "fedg": [277, 293, 316, 329, 330, 331, 336, 337], "fvertex": [277, 293, 316, 329, 330, 331, 336, 337], "slip": 277, "solid": [277, 310, 328, 330], "tangenti": 277, "nonperiod": 277, "drag": [277, 279, 280, 281, 282, 286, 287], "mass": 277, "momentum": [277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 334, 335], "scalar": 277, "rigid": [277, 337], "solv": [277, 313, 325], "mid": [277, 328, 336], "vari": [277, 279, 280, 281, 282, 286, 287, 293, 313, 322, 325, 330, 332], "consult": [277, 316], "tidal_forc": 277, "eddi": [278, 328], "addition": [278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 318, 319, 320, 321, 323], "diffus": [278, 279, 280, 281, 282, 284, 285, 286, 287, 288], "50": [278, 284, 285, 316, 328, 334, 335, 338], "prescrib": [278, 284, 285, 332], "intens": 278, "sphere_transport": [279, 281, 286, 287, 329, 331, 336, 337], "spheretransport": [279, 281, 286, 287], "deform": [279, 286, 336], "flow": [279, 281, 286, 287, 328, 329, 330, 331, 332, 336, 337], "distribut": [279, 280, 281, 286, 287, 329, 331, 336, 337], "scheme": [279, 281, 286, 287, 329, 336, 338], "correlated_trac": 279, "differenti": [279, 281, 286, 287], "convergence_": [279, 281, 286, 287], "mixinganalysi": 279, "relationship": [279, 329], "correl": [279, 326, 333], "triplot": 279, "fast": [279, 280, 281, 282, 286, 287, 316], "sphere_transport_viz_": [279, 281, 286, 287], "cosinebel": [280, 295], "shape": [280, 330], "blob": 280, "around": [280, 316, 317, 328, 329, 330, 331, 336, 337], "convergence_tracer1": 280, "convergence_h": 282, "convergence_normalveloc": 282, "shallow": [284, 297, 329, 330, 331, 332, 334, 335, 336, 337, 339], "100": [284, 285, 288, 325, 334, 335, 338], "25": [284, 285, 329, 331, 334, 335, 336, 337, 338], "exactsolut": [284, 285], "obtain": [284, 285, 297, 319], "normal_veloc": [284, 285, 293, 316], "assign": [284, 285, 330], "fall": [284, 285, 340], "accept": [284, 285], "manufacturedsolut": 285, "nondiverg": [286, 326, 333], "filamentanalysi": 286, "filament": [286, 336], "rotat": [287, 326, 329, 330, 331, 333, 334, 335, 336], "exercis": [288, 312, 329, 330, 331, 332, 336, 337, 338], "kpp_test": 288, "mixedlayerdepthsoutput": 288, "idealagetrac": [288, 338], "single_column_forc": [288, 338], "profil": [288, 313, 338], "throughout": [288, 328, 338], "idealag": 288, "enabel": 288, "formal": 289, "organ": [289, 291, 294, 315], "conceptu": [289, 296], "broadli": [289, 290, 296], "realist": [289, 315, 346], "greenland": [289, 315, 346], "2000m": [289, 340], "34": [289, 340], "halfar": 289, "cism": 289, "dome_typ": 289, "put_origin_on_a_cel": 289, "hydrologi": 289, "hydro": [289, 346], "dome_viz": 289, "time_slic": 289, "save_imag": 289, "hide": [289, 316], "hide_fig": 289, "clutter": 289, "smoke_test": [289, 295], "smoketest": [289, 295], "restart_test": 289, "restarttest": 289, "add_dome_task": 289, "variable_resolut": [289, 293, 340], "talk": 289, "reduc": [289, 293], "encompass": 290, "perspect": 290, "four": 290, "major": [290, 293], "broader": 290, "univers": 290, "add_inertial_gravity_wave_task": 290, "add_manufactured_solution_task": 290, "add_single_column_task": 290, "alphabet": [290, 316], "landice_model": [290, 297], "diagram": 291, "blue": [291, 318, 340], "orang": 291, "laid": 291, "fig": 291, "organiz": 291, "concept": [291, 296, 316, 346], "somewher": 293, "multiprocess": [293, 296, 317], "aspir": 293, "emploi": 293, "unwant": 293, "outer": 293, "inner": 293, "dome_varres_grid": 293, "signific": [293, 294, 295], "neglig": 293, "culled_graph": [293, 316], "meshstep": 293, "getint": 293, "mesh_cpus_per_task": 293, "mesh_min_cpus_per_task": 293, "fit": [293, 317], "applic": [293, 296, 297, 339, 344], "launch": [293, 315], "write_netcdf": [293, 316], "convers": [293, 316], "greater": [293, 316], "graphinfofilenam": [293, 316], "culled_mesh": [293, 316], "use_dist": [293, 316, 328], "gradient_width_dist": [293, 316, 328], "gradient_width_frac": [293, 316, 328], "bottom_temperatur": [293, 316, 328], "surface_temperatur": [293, 316, 328, 338], "temperature_differ": [293, 316, 328], "coriolis_paramet": [293, 316, 328, 334, 335, 338], "x_cell": [293, 316], "y_cell": [293, 316], "ones_lik": [293, 316], "zeros_lik": [293, 316], "x_min": [293, 316], "min": [293, 316, 325, 328, 338], "x_max": [293, 316], "y_min": [293, 316], "y_max": [293, 316], "y_mid": [293, 316], "x_perturb_min": [293, 316], "x_perturb_max": [293, 316], "perturb_width": [293, 316, 328], "y_offset": [293, 316], "sin": [293, 316, 328, 329, 331, 332, 334, 335, 336], "pi": [293, 316, 325, 328, 329, 330, 331, 332, 336], "temp_vert": [293, 316], "frac": [293, 316, 325, 328, 329, 331, 334, 336], "logical_and": [293, 316], "transpos": [293, 316], "3rd": [293, 316], "crest": [293, 316, 328], "expand_dim": [293, 316], "dim": [293, 316], "broadcast": [293, 316], "xvertex": [293, 316], "attr": [293, 316], "initial_temperatur": [293, 316], "initial_normal_veloc": [293, 316], "superclass": 293, "commandlin": 293, "harm": 293, "likewis": [293, 316], "arisen": 293, "problemat": 293, "add_depend": 293, "usual": [293, 295, 297, 316, 340], "forwardstep": 293, "mesh_path": 293, "mesh_step": 293, "with_ice_shelf_cav": 293, "initial_state_target": 293, "adjusted_init": 293, "forcing_data": 293, "init_mode_forcing_data": 293, "entha_analy_result": 293, "mat": 293, "enthalpy_benchmark": 293, "ourselv": 293, "problem": [293, 297, 313, 316], "firewal": 293, "bedmachineantarctica_v2_and_gebco_2022_0": 293, "05_degree_20220729": 293, "slate": 293, "icepresent_qu60km_polar": 293, "practic": [293, 296, 297], "straightforward": 293, "commonli": [293, 314], "notat": [293, 339, 344], "phc": [293, 325], "That": [293, 296, 314, 316, 340], "word": 293, "ff": 293, "quwisc240": [293, 296, 340], "90c": 293, "91c": 293, "92": [293, 325], "91": 293, "sowisc12to60": [293, 340], "performance_test": 293, "transfer": 293, "feasibl": 293, "overhead": 293, "philosophi": [294, 296, 316], "context": [294, 316], "namesak": 294, "256": [294, 319, 323], "count": [294, 314], "quicker": 294, "exce": 294, "offer": 294, "benefit": [294, 315], "bug": 294, "coverag": 294, "exhaust": 294, "recent": [294, 326, 341], "merg": 294, "reach": 294, "steadi": [294, 332], "wet": 294, "fundament": 295, "incorpor": 295, "velo_solv": 295, "sia": [295, 297], "fo": 295, "runmodel": 295, "run_step": 295, "0200": 295, "00_00": [295, 310, 316], "recip": 295, "demonstr": [295, 316], "fairli": [295, 296, 297, 316], "_cosine_bel": 295, "_with_viz": 295, "_setup_step": [295, 316], "_resolut": 295, "remove_step": 295, "analysis_depend": 295, "base_mesh_step": 295, "cos_bell_dir": 295, "_init_": 295, "init_step": 295, "_forward_": 295, "forward_step": 295, "with_viz_dir": 295, "_map_": 295, "viz_map": 295, "_viz_": 295, "rare": [295, 297], "480km": 295, "closer": 295, "imp_r": 295, "joinpath": 295, "initial_condit": 296, "dig": [296, 317], "background": [296, 329, 331, 336, 337], "adher": [296, 316], "pep8": [296, 297], "bot": [296, 325], "violat": 296, "consid": 296, "editor": 296, "pycharm": [296, 297, 316], "spyder": 296, "linter": 296, "flake8": [296, 297], "discourag": [296, 314], "reformat": 296, "autopep8": 296, "undesir": 296, "lint": 296, "wildcard": 296, "vim": [296, 316], "plugin": 296, "id": [296, 297], "commit": [296, 297], "why": 296, "sound": 296, "subpackag": 296, "understand": [296, 317], "downstream": 296, "tutori": [296, 297], "clu": 296, "intro": 296, "docstr": [296, 315, 316], "strip": 296, "mpas_ocean": 296, "hidden": 296, "shortcut": [296, 340], "referenc": [296, 316], "mention": 296, "charact": 296, "unix": [296, 315], "distinct": 296, "mayb": [296, 316], "machine_config": 296, "endswith": 296, "splitext": 296, "exactli": [296, 297, 316, 325], "move": [296, 297, 316, 339, 344], "renam": 296, "visa": 296, "versa": 296, "comfort": [296, 316], "inherit": [296, 316], "orient": [296, 332], "program": [296, 317], "led": 296, "felt": 296, "contribut": 296, "hesit": 296, "predecessor": [296, 314, 315], "clumsi": 296, "harder": 296, "outcom": 296, "augment": 296, "explain": 296, "hope": 296, "dens": 296, "learn": [296, 316], "curv": 296, "worth": [296, 316], "skill": 296, "endeavor": 296, "readabl": 296, "manipul": 296, "get_available_cores_and_nod": 296, "theoret": 296, "dozen": 296, "theori": 296, "biogeochemistri": 296, "ksh": 297, "mac": [297, 315], "csh": 297, "tcsh": 297, "temporarili": 297, "recogn": [297, 317, 340], "permiss": 297, "anyon": 297, "caus": [297, 319, 323, 325], "person": [297, 313], "base_path_to_install_or_update_conda": 297, "with_netlib_lapack": 297, "flavor": [297, 316], "troubl": [297, 316], "recognit": 297, "trilino": 297, "downsid": 297, "unneed": 297, "reinstal": 297, "caution": 297, "load_": 297, "encod": 297, "load_dev_polaris_": [297, 316], "env_nam": 297, "dev_polaris_": [297, 313], "workdir": [297, 340], "unexpect": [297, 314, 316], "occur": [297, 313, 325], "echo": 297, "proceed": 297, "notic": 297, "conda_env": [297, 321, 340], "rememb": 297, "incorrect": 297, "unus": 297, "session": [297, 316], "pip": 297, "substanti": 297, "risk": [297, 316], "unsupport": 297, "env_onli": 297, "mpas_make_target": [297, 340], "scientif": [297, 340], "_albani": 297, "instruct": [297, 316], "es3m": 297, "compli": 297, "memor": 297, "guidelin": 297, "complianc": 297, "checker": 297, "isort": 297, "flynt": 297, "mypi": 297, "77": 297, "e302": 297, "blank": 297, "resolv": 297, "simpler": [297, 316], "new_branch_nam": 297, "disk": [297, 317, 319, 323], "respons": 297, "simplest": 297, "your_new_branch": 297, "restart_filenam": 303, "polaris_branch": 309, "post": 309, "src": 309, "registry_process": 309, "seaice_model": 309, "1m": [310, 343], "disc": [310, 343], "config_initial_ice_area": 310, "config_initial_ice_volum": 310, "config_atmospheric_forcing_typ": 310, "config_forcing_start_tim": 310, "config_forcing_cycle_start": 310, "config_forcing_cycle_dur": 310, "config_forcing_precipitation_unit": 310, "mm_per_sec": 310, "config_forcing_sst_typ": 310, "ncar": 310, "config_update_ocean_flux": 310, "config_include_pond_freshwater_feedback": 310, "standard_phys": 312, "standardphys": 312, "year": [312, 326, 343], "volum": 312, "snow": 312, "exact_restart": 312, "exactrestart": 312, "geo": 313, "cartopi": 313, "14": 313, "np110py27_4": 313, "calledprocesserror": 313, "deploy_tmp": 313, "vpn": 313, "site": 313, "shell": [313, 315], "honor": 313, "wide": 313, "spawn": 313, "usernam": [313, 316, 319, 323], "proxy_en": 313, "all_proxi": 313, "proxyout": 313, "8080": 313, "no_proxi": 313, "localhost": [313, 317, 322, 323, 340], "127": 313, "proxy_dis": 313, "unset": 313, "anytim": 313, "fatal": 313, "mpi_init": 313, "stack": 313, "mpir_init_thread": 313, "159": 313, "mpid_init": 313, "164": 313, "mpidi_ch3_init": 313, "95": 313, "mpid_nem_init": 313, "314": 313, "mpid_nem_tcp_init": 313, "173": 313, "mpid_nem_tcp_get_business_card": 313, "395": 313, "getsockinterfaceaddr": 313, "369": 313, "pn2034311": 313, "errno": 313, "host": [313, 317, 322, 340], "focus": 314, "plu": 314, "autom": 315, "exascal": 315, "kept": 315, "expert": 315, "uncoupl": 315, "quick": [315, 316, 326, 341], "queue": 315, "beginn": [315, 316], "advanc": [315, 316], "mpas_to_yaml": 315, "troubleshoot": 315, "proxi": 315, "lanl": [315, 317, 319], "gethostbynam": 315, "glossari": 316, "stick": 316, "miniconda": 316, "3_chrysalis_intel_openmpi": 316, "strict": 316, "push": 316, "lowercas": 316, "hyphen": 316, "settl": 316, "desktop": 316, "realli": [316, 323], "nice": [316, 323], "supercomput": 316, "yet_another_channel": 316, "testgroup": 316, "vi": 316, "polaris_head": 316, "yetanotherchannel": 316, "instanc": 316, "repres": [316, 325, 330, 336], "highli": 316, "camelcas": 316, "capit": 316, "letter": 316, "cap": 316, "awkward": 316, "encourag": 316, "enclos": 316, "briefli": 316, "baroclinicchannel": 316, "globalconverg": 316, "add_test_group": 316, "interest": 316, "test_group": 316, "add_test_cas": 316, "anyth": 316, "probabl": [316, 322, 332], "suppos": 316, "easili": 316, "tide": 316, "sai": [316, 322], "res_str": 316, "1000": [316, 317, 325, 328, 332, 334, 335], "still": [316, 326, 339, 340, 344], "ti": 316, "loop": 316, "1km": [316, 328, 340], "4km": [316, 328, 340], "coarsest": [316, 317], "especi": 316, "promot": 316, "pattern": 316, "familiar": 316, "seen": 316, "brows": 316, "row": 316, "disadvantag": 316, "foremost": 316, "magic": 316, "effect": [316, 339], "pain": 316, "160": [316, 328], "500": [316, 317, 325, 328], "path_to_mpas_ocean": 316, "path_to_working_dir": 316, "cat": 316, "slurm_jobid": 316, "_run_test": 316, "gpf": 316, "fs1": 316, "cbegeman": 316, "grid_typ": [316, 317, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "vert_level": [316, 317, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "coord_typ": [316, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "partial_cell_typ": [316, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "min_pc_fract": [316, 325, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "everywher": 316, "depress": [316, 325], "mostli": 316, "logic": [316, 328], "northern": [316, 328], "half": [316, 328], "southern": [316, 328], "halv": [316, 328], "gradient": [316, 328, 334, 335, 338], "500km": [316, 328], "40e3": [316, 328], "35": [316, 328, 329, 330, 331, 332, 336, 337, 338, 339, 340, 344], "2e": [316, 328], "match": 316, "light": 316, "e3sm_compon": 316, "interact": [316, 319, 322, 323, 340], "interrupt": 316, "pty": 316, "navig": 316, "newli": 316, "bunch": 316, "didn": 316, "mistak": 316, "finger": 316, "cross": 316, "initial_normalveloc": 316, "initial_salin": 316, "obvious": 316, "stress": [316, 338], "landicemodelstep": 316, "huge": 316, "cp": 316, "05": [316, 332], "hmix_del2": 316, "bottom_drag": 316, "cvmix": 316, "0002": 316, "filename_interv": 316, "0100": 316, "input_interv": 316, "initial_onli": 316, "basicmesh": 316, "dayssincestart": 316, "surfacespe": 316, "lowersurfac": 316, "uppersurfac": 316, "ureconstructx": 316, "ureconstructi": 316, "remain": [316, 330, 332, 338], "load_dataset": 316, "final_temperatur": 316, "ab": 316, "proc": 316, "4proc": [316, 328], "8proc": [316, 328], "markdown": 316, "developers_guid": 316, "users_guid": 316, "daunt": 316, "flesh": 316, "bonu": 316, "improv": 316, "introduc": 316, "techniqu": 316, "cannot": 316, "aim": 316, "constrain_resourc": 316, "becam": 316, "mainten": 316, "counter": 316, "thought": 316, "yet_another_channel_test_cas": 316, "yetanotherchanneltestcas": 316, "choic": [316, 329, 330, 331, 332, 336, 337], "spuriou": [316, 328], "dissip": [316, 328], "pop": [316, 328], "mom": [316, 328], "mitgcm": [316, 328], "higher": 316, "heavi": 316, "analogi": 316, "tet": 316, "bear": 316, "late": 316, "_add_step": 316, "startswith": 316, "enumer": 316, "rpe_": 316, "_nu_": 316, "privat": 316, "break": [316, 328], "unusu": 316, "rpe_1_nu_1": [316, 328], "rpe_2_nu_5": [316, 328], "rpe_3_nu_10": 316, "rpe_4_nu_20": 316, "rpe_5_nu_200": 316, "20_00": 316, "0000": 316, "dayssincestartofsim": 316, "relativevort": 316, "pyplot": 316, "plt": 316, "output_": 316, "sections_yet_another_channel_": 316, "rpe_t": 316, "init_filenam": 316, "initial_state_file_nam": 316, "_plot": 316, "dirti": 316, "adopt": 316, "lesson": 316, "tricki": 316, "commun": 316, "nuanc": 316, "fake": 316, "wasn": 316, "fold": 316, "proper": 316, "third": 316, "previous": 316, "extens": 317, "multinod": [317, 340], "explanatori": 317, "my_machin": 317, "extend": 317, "gitconfig": 317, "enter": 317, "author": 317, "email": 317, "pull_request": 317, "28": [317, 325, 329], "address": [317, 329, 336], "metadata": 317, "customize_config_pars": 317, "server_base_url": 317, "inej": 317, "check_siz": 317, "ssl": 317, "certif": 317, "core_path": 317, "partition_execut": 317, "dask": 317, "netcdf4": 317, "netcdf4_class": 317, "netcdf3_64bit": 317, "netcdf3_class": 317, "engin": 317, "mesh_databas": 317, "ocean_database_root": 317, "landice_database_root": 317, "mesh_cor": 317, "mesh_min_cor": 317, "mesh_max_memori": 317, "mesh_max_disk": 317, "init_cor": 317, "init_min_cor": 317, "init_max_memori": 317, "init_max_disk": 317, "init_thread": 317, "forward_cor": 317, "forward_min_cor": 317, "forward_thread": 317, "forward_max_memori": 317, "forward_max_disk": 317, "add_metadata": 317, "ec": 317, "wc": 317, "mesh_descript": 317, "autodetect": 317, "bathy_descript": 317, "gebco": 317, "2022": 317, "bedmachin": 317, "antarctica": 317, "init_descript": 317, "e3sm_vers": 317, "increment": 317, "mesh_revis": 317, "finest": 317, "min_r": 317, "max_r": 317, "max_depth": 317, "creation_d": 317, "peopl": 317, "contact": 317, "temperaturemax": 317, "temperature_max": 317, "33": [317, 340], "enable_ocean_initial_condit": 317, "enable_ocean_graph_partit": 317, "enable_seaice_initial_condit": 317, "enable_scrip": 317, "onlin": 317, "member": 317, "offlin": 317, "enable_diagnostics_fil": 317, "coarser": [317, 325, 329, 330, 331, 332, 336, 337], "finer": [317, 325], "comparisonlatresolut": 317, "comparisonlonresolut": 317, "antarct": 317, "polar": [317, 318, 320, 325], "stereograph": 317, "comparisonantarcticstereowidth": 317, "6000": [317, 325], "comparisonantarcticstereoresolut": 317, "arctic": [317, 343], "comparisonarcticstereowidth": 317, "comparisonarcticstereoresolut": 317, "tanh_dz": 317, "16": [317, 338, 340], "3000": [317, 332], "min_layer_thick": [317, 325], "max_layer_thick": [317, 325], "retain": 317, "ecosystem": 318, "gain": 318, "confluenc": 318, "public_html": [318, 320, 322], "soft": [318, 320, 322, 340], "mpi_intel": [318, 320, 321, 322], "36": [318, 322, 338, 340], "condo": [318, 340], "acm": [318, 340], "medium": 318, "acme_high": 318, "load_latest_polaris_intel_impi": [318, 321], "load_latest_polaris_gnu_openmpi": [318, 320, 340], "dst": 319, "calendar": 319, "network": 319, "introduct": 319, "platform": 319, "batch": 319, "wtrw": 319, "ch": 319, "fe": 319, "lustr": 319, "scratch4": 319, "scratch5": 319, "sacctmgr": 319, "assoc": 319, "cluster": 319, "45": 319, "sshare": 319, "sreport": 319, "accountutilizationbyus": 319, "2019": 319, "prioriti": 319, "yellow": 319, "chkhome": 319, "petabyt": 319, "df": 319, "bp": 319, "archiv": [319, 323], "hpss": [319, 323], "front": 319, "tn": 319, "storag": 319, "project_nam": 319, "salloc": [319, 322, 323], "account_nam": 319, "gpu": [319, 323], "hyperthread": [319, 323], "hang": [319, 323], "threads_per_cor": [319, 323], "shared_clim": [319, 340], "load_latest_polaris_gnu_mpich": [319, 323], "load_latest_polaris_intel_openmpi": 320, "compyf": 321, "app": [321, 340], "pmi2": 321, "40": [321, 332], "submit": 322, "workload": 322, "squeue": 322, "my_usernam": [322, 323], "scancel": 322, "jobid": 322, "cancel": 322, "emtpi": 322, "three": [322, 329, 331, 332, 336, 337, 346], "mpi_mpich": [322, 340], "mpi_openmpi": [322, 340], "nompi": [322, 340], "p1": 323, "nersc": 323, "iri": 323, "filesystem": 323, "myquota": 323, "prjquota": 323, "projectid": 323, "m1795": 323, "hsi": 323, "htar": 323, "zstash": 323, "cf": [323, 340], "cdir": [323, 340], "premium": 323, "cray_compil": 323, "8844": 323, "monik": 323, "browser": 323, "grab": 323, "logon": 323, "kernel": 323, "myenv": 323, "ipykernel": 323, "kernelspec": 323, "u1": 323, "interpret": 323, "argv": 323, "ipykernel_launch": 323, "connection_fil": 323, "display_nam": 323, "languag": 323, "2500": 325, "transit": [325, 329, 330, 331, 336, 337], "transition_level": 325, "deepest": 325, "stewart": 325, "2017": 325, "delta": [325, 328, 332, 338], "z_2": 325, "z_1": 325, "mathrm": 325, "tanh": 325, "rightarrow": 325, "z_k": 325, "z_0": 325, "z_": [325, 338], "k": 325, "finder": 325, "n_z": 325, "h_": 325, "hyperbol": 325, "tangent": 325, "k_0": 325, "v3": 325, "5500": 325, "250": 325, "scienc": 325, "hydrograph": 325, "climatologi": 325, "renorm": 325, "arrm10to60": 325, "80": 325, "146": 325, "5550": 325, "51": 325, "221": 325, "ziso": [325, 346], "63": 325, "collaps": 325, "adcroft": 325, "campin": 325, "2004": 325, "absenc": 325, "squash": 325, "press": 325, "batymetri": 325, "stair": 325, "terrain": 325, "month": 326, "websit": [326, 341], "release_6": 326, "ilicak": 328, "2012": [328, 329, 331, 336, 337], "variat": [328, 332], "distinguish": 328, "zonal": [328, 332, 338], "meridion": [328, 338], "psu": [328, 338], "cooler": 328, "north": 328, "sinusoid": 328, "perturb": [328, 330, 335], "t_0": 328, "t_b": 328, "t_": 328, "z_b": 328, "y_": 328, "l_x": 328, "warmer": 328, "ge": [328, 330], "gradient_width_fract": 328, "l_y": 328, "le": [328, 338], "stationari": [328, 338], "literatur": 328, "mk": 328, "celsiu": 328, "prognost": 328, "lauritzen": [329, 331, 336, 337], "nonlinear": [329, 332, 334, 335], "mixing_analysi": 329, "icosohydr": [329, 330, 331, 336, 337], "nearest": [329, 330, 331, 336, 337], "insensit": [329, 330, 331, 332, 336, 337, 338], "300": [329, 330, 331, 336, 337, 339], "debugtrac": [329, 331, 336, 337], "tracer2": [329, 331, 336, 337], "tracer3": [329, 331, 336, 337], "nonlinearli": 329, "tau": [329, 330, 331, 336], "lambda": [329, 331, 332, 336], "theta": [329, 331, 332, 336], "co": [329, 330, 331, 332, 334, 335, 336], "equat": [329, 330, 331, 332, 334, 335, 336, 337, 338], "vel_pd": [329, 330, 331, 336, 337], "rung": [329, 330, 331, 332, 336, 337], "kutta": [329, 330, 331, 332, 336, 337], "4th": [329, 330, 331, 332, 336, 337], "spherical_convergence_forward": [329, 331, 336, 337], "globe": [329, 330, 331, 336, 337], "correlated_tracer_2d": 329, "288": [329, 331, 336, 337], "cosine_bells_radiu": [329, 331, 336, 337], "cosine_bells_background": [329, 331, 336, 337], "amplitud": [329, 331, 334, 335, 336, 337], "cosine_bells_amplitud": [329, 331, 336, 337], "slot": [329, 331, 336, 337], "cylind": [329, 331, 336, 337], "slotted_cylinders_radiu": [329, 331, 336, 337], "slotted_cylinders_background": [329, 331, 336, 337], "slotted_cylinders_amplitud": [329, 331, 336, 337], "sphere_transport_viz_trac": [329, 331, 336, 337], "sphere_transport_viz_tracer_diff": [329, 331, 336, 337], "sphere_transport_viz_h": [329, 331, 336, 337], "99": [329, 331, 336, 337], "101": [329, 331, 336, 337], "sphere_transport_viz_h_diff": [329, 331, 336, 337], "vel_amp": [329, 331, 336], "convergence_thresh_tracer1": [329, 331, 336, 337], "convergence_thresh_tracer2": [329, 331, 336, 337], "66": 329, "convergence_thresh_tracer3": [329, 331, 336, 337], "mixing_evaluation_tim": 329, "sphere_transport_viz": [329, 331, 336, 337], "roughli": [329, 330, 331, 336, 337], "studi": [329, 330, 331, 332, 336, 337], "williamson": [330, 332], "1992": [330, 332], "sec": 330, "3a": 330, "skamarock": 330, "gassmann": 330, "bodi": 330, "psi": 330, "proportion": [330, 332], "slow": 330, "passiv": 330, "psi_0": 330, "debug_tracers_1": 330, "equatori": 330, "u_0": [330, 331, 332, 336], "tendenc": [330, 335], "rad": 330, "lat_cent": 330, "lon_cent": 330, "14159265": 330, "2123666": 330, "6667": 330, "hill": 330, "psi0": 330, "576": 330, "circul": 330, "48": 331, "86": 331, "chosen": [332, 338], "h_0": 332, "textrm": 332, "sensit": 332, "l_1": 332, "l_2": 332, "l_": 332, "examin": [332, 338], "vel_period": 332, "gh_0": 332, "94e4": 332, "william": 332, "paper": [332, 340], "arbitrari": 332, "evolut": 332, "unexpectedli": 332, "convergence_thresh_h": 332, "convergence_thresh_normalveloc": 332, "necessit": 332, "geostropnic_viz": 332, "geostrophic_viz_h": 332, "deep": 332, "geostrophic_viz_vel": 332, "geostrophic_viz_diff_h": 332, "geostrophic_viz_diff_vel": 332, "propag": [334, 335], "doubli": [334, 335], "assess": [334, 335], "accuraci": [334, 335], "discret": [334, 335], "bishnu": [334, 335], "friction": [334, 335], "neglect": [334, 335], "analyt": [334, 346], "k_x": [334, 335], "k_y": [334, 335], "availi": [334, 335], "coriloi": 334, "1e": 334, "ssh_amplitud": [334, 335], "wavelength": [334, 335], "n_wavelengths_x": [334, 335], "n_wavelengths_i": [334, 335], "embed": 335, "eta_0": 335, "preserv": [336, 340], "rough": 336, "revers": 336, "filament_analysi": 336, "thhe": 336, "filament_evaluation_tim": 336, "offset": 337, "vector": 337, "rotation_vector": 337, "span": 338, "arbitrarili": 338, "virtu": 338, "400": 338, "phi": 338, "phi_0": 338, "dz": 338, "ml": 338, "mld": 338, "surface_x": 338, "x_gradient_mixed_lay": 338, "mixed_layer_depth_x": 338, "x_difference_across_mixed_lay": 338, "x_gradient_interior": 338, "4x4": 338, "960": 338, "degc": 338, "temperature_gradient_mixed_lay": 338, "temperature_difference_across_mixed_lay": 338, "temperature_gradient_interior": 338, "mixed_layer_depth_temperatur": 338, "surface_salin": 338, "salinity_gradient_mixed_lay": 338, "salinity_difference_across_mixed_lay": 338, "salinity_gradient_interior": 338, "mixed_layer_depth_salin": 338, "dictat": 338, "kpp": 338, "restor": 338, "piston": 338, "toward": 338, "temperature_surface_restoring_valu": 338, "temperature_piston_veloc": 338, "salinity_surface_restoring_valu": 338, "salinity_piston_veloc": 338, "temperature_interior_restoring_r": 338, "salinity_interior_restoring_r": 338, "net": 338, "latent": 338, "heat": 338, "bulk": 338, "latent_heat_flux": 338, "sensibl": 338, "sensible_heat_flux": 338, "solar": 338, "shortwav": 338, "shortwave_heat_flux": 338, "evapor": 338, "evaporation_flux": 338, "5e": 338, "rain": 338, "rain_flux": 338, "wind_stress_zon": 338, "wind_stress_meridion": 338, "welcom": [339, 344], "icosohedr": [339, 344], "pertain": [339, 344], "inher": 339, "warrant": 339, "investig": 339, "load_latest_polari": 340, "minu": 340, "create_polaris_load_script": 340, "load_polaris_1": 340, "0_mpich": 340, "exclud": 340, "wiki": 340, "circular_shelf": 340, "sia_smoke_test": 340, "sia_decomposition_test": 340, "sia_restart_test": 340, "fo_smoke_test": 340, "fo_decomposition_test": 340, "fo_restart_test": 340, "37": 340, "17": 340, "210131_test_new_branch": 340, "my_config": 340, "smaller": 340, "previous_workdir": 340, "recompil": 340, "safer": 340, "test_subdir": 340, "clock": 340, "j": 340, "exclus": 340, "job_nam": 340, "fo_integr": 340, "sia_integr": 340, "cosine_bell_cached_init": [340, 345], "ec30to60": 340, "ecwisc30to60": 340, "qu240_for_e3sm": 340, "quwisc240_for_e3sm": 340, "wc14": 340, "suitenam": 340, "seaice_standalone_framework": 341, "71": 343, "35n": 343, "156": 343, "5w": 343, "atmospher": 343, "timeseri": 343, "prohibit": 345, "speed": 345, "radial": 346}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 2, 1, "", "symlink"]], "polaris.job": [[61, 2, 1, "", "get_slurm_options"], [62, 2, 1, "", "write_job_script"]], "polaris.list": [[63, 2, 1, "", "list_cases"], [64, 2, 1, "", "list_machines"], [65, 2, 1, "", "list_suites"]], "polaris.logging": [[66, 2, 1, "", "log_method_call"]], "polaris.mesh": [[67, 0, 1, "", "IcosahedralMeshStep"], [74, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [69, 1, 1, "", "get_cell_width"], [70, 1, 1, "", "get_subdivisions"], [71, 1, 1, "", "make_jigsaw_mesh"], [72, 1, 1, "", "run"], [73, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "build_cell_width_lat_lon"], [76, 1, 1, "", "make_jigsaw_mesh"], [77, 1, 1, "", "run"], [78, 1, 1, "", "setup"]], "polaris.mesh.planar": [[79, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[80, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "run"], [82, 1, 1, "", "save_and_plot_cell_width"], [83, 1, 1, "", "setup"]], "polaris.model_step": [[84, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[85, 2, 1, "", "area_for_field"], [86, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[87, 2, 1, "", "ingest"], [88, 2, 1, "", "parse_replacements"], [89, 2, 1, "", "replace"], [90, 2, 1, "", "write"]], "polaris.ocean": [[140, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[140, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[141, 0, 1, "", "ConvergenceAnalysis"], [149, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "compute_error"], [143, 1, 1, "", "convergence_parameters"], [144, 1, 1, "", "exact_solution"], [145, 1, 1, "", "get_output_field"], [146, 1, 1, "", "plot_convergence"], [147, 1, 1, "", "run"], [148, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "compute_cell_count"], [151, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[152, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "compute_cell_count"]], "polaris.ocean.mesh.spherical": [[154, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[155, 0, 1, "", "OceanModelStep"], [160, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "compute_cell_count"], [157, 1, 1, "", "constrain_resources"], [158, 1, 1, "", "map_yaml_to_namelist"], [159, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[161, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[162, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[163, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[163, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[164, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[164, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[165, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[168, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"], [170, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[171, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[171, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[172, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[174, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[176, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"], [178, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[179, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[179, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[180, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[182, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[184, 0, 1, "", "CosineBell"], [186, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[187, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[189, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "compute_cell_count"], [191, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[192, 0, 1, "", "Init"], [194, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[195, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[197, 0, 1, "", "Geostrophic"], [199, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[200, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[200, 1, 1, "", "__init__"], [201, 1, 1, "", "exact_solution"], [202, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[203, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[203, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[204, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[206, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[208, 0, 1, "", "InertialGravityWave"], [209, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[208, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[210, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[212, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "normal_velocity"], [214, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[215, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[217, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[217, 1, 1, "", "__init__"], [218, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[219, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[221, 0, 1, "", "ManufacturedSolution"], [222, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[221, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[223, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[223, 1, 1, "", "__init__"], [224, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[225, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[225, 1, 1, "", "__init__"], [226, 1, 1, "", "normal_velocity"], [227, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[228, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[230, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[232, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[234, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[235, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[235, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[236, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[236, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[237, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[237, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[238, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[238, 1, 1, "", "__init__"], [239, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[240, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[240, 1, 1, "", "__init__"], [241, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[242, 0, 1, "", "SphereTransport"], [244, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[245, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[247, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[247, 1, 1, "", "__init__"], [248, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[249, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[249, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[250, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[250, 1, 1, "", "__init__"], [251, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[252, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[252, 1, 1, "", "__init__"], [253, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[254, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[256, 2, 1, "", "generate_1d_grid"], [257, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[258, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[259, 2, 1, "", "alter_bottom_depth"], [260, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[261, 2, 1, "", "compute_min_max_level_cell"], [262, 2, 1, "", "compute_z_level_layer_thickness"], [263, 2, 1, "", "compute_z_level_resting_thickness"], [264, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[265, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.ocean.viz": [[266, 2, 1, "", "compute_transect"], [267, 2, 1, "", "plot_transect"]], "polaris.ocean.viz.transect.horiz": [[268, 2, 1, "", "find_planar_transect_cells_and_weights"], [269, 2, 1, "", "find_spherical_transect_cells_and_weights"], [270, 2, 1, "", "make_triangle_tree"], [271, 2, 1, "", "mesh_to_triangles"]], "polaris.ocean.viz.transect.vert": [[272, 2, 1, "", "find_transect_levels_and_weights"], [273, 2, 1, "", "interp_mpas_to_transect_cells"], [274, 2, 1, "", "interp_mpas_to_transect_nodes"]], "polaris.parallel": [[91, 2, 1, "", "get_available_parallel_resources"], [92, 2, 1, "", "get_parallel_command"], [93, 2, 1, "", "run_command"], [94, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[95, 2, 1, "", "write"]], "polaris.remap": [[96, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[96, 1, 1, "", "__init__"], [97, 1, 1, "", "dst_from_lon_lat"], [98, 1, 1, "", "dst_from_mpas"], [99, 1, 1, "", "dst_from_points"], [100, 1, 1, "", "dst_from_proj"], [101, 1, 1, "", "dst_global_lon_lat"], [102, 1, 1, "", "get_remapper"], [103, 1, 1, "", "runtime_setup"], [104, 1, 1, "", "src_from_lon_lat"], [105, 1, 1, "", "src_from_mpas"], [106, 1, 1, "", "src_from_proj"]], "polaris.run": [[107, 2, 1, "", "complete_step_run"], [108, 2, 1, "", "load_dependencies"], [111, 2, 1, "", "setup_config"], [112, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[109, 2, 1, "", "run_single_step"], [110, 2, 1, "", "run_tasks"]], "polaris.seaice": [[300, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[300, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[301, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[302, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[302, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[303, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[303, 1, 1, "", "__init__"], [304, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[305, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[305, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[306, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[306, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[307, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[307, 1, 1, "", "__init__"], [308, 1, 1, "", "run"]], "polaris.setup": [[113, 2, 1, "", "setup_task"], [114, 2, 1, "", "setup_tasks"]], "polaris.streams": [[115, 2, 1, "", "read"], [116, 2, 1, "", "update_defaults"], [117, 2, 1, "", "update_tree"], [118, 2, 1, "", "write"]], "polaris.suite": [[119, 2, 1, "", "setup_suite"]], "polaris.validate": [[120, 2, 1, "", "compare_variables"]], "polaris.viz": [[121, 2, 1, "", "plot_global_lat_lon_field"], [122, 2, 1, "", "plot_global_mpas_field"], [123, 2, 1, "", "plot_horiz_field"], [124, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[125, 0, 1, "", "PolarisYaml"], [129, 2, 1, "", "main_mpas_to_yaml"], [130, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [131, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "read"], [127, 1, 1, "", "update"], [128, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 316], "share": [1, 6, 9, 296, 316], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 138, 293, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 344], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 72, 77, 81, 107, 108, 109, 110, 111, 112, 139, 147, 169, 177, 181, 183, 193, 196, 205, 207, 218, 220, 231, 233, 239, 241, 248, 251, 253, 255, 293, 297, 304, 308, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 343, 344], "onc": 1, "befor": 1, "depend": [1, 6, 293], "output": [1, 293, 316], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 283, 289, 292, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 308, 311, 316, 333, 339, 340, 342, 344, 346], "work": 1, "directori": [1, 291], "structur": [1, 291], "i": [1, 340], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 297, 315, 317, 340], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 139, 293, 297, 322], "other": [1, 136, 293, 316, 322, 340], "implement": [1, 2], "set": [1, 139, 297, 340], "up": [1, 297, 340], "test": [1, 2, 6, 138, 139, 316, 317, 343], "And": 1, "valid": [1, 2, 3, 18, 120, 180, 181, 278, 303, 304, 316, 340], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 139, 297, 316, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "same": 2, "api": 3, "refer": [3, 138, 139], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 139, 275, 290, 296, 297, 309, 326, 340, 341], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 293, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 315, 340], "framework": [3, 10, 138, 139, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 296, 299, 312, 324], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 63, 64, 65], "setup": [3, 5, 8, 36, 47, 58, 73, 78, 83, 113, 114, 148, 159, 170, 178, 293], "suit": [3, 5, 8, 119, 294, 327, 340, 345], "cach": [3, 5, 8, 55, 293], "mpas_to_yaml": [3, 5], "base": [3, 138], "class": [3, 296], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 136, 139, 290, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "io": [3, 11, 59, 60], "job": [3, 61, 62, 322, 340], "log": [3, 12, 66], "mesh": [3, 13, 14, 19, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 138, 139, 154, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "model_step": [3, 84], "mpa": [3, 6, 15, 19, 85, 86, 139, 277, 310], "namelist": [3, 14, 87, 88, 89, 90, 139], "parallel": [3, 91, 92, 93, 94], "proven": [3, 16, 95], "remap": [3, 17, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "stream": [3, 14, 115, 116, 117, 118, 139, 316], "viz": [3, 121, 122, 123, 124, 182, 183, 195, 196, 206, 207, 219, 220, 232, 233, 240, 241, 254, 255, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 284, 285, 286, 287, 288, 307, 308, 312, 316], "yaml": [3, 14, 125, 126, 127, 128, 129, 130, 131, 139], "build": [4, 136, 297, 340], "serial": [5, 8, 109, 110], "deploi": 6, "new": [6, 136, 316], "spack": [6, 136, 297, 340], "environ": [6, 136, 297, 313, 340], "where": 6, "we": 6, "updat": [6, 14, 127, 297], "mach": 6, "conda": [6, 297, 313, 322, 340], "identifi": 6, "e3sm": [6, 14, 139, 297, 340], "machin": [6, 136, 297, 322, 340], "describ": [6, 136], "modul": [6, 8, 296, 297], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 297, 316], "remot": [6, 323], "branch": 6, "petsc": [6, 297], "netlib": [6, 297], "lapack": [6, 297], "albani": [6, 297], "troubleshoot": [6, 297, 313], "ocean": [6, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 326], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 136, 139, 290, 293, 316, 317], "comment": 9, "symlink": [11, 60, 293], "download": [11, 59, 293], "spheric": [13, 19, 80, 81, 82, 83, 138, 139, 152, 153, 154], "planar": [13, 19, 79], "uniform": [13, 139, 325], "gener": 13, "model": [14, 138, 139, 155, 156, 157, 158, 159, 160, 276, 310, 316, 340], "an": [14, 139, 316], "ad": [14, 136, 293, 316], "dynam": [14, 316], "input": [14, 293], "partit": [14, 32], "pio": 14, "make": [14, 316], "graph": 14, "area": 15, "time": [15, 139, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 344], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 138, 139, 316, 343], "common": 19, "matplotlib": 19, "style": [19, 296, 297], "horizont": [19, 316], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 316], "grid": [19, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 151, 167, 173, 191], "map_yaml_to_namelist": [31, 158], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 103, 293], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 157, 293], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 175, 185, 198, 243, 295, 313], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "get_slurm_opt": 61, "write_job_script": 62, "list_cas": 63, "list_machin": 64, "list_suit": 65, "log_method_cal": 66, "icosahedralmeshstep": [67, 68, 69, 70, 71, 72, 73], "build_subdivisions_cell_width_lat_lon": 68, "get_cell_width": 69, "get_subdivis": 70, "make_jigsaw_mesh": [71, 76], "quasiuniformsphericalmeshstep": [74, 75, 76, 77, 78], "build_cell_width_lat_lon": 75, "compute_planar_hex_nx_ni": 79, "sphericalbasestep": [80, 81, 82, 83], "save_and_plot_cell_width": 82, "make_graph_fil": 84, "area_for_field": 85, "time_index_from_xtim": 86, "ingest": 87, "parse_replac": 88, "replac": 89, "write": [90, 95, 118, 128], "get_available_parallel_resourc": 91, "get_parallel_command": 92, "run_command": 93, "set_cores_per_nod": 94, "mappingfilestep": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "dst_from_lon_lat": 97, "dst_from_mpa": 98, "dst_from_point": 99, "dst_from_proj": 100, "dst_global_lon_lat": 101, "get_remapp": 102, "src_from_lon_lat": 104, "src_from_mpa": 105, "src_from_proj": 106, "complete_step_run": 107, "load_depend": 108, "run_single_step": 109, "run_task": 110, "setup_config": 111, "unpickle_suit": 112, "setup_task": [113, 114], "read": [115, 126], "update_default": 116, "update_tre": 117, "setup_suit": 119, "compare_vari": 120, "plot_global_lat_lon_field": 121, "plot_global_mpas_field": 122, "plot_horiz_field": 123, "use_mplstyl": 124, "polarisyaml": [125, 126, 127, 128], "main_mpas_to_yaml": 129, "mpas_namelist_and_streams_to_yaml": 130, "yaml_to_mpas_stream": 131, "anvil": [132, 318], "intel": [132, 134, 135, 318, 320, 321], "gnu": [132, 133, 134, 135, 137, 318, 319, 320, 323], "chicoma": [133, 319], "cpu": [133, 137, 319, 323], "chrysali": [134, 320], "compymcnodefac": [135, 321], "support": [136, 276, 297, 310, 322, 340], "perlmutt": [137, 323], "pm": 137, "baroclinic_channel": [138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 278], "cosine_bel": [138, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 280, 327], "geostroph": [138, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 332], "inertial_gravity_wav": [138, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 284], "manufactured_solut": [138, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 285], "single_column": [138, 234, 235, 236, 237, 238, 239, 240, 241, 288, 298, 301, 302, 303, 304, 305, 306, 307, 308, 312], "sphere_transport": [138, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "converg": [138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 335], "potenti": [138, 139], "energi": [138, 139], "rpe": [138, 139, 161, 174, 175, 176, 177, 178, 278, 328], "vertic": [138, 139, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 316, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339], "coordin": [138, 139, 316, 325], "v": 139, "map": 139, "omega": 139, "mpi": [139, 322], "resourc": 139, "interv": 139, "quasi": 139, "icosahedr": 139, "rest": 139, "convergenceanalysi": [141, 142, 143, 144, 145, 146, 147, 148], "compute_error": 142, "convergence_paramet": [143, 246], "exact_solut": [144, 188, 201, 211, 212, 213, 214, 224, 225, 226, 227, 284, 285], "get_output_field": [145, 202], "plot_converg": 146, "convergenceforward": [149, 150, 151], "compute_cell_count": [150, 153, 156, 166, 190, 216, 229], "sphericalconvergenceforward": [152, 153], "add_spherical_base_mesh_step": 154, "oceanmodelstep": [155, 156, 157, 158, 159], "get_time_interval_str": 160, "compute_rp": 161, "add_baroclinic_channel_task": 162, "decomp": [163, 278, 328], "default": [164, 278, 316, 328], "forward": [165, 166, 167, 189, 190, 191, 203, 215, 216, 228, 229, 236, 249, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 305, 312, 316], "init": [168, 169, 170, 192, 193, 194, 204, 205, 217, 218, 230, 231, 238, 239, 250, 251, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 316], "restart": [171, 172, 173, 278, 328, 343], "restart_step": [172, 173], "restartstep": [172, 173], "analysi": [176, 177, 178, 187, 188, 200, 201, 202, 210, 211, 223, 224, 245, 246, 279, 280, 281, 282, 284, 285, 286, 287, 316, 332], "thread": [179, 278, 328], "cosinebel": [184, 185], "add_cosine_bell_task": 186, "add_geostrophic_task": 199, "inertialgravitywav": 208, "add_inertial_gravity_wave_task": 209, "exactsolut": [212, 213, 214, 225, 226, 227], "normal_veloc": [213, 226], "ssh": [214, 227], "manufacturedsolut": 221, "add_manufactured_solution_task": 222, "add_single_column_task": [234, 301], "cvmix": [235, 288, 338], "ideal_ag": 237, "idealag": 237, "spheretransport": [242, 243], "add_sphere_transport_task": 244, "filament_analysi": [247, 248, 286], "filamentanalysi": [247, 248], "mixing_analysi": [252, 253, 279], "mixinganalysi": [252, 253], "grid_1d": [256, 257], "generate_1d_grid": 256, "write_1d_grid": 257, "init_vertical_coord": 258, "partial_cel": [259, 260], "alter_bottom_depth": 259, "alter_ssh": 260, "zlevel": [261, 262, 263, 264], "compute_min_max_level_cel": 261, "compute_z_level_layer_thick": 262, "compute_z_level_resting_thick": 263, "init_z_level_vertical_coord": 264, "zstar": 265, "init_z_star_vertical_coord": 265, "compute_transect": 266, "plot_transect": 267, "transect": [268, 269, 270, 271, 272, 273, 274], "horiz": [268, 269, 270, 271], "find_planar_transect_cells_and_weight": 268, "find_spherical_transect_cells_and_weight": 269, "make_triangle_tre": 270, "mesh_to_triangl": 271, "vert": [272, 273, 274], "find_transect_levels_and_weight": 272, "interp_mpas_to_transect_cel": 273, "interp_mpas_to_transect_nod": 274, "initi": [277, 310, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "condit": [277, 310, 316, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "boundari": 277, "forc": [277, 310, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "correlated_tracers_2d": 279, "base_mesh": [279, 280, 281, 282, 286, 287], "divergent_2d": 281, "nondivergent_2d": 286, "rotation_2d": 287, "ideal": [288, 338], "ag": [288, 338], "categori": [289, 339, 344], "constructor": [290, 293, 295], "organ": 292, "attribut": [293, 295], "copi": 293, "pull": 294, "request": 294, "pr": 294, "nightli": 294, "overview": 296, "code": [296, 297, 316], "packag": 296, "within": 296, "group": [296, 316], "relat": 296, "quick": [297, 340], "start": [297, 316, 340], "develop": [297, 315, 316], "unix": 297, "shell": 297, "repositori": 297, "beginn": 297, "compil": 297, "system": 297, "unknown": 297, "what": 297, "script": [297, 340], "doe": 297, "flag": 297, "activ": 297, "switch": 297, "between": [297, 316], "differ": 297, "onli": 297, "repo": 297, "worktre": 297, "advanc": 297, "seaic": [298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "exact_restart": [302, 303, 304], "exactrestart": 302, "standard_phys": [306, 307, 308], "standardphys": 306, "standard_physics_test": 312, "exact_restart_test": 312, "solver": 313, "error": 313, "when": 313, "proxi": 313, "lanl": 313, "mac": 313, "gethostbynam": 313, "fail": 313, "glossari": [314, 315], "": 315, "guid": 315, "tutori": [315, 316], "compass": 315, "get": 316, "vari": 316, "resolut": 316, "paramet": 316, "thing": 316, "out": 316, "defin": 316, "more": 316, "again": 316, "one": 316, "second": 316, "enhanc": 316, "comput": 316, "cell": 316, "count": 316, "superclass": 316, "studi": 316, "how": 316, "pass": 316, "data": [316, 323], "A": 317, "case": 317, "slurm": 322, "queue": 322, "mpich": 322, "openmpi": 322, "No": 322, "forg": 322, "jupyt": 323, "notebook": 323, "1d": 325, "type": 325, "tanh_dz": 325, "index_tanh_dz": 325, "60layerphc": 325, "80layere3smv1": 325, "100layere3smv1": 325, "3d": 325, "z": 325, "star": 325, "level": 325, "sigma": 325, "cosine_bell_cached_init": 327, "baroclin": 328, "channel": 328, "descript": [328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "durat": [328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "core": [328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 343, 344], "correl": 329, "tracer": 329, "2": [329, 331, 336, 337], "d": [329, 331, 336, 337], "cosin": 330, "bell": 330, "diverg": 331, "inerti": 334, "graviti": 334, "wave": 334, "manufactur": 335, "solut": 335, "nondiverg": 336, "rotat": 337, "singl": [338, 343], "column": [338, 343], "task_nam": [339, 344], "yet": 340, "load": 340, "standalon": 340, "sea": 341, "ic": 341, "standard": 343, "physic": 343, "timestep": 343, "exact": 343}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [290, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [328, "mesh"], [328, "id2"], [328, "id9"], [328, "id17"], [328, "id25"], [328, "id32"], [329, "mesh"], [330, "mesh"], [331, "mesh"], [332, "mesh"], [334, "mesh"], [335, "mesh"], [336, "mesh"], [337, "mesh"], [338, "mesh"], [338, "id3"], [338, "id8"], [339, "mesh"], [343, "mesh"], [343, "id1"], [343, "id6"], [344, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [278, "validate"]], "viz": [[3, "viz"], [279, "viz"], [280, "viz"], [281, "viz"], [282, "viz"], [284, "viz"], [285, "viz"], [286, "viz"], [287, "viz"], [288, "viz"], [312, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [316, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [324, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [139, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [139, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"], [138, "visualization"], [139, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[61, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[62, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[63, "polaris-list-list-cases"]], "polaris.list.list_machines": [[64, "polaris-list-list-machines"]], "polaris.list.list_suites": [[65, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[66, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[67, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[68, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[69, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[70, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[71, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[72, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[73, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[75, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[79, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[81, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[82, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[83, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[84, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[85, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[86, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[87, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[88, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[89, "polaris-namelist-replace"]], "polaris.namelist.write": [[90, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[91, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[92, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[93, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[94, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[95, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[96, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[97, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[98, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[99, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[100, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[101, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[102, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[103, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[104, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[105, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[106, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[107, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[108, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[109, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[110, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[111, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[112, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[113, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[114, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[115, "polaris-streams-read"]], "polaris.streams.update_defaults": [[116, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[117, "polaris-streams-update-tree"]], "polaris.streams.write": [[118, "polaris-streams-write"]], "polaris.suite.setup_suite": [[119, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[120, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_lat_lon_field": [[121, "polaris-viz-plot-global-lat-lon-field"]], "polaris.viz.plot_global_mpas_field": [[122, "polaris-viz-plot-global-mpas-field"]], "polaris.viz.plot_horiz_field": [[123, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[124, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[125, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[126, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[127, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[128, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[129, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[130, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[131, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[132, "anvil"], [318, "anvil"]], "intel": [[132, "intel"], [134, "intel"], [135, "intel"]], "gnu": [[132, "gnu"], [134, "gnu"], [135, "gnu"]], "Chicoma": [[133, "chicoma"], [319, "chicoma"]], "chicoma-cpu, gnu": [[133, "chicoma-cpu-gnu"]], "Chrysalis": [[134, "chrysalis"], [320, "chrysalis"]], "CompyMcNodeFace": [[135, "compymcnodeface"], [321, "compymcnodeface"]], "Machines": [[136, "machines"], [322, "machines"]], "Supported Machines": [[136, "supported-machines"], [322, "supported-machines"]], "Other Machines": [[136, "other-machines"], [322, "other-machines"]], "Adding a New Supported Machine": [[136, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[136, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[136, "describing-a-spack-environment"]], "Building the Spack Environment": [[136, "building-the-spack-environment"]], "Perlmutter": [[137, "perlmutter"], [323, "perlmutter"]], "pm-cpu, gnu": [[137, "pm-cpu-gnu"]], "ocean": [[138, "ocean"]], "Tasks": [[138, "tasks"], [283, "tasks"], [295, "tasks"], [298, "tasks"], [311, "tasks"], [333, "tasks"], [342, "tasks"], [346, "tasks"]], "baroclinic_channel": [[138, "baroclinic-channel"], [278, "baroclinic-channel"]], "cosine_bell": [[138, "cosine-bell"], [280, "cosine-bell"]], "geostrophic": [[138, "geostrophic"], [282, "geostrophic"], [332, "geostrophic"]], "inertial_gravity_wave": [[138, "inertial-gravity-wave"], [284, "inertial-gravity-wave"]], "manufactured_solution": [[138, "manufactured-solution"], [285, "manufactured-solution"]], "single_column": [[138, "single-column"], [288, "single-column"], [298, "single-column"], [312, "single-column"]], "sphere_transport": [[138, "sphere-transport"]], "Ocean Framework": [[138, "ocean-framework"]], "Convergence Tests": [[138, "convergence-tests"], [139, "convergence-tests"]], "Spherical Convergence Tests": [[138, "spherical-convergence-tests"]], "Ocean Model": [[138, "ocean-model"]], "Spherical Base Mesh Step": [[138, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[138, "reference-potential-energy-rpe"]], "Vertical coordinates": [[138, "vertical-coordinates"]], "Ocean framework": [[139, "ocean-framework"]], "YAML files vs. namelists and streams": [[139, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[139, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[139, "setting-mpi-resources"]], "Setting time intervals in model config options": [[139, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[139, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[139, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[139, "vertical-coordinate"], [325, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[139, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[140, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[141, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[142, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[143, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[144, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[145, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[146, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[147, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[148, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[149, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[150, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[151, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[152, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[153, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[154, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[155, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[156, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[157, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[158, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[159, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[160, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[161, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[162, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[163, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[164, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[165, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[166, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[167, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[168, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[169, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[170, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[171, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[172, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[173, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[174, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[175, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[176, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[177, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[178, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[179, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[180, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[181, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[182, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[183, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[184, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[185, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[186, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[187, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[188, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[189, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[190, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[191, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[192, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[193, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[194, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[195, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[196, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[197, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[198, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[199, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[200, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[201, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[202, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[203, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[204, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[205, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[206, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[207, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[208, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[209, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[210, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[211, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[212, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[213, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[214, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[215, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[216, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[217, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[218, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[219, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[220, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[221, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[222, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[223, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[224, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[225, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[226, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[227, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[228, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[229, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[230, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[231, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[232, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[233, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[234, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[235, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[236, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[237, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[238, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[239, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[240, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[241, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[242, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[243, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[244, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[245, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[246, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[247, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[248, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[249, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[250, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[251, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[252, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[253, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[254, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[255, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[256, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[257, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[258, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[259, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[260, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[261, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[262, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[263, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[264, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[265, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "polaris.ocean.viz.compute_transect": [[266, "polaris-ocean-viz-compute-transect"]], "polaris.ocean.viz.plot_transect": [[267, "polaris-ocean-viz-plot-transect"]], "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights": [[268, "polaris-ocean-viz-transect-horiz-find-planar-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights": [[269, "polaris-ocean-viz-transect-horiz-find-spherical-transect-cells-and-weights"]], "polaris.ocean.viz.transect.horiz.make_triangle_tree": [[270, "polaris-ocean-viz-transect-horiz-make-triangle-tree"]], "polaris.ocean.viz.transect.horiz.mesh_to_triangles": [[271, "polaris-ocean-viz-transect-horiz-mesh-to-triangles"]], "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights": [[272, "polaris-ocean-viz-transect-vert-find-transect-levels-and-weights"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells": [[273, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-cells"]], "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes": [[274, "polaris-ocean-viz-transect-vert-interp-mpas-to-transect-nodes"]], "Ocean component": [[275, "ocean-component"], [326, "ocean-component"]], "Models": [[276, "models"]], "Supported Models": [[276, "supported-models"]], "MPAS-Ocean": [[277, "mpas-ocean"]], "Initial conditions": [[277, "initial-conditions"], [310, "initial-conditions"]], "Boundary conditions": [[277, "boundary-conditions"]], "Forcing": [[277, "forcing"], [310, "forcing"]], "framework": [[278, "framework"], [279, "framework"], [280, "framework"], [281, "framework"], [282, "framework"], [284, "framework"], [285, "framework"], [286, "framework"], [287, "framework"], [288, "framework"], [312, "framework"]], "init": [[278, "init"], [279, "init"], [280, "init"], [281, "init"], [282, "init"], [284, "init"], [285, "init"], [286, "init"], [287, "init"], [288, "init"]], "forward": [[278, "forward"], [279, "forward"], [280, "forward"], [281, "forward"], [282, "forward"], [284, "forward"], [285, "forward"], [286, "forward"], [287, "forward"], [288, "forward"], [312, "forward"]], "default": [[278, "default"], [328, "default"]], "decomp": [[278, "decomp"], [328, "decomp"]], "restart": [[278, "restart"], [328, "restart"]], "threads": [[278, "threads"]], "rpe": [[278, "rpe"], [328, "rpe"]], "correlated_tracers_2d": [[279, "correlated-tracers-2d"]], "base_mesh": [[279, "base-mesh"], [280, "base-mesh"], [281, "base-mesh"], [282, "base-mesh"], [286, "base-mesh"], [287, "base-mesh"]], "analysis": [[279, "analysis"], [280, "analysis"], [281, "analysis"], [282, "analysis"], [284, "analysis"], [285, "analysis"], [286, "analysis"], [287, "analysis"], [332, "analysis"]], "mixing_analysis": [[279, "mixing-analysis"]], "divergent_2d": [[281, "divergent-2d"]], "exact_solution": [[284, "exact-solution"], [285, "exact-solution"]], "nondivergent_2d": [[286, "nondivergent-2d"]], "filament_analysis": [[286, "filament-analysis"]], "rotation_2d": [[287, "rotation-2d"]], "cvmix": [[288, "cvmix"], [338, "cvmix"]], "ideal age": [[288, "ideal-age"], [338, "ocean-single-column-ideal-age"]], "Categories of tasks": [[289, "categories-of-tasks"]], "Constructor": [[290, "constructor"]], "Config file": [[290, "config-file"]], "Directory structure": [[291, "directory-structure"]], "Organization of Tasks": [[292, "organization-of-tasks"]], "Steps": [[293, "steps"]], "Step attributes": [[293, "step-attributes"]], "constructor": [[293, "constructor"], [295, "constructor"]], "setup()": [[293, "setup"]], "constrain_resources()": [[293, "constrain-resources"]], "runtime_setup()": [[293, "runtime-setup"]], "run()": [[293, "run"]], "inputs and outputs": [[293, "inputs-and-outputs"]], "Input files": [[293, "input-files"]], "Symlinks to input files": [[293, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[293, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[293, "downloading-and-symlinking-input-files"]], "Copying input files": [[293, "copying-input-files"]], "Output files": [[293, "output-files"]], "Cached output files": [[293, "cached-output-files"]], "Adding other steps as dependencies": [[293, "adding-other-steps-as-dependencies"]], "Suites": [[294, "suites"], [327, "suites"], [340, "suites"], [345, "suites"]], "Pull-Request (PR) suite": [[294, "pull-request-pr-suite"]], "Nightly suite": [[294, "nightly-suite"]], "Task attributes": [[295, "task-attributes"]], "configure()": [[295, "configure"]], "Overview": [[296, "overview"]], "Code Style": [[296, "code-style"]], "Packages and Modules": [[296, "packages-and-modules"]], "Packages": [[296, "packages"]], "Modules": [[296, "modules"]], "Classes": [[296, "classes"]], "Code sharing": [[296, "code-sharing"]], "\u2026in the polaris framework": [[296, "in-the-polaris-framework"]], "\u2026within a component": [[296, "within-a-component"]], "\u2026within a group of related tasks": [[296, "within-a-group-of-related-tasks"]], "\u2026within a task": [[296, "within-a-task"]], "Quick Start for Developers": [[297, "quick-start-for-developers"]], "Unix Shell": [[297, "unix-shell"]], "Set up a polaris repository: for beginners": [[297, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[297, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[297, "supported-machines"]], "Environments with Albany": [[297, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[297, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[297, "unknown-machines"]], "What the script does": [[297, "what-the-script-does"]], "Optional flags": [[297, "optional-flags"]], "Activating the environment": [[297, "activating-the-environment"]], "Switching between different polaris environments": [[297, "switching-between-different-polaris-environments"]], "Troubleshooting": [[297, "troubleshooting"], [313, "troubleshooting"]], "Creating/updating only the polaris environment": [[297, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[297, "building-e3sm-components"]], "Running polaris from the repo": [[297, "running-polaris-from-the-repo"]], "Code style for polaris": [[297, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[297, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[298, "seaice"]], "SeaIce framework": [[299, "seaice-framework"]], "polaris.seaice.SeaIce": [[300, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[301, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[302, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[303, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[304, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[305, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[306, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[307, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[308, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[309, "seaice-component"]], "Supported Model: MPAS-Seaice": [[310, "supported-model-mpas-seaice"]], "standard_physics_test": [[312, "standard-physics-test"]], "exact_restart_test": [[312, "exact-restart-test"]], "Solver errors when configuring conda environment": [[313, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[313, "proxy-on-lanl-macs"]], "gethostbyname failed": [[313, "gethostbyname-failed"]], "Glossary": [[314, "glossary"], [315, null]], "Polaris": [[315, "polaris"]], "User's guide": [[315, null]], "Developer's guide": [[315, null]], "Tutorials": [[315, null]], "Compass": [[315, "compass"]], "Developer Tutorial: Adding a new test group": [[316, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[316, "getting-started"]], "Making a new test group": [[316, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[316, "adding-a-default-task"]], "Varying resolution and other parameters": [[316, "varying-resolution-and-other-parameters"]], "Adding the init step": [[316, "adding-the-init-step"]], "Creating a horizontal mesh": [[316, "creating-a-horizontal-mesh"]], "Adding a config file": [[316, "adding-a-config-file"]], "Adding the step to the task": [[316, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[316, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[316, "creating-an-initial-condition"]], "Adding plots": [[316, "adding-plots"]], "Adding step outputs": [[316, "adding-step-outputs"]], "Adding validation": [[316, "adding-validation"], [316, "id1"]], "Test things out!": [[316, "test-things-out"]], "Adding the forward step": [[316, "adding-the-forward-step"]], "Defining model config options and streams": [[316, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[316, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[316, "adding-more-validation"]], "Test the task again!": [[316, "test-the-task-again"]], "Adding a visualization step": [[316, "adding-a-visualization-step"]], "Adding the viz step to the task": [[316, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[316, "test-the-task-one-more-time"]], "Adding a second task": [[316, "adding-a-second-task"]], "Enhancements": [[316, "enhancements"]], "Adding model config options in code": [[316, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[316, "adding-dynamic-model-config-options"]], "Computing the cell count": [[316, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[316, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[316, "adding-a-parameter-study"]], "Adding the steps to the task": [[316, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[316, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[316, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[317, "config-files"]], "A \u201cuser\u201d config file": [[317, "a-user-config-file"]], "Test-case config files": [[317, "test-case-config-files"]], "config options": [[318, "config-options"], [319, "config-options"], [320, "config-options"], [321, "config-options"], [322, "config-options"], [323, "config-options"], [328, "config-options"], [328, "id7"], [328, "id14"], [328, "id22"], [328, "id30"], [328, "id37"], [329, "config-options"], [330, "config-options"], [331, "config-options"], [332, "config-options"], [334, "config-options"], [335, "config-options"], [336, "config-options"], [337, "config-options"], [338, "config-options"], [338, "id1"], [338, "id6"], [338, "id13"], [339, "config-options"], [343, "config-options"], [343, "id5"], [343, "id10"], [344, "config-options"]], "Intel on Anvil": [[318, "intel-on-anvil"]], "Gnu on Anvil": [[318, "gnu-on-anvil"]], "Chicoma-CPU": [[319, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[319, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[320, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[320, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[321, "intel-on-compymcnodeface"]], "Slurm job queueing": [[322, "slurm-job-queueing"]], "MPICH": [[322, "mpich"]], "OpenMPI": [[322, "openmpi"]], "No MPI from conda-forge": [[322, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[323, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[323, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[323, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[325, "d-grid-type"]], "uniform": [[325, "uniform"]], "tanh_dz": [[325, "tanh-dz"]], "index_tanh_dz": [[325, "index-tanh-dz"]], "60layerPHC": [[325, "layerphc"]], "80layerE3SMv1": [[325, "layere3smv1"]], "100layerE3SMv1": [[325, "id1"]], "3D vertical coordinates": [[325, "d-vertical-coordinates"]], "z-star": [[325, "z-star"]], "z-level": [[325, "z-level"]], "sigma": [[325, "sigma"]], "cosine_bell and cosine_bell_cached_init suite": [[327, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[328, "baroclinic-channel"]], "description": [[328, "description"], [328, "id1"], [328, "id8"], [328, "id16"], [328, "id24"], [329, "description"], [330, "description"], [331, "description"], [332, "description"], [334, "description"], [335, "description"], [336, "description"], [337, "description"], [338, "description"], [338, "id2"], [338, "id7"], [339, "description"], [343, "description"], [344, "description"]], "vertical grid": [[328, "vertical-grid"], [328, "id3"], [328, "id10"], [328, "id18"], [328, "id26"], [328, "id33"], [329, "vertical-grid"], [330, "vertical-grid"], [331, "vertical-grid"], [332, "vertical-grid"], [334, "vertical-grid"], [335, "vertical-grid"], [336, "vertical-grid"], [337, "vertical-grid"], [338, "vertical-grid"], [338, "id4"], [338, "id9"], [339, "vertical-grid"]], "initial conditions": [[328, "initial-conditions"], [328, "id4"], [328, "id11"], [328, "id19"], [328, "id27"], [328, "id34"], [329, "initial-conditions"], [330, "initial-conditions"], [331, "initial-conditions"], [332, "initial-conditions"], [334, "initial-conditions"], [335, "initial-conditions"], [336, "initial-conditions"], [337, "initial-conditions"], [338, "initial-conditions"], [338, "id5"], [338, "id10"], [339, "initial-conditions"], [343, "initial-conditions"], [343, "id2"], [343, "id7"], [344, "initial-conditions"]], "forcing": [[328, "forcing"], [328, "id5"], [328, "id12"], [328, "id20"], [328, "id28"], [328, "id35"], [329, "forcing"], [330, "forcing"], [331, "forcing"], [332, "forcing"], [334, "forcing"], [335, "forcing"], [336, "forcing"], [337, "forcing"], [338, "forcing"], [338, "id11"], [339, "forcing"], [343, "forcing"], [343, "id3"], [343, "id8"], [344, "forcing"]], "time step and run duration": [[328, "time-step-and-run-duration"], [328, "id6"], [328, "id13"], [328, "id21"], [328, "id29"], [328, "id36"], [329, "time-step-and-run-duration"], [330, "time-step-and-run-duration"], [331, "time-step-and-run-duration"], [332, "time-step-and-run-duration"], [334, "time-step-and-run-duration"], [335, "time-step-and-run-duration"], [336, "time-step-and-run-duration"], [337, "time-step-and-run-duration"], [338, "time-step-and-run-duration"], [338, "id12"], [339, "time-step-and-run-duration"], [344, "time-step-and-run-duration"]], "cores": [[328, "cores"], [328, "id15"], [328, "id23"], [328, "id31"], [328, "id38"], [329, "cores"], [330, "cores"], [331, "cores"], [332, "cores"], [334, "cores"], [335, "cores"], [336, "cores"], [337, "cores"], [338, "cores"], [338, "id14"], [339, "cores"], [343, "cores"], [343, "id4"], [343, "id9"], [344, "cores"]], "thread": [[328, "thread"]], "correlated tracers 2-d": [[329, "correlated-tracers-2-d"]], "cosine bell": [[330, "cosine-bell"]], "divergent 2-d": [[331, "divergent-2-d"]], "inertial gravity wave": [[334, "inertial-gravity-wave"]], "manufactured solution": [[335, "manufactured-solution"]], "convergence": [[335, "convergence"]], "nondivergent 2-d": [[336, "nondivergent-2-d"]], "rotation 2-d": [[337, "rotation-2-d"]], "single column": [[338, "single-column"], [343, "single-column"]], "<Category of task>": [[339, "ocean-category-of-task"], [344, "seaice-category-of-task"]], "task_name": [[339, "task-name"], [344, "task-name"]], "Quick Start for Users": [[340, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[340, null]], "Loading polaris conda and spack environments": [[340, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[340, "e3sm-supported-machines"]], "Other machines": [[340, "other-machines"]], "Building supported E3SM components as standalone models": [[340, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[340, "setting-up-tasks"]], "Running a task": [[340, "running-a-task"]], "Running with a job script": [[340, "running-with-a-job-script"]], "Sea ice component": [[341, "sea-ice-component"]], "standard physics test": [[343, "standard-physics-test"]], "timestep and run duration": [[343, "timestep-and-run-duration"], [343, "id11"]], "visualization": [[343, "visualization"]], "exact restart test": [[343, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[61, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[62, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[63, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[64, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[65, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[66, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[69, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[79, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[80, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[80, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[84, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[85, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[86, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[87, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[88, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[89, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[90, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[91, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[92, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[93, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[94, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[95, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[96, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[107, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[108, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[109, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[111, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[112, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[113, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[114, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[115, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[116, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[117, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[118, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[119, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[120, "polaris.validate.compare_variables"]], "plot_global_lat_lon_field() (in module polaris.viz)": [[121, "polaris.viz.plot_global_lat_lon_field"]], "plot_global_mpas_field() (in module polaris.viz)": [[122, "polaris.viz.plot_global_mpas_field"]], "plot_horiz_field() (in module polaris.viz)": [[123, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[124, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[125, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[125, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[126, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[127, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[128, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[129, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[130, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[131, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[140, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[140, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[142, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[149, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[149, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[150, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[151, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[153, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[154, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[155, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[155, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[156, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[157, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[158, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[159, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[160, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[161, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[162, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[163, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[163, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[164, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[164, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[166, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[167, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[169, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[170, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[173, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[175, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[177, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[178, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[179, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[179, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[181, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[183, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[185, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[186, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[188, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[190, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[191, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[193, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[194, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[196, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[197, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[197, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[198, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[199, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[200, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[200, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[201, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[203, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[203, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[204, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[204, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[205, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[206, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[206, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[207, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[208, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[208, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[209, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[210, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[210, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[211, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[221, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[221, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[222, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[223, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[223, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[224, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[225, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[225, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[226, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[227, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[228, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[228, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[229, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[230, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[230, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[231, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[232, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[232, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[233, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[234, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[235, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[235, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[236, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[236, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[237, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[237, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[238, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[238, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[239, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[240, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[240, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[241, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[242, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[242, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[243, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[244, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[245, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[245, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[246, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[247, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[247, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[248, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[249, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[249, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[250, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[250, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[251, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[252, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[252, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[253, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[254, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[254, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[255, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[256, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[257, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[258, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[259, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[260, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[261, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[262, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[263, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[264, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[265, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "compute_transect() (in module polaris.ocean.viz)": [[266, "polaris.ocean.viz.compute_transect"]], "plot_transect() (in module polaris.ocean.viz)": [[267, "polaris.ocean.viz.plot_transect"]], "find_planar_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[268, "polaris.ocean.viz.transect.horiz.find_planar_transect_cells_and_weights"]], "find_spherical_transect_cells_and_weights() (in module polaris.ocean.viz.transect.horiz)": [[269, "polaris.ocean.viz.transect.horiz.find_spherical_transect_cells_and_weights"]], "make_triangle_tree() (in module polaris.ocean.viz.transect.horiz)": [[270, "polaris.ocean.viz.transect.horiz.make_triangle_tree"]], "mesh_to_triangles() (in module polaris.ocean.viz.transect.horiz)": [[271, "polaris.ocean.viz.transect.horiz.mesh_to_triangles"]], "find_transect_levels_and_weights() (in module polaris.ocean.viz.transect.vert)": [[272, "polaris.ocean.viz.transect.vert.find_transect_levels_and_weights"]], "interp_mpas_to_transect_cells() (in module polaris.ocean.viz.transect.vert)": [[273, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_cells"]], "interp_mpas_to_transect_nodes() (in module polaris.ocean.viz.transect.vert)": [[274, "polaris.ocean.viz.transect.vert.interp_mpas_to_transect_nodes"]], "seaice (class in polaris.seaice)": [[300, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[300, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[301, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[302, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[302, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[303, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[303, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[304, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[305, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[305, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[306, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[306, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[307, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[307, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[308, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})