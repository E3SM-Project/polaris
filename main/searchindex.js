Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "cosine_bell", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "cosine bell", "Tasks", "inertial gravity wave", "manufactured solution", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 19, 21, 38, 46, 49, 50, 53, 136, 139, 149, 158, 159, 166, 169, 174, 179, 240, 243, 244, 248, 249, 250, 251, 253, 255, 257, 259, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 293, 294, 295, 299, 301], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 68, 73, 75, 78, 81, 82, 92, 94, 96, 97, 103, 108, 109, 110, 111, 114, 115, 136, 139, 141, 147, 148, 149, 150, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 186, 187, 188, 190, 191, 192, 193, 196, 197, 201, 203, 204, 205, 206, 207, 210, 211, 215, 217, 218, 219, 220, 221, 224, 226, 227, 228, 229, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 263, 264, 265, 267, 268, 272, 274, 275, 277, 283, 285, 300, 301], "templat": [0, 5, 6, 7, 28, 29, 30, 116, 126, 130, 136, 139, 148, 162, 168, 244, 275, 276, 277], "date": [1, 2, 5, 55, 240, 251, 257, 269, 277], "2023": [1, 17, 291, 292], "08": [1, 276, 288], "18": [1, 6, 277, 279], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 136, 276, 277, 282], "asai": [1, 277], "davi": [1, 277], "capabl": [1, 2, 6, 17, 136, 253, 256, 276, 282, 295], "design": [1, 136, 241, 253, 255, 256, 275, 282, 288], "here": [1, 6, 9, 12, 14, 17, 18, 136, 139, 243, 248, 249, 252, 253, 255, 256, 257, 272, 276, 277, 278, 279, 280, 281, 282, 283, 289, 293, 294, 295, 299, 300], "abil": [1, 7], "across": [1, 6, 7, 9, 14, 19, 139, 243, 249, 253, 254, 255, 256, 257, 274, 276, 284, 288, 289], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 136, 139, 249, 251, 253, 254, 255, 256, 257, 275, 276, 277, 282, 285, 289, 294, 295, 299, 300, 301], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 63, 67, 69, 72, 73, 76, 77, 78, 82, 93, 94, 96, 97, 103, 108, 111, 121, 132, 133, 134, 135, 136, 137, 139, 141, 147, 150, 153, 158, 159, 160, 162, 164, 165, 166, 168, 169, 170, 172, 173, 174, 178, 179, 182, 186, 188, 191, 193, 194, 197, 201, 203, 205, 207, 208, 211, 215, 217, 219, 221, 223, 224, 225, 226, 227, 228, 229, 240, 243, 244, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 268, 269, 273, 274, 275, 276, 277, 279, 282, 283, 285, 288, 289, 291, 292, 293, 294, 295, 299, 300], "document": [1, 3, 9, 14, 253, 256, 275, 277, 295], "refer": [1, 7, 14, 38, 156, 169, 232, 235, 238, 239, 253, 256, 257, 274, 275, 276, 285, 288, 295], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 34, 47, 108, 114, 115, 165, 173, 249, 250, 251, 253, 254, 255, 256, 257, 259, 276, 277, 282, 288, 289, 293, 294, 295, 298, 299], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 86, 97, 99, 106, 114, 115, 116, 120, 123, 126, 136, 139, 141, 142, 143, 144, 145, 146, 150, 153, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 183, 199, 200, 213, 214, 224, 240, 242, 249, 250, 252, 253, 255, 257, 262, 263, 265, 267, 276, 277, 279, 282, 285, 288, 289, 291, 292, 293, 294, 295], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 64, 92, 93, 94, 136, 139, 150, 160, 201, 215, 224, 243, 244, 253, 255, 256, 257, 276, 278, 279, 280, 281, 283, 288, 295, 300], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 132, 134, 135, 136, 139, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 296, 300, 301], "main": [1, 3, 6, 7, 9, 14, 43, 136, 193, 249, 250, 255, 256, 257, 276, 301], "motiv": 1, "behind": [1, 256], "comput": [1, 7, 13, 14, 15, 80, 136, 139, 142, 143, 146, 150, 151, 156, 161, 185, 189, 198, 202, 212, 216, 235, 236, 237, 243, 244, 246, 247, 248, 253, 257, 279, 280, 282, 283, 288, 289, 291, 292, 295], "expens": [1, 253, 254], "could": [1, 14, 17, 19, 136, 244, 253, 254, 255, 256, 257, 276, 289], "time": [1, 5, 6, 7, 8, 14, 18, 19, 38, 49, 62, 87, 123, 136, 144, 145, 155, 156, 160, 169, 183, 186, 199, 200, 203, 213, 214, 217, 224, 242, 243, 244, 246, 247, 249, 253, 254, 255, 256, 257, 272, 273, 274, 277, 279, 283, 295, 300], "order": [1, 5, 8, 13, 14, 139, 244, 250, 253, 254, 257, 276, 289, 292, 293, 295], "reflect": [1, 5, 257], "fact": [1, 14, 38, 136], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 135, 136, 139, 143, 144, 145, 154, 183, 243, 244, 248, 249, 252, 253, 255, 256, 257, 272, 275, 276, 277, 279, 281, 282, 283, 285, 289, 295, 300], "present": [1, 50, 123, 257, 276], "new": [1, 2, 5, 20, 26, 38, 49, 57, 61, 68, 75, 81, 97, 117, 118, 139, 148, 160, 167, 184, 198, 201, 212, 215, 224, 232, 238, 239, 253, 255, 256, 257, 270, 273, 274, 275, 295], "success": [1, 2, 8, 48, 59, 240, 250, 269, 276, 277], "insofar": 1, "guarante": [1, 14, 136, 240, 257, 269], "per": [1, 8, 14, 25, 35, 37, 38, 45, 93, 94, 136, 139, 150, 253, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 291, 292, 294, 299], "slurm": [1, 62, 95, 136, 253, 275, 277, 278, 279, 280, 281, 283, 295], "job": [1, 6, 136, 257, 275, 276, 278, 279, 280, 281, 283], "role": 1, "clear": [1, 2, 256, 276], "should": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 63, 76, 114, 115, 122, 123, 132, 133, 134, 135, 136, 137, 139, 141, 146, 153, 165, 173, 226, 228, 240, 249, 250, 251, 253, 254, 255, 257, 269, 270, 273, 274, 276, 277, 288, 289, 293, 294, 295, 299], "invoc": 1, "serial": [1, 44, 253, 255, 275, 276, 295], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 64, 68, 69, 72, 75, 76, 77, 81, 89, 92, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 111, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 139, 141, 148, 153, 155, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 179, 182, 184, 187, 190, 192, 196, 201, 204, 206, 210, 215, 218, 220, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 243, 244, 246, 247, 248, 250, 253, 254, 255, 256, 257, 262, 263, 265, 267, 274, 275, 276, 278, 279, 280, 281, 282, 283, 288, 289, 291, 292, 294, 295, 298, 299], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 82, 110, 117, 120, 136, 139, 190, 240, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 289, 291, 292, 294, 295, 296, 299], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 67, 68, 75, 81, 97, 125, 139, 140, 141, 148, 150, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 179, 182, 184, 187, 190, 192, 193, 194, 196, 198, 201, 204, 206, 208, 210, 212, 215, 218, 220, 223, 224, 225, 226, 228, 240, 243, 244, 246, 247, 248, 250, 251, 253, 255, 260, 262, 263, 265, 266, 267, 269, 272, 276], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 101, 107, 108, 141, 246, 247, 276], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 40, 47, 49, 59, 110, 111, 122, 136, 139, 165, 173, 179, 226, 228, 243, 244, 248, 249, 251, 253, 254, 255, 256, 257, 273, 274, 275, 276, 277, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 298, 299, 300, 301], "relat": [1, 6, 7, 11, 13, 14, 136, 139, 240, 243, 244, 246, 247, 248, 249, 253, 257, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 293, 294, 295, 296], "inform": [1, 5, 7, 8, 38, 97, 121, 131, 198, 212, 253, 255, 257, 277, 279, 286, 295, 296], "belong": [1, 10, 12, 14, 25, 35, 38, 45, 49, 68, 75, 81, 97, 139, 141, 148, 150, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 179, 182, 184, 187, 190, 192, 194, 196, 201, 204, 206, 208, 210, 215, 218, 220, 223, 224, 225, 226, 228, 249, 250, 253, 255, 256, 262, 263, 265, 266, 267, 276, 300], "locat": [1, 5, 6, 9, 14, 19, 38, 50, 114, 115, 120, 139, 240, 253, 255, 257, 269, 274, 276, 277, 279, 282, 285, 288, 289, 295], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 139, 144, 145, 183, 232, 233, 234, 235, 236, 237, 238, 239, 243, 249, 251, 252, 253, 255, 276, 277, 288, 289, 291, 292, 293, 294, 299], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 63, 96, 115, 120, 122, 136, 139, 232, 235, 238, 239, 240, 250, 252, 253, 255, 257, 269, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 293, 294, 295, 299, 300], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 93, 94, 96, 115, 121, 136, 139, 140, 143, 144, 150, 160, 183, 201, 215, 224, 232, 238, 239, 240, 243, 249, 250, 251, 253, 254, 255, 256, 257, 260, 269, 274, 275, 276, 277, 282, 285, 286, 288, 289, 294, 295, 296, 299, 301], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 93, 94, 136, 139, 150, 160, 201, 215, 224, 240, 249, 251, 253, 255, 257, 276, 277, 282, 285, 289, 291, 292, 293, 295], "There": [1, 5, 6, 13, 232, 238, 239, 248, 249, 251, 253, 256, 257, 273, 276, 277, 295], "wai": [1, 5, 7, 13, 14, 38, 72, 77, 136, 139, 253, 255, 256, 257, 273, 275, 276, 282, 285, 293], "list": [1, 2, 6, 7, 9, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 87, 93, 94, 111, 114, 115, 120, 121, 139, 141, 148, 156, 171, 175, 179, 182, 196, 206, 208, 210, 220, 224, 253, 254, 255, 256, 257, 263, 274, 275, 276, 277, 279, 282, 283, 289, 295, 300, 301], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 60, 120, 121, 136, 139, 243, 246, 247, 249, 250, 251, 253, 254, 255, 257, 270, 274, 276, 277, 279, 282, 289, 293, 294, 299], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 64, 70, 71, 80, 109, 115, 131, 136, 139, 141, 146, 175, 176, 179, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 263, 264, 272, 274, 276, 277, 282, 285, 288, 289, 291, 292, 294, 295, 299, 300], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 121, 122, 136, 139, 190, 232, 238, 239, 240, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 276, 277, 282, 283, 285, 289, 291, 292, 294, 295, 299, 301], "find": [1, 6, 7, 15, 59, 71, 95, 136, 240, 255, 256, 257, 273, 276, 277, 295], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 136, 139, 240, 242, 244, 248, 250, 253, 255, 256, 269, 272, 275, 276, 277, 279, 282, 283, 285, 287, 288, 289, 292, 293, 295, 298], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 103, 108, 109, 117, 136, 139, 249, 250, 251, 253, 254, 255, 256, 257, 274, 276, 277, 278, 289, 295, 301], "would": [1, 2, 5, 9, 14, 18, 25, 35, 38, 45, 50, 93, 94, 97, 136, 139, 150, 160, 201, 215, 224, 243, 251, 253, 255, 256, 257, 273, 276, 282, 285, 295], "ident": [1, 2, 5, 18, 158, 166, 174, 243, 253, 254, 256, 262, 276, 288], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 83, 139, 250, 253, 255, 256, 276, 277], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 60, 89, 92, 98, 99, 100, 101, 105, 106, 107, 116, 123, 125, 139, 141, 148, 156, 232, 238, 239, 250, 251, 252, 253, 256, 257, 259, 269, 270, 274, 276, 277, 282, 286, 294, 295, 296, 299], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 70, 136, 139, 240, 253, 257, 274, 276, 277, 285, 293, 295], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 75, 111, 127, 136, 139, 155, 240, 243, 244, 249, 252, 253, 255, 256, 257, 270, 274, 275, 276, 277, 282, 285, 288, 289, 295], "As": [1, 4, 5, 6, 9, 13, 18, 70, 139, 249, 253, 254, 255, 256, 257, 276, 277, 285, 289, 293, 300], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 136, 139, 162, 168, 186, 203, 217, 243, 246, 247, 248, 255, 256, 257, 274, 275, 276, 277, 289, 295, 301], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 63, 64, 110, 111, 113, 115, 136, 243, 252, 253, 255, 257, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 288], "proce": [1, 257], "iter": [1, 240, 277], "through": [1, 2, 115, 256, 257, 270, 276], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 61, 68, 70, 71, 99, 106, 116, 118, 122, 130, 136, 141, 146, 150, 187, 243, 244, 248, 249, 250, 251, 253, 254, 255, 256, 257, 273, 274, 275, 277, 279, 282, 285, 291, 295, 300, 301], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 95, 103, 108, 132, 134, 135, 136, 149, 150, 160, 201, 215, 224, 240, 244, 250, 251, 252, 253, 254, 255, 256, 257, 269, 270, 273, 274, 276, 277, 285, 288, 289, 291, 293, 295], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 103, 115, 120, 132, 134, 135, 136, 139, 141, 149, 182, 196, 206, 210, 220, 240, 250, 253, 255, 256, 257, 269, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 295], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 139, 149, 155, 157, 165, 173, 181, 195, 209, 222, 232, 238, 239, 249, 250, 255, 257, 261, 270, 275, 278, 279, 280, 281, 283, 295], "initi": [1, 7, 8, 38, 123, 139, 144, 156, 158, 159, 163, 166, 169, 174, 183, 187, 204, 218, 223, 225, 226, 228, 243, 244, 246, 247, 248, 249, 253, 255, 256, 266, 273, 274, 275, 277, 285, 287, 300, 301], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 64, 66, 110, 111, 115, 120, 121, 123, 136, 139, 150, 226, 228, 242, 249, 253, 255, 270, 276, 277, 279, 281, 283, 288], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 69, 76, 136, 139, 165, 173, 189, 249, 250, 253, 255, 256, 274, 275, 276, 289, 301], "skip": [1, 5, 8, 121, 300], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 61, 121, 122, 123, 127, 132, 133, 134, 135, 136, 137, 139, 150, 225, 242, 249, 253, 257, 276, 277, 278, 279, 280, 281, 282, 283, 288, 295, 301], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 61, 64, 110, 121, 136, 139, 153, 237, 243, 244, 246, 247, 248, 249, 253, 255, 256, 257, 275, 276, 278, 279, 280, 281, 283, 285, 288, 289, 293, 295, 301], "complet": [1, 5, 8, 27, 28, 29, 108, 276, 295], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 61, 136, 139, 149, 224, 253, 255, 256, 257, 276, 277, 282, 285, 289, 295], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 139, 148, 160, 184, 201, 215, 224, 243, 246, 247, 253, 254, 255, 256, 257, 275, 276, 285], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 136, 150, 253, 256, 257, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 295, 301], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 69, 70, 72, 85, 132, 133, 134, 135, 136, 137, 139, 150, 154, 158, 166, 174, 192, 232, 238, 239, 240, 243, 249, 253, 255, 256, 257, 262, 269, 274, 277, 278, 279, 280, 281, 282, 283, 288, 289, 295, 300], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 61, 67, 84, 85, 88, 89, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 141, 144, 145, 146, 148, 150, 154, 156, 162, 165, 168, 173, 183, 190, 192, 231, 240, 243, 244, 246, 247, 248, 249, 254, 255, 256, 257, 263, 269, 270, 272, 273, 274, 275, 279, 282, 283, 285, 288, 289, 294, 295, 298, 299, 301], "mode": [1, 5, 14, 250, 257, 274, 275, 276, 295], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 136, 139, 158, 166, 174, 240, 243, 253, 256, 257, 262, 269, 274, 276, 277, 282, 283, 288, 289], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 89, 92, 96, 115, 116, 125, 126, 127, 139, 148, 153, 244, 253, 255, 256, 276, 289], "them": [1, 7, 8, 9, 14, 17, 18, 25, 37, 136, 139, 150, 244, 250, 251, 253, 255, 256, 257, 274, 276, 281, 282, 287, 295, 301], "constructor": [1, 9, 14, 139, 243, 246, 247, 249, 276], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 93, 94, 104, 122, 243, 250, 253, 255, 256, 257, 276, 294, 299, 300], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 61, 89, 116, 126, 127, 136, 139, 148, 153, 162, 168, 255, 256, 276, 277, 295], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 63, 66, 68, 75, 81, 96, 97, 114, 120, 125, 136, 141, 148, 149, 150, 157, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 179, 181, 182, 184, 187, 190, 192, 194, 195, 196, 201, 204, 206, 208, 209, 210, 215, 218, 220, 222, 223, 224, 225, 226, 228, 249, 251, 252, 253, 254, 255, 259, 260, 261, 262, 263, 265, 266, 267, 270, 274, 275, 276, 277, 282, 284, 287, 300, 301], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 68, 75, 81, 97, 139, 141, 148, 150, 160, 182, 184, 187, 190, 192, 224, 253, 255, 263, 276], "now": [1, 6, 136, 253, 257, 276, 277, 282], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 114, 115, 120, 121, 240, 250, 253, 255, 256, 257, 263, 269, 274, 276, 288, 295, 301], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 136, 139, 243, 253, 257, 273, 276, 285], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 136, 160, 201, 215, 224, 243, 253, 254, 256, 257, 273, 276, 285, 288], "parent": [1, 33, 139, 244, 249, 250, 253], "resid": [1, 5, 9, 40, 139, 141, 182, 251, 253, 255], "insid": [1, 12, 251, 253, 256, 289], "situat": [1, 17, 31, 153, 276, 295], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 38, 39, 40, 121, 240, 243, 249, 251, 253, 255, 256, 257, 274, 276, 277, 288, 295, 300, 301], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 139, 240, 245, 250, 255, 276, 289, 294, 299, 300], "with_viz": [1, 244, 255, 289], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 74, 79, 81, 114, 115, 120, 136, 139, 149, 152, 154, 184, 187, 190, 192, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 250, 252, 253, 255, 256, 257, 269, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 301], "mesh": [1, 5, 7, 10, 17, 25, 38, 85, 86, 99, 106, 123, 141, 142, 144, 145, 148, 150, 151, 152, 154, 156, 159, 161, 163, 179, 182, 183, 184, 185, 187, 190, 192, 196, 198, 202, 204, 206, 210, 212, 216, 218, 220, 223, 225, 226, 232, 238, 239, 242, 243, 244, 246, 247, 248, 249, 251, 253, 255, 256, 257, 265, 266, 274, 275, 277, 285, 287, 295, 300], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 139, 141, 148, 158, 159, 166, 169, 174, 184, 190, 240, 242, 250, 253, 255, 256, 257, 269, 277, 288, 289, 291, 292, 295], "forward": [1, 5, 7, 9, 14, 38, 139, 141, 148, 156, 159, 167, 169, 190, 223, 225, 240, 250, 253, 255, 256, 266, 269, 277, 288, 289, 291, 292, 294, 299], "resolut": [1, 9, 13, 14, 17, 68, 71, 75, 76, 80, 98, 102, 105, 139, 141, 142, 146, 148, 149, 158, 159, 160, 163, 166, 167, 169, 171, 174, 179, 182, 184, 196, 201, 204, 206, 208, 210, 215, 218, 220, 243, 244, 246, 247, 248, 249, 250, 251, 253, 255, 277, 288, 289, 291, 292, 293, 294, 299, 301], "singl": [1, 5, 8, 9, 19, 123, 136, 222, 223, 225, 226, 228, 248, 253, 255, 256, 261, 262, 263, 265, 266, 267, 269, 270, 274, 276, 282, 286, 289, 290, 291, 292, 296, 297], "analysi": [1, 6, 9, 19, 139, 243, 255, 256, 274, 275, 277, 289, 291, 292, 301], "add": [1, 2, 5, 6, 7, 9, 13, 14, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 74, 79, 84, 116, 117, 118, 126, 127, 130, 131, 136, 139, 149, 157, 162, 168, 181, 195, 209, 222, 249, 250, 253, 255, 256, 257, 261, 274, 276, 277, 283, 289], "remap": [1, 10, 19, 190, 244, 275, 289, 294, 299], "visual": [1, 10, 13, 17, 206, 220, 244, 246, 247, 249, 253, 255, 274, 275, 289, 291, 292, 294, 299], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 120, 136, 241, 243, 244, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 274, 275, 276, 277, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 300, 301], "spheric": [1, 5, 244, 255, 289, 300], "qu": [1, 5, 139, 255, 276, 277, 287, 289, 300], "base_mesh": [1, 5, 13, 68, 75, 139, 141, 148, 149, 184, 187, 190, 192, 253, 255, 276, 289], "60km": [1, 5, 255, 289], "90km": [1, 5], "120km": [1, 5, 255], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 149, 255], "map": [1, 8, 17, 20, 31, 75, 76, 97, 122, 123, 153, 190, 192, 244, 255, 257, 277], "viz": [1, 5, 19, 179, 253, 255], "two": [1, 5, 10, 18, 121, 139, 166, 176, 243, 244, 246, 247, 248, 249, 250, 253, 254, 256, 257, 262, 264, 276, 288, 289, 291, 292, 298], "first": [1, 6, 9, 14, 15, 87, 115, 136, 139, 243, 246, 247, 248, 253, 255, 256, 257, 273, 276, 278, 279, 280, 281, 282, 283, 288, 289, 293, 295], "verbos": [1, 5, 6, 64, 66, 136, 253, 276, 300], "10": [1, 9, 13, 70, 136, 240, 243, 246, 247, 249, 250, 276, 277, 282, 285, 288, 291, 292, 293, 301], "name": [1, 5, 7, 8, 9, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 61, 62, 63, 64, 68, 75, 81, 85, 89, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 130, 136, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 156, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 183, 184, 187, 190, 192, 224, 231, 249, 250, 253, 255, 256, 257, 263, 265, 267, 274, 276, 277, 283, 288, 295, 300], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 87, 139, 144, 145, 155, 160, 183, 224, 248, 253, 256, 288, 293, 298], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 57, 255, 256, 257, 289], "what": [1, 2, 6, 11, 13, 17, 136, 255, 256, 276, 283, 294, 295, 299], "follow": [1, 4, 5, 7, 9, 13, 14, 19, 67, 136, 141, 232, 238, 239, 240, 242, 253, 254, 255, 257, 269, 270, 273, 276, 277, 282, 283, 285, 287, 289, 291, 292, 293, 295, 298], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 64, 68, 75, 81, 97, 114, 139, 141, 148, 150, 160, 182, 184, 187, 190, 192, 196, 201, 204, 206, 210, 215, 218, 220, 224, 226, 228, 249, 251, 253, 255, 256, 276, 294, 295, 299, 301], "bold": [1, 255], "elsewher": [1, 257], "tree": [1, 7, 116, 118, 131, 255, 296], "thu": [1, 2, 7, 14, 276, 289], "similar": [1, 2, 5, 9, 12, 13, 14, 133, 136, 137, 139, 249, 251, 256, 257, 276, 277, 295], "had": [1, 136], "maintain": [1, 240, 295], "local": [1, 5, 6, 8, 9, 11, 18, 40, 240, 251, 253, 257, 269, 273, 276, 277, 282, 283, 285], "debug": [1, 8, 132, 133, 134, 135, 136, 137, 276, 278, 279, 280, 281, 283], "easier": [1, 14, 253, 255, 256, 257, 277, 295, 300], "symbol": [1, 61, 253], "link": [1, 2, 7, 9, 11, 14, 40, 46, 53, 61, 136, 249, 253, 255, 257, 276, 282, 286, 295, 296], "were": [1, 48, 136, 224, 253, 256, 274, 276, 277, 281, 285], "even": [1, 6, 12, 13, 14, 40, 57, 136, 253, 256, 257, 276, 277, 282, 295], "compass": [1, 5, 240, 253, 255, 256, 274, 276], "though": [1, 11, 38, 255, 256, 276], "global": [1, 13, 17, 101, 102, 107, 244, 249, 253, 254, 256, 274, 275, 276, 277, 283, 287, 289, 294, 295, 299, 301], "dynamic_adjust": [1, 14, 277], "allow": [1, 2, 8, 17, 18, 25, 35, 38, 45, 57, 121, 136, 139, 150, 253, 274, 276, 277, 282, 285, 289, 293, 301], "one": [1, 2, 5, 6, 7, 10, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 61, 114, 115, 120, 136, 139, 149, 150, 166, 224, 240, 243, 246, 247, 248, 249, 251, 253, 255, 256, 257, 262, 272, 273, 274, 275, 277, 282, 283, 285, 288, 289, 292, 294, 295, 298, 299, 300, 301], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 85, 139, 165, 173, 243, 244, 246, 247, 248, 276, 293], "port": [1, 276, 283], "instead": [1, 5, 6, 12, 14, 15, 25, 111, 132, 136, 253, 256, 257, 274, 276, 278, 289, 295, 300], "seri": [1, 14, 139, 171, 177, 244, 246, 272, 276, 287], "indic": [1, 7, 8, 14, 17, 18, 38, 39, 108, 115, 123, 136, 139, 235, 251, 253, 273, 276, 277, 285, 293], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 242, 253, 255, 256, 257, 276, 279, 281, 283, 295], "ran": [1, 109], "ico": [1, 5, 139, 255, 276, 287, 289, 300], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 115, 120, 136, 150, 240, 250, 253, 257, 269, 276, 277, 278, 279, 280, 281, 282, 283, 295], "runtim": [1, 8, 14, 30, 44, 139, 162, 168, 186, 203, 217, 253, 276], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 70, 98, 102, 105, 121, 123, 132, 133, 134, 135, 136, 137, 139, 232, 237, 238, 239, 242, 244, 249, 253, 256, 270, 273, 276, 277, 279, 282, 285, 286, 288, 289, 291, 292, 293, 294, 295, 296, 299], "01": [1, 14, 139, 270, 276, 293, 298], "00": [1, 14, 18, 139, 255, 270, 276, 283, 295], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 295], "02": [1, 279], "59": 1, "icos_map_60km": 1, "20": [1, 169, 243, 254, 276, 288, 293], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 57, 136, 243, 256, 257, 289, 293], "mechan": [1, 253], "prevent": [1, 253], "expect": [1, 2, 12, 17, 136, 139, 250, 253, 257, 276, 289], "affect": [1, 6, 253, 257, 276], "howev": [1, 13, 253, 254, 255, 257, 276], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 68, 121, 136, 139, 148, 159, 160, 165, 169, 173, 184, 193, 201, 215, 223, 224, 225, 240, 243, 244, 246, 247, 248, 253, 254, 255, 266, 274, 275, 276, 277, 282, 288, 300], "successfulli": [1, 48, 276], "after": [1, 5, 6, 7, 9, 17, 18, 19, 38, 40, 41, 82, 103, 108, 136, 233, 234, 240, 250, 253, 255, 257, 269, 276, 277, 279, 283, 289, 295, 298], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 109, 115, 120, 135, 136, 139, 141, 146, 153, 182, 196, 206, 210, 220, 240, 243, 246, 247, 249, 251, 253, 254, 255, 256, 257, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 295, 300, 301], "remov": [1, 5, 14, 24, 52, 111, 243, 246, 247, 255, 257, 276], "longer": [1, 166, 243, 254, 262, 276, 288, 289], "about": [1, 5, 6, 7, 8, 12, 14, 38, 97, 125, 139, 249, 253, 255, 256, 257, 276, 277, 279], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 30, 50, 57, 76, 136, 139, 162, 168, 240, 244, 250, 253, 255, 256, 257, 269, 270, 273, 275, 276, 277, 278, 282, 283, 285, 288, 289, 295, 300], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 136, 139, 240, 242, 250, 253, 254, 255, 256, 270, 273, 277, 282, 286, 295], "enforc": [1, 242, 257], "framework": [1, 5, 7, 9, 12, 13, 14, 110, 240, 249, 250, 253, 255, 269, 274, 275, 276, 286, 293, 294, 296, 299, 301], "propos": [1, 2], "close": [1, 6, 71, 136, 275, 289], "root": [1, 40, 136, 240, 246, 247, 250, 253, 256, 257, 269, 274, 277, 278, 279, 280, 281, 282, 283, 285, 291, 292, 295], "live": [1, 50, 255, 295], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 69, 76, 77, 80, 83, 97, 103, 121, 139, 150, 166, 175, 198, 212, 232, 238, 239, 244, 250, 251, 253, 255, 256, 262, 263, 282, 285, 288, 291, 292], "think": [1, 5, 276], "condit": [1, 7, 38, 139, 144, 159, 163, 183, 187, 204, 218, 223, 225, 226, 228, 243, 244, 246, 247, 248, 249, 253, 254, 255, 256, 266, 272, 274, 275, 277, 287, 300, 301], "shown": [1, 14, 136, 251, 293], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 72, 75, 77, 98, 102, 103, 105, 114, 115, 120, 132, 133, 134, 135, 136, 137, 139, 240, 243, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 292, 295, 300, 301], "simpli": [1, 14, 18, 57, 136, 159, 250, 253, 255, 257, 276, 285, 295, 300], "prefer": [1, 2, 136, 253, 254, 276, 277], "convent": [1, 253, 257, 276], "futur": [1, 13, 44, 253, 256, 274, 275, 276, 277, 293, 295, 301], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 121, 136, 150, 240, 248, 250, 253, 256, 257, 259, 269, 270, 274, 275, 276, 277, 282, 285, 288, 292, 293, 295, 300, 301], "independ": [1, 2, 5, 254, 274], "yyyi": 2, "mm": [2, 139, 155], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 61, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 80, 81, 85, 86, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 130, 131, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 155, 158, 159, 160, 161, 163, 165, 166, 167, 169, 171, 173, 174, 175, 177, 179, 182, 183, 184, 185, 187, 190, 192, 194, 196, 201, 202, 204, 206, 208, 210, 215, 216, 218, 220, 223, 224, 225, 226, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 263, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 301], "purpos": [2, 249, 256, 276, 301], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 76, 122, 127, 136, 139, 150, 153, 230, 232, 238, 239, 240, 244, 248, 249, 250, 253, 254, 256, 257, 269, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 293, 294, 295, 299], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 61, 75, 76, 81, 87, 93, 94, 97, 101, 107, 108, 110, 111, 116, 118, 121, 123, 126, 131, 132, 134, 135, 136, 139, 144, 145, 148, 149, 150, 158, 159, 160, 162, 163, 166, 167, 168, 169, 171, 174, 175, 177, 183, 186, 201, 203, 215, 217, 224, 232, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 263, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 298, 299, 300, 301], "summar": 2, "process": [2, 6, 8, 14, 33, 93, 94, 131, 253, 256, 257, 269, 274, 275, 276], "It": [2, 5, 6, 9, 14, 17, 38, 44, 122, 139, 246, 247, 249, 253, 254, 255, 256, 257, 274, 276, 277, 282, 289, 291, 292], "code": [2, 5, 7, 9, 12, 14, 38, 139, 240, 249, 250, 253, 254, 255, 259, 269, 274, 275, 277, 284, 288, 293, 295], "do": [2, 5, 9, 11, 14, 17, 18, 126, 136, 139, 249, 253, 255, 257, 273, 274, 275, 276, 282, 289, 295], "doe": [2, 6, 9, 12, 14, 253, 259, 275, 276, 282], "primari": [2, 5, 9, 276, 300], "challeng": 2, "respect": [2, 8, 9, 14, 19, 139, 142, 253, 256, 289, 294, 299], "softwar": [2, 85, 283, 295], "appropri": [2, 5, 6, 14, 15, 26, 80, 86, 136, 139, 240, 243, 246, 247, 248, 250, 251, 253, 257, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 294, 295, 299], "final": [2, 5, 6, 7, 8, 136, 243, 244, 246, 247, 248, 253, 255, 272, 276, 289], "statement": [2, 12, 253, 274], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 75, 121, 139, 165, 173, 230, 240, 242, 243, 246, 247, 248, 250, 253, 257, 269, 276, 277, 282, 289, 291, 292, 295], "regard": 2, "last": [2, 254, 257, 288, 295], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 116, 118, 139, 150, 170, 243, 246, 247, 253, 255, 257, 275, 276, 277, 288, 295], "your": [2, 4, 5, 6, 11, 136, 240, 256, 257, 269, 273, 276, 277, 278, 279, 282, 283, 289, 295], "appear": [2, 136, 253, 276], "under": [2, 17, 38, 39, 136, 139, 242, 253, 254, 257, 275, 285, 301], "head": [2, 242, 279], "correspond": [2, 6, 7, 121, 136, 139, 141, 240, 253, 257, 269, 288], "discuss": [2, 6, 139, 244, 253, 256, 276, 288], "technic": [2, 7], "issu": [2, 6, 253, 254, 257, 291, 292], "focu": [2, 276], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 115, 120, 125, 130, 132, 133, 134, 135, 136, 137, 145, 148, 158, 160, 162, 166, 167, 168, 169, 174, 186, 203, 217, 224, 240, 243, 244, 246, 247, 248, 250, 253, 254, 256, 257, 262, 269, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 288, 291, 292, 294], "To": [2, 5, 6, 12, 17, 18, 121, 136, 139, 240, 253, 256, 257, 269, 270, 276, 278, 279, 280, 281, 282, 283, 285, 289, 295], "extent": [2, 13, 17, 276, 288], "possibl": [2, 8, 11, 71, 139, 242, 244, 253, 254, 255, 256, 276, 285], "other": [2, 5, 6, 7, 8, 9, 10, 13, 15, 17, 19, 38, 39, 41, 49, 57, 108, 132, 176, 244, 248, 249, 250, 251, 255, 256, 257, 264, 273, 274, 275, 277, 278, 288, 289, 301], "clean": [2, 4, 5, 6, 115, 120, 253, 255, 257], "plan": [2, 13, 139, 240, 246, 247, 253, 269, 274, 291, 292, 301], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 115, 132, 136, 139, 143, 144, 183, 242, 243, 246, 247, 248, 253, 256, 257, 276, 277, 278, 286, 289, 291, 292, 295, 296, 301], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 132, 133, 134, 135, 136, 137, 139, 240, 250, 253, 255, 256, 257, 269, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 289, 295, 300, 301], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 97, 101, 107, 121, 126, 136, 139, 150, 155, 160, 224, 240, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 269, 272, 273, 274, 275, 276, 277, 282, 286, 289, 294, 295], "intend": [2, 6, 8, 9, 254, 277, 292, 301], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 64, 121, 242, 244, 251, 253, 256, 257, 273, 276, 295], "pde": 2, "solver": [2, 255, 257, 275, 295], "well": [2, 6, 9, 12, 13, 136, 139, 235, 243, 244, 246, 247, 248, 253, 257, 274, 276, 277, 289, 295, 301], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 61, 85, 89, 94, 98, 99, 100, 101, 102, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 121, 123, 126, 127, 130, 131, 136, 141, 144, 145, 150, 153, 160, 182, 186, 189, 190, 196, 203, 206, 210, 217, 220, 236, 240, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 291, 292, 294, 295, 298, 299, 300, 301], "low": [2, 123], "variabl": [2, 5, 13, 19, 20, 25, 38, 41, 48, 49, 57, 68, 75, 81, 85, 97, 98, 102, 105, 121, 123, 125, 126, 131, 136, 139, 141, 142, 143, 144, 145, 146, 148, 150, 156, 160, 163, 169, 171, 175, 179, 183, 190, 192, 196, 198, 201, 204, 206, 208, 210, 212, 215, 218, 220, 224, 232, 238, 239, 242, 248, 253, 256, 257, 263, 264, 269, 273, 276, 278, 279, 280, 281, 282, 283, 286, 288, 294, 295, 296, 299], "declar": [2, 7], "interfac": [2, 10, 230, 231, 232, 238, 239, 256, 257, 275, 276, 285], "sequenc": [2, 5, 14, 244, 252, 253, 256, 274, 276, 295, 300, 301], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 61, 93, 94, 95, 97, 108, 121, 123, 132, 133, 134, 135, 136, 137, 139, 150, 155, 160, 201, 215, 224, 243, 253, 255, 256, 257, 270, 273, 274, 276, 277, 282, 283, 285, 289, 294, 295, 299], "want": [2, 5, 6, 11, 14, 17, 18, 51, 136, 139, 253, 255, 257, 273, 276, 277, 282, 283, 293, 295, 301], "math": 2, "syntax": [2, 139, 276], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 257, 274, 276, 295], "2": [2, 6, 13, 14, 15, 18, 39, 136, 139, 174, 242, 243, 251, 254, 257, 263, 270, 276, 277, 279, 282, 285, 288, 289, 291, 292, 295], "2ab": 2, "imag": [2, 7, 19, 122, 123, 249, 276, 294, 299], "keep": [2, 5, 6, 9, 14, 25, 57, 244, 249, 250, 253, 255, 257, 276, 294, 299], "mind": [2, 5, 276], "quit": [2, 251, 253, 255, 276], "small": [2, 9, 44, 136, 249, 253, 276, 278, 279, 284, 285, 293, 295], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 80, 93, 94, 97, 110, 111, 115, 127, 136, 139, 141, 150, 155, 160, 201, 215, 224, 232, 235, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301], "png": [2, 13, 19, 244, 253, 276], "okai": [2, 6, 253, 276], "size": [2, 13, 19, 70, 71, 80, 139, 152, 154, 156, 249, 276, 277, 288, 289, 291, 292, 293, 294, 299], "repo": [2, 5, 6, 136, 240, 269, 275, 276, 296], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 136, 139, 249, 250, 251, 253, 254, 255, 256, 257, 273, 274, 276, 277, 279, 285, 294, 295, 300, 301], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 253, 255, 257, 276], "sourc": [2, 6, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 253, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 295], "project": [2, 5, 6, 7, 67, 101, 107, 240, 256, 257, 269, 270, 276, 277, 278, 279, 282, 295, 296], "manag": [2, 273, 282], "item": [2, 276], "git": [2, 6, 16, 96, 240, 257, 269, 276, 277, 295], "branch": [2, 5, 136, 240, 250, 253, 257, 269, 275, 276, 295], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 253, 257, 282], "block": [2, 255], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 98, 102, 105, 136, 139, 249, 251, 253, 255, 256, 257, 273, 275, 276, 277, 282, 288, 289, 295, 301], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 139, 249, 250, 253, 255, 256, 276], "example_funct": 2, "foo": [2, 256], "return": [2, 7, 15, 31, 48, 56, 59, 62, 69, 70, 71, 76, 80, 86, 87, 89, 92, 93, 103, 112, 113, 115, 116, 118, 121, 126, 130, 131, 139, 142, 143, 144, 145, 149, 151, 153, 155, 156, 161, 183, 185, 199, 200, 202, 213, 214, 216, 230, 233, 234, 235, 236, 237, 255, 256, 276, 289], "how": [2, 5, 6, 12, 14, 75, 139, 252, 253, 255, 256, 257, 277, 282, 283], "show": [2, 7, 13, 253, 276, 282, 283, 288, 289, 294, 299], "met": 2, "regress": [2, 243, 244, 254, 274, 275, 276, 288, 289, 295, 300], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 63, 92, 93, 94, 95, 96, 115, 120, 136, 139, 230, 232, 233, 234, 238, 239, 253, 256, 275, 276, 277, 279, 282, 283, 285, 291, 292, 294, 295, 299, 301], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 63, 96, 110, 115, 120, 135, 136, 165, 173, 190, 193, 251, 252, 253, 254, 255, 256, 257, 273, 274, 276, 277, 282, 289, 293, 295, 301], "properli": [2, 132, 134, 135, 276, 277, 295], "addit": [2, 7, 9, 18, 38, 139, 248, 249, 250, 251, 253, 255, 256, 257, 276], "modif": [2, 7, 253, 270], "nightli": [2, 257, 295, 300], "might": [2, 6, 11, 14, 17, 19, 136, 139, 249, 253, 257, 276, 277, 282, 295], "made": [2, 5, 17, 38, 41, 49, 121, 253, 255, 256, 270, 272, 274, 276, 301], "continu": [2, 6, 253, 276], "page": [3, 7, 136, 278], "auto": 3, "summari": [3, 279], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 76, 114, 115, 136, 139, 242, 243, 244, 249, 251, 253, 254, 255, 256, 257, 274, 282, 286, 288, 294, 295, 296, 299, 301], "relev": [3, 7, 9, 139, 244, 246, 247, 276, 278, 279, 280, 281, 282, 283, 294, 295, 299], "seaic": [3, 10, 20, 40, 250, 253, 272, 274, 275, 295, 296, 299, 301], "long": [4, 25, 35, 38, 45, 93, 94, 150, 160, 201, 215, 224, 253, 276, 288, 295], "procedur": [4, 136, 257, 276, 283], "conda": [4, 5, 16, 96, 132, 134, 135, 136, 240, 250, 256, 269, 275, 276, 277, 278, 279, 280, 281, 283], "environ": [4, 5, 132, 134, 135, 240, 250, 256, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283], "spack": [4, 5, 132, 134, 135, 273, 275, 276, 278, 279, 280, 281, 282, 283], "compil": [4, 5, 6, 14, 132, 133, 134, 135, 136, 137, 273, 275, 276, 278, 279, 280, 281, 282, 283, 295], "system": [4, 5, 6, 25, 35, 38, 45, 93, 94, 95, 132, 134, 135, 136, 150, 160, 201, 215, 224, 253, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 295], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 67, 89, 116, 132, 134, 135, 136, 139, 148, 249, 250, 251, 253, 255, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 295], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 76, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 112, 114, 115, 116, 118, 120, 121, 122, 123, 132, 133, 134, 135, 136, 137, 162, 165, 168, 173, 180, 186, 203, 217, 224, 232, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 252, 253, 255, 256, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 291, 292, 293, 294, 299, 300], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 82, 96, 108, 109, 112, 114, 115, 120, 121, 132, 133, 134, 135, 136, 137, 139, 165, 173, 240, 243, 244, 246, 247, 248, 252, 253, 255, 256, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 289, 294, 299, 300, 301], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 60, 89, 96, 116, 120, 126, 136, 139, 148, 249, 250, 251, 252, 253, 255, 257, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 295], "Then": [4, 6, 7, 11, 14, 132, 133, 134, 135, 136, 137, 240, 243, 246, 247, 248, 250, 253, 255, 257, 269, 276, 282, 288, 295], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 67, 92, 93, 94, 103, 115, 120, 135, 136, 141, 148, 150, 159, 160, 162, 166, 168, 171, 175, 177, 182, 184, 186, 196, 201, 203, 206, 210, 215, 217, 220, 223, 224, 225, 240, 243, 244, 246, 247, 248, 251, 252, 254, 255, 256, 262, 263, 266, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 300, 301], "script": [4, 5, 6, 12, 19, 54, 63, 133, 136, 137, 256, 274, 275, 276, 279, 282], "doc": [4, 7, 276, 283], "cd": [4, 6, 240, 257, 269, 276, 279, 295], "html": [4, 286], "view": [4, 246, 247, 257, 291, 292], "open": [4, 6, 257, 276], "_build": 4, "index": [4, 15, 18, 87, 123, 139, 141, 142, 144, 145, 146, 183, 232, 233, 234, 235, 236, 237, 238, 239, 249, 276], "act": [5, 256, 285], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 136, 158, 159, 243, 246, 247, 248, 250, 253, 255, 276, 277, 282, 288, 289, 291, 292, 293, 295], "These": [5, 6, 8, 9, 14, 20, 38, 136, 139, 240, 242, 250, 253, 255, 256, 257, 269, 270, 275, 276, 277, 282, 288, 292, 295, 300, 301], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 63, 96, 136, 139, 243, 244, 246, 247, 248, 253, 254, 255, 273, 274, 276, 279, 282, 283, 286, 288, 289, 296], "describ": [5, 7, 14, 17, 19, 96, 116, 118, 131, 139, 243, 244, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 295], "instal": [5, 6, 136, 257, 276, 282, 283, 295], "abov": [5, 7, 14, 18, 136, 249, 251, 253, 254, 255, 256, 257, 276, 277, 291, 292, 293, 295, 300], "off": [5, 6, 257, 273], "http": [5, 7, 11, 14, 61, 253, 256, 273, 275, 276, 277, 283, 286, 295, 296], "github": [5, 6, 7, 256, 257, 275, 276, 277, 286, 295, 296], "com": [5, 6, 7, 14, 61, 256, 257, 275, 276, 277, 295, 296], "e3sm": [5, 7, 10, 11, 38, 125, 136, 240, 250, 253, 254, 256, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 296], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 57, 61, 68, 69, 75, 76, 81, 97, 104, 114, 115, 120, 125, 136, 139, 141, 148, 149, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 179, 182, 184, 187, 190, 192, 194, 196, 198, 201, 204, 206, 208, 210, 212, 215, 218, 220, 223, 224, 225, 226, 228, 232, 238, 239, 244, 248, 249, 253, 254, 255, 256, 262, 263, 265, 266, 267, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 289, 295, 300], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 132, 134, 135, 136, 243, 244, 247, 253, 257, 273, 276, 277, 282, 286, 287, 288, 289, 293, 294, 295, 296, 298, 300, 301], "mean": [5, 246, 247, 257, 276, 285, 288, 289, 291, 292, 300], "chang": [5, 6, 8, 17, 75, 108, 109, 139, 240, 250, 253, 254, 255, 256, 257, 269, 274, 276, 277, 279, 283, 285, 288, 289, 295, 300], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 67, 103, 110, 136, 139, 243, 246, 247, 248, 250, 253, 254, 255, 256, 257, 273, 274, 275, 276, 277, 282, 283, 295], "tool": [5, 6, 9, 12, 14, 17, 240, 250, 253, 257, 269, 275, 276, 277], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 59, 63, 76, 85, 90, 93, 94, 97, 103, 110, 121, 122, 123, 124, 125, 126, 131, 132, 136, 139, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 155, 160, 161, 162, 168, 175, 179, 182, 183, 185, 190, 201, 202, 208, 209, 215, 216, 224, 230, 232, 233, 234, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 263, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 301], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 64, 67, 73, 78, 92, 93, 94, 96, 97, 110, 111, 114, 115, 120, 136, 139, 150, 152, 154, 240, 242, 243, 244, 246, 247, 248, 250, 251, 253, 254, 257, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 300], "support": [5, 6, 8, 13, 17, 38, 139, 232, 238, 239, 242, 253, 256, 269, 274, 275, 276, 277, 279, 283, 285, 288, 293, 301], "machin": [5, 8, 9, 38, 40, 62, 63, 96, 114, 115, 120, 240, 253, 256, 269, 275, 276, 277, 278, 279, 280, 281, 283], "option": [5, 7, 9, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 61, 62, 63, 64, 68, 74, 75, 76, 79, 81, 85, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 111, 114, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 142, 144, 145, 148, 150, 153, 155, 160, 162, 168, 170, 180, 183, 186, 198, 201, 203, 212, 215, 217, 224, 226, 228, 230, 232, 233, 234, 238, 239, 240, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 265, 269, 270, 273, 275, 277, 285, 287, 295, 301], "help": [5, 6, 13, 136, 249, 250, 251, 253, 257, 275, 276, 282, 286, 296], "usag": [5, 15, 19, 255, 277, 279, 283], "h": [5, 14, 276], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 131, 136, 139, 141, 146, 199, 200, 213, 214, 224, 244, 253, 255, 256, 257, 273, 276, 277, 279, 281, 282, 287, 288, 291, 292, 295, 300, 301], "n": [5, 6, 69, 76, 77, 83, 253, 276, 279, 282, 283, 288, 289, 291, 292, 294, 295, 299], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 92, 93, 94, 97, 115, 136, 139, 150, 151, 152, 154, 160, 161, 175, 185, 198, 201, 202, 212, 215, 216, 224, 240, 243, 246, 247, 249, 253, 254, 255, 256, 263, 274, 276, 277, 282, 285, 287, 288, 289, 291, 292, 293, 294, 295, 299], "v": [5, 257, 276, 291, 292, 300], "By": [5, 14, 18, 39, 40, 139, 240, 250, 253, 255, 269, 276, 277, 288, 289, 293], "default": [5, 7, 9, 14, 15, 18, 19, 25, 39, 40, 49, 55, 63, 76, 81, 87, 88, 96, 97, 98, 102, 105, 111, 115, 117, 120, 123, 132, 134, 135, 136, 139, 143, 144, 160, 183, 240, 244, 246, 247, 248, 249, 250, 253, 255, 257, 269, 270, 275, 277, 278, 279, 280, 281, 282, 283, 285, 289, 293, 294, 295, 299, 301], "planar": [5, 9, 123, 139, 242, 250, 253, 276, 291, 292, 293, 294, 299, 300, 301], "baroclinic_channel": [5, 7, 9, 14, 18, 240, 245, 249, 250, 253, 256, 276, 288, 295, 300, 301], "10km": [5, 18, 243, 276, 288, 295, 300, 301], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 70, 132, 133, 134, 135, 136, 137, 139, 158, 160, 174, 201, 215, 223, 224, 225, 232, 238, 239, 243, 244, 246, 247, 248, 250, 251, 253, 255, 257, 270, 273, 276, 277, 279, 282, 283, 285, 288, 289, 291, 292, 293, 294, 295], "decomp": [5, 250, 276, 295, 300], "displai": [5, 8, 283], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 61, 64, 67, 96, 114, 115, 120, 121, 123, 136, 141, 240, 250, 253, 255, 256, 257, 263, 269, 274, 276, 277, 278, 279, 280, 281, 282, 283, 295, 301], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 61, 63, 96, 97, 110, 114, 115, 120, 121, 136, 150, 158, 159, 160, 163, 165, 166, 167, 169, 171, 173, 174, 175, 177, 190, 224, 240, 243, 250, 252, 253, 254, 255, 256, 257, 263, 265, 267, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 295, 301], "messag": [5, 8, 136, 253, 273, 283], "task_expr": [5, 64], "flag": [5, 6, 136, 253, 256, 273, 274, 276, 277, 286, 288, 295, 296], "suppli": [5, 6, 7, 15, 18, 131, 136, 253, 257, 276], "substr": [5, 136], "regular": [5, 19, 64, 69, 76, 139, 141, 179, 182, 276, 278, 281, 282, 283, 295], "express": [5, 64], "subset": 5, "search": [5, 64, 279], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 70, 80, 86, 89, 93, 94, 111, 116, 118, 121, 126, 139, 141, 142, 145, 146, 149, 150, 169, 235, 243, 244, 248, 253, 255, 273, 275, 276, 277, 288, 289, 293, 294, 295, 299, 300], "pass": [5, 8, 9, 12, 13, 14, 18, 80, 121, 122, 139, 249, 250, 253, 255, 256, 257, 274, 295], "similarli": [5, 8, 240, 253, 255, 257, 282, 295], "result": [5, 13, 18, 59, 71, 80, 136, 139, 158, 166, 171, 174, 177, 228, 243, 244, 253, 254, 256, 257, 262, 267, 274, 276, 277, 288, 289, 294, 299, 300], "descript": [5, 7, 276, 277, 286, 296], "short": [5, 159, 223, 225, 253, 254, 255, 256, 266, 276, 288], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 63, 92, 93, 94, 120, 136, 139, 140, 150, 158, 159, 223, 225, 243, 248, 249, 250, 253, 254, 255, 256, 270, 274, 276, 277, 278, 279, 280, 281, 282, 283, 295, 300], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 120, 122, 123, 136, 139, 141, 150, 193, 242, 253, 255, 257, 276, 285, 301], "built": [5, 14, 115, 120, 136, 240, 250, 257, 269, 275, 277, 282, 295], "standalon": [5, 14, 135, 136, 250, 257, 274, 275, 282, 296], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 31, 38, 40, 67, 85, 99, 106, 116, 118, 120, 130, 131, 132, 133, 134, 135, 136, 137, 140, 150, 153, 156, 190, 198, 212, 231, 240, 241, 243, 244, 246, 247, 248, 250, 253, 256, 257, 260, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 291, 293, 294, 295, 296, 299, 300, 301], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 115, 120, 136, 253, 255, 256, 257, 273, 276, 279, 283, 285, 289, 295], "num": 5, "f": [5, 9, 11, 18, 139, 250, 253, 255, 256, 257, 276, 277, 283, 288, 291, 295], "m": [5, 6, 14, 69, 76, 77, 83, 243, 248, 249, 257, 276, 278, 279, 280, 281, 283, 285, 288, 289, 293, 295], "mach": [5, 9, 38, 136, 275, 278, 279, 280, 281, 282, 283, 295], "w": [5, 6, 257, 274, 276, 295], "p": [5, 6, 257, 276, 277, 295], "suite_nam": [5, 8, 111, 113, 115, 120, 295], "copy_execut": [5, 115, 120, 295], "specifi": [5, 6, 14, 17, 18, 19, 40, 136, 139, 242, 253, 257, 272, 276, 277, 283, 288, 289, 294, 295, 299], "altern": [5, 13, 253, 270, 295], "task_numb": 5, "multipl": [5, 9, 14, 136, 241, 254, 255, 256, 257, 276, 282, 288, 295], "test": [5, 7, 8, 9, 19, 49, 50, 55, 63, 92, 93, 94, 113, 121, 136, 140, 141, 147, 148, 157, 159, 160, 166, 167, 169, 170, 171, 172, 174, 179, 180, 181, 182, 184, 187, 190, 191, 194, 195, 196, 197, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 260, 261, 262, 265, 266, 267, 268, 269, 272, 274, 275, 281, 282, 283, 285, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300], "separ": [5, 7, 9, 14, 17, 18, 141, 253, 254, 274, 276, 289, 295], "space": [5, 6, 7, 9, 13, 136, 246, 247, 253, 257, 276, 279, 282, 295], "requir": [5, 6, 8, 14, 25, 35, 38, 39, 45, 97, 139, 150, 160, 201, 215, 224, 240, 249, 250, 253, 254, 255, 256, 257, 269, 270, 273, 275, 276, 277, 282, 285, 286, 294, 295, 296, 299, 301], "few": [5, 13, 14, 25, 35, 38, 45, 93, 94, 136, 150, 243, 244, 246, 247, 248, 253, 256, 276, 277, 282], "basic": [5, 7, 277, 279, 282, 295], "piec": [5, 249, 250, 276], "abl": [5, 132, 133, 134, 135, 137, 139, 253, 254, 257, 276, 282, 295], "place": [5, 6, 14, 122, 136, 249, 253, 255, 270, 276, 282], "download": [5, 6, 8, 10, 38, 40, 47, 136, 165, 173, 255, 256, 257, 277, 295, 300], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 136, 139, 242, 244, 249, 251, 253, 255, 256, 257, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 295, 296, 300, 301], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 103, 116, 118, 119, 122, 123, 125, 131, 136, 190, 232, 238, 239, 253, 257, 275, 277, 278, 279, 280, 281, 282, 295, 300, 301], "r": [5, 189, 283, 289], "tell": [5, 6, 136, 257], "re": [5, 6, 9, 255, 256, 257, 274, 276, 277, 282, 283, 289], "leav": [5, 19, 244, 277, 289], "unknown": [5, 136, 256, 282], "component_path": [5, 9, 115, 120, 240, 250, 269, 277, 295], "absolut": [5, 9, 38, 40, 57, 115, 120, 240, 250, 253, 257, 269, 295], "landic": [5, 6, 12, 20, 40, 67, 120, 249, 250, 252, 253, 255, 257, 274, 275, 276, 277, 295, 301], "e3sm_submodul": [5, 240, 250, 257, 269, 270, 276], "mali": [5, 136, 250, 253, 257, 274, 276, 277, 295, 301], "dev": [5, 6, 7, 249, 250, 252, 253, 256, 257, 275, 276, 286, 295, 296], "albani": [5, 132, 134, 135, 136, 250, 277, 278, 279, 280, 283, 295], "depend": [5, 14, 17, 19, 38, 39, 47, 108, 109, 136, 139, 141, 165, 173, 182, 255, 257, 274, 275, 276, 277, 282, 283, 285, 289, 295, 301], "whether": [5, 8, 13, 14, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 61, 64, 110, 111, 115, 120, 121, 122, 123, 127, 136, 139, 141, 149, 150, 162, 168, 179, 182, 186, 203, 217, 224, 226, 228, 246, 247, 249, 253, 255, 257, 273, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 291, 292, 293, 294, 295, 299], "omega": [5, 31, 125, 150, 153, 198, 212, 240, 250, 256, 257, 274, 276, 286, 291, 292, 295], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 62, 63, 74, 76, 79, 92, 93, 94, 95, 96, 112, 114, 115, 120, 122, 125, 126, 127, 128, 130, 131, 148, 150, 153, 155, 162, 168, 169, 179, 180, 186, 198, 203, 212, 217, 230, 232, 233, 234, 238, 239, 240, 243, 244, 246, 247, 248, 249, 253, 254, 255, 256, 257, 269, 270, 273, 275, 285, 295, 301], "point": [5, 6, 9, 54, 61, 100, 136, 240, 242, 249, 250, 255, 256, 257, 269, 276, 277, 282, 295], "much": [5, 6, 14, 253, 276], "config_fil": [5, 9, 115, 120], "work_dir": [5, 11, 38, 49, 63, 96, 114, 115, 120, 121, 253, 255, 276], "recommend": [5, 7, 11, 19, 136, 253, 254, 256, 257, 276, 282], "itself": [5, 6, 7, 9, 38, 46, 53, 249, 250, 252, 253, 255, 257, 276, 295], "temp": 5, "scratch": [5, 6, 257, 276, 279, 283, 295], "avoid": [5, 253, 276], "confus": [5, 14, 256, 257, 276], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 84, 85, 94, 97, 110, 111, 121, 139, 141, 145, 146, 148, 150, 156, 165, 173, 175, 176, 182, 190, 196, 206, 210, 220, 231, 243, 244, 246, 247, 248, 255, 263, 264, 272, 274, 277, 283, 289, 295, 300], "compar": [5, 10, 18, 38, 41, 48, 114, 115, 120, 121, 139, 175, 176, 224, 244, 248, 253, 254, 255, 256, 257, 263, 264, 272, 274, 276, 287, 288, 295, 298, 300], "previou": [5, 176, 253, 257, 264, 276, 287, 295, 300], "same": [5, 7, 9, 14, 18, 38, 39, 40, 48, 121, 136, 139, 143, 144, 183, 243, 248, 249, 251, 253, 254, 255, 256, 257, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 293, 295, 300, 301], "baseline_dir": [5, 38, 114, 115, 120, 253], "mani": [5, 6, 8, 9, 139, 249, 251, 253, 255, 256, 257, 275, 276, 288, 294, 299], "valid": [5, 10, 38, 41, 48, 139, 148, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 248, 253, 256, 257, 275, 285, 288], "timer": [5, 18, 38, 253, 254, 256], "both": [5, 6, 7, 8, 13, 14, 30, 136, 139, 155, 162, 168, 243, 249, 250, 252, 253, 257, 275, 276, 277, 287, 289, 291, 292, 293], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 115, 120, 240, 250, 257, 269, 277, 283, 295], "give": [5, 14, 18, 136, 253, 256, 257, 276, 277, 295], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 18, 19, 25, 37, 108, 136, 139, 150, 232, 238, 239, 240, 243, 246, 247, 249, 250, 253, 255, 256, 257, 269, 274, 276, 277, 282, 283, 285, 288, 289, 293, 295, 300], "case": [5, 6, 7, 8, 9, 14, 19, 28, 29, 49, 50, 55, 63, 92, 93, 94, 116, 121, 136, 139, 140, 147, 159, 166, 167, 169, 170, 171, 172, 174, 180, 181, 182, 184, 187, 190, 191, 194, 196, 197, 198, 201, 204, 205, 206, 207, 208, 210, 211, 212, 215, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 243, 244, 246, 247, 248, 249, 250, 251, 253, 255, 257, 260, 262, 265, 266, 268, 274, 275, 276, 282, 283, 285, 288, 289, 291, 292, 293, 294, 295, 299, 300], "pre": [5, 136, 257], "copi": [5, 6, 8, 40, 55, 115, 120, 276, 279, 295], "just": [5, 14, 25, 35, 38, 45, 64, 136, 150, 253, 256, 257, 274, 276, 279, 283], "wish": [5, 7, 14, 50, 253, 257, 276, 295], "again": [5, 14, 135, 139, 240, 253, 255, 257, 273, 295], "later": [5, 8, 18, 25, 35, 38, 45, 57, 136, 150, 253, 276, 277], "anticip": [5, 276], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 109, 122, 136, 240, 242, 249, 253, 254, 255, 257, 269, 270, 273, 274, 276, 277, 283, 289, 293, 294, 295, 299, 301], "delet": [5, 115, 120, 256, 257, 273, 295], "fresh": [5, 6, 255, 276], "sinc": [5, 14, 87, 109, 131, 139, 243, 253, 255, 256, 257, 276, 288, 289, 291, 292, 294, 299], "rerun": [5, 257], "c": [5, 6, 115, 136, 253, 257, 278, 279, 280, 281, 282, 283, 287, 295, 300], "test_suit": [5, 113, 253], "build": [5, 6, 10, 13, 14, 72, 77, 132, 133, 134, 135, 137, 240, 250, 255, 256, 269, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283], "mpas_model": [5, 277], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 72, 75, 76, 77, 139, 165, 173, 193, 253, 255, 256, 276, 277, 283, 295], "baselin": [5, 6, 8, 10, 38, 41, 48, 114, 115, 120, 121, 139, 148, 224, 243, 246, 247, 248, 253, 254, 256, 272, 274, 276, 287, 295], "comparison": [5, 8, 18, 38, 48, 121, 253, 276, 277], "against": [5, 10, 41, 48, 121, 139, 148, 243, 246, 247, 248, 253, 272, 276, 287], "oppos": [5, 14, 30, 139, 141, 149, 162, 168, 179, 182, 186, 203, 217, 276], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 110], "wherea": [5, 12, 253, 274, 276, 287, 301], "typic": [5, 7, 9, 13, 14, 17, 18, 19, 38, 50, 111, 136, 139, 249, 250, 251, 253, 255, 257, 274, 276, 277, 282, 285, 293, 295, 301], "clone": [5, 6, 136, 240, 251, 257, 269, 276, 295], "pickl": [5, 8, 108, 109, 253, 276, 295], "latter": [5, 49, 136], "conveni": [5, 9, 17, 232, 238, 239, 249, 253, 276, 277, 289, 295, 301], "tab": [5, 295], "explicitli": [5, 7, 139, 243, 246, 247, 253, 257, 276, 277, 295], "select": [5, 8, 123, 253, 257, 276], "edit": [5, 7, 257, 276, 295], "steps_to_run": [5, 49, 111, 253, 255, 276, 277], "full_run": [5, 18, 272, 288, 298], "restart_run": [5, 18, 272, 288, 298], "Or": [5, 253, 277], "accomplish": [5, 253, 256], "thing": [5, 132, 133, 134, 135, 136, 137, 139, 249, 253, 256, 275, 300], "take": [5, 6, 7, 11, 13, 14, 57, 136, 139, 145, 249, 253, 254, 255, 257, 276, 289, 300], "preced": [5, 57, 139], "over": [5, 9, 14, 57, 122, 253, 256, 275, 276, 285, 288, 293, 295], "intern": [5, 11, 25, 253, 257, 273], "shouldn": [5, 136, 224, 276], "special": [5, 274, 294], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 150, 253, 282], "polaris_cach": [5, 8, 20, 253], "structur": [5, 13, 31, 153, 252, 255, 275, 276], "without": [5, 40, 253, 256, 257, 276, 277, 281, 282, 291, 292, 294, 295], "redund": [5, 232, 238, 239, 243, 249, 276], "stamp": 5, "revis": [5, 277], "older": 5, "ones": [5, 232, 238, 239, 256, 276], "version": [5, 6, 16, 33, 57, 96, 121, 136, 240, 243, 249, 250, 251, 253, 255, 256, 257, 269, 275, 276, 277, 282, 283, 286, 288, 289, 295, 296], "updat": [5, 7, 8, 25, 27, 29, 34, 35, 44, 45, 117, 135, 136, 152, 224, 240, 243, 244, 246, 247, 253, 269, 273, 275, 276, 295], "cached_fil": [5, 20, 253], "json": [5, 8, 20, 55, 253, 283], "anvil": [5, 6, 136, 253, 277, 282, 295], "chrysali": [5, 6, 136, 253, 276, 277, 282, 295], "onto": [5, 257], "lcrc": [5, 6, 8, 11, 55, 253, 256, 277, 278, 280, 282, 295], "server": [5, 8, 40, 55, 253, 256, 277, 283], "d": [5, 19, 123, 198, 212, 232, 238, 239, 242, 253, 276, 293], "whose": [5, 46, 53, 86, 253], "ocean_cached_fil": 5, "pr": [5, 6, 295, 300], "look": [5, 6, 7, 11, 18, 255, 256, 276, 277], "someth": [5, 7, 98, 102, 105, 136, 257, 276], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 97, 139, 141, 148, 243, 253, 256, 276], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 85, 150, 243, 246, 247, 253, 276, 277], "info": [5, 12, 14, 25, 32, 85, 136, 150, 253, 276], "initial_st": [5, 18, 19, 139, 141, 243, 253, 276], "date_str": [5, 55], "let": [5, 253, 257, 274, 276, 277, 283], "string": [5, 9, 15, 40, 101, 107, 136, 139, 155, 257], "choos": [5, 253, 256, 257, 276, 278, 279, 280, 281, 283, 301], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 276], "check": [5, 6, 18, 121, 253, 257, 276, 277, 279, 283, 295, 300], "print": [5, 12, 18, 64, 121, 127, 253, 256, 300], "stdout": [5, 12, 38, 49, 253, 255], "translat": [5, 31, 139, 153], "convert": [5, 9, 13, 14, 139, 155, 253, 276], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 115, 120, 130, 131, 150, 153, 154, 162, 165, 168, 173, 240, 243, 246, 247, 249, 250, 253, 255, 256, 269, 270, 272, 275, 276, 277, 293], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 125, 130, 131, 154, 162, 165, 168, 173, 240, 242, 243, 244, 246, 247, 248, 249, 250, 253, 255, 256, 269, 272, 277, 294, 299], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 136, 148, 150, 153, 154, 162, 168, 243, 244, 246, 247, 248, 249, 250, 253, 255, 275, 276, 279, 283], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 125, 136, 139, 149, 153, 240, 249, 251, 253, 254, 256, 257, 269, 273, 274, 275, 276, 277, 283, 285, 288, 289, 291, 292, 293, 294, 295, 299, 301], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 67, 125, 136, 139, 149, 153, 240, 249, 251, 253, 254, 256, 257, 269, 273, 274, 275, 276, 277, 285, 288, 289, 291, 292, 293, 294, 295, 299], "don": [5, 6, 7, 14, 136, 139, 141, 146, 253, 255, 256, 257, 276, 281, 295, 301], "format": [5, 7, 11, 13, 14, 125, 131, 155, 254, 255, 257, 276, 277, 279], "note": [5, 7, 17, 18, 276, 283], "keyword": [5, 7, 14, 18, 19, 244, 253, 289], "top": [5, 19, 232, 233, 234, 235, 236, 237, 238, 239, 242, 251, 276, 285], "ignor": [5, 101, 107], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 62, 70, 86, 92, 103, 110, 136, 139, 143, 144, 145, 150, 183, 249, 252, 253, 255, 256, 257, 274, 277, 285, 295], "pars": [5, 9, 14, 26, 27, 28, 29, 89, 116, 118], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 87, 121, 122, 123, 127, 139, 141, 148, 153, 169, 189, 243, 250, 253, 255, 256, 275, 276, 277, 285, 288, 289, 293], "doesn": [5, 6, 131, 136, 253, 255, 276, 277, 282, 295], "matter": [5, 276], "usabl": 5, "try": [6, 14, 61, 136, 256, 257, 273, 276, 277, 279, 283, 295], "stai": [6, 257], "sync": 6, "mpi": [6, 14, 17, 97, 132, 135, 136, 150, 152, 154, 243, 246, 247, 253, 257, 273, 275, 276, 278, 279, 280, 281, 283, 295], "librari": [6, 14, 132, 136, 257, 276, 278, 279, 280, 281, 282, 283, 295], "netcdf": [6, 136, 141, 146, 156, 248, 277, 278, 279, 280, 281, 282, 283], "fortran": [6, 136, 278, 279, 280, 281, 282, 283], "pnetcdf": [6, 136, 278, 279, 280, 281, 282, 283], "mkl": [6, 136], "linear": [6, 19, 122, 123, 244, 246, 276, 288, 289, 291], "algebra": 6, "lib": [6, 136], "esmf": [6, 257, 295], "scorpio": [6, 257, 282, 295], "forg": [6, 136, 275, 295], "python": [6, 7, 8, 9, 26, 44, 51, 139, 249, 251, 253, 255, 256, 257, 274, 275, 276, 277, 282, 283, 295], "aren": [6, 11, 38, 39, 136, 253, 256, 257, 276, 300], "brief": [6, 7, 276], "tour": 6, "login": [6, 136, 257, 279, 283], "node": [6, 14, 25, 37, 38, 42, 45, 62, 92, 93, 94, 136, 150, 253, 254, 256, 257, 276, 277, 278, 279, 280, 281, 282, 283, 295], "bootstrap": 6, "rest": [6, 156, 237, 285, 289], "u": [6, 253, 276, 282, 283, 291, 292], "unifi": [6, 136, 257, 283], "diagnost": [6, 277, 278, 279, 281, 282, 283, 295], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 139, 253, 255, 256, 257, 276], "cach": [6, 20, 25, 38, 40, 114, 115, 150, 275, 277, 282, 287, 295, 300], "own": [6, 7, 8, 9, 11, 12, 19, 38, 136, 139, 253, 255, 256, 257, 274, 276, 277, 289, 295, 301], "config_machin": 6, "xml": [6, 14, 116, 118, 119, 131, 269], "ey": 6, "master": [6, 240, 269, 296], "happen": [6, 9, 12, 17, 109, 253, 276, 289], "me": [6, 276], "dev_quick_start": 6, "fork": [6, 276], "haven": [6, 276], "mkdir": [6, 257], "involv": [6, 14, 253, 274, 276], "coupl": [6, 273, 275], "alpha": [6, 132, 133, 134, 135, 136, 137, 276], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 139, 249, 251, 253, 254, 255, 256, 257, 276, 277, 300, 301], "stand": 6, "omit": [6, 253, 295], "suffix": [6, 40, 115, 253], "onc": [6, 14, 41, 243, 257, 276, 277, 289, 295], "releas": [6, 136, 256, 275, 282, 286, 295], "spack_for_mache_1": 6, "12": [6, 13, 70, 272, 276, 279, 298], "worktre": [6, 275, 276], "my": [6, 136, 279], "fetch": [6, 257, 276], "out": [6, 8, 9, 13, 57, 91, 95, 123, 136, 148, 251, 253, 256, 257, 277, 285, 295], "checkout": [6, 257, 276], "mambaforg": [6, 257, 276, 282, 295], "manual": [6, 14, 49, 50, 253, 255, 301], "linux": [6, 136, 257, 282], "x86_64": [6, 136], "our": [6, 136, 256, 276, 295], "found": [6, 9, 14, 126, 136, 256, 257, 275, 276, 278, 279, 280, 281, 282, 283], "exist": [6, 7, 9, 31, 38, 41, 61, 116, 118, 120, 136, 153, 243, 253, 255, 256, 257, 273, 276, 282, 300], "miniconda3": [6, 257], "alwai": [6, 7, 9, 12, 57, 136, 139, 144, 183, 240, 250, 253, 255, 256, 257, 269, 274, 276, 277], "pleas": [6, 136, 250, 256, 257, 276, 295], "start": [6, 7, 8, 14, 15, 87, 117, 136, 242, 243, 249, 254, 255, 256, 275, 279, 282, 283, 286, 296, 298], "definit": [6, 14, 276], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 75, 101, 107, 114, 115, 120, 136, 139, 181, 195, 209, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 261, 269, 270, 272, 274, 275, 277, 282, 285, 288, 289, 293, 300, 301], "export": [6, 273], "conda_bas": 6, "home": [6, 18, 136, 257, 276, 277, 279, 282, 283], "readi": [6, 276, 283], "configure_polaris_env": [6, 136, 257, 273, 276], "py": [6, 12, 14, 18, 67, 136, 249, 250, 256, 257, 274, 276, 277], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 136, 257], "tmpdir": [6, 136], "group": [6, 7, 249, 275, 278, 280, 282, 283, 294, 295, 301], "spack_temp": 6, "spack_test": 6, "intel": [6, 136, 282], "gnu": [6, 136, 257, 281, 282, 295], "openmpi": [6, 132, 136, 257, 275, 278, 280, 281, 295], "impi": [6, 132, 136, 278, 281], "recreat": [6, 255, 257, 273], "request": [6, 7, 14, 15, 25, 32, 34, 136, 139, 148, 150, 233, 234, 253, 255, 256, 257, 273, 276, 277, 289], "twice": [6, 276], "deploy": [6, 257], "prebootstrap": 6, "load": [6, 19, 109, 133, 136, 137, 253, 257, 275, 276, 277, 278, 279, 280, 281, 282, 283], "activ": [6, 136, 282, 283, 295], "differ": [6, 14, 15, 17, 18, 57, 72, 77, 121, 136, 139, 157, 160, 169, 240, 243, 249, 250, 251, 253, 254, 255, 256, 269, 274, 276, 277, 279, 283, 288, 289, 291, 292, 294, 299], "On": [6, 7, 13, 136, 257, 282], "tmp": [6, 136], "safe": [6, 14, 253, 257, 288], "strictli": [6, 13, 256, 276], "necessari": [6, 7, 13, 136, 276], "good": [6, 12, 38, 253, 257, 276], "idea": [6, 12, 276], "Be": [6, 283], "awar": [6, 7, 136, 276, 282], "with_petsc": [6, 257], "wa": [6, 8, 48, 59, 121, 136, 253, 255, 256, 257, 273, 274, 276, 277, 285, 295], "limit": [6, 254, 257, 288], "amount": [6, 25, 35, 38, 45, 150, 253, 284, 293], "team": [6, 136, 275], "petsc_support": 6, "txt": [6, 8, 120, 254, 273], "with_albani": [6, 257], "albany_support": 6, "encount": [6, 254, 273], "error": [6, 8, 15, 38, 49, 136, 139, 142, 143, 146, 244, 246, 247, 253, 255, 257, 275, 276, 289, 291, 292], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 162, 168, 186, 203, 217, 253, 255, 256, 257, 276, 277, 295, 300, 301], "attempt": [6, 136, 275, 282], "sh": [6, 132, 133, 134, 135, 136, 137, 257, 273, 276, 278, 279, 280, 281, 283, 295], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 93, 94, 96, 104, 136, 253, 256, 257, 274, 275, 276, 279, 282, 283, 295], "pscratch": 6, "suggest": [6, 136, 273], "correctli": 6, "seem": [6, 14, 276, 279, 283], "switch": [6, 276, 277], "v0": 6, "19": 6, "submodul": [6, 240, 250, 257, 269, 276, 295], "serv": [6, 114, 115, 120, 139, 249, 276], "kind": [6, 276], "whichev": [6, 240, 269, 285], "load_dev_polaris_0": [6, 132, 133, 134, 135, 136, 137, 276], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 240, 256, 257, 269, 276, 295], "pio": [6, 25, 34, 37, 150, 243, 246, 247], "openmp": [6, 25, 35, 38, 45, 94, 132, 134, 135, 150, 160, 201, 215, 224, 253, 276, 278, 279, 280, 281, 283], "ifort": [6, 132, 134, 136, 276, 278, 280], "ac": [6, 276], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 276, 282, 295], "job_script": [6, 276, 295], "bash": [6, 257, 273, 276, 295], "termin": [6, 8, 136, 253, 257, 276], "isn": [6, 9, 15, 244, 253, 256, 276], "ll": [6, 19, 136, 244, 256, 276, 283, 289], "warn": [6, 291, 292], "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 132, 134, 135, 136, 257, 278, 280], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 249, 253, 276, 285], "util": [6, 256, 292], "matrix": 6, "sever": [6, 12, 136, 139, 249, 253, 255, 256, 257, 275, 276, 294, 295, 300], "automat": [6, 7, 9, 12, 14, 19, 136, 139, 253, 256, 257, 276, 277, 278, 280, 281, 282, 283, 295], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 295], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 135, 136, 139, 253, 256, 276], "integr": [6, 15, 139, 169, 243, 256, 276, 288, 289, 294, 299], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 279, 295], "245": 6, "246": 6, "non": [6, 14, 18, 242, 253, 276, 295], "care": [6, 11, 13, 139, 249, 253, 257, 276], "temporari": [6, 136], "begin": [6, 7, 18, 243, 253, 257, 270, 275, 276, 282, 288, 289, 293], "anymor": 6, "best": [6, 17, 136, 253, 257], "hard": [6, 253, 276, 288, 293], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 63, 122, 123, 148, 253, 255, 276, 298], "myst": [7, 276], "tip": [7, 257], "easi": [7, 9, 40, 256, 276], "pull": [7, 136, 256, 257, 276, 277], "guid": [7, 139, 243, 244, 246, 247, 248, 254, 256, 276, 279, 282, 286, 296], "baroclin": [7, 9, 14, 157, 158, 159, 160, 163, 166, 169, 171, 174, 175, 177, 224, 243, 250, 253, 276, 286, 290, 301], "channel": [7, 9, 14, 157, 158, 159, 160, 163, 166, 169, 171, 174, 175, 177, 224, 243, 250, 253, 273, 276, 286, 290, 301], "label": [7, 122, 282, 295], "prepend": 7, "categori": [7, 250, 251, 252, 275, 301], "uniqu": [7, 14, 136, 255, 276], "And": [7, 14, 257, 276], "becom": [7, 253, 255, 276], "who": [7, 257, 276, 277, 283], "citat": 7, "basi": [7, 276], "overview": [7, 275, 279, 283], "common": [7, 12, 14, 44, 49, 136, 243, 244, 246, 247, 248, 249, 253, 254, 255, 256, 273, 274, 276, 277, 282, 283, 294, 295, 299, 300, 301], "characterist": [7, 294, 299], "comment": [7, 254, 277], "appli": [7, 13, 14, 64, 242, 249, 276, 288, 293, 294, 299], "vertic": [7, 15, 19, 86, 144, 145, 183, 223, 242, 243, 244, 246, 247, 248, 253, 277, 284, 286], "grid": [7, 13, 17, 69, 76, 80, 83, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 139, 190, 230, 231, 232, 233, 234, 235, 238, 239, 243, 244, 246, 247, 248, 253, 270, 276, 277], "forc": [7, 248, 272, 276, 301], "specif": [7, 9, 14, 51, 136, 139, 240, 249, 250, 251, 253, 269, 270, 275, 276, 277, 279, 282, 288, 294, 295, 299, 300], "public": [7, 11, 253, 276, 277], "api": [7, 12, 275, 276], "underscor": [7, 276], "md": [7, 276], "eval": 7, "rst": [7, 14, 276], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 250, 256], "compute_cell_count": [7, 139, 243, 246, 247, 276], "dynamic_model_config": [7, 14, 243, 246, 247, 276], "ot": [7, 276], "numpydoc": [7, 276], "text": [7, 8, 288, 289, 293], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 139, 232, 234, 235, 236, 237, 238, 239, 240, 246, 247, 253, 276, 277, 279, 283, 291, 292], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 240, 277, 291, 292], "overli": [7, 276], "ic": [7, 139, 240, 255, 256, 257, 270, 272, 275, 276, 277, 279, 285, 298, 301], "shelf": [7, 139, 249, 256, 276, 277, 285], "draft": [7, 285], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 61, 62, 63, 64, 67, 68, 70, 71, 72, 75, 80, 81, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 126, 127, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 155, 156, 158, 159, 160, 162, 163, 166, 167, 168, 169, 171, 174, 175, 177, 179, 182, 183, 184, 186, 187, 189, 190, 192, 194, 196, 198, 199, 200, 201, 203, 204, 206, 208, 210, 212, 213, 214, 215, 217, 218, 220, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 246, 247, 249, 253, 255, 261, 262, 263, 265, 266, 267, 288, 289, 291, 292, 293], "xarrai": [7, 15, 17, 19, 86, 123, 144, 145, 183, 232, 233, 234, 235, 236, 237, 238, 239, 253, 276], "dataarrai": [7, 86, 144, 145, 183, 198, 199, 200, 212, 213, 214, 233, 234, 235, 236, 237], "sea": [7, 139, 198, 200, 212, 214, 234, 235, 236, 237, 240, 270, 272, 275, 276, 277, 285, 291, 292, 298, 301], "surfac": [7, 139, 198, 200, 212, 214, 234, 235, 236, 237, 240, 242, 248, 272, 276, 277, 285, 288, 291, 292, 293], "height": [7, 139, 198, 200, 212, 214, 234, 235, 236, 237, 240, 276, 277, 285, 291, 292], "mask": [7, 232, 235, 238, 239, 253, 276, 277, 285], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 26, 68, 70, 71, 75, 80, 87, 102, 121, 123, 139, 141, 142, 143, 144, 145, 148, 149, 155, 158, 159, 160, 163, 166, 169, 171, 174, 179, 182, 183, 184, 189, 196, 198, 199, 200, 201, 204, 206, 208, 210, 212, 213, 214, 215, 218, 220, 224, 253, 255, 276], "densiti": [7, 13, 139, 276], "seawat": 7, "displac": 7, "land": [7, 139, 240, 255, 275, 276, 277, 285], "landicedraft": 7, "equal": [7, 248, 253, 256, 293], "entri": [7, 54, 87, 90, 115], "line": [7, 10, 36, 38, 93, 94, 104, 136, 253, 254, 256, 257, 275, 295], "type": [7, 14, 17, 18, 19, 26, 99, 106, 131, 136, 139, 142, 189, 223, 225, 244, 249, 253, 255, 256, 257, 269, 273, 274, 276, 277, 288, 289, 291, 292, 293, 294, 300], "side": 7, "colon": 7, "doubl": [7, 14, 139, 253, 254, 276], "back": [7, 276, 279, 295], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 93, 94, 253], "next": [7, 136, 243, 247, 276, 285, 295], "indent": [7, 253], "obviou": [7, 14, 276], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 63, 64, 66, 68, 75, 81, 85, 87, 96, 97, 98, 101, 102, 105, 107, 111, 115, 116, 120, 121, 122, 123, 126, 130, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 155, 160, 161, 183, 185, 201, 202, 212, 215, 216, 224, 253, 255, 265, 276, 285, 288, 289, 291, 292, 293, 294, 298], "els": [7, 8, 136, 253, 255, 276], "further": [7, 249, 255, 283, 294, 299], "rais": [7, 9, 18, 38, 41, 59, 61, 139, 253, 256, 276], "list_cas": 8, "list_machin": [8, 256], "list_suit": 8, "anywher": [8, 12, 136, 257], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 89, 108, 109, 112, 116, 125, 126, 130, 131, 148, 198, 212, 250, 255, 256, 276], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 60, 88, 89, 125, 139, 242, 253, 255, 276], "properti": [8, 242, 253, 282, 289], "setup_suit": 8, "write": [8, 12, 13, 16, 19, 108, 125, 231, 253, 255, 257, 272, 276], "proven": [8, 10, 57, 275, 277], "save": [8, 19, 59, 83, 136, 243, 244, 249, 253, 255, 276, 282, 287, 288], "target": [8, 11, 17, 18, 25, 40, 61, 63, 87, 97, 136, 139, 150, 243, 246, 247, 253, 255, 276, 289], "minimum": [8, 63, 123, 139, 143, 150, 243, 246, 247, 253, 276, 277, 285, 288, 289, 291, 292, 293, 294, 299], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 86, 87, 131, 136, 139, 154, 243, 244, 246, 247, 253, 276, 285, 288, 289, 291, 292, 294, 295, 299], "maximum": [8, 18, 121, 123, 189, 276, 277, 285], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 93, 94, 97, 139, 150, 160, 201, 215, 224, 253, 255, 276], "cpus_per_task": [8, 14, 38, 42, 45, 93, 94, 253], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 276, 285, 288, 289, 291, 292, 293, 294], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 93, 94, 97, 139, 150, 160, 201, 215, 224, 253, 276], "min_cpus_per_task": [8, 14, 38, 45, 93, 94, 253], "fewest": 8, "least": [8, 13, 250, 257, 288], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 136, 139, 150, 160, 201, 215, 224, 253, 275, 276, 277, 289, 291, 292], "run_task": [8, 253, 255], "run_single_step": 8, "oper": [8, 47, 136, 165, 173, 253, 255, 300], "log": [8, 10, 19, 38, 49, 94, 121, 122, 123, 253, 255, 257, 275, 295], "figur": [8, 19, 248, 249, 251, 253, 277], "cpu": [8, 136, 253, 276, 295], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 67, 68, 72, 75, 76, 77, 81, 82, 97, 103, 125, 139, 140, 141, 143, 144, 148, 150, 153, 158, 159, 160, 162, 163, 166, 167, 168, 169, 171, 174, 175, 177, 179, 182, 183, 184, 186, 187, 190, 192, 193, 194, 196, 198, 201, 203, 204, 206, 208, 209, 210, 212, 215, 217, 218, 220, 223, 224, 225, 226, 228, 244, 246, 247, 250, 253, 255, 256, 260, 262, 263, 265, 266, 267, 276, 289, 294, 299], "retriev": [8, 273], "store": [8, 51, 136, 139, 246, 247, 253, 276, 295], "case_output": [8, 12], "individu": [8, 9, 19, 250, 255, 256, 276, 282, 283, 288, 295, 301], "overal": 8, "whole": [8, 49, 156, 249, 255, 256, 276, 295], "window": 8, "update_cach": 8, "_cached_fil": [8, 253], "origin": [8, 55, 257, 276, 295], "enabl": [8, 19, 248, 253, 273, 277, 283, 291, 292], "consum": [8, 253, 255, 276, 300], "faster": [8, 257], "parser": [9, 46, 53, 57, 169, 179], "mpas_tool": [9, 12, 13, 80, 243, 246, 247, 248, 253, 255, 276], "mpasconfigpars": [9, 253, 255], "polarisconfigpars": [9, 21, 38, 46, 49, 53, 59, 62, 63, 92, 95, 96, 112, 122, 139, 169, 179, 198, 212, 230, 232, 233, 234, 238, 239, 276], "certain": [9, 18, 57, 136, 253, 257, 277, 294, 299], "filepath": [9, 46, 53, 57, 139], "overridden": [9, 31, 58, 139, 153, 276], "algorithm": [9, 14, 139, 224, 243, 246, 247, 253, 276], "featur": [9, 14, 256, 257, 274, 276, 277, 288, 293], "accommod": [9, 25, 35, 38, 45, 93, 94, 150], "add_from_packag": [9, 139, 253, 255, 256, 276], "content": [9, 14, 115, 116, 118, 120, 131, 139, 249, 251, 253, 256, 272, 276, 295, 298], "inertial_gravity_wav": [9, 240, 245, 250, 255, 291, 300], "inertialgravitywav": [9, 246, 255], "import": [9, 11, 12, 13, 15, 17, 18, 19, 139, 249, 250, 253, 255, 256, 257, 274, 276], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 67, 68, 75, 81, 97, 125, 139, 140, 141, 148, 150, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 179, 182, 184, 187, 190, 192, 194, 196, 198, 201, 204, 206, 208, 210, 212, 215, 218, 220, 223, 224, 225, 226, 228, 249, 250, 253, 255, 256, 260, 262, 263, 265, 266, 267, 274, 276], "super": [9, 14, 17, 18, 139, 250, 253, 255, 256, 276], "cfg": [9, 51, 139, 250, 255, 256, 276, 277, 295], "except": [9, 38, 41, 59, 253, 256, 276], "behavior": [9, 14, 111, 139, 253, 254, 257, 276], "noth": [9, 136, 273, 289], "particular": [9, 136, 249, 257, 275, 279, 282, 295], "fine": [9, 255, 276, 293], "_get_basic_config": 9, "larg": [9, 253, 255, 276, 278], "those": [9, 14, 49, 121, 136, 139, 243, 255, 256, 257, 275, 276, 289, 294, 299, 300], "configpars": [9, 93, 94], "getinteg": 9, "getfloat": [9, 12, 14, 17, 139, 253, 276], "getboolean": [9, 253, 276], "implement": [9, 250, 253, 256, 288, 289, 291, 292], "getlist": [9, 255, 276], "comma": [9, 289], "integ": [9, 13], "boolean": [9, 123, 235], "etc": [9, 14, 117, 120, 250, 253, 288], "getexpress": 9, "tupl": 9, "rang": [9, 123, 276, 289], "numpi": [9, 13, 15, 69, 76, 77, 83, 87, 122, 139, 156, 230, 231, 253, 276], "linspac": [9, 19, 244, 289], "arang": 9, "arrai": [9, 15, 69, 76, 77, 83, 122, 139, 230, 231, 233, 234, 235, 236, 276], "sens": [9, 275, 276], "set_shared_config": [9, 255], "intuit": 9, "resolution_to_subdir": [9, 250], "rpe": [9, 177, 250, 256, 276, 295], "resdir": [9, 250], "config_filenam": [9, 38, 49, 112, 253, 255], "indir": [9, 25, 38, 49, 97, 150, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 224, 226, 228, 250, 253, 263, 265, 267], "add_task": [9, 249, 250], "most": [9, 12, 44, 136, 240, 249, 250, 253, 256, 257, 269, 276, 277, 282, 283, 285, 286, 296, 301], "construct": [9, 14, 140, 230, 232, 233, 234, 238, 239, 242, 248, 250, 255, 260, 276, 288], "bring": [9, 139, 276], "add_step": [9, 255, 276], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 160, 171, 243, 253, 276], "baroclinic_channel_rp": 9, "viscos": [9, 14, 160, 169, 171, 243, 253, 256, 276, 288], "dtype": [9, 255, 276], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 94, 150, 160, 201, 215, 224, 253, 255, 276], "add_yaml_fil": [9, 14, 25, 139, 253, 255, 276], "One": [9, 13, 276, 295, 300], "advantag": [9, 14, 136, 255, 256, 276, 282], "track": [9, 25, 253, 255, 257], "associ": [9, 13, 14, 15, 19, 139, 232, 238, 239, 243, 253, 255, 257, 274], "while": [10, 17, 19, 242, 243, 253, 273, 276], "meant": [10, 256, 277], "simplifi": 10, "verifi": [10, 254, 277], "io": [10, 253, 255, 256, 275, 276, 277, 286, 296], "lot": [11, 139, 253, 256, 276], "o": [11, 12, 116, 118, 131, 136, 256, 257, 276, 277, 295], "handl": [11, 12, 257, 276, 282], "lower": [11, 255, 276, 288], "directli": [11, 13, 14, 17, 38, 139, 251, 253, 256, 274, 275, 276, 279], "readm": [11, 255], "importlib": 11, "resourc": [11, 14, 35, 42, 45, 60, 92, 93, 94, 151, 161, 185, 202, 216, 224, 243, 246, 247, 253, 255, 276], "global_ocean": [11, 14, 253, 255, 256, 257, 277, 295], "files_for_e3sm": [11, 253, 255, 277], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 61, 62, 63, 64, 68, 75, 81, 85, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 155, 156, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 182, 183, 184, 187, 190, 192, 196, 201, 204, 206, 210, 215, 218, 220, 224, 226, 228, 231, 253, 255, 263, 265, 267, 276], "did": [11, 274, 276], "add_input_fil": [11, 17, 18, 39, 253, 255, 276], "collect": [11, 100, 140, 250, 252, 260, 274, 276], "whenev": [11, 253, 276], "flexibl": [11, 139, 253, 255, 257, 276], "No": [11, 275, 291, 292], "step_dir": 11, "database_root": [11, 136, 253, 277, 278, 279, 280, 281, 282, 283, 295], "download_path": 11, "join": [11, 276], "bathymetry_databas": [11, 253, 277], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 235, 249, 253, 276, 285, 288, 289, 291, 292, 293, 294, 301], "url": [11, 40, 59, 253, 273, 277], "web": [11, 253, 277], "anl": [11, 253, 277], "gov": [11, 253, 273, 277, 279, 283], "mpas_standalonedata": [11, 136, 277, 282], "dest_path": [11, 59], "remot": [11, 40, 257, 275], "bathymetri": [11, 253, 277], "strategi": 12, "stderr": [12, 38, 49, 253, 255], "loggingcontext": 12, "check_cal": [12, 253], "won": [12, 256, 276, 277], "logger": [12, 18, 38, 49, 67, 94, 121, 253, 255, 276], "full": [12, 38, 93, 111, 233, 234, 243, 253, 255, 257, 272, 275, 276, 282, 285, 287, 288, 289, 291, 292, 293, 294, 295], "although": [12, 139], "captur": 12, "explicit": [12, 256], "go": [12, 46, 53, 226, 228, 249, 253, 255, 256, 257, 276, 283], "subprocess": [12, 38, 93, 94, 110, 253, 256, 273], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 139, 146, 158, 166, 174, 243, 244, 246, 247, 248, 253, 256, 257, 262, 272, 276, 291, 292, 295, 298], "otherwis": [12, 136, 253, 255, 276, 278, 279, 280, 281, 282, 283, 288], "intent": 12, "desir": [12, 13, 14, 18, 19, 121, 139, 253, 254, 255, 276, 277, 295], "trick": [12, 253], "direct": [12, 13, 14, 80, 198, 212, 243, 246, 247, 276, 283, 288, 291, 292], "snippet": [12, 276], "dome": [12, 67, 249, 253, 255, 295, 301], "setup_mesh": [12, 253], "setupmesh": [12, 253, 255], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 253], "landice_grid": [12, 253, 276], "l": [12, 121, 276, 283], "quasiuniformsphericalmeshstep": [13, 139, 255], "icosahedralmeshstep": [13, 139, 255], "jigsaw": [13, 68, 72, 74, 75, 77, 79, 81, 139, 141, 179, 182, 253], "complex": [13, 76, 255, 256, 276], "build_cell_width_lat_lon": [13, 75], "opt": [13, 81], "make_jigsaw_mesh": [13, 75], "icosahedr": [13, 68, 70, 141, 149, 179, 182, 244, 255, 289], "significantli": [13, 285], "smooth": 13, "cell": [13, 14, 15, 19, 68, 69, 70, 71, 75, 76, 77, 80, 83, 86, 99, 106, 139, 150, 151, 161, 185, 198, 200, 202, 212, 214, 216, 232, 233, 234, 235, 238, 239, 243, 246, 247, 249, 270, 285, 288, 289, 291, 292, 293, 294, 298], "quasi": [13, 75, 244, 255, 277, 289, 294, 299], "hand": [13, 102, 256], "restrict": [13, 276, 294], "subdivis": [13, 68, 69, 70, 71, 72], "icosahedron": [13, 69, 70, 71, 72], "tabl": [13, 257, 282, 295], "approxim": [13, 68, 70, 71, 75, 139, 151, 161, 185, 202, 216, 243, 246, 247, 257, 276], "width": [13, 68, 69, 70, 75, 76, 77, 83, 276, 288], "km": [13, 14, 68, 69, 70, 71, 75, 76, 77, 80, 83, 139, 148, 149, 158, 159, 160, 163, 166, 167, 169, 171, 174, 184, 201, 204, 208, 215, 218, 243, 244, 246, 247, 253, 276, 277, 288, 289, 291, 292, 293, 294, 299, 301], "5": [13, 14, 70, 136, 139, 169, 243, 244, 253, 254, 256, 273, 276, 277, 288, 289, 294, 295, 299], "240": [13, 70, 139, 244, 277, 289], "6": [13, 70, 253, 276, 286, 288, 293, 295, 296], "120": [13, 70, 139, 254, 289], "7": [13, 70, 136, 276, 283, 289, 295], "60": [13, 70, 139, 244, 285, 289], "8": [13, 70, 136, 243, 257, 276, 277, 288, 289, 291, 292, 295], "30": [13, 14, 70, 139, 249, 276, 283, 288, 293, 294, 299], "9": [13, 19, 70, 136, 244, 276, 289, 295], "15": [13, 14, 70, 243, 276, 288, 289, 293, 294, 295, 299], "11": [13, 70, 136, 276, 295], "3": [13, 70, 136, 139, 243, 253, 254, 257, 273, 276, 277, 282, 283, 285, 288, 289, 291, 292, 294, 295], "13": [13, 70, 276, 288], "94": [13, 70], "spherical_mesh": [13, 76], "cell_width": [13, 68, 69, 70, 71, 75, 76, 77, 83], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 83, 122, 123, 139, 141, 146, 171, 177, 190, 228, 243, 244, 246, 247, 267, 289, 291, 292, 298, 301], "plot_cell_width": 13, "cell_width_filenam": [13, 83], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 190, 244, 277, 289], "lon": [13, 17, 69, 75, 76, 77, 83, 98, 100, 102, 105, 122, 190, 244, 277, 289], "sphere": [13, 244, 289], "vtk_lat_lon": 13, "far": [13, 136, 232, 238, 239, 256, 276], "But": [13, 136, 249, 253, 256, 257, 276, 277, 282], "hexagon": [13, 80, 276, 291, 292], "planar_hex": [13, 80, 243, 246, 247, 248, 253, 276], "make_planar_hex_mesh": [13, 80, 243, 246, 247, 248, 253, 276], "x": [13, 19, 69, 76, 77, 80, 83, 101, 107, 123, 156, 198, 212, 253, 276, 288, 291, 292, 293], "y": [13, 14, 19, 80, 101, 107, 123, 198, 212, 243, 246, 247, 253, 276, 283, 288, 291, 292], "nx": [13, 80, 249, 253, 276, 293], "ny": [13, 80, 249, 253, 276, 293], "dc": [13, 249, 253, 276], "distanc": [13, 80, 189, 276, 288], "adjac": [13, 285], "center": [13, 19, 80, 189, 198, 212, 249, 276, 285, 288], "admittedli": 13, "oddli": 13, "period": [13, 242, 243, 246, 247, 253, 276, 288, 289, 291, 292], "nonperiodic_x": [13, 253, 276], "nonperiodic_i": [13, 253, 276], "consider": [13, 232, 238, 239, 242, 270], "compute_planar_hex_nx_ni": [13, 253, 276], "lx": [13, 80, 253, 276, 288, 291, 292, 293], "ly": [13, 80, 253, 276, 288, 293], "explan": 13, "subtleti": 13, "account": [13, 80, 257, 276, 278, 279, 281, 282, 283, 295], "behav": 13, "stagger": [13, 80], "physic": [13, 80, 266, 272, 276], "np": [13, 15, 19, 189, 244, 253, 276, 289], "sqrt": [13, 15, 291], "domain": [13, 25, 32, 80, 123, 139, 150, 156, 242, 249, 270, 276, 288, 289, 291, 292, 293, 294, 299, 301], "extra": [13, 257], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 253, 276], "max": [13, 139, 253, 276, 288, 289], "int": [13, 14, 25, 26, 35, 38, 45, 62, 63, 64, 68, 69, 70, 71, 72, 80, 87, 93, 94, 97, 123, 141, 142, 144, 145, 146, 150, 151, 160, 161, 183, 185, 201, 202, 215, 216, 224, 253, 276, 293], "ds_mesh": [13, 15, 19, 86, 123, 253, 276], "creation": [13, 253, 277], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 93, 94, 150, 249, 253, 256, 276], "distant": 13, "descend": [14, 17, 139, 244, 249, 250, 253, 255, 256, 276], "modelstep": [14, 139, 253, 255, 276], "update_pio": [14, 25, 150], "make_graph": [14, 25, 150], "At": [14, 38, 49, 251, 252, 255, 276], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 94, 150, 160, 201, 215, 224, 250, 253, 254, 274, 276, 277, 279, 283, 295, 300], "prefix": [14, 40, 136, 139, 144, 145, 183, 255, 257, 277], "end": [14, 148, 253, 255, 256, 257, 272, 274, 276, 279, 288, 289, 291, 292, 293, 298], "yml": 14, "reason": [14, 17, 44, 136, 253, 256, 276, 300], "add_namelist_fil": [14, 25, 139, 253, 255], "add_model_config_opt": [14, 25, 139, 253, 255, 276], "add_streams_fil": [14, 25, 139, 253, 255], "themselv": [14, 256, 275], "question": [14, 253, 277], "never": [14, 136, 274], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 139, 276], "config_run_dur": [14, 139, 255, 276], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 158, 274, 276], "config_block_decomp_file_prefix": [14, 276], "time_integr": [14, 139, 276, 289], "config_time_integr": [14, 139], "rk4": [14, 139, 256, 289], "filename_templ": [14, 139, 276], "restart": [14, 18, 49, 139, 244, 246, 247, 248, 250, 254, 256, 262, 263, 272, 274, 276, 295, 300], "output_interv": [14, 139, 276, 289], "0030_00": 14, "clobber_mod": [14, 139, 276], "truncat": [14, 139, 276], "reference_tim": [14, 139], "0001": [14, 139, 276], "01_00": [14, 139, 270, 276], "tracer": [14, 19, 179, 225, 226, 228, 243, 244, 246, 247, 248, 276, 289, 291, 292, 293], "xtime": [14, 15, 87, 139, 276], "normalveloc": [14, 18, 19, 139, 176, 213, 242, 243, 246, 247, 248, 253, 276, 293], "layerthick": [14, 18, 139, 176, 232, 236, 237, 238, 239, 243, 246, 247, 248, 253, 276], "refzmid": [14, 232, 238, 239, 253, 276], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 276], "clariti": [14, 253], "global_converg": [14, 244, 255, 276, 287], "substitut": 14, "config_write_output_on_startup": [14, 276], "0000_00": [14, 276], "config_use_mom_del2": [14, 276], "config_implicit_bottom_drag_coeff": [14, 276], "0e": [14, 292, 293], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 276], "config_cvmix_background_viscos": [14, 276], "worri": 14, "sometim": [14, 232, 238, 239, 249, 251, 253, 255, 274, 276, 300], "togeth": [14, 18, 136, 249, 274, 276, 300], "overkil": 14, "reli": [14, 253, 255, 276], "along": [14, 19, 136, 243, 253, 275, 276], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 89, 90, 92, 96, 97, 113, 115, 116, 122, 125, 126, 127, 139, 141, 148, 153, 182, 253, 255, 276], "config_mom_del2": [14, 243, 253, 276], "precis": [14, 139, 253, 276], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 61, 64, 110, 111, 115, 120, 121, 122, 127, 139, 141, 149, 150, 162, 168, 179, 182, 186, 203, 217, 224, 226, 228, 276], "possibli": [14, 38, 49, 250, 253, 255, 257, 276], "at_setup": [14, 30, 162, 168, 186, 203, 217, 276], "being": [14, 30, 38, 49, 110, 115, 121, 136, 139, 162, 168, 186, 203, 217, 253, 255, 256, 257, 276, 285], "dt": [14, 139, 160, 224, 253, 276, 288, 289, 291, 292, 294, 299], "proport": [14, 139, 276, 285, 288, 289, 291, 292, 294, 299], "dt_per_km": [14, 139, 244, 276, 288, 291, 292, 294, 299], "stackoverflow": [14, 61, 276], "1384565": [14, 276], "7728169": [14, 61, 276], "config_dt": [14, 139, 276], "strftime": [14, 276], "gmtime": [14, 276], "run_time_step": [14, 160, 253, 276], "durat": [14, 139, 243, 246, 247, 248, 254, 276], "run_second": [14, 276], "btr_dt": [14, 139, 160, 224, 253, 276, 288], "btr_dt_per_km": [14, 139, 276, 288], "config_btr_dt": [14, 139, 276], "bit": [14, 136, 256, 274, 276, 288, 295], "complic": [14, 256, 257, 276], "slightli": [14, 257], "sophist": 14, "immutable_stream": [14, 276], "var_struct": [14, 269], "var": [14, 117, 269, 276], "var_arrai": [14, 269], "tag": [14, 275], "taken": [14, 25, 150, 244, 253, 276, 283, 295], "past": 14, "experi": [14, 136, 256, 285], "difficult": [14, 136, 282], "synchron": [14, 275], "out_nam": 14, "equival": [14, 257, 276, 278], "template_replac": [14, 28, 29, 139], "treat": [14, 254, 256], "jinja2": [14, 28, 29, 116, 148], "render": [14, 28, 29, 116], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 253, 256, 257, 277, 295], "qu240dynamicadjust": 14, "adjust": [14, 136, 139, 240, 277], "interv": [14, 15, 155, 289], "spin": 14, "reus": [14, 253, 256, 257, 276, 277, 295], "qualit": 14, "forgotten": 14, "broken": [14, 253, 256], "immedi": [14, 67, 257, 276], "miss": [14, 253, 276, 277], "detect": [14, 19, 277, 278, 280, 281, 282, 295], "gpmeti": [14, 277], "divid": [14, 285], "partition_graph": [14, 25, 150], "circumst": [14, 18, 38, 39, 253, 276], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 273, 276, 294, 299], "v1": [14, 285], "better": [14, 17, 136, 295], "v2": [14, 277, 285], "littl": [14, 256, 257, 275, 276], "feel": [14, 136, 253, 276], "runtime_setup": [14, 17, 35, 45, 243, 246, 247, 255], "yourself": [14, 276, 282], "culler": 14, "cull": [14, 243, 246, 247, 253, 276], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 83, 85, 86, 123, 139, 142, 143, 144, 145, 183, 190, 232, 238, 239, 242, 243, 246, 247, 248, 276, 288, 289, 291, 292], "weight": [14, 15, 17, 85, 232, 238, 239, 276, 285], "weight_field": [14, 85], "helper": [15, 249, 250], "handi": 15, "area_for_field": 15, "right": [15, 136, 139, 255, 257, 276, 277, 285, 288, 289, 295], "edg": [15, 19, 86, 99, 102, 106, 123, 198, 199, 212, 213, 242, 276], "dimens": [15, 86, 141, 146, 183, 248, 288], "statist": [15, 277], "calcul": [15, 246, 253, 255], "xr": [15, 19, 198, 199, 200, 212, 213, 214, 253, 276], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 145], "mesh_filenam": [15, 25, 85, 150, 156], "open_dataset": [15, 19, 253, 276], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 87, 139, 249], "get_output_field": [15, 139], "field_nam": [15, 123, 143, 144, 145, 183], "output_filenam": [15, 139, 148, 156], "ds_out": 15, "time_index": [15, 87], "isel": [15, 19], "frequent": [17, 240, 269], "observ": [17, 275], "dataset": [17, 86, 87, 123, 198, 212, 232, 238, 239, 253, 276], "region": [17, 19, 275, 277], "pyremap": [17, 103], "interpol": [17, 97, 244, 277], "hood": 17, "esmf_regridweightgen": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 285], "bilinear": [17, 97, 244, 289, 294, 299], "filenam": [17, 18, 38, 40, 41, 49, 91, 98, 99, 100, 101, 105, 106, 107, 112, 121, 126, 128, 253, 255, 257, 276], "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 277], "destin": [17, 97, 98, 99, 100, 101, 102, 103], "src_from_lon_lat": 17, "lon_var": [17, 98, 100, 105], "lat_var": [17, 98, 100, 105], "dst_from_mpa": 17, "mesh_nam": [17, 98, 99, 100, 101, 102, 105, 106, 107, 142, 144, 145, 149, 183, 190, 192, 255], "qu60": 17, "subclass": [17, 72, 75, 76, 77, 82, 139, 276], "src_": 17, "dst_": 17, "pick": [17, 108, 109], "vizmap": [17, 179, 190, 244, 255], "128": [17, 254, 279, 280, 283], "cosine_bell_viz": [17, 19, 244, 289, 294, 299], "dlon": [17, 102, 244, 289, 294, 299], "dlat": [17, 102, 244, 289, 294, 299], "remap_method": [17, 244, 289, 294, 299], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 102], "With": [17, 257], "approach": [17, 253, 256, 257, 273, 276, 285], "perhap": [17, 19, 41, 249, 251], "cover": [17, 270, 276], "nearli": [17, 253, 255, 274, 275, 276], "workflow": [17, 253, 257], "critic": [18, 276], "easiest": [18, 136, 257], "validate_var": [18, 38, 41, 139, 148, 224, 253], "meth": 18, "add_output_fil": [18, 39, 253, 255, 276], "temperatur": [18, 176, 242, 243, 247, 248, 253, 272, 276, 288, 289, 293, 294, 299], "salin": [18, 176, 242, 243, 248, 253, 276, 288, 289, 293, 294, 299], "done": [18, 35, 45, 253, 255, 257, 276, 295], "compare_vari": [18, 276], "filename1": [18, 121, 276], "filename2": [18, 121, 276], "compact": [18, 276], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 121], "valueerror": [18, 256], "quiet": [18, 110, 111, 121, 127], "report": 18, "threshold": [18, 139, 289, 291, 292], "l1": [18, 121], "00000000000000e": 18, "l2": [18, 121, 139, 142, 143, 244, 289], "l_infin": 18, "linf": [18, 121], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 243, 288], "2thread": [18, 288], "test_20210616": 18, "further_valid": 18, "zero": [18, 233, 234, 235, 236, 237, 242, 243, 248, 276, 289, 293], "l1_norm": [18, 121], "l2_norm": [18, 121], "linf_norm": [18, 121], "nonzero": [18, 121], "solut": [18, 135, 142, 144, 145, 183, 198, 199, 200, 208, 209, 210, 212, 213, 214, 215, 218, 220, 244, 246, 247, 254, 273, 276, 286, 290, 291], "aspect": [19, 276], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 136, 150, 240, 257, 276, 277, 288], "plot_horiz_field": [19, 253, 276], "patch": [19, 123, 276], "polygon": 19, "character": 19, "accordingli": [19, 95], "final_normalveloc": [19, 276], "t_index": [19, 123, 276], "vmin": [19, 123, 244, 276, 289], "max_veloc": [19, 276], "vmax": [19, 123, 244, 276, 289], "cmap": [19, 123, 253, 276], "cmo": [19, 253, 276], "balanc": [19, 253, 276], "show_patch_edg": [19, 123, 253, 276], "plot_global_field": 19, "plot_land": [19, 122], "disabl": [19, 242, 289, 301], "contin": [19, 122], "overlain": 19, "cmocean": [19, 253, 276], "noqa": [19, 67, 253, 276], "f401": [19, 253, 276], "tracer1": [19, 139], "nvertlevel": [19, 123, 141, 146, 232, 238, 239, 253, 276, 285], "out_filenam": [19, 119, 122, 231], "colormap_sect": [19, 122], "titl": [19, 122, 123, 139, 141, 146], "colormap": [19, 122, 123, 244, 276, 289], "cosin": [19, 139, 179, 181, 182, 184, 187, 189, 190, 192, 244, 255, 276, 286, 287, 290, 294, 299], "bell": [19, 139, 179, 181, 182, 184, 187, 189, 190, 192, 244, 255, 276, 286, 287, 290, 294, 299], "converg": [19, 179, 183, 194, 195, 208, 209, 244, 246, 247, 251, 254, 275, 276, 287, 289, 291, 294, 299], "colormap_nam": [19, 122, 244, 289], "viridi": [19, 244, 276, 289], "norm": [19, 121, 122, 139, 143, 146, 244, 289], "norm_typ": [19, 122, 244, 289], "norm_arg": [19, 122, 244, 289], "colorbar": [19, 122, 123, 244, 289], "tick": [19, 122, 244, 289], "mark": [19, 244, 257, 289], "colorbar_tick": [19, 122, 244, 289], "standard": [19, 256, 257, 266, 276, 279, 295], "symlog": [19, 122], "symmetr": 19, "central": [19, 289], "logarithm": [19, 123], "color": [19, 123], "normal": [19, 198, 199, 212, 213, 242, 253, 254, 257, 276, 282], "symlognorm": 19, "lognorm": 19, "hous": [20, 289], "kei": [20, 49, 115, 139, 141, 255], "max_memori": [25, 35, 38, 45, 150, 253], "graph_filenam": [25, 85, 150], "make_yaml": 25, "stride": [25, 37, 150], "partit": [25, 34, 44, 62, 85, 150, 243, 246, 247, 253, 277, 278, 279, 280, 281, 283, 295], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 97, 150, 160, 224, 253], "nor": [25, 38, 49, 97, 150, 160, 224, 253, 276], "append": [25, 38, 40, 49, 97, 150, 158, 159, 160, 163, 166, 167, 169, 171, 174, 175, 177, 224, 253, 263, 265, 267], "ideal": [25, 35, 38, 45, 93, 94, 97, 139, 150, 160, 201, 215, 224, 225, 226, 228, 249, 253, 256, 275, 276, 277, 301], "fewer": [25, 35, 38, 45, 93, 94, 150, 160, 201, 215, 224, 253, 276, 295], "memori": [25, 35, 38, 45, 150, 253, 277], "mb": [25, 35, 38, 45, 150, 253, 277], "placehold": [25, 35, 38, 45, 150, 253, 295], "diverg": [31, 153], "counterpart": [31, 139, 153], "nest": [31, 125, 127, 153], "graph_fil": 32, "run_as_subprocess": [38, 253], "smallest": [38, 253, 274, 285, 301], "unit": [38, 98, 102, 105, 253, 274, 288, 301], "term": [38, 274, 276, 291, 292], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 253, 255, 295], "finish": [38, 39, 82, 253, 276], "known": [38, 39, 136, 244, 253, 276], "suffici": [38, 253], "establish": [38, 39, 253], "is_depend": [38, 253], "machine_info": [38, 253], "machineinfo": 38, "combin": [38, 40, 49, 57, 63, 96, 125, 253, 254, 255, 273, 276, 277, 295], "base_work_dir": [38, 49, 253, 255], "log_filenam": [38, 49, 253, 255], "redirect": [38, 253], "extern": [38, 136, 240, 250, 253, 255, 269, 286, 296], "turn": [38, 56, 250, 253, 273, 276, 293], "access": [39, 255, 256, 257, 276, 278, 282, 283], "database_compon": [40, 253], "work_dir_target": [40, 253], "come": [40, 136, 253, 257, 276, 278, 279, 280, 281, 282, 283, 286], "_database_root": 40, "available_resourc": [42, 92], "constrain": [42, 151, 161, 185, 202, 216, 243, 246, 247, 253, 276], "cores_per_nod": [42, 92, 95, 136, 277, 278, 279, 280, 281, 282, 283, 295], "everi": [43, 193, 243, 253, 255, 256, 272, 273, 274, 276, 288, 293], "child": [43, 139, 193, 250, 253, 255, 256], "subtask": 45, "step_symlink": [49, 255], "outsid": [49, 50, 249, 251, 253, 255, 257], "stdout_logg": [49, 255], "goe": [49, 253, 255, 276], "regardless": [49, 255], "new_step_log_fil": [49, 255], "run_by_default": [50, 255], "assum": [51, 116, 126, 136, 257, 276, 283, 288], "prior": [51, 253], "step_path": 55, "variant": [55, 181, 243, 249, 254, 256, 257, 276, 282, 285, 288, 289], "uncach": 55, "datestamp": 55, "yymmdd": [55, 277], "dry": [55, 254], "meta": 57, "empti": [57, 253, 256, 257, 274, 276], "link_nam": 61, "overwrit": 61, "55742015": 61, "fileexistserror": 61, "unless": [61, 111, 257], "isadirectoryerror": 61, "qo": [62, 278, 279, 281, 282, 283, 295], "qualiti": [62, 278, 279, 281, 282, 283, 295], "servic": [62, 278, 279, 281, 282, 283, 295], "constraint": [62, 283, 295], "wall_tim": [62, 295], "wall": [62, 295], "target_cor": 63, "min_cor": 63, "decomposition_test": [67, 249, 295], "decompositiontest": [67, 249], "e501": [67, 276], "turquois": [67, 279], "usr": [67, 136, 279, 295], "climat": [67, 278, 279, 280, 282, 295], "mhoffman": 67, "constant": [68, 75, 76, 139, 242, 276, 288, 289, 291, 293, 294, 299], "latitud": [69, 76, 98, 100, 102, 105, 122, 244, 289, 294, 299], "longitud": [69, 76, 77, 83, 98, 100, 102, 105, 122, 244, 289, 294, 299], "ndarrai": [69, 76, 77, 83, 87, 122, 156, 189, 230, 231, 276], "degre": [69, 76, 77, 83, 102, 277, 288], "length": [69, 76, 77, 83], "180": [69, 76, 77, 83, 102, 139, 289], "90": [69, 76, 77, 83, 139, 253, 289], "static": [70, 71], "rule": 70, "thumb": 70, "achiev": [71, 254], "uniform": [75, 80, 148, 184, 243, 244, 246, 247, 249, 255, 276, 277, 288, 289, 291, 292, 293, 294, 299], "natur": 80, "jigsawpi": [81, 253], "jigsaw_jig_t": 81, "meti": 85, "area": [86, 276], "dt_target": 87, "start_xtim": 87, "char": 87, "defaults_filenam": 88, "total": [92, 253, 254, 256, 276, 277, 279, 295], "substep": [93, 94], "command_line_arg": 93, "cpus_per_nod": 95, "map_filenam": 97, "src_grid_info": 97, "dst_grid_info": 97, "neareststod": [97, 244, 289, 294, 299], "conserv": [97, 244, 289, 294, 299], "map_": 97, "source_typ": 97, "_": [97, 136, 253, 255, 257, 276, 293], "dest_typ": 97, "1d": [98, 102, 105, 122, 139, 230, 231, 232, 233, 234, 235, 236, 238, 239], "2d": [98, 102, 105, 122], "5x0": [98, 102, 105], "5degre": [98, 102, 105], "coordin": [98, 100, 101, 105, 107, 122, 123, 198, 212, 232, 238, 239, 284, 286, 288, 289, 291, 292, 293, 294, 298], "mesh_typ": [99, 106, 249, 253, 255], "vertex": [99, 106], "x_var": [101, 107], "y_var": [101, 107], "proj_attr": [101, 107], "proj_str": [101, 107], "proj": [101, 107], "left": [102, 139, 276, 285, 288, 289], "remapp": [103, 104], "remap_fil": 103, "progress": [110, 111], "is_task": 111, "steps_to_skip": 111, "unpickl": [113, 253], "cached_step": 114, "identifi": [114, 136, 250, 269, 301], "task_list": 115, "_all": 115, "streams_filenam": 116, "lxml": [116, 118, 131], "etre": [116, 118, 131], "new_child": 117, "children": 117, "sub": [117, 276], "new_tre": 118, "infin": 121, "toler": 121, "data_arrai": 122, "colorbar_label": 122, "subtitl": 122, "out_file_nam": 123, "ax": 123, "z_index": 123, "cmap_set_und": 123, "cmap_scal": 123, "cmap_titl": 123, "horizont": [123, 139, 156, 242, 243, 244, 246, 247, 248, 288, 291, 292, 293], "depth": [123, 139, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 276, 277, 285, 288, 289, 291, 292, 293, 294], "slice": [123, 142], "fieldnam": 123, "visibl": 123, "bar": 123, "matplotlib": [124, 276], "style": [124, 139, 275, 276], "classmethod": 126, "jinja": [126, 139, 244], "namelist_templ": 130, "polarisyaml": [130, 131], "processed_registry_filenam": 131, "registri": [131, 242, 269], "steam": 131, "1_anvil_intel_impi": [132, 136], "mvapich": [132, 136, 278], "ve": [132, 133, 134, 135, 137, 257, 276], "1_anvil_gnu_openmpi": 132, "1_chicoma": 133, "cpu_gnu_mpich": [133, 137], "crai": [133, 136, 137, 279, 283], "1_chrysalis_intel_openmpi": 134, "1_chrysalis_gnu_openmpi": 134, "soon": [135, 136, 276, 295], "1_compy_intel_impi": 135, "1_compy_gnu_openmpi": 135, "load_polaris_env": [136, 257, 276, 295], "therefor": [136, 253, 274, 276], "chicoma": [136, 282, 295], "mpich": [136, 257, 275, 279, 283, 295], "compi": [136, 281, 295], "pm": [136, 283, 295], "compymcnodefac": [136, 282], "perlmutt": [136, 279, 282, 295], "pretti": [136, 253, 256, 276, 277], "conda_path": [136, 257], "osx": [136, 282], "clang": [136, 257], "1_": 136, "morpheu": 136, "cobalt": [136, 278, 279, 280, 281, 282, 283], "single_nod": [136, 277, 278, 279, 280, 281, 282, 283, 295], "mpirun": [136, 273, 277, 278, 279, 280, 281, 282, 283, 295], "srun": [136, 253, 273, 276, 277, 278, 279, 280, 281, 282, 283, 295], "parallel_execut": [136, 273, 277, 278, 279, 280, 281, 282, 283, 295], "modules_befor": [136, 279, 283], "modules_aft": [136, 279, 283], "polaris_env": [136, 278, 279, 280, 281, 282, 283], "deploi": [136, 257, 275, 278, 279, 280, 281, 282, 283], "mpi_gnu": [136, 278, 279, 280, 281, 282, 283], "hdf5": [136, 278, 279, 280, 281, 282, 283], "use_e3sm_hdf5_netcdf": [136, 278, 279, 280, 281, 282, 283], "discoveri": 136, "hostnam": 136, "hostname_contain": 136, "queu": 136, "laptop": [136, 257, 276, 277], "workstat": [136, 257], "high": [136, 253, 280, 282], "hpc": [136, 257, 279, 282], "safest": [136, 257], "mpi_": 136, "simpl": [136, 139, 256, 269, 276, 295], "compiler_gnu": 136, "compiler_intel": 136, "hopefulli": [136, 277], "parlanc": 136, "concret": 136, "ubuntu": 136, "spec": [136, 273, 283], "gcc": 136, "curl": 136, "81": 136, "buildabl": 136, "install_missing_compil": 136, "cc": 136, "bin": [136, 257, 283, 295], "cxx": 136, "f77": 136, "fc": 136, "operating_system": 136, "ubuntu22": 136, "04": 136, "extra_rpath": 136, "luck": 136, "catch": [136, 254], "22": 136, "guess": [136, 276], "correct": [136, 257], "potenti": [136, 156, 169, 253, 276, 288], "purg": 136, "perl": 136, "32": [136, 254, 295], "bsnc6lt": 136, "ugetvbp": 136, "sxfyy4k": 136, "2020": 136, "304": 136, "n3b5fye": 136, "j3zxncu": 136, "7ohuiwq": 136, "k2zu3y5": 136, "mirrcz7": 136, "variou": [136, 222, 253, 257, 261], "ask": 136, "gb": 136, "minut": [136, 243, 254, 288, 300], "hour": [136, 246, 247, 254, 272, 279, 283, 291, 292, 295, 298], "zlib": 136, "incompat": 136, "ubuntu20": 136, "readlin": 136, "pkgconf": 136, "spackdir": 136, "env": [136, 283], "arch": 136, "repositori": [136, 251, 275, 276, 295], "x86_64_v4": 136, "free": [136, 242, 276, 277], "touch": [136, 257], "everyth": 136, "1_pm": 137, "ever": [139, 256], "expand": [139, 285], "oceanmodelstep": [139, 253, 276], "decid": [139, 276], "veri": [139, 250, 253, 256, 257, 269, 276, 293], "earli": [139, 286, 295], "stage": [139, 242, 253, 255, 257, 265, 272, 286, 295], "map_yaml_to_namelist": 139, "heurist": 139, "200": [139, 246, 247, 276, 288, 291, 292, 293], "round": [139, 289], "cell_count": [139, 151, 161, 185, 202, 216, 276], "goal_cells_per_cor": [139, 276, 289, 291, 292, 294, 299], "pinch": 139, "2000": [139, 249, 270, 272, 276, 298], "max_cells_per_cor": [139, 276, 289, 291, 292, 294, 299], "seciton": 139, "control": [139, 244, 253, 277, 288, 289, 293, 295], "scale": [139, 288, 295], "tri": [139, 256], "apport": 139, "dai": [139, 155, 169, 243, 244, 248, 272, 276, 288, 289, 293, 298], "form": [139, 301], "dddd_hh": [139, 155], "ss": [139, 155], "get_time_interval_str": 139, "run_dur": [139, 289], "fill": 139, "dt_str": 139, "run_duration_str": 139, "output_interval_str": 139, "yaml_filenam": [139, 148], "caviti": [139, 256, 276, 277, 285], "frazil": 139, "flux": [139, 242, 293], "fix": [139, 276], "add_spherical_base_mesh_step": [139, 255], "spherical_converg": [139, 244, 255, 289], "icos_resolut": [139, 289], "480": [139, 289], "qu_resolut": [139, 289], "150": [139, 289], "210": [139, 285, 289], "evalu": [139, 142, 143, 144, 145, 183, 199, 200, 213, 214, 289], "convergence_eval_tim": [139, 289], "convergence_thresh": [139, 289], "error_typ": [139, 142, 143, 289], "spherical_convergence_forward": [139, 289], "split_explicit": [139, 289], "rk4_dt_per_km": [139, 289], "split": [139, 256], "split_dt_per_km": 139, "barotrop": [139, 160, 224, 253, 276, 288, 293], "simul": [139, 246, 247, 253, 274, 276, 287, 288, 291, 292, 294, 295, 299], "numer": [139, 291, 292], "infrastructur": [139, 256, 276], "add_cosine_bell_task": [139, 250], "sphericalconvergenceforward": [139, 244], "analyz": [139, 141, 182, 276, 289], "split_explicit_t": [139, 276], "sphericalconvergenceanalysi": [139, 244], "less": [139, 141, 179, 182, 253, 285], "convergence_var": [139, 141], "zidx": [139, 141, 142, 144, 145, 146, 183], "exact_solut": 139, "state": [139, 144, 156, 158, 159, 166, 169, 174, 183, 242, 243, 244, 246, 247, 248, 253, 254, 276, 289], "put": [139, 257, 276], "grid_1d": 139, "generate_1d_grid": 139, "vertical_grid": [139, 230, 232, 238, 239, 249, 253, 276, 277, 285, 288, 289, 291, 292, 293, 294], "z": [139, 141, 142, 144, 145, 146, 183, 233, 234, 235, 236, 237, 238, 239, 276, 288, 289, 291, 292, 293, 294], "star": [139, 237, 239, 276, 288, 289, 291, 292, 293, 294], "init_vertical_coord": [139, 253, 276], "minlevelcel": [139, 232, 234, 235, 236, 237, 238, 239, 276], "maxlevelcel": [139, 232, 233, 234, 235, 236, 237, 238, 239, 276], "cellmask": [139, 232, 235, 238, 239, 276], "zmid": [139, 232, 238, 239, 276], "restingthick": [139, 232, 237, 238, 239, 276], "bottomdepth": [139, 232, 233, 235, 236, 237, 238, 239, 253, 276], "entir": [139, 276, 288, 300], "petersen": [139, 257, 276, 288], "et": [139, 276, 285, 288, 289, 291, 292], "al": [139, 276, 285, 288, 289, 291, 292], "2015": [139, 276, 288], "int_": 139, "rho": 139, "dv": 139, "sort": [139, 250, 251, 256, 257], "increas": [139, 256], "compute_rp": [139, 276], "csv": [139, 244, 276], "geostroph": 141, "dependencies_dict": 141, "rate": [141, 143, 144, 183, 244, 246, 247, 276, 289, 291, 292, 293], "variable_nam": [142, 146], "exact": [142, 144, 145, 183, 198, 199, 200, 212, 213, 214, 244, 246, 247, 256, 291, 292], "inf": [142, 143], "conv_thresh": [143, 291, 292], "deriv": 144, "subdivid": [149, 255], "dynamic_ntask": 150, "dynam": [150, 240, 248, 277, 288, 289, 293, 294], "available_cor": 152, "estim": [152, 154, 276], "time_str": 155, "initial_state_filenam": 156, "energi": [156, 169, 275, 276, 288], "len": [156, 276], "output_fil": [156, 253, 276], "shorter": [166, 254, 262], "step_subdir": [175, 263], "processor": [175, 253, 263, 288], "include_viz": [179, 255], "advect": [179, 244, 289, 291, 292, 293], "ncell": [183, 253, 276], "max_valu": 189, "ri": 189, "accord": [189, 291, 292, 295], "meter": [189, 230, 231], "radiu": [189, 289], "viz_map": [190, 255], "inerti": [194, 195, 196, 198, 201, 204, 206, 246, 255, 286, 290], "graviti": [194, 195, 196, 198, 201, 204, 206, 246, 255, 286, 290], "wave": [194, 195, 196, 198, 201, 204, 206, 212, 246, 253, 255, 276, 286, 288, 290, 292], "taskdir": [196, 201, 204, 206, 210, 215, 218, 220], "analys": [196, 210], "angleedg": [198, 212], "angl": [198, 212], "posit": [198, 212, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 276, 285, 293], "xcell": [198, 212, 253, 276], "ycell": [198, 212, 253, 276], "xedg": [198, 212, 253, 276], "yedg": [198, 212], "f0": 198, "corioli": [198, 246, 247, 276, 288, 289, 292, 293], "eta0": [198, 212], "amplitid": [198, 212], "kx": [198, 212], "ky": [198, 212], "angular": [198, 212], "frequenc": [198, 212, 243], "veloc": [199, 213, 242, 243, 246, 247, 255, 257, 276, 289, 293, 295], "norm_vel": 199, "eta": [200, 214, 291, 292], "manufactur": [208, 209, 210, 212, 215, 218, 220, 247, 286, 290], "column": [222, 223, 225, 226, 228, 248, 257, 261, 262, 263, 265, 266, 267, 269, 270, 272, 286, 290, 295, 296, 297], "mix": [223, 249, 250, 291, 292, 293], "param": [223, 225], "resources_fix": 224, "ag": [225, 226, 228], "evolv": [225, 275, 285, 289, 293], "ideal_ag": [226, 228], "layer": [230, 231, 232, 236, 237, 238, 239, 242, 243, 246, 247, 248, 276, 277, 285, 288, 289, 291, 292, 293, 294], "bottom": [232, 233, 234, 235, 236, 237, 238, 239, 242, 276, 277, 285, 288, 289, 291, 292, 293, 294], "thick": [232, 236, 237, 238, 239, 243, 248, 270, 276, 277, 285, 288, 291, 298], "stretch": [232, 238, 239, 276, 285], "elev": [232, 238, 239, 276, 285], "midpoint": [232, 238, 239, 276], "reftopdepth": [232, 235, 236, 238, 239, 276], "down": [232, 233, 234, 235, 236, 237, 238, 239, 276, 285, 289], "ref": [232, 238, 239, 276], "middl": [232, 238, 239, 276], "refbottomdepth": [232, 233, 234, 235, 236, 238, 239, 253, 276], "refinterfac": [232, 238, 239, 276], "element": [232, 238, 239, 276], "vertcoordmovementweight": [232, 238, 239, 276], "movement": [232, 238, 239, 276], "alter": [233, 234, 253, 255, 275, 276, 285, 288, 289, 291, 292, 293, 294], "partial": [233, 234, 276, 285, 288, 289, 291, 292, 293, 294], "seafloor": [233, 235, 236, 237, 285], "unstretch": 237, "shelv": [240, 277, 285], "ssh_adjust": [240, 253, 277], "compass_branch": 240, "example_compact": [240, 250, 269, 277], "default_input": [240, 250, 269, 276, 277], "ocean_model": [240, 257, 277], "latest": [240, 257, 269, 275, 286, 295], "compat": [240, 257, 269, 273, 275], "verison": 240, "manufactured_solut": [240, 245, 250, 292], "single_column": [240, 245, 250, 269, 271, 293], "minim": 242, "fcell": [242, 253, 276, 289], "fedg": [242, 253, 276, 289], "fvertex": [242, 253, 276, 289], "slip": 242, "solid": [242, 270, 288, 289], "tangenti": 242, "nonperiod": 242, "drag": [242, 244], "mass": 242, "momentum": [242, 243, 244, 246, 247, 291, 292], "scalar": 242, "rigid": 242, "solv": [242, 273, 285], "mid": [242, 288], "vari": [242, 244, 253, 273, 282, 285, 289], "consult": [242, 276], "tidal_forc": 242, "eddi": [243, 288], "addition": [243, 244, 246, 247, 248, 253, 278, 279, 280, 281, 283], "diffus": [243, 244, 246, 247, 248], "50": [243, 246, 247, 276, 288, 291, 292, 293], "prescrib": [243, 246, 247], "intens": 243, "enough": [243, 253, 256, 276], "cosinebel": [244, 255], "24": [244, 289, 298], "shape": [244, 289], "blob": 244, "around": [244, 276, 277, 288, 289], "distribut": 244, "convergence_tracer1": 244, "fast": [244, 276], "shallow": [246, 257, 289, 291, 292, 294], "water": [246, 276, 288, 289, 291, 292, 293, 294], "100": [246, 247, 248, 285, 291, 292, 293], "25": [246, 247, 291, 292, 293], "exactsolut": [246, 247], "obtain": [246, 247, 257, 279], "normal_veloc": [246, 247, 253, 276], "assign": [246, 247, 289], "squar": [246, 247, 291, 292], "fall": [246, 247, 295], "accept": [246, 247], "bound": [246, 247], "rmse": [246, 247, 291, 292], "manufacturedsolut": 247, "exercis": [248, 272, 289, 293], "kpp_test": 248, "mixedlayerdepthsoutput": 248, "idealagetrac": [248, 293], "single_column_forc": [248, 293], "profil": [248, 273, 293], "throughout": [248, 288, 293], "idealag": 248, "enabel": 248, "formal": 249, "organ": [249, 251, 254, 275], "conceptu": [249, 256], "broadli": [249, 250, 256], "realist": [249, 275, 301], "greenland": [249, 275, 301], "2000m": [249, 295], "34": [249, 295], "halfar": 249, "cism": 249, "dome_typ": 249, "put_origin_on_a_cel": 249, "hydrologi": 249, "hydro": [249, 301], "dome_viz": 249, "time_slic": 249, "save_imag": 249, "hide": [249, 276], "hide_fig": 249, "clutter": 249, "smoke_test": [249, 255], "smoketest": [249, 255], "restart_test": 249, "restarttest": 249, "add_dome_task": 249, "variable_resolut": [249, 253, 295], "talk": 249, "reduc": [249, 253], "among": [249, 251, 257, 276], "encompass": 250, "perspect": 250, "four": 250, "major": [250, 253], "broader": 250, "univers": 250, "add_inertial_gravity_wave_task": 250, "add_manufactured_solution_task": 250, "add_single_column_task": 250, "alphabet": [250, 276], "landice_model": [250, 257], "diagram": 251, "green": 251, "blue": [251, 278, 295], "orang": 251, "red": 251, "laid": 251, "fig": 251, "organiz": 251, "concept": [251, 256, 276, 301], "somewher": 253, "multiprocess": [253, 256, 277], "aspir": 253, "emploi": 253, "unwant": 253, "outer": 253, "inner": 253, "dome_varres_grid": 253, "signific": [253, 254, 255], "neglig": 253, "culled_graph": [253, 276], "meshstep": 253, "getint": 253, "mesh_cpus_per_task": 253, "mesh_min_cpus_per_task": 253, "fit": [253, 277], "applic": [253, 256, 257, 294, 299], "launch": [253, 275], "write_netcdf": [253, 276], "convers": [253, 276], "greater": [253, 276], "graphinfofilenam": [253, 276], "culled_mesh": [253, 276], "use_dist": [253, 276, 288], "gradient_width_dist": [253, 276, 288], "gradient_width_frac": [253, 276, 288], "bottom_temperatur": [253, 276, 288], "surface_temperatur": [253, 276, 288, 293], "temperature_differ": [253, 276, 288], "coriolis_paramet": [253, 276, 288, 291, 292, 293], "x_cell": [253, 276], "y_cell": [253, 276], "bottom_depth": [253, 276, 277, 285, 288, 289, 291, 292, 293, 294], "ones_lik": [253, 276], "zeros_lik": [253, 276], "x_min": [253, 276], "min": [253, 276, 288, 293], "x_max": [253, 276], "y_min": [253, 276], "y_max": [253, 276], "y_mid": [253, 276], "x_perturb_min": [253, 276], "x_perturb_max": [253, 276], "perturb_width": [253, 276, 288], "y_offset": [253, 276], "sin": [253, 276, 288, 291, 292], "pi": [253, 276, 285, 288, 289], "temp_vert": [253, 276], "frac": [253, 276, 285, 288, 291], "logical_and": [253, 276], "transpos": [253, 276], "3rd": [253, 276], "crest": [253, 276, 288], "expand_dim": [253, 276], "dim": [253, 276], "axi": [253, 276], "broadcast": [253, 276], "nedg": [253, 276], "xvertex": [253, 276], "attr": [253, 276], "initial_temperatur": [253, 276], "initial_normal_veloc": [253, 276], "superclass": 253, "commandlin": 253, "harm": 253, "likewis": [253, 276], "subsequ": [253, 300], "arisen": 253, "problemat": 253, "add_depend": 253, "usual": [253, 255, 257, 276, 295], "forwardstep": 253, "mesh_path": 253, "mesh_step": 253, "with_ice_shelf_cav": 253, "initial_state_target": 253, "adjusted_init": 253, "forcing_data": 253, "init_mode_forcing_data": 253, "entha_analy_result": 253, "mat": 253, "enthalpy_benchmark": 253, "ourselv": 253, "problem": [253, 257, 273, 276], "firewal": 253, "bedmachineantarctica_v2_and_gebco_2022_0": 253, "05_degree_20220729": 253, "slate": 253, "icepresent_qu60km_polar": 253, "practic": [253, 256, 257], "straightforward": 253, "commonli": [253, 274], "notat": [253, 294, 299], "phc": [253, 285], "That": [253, 256, 274, 276, 295], "word": 253, "ff": 253, "quwisc240": [253, 256, 295], "90c": 253, "91c": 253, "92": [253, 285], "91": 253, "sowisc12to60": [253, 295], "performance_test": 253, "effici": [253, 276], "transfer": 253, "feasibl": 253, "overhead": 253, "philosophi": [254, 256, 276], "context": [254, 276], "namesak": 254, "256": [254, 279, 283], "count": [254, 274], "quicker": 254, "exce": 254, "offer": 254, "benefit": [254, 275], "bug": 254, "coverag": 254, "exhaust": 254, "recent": [254, 286, 296], "merg": 254, "reach": 254, "steadi": 254, "wet": 254, "fundament": 255, "incorpor": 255, "velo_solv": 255, "sia": [255, 257], "fo": 255, "runmodel": 255, "run_step": 255, "0200": 255, "00_00": [255, 270, 276], "recip": 255, "demonstr": [255, 276], "fairli": [255, 256, 257, 276], "_cosine_bel": 255, "_with_viz": 255, "_setup_step": [255, 276], "_resolut": 255, "remove_step": 255, "analysis_depend": 255, "base_mesh_step": 255, "cos_bell_dir": 255, "_init_": 255, "init_step": 255, "_forward_": 255, "forward_step": 255, "with_viz_dir": 255, "_map_": 255, "_viz_": 255, "rare": [255, 257], "480km": 255, "closer": 255, "imp_r": 255, "joinpath": 255, "initial_condit": 256, "dig": [256, 277], "background": 256, "adher": [256, 276], "pep8": [256, 257], "bot": [256, 285], "violat": 256, "consid": 256, "editor": 256, "pycharm": [256, 257, 276], "spyder": 256, "linter": 256, "flake8": [256, 257], "discourag": [256, 274], "reformat": 256, "autopep8": 256, "undesir": 256, "lint": 256, "wildcard": 256, "vim": [256, 276], "plugin": 256, "id": [256, 257], "commit": [256, 257], "why": 256, "sound": 256, "subpackag": 256, "understand": [256, 277], "downstream": 256, "tutori": [256, 257], "clu": 256, "intro": 256, "docstr": [256, 275, 276], "strip": 256, "mpas_ocean": 256, "hidden": 256, "shortcut": [256, 295], "referenc": [256, 276], "mention": 256, "dot": 256, "charact": 256, "unix": [256, 275], "distinct": 256, "mayb": [256, 276], "machine_config": 256, "endswith": 256, "splitext": 256, "exactli": [256, 257, 276, 285], "move": [256, 257, 276, 294, 299], "renam": 256, "visa": 256, "versa": 256, "comfort": [256, 276], "inherit": [256, 276], "orient": 256, "program": [256, 277], "led": 256, "felt": 256, "contribut": 256, "hesit": 256, "predecessor": [256, 274, 275], "clumsi": 256, "harder": 256, "outcom": 256, "augment": 256, "explain": 256, "hope": 256, "dens": 256, "learn": [256, 276], "curv": 256, "worth": [256, 276], "skill": 256, "endeavor": 256, "readabl": 256, "manipul": 256, "get_available_cores_and_nod": 256, "theoret": 256, "dozen": 256, "theori": 256, "biogeochemistri": 256, "ksh": 257, "mac": [257, 275], "csh": 257, "tcsh": 257, "temporarili": 257, "recogn": [257, 277, 295], "permiss": 257, "anyon": 257, "caus": [257, 279, 283, 285], "person": [257, 273], "base_path_to_install_or_update_conda": 257, "with_netlib_lapack": 257, "flavor": [257, 276], "troubl": [257, 276], "recognit": 257, "trilino": 257, "downsid": 257, "unneed": 257, "reinstal": 257, "caution": 257, "load_": 257, "encod": 257, "load_dev_polaris_": [257, 276], "env_nam": 257, "dev_polaris_": [257, 273], "workdir": [257, 295], "unexpect": [257, 274, 276], "occur": [257, 273], "echo": 257, "proceed": 257, "notic": 257, "conda_env": [257, 281, 295], "rememb": 257, "incorrect": 257, "unus": 257, "session": [257, 276], "pip": 257, "substanti": 257, "risk": [257, 276], "unsupport": 257, "env_onli": 257, "mpas_make_target": [257, 295], "scientif": [257, 295], "_albani": 257, "instruct": [257, 276], "es3m": 257, "compli": 257, "memor": 257, "guidelin": 257, "complianc": 257, "checker": 257, "isort": 257, "flynt": 257, "mypi": 257, "77": 257, "e302": 257, "blank": 257, "resolv": 257, "simpler": [257, 276], "new_branch_nam": 257, "disk": [257, 277, 279, 283], "respons": 257, "simplest": 257, "your_new_branch": 257, "restart_filenam": 263, "polaris_branch": 269, "post": 269, "src": 269, "registry_process": 269, "seaice_model": 269, "1m": [270, 298], "disc": [270, 298], "config_initial_ice_area": 270, "config_initial_ice_volum": 270, "config_atmospheric_forcing_typ": 270, "config_forcing_start_tim": 270, "config_forcing_cycle_start": 270, "config_forcing_cycle_dur": 270, "config_forcing_precipitation_unit": 270, "mm_per_sec": 270, "config_forcing_sst_typ": 270, "ncar": 270, "config_update_ocean_flux": 270, "config_include_pond_freshwater_feedback": 270, "standard_phys": 272, "standardphys": 272, "year": [272, 286, 298], "volum": 272, "snow": 272, "exact_restart": 272, "exactrestart": 272, "geo": 273, "cartopi": 273, "14": 273, "np110py27_4": 273, "calledprocesserror": 273, "deploy_tmp": 273, "vpn": 273, "site": 273, "shell": [273, 275], "honor": 273, "wide": 273, "spawn": 273, "usernam": [273, 276, 279, 283], "proxy_en": 273, "all_proxi": 273, "proxyout": 273, "8080": 273, "no_proxi": 273, "localhost": [273, 277, 282, 283, 295], "127": 273, "proxy_dis": 273, "unset": 273, "anytim": 273, "fatal": 273, "mpi_init": 273, "stack": 273, "mpir_init_thread": 273, "159": 273, "mpid_init": 273, "164": 273, "mpidi_ch3_init": 273, "95": 273, "mpid_nem_init": 273, "314": 273, "mpid_nem_tcp_init": 273, "173": 273, "mpid_nem_tcp_get_business_card": 273, "395": 273, "getsockinterfaceaddr": 273, "369": 273, "pn2034311": 273, "errno": 273, "host": [273, 277, 282, 295], "focus": 274, "plu": 274, "autom": 275, "exascal": 275, "earth": 275, "kept": 275, "boundari": [275, 288, 301], "expert": 275, "uncoupl": 275, "quick": [275, 276, 286, 296], "queue": 275, "beginn": [275, 276], "advanc": [275, 276], "mpas_to_yaml": 275, "troubleshoot": 275, "proxi": 275, "lanl": [275, 277, 279], "gethostbynam": 275, "glossari": 276, "stick": 276, "miniconda": 276, "3_chrysalis_intel_openmpi": 276, "strict": 276, "push": 276, "lowercas": 276, "hyphen": 276, "settl": 276, "desktop": 276, "realli": [276, 283], "nice": [276, 283], "supercomput": 276, "yet_another_channel": 276, "testgroup": 276, "vi": 276, "polaris_head": 276, "yetanotherchannel": 276, "instanc": 276, "repres": [276, 285, 289], "highli": 276, "camelcas": 276, "capit": 276, "letter": 276, "cap": 276, "awkward": 276, "encourag": 276, "enclos": 276, "briefli": 276, "baroclinicchannel": 276, "globalconverg": 276, "add_test_group": 276, "interest": 276, "test_group": 276, "add_test_cas": 276, "anyth": 276, "testcas": [276, 277, 288, 293, 295], "probabl": [276, 282], "suppos": 276, "easili": 276, "tide": 276, "sai": [276, 282], "res_str": 276, "1000": [276, 277, 285, 288, 291, 292], "still": [276, 286, 294, 295, 299], "ti": 276, "loop": 276, "1km": [276, 288, 295], "4km": [276, 288, 295], "coarsest": [276, 277], "especi": 276, "promot": 276, "pattern": 276, "familiar": 276, "seen": 276, "brows": 276, "row": 276, "disadvantag": 276, "foremost": 276, "magic": 276, "effect": [276, 294], "pain": 276, "160": [276, 288], "500": [276, 277, 285, 288], "path_to_mpas_ocean": 276, "path_to_working_dir": 276, "cat": 276, "slurm_jobid": 276, "_run_test": 276, "gpf": 276, "fs1": 276, "cbegeman": 276, "grid_typ": [276, 277, 285, 288, 289, 291, 292, 293, 294], "vert_level": [276, 277, 285, 288, 289, 291, 292, 293, 294], "coord_typ": [276, 285, 288, 289, 291, 292, 293, 294], "partial_cell_typ": [276, 285, 288, 289, 291, 292, 293, 294], "min_pc_fract": [276, 285, 288, 289, 291, 292, 293, 294], "everywher": 276, "depress": [276, 285], "mostli": 276, "logic": [276, 288], "northern": [276, 288], "half": [276, 288], "southern": [276, 288], "halv": [276, 288], "gradient": [276, 288, 291, 292, 293], "500km": [276, 288], "40e3": [276, 288], "35": [276, 288, 289, 293, 294, 295, 299], "2e": [276, 288], "connect": [276, 283], "match": 276, "light": 276, "e3sm_compon": 276, "interact": [276, 279, 282, 283, 295], "interrupt": 276, "pty": 276, "navig": 276, "newli": 276, "bunch": 276, "didn": 276, "mistak": 276, "finger": 276, "cross": 276, "initial_normalveloc": 276, "initial_salin": 276, "obvious": 276, "stress": [276, 293], "landicemodelstep": 276, "huge": 276, "cp": 276, "05": 276, "hmix_del2": 276, "bottom_drag": 276, "cvmix": 276, "0002": 276, "filename_interv": 276, "0100": 276, "input_interv": 276, "initial_onli": 276, "basicmesh": 276, "dayssincestart": 276, "surfacespe": 276, "lowersurfac": 276, "uppersurfac": 276, "ureconstructx": 276, "ureconstructi": 276, "great": 276, "remain": [276, 289, 293], "load_dataset": 276, "final_temperatur": 276, "ab": 276, "proc": 276, "4proc": [276, 288], "8proc": [276, 288], "markdown": 276, "developers_guid": 276, "users_guid": 276, "daunt": 276, "flesh": 276, "bonu": 276, "improv": 276, "introduc": 276, "techniqu": 276, "cannot": 276, "aim": 276, "constrain_resourc": 276, "becam": 276, "mainten": 276, "counter": 276, "thought": 276, "yet_another_channel_test_cas": 276, "yetanotherchanneltestcas": 276, "choic": [276, 289], "spuriou": [276, 288], "dissip": [276, 288], "pop": [276, 288], "mom": [276, 288], "mitgcm": [276, 288], "higher": 276, "heavi": 276, "analogi": 276, "tet": 276, "bear": 276, "late": 276, "_add_step": 276, "startswith": 276, "enumer": 276, "rpe_": 276, "_nu_": 276, "privat": 276, "break": [276, 288], "unusu": 276, "rpe_1_nu_1": [276, 288], "rpe_2_nu_5": [276, 288], "rpe_3_nu_10": 276, "rpe_4_nu_20": 276, "rpe_5_nu_200": 276, "20_00": 276, "0000": 276, "dayssincestartofsim": 276, "relativevort": 276, "pyplot": 276, "plt": 276, "output_": 276, "sections_yet_another_channel_": 276, "rpe_t": 276, "init_filenam": 276, "initial_state_file_nam": 276, "ds_init": 276, "_plot": 276, "dirti": 276, "adopt": 276, "lesson": 276, "tricki": 276, "commun": 276, "nuanc": 276, "fake": 276, "wasn": 276, "fold": 276, "proper": 276, "third": 276, "previous": 276, "extens": 277, "multinod": [277, 295], "explanatori": 277, "my_machin": 277, "extend": 277, "gitconfig": 277, "enter": 277, "author": 277, "email": 277, "pull_request": 277, "28": 277, "address": 277, "metadata": 277, "customize_config_pars": 277, "server_base_url": 277, "inej": 277, "check_siz": 277, "ssl": 277, "certif": 277, "core_path": 277, "partition_execut": 277, "dask": 277, "netcdf4": 277, "netcdf4_class": 277, "netcdf3_64bit": 277, "netcdf3_class": 277, "engin": 277, "scipi": 277, "mesh_databas": 277, "ocean_database_root": 277, "landice_database_root": 277, "mesh_cor": 277, "mesh_min_cor": 277, "mesh_max_memori": 277, "mesh_max_disk": 277, "init_cor": 277, "init_min_cor": 277, "init_max_memori": 277, "init_max_disk": 277, "init_thread": 277, "forward_cor": 277, "forward_min_cor": 277, "forward_thread": 277, "forward_max_memori": 277, "forward_max_disk": 277, "add_metadata": 277, "ec": 277, "wc": 277, "mesh_descript": 277, "autodetect": 277, "bathy_descript": 277, "gebco": 277, "2022": 277, "bedmachin": 277, "antarctica": 277, "init_descript": 277, "e3sm_vers": 277, "increment": 277, "mesh_revis": 277, "finest": 277, "min_r": 277, "max_r": 277, "max_depth": 277, "creation_d": 277, "peopl": 277, "contact": 277, "temperaturemax": 277, "temperature_max": 277, "33": [277, 295], "enable_ocean_initial_condit": 277, "enable_ocean_graph_partit": 277, "enable_seaice_initial_condit": 277, "scrip": 277, "enable_scrip": 277, "transect": 277, "onlin": 277, "member": 277, "offlin": 277, "enable_diagnostics_fil": 277, "coarser": [277, 289], "finer": 277, "comparisonlatresolut": 277, "comparisonlonresolut": 277, "antarct": 277, "polar": [277, 278, 280, 285], "stereograph": 277, "comparisonantarcticstereowidth": 277, "6000": [277, 285], "comparisonantarcticstereoresolut": 277, "arctic": [277, 298], "comparisonarcticstereowidth": 277, "comparisonarcticstereoresolut": 277, "tanh_dz": 277, "16": [277, 293, 295], "3000": 277, "min_layer_thick": [277, 285], "max_layer_thick": [277, 285], "retain": 277, "ecosystem": 278, "gain": 278, "confluenc": 278, "public_html": [278, 280, 282], "soft": [278, 280, 282, 295], "mpi_intel": [278, 280, 281, 282], "36": [278, 282, 293, 295], "condo": [278, 295], "acm": [278, 295], "medium": 278, "acme_high": 278, "load_latest_polaris_intel_impi": [278, 281], "load_latest_polaris_gnu_openmpi": [278, 280, 295], "dst": 279, "calendar": 279, "network": 279, "introduct": 279, "platform": 279, "batch": 279, "wtrw": 279, "ch": 279, "fe": 279, "lustr": 279, "scratch4": 279, "scratch5": 279, "sacctmgr": 279, "assoc": 279, "cluster": 279, "45": 279, "sshare": 279, "sreport": 279, "accountutilizationbyus": 279, "2019": 279, "prioriti": 279, "yellow": 279, "chkhome": 279, "petabyt": 279, "df": 279, "bp": 279, "archiv": [279, 283], "hpss": [279, 283], "front": 279, "tn": 279, "storag": 279, "project_nam": 279, "salloc": [279, 282, 283], "account_nam": 279, "gpu": [279, 283], "hyperthread": [279, 283], "hang": [279, 283], "threads_per_cor": [279, 283], "shared_clim": [279, 295], "load_latest_polaris_gnu_mpich": [279, 283], "load_latest_polaris_intel_openmpi": 280, "compyf": 281, "app": [281, 295], "pmi2": 281, "40": 281, "submit": 282, "workload": 282, "squeue": 282, "my_usernam": [282, 283], "scancel": 282, "jobid": 282, "cancel": 282, "emtpi": 282, "three": [282, 301], "mpi_mpich": [282, 295], "mpi_openmpi": [282, 295], "nompi": [282, 295], "p1": 283, "nersc": 283, "iri": 283, "filesystem": 283, "myquota": 283, "prjquota": 283, "projectid": 283, "m1795": 283, "hsi": 283, "htar": 283, "zstash": 283, "cf": [283, 295], "cdir": [283, 295], "premium": 283, "cray_compil": 283, "8844": 283, "monik": 283, "browser": 283, "grab": 283, "logon": 283, "kernel": 283, "myenv": 283, "ipykernel": 283, "kernelspec": 283, "u1": 283, "interpret": 283, "argv": 283, "ipykernel_launch": 283, "connection_fil": 283, "display_nam": 283, "languag": 283, "2500": 285, "deepest": 285, "stewart": 285, "2017": 285, "delta": [285, 288, 293], "z_2": 285, "z_1": 285, "mathrm": 285, "tanh": 285, "rightarrow": 285, "infti": 285, "z_k": 285, "z_0": 285, "z_": [285, 293], "k": 285, "finder": 285, "n_z": 285, "h_": 285, "scienc": 285, "hydrograph": 285, "climatologi": 285, "250": 285, "5500": 285, "renorm": 285, "51": 285, "221": 285, "ziso": [285, 301], "63": 285, "floor": 285, "flat": [285, 288], "collaps": 285, "adcroft": 285, "campin": 285, "2004": 285, "absenc": 285, "squash": 285, "watercolumn": 285, "press": 285, "batymetri": 285, "stair": 285, "month": 286, "websit": [286, 296], "release_6": 286, "ilicak": 288, "2012": 288, "variat": 288, "distinguish": 288, "zonal": [288, 293], "meridion": [288, 293], "psu": [288, 293], "cooler": 288, "north": 288, "sinusoid": 288, "perturb": [288, 289, 292], "t_0": 288, "t_b": 288, "t_": 288, "z_b": 288, "y_": 288, "l_x": 288, "warmer": 288, "ge": [288, 289], "gradient_width_fract": 288, "l_y": 288, "le": [288, 293], "flow": [288, 289], "stationari": [288, 293], "literatur": 288, "mk": 288, "celsiu": 288, "prognost": 288, "williamson": 289, "1992": 289, "sec": 289, "3a": 289, "skamarock": 289, "gassmann": 289, "bodi": 289, "rotat": [289, 291, 292], "transport": 289, "psi": 289, "proportion": 289, "slow": 289, "icosohydr": 289, "nearest": 289, "insensit": [289, 293], "300": [289, 294], "passiv": 289, "psi_0": 289, "co": [289, 291, 292], "debug_tracers_1": 289, "equatori": 289, "u_0": 289, "tau": 289, "transit": 289, "equat": [289, 291, 292, 293], "vel_pd": 289, "tendenc": [289, 292], "rung": 289, "kutta": 289, "4th": 289, "multipli": 289, "globe": 289, "rad": 289, "lat_cent": 289, "lon_cent": 289, "14159265": 289, "2123666": 289, "6667": 289, "hill": 289, "psi0": 289, "qu_conv_thresh": 289, "icos_conv_max": 289, "circul": 289, "roughli": 289, "studi": 289, "propag": [291, 292], "doubli": [291, 292], "assess": [291, 292], "accuraci": [291, 292], "discret": [291, 292], "bishnu": [291, 292], "friction": [291, 292], "neglect": [291, 292], "nonlinear": [291, 292], "analyt": [291, 301], "k_x": [291, 292], "k_y": [291, 292], "availi": [291, 292], "10000": [291, 292], "coriloi": 291, "1e": 291, "amplitud": [291, 292], "ssh_amplitud": [291, 292], "wavelength": [291, 292], "n_wavelengths_x": [291, 292], "n_wavelengths_i": [291, 292], "conv_max": [291, 292], "embed": 292, "eta_0": 292, "span": 293, "arbitrarili": 293, "chosen": 293, "virtu": 293, "examin": 293, "400": 293, "phi": 293, "phi_0": 293, "dz": 293, "ml": 293, "mld": 293, "surface_x": 293, "x_gradient_mixed_lay": 293, "mixed_layer_depth_x": 293, "x_difference_across_mixed_lay": 293, "x_gradient_interior": 293, "spatial": 293, "4x4": 293, "960": 293, "degc": 293, "temperature_gradient_mixed_lay": 293, "temperature_difference_across_mixed_lay": 293, "temperature_gradient_interior": 293, "mixed_layer_depth_temperatur": 293, "surface_salin": 293, "salinity_gradient_mixed_lay": 293, "salinity_difference_across_mixed_lay": 293, "salinity_gradient_interior": 293, "mixed_layer_depth_salin": 293, "scheme": 293, "dictat": 293, "kpp": 293, "restor": 293, "piston": 293, "toward": 293, "temperature_surface_restoring_valu": 293, "temperature_piston_veloc": 293, "salinity_surface_restoring_valu": 293, "salinity_piston_veloc": 293, "temperature_interior_restoring_r": 293, "salinity_interior_restoring_r": 293, "net": 293, "latent": 293, "heat": 293, "bulk": 293, "latent_heat_flux": 293, "sensibl": 293, "sensible_heat_flux": 293, "solar": 293, "shortwav": 293, "shortwave_heat_flux": 293, "evapor": 293, "evaporation_flux": 293, "5e": 293, "rain": 293, "rain_flux": 293, "wind": 293, "wind_stress_zon": 293, "wind_stress_meridion": 293, "welcom": [294, 299], "icosohedr": [294, 299], "pertain": [294, 299], "inher": 294, "warrant": 294, "investig": 294, "load_latest_polari": 295, "minu": 295, "create_polaris_load_script": 295, "load_polaris_1": 295, "0_mpich": 295, "exclud": 295, "wiki": 295, "circular_shelf": 295, "sia_smoke_test": 295, "sia_decomposition_test": 295, "sia_restart_test": 295, "fo_smoke_test": 295, "fo_decomposition_test": 295, "fo_restart_test": 295, "37": 295, "17": 295, "210131_test_new_branch": 295, "my_config": 295, "smaller": 295, "previous_workdir": 295, "paper": 295, "recompil": 295, "safer": 295, "preserv": 295, "test_subdir": 295, "whatev": 295, "clock": 295, "j": 295, "exclus": 295, "job_nam": 295, "fo_integr": 295, "sia_integr": 295, "cosine_bell_cached_init": [295, 300], "ec30to60": 295, "ecwisc30to60": 295, "qu240_for_e3sm": 295, "quwisc240_for_e3sm": 295, "wc14": 295, "suitenam": 295, "seaice_standalone_framework": 296, "71": 298, "35n": 298, "156": 298, "5w": 298, "atmospher": 298, "timeseri": 298, "pair": 298, "prohibit": 300, "speed": 300, "radial": 301}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 3, 0, "-", "imp_res"], [61, 2, 1, "", "symlink"]], "polaris.job": [[62, 2, 1, "", "get_slurm_options"], [63, 2, 1, "", "write_job_script"]], "polaris.list": [[64, 2, 1, "", "list_cases"], [65, 2, 1, "", "list_machines"], [66, 2, 1, "", "list_suites"]], "polaris.logging": [[67, 2, 1, "", "log_method_call"]], "polaris.mesh": [[68, 0, 1, "", "IcosahedralMeshStep"], [75, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [70, 1, 1, "", "get_cell_width"], [71, 1, 1, "", "get_subdivisions"], [72, 1, 1, "", "make_jigsaw_mesh"], [73, 1, 1, "", "run"], [74, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, 1, 1, "", "__init__"], [76, 1, 1, "", "build_cell_width_lat_lon"], [77, 1, 1, "", "make_jigsaw_mesh"], [78, 1, 1, "", "run"], [79, 1, 1, "", "setup"]], "polaris.mesh.planar": [[80, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[81, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, 1, 1, "", "__init__"], [82, 1, 1, "", "run"], [83, 1, 1, "", "save_and_plot_cell_width"], [84, 1, 1, "", "setup"]], "polaris.model_step": [[85, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[86, 2, 1, "", "area_for_field"], [87, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[88, 2, 1, "", "ingest"], [89, 2, 1, "", "parse_replacements"], [90, 2, 1, "", "replace"], [91, 2, 1, "", "write"]], "polaris.ocean": [[140, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[140, 1, 1, "", "__init__"]], "polaris.ocean.convergence.spherical": [[141, 0, 1, "", "SphericalConvergenceAnalysis"], [148, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "compute_error"], [143, 1, 1, "", "convergence_parameters"], [144, 1, 1, "", "exact_solution"], [145, 1, 1, "", "get_output_field"], [146, 1, 1, "", "plot_convergence"], [147, 1, 1, "", "run"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[148, 1, 1, "", "__init__"]], "polaris.ocean.mesh.spherical": [[149, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[150, 0, 1, "", "OceanModelStep"], [155, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "compute_cell_count"], [152, 1, 1, "", "constrain_resources"], [153, 1, 1, "", "map_yaml_to_namelist"], [154, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[156, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[157, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[158, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[158, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[159, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[159, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[160, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "compute_cell_count"], [162, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[163, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "run"], [165, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[166, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[166, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[167, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[169, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[171, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"], [173, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[174, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[174, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[175, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[177, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[179, 0, 1, "", "CosineBell"], [181, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[182, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[184, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "compute_cell_count"], [186, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[187, 0, 1, "", "Init"], [189, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[190, 0, 1, "", "Viz"], [192, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[194, 0, 1, "", "InertialGravityWave"], [195, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[194, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[196, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[198, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "normal_velocity"], [200, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[201, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "compute_cell_count"], [203, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[204, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[206, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[208, 0, 1, "", "ManufacturedSolution"], [209, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[208, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[210, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[212, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "normal_velocity"], [214, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[215, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "compute_cell_count"], [217, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[218, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[218, 1, 1, "", "__init__"], [219, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[220, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[220, 1, 1, "", "__init__"], [221, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[222, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[223, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[223, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[224, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[224, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[225, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[225, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[226, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[228, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[230, 2, 1, "", "generate_1d_grid"], [231, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[232, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[233, 2, 1, "", "alter_bottom_depth"], [234, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[235, 2, 1, "", "compute_min_max_level_cell"], [236, 2, 1, "", "compute_z_level_layer_thickness"], [237, 2, 1, "", "compute_z_level_resting_thickness"], [238, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[239, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[92, 2, 1, "", "get_available_parallel_resources"], [93, 2, 1, "", "get_parallel_command"], [94, 2, 1, "", "run_command"], [95, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[96, 2, 1, "", "write"]], "polaris.remap": [[97, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[97, 1, 1, "", "__init__"], [98, 1, 1, "", "dst_from_lon_lat"], [99, 1, 1, "", "dst_from_mpas"], [100, 1, 1, "", "dst_from_points"], [101, 1, 1, "", "dst_from_proj"], [102, 1, 1, "", "dst_global_lon_lat"], [103, 1, 1, "", "get_remapper"], [104, 1, 1, "", "runtime_setup"], [105, 1, 1, "", "src_from_lon_lat"], [106, 1, 1, "", "src_from_mpas"], [107, 1, 1, "", "src_from_proj"]], "polaris.run": [[108, 2, 1, "", "complete_step_run"], [109, 2, 1, "", "load_dependencies"], [112, 2, 1, "", "setup_config"], [113, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[110, 2, 1, "", "run_single_step"], [111, 2, 1, "", "run_tasks"]], "polaris.seaice": [[260, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[260, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[261, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[262, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[262, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[263, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[263, 1, 1, "", "__init__"], [264, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[265, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[265, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[266, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[266, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[267, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[267, 1, 1, "", "__init__"], [268, 1, 1, "", "run"]], "polaris.setup": [[114, 2, 1, "", "setup_task"], [115, 2, 1, "", "setup_tasks"]], "polaris.streams": [[116, 2, 1, "", "read"], [117, 2, 1, "", "update_defaults"], [118, 2, 1, "", "update_tree"], [119, 2, 1, "", "write"]], "polaris.suite": [[120, 2, 1, "", "setup_suite"]], "polaris.validate": [[121, 2, 1, "", "compare_variables"]], "polaris.viz": [[122, 2, 1, "", "plot_global_field"], [123, 2, 1, "", "plot_horiz_field"], [124, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[125, 0, 1, "", "PolarisYaml"], [129, 2, 1, "", "main_mpas_to_yaml"], [130, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [131, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "read"], [127, 1, 1, "", "update"], [128, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 276], "share": [1, 6, 9, 256, 276], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 138, 253, 276, 288, 289, 291, 292, 293, 294, 299], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 73, 78, 82, 108, 109, 110, 111, 112, 113, 139, 147, 164, 172, 176, 178, 188, 191, 193, 197, 205, 207, 211, 219, 221, 227, 229, 253, 257, 264, 268, 288, 289, 291, 292, 293, 294, 295, 298, 299], "onc": 1, "befor": 1, "depend": [1, 6, 253], "output": [1, 253, 276], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 138, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 245, 249, 252, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 271, 276, 290, 294, 295, 297, 299, 301], "work": 1, "directori": [1, 251], "structur": [1, 251], "i": [1, 295], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 257, 275, 277, 295], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 139, 253, 257, 282], "other": [1, 136, 253, 276, 282, 295], "implement": [1, 2], "set": [1, 139, 257, 295], "up": [1, 257, 295], "test": [1, 2, 6, 138, 139, 276, 277, 298], "And": 1, "valid": [1, 2, 3, 18, 121, 175, 176, 243, 263, 264, 276, 295], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 139, 257, 276, 278, 279, 280, 281, 282, 283, 288, 289, 291, 292, 293, 294, 298, 299], "same": 2, "api": 3, "refer": [3, 138, 139], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 139, 240, 250, 256, 257, 269, 286, 295, 296], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 253, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 275, 295], "framework": [3, 10, 138, 139, 243, 244, 246, 247, 248, 256, 259, 272, 284], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 64, 65, 66], "setup": [3, 5, 8, 36, 47, 58, 74, 79, 84, 114, 115, 154, 165, 173, 253], "suit": [3, 5, 8, 120, 254, 287, 295, 300], "cach": [3, 5, 8, 55, 253], "mpas_to_yaml": [3, 5], "base": [3, 138], "class": [3, 256], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 136, 139, 250, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 291, 292, 293, 294, 298, 299], "io": [3, 11, 59, 60, 61], "job": [3, 62, 63, 282, 295], "log": [3, 12, 67], "mesh": [3, 13, 14, 19, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 138, 139, 149, 276, 288, 289, 291, 292, 293, 294, 298, 299], "model_step": [3, 85], "mpa": [3, 6, 15, 86, 87, 139, 242, 270], "namelist": [3, 14, 88, 89, 90, 91, 139], "parallel": [3, 92, 93, 94, 95], "proven": [3, 16, 96], "remap": [3, 17, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "stream": [3, 14, 116, 117, 118, 119, 139, 276], "viz": [3, 122, 123, 124, 177, 178, 190, 191, 192, 193, 206, 207, 220, 221, 228, 229, 244, 246, 247, 248, 267, 268, 272, 276], "yaml": [3, 14, 125, 126, 127, 128, 129, 130, 131, 139], "build": [4, 136, 257, 295], "serial": [5, 8, 110, 111], "deploi": 6, "new": [6, 136, 276], "spack": [6, 136, 257, 295], "environ": [6, 136, 257, 273, 295], "where": 6, "we": 6, "updat": [6, 14, 127, 257], "mach": 6, "conda": [6, 257, 273, 282, 295], "identifi": 6, "e3sm": [6, 14, 139, 257, 295], "machin": [6, 136, 257, 282, 295], "describ": [6, 136], "modul": [6, 8, 256, 257], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 257, 276], "remot": [6, 283], "branch": 6, "petsc": [6, 257], "netlib": [6, 257], "lapack": [6, 257], "albani": [6, 257], "troubleshoot": [6, 257, 273], "ocean": [6, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 286], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 136, 139, 250, 253, 276, 277], "comment": 9, "symlink": [11, 61, 253], "download": [11, 59, 253], "spheric": [13, 19, 81, 82, 83, 84, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149], "planar": [13, 19, 80], "uniform": [13, 139, 285], "gener": 13, "model": [14, 138, 139, 150, 151, 152, 153, 154, 155, 241, 270, 276, 295], "an": [14, 139, 276], "ad": [14, 136, 253, 276], "dynam": [14, 276], "input": [14, 253], "partit": [14, 32], "pio": 14, "make": [14, 276], "graph": 14, "area": 15, "time": [15, 139, 276, 288, 289, 291, 292, 293, 294, 299], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 276, 298], "common": 19, "matplotlib": 19, "style": [19, 256, 257], "horizont": [19, 276], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 276], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 162, 168, 186, 203, 217], "map_yaml_to_namelist": [31, 153], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 104, 253], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 152, 253], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 170, 180, 255, 273], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "imp_r": 60, "get_slurm_opt": 62, "write_job_script": 63, "list_cas": 64, "list_machin": 65, "list_suit": 66, "log_method_cal": 67, "icosahedralmeshstep": [68, 69, 70, 71, 72, 73, 74], "build_subdivisions_cell_width_lat_lon": 69, "get_cell_width": 70, "get_subdivis": 71, "make_jigsaw_mesh": [72, 77], "quasiuniformsphericalmeshstep": [75, 76, 77, 78, 79], "build_cell_width_lat_lon": 76, "compute_planar_hex_nx_ni": 80, "sphericalbasestep": [81, 82, 83, 84], "save_and_plot_cell_width": 83, "make_graph_fil": 85, "area_for_field": 86, "time_index_from_xtim": 87, "ingest": 88, "parse_replac": 89, "replac": 90, "write": [91, 96, 119, 128], "get_available_parallel_resourc": 92, "get_parallel_command": 93, "run_command": 94, "set_cores_per_nod": 95, "mappingfilestep": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "dst_from_lon_lat": 98, "dst_from_mpa": 99, "dst_from_point": 100, "dst_from_proj": 101, "dst_global_lon_lat": 102, "get_remapp": 103, "src_from_lon_lat": 105, "src_from_mpa": 106, "src_from_proj": 107, "complete_step_run": 108, "load_depend": 109, "run_single_step": 110, "run_task": 111, "setup_config": 112, "unpickle_suit": 113, "setup_task": [114, 115], "read": [116, 126], "update_default": 117, "update_tre": 118, "setup_suit": 120, "compare_vari": 121, "plot_global_field": 122, "plot_horiz_field": 123, "use_mplstyl": 124, "polarisyaml": [125, 126, 127, 128], "main_mpas_to_yaml": 129, "mpas_namelist_and_streams_to_yaml": 130, "yaml_to_mpas_stream": 131, "anvil": [132, 278], "intel": [132, 134, 135, 278, 280, 281], "gnu": [132, 133, 134, 135, 137, 278, 279, 280, 283], "chicoma": [133, 279], "cpu": [133, 137, 279, 283], "chrysali": [134, 280], "compymcnodefac": [135, 281], "support": [136, 241, 257, 270, 282, 295], "perlmutt": [137, 283], "pm": 137, "baroclinic_channel": [138, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 243], "inertial_gravity_wav": [138, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 246], "cosine_bel": [138, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 244, 287], "manufactured_solut": [138, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 247], "single_column": [138, 222, 223, 224, 225, 226, 227, 228, 229, 248, 258, 261, 262, 263, 264, 265, 266, 267, 268, 272], "converg": [138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 292], "potenti": [138, 139], "energi": [138, 139], "rpe": [138, 139, 156, 169, 170, 171, 172, 173, 243, 288], "vertic": [138, 139, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 276, 285, 288, 289, 291, 292, 293, 294], "coordin": [138, 139, 276, 285], "v": 139, "map": 139, "omega": 139, "mpi": [139, 282], "resourc": 139, "interv": 139, "quasi": 139, "icosahedr": 139, "rest": 139, "sphericalconvergenceanalysi": [141, 142, 143, 144, 145, 146, 147], "compute_error": 142, "convergence_paramet": 143, "exact_solut": [144, 183, 198, 199, 200, 212, 213, 214, 246, 247], "get_output_field": 145, "plot_converg": 146, "sphericalconvergenceforward": 148, "add_spherical_base_mesh_step": 149, "oceanmodelstep": [150, 151, 152, 153, 154], "compute_cell_count": [151, 161, 185, 202, 216], "get_time_interval_str": 155, "compute_rp": 156, "add_baroclinic_channel_task": 157, "decomp": [158, 243, 288], "default": [159, 243, 276, 288], "forward": [160, 161, 162, 184, 185, 186, 201, 202, 203, 215, 216, 217, 224, 243, 244, 246, 247, 248, 265, 272, 276], "init": [163, 164, 165, 187, 188, 189, 204, 205, 218, 219, 226, 227, 243, 244, 246, 247, 248, 276], "restart": [166, 167, 168, 243, 288, 298], "restart_step": [167, 168], "restartstep": [167, 168], "analysi": [171, 172, 173, 182, 183, 196, 197, 210, 211, 244, 246, 247, 276], "thread": [174, 243, 288], "cosinebel": [179, 180], "add_cosine_bell_task": 181, "vizmap": [192, 193], "inertialgravitywav": 194, "add_inertial_gravity_wave_task": 195, "exactsolut": [198, 199, 200, 212, 213, 214], "normal_veloc": [199, 213], "ssh": [200, 214], "manufacturedsolut": 208, "add_manufactured_solution_task": 209, "add_single_column_task": [222, 261], "cvmix": [223, 248, 293], "ideal_ag": 225, "idealag": 225, "grid_1d": [230, 231], "generate_1d_grid": 230, "write_1d_grid": 231, "init_vertical_coord": 232, "partial_cel": [233, 234], "alter_bottom_depth": 233, "alter_ssh": 234, "zlevel": [235, 236, 237, 238], "compute_min_max_level_cel": 235, "compute_z_level_layer_thick": 236, "compute_z_level_resting_thick": 237, "init_z_level_vertical_coord": 238, "zstar": 239, "init_z_star_vertical_coord": 239, "initi": [242, 270, 276, 288, 289, 291, 292, 293, 294, 298, 299], "condit": [242, 270, 276, 288, 289, 291, 292, 293, 294, 298, 299], "boundari": 242, "forc": [242, 270, 288, 289, 291, 292, 293, 294, 298, 299], "base_mesh": 244, "ideal": [248, 293], "ag": [248, 293], "categori": [249, 294, 299], "constructor": [250, 253, 255], "organ": 252, "attribut": [253, 255], "copi": 253, "pull": 254, "request": 254, "pr": 254, "nightli": 254, "overview": 256, "code": [256, 257, 276], "packag": 256, "within": 256, "group": [256, 276], "relat": 256, "quick": [257, 295], "start": [257, 276, 295], "develop": [257, 275, 276], "unix": 257, "shell": 257, "repositori": 257, "beginn": 257, "compil": 257, "system": 257, "unknown": 257, "what": 257, "script": [257, 295], "doe": 257, "flag": 257, "activ": 257, "switch": 257, "between": [257, 276], "differ": 257, "onli": 257, "repo": 257, "worktre": 257, "advanc": 257, "seaic": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "exact_restart": [262, 263, 264], "exactrestart": 262, "standard_phys": [266, 267, 268], "standardphys": 266, "standard_physics_test": 272, "exact_restart_test": 272, "solver": 273, "error": 273, "when": 273, "proxi": 273, "lanl": 273, "mac": 273, "gethostbynam": 273, "fail": 273, "glossari": [274, 275], "": 275, "guid": 275, "tutori": [275, 276], "compass": 275, "get": 276, "vari": 276, "resolut": 276, "paramet": 276, "thing": 276, "out": 276, "defin": 276, "more": 276, "again": 276, "one": 276, "second": 276, "enhanc": 276, "comput": 276, "cell": 276, "count": 276, "superclass": 276, "studi": 276, "how": 276, "pass": 276, "data": [276, 283], "A": 277, "case": 277, "slurm": 282, "queue": 282, "mpich": 282, "openmpi": 282, "No": 282, "forg": 282, "jupyt": 283, "notebook": 283, "1d": 285, "grid": [285, 288, 289, 291, 292, 293, 294], "type": 285, "tanh_dz": 285, "60layerphc": 285, "100layere3smv1": 285, "3d": 285, "z": 285, "star": 285, "level": 285, "cosine_bell_cached_init": 287, "baroclin": 288, "channel": 288, "descript": [288, 289, 291, 292, 293, 294, 298, 299], "durat": [288, 289, 291, 292, 293, 294, 298, 299], "core": [288, 289, 291, 292, 293, 294, 298, 299], "cosin": 289, "bell": 289, "inerti": 291, "graviti": 291, "wave": 291, "manufactur": 292, "solut": 292, "singl": [293, 298], "column": [293, 298], "task_nam": [294, 299], "yet": 295, "load": 295, "standalon": 295, "sea": 296, "ic": 296, "standard": 298, "physic": 298, "timestep": 298, "exact": 298}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [250, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [288, "mesh"], [288, "id2"], [288, "id9"], [288, "id17"], [288, "id25"], [288, "id32"], [289, "mesh"], [291, "mesh"], [292, "mesh"], [293, "mesh"], [293, "id3"], [293, "id8"], [294, "mesh"], [298, "mesh"], [298, "id1"], [298, "id6"], [299, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [243, "validate"]], "viz": [[3, "viz"], [244, "viz"], [246, "viz"], [247, "viz"], [248, "viz"], [272, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [276, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [284, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [139, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [139, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[19, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.imp_res": [[60, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[61, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[62, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[63, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[64, "polaris-list-list-cases"]], "polaris.list.list_machines": [[65, "polaris-list-list-machines"]], "polaris.list.list_suites": [[66, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[67, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[68, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[69, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[70, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[71, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[72, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[73, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[74, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[75, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[79, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[80, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[81, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[82, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[83, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[84, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[85, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[86, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[87, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[88, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[89, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[90, "polaris-namelist-replace"]], "polaris.namelist.write": [[91, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[92, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[93, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[94, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[95, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[96, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[97, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[98, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[99, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[100, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[101, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[102, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[103, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[104, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[105, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[106, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[107, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[108, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[109, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[110, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[111, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[112, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[113, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[114, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[115, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[116, "polaris-streams-read"]], "polaris.streams.update_defaults": [[117, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[118, "polaris-streams-update-tree"]], "polaris.streams.write": [[119, "polaris-streams-write"]], "polaris.suite.setup_suite": [[120, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[121, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_field": [[122, "polaris-viz-plot-global-field"]], "polaris.viz.plot_horiz_field": [[123, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[124, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[125, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[126, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[127, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[128, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[129, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[130, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[131, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[132, "anvil"], [278, "anvil"]], "intel": [[132, "intel"], [134, "intel"], [135, "intel"]], "gnu": [[132, "gnu"], [134, "gnu"], [135, "gnu"]], "Chicoma": [[133, "chicoma"], [279, "chicoma"]], "chicoma-cpu, gnu": [[133, "chicoma-cpu-gnu"]], "Chrysalis": [[134, "chrysalis"], [280, "chrysalis"]], "CompyMcNodeFace": [[135, "compymcnodeface"], [281, "compymcnodeface"]], "Machines": [[136, "machines"], [282, "machines"]], "Supported Machines": [[136, "supported-machines"], [282, "supported-machines"]], "Other Machines": [[136, "other-machines"], [282, "other-machines"]], "Adding a New Supported Machine": [[136, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[136, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[136, "describing-a-spack-environment"]], "Building the Spack Environment": [[136, "building-the-spack-environment"]], "Perlmutter": [[137, "perlmutter"], [283, "perlmutter"]], "pm-cpu, gnu": [[137, "pm-cpu-gnu"]], "ocean": [[138, "ocean"]], "Tasks": [[138, "tasks"], [245, "tasks"], [255, "tasks"], [258, "tasks"], [271, "tasks"], [290, "tasks"], [297, "tasks"], [301, "tasks"]], "baroclinic_channel": [[138, "baroclinic-channel"], [243, "baroclinic-channel"]], "inertial_gravity_wave": [[138, "inertial-gravity-wave"], [246, "inertial-gravity-wave"]], "cosine_bell": [[138, "cosine-bell"], [244, "cosine-bell"]], "manufactured_solution": [[138, "manufactured-solution"], [247, "manufactured-solution"]], "single_column": [[138, "single-column"], [248, "single-column"], [258, "single-column"], [272, "single-column"]], "Ocean Framework": [[138, "ocean-framework"]], "Spherical Convergence Tests": [[138, "spherical-convergence-tests"], [139, "spherical-convergence-tests"]], "Ocean Model": [[138, "ocean-model"]], "Spherical Base Mesh Step": [[138, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[138, "reference-potential-energy-rpe"]], "Vertical coordinates": [[138, "vertical-coordinates"]], "Ocean framework": [[139, "ocean-framework"]], "YAML files vs. namelists and streams": [[139, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[139, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[139, "setting-mpi-resources"]], "Setting time intervals in model config options": [[139, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[139, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[139, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[139, "vertical-coordinate"], [285, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[139, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[140, "polaris-ocean-ocean"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis": [[141, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error": [[142, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-compute-error"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters": [[143, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution": [[144, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-exact-solution"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.get_output_field": [[145, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-get-output-field"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence": [[146, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run": [[147, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-run"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[148, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[149, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[150, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[151, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[152, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[153, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[154, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[155, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[156, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[157, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[158, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[159, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[160, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[161, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[162, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[163, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[164, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[165, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[166, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[167, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[168, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[169, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[170, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[171, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[172, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[173, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[174, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[175, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[176, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[177, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[178, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[179, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[180, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[181, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[182, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[183, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[184, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[185, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[186, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[187, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[188, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[189, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[190, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[191, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[192, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[193, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[194, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[195, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[196, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[197, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[198, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[199, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[200, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[201, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[202, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[203, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[204, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[205, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[206, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[207, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[208, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[209, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[210, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[211, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[212, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[213, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[214, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[215, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[216, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[217, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[218, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[219, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[220, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[221, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[222, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[223, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[224, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[225, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[226, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[227, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[228, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[229, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[230, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[231, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[232, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[233, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[234, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[235, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[236, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[237, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[238, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[239, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[240, "ocean-component"], [286, "ocean-component"]], "Models": [[241, "models"]], "Supported Models": [[241, "supported-models"]], "MPAS-Ocean": [[242, "mpas-ocean"]], "Initial conditions": [[242, "initial-conditions"], [270, "initial-conditions"]], "Boundary conditions": [[242, "boundary-conditions"]], "Forcing": [[242, "forcing"], [270, "forcing"]], "framework": [[243, "framework"], [244, "framework"], [246, "framework"], [247, "framework"], [248, "framework"], [272, "framework"]], "init": [[243, "init"], [244, "init"], [246, "init"], [247, "init"], [248, "init"]], "forward": [[243, "forward"], [244, "forward"], [246, "forward"], [247, "forward"], [248, "forward"], [272, "forward"]], "default": [[243, "default"], [288, "default"]], "decomp": [[243, "decomp"], [288, "decomp"]], "restart": [[243, "restart"], [288, "restart"]], "threads": [[243, "threads"]], "rpe": [[243, "rpe"], [288, "rpe"]], "base_mesh": [[244, "base-mesh"]], "analysis": [[244, "analysis"], [246, "analysis"], [247, "analysis"]], "exact_solution": [[246, "exact-solution"], [247, "exact-solution"]], "cvmix": [[248, "cvmix"], [293, "cvmix"]], "ideal age": [[248, "ideal-age"], [293, "ocean-single-column-ideal-age"]], "Categories of tasks": [[249, "categories-of-tasks"]], "Constructor": [[250, "constructor"]], "Config file": [[250, "config-file"]], "Directory structure": [[251, "directory-structure"]], "Organization of Tasks": [[252, "organization-of-tasks"]], "Steps": [[253, "steps"]], "Step attributes": [[253, "step-attributes"]], "constructor": [[253, "constructor"], [255, "constructor"]], "setup()": [[253, "setup"]], "constrain_resources()": [[253, "constrain-resources"]], "runtime_setup()": [[253, "runtime-setup"]], "run()": [[253, "run"]], "inputs and outputs": [[253, "inputs-and-outputs"]], "Input files": [[253, "input-files"]], "Symlinks to input files": [[253, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[253, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[253, "downloading-and-symlinking-input-files"]], "Copying input files": [[253, "copying-input-files"]], "Output files": [[253, "output-files"]], "Cached output files": [[253, "cached-output-files"]], "Adding other steps as dependencies": [[253, "adding-other-steps-as-dependencies"]], "Suites": [[254, "suites"], [287, "suites"], [295, "suites"], [300, "suites"]], "Pull-Request (PR) suite": [[254, "pull-request-pr-suite"]], "Nightly suite": [[254, "nightly-suite"]], "Task attributes": [[255, "task-attributes"]], "configure()": [[255, "configure"]], "Overview": [[256, "overview"]], "Code Style": [[256, "code-style"]], "Packages and Modules": [[256, "packages-and-modules"]], "Packages": [[256, "packages"]], "Modules": [[256, "modules"]], "Classes": [[256, "classes"]], "Code sharing": [[256, "code-sharing"]], "\u2026in the polaris framework": [[256, "in-the-polaris-framework"]], "\u2026within a component": [[256, "within-a-component"]], "\u2026within a group of related tasks": [[256, "within-a-group-of-related-tasks"]], "\u2026within a task": [[256, "within-a-task"]], "Quick Start for Developers": [[257, "quick-start-for-developers"]], "Unix Shell": [[257, "unix-shell"]], "Set up a polaris repository: for beginners": [[257, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[257, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[257, "supported-machines"]], "Environments with Albany": [[257, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[257, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[257, "unknown-machines"]], "What the script does": [[257, "what-the-script-does"]], "Optional flags": [[257, "optional-flags"]], "Activating the environment": [[257, "activating-the-environment"]], "Switching between different polaris environments": [[257, "switching-between-different-polaris-environments"]], "Troubleshooting": [[257, "troubleshooting"], [273, "troubleshooting"]], "Creating/updating only the polaris environment": [[257, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[257, "building-e3sm-components"]], "Running polaris from the repo": [[257, "running-polaris-from-the-repo"]], "Code style for polaris": [[257, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[257, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[258, "seaice"]], "SeaIce framework": [[259, "seaice-framework"]], "polaris.seaice.SeaIce": [[260, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[261, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[262, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[263, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[264, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[265, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[266, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[267, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[268, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[269, "seaice-component"]], "Supported Model: MPAS-Seaice": [[270, "supported-model-mpas-seaice"]], "standard_physics_test": [[272, "standard-physics-test"]], "exact_restart_test": [[272, "exact-restart-test"]], "Solver errors when configuring conda environment": [[273, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[273, "proxy-on-lanl-macs"]], "gethostbyname failed": [[273, "gethostbyname-failed"]], "Glossary": [[274, "glossary"], [275, null]], "Polaris": [[275, "polaris"]], "User's guide": [[275, null]], "Developer's guide": [[275, null]], "Tutorials": [[275, null]], "Compass": [[275, "compass"]], "Developer Tutorial: Adding a new test group": [[276, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[276, "getting-started"]], "Making a new test group": [[276, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[276, "adding-a-default-task"]], "Varying resolution and other parameters": [[276, "varying-resolution-and-other-parameters"]], "Adding the init step": [[276, "adding-the-init-step"]], "Creating a horizontal mesh": [[276, "creating-a-horizontal-mesh"]], "Adding a config file": [[276, "adding-a-config-file"]], "Adding the step to the task": [[276, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[276, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[276, "creating-an-initial-condition"]], "Adding plots": [[276, "adding-plots"]], "Adding step outputs": [[276, "adding-step-outputs"]], "Adding validation": [[276, "adding-validation"], [276, "id1"]], "Test things out!": [[276, "test-things-out"]], "Adding the forward step": [[276, "adding-the-forward-step"]], "Defining model config options and streams": [[276, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[276, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[276, "adding-more-validation"]], "Test the task again!": [[276, "test-the-task-again"]], "Adding a visualization step": [[276, "adding-a-visualization-step"]], "Adding the viz step to the task": [[276, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[276, "test-the-task-one-more-time"]], "Adding a second task": [[276, "adding-a-second-task"]], "Enhancements": [[276, "enhancements"]], "Adding model config options in code": [[276, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[276, "adding-dynamic-model-config-options"]], "Computing the cell count": [[276, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[276, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[276, "adding-a-parameter-study"]], "Adding the steps to the task": [[276, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[276, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[276, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[277, "config-files"]], "A \u201cuser\u201d config file": [[277, "a-user-config-file"]], "Test-case config files": [[277, "test-case-config-files"]], "config options": [[278, "config-options"], [279, "config-options"], [280, "config-options"], [281, "config-options"], [282, "config-options"], [283, "config-options"], [288, "config-options"], [288, "id7"], [288, "id14"], [288, "id22"], [288, "id30"], [288, "id37"], [289, "config-options"], [291, "config-options"], [292, "config-options"], [293, "config-options"], [293, "id1"], [293, "id6"], [293, "id13"], [294, "config-options"], [298, "config-options"], [298, "id5"], [298, "id10"], [299, "config-options"]], "Intel on Anvil": [[278, "intel-on-anvil"]], "Gnu on Anvil": [[278, "gnu-on-anvil"]], "Chicoma-CPU": [[279, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[279, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[280, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[280, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[281, "intel-on-compymcnodeface"]], "Slurm job queueing": [[282, "slurm-job-queueing"]], "MPICH": [[282, "mpich"]], "OpenMPI": [[282, "openmpi"]], "No MPI from conda-forge": [[282, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[283, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[283, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[283, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[285, "d-grid-type"]], "uniform": [[285, "uniform"]], "tanh_dz": [[285, "tanh-dz"]], "60layerPHC": [[285, "layerphc"]], "100layerE3SMv1": [[285, "layere3smv1"]], "3D vertical coordinates": [[285, "d-vertical-coordinates"]], "z-star": [[285, "z-star"]], "z-level": [[285, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[287, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[288, "baroclinic-channel"]], "description": [[288, "description"], [288, "id1"], [288, "id8"], [288, "id16"], [288, "id24"], [289, "description"], [291, "description"], [292, "description"], [293, "description"], [293, "id2"], [293, "id7"], [294, "description"], [298, "description"], [299, "description"]], "vertical grid": [[288, "vertical-grid"], [288, "id3"], [288, "id10"], [288, "id18"], [288, "id26"], [288, "id33"], [289, "vertical-grid"], [291, "vertical-grid"], [292, "vertical-grid"], [293, "vertical-grid"], [293, "id4"], [293, "id9"], [294, "vertical-grid"]], "initial conditions": [[288, "initial-conditions"], [288, "id4"], [288, "id11"], [288, "id19"], [288, "id27"], [288, "id34"], [289, "initial-conditions"], [291, "initial-conditions"], [292, "initial-conditions"], [293, "initial-conditions"], [293, "id5"], [293, "id10"], [294, "initial-conditions"], [298, "initial-conditions"], [298, "id2"], [298, "id7"], [299, "initial-conditions"]], "forcing": [[288, "forcing"], [288, "id5"], [288, "id12"], [288, "id20"], [288, "id28"], [288, "id35"], [289, "forcing"], [291, "forcing"], [292, "forcing"], [293, "forcing"], [293, "id11"], [294, "forcing"], [298, "forcing"], [298, "id3"], [298, "id8"], [299, "forcing"]], "time step and run duration": [[288, "time-step-and-run-duration"], [288, "id6"], [288, "id13"], [288, "id21"], [288, "id29"], [288, "id36"], [289, "time-step-and-run-duration"], [291, "time-step-and-run-duration"], [292, "time-step-and-run-duration"], [293, "time-step-and-run-duration"], [293, "id12"], [294, "time-step-and-run-duration"], [299, "time-step-and-run-duration"]], "cores": [[288, "cores"], [288, "id15"], [288, "id23"], [288, "id31"], [288, "id38"], [289, "cores"], [291, "cores"], [292, "cores"], [293, "cores"], [293, "id14"], [294, "cores"], [298, "cores"], [298, "id4"], [298, "id9"], [299, "cores"]], "thread": [[288, "thread"]], "cosine bell": [[289, "cosine-bell"]], "inertial gravity wave": [[291, "inertial-gravity-wave"]], "manufactured solution": [[292, "manufactured-solution"]], "convergence": [[292, "convergence"]], "single column": [[293, "single-column"], [298, "single-column"]], "<Category of task>": [[294, "ocean-category-of-task"], [299, "seaice-category-of-task"]], "task_name": [[294, "task-name"], [299, "task-name"]], "Quick Start for Users": [[295, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[295, null]], "Loading polaris conda and spack environments": [[295, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[295, "e3sm-supported-machines"]], "Other machines": [[295, "other-machines"]], "Building supported E3SM components as standalone models": [[295, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[295, "setting-up-tasks"]], "Running a task": [[295, "running-a-task"]], "Running with a job script": [[295, "running-with-a-job-script"]], "Sea ice component": [[296, "sea-ice-component"]], "standard physics test": [[298, "standard-physics-test"]], "timestep and run duration": [[298, "timestep-and-run-duration"], [298, "id11"]], "visualization": [[298, "visualization"]], "exact restart test": [[298, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "module": [[60, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[60, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[61, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[62, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[63, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[64, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[65, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[66, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[67, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[68, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[69, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[71, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[74, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[79, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[80, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[81, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[84, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[85, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[86, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[87, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[88, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[89, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[90, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[91, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[92, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[93, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[94, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[95, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[96, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[97, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[107, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[108, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[109, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[111, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[112, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[113, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[114, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[115, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[116, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[117, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[118, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[119, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[120, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[121, "polaris.validate.compare_variables"]], "plot_global_field() (in module polaris.viz)": [[122, "polaris.viz.plot_global_field"]], "plot_horiz_field() (in module polaris.viz)": [[123, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[124, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[125, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[125, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[126, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[127, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[128, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[129, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[130, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[131, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[140, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[140, "polaris.ocean.Ocean.__init__"]], "sphericalconvergenceanalysis (class in polaris.ocean.convergence.spherical)": [[141, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[141, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[142, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[143, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[144, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[145, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[146, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[147, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[148, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[148, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[149, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[150, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[150, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[151, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[152, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[153, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[154, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[155, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[156, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[157, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[158, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[158, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[159, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[159, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[160, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[160, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[161, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[162, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[163, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[163, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[164, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[165, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[166, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[166, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[167, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[167, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[168, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[169, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[169, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[170, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[171, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[171, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[172, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[173, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[174, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[174, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[175, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[175, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[176, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[177, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[177, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[178, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[179, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[179, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[180, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[181, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[182, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[182, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[183, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[184, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[184, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[185, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[186, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[187, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[187, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[188, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[189, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[190, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[190, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[191, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[192, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[192, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[193, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[194, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[194, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[195, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[196, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[196, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[197, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[198, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[198, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[199, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[200, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[201, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[201, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[202, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[203, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[204, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[204, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[205, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[206, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[206, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[207, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[208, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[208, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[209, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[210, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[210, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[211, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[212, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[212, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[213, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[214, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[215, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[215, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[216, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[217, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[218, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[218, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[219, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[220, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[220, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[221, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[222, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[223, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[223, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[224, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[224, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[225, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[225, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[226, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[226, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[227, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[228, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[228, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[229, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[230, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[231, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[232, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[233, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[234, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[235, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[236, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[237, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[238, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[239, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[260, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[260, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[261, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[262, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[262, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[263, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[263, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[264, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[265, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[265, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[266, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[266, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[267, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[267, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[268, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})