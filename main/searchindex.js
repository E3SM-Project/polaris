Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.Restart.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads.Threads.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/inertial_gravity_wave", "developers_guide/ocean/test_groups/manufactured_solution", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.SingleColumn", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/models/index", "developers_guide/seaice/models/mpas_seaice", "developers_guide/seaice/test_groups/index", "developers_guide/seaice/test_groups/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/inertial_gravity_wave", "users_guide/ocean/test_groups/manufactured_solution", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/test_groups/index", "users_guide/seaice/test_groups/single_column", "users_guide/seaice/test_groups/template", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.Restart.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads.Threads.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/inertial_gravity_wave.md", "developers_guide/ocean/test_groups/manufactured_solution.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.SingleColumn.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/models/index.md", "developers_guide/seaice/models/mpas_seaice.md", "developers_guide/seaice/test_groups/index.md", "developers_guide/seaice/test_groups/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/inertial_gravity_wave.md", "users_guide/ocean/test_groups/manufactured_solution.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/test_groups/index.md", "users_guide/seaice/test_groups/single_column.md", "users_guide/seaice/test_groups/template.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp.Decomp", "polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.init.Init", "polaris.ocean.tests.baroclinic_channel.init.Init.run", "polaris.ocean.tests.baroclinic_channel.init.Init.setup", "polaris.ocean.tests.baroclinic_channel.restart.Restart", "polaris.ocean.tests.baroclinic_channel.restart.Restart.validate", "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe.Rpe", "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate", "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads.Threads", "polaris.ocean.tests.baroclinic_channel.threads.Threads.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tests.inertial_gravity_wave.init.Init", "polaris.ocean.tests.inertial_gravity_wave.init.Init.run", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tests.manufactured_solution.ManufacturedSolution", "polaris.ocean.tests.manufactured_solution.analysis.Analysis", "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tests.manufactured_solution.convergence.Convergence", "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate", "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tests.manufactured_solution.forward.Forward", "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tests.manufactured_solution.init.Init", "polaris.ocean.tests.manufactured_solution.init.Init.run", "polaris.ocean.tests.manufactured_solution.viz.Viz", "polaris.ocean.tests.manufactured_solution.viz.Viz.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.ideal_age.IdealAge", "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tests.single_column.init.Init", "polaris.ocean.tests.single_column.init.Init.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "inertial_gravity_wave", "manufactured_solution", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "seaice", "Seaice framework", "polaris.seaice.SeaIce", "polaris.seaice.tests.single_column.SingleColumn", "polaris.seaice.tests.single_column.exact_restart.ExactRestart", "polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate", "polaris.seaice.tests.single_column.forward.Forward", "polaris.seaice.tests.single_column.standard_physics.StandardPhysics", "polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate", "polaris.seaice.tests.single_column.standard_physics.viz.Viz", "polaris.seaice.tests.single_column.standard_physics.viz.Viz.run", "Seaice component", "Models", "MPAS-Seaice", "Test groups", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "inertial gravity wave", "manufactured_solution", "single_column", "test_group_name", "Quick Start for Users", "Sea ice component", "Test groups", "single_column", "test_group_name", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 104, 114, 118, 144, 151, 264, 265, 266], "date": [1, 4, 48, 228, 245, 257, 266], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 72, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 118, 119, 124, 127, 128, 129, 130, 136, 138, 140, 142, 143, 145, 147, 148, 150, 152, 155, 157, 158, 160, 163, 166, 167, 169, 170, 172, 174, 176, 179, 181, 186, 187, 189, 191, 194, 196, 201, 202, 204, 206, 209, 211, 212, 214, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 250, 252, 253, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289], "purpos": [1, 45, 243, 244, 263, 265, 289], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 55, 59, 60, 61, 64, 65, 67, 68, 69, 70, 73, 74, 83, 84, 86, 87, 93, 99, 109, 110, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 135, 136, 138, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 228, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 249, 250, 252, 253, 255, 256, 257, 261, 262, 263, 264, 265, 266, 268, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284, 288, 290], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 68, 111, 115, 127, 129, 132, 218, 220, 226, 227, 228, 236, 237, 240, 241, 243, 244, 245, 257, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 278, 282, 283, 284, 288], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 67, 68, 73, 83, 84, 87, 91, 97, 98, 99, 102, 104, 106, 109, 110, 112, 114, 119, 120, 122, 123, 124, 127, 129, 130, 142, 143, 144, 151, 170, 171, 186, 187, 188, 201, 202, 203, 211, 220, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 287, 288, 289, 290], "summar": 1, "what": [1, 9, 11, 14, 124, 244, 265, 272, 283, 284, 288], "capabl": [1, 14, 124, 240, 244, 265, 271, 284], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 110, 136, 147, 157, 220, 226, 227, 242, 243, 245, 259, 264, 267, 268, 269, 270, 272, 284], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 120, 122, 123, 124, 127, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 243, 247, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 285, 289, 290], "through": [1, 103, 244, 245, 259, 265], "process": [1, 6, 12, 27, 83, 84, 119, 240, 244, 245, 257, 263, 264, 265], "It": [1, 4, 12, 14, 32, 38, 111, 231, 234, 235, 240, 241, 242, 243, 244, 245, 263, 265, 266, 271, 280, 281], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 55, 68, 102, 103, 110, 111, 112, 120, 121, 122, 123, 124, 125, 127, 132, 147, 157, 228, 237, 240, 241, 242, 243, 245, 247, 257, 259, 262, 265, 266, 277, 278, 282, 283, 284, 288], "clear": [1, 244, 265], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 60, 67, 73, 87, 105, 106, 142, 150, 169, 183, 186, 198, 201, 211, 220, 226, 227, 240, 244, 245, 259, 262, 263, 264, 284], "code": [1, 4, 5, 7, 10, 12, 32, 127, 228, 237, 240, 241, 242, 247, 257, 263, 264, 266, 273, 277, 282, 284], "do": [1, 4, 7, 9, 12, 14, 15, 114, 240, 242, 245, 262, 263, 265, 271, 278, 284], "current": [1, 4, 6, 9, 19, 29, 32, 39, 109, 110, 124, 129, 211, 228, 232, 236, 237, 240, 244, 245, 247, 257, 259, 261, 263, 264, 265, 266, 271, 274, 277, 278, 280, 281, 282, 284, 289, 290], "doe": [1, 7, 10, 12, 240, 264, 265, 271], "primari": [1, 4, 7, 265, 290], "challeng": 1, "respect": [1, 6, 7, 12, 16, 127, 240, 244, 278, 283, 288], "softwar": [1, 77, 272, 284], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 109, 110, 111, 127, 174, 220, 226, 227, 228, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 265, 266, 271, 272, 274, 278, 280, 281, 283, 284, 288, 289], "appropri": [1, 4, 12, 20, 72, 124, 228, 231, 234, 235, 236, 237, 240, 243, 245, 257, 264, 265, 266, 267, 268, 269, 270, 271, 272, 283, 284, 288], "final": [1, 5, 231, 232, 234, 235, 236, 238, 240, 242, 261, 265, 278], "statement": [1, 10, 240, 263], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 36, 49, 52, 79, 82, 88, 89, 90, 91, 95, 96, 97, 104, 112, 113, 127, 134, 220, 226, 227, 237, 238, 239, 240, 244, 245, 247, 257, 259, 263, 265, 266, 271, 275, 280, 281, 283, 284, 285, 288], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 67, 110, 127, 147, 157, 218, 228, 230, 231, 232, 234, 235, 236, 237, 240, 245, 247, 257, 265, 266, 271, 278, 280, 281, 284], "regard": 1, "success": [1, 51, 228, 237, 257, 265, 266], "last": [1, 241, 245, 277, 284], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 104, 106, 129, 153, 231, 234, 235, 240, 242, 243, 245, 264, 265, 266, 277, 284], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 66, 71, 76, 104, 105, 106, 114, 115, 118, 119, 144, 151, 231, 237, 240, 242, 243, 244, 245, 263, 265, 266, 272, 278], "your": [1, 3, 4, 9, 124, 228, 244, 245, 257, 262, 265, 266, 267, 268, 271, 272, 278, 284], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 83, 84, 99, 102, 103, 108, 109, 110, 134, 155, 163, 166, 179, 191, 194, 196, 206, 240, 241, 242, 243, 244, 245, 263, 264, 265, 266, 268, 271, 272, 278, 284, 289, 290], "appear": [1, 124, 240, 265], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 56, 62, 63, 72, 103, 119, 124, 127, 139, 149, 159, 163, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 261, 263, 265, 266, 271, 274, 277, 278, 280, 281, 283, 284, 288, 290], "under": [1, 14, 32, 33, 109, 124, 127, 230, 240, 241, 245, 264, 274, 289], "head": [1, 230, 268], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 102, 103, 108, 110, 127, 129, 137, 139, 141, 148, 149, 154, 159, 182, 197, 210, 213, 228, 231, 234, 235, 236, 240, 242, 243, 244, 245, 250, 254, 261, 262, 263, 264, 266, 271, 272, 274, 277, 278, 280, 281, 283, 284, 287, 288, 289, 290], "correspond": [1, 5, 15, 109, 110, 127, 228, 240, 245, 257, 277], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 61, 68, 69, 72, 75, 87, 93, 109, 110, 129, 148, 183, 198, 220, 226, 227, 232, 237, 240, 243, 244, 250, 271, 274, 277, 280, 281], "propos": 1, "discuss": [1, 127, 240, 242, 243, 244, 265, 277, 278], "technic": [1, 5], "issu": [1, 240, 241, 245, 278, 280, 281], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 124, 231, 240, 242, 243, 245, 262, 265, 274], "focu": [1, 265], "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 102, 103, 108, 113, 118, 120, 121, 122, 123, 124, 125, 138, 142, 144, 148, 150, 151, 152, 158, 171, 188, 203, 211, 228, 231, 234, 235, 236, 237, 241, 242, 244, 245, 250, 257, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 277, 280, 281, 283, 288], "To": [1, 4, 10, 14, 15, 110, 124, 127, 228, 240, 244, 245, 257, 259, 265, 267, 268, 269, 270, 271, 272, 274, 278, 284], "extent": [1, 11, 14, 265, 277], "possibl": [1, 6, 9, 63, 127, 230, 240, 241, 244, 265, 274], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 102, 103, 108, 109, 110, 228, 237, 240, 244, 245, 257, 263, 265, 277, 284, 289], "independ": [1, 4, 241, 263], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 120, 139, 149, 159, 232, 236, 237, 238, 242, 243, 244, 245, 262, 263, 264, 266, 267, 277, 289], "thu": [1, 5, 12, 265], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 110, 127, 129, 240, 243, 263, 265, 266, 271, 274, 278, 289], "clean": [1, 240, 242, 245], "plan": [1, 11, 228, 234, 235, 240, 257, 263, 280, 281, 289], "For": [1, 2, 4, 5, 10, 12, 14, 16, 103, 120, 230, 231, 234, 235, 236, 240, 244, 245, 263, 265, 266, 267, 275, 278, 280, 281, 284, 285, 289], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 120, 121, 122, 123, 124, 125, 228, 237, 240, 242, 244, 245, 257, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 278, 284, 289, 290], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 64, 67, 69, 88, 92, 93, 95, 102, 103, 108, 110, 120, 121, 122, 123, 124, 125, 127, 228, 231, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 284, 289, 290], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 91, 97, 109, 110, 114, 127, 137, 139, 141, 149, 154, 159, 182, 197, 210, 213, 228, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 254, 257, 261, 262, 263, 264, 265, 266, 271, 275, 278, 283, 284], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 60, 62, 63, 89, 96, 104, 106, 109, 110, 111, 118, 124, 129, 172, 231, 236, 237, 238, 240, 241, 242, 243, 244, 245, 262, 263, 264, 266, 268, 271, 274, 280, 284, 289, 290], "intend": [1, 6, 7, 241, 266, 281, 289], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 99, 111, 124, 127, 136, 147, 157, 163, 231, 232, 236, 238, 240, 241, 242, 243, 244, 245, 247, 262, 263, 264, 265, 266, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 56, 110, 230, 232, 238, 240, 242, 244, 245, 262, 265, 278, 284], "pde": 1, "solver": [1, 242, 245, 264, 284], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 121, 124, 125, 238, 242, 243, 244, 245, 265, 284], "well": [1, 6, 7, 10, 11, 127, 223, 231, 234, 235, 236, 240, 245, 263, 265, 266, 278, 284, 289], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 60, 109, 110, 140, 142, 147, 152, 157, 162, 169, 177, 186, 201, 209, 211, 212, 228, 231, 232, 234, 235, 236, 240, 241, 242, 253, 263, 264, 265, 266, 271, 277, 290], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 127, 232, 238, 240, 241, 242, 243, 244, 245, 264, 265, 266, 271, 274, 278, 280, 283, 284, 288, 289, 290], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 77, 79, 84, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 103, 104, 105, 106, 109, 110, 112, 114, 115, 118, 119, 124, 129, 132, 137, 142, 166, 171, 174, 179, 188, 191, 194, 203, 206, 224, 228, 230, 231, 232, 234, 235, 236, 237, 242, 243, 244, 247, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 280, 281, 283, 284, 287, 288, 289, 290], "low": [1, 112], "level": [1, 9, 10, 11, 15, 16, 127, 220, 221, 222, 223, 224, 225, 226, 227, 231, 238, 239, 240, 242, 243, 265, 266, 277, 278, 280, 281, 282, 283, 288], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 60, 67, 73, 77, 87, 88, 92, 95, 109, 110, 112, 113, 114, 119, 124, 127, 129, 136, 142, 145, 155, 163, 165, 166, 169, 174, 176, 179, 183, 186, 189, 191, 194, 196, 198, 201, 204, 206, 211, 212, 220, 226, 227, 230, 236, 242, 244, 245, 251, 254, 257, 262, 265, 267, 268, 269, 270, 271, 272, 275, 277, 283, 284, 285, 288], "declar": [1, 5], "interfac": [1, 8, 218, 219, 220, 226, 227, 240, 244, 245, 264, 265, 274], "sequenc": [1, 4, 12, 239, 240, 244, 263, 265, 284, 289, 290], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 83, 84, 85, 102, 109, 110, 112, 120, 121, 122, 123, 124, 125, 129, 142, 186, 201, 211, 231, 240, 242, 243, 244, 245, 259, 262, 263, 265, 266, 271, 272, 274, 278, 283, 284, 288], "want": [1, 4, 9, 12, 14, 15, 43, 127, 240, 243, 245, 262, 265, 266, 271, 272, 282, 284, 289], "math": 1, "syntax": [1, 265], "almost": [1, 7], "ident": [1, 4, 15, 138, 148, 158, 231, 241, 244, 250, 265, 277], "latex": 1, "b": [1, 4, 245, 263, 265, 284], "2": [1, 11, 12, 15, 33, 158, 230, 231, 238, 241, 245, 259, 265, 266, 268, 271, 274, 277, 278, 280, 281, 284], "2ab": 1, "imag": [1, 5, 16, 111, 112, 243, 265, 283, 288], "keep": [1, 4, 7, 12, 19, 50, 240, 242, 245, 265, 283, 288], "mind": [1, 4, 265], "quit": [1, 238, 240, 242, 265], "small": [1, 7, 38, 240, 243, 265, 267, 268, 273, 274, 282, 284], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 72, 83, 84, 99, 103, 110, 115, 124, 127, 129, 142, 186, 201, 211, 220, 223, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284, 287, 288, 289, 290], "prefer": [1, 240, 241, 265, 266], "png": [1, 11, 16, 232, 265], "okai": [1, 240, 265], "size": [1, 11, 62, 63, 72, 127, 131, 133, 134, 231, 243, 265, 266, 277, 278, 280, 281, 282, 283, 288], "repo": [1, 4, 228, 257, 264, 265, 285], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 237, 238, 240, 241, 242, 243, 244, 245, 262, 263, 265, 266, 268, 274, 283, 284, 289, 290], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 124, 240, 243, 245, 265, 271, 275, 284, 285], "actual": [1, 4, 10, 240, 242, 245, 265], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 267, 268, 269, 270, 271, 272, 284], "project": [1, 4, 5, 59, 91, 97, 228, 244, 245, 257, 259, 265, 266, 267, 268, 271, 284, 285], "manag": [1, 262, 271], "item": [1, 265], "git": [1, 13, 86, 228, 245, 257, 265, 266, 284], "branch": [1, 4, 124, 228, 237, 240, 245, 257, 265, 284], "timelin": 1, "staf": 1, "via": [1, 4, 12, 240, 245, 271], "block": [1, 242], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 88, 92, 95, 127, 238, 240, 243, 244, 245, 262, 264, 265, 266, 271, 277, 278, 284, 289], "def": [1, 5, 7, 9, 10, 14, 16, 237, 240, 242, 243, 244, 265], "example_funct": 1, "foo": [1, 244], "return": [1, 5, 25, 49, 51, 54, 61, 62, 63, 68, 72, 79, 82, 83, 93, 100, 101, 103, 104, 106, 114, 118, 119, 127, 130, 132, 134, 143, 167, 170, 184, 185, 187, 199, 200, 202, 218, 221, 222, 223, 224, 225, 244, 265, 278], "0": [1, 4, 5, 11, 12, 14, 15, 16, 62, 88, 92, 95, 110, 112, 120, 121, 122, 123, 124, 125, 127, 220, 225, 226, 227, 230, 232, 240, 243, 244, 259, 262, 265, 266, 268, 271, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 288], "how": [1, 4, 10, 12, 67, 127, 239, 240, 242, 244, 245, 266, 271, 272], "show": [1, 5, 11, 240, 265, 271, 272, 277, 278, 283, 288], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 123, 124, 127, 133, 231, 232, 234, 235, 236, 239, 240, 242, 243, 244, 245, 261, 265, 266, 268, 270, 271, 272, 274, 278, 282, 284, 290], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 102, 103, 108, 123, 124, 127, 132, 166, 179, 191, 194, 206, 228, 231, 234, 235, 238, 240, 241, 242, 243, 244, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 284, 289, 290], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 89, 96, 102, 103, 104, 108, 110, 112, 114, 127, 132, 138, 148, 158, 184, 185, 199, 200, 228, 230, 237, 239, 240, 242, 243, 244, 245, 250, 265, 266, 268, 271, 274, 277, 278, 280, 281, 282, 283, 284, 289, 290], "regress": [1, 162, 231, 232, 241, 263, 264, 265, 277, 278, 284, 290], "suit": [1, 5, 10, 15, 32, 41, 55, 56, 98, 99, 101, 103, 124, 231, 239, 240, 242, 245, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 83, 84, 87, 110, 127, 129, 142, 186, 201, 211, 231, 238, 240, 242, 243, 244, 245, 262, 265, 271, 274, 284], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 67, 99, 115, 127, 228, 231, 232, 237, 239, 240, 242, 243, 244, 245, 259, 263, 264, 265, 266, 271, 274, 277, 278, 284, 290], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 68, 127, 144, 151, 228, 237, 240, 242, 244, 245, 257, 259, 262, 264, 265, 266, 267, 271, 272, 274, 277, 278, 284, 290], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 55, 82, 83, 84, 85, 86, 102, 103, 108, 124, 127, 218, 220, 221, 222, 226, 227, 231, 240, 243, 244, 264, 265, 266, 268, 271, 272, 274, 280, 281, 283, 284, 288, 289], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 55, 86, 98, 102, 103, 108, 123, 124, 147, 157, 174, 176, 177, 237, 238, 239, 240, 241, 242, 244, 245, 262, 263, 265, 266, 271, 278, 282, 284, 289], "properli": [1, 120, 122, 123, 265, 266, 284], "addit": [1, 5, 7, 32, 236, 237, 238, 240, 242, 243, 244, 245, 265], "modif": [1, 5, 240, 259], "nightli": [1, 245, 284, 290], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 109, 110, 228, 240, 242, 243, 244, 245, 263, 265, 266, 277, 284, 289, 290], "might": [1, 9, 12, 14, 16, 240, 243, 245, 265, 266, 271, 284], "made": [1, 4, 14, 32, 35, 41, 110, 240, 242, 244, 259, 263, 265, 289], "ensur": [1, 7, 12, 50, 231, 244, 245, 278, 282], "continu": [1, 240, 265], "expect": [1, 10, 14, 237, 240, 245, 265, 278, 282], "page": [2, 5, 267], "auto": 2, "summari": [2, 268], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 68, 102, 103, 127, 230, 231, 232, 238, 240, 241, 242, 244, 245, 247, 263, 271, 275, 277, 278, 283, 284, 285, 288, 289], "relev": [2, 5, 7, 127, 234, 235, 265, 267, 268, 269, 270, 271, 272, 283, 284, 288], "main": [2, 5, 7, 12, 37, 124, 177, 237, 243, 244, 245, 265, 289], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 142, 169, 186, 201, 211, 231, 234, 235, 240, 241, 244, 245, 264, 265, 274], "document": [2, 7, 12, 240, 244, 264, 266, 284], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 108, 229, 231, 232, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 263, 264, 265, 266, 271, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 289, 290], "seaic": [2, 17, 34, 240, 258, 261, 264, 284, 285, 288], "As": [3, 4, 11, 15, 62, 127, 240, 241, 242, 243, 244, 245, 265, 266, 274, 278, 282, 290], "long": [3, 19, 29, 32, 39, 83, 84, 129, 142, 186, 201, 211, 240, 265, 277, 284], "follow": [3, 4, 5, 11, 12, 16, 59, 124, 220, 226, 227, 228, 230, 231, 240, 241, 242, 245, 257, 259, 262, 265, 266, 271, 272, 274, 276, 278, 280, 281, 282, 284, 287], "procedur": [3, 124, 245, 265, 272], "conda": [3, 4, 13, 86, 120, 122, 123, 124, 228, 237, 244, 257, 264, 265, 266, 267, 268, 269, 270, 272], "environ": [3, 4, 120, 122, 123, 124, 228, 237, 244, 257, 264, 265, 266, 267, 268, 269, 270, 271, 272], "spack": [3, 4, 120, 122, 123, 124, 262, 264, 265, 267, 268, 269, 270, 271, 272], "compil": [3, 4, 12, 120, 121, 122, 123, 124, 125, 262, 264, 265, 267, 268, 269, 270, 271, 272, 284], "system": [3, 4, 19, 29, 32, 39, 83, 84, 85, 120, 122, 123, 124, 129, 142, 186, 201, 211, 240, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 284], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 59, 79, 104, 120, 122, 123, 124, 127, 237, 238, 240, 242, 243, 247, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 284], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 68, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 102, 103, 104, 106, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 142, 144, 147, 151, 157, 162, 164, 171, 188, 203, 211, 220, 226, 227, 228, 230, 231, 232, 234, 235, 236, 239, 240, 242, 243, 244, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 278, 280, 281, 282, 283, 288, 290], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 74, 86, 100, 102, 103, 108, 109, 110, 120, 121, 122, 123, 124, 125, 127, 147, 157, 162, 228, 231, 232, 234, 235, 236, 239, 240, 242, 244, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 283, 288, 289], "alreadi": [3, 9, 12, 43, 53, 127, 142, 211, 242, 244, 245, 265, 266, 271, 274, 278, 284], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 79, 86, 104, 108, 114, 124, 237, 238, 239, 240, 242, 243, 245, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 284], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 56, 82, 83, 84, 129, 142, 186, 201, 211, 232, 240, 242, 244, 245, 265, 267, 268, 269, 270, 272, 277, 284, 290], "Then": [3, 5, 9, 120, 121, 122, 123, 124, 125, 127, 228, 231, 234, 235, 236, 237, 240, 242, 243, 245, 257, 265, 271, 277, 284], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 59, 82, 83, 84, 93, 102, 103, 108, 110, 123, 124, 129, 130, 140, 142, 143, 144, 148, 151, 155, 160, 166, 169, 170, 171, 179, 186, 187, 188, 191, 194, 201, 202, 203, 206, 209, 211, 212, 216, 228, 231, 232, 234, 235, 236, 238, 239, 241, 242, 243, 244, 250, 251, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 289, 290], "script": [3, 4, 10, 16, 47, 55, 121, 124, 125, 244, 263, 264, 265, 268, 271], "doc": [3, 5, 242, 265, 272], "cd": [3, 228, 245, 257, 265, 268, 284], "rm": 3, "rf": 3, "developers_guid": [3, 265], "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 61, 62, 64, 77, 110, 120, 121, 122, 123, 124, 125, 129, 133, 138, 148, 158, 176, 220, 226, 227, 228, 231, 240, 242, 243, 244, 245, 250, 257, 263, 266, 267, 268, 269, 270, 271, 272, 277, 278, 284, 290], "html": [3, 275], "view": [3, 234, 235, 245, 280, 281], "open": [3, 245, 265], "index": [3, 15, 112, 220, 221, 222, 223, 224, 225, 226, 227, 242, 243, 265], "act": [4, 244, 274], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 138, 140, 209, 212, 231, 234, 235, 236, 240, 242, 265, 266, 271, 277, 280, 281, 282, 284], "These": [4, 6, 12, 15, 17, 32, 127, 228, 230, 237, 240, 242, 244, 245, 257, 259, 264, 265, 266, 271, 277, 284, 289, 290], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 55, 86, 110, 124, 127, 231, 234, 235, 236, 240, 241, 242, 243, 261, 262, 263, 265, 268, 271, 272, 275, 277, 278, 285], "describ": [4, 5, 12, 14, 86, 104, 106, 109, 110, 119, 124, 127, 231, 232, 234, 235, 236, 239, 240, 241, 242, 244, 245, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 278, 284], "below": [4, 12, 19, 29, 32, 39, 83, 84, 124, 129, 142, 186, 201, 211, 228, 238, 240, 242, 243, 245, 265, 266, 271, 274, 278, 280, 281, 282, 284], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 56, 98, 109, 110, 124, 127, 132, 225, 231, 232, 234, 235, 236, 240, 242, 243, 244, 245, 264, 265, 267, 268, 269, 270, 272, 274, 277, 278, 282, 284, 289], "instal": [4, 245, 265, 271, 272, 284], "abov": [4, 5, 12, 15, 238, 240, 241, 242, 243, 244, 245, 265, 266, 278, 280, 281, 282, 284, 290], "develop": [4, 5, 6, 10, 11, 16, 124, 127, 228, 230, 237, 240, 241, 244, 259, 262, 266, 271, 275, 284], "local": [4, 6, 9, 32, 34, 41, 228, 238, 240, 242, 245, 257, 262, 265, 266, 271, 272, 274], "off": [4, 245, 262], "http": [4, 5, 9, 53, 240, 244, 262, 264, 265, 266, 272, 275, 284, 285], "github": [4, 5, 244, 245, 264, 265, 266, 275, 284, 285], "com": [4, 5, 53, 244, 245, 264, 265, 266, 284, 285], "e3sm": [4, 5, 8, 9, 32, 113, 228, 237, 240, 241, 242, 244, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 285], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 60, 61, 67, 68, 73, 87, 94, 102, 103, 108, 113, 124, 127, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 163, 166, 169, 172, 174, 176, 179, 181, 183, 186, 189, 191, 194, 196, 198, 201, 204, 206, 209, 211, 212, 214, 216, 220, 226, 227, 232, 236, 237, 240, 241, 242, 243, 244, 250, 252, 253, 255, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 278, 284], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 120, 122, 123, 231, 232, 235, 240, 242, 245, 247, 262, 265, 266, 271, 275, 276, 277, 282, 283, 284, 285, 287, 288, 289, 290], "mode": [4, 12, 237, 245, 263, 264, 265, 284], "mean": [4, 15, 167, 232, 234, 235, 245, 265, 274, 277, 280, 281, 290], "chang": [4, 6, 12, 14, 15, 67, 228, 237, 240, 241, 242, 244, 245, 247, 257, 263, 265, 266, 268, 272, 274, 277, 284, 290], "reflect": [4, 245], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 59, 93, 98, 124, 127, 231, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 262, 263, 264, 265, 266, 271, 272, 284], "tool": [4, 7, 10, 12, 14, 228, 237, 240, 245, 257, 264, 265, 266], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 55, 68, 77, 80, 83, 84, 87, 93, 98, 110, 111, 112, 113, 114, 119, 120, 124, 127, 129, 130, 131, 132, 133, 142, 143, 144, 151, 163, 166, 170, 174, 186, 187, 201, 202, 211, 218, 220, 221, 222, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 280, 281, 282, 283, 284, 287, 289, 290], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 55, 56, 59, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 101, 102, 103, 108, 109, 110, 124, 127, 128, 129, 218, 228, 230, 231, 232, 234, 235, 236, 237, 238, 240, 245, 247, 248, 257, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 285, 288], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 55, 56, 60, 65, 67, 70, 73, 82, 83, 84, 86, 87, 98, 99, 102, 103, 104, 108, 109, 110, 124, 127, 128, 129, 135, 136, 138, 140, 142, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 160, 161, 163, 164, 166, 168, 169, 172, 174, 175, 176, 178, 179, 180, 181, 183, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 261, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 288, 290], "support": [4, 6, 11, 14, 32, 127, 220, 226, 227, 230, 232, 240, 242, 243, 244, 264, 265, 266, 268, 272, 274, 277, 282, 289], "machin": [4, 6, 32, 34, 41, 54, 55, 86, 102, 103, 108, 228, 240, 242, 244, 257, 264, 265, 266, 267, 268, 269, 270, 272], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 55, 56, 60, 66, 67, 68, 71, 73, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 129, 132, 142, 144, 151, 153, 164, 171, 183, 186, 188, 198, 201, 203, 211, 218, 220, 221, 222, 226, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 252, 257, 259, 262, 264, 266, 274, 276, 284, 289], "h": [4, 12, 265], "t": [4, 5, 7, 9, 10, 12, 32, 33, 119, 127, 142, 184, 185, 199, 200, 211, 234, 235, 240, 242, 244, 245, 262, 265, 266, 268, 270, 271, 276, 277, 280, 281, 284, 289, 290], "n": [4, 61, 68, 69, 75, 240, 265, 268, 271, 272, 277, 278, 280, 281, 283, 284, 288], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 82, 83, 84, 87, 103, 127, 129, 130, 131, 133, 142, 143, 167, 170, 183, 186, 187, 198, 201, 202, 211, 228, 231, 234, 235, 240, 241, 242, 243, 244, 263, 265, 266, 271, 274, 276, 277, 278, 280, 281, 282, 283, 284, 288], "v": [4, 245, 265, 280, 281, 290], "By": [4, 12, 15, 33, 34, 127, 228, 237, 242, 257, 265, 266, 277, 282], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 55, 68, 73, 78, 86, 87, 88, 92, 95, 99, 102, 103, 105, 108, 112, 120, 122, 123, 127, 129, 142, 209, 211, 212, 228, 232, 234, 235, 236, 237, 240, 242, 243, 245, 257, 259, 264, 266, 267, 268, 269, 270, 271, 272, 274, 278, 282, 283, 284, 288, 289], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 83, 84, 86, 102, 103, 127, 128, 129, 136, 142, 186, 201, 211, 220, 226, 227, 228, 231, 237, 238, 240, 241, 242, 243, 244, 245, 248, 257, 263, 264, 265, 266, 271, 274, 275, 277, 278, 283, 284, 285, 288, 289], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 60, 67, 73, 87, 102, 103, 109, 110, 129, 142, 145, 150, 155, 160, 173, 174, 176, 179, 186, 189, 194, 201, 204, 211, 214, 216, 240, 244, 252, 255, 265, 266, 277, 282, 284], "example_compact": [4, 228, 237, 257, 266], "1km": [4, 242, 243, 265, 277, 284], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 62, 120, 121, 122, 123, 124, 125, 127, 138, 142, 158, 186, 201, 211, 220, 226, 227, 231, 232, 234, 235, 236, 238, 240, 242, 245, 259, 262, 265, 266, 268, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284], "test2": 4, "displai": [4, 6, 272], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 56, 59, 86, 102, 103, 108, 109, 110, 112, 228, 237, 240, 242, 244, 245, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 284, 289], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 55, 86, 98, 102, 103, 108, 109, 110, 124, 147, 157, 174, 176, 228, 231, 237, 239, 240, 241, 242, 244, 245, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 284, 289], "help": [4, 11, 238, 240, 245, 264, 265, 271, 275, 285], "messag": [4, 6, 15, 240, 242, 262, 272], "test_expr": [4, 56], "flag": [4, 240, 244, 262, 263, 265, 266, 275, 277, 284, 285], "suppli": [4, 5, 15, 119, 240, 245, 265], "substr": 4, "regular": [4, 16, 56, 61, 68, 163, 166, 265, 267, 270, 271, 272, 284], "express": [4, 56], "subset": 4, "think": [4, 265], "search": [4, 56, 268], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 108, 109, 110, 231, 234, 235, 237, 238, 240, 241, 242, 243, 245, 247, 259, 263, 265, 266, 268, 271, 278, 282, 283, 288], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 118, 127, 129, 132, 134, 136, 142, 150, 167, 169, 172, 174, 176, 211, 219, 237, 240, 242, 243, 244, 245, 252, 263, 265, 266, 272, 277, 284, 290], "singl": [4, 6, 16, 112, 208, 209, 212, 214, 236, 240, 242, 244, 247, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 271, 278, 280, 281, 282, 287], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 62, 72, 79, 83, 84, 99, 104, 106, 109, 110, 114, 127, 129, 152, 167, 223, 231, 232, 236, 240, 242, 262, 264, 265, 266, 277, 278, 282, 283, 284, 288, 290], "instead": [4, 10, 12, 19, 99, 120, 124, 240, 242, 244, 245, 265, 267, 284, 290], "pass": [4, 6, 10, 11, 12, 15, 41, 72, 110, 111, 237, 240, 242, 243, 244, 245, 263, 284], "similarli": [4, 6, 228, 240, 245, 271, 284], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 55, 58, 86, 108, 113, 129, 135, 142, 162, 169, 178, 186, 193, 201, 208, 211, 238, 239, 240, 241, 242, 243, 248, 249, 259, 263, 264, 265, 266, 271, 273, 276, 289], "result": [4, 11, 15, 51, 63, 72, 109, 110, 124, 127, 138, 148, 155, 158, 160, 216, 231, 232, 240, 241, 244, 245, 250, 255, 263, 265, 266, 277, 278, 283, 288, 290], "verbos": [4, 56, 58, 240, 265, 290], "about": [4, 5, 6, 10, 12, 15, 32, 87, 113, 127, 240, 242, 243, 244, 245, 265, 266, 268], "its": [4, 5, 6, 10, 14, 16, 32, 43, 93, 105, 237, 238, 240, 241, 242, 243, 244, 245, 263, 265, 266, 267, 278, 284, 289], "descript": [4, 5, 265, 266, 275, 285], "short": [4, 140, 209, 212, 240, 241, 242, 244, 253, 265, 277], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 55, 82, 83, 84, 108, 127, 128, 129, 138, 140, 209, 212, 231, 236, 237, 238, 240, 241, 242, 243, 244, 259, 263, 265, 266, 267, 268, 269, 270, 271, 272, 284, 290], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 56, 60, 67, 73, 87, 129, 142, 174, 176, 211, 231, 238, 240, 242, 244, 265, 284, 289], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 60, 65, 67, 70, 73, 74, 82, 84, 86, 87, 93, 98, 99, 102, 103, 110, 127, 129, 130, 134, 136, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 230, 231, 232, 234, 235, 236, 237, 238, 239, 242, 243, 244, 247, 252, 254, 255, 256, 261, 263, 264, 266, 272, 274, 289, 290], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 60, 67, 73, 87, 129, 142, 174, 176, 211, 240, 242, 265], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 98, 110, 228, 237, 240, 242, 243, 257, 263, 264, 265, 275, 285], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 108, 111, 112, 127, 129, 177, 230, 240, 242, 243, 245, 265, 274, 289], "built": [4, 12, 102, 103, 108, 228, 237, 245, 257, 264, 266, 271, 284], "execut": [4, 6, 12, 15, 19, 102, 103, 108, 129, 228, 237, 240, 245, 257, 265, 266, 267, 268, 269, 270, 271, 272, 284], "standalon": [4, 12, 123, 237, 245, 263, 264, 271, 285], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 59, 77, 89, 96, 104, 106, 108, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 162, 163, 174, 183, 198, 219, 228, 229, 231, 232, 234, 235, 236, 237, 238, 240, 244, 245, 247, 248, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 280, 282, 283, 284, 285, 288, 289, 290], "befor": [4, 6, 12, 14, 38, 240, 243, 244, 245, 262, 265, 268, 272, 274, 278, 284], "w": [4, 245, 263, 265, 284], "num": 4, "f": [4, 7, 9, 12, 242, 244, 245, 265, 266, 272, 277, 280, 284], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 59, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 124, 129, 133, 134, 144, 147, 151, 157, 174, 176, 219, 228, 231, 232, 234, 235, 236, 237, 241, 242, 243, 244, 245, 247, 251, 257, 259, 261, 262, 263, 264, 268, 271, 272, 274, 277, 278, 283, 284, 287, 288, 289], "m": [4, 12, 61, 68, 69, 75, 231, 236, 243, 245, 265, 267, 268, 269, 270, 272, 274, 277, 278, 282, 284], "mach": [4, 32, 267, 268, 269, 270, 271, 272, 284], "p": [4, 245, 265, 266, 284], "suite_nam": [4, 6, 99, 101, 103, 108, 284], "specifi": [4, 12, 14, 15, 16, 34, 230, 240, 245, 261, 265, 266, 272, 277, 278, 283, 284, 288], "either": [4, 5, 6, 10, 11, 12, 14, 62, 127, 228, 240, 245, 263, 265, 266, 274, 282, 284], "onli": [4, 5, 6, 12, 14, 15, 41, 124, 228, 230, 232, 236, 237, 240, 242, 244, 247, 257, 261, 264, 265, 266, 268, 271, 272, 274, 276, 277, 278, 282, 284, 287], "time": [4, 5, 6, 12, 15, 16, 32, 41, 54, 112, 127, 134, 142, 152, 171, 184, 185, 188, 199, 200, 203, 211, 230, 231, 232, 234, 235, 240, 241, 242, 243, 244, 245, 261, 262, 263, 266, 268, 272, 284, 290], "wai": [4, 5, 11, 12, 32, 64, 69, 124, 127, 240, 242, 243, 244, 245, 262, 264, 265, 271, 274, 282], "altern": [4, 11, 259, 284], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 102, 103, 147, 157, 237, 238, 240, 241, 242, 243, 244, 245, 265, 266, 271, 277, 278, 282, 283, 284, 287, 288], "case_numb": 4, "multipl": [4, 5, 12, 15, 229, 241, 244, 245, 265, 271, 277, 284], "separ": [4, 5, 7, 12, 14, 15, 240, 241, 263, 265, 278, 284], "space": [4, 5, 7, 11, 234, 235, 240, 245, 265, 268, 271, 284], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 87, 129, 142, 186, 201, 211, 228, 237, 240, 241, 242, 243, 244, 245, 257, 259, 262, 264, 265, 266, 271, 274, 275, 283, 284, 285, 288, 289], "few": [4, 11, 12, 19, 29, 32, 39, 83, 84, 124, 129, 231, 234, 235, 236, 240, 244, 265, 266, 271], "basic": [4, 5, 266, 268, 271, 284], "piec": [4, 237, 265], "inform": [4, 5, 6, 32, 87, 110, 119, 183, 198, 240, 242, 245, 266, 268, 275, 284, 285], "abl": [4, 120, 121, 122, 123, 125, 127, 240, 241, 243, 245, 265, 271, 284], "place": [4, 12, 15, 111, 240, 242, 259, 265, 271], "download": [4, 6, 8, 32, 34, 40, 147, 157, 242, 244, 245, 266, 284, 290], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 230, 231, 238, 240, 242, 243, 244, 245, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 284, 285, 289, 290], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 93, 104, 106, 107, 111, 112, 113, 119, 124, 174, 220, 226, 227, 240, 245, 264, 266, 267, 268, 269, 270, 271, 284, 289, 290], "locat": [4, 12, 15, 16, 41, 102, 103, 108, 228, 240, 245, 247, 257, 263, 265, 266, 268, 271, 274, 277, 278, 284], "where": [4, 5, 12, 15, 32, 34, 41, 51, 55, 86, 102, 103, 108, 111, 127, 220, 223, 226, 227, 228, 237, 239, 240, 242, 245, 257, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 282, 283, 284, 288, 290], "There": [4, 11, 220, 226, 227, 236, 238, 240, 244, 245, 247, 261, 262, 265, 266, 284], "r": [4, 272, 278], "tell": [4, 245], "re": [4, 240, 244, 245, 263, 265, 266, 271, 272, 278], "leav": [4, 16, 232, 242, 266, 278], "unknown": [4, 124, 244, 271], "component_path": [4, 102, 103, 108, 228, 237, 257, 266, 284], "absolut": [4, 7, 32, 34, 50, 102, 103, 108, 228, 237, 240, 245, 257, 284], "landic": [4, 8, 10, 17, 34, 59, 108, 237, 239, 240, 242, 243, 245, 263, 264, 265, 266, 284, 289, 290], "e3sm_submodul": [4, 228, 237, 245, 257, 259, 265], "mali": [4, 124, 237, 240, 245, 263, 265, 266, 284, 289], "dev": [4, 5, 237, 239, 240, 243, 244, 245, 264, 275, 284, 285], "albani": [4, 120, 122, 123, 124, 237, 266, 267, 268, 269, 272, 284], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 147, 157, 232, 242, 245, 263, 265, 266, 271, 272, 274, 278, 284, 289], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 102, 103, 108, 110, 111, 112, 115, 127, 129, 130, 142, 143, 144, 151, 163, 166, 170, 171, 187, 188, 202, 203, 211, 234, 235, 240, 243, 245, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 280, 281, 282, 283, 284, 288], "omega": [4, 25, 113, 129, 132, 183, 198, 228, 237, 244, 245, 263, 265, 275, 280, 281, 284], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 54, 55, 66, 68, 71, 82, 83, 84, 85, 86, 100, 102, 103, 108, 110, 111, 113, 114, 115, 116, 118, 119, 124, 129, 132, 144, 151, 164, 171, 183, 188, 198, 203, 218, 220, 221, 222, 226, 227, 228, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 257, 259, 262, 264, 274, 284, 289], "point": [4, 47, 53, 90, 228, 230, 237, 242, 243, 244, 245, 257, 265, 266, 271, 284], "much": [4, 12, 240, 265], "config_fil": [4, 102, 103, 108], "work_dir": [4, 9, 15, 32, 41, 55, 86, 102, 103, 108, 109, 110, 240, 242, 265], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 66, 71, 73, 102, 103, 108, 124, 131, 133, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 289], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 74, 98, 105, 108, 110, 127, 174, 176, 228, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 257, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 280, 281, 283, 284, 285, 288], "recommend": [4, 5, 9, 16, 240, 241, 244, 245, 265, 271], "itself": [4, 5, 7, 32, 237, 239, 240, 242, 243, 245, 265, 284], "temp": 4, "scratch": [4, 245, 265, 268, 272, 284], "avoid": [4, 240, 265], "confus": [4, 12, 244, 245, 265], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 76, 77, 84, 87, 99, 110, 127, 129, 134, 147, 157, 166, 174, 179, 191, 194, 206, 219, 231, 234, 235, 236, 242, 254, 261, 263, 266, 272, 284, 290], "compar": [4, 8, 15, 41, 102, 103, 108, 109, 110, 137, 139, 141, 149, 154, 159, 182, 197, 210, 213, 232, 236, 241, 244, 245, 251, 254, 261, 263, 265, 276, 277, 284, 287, 290], "previou": [4, 15, 240, 245, 265, 276, 284, 290], "same": [4, 5, 7, 12, 15, 33, 34, 41, 109, 110, 127, 236, 238, 240, 241, 242, 243, 244, 245, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 282, 284, 289, 290], "baseline_dir": [4, 41, 102, 103, 108], "mani": [4, 6, 7, 127, 238, 240, 242, 244, 245, 263, 264, 265, 277, 283, 288], "valid": [4, 5, 6, 8, 41, 220, 221, 222, 223, 224, 225, 226, 227, 231, 234, 235, 236, 244, 245, 264, 274, 277], "sure": [4, 10, 14, 15, 110, 124, 138, 148, 158, 228, 231, 240, 244, 245, 250, 257, 263, 265, 266, 271, 272, 277, 278], "timer": [4, 41, 44, 109, 241, 242, 244], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 85, 93, 110, 120, 122, 123, 129, 142, 186, 201, 211, 228, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 257, 259, 262, 263, 265, 266, 274, 277, 282, 284], "both": [4, 5, 6, 11, 12, 15, 24, 110, 127, 144, 151, 231, 239, 240, 243, 245, 264, 265, 266, 276, 280, 281, 282], "custom": [4, 6, 11, 14, 50, 51, 102, 103, 108, 228, 237, 245, 257, 266, 272, 284], "order": [4, 6, 11, 12, 127, 232, 237, 240, 241, 245, 265, 278, 281, 282, 284], "give": [4, 12, 15, 240, 244, 245, 265, 266, 284], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 124, 127, 129, 220, 226, 227, 228, 231, 234, 235, 237, 240, 242, 244, 245, 257, 263, 265, 266, 271, 272, 274, 277, 278, 282, 284, 290], "after": [4, 5, 12, 14, 16, 32, 34, 35, 74, 93, 124, 221, 222, 228, 237, 240, 242, 245, 257, 265, 266, 268, 272, 284, 287], "c": [4, 103, 124, 240, 245, 267, 268, 269, 270, 271, 272, 276, 284, 290], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 83, 84, 94, 111, 231, 240, 242, 244, 245, 265, 283, 288, 290], "resid": [4, 34], "test_suit": [4, 101, 240], "build": [4, 8, 11, 12, 64, 69, 120, 121, 122, 123, 124, 125, 228, 232, 237, 242, 244, 257, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272], "mpas_model": [4, 266], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 64, 67, 68, 69, 127, 147, 157, 177, 240, 242, 244, 265, 266, 272, 284], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 111, 124, 127, 228, 230, 240, 241, 242, 243, 245, 247, 257, 259, 262, 263, 265, 266, 272, 278, 282, 283, 284, 288, 289], "baselin": [4, 6, 8, 15, 41, 102, 103, 108, 109, 110, 137, 139, 141, 149, 154, 159, 165, 182, 197, 210, 213, 231, 234, 235, 236, 241, 244, 254, 261, 263, 265, 276, 284], "comparison": [4, 15, 41, 109, 110, 242, 265, 266], "against": [4, 6, 8, 15, 110, 165, 231, 234, 235, 236, 240, 261, 265, 276], "oppos": [4, 24, 130, 143, 144, 151, 163, 166, 170, 171, 187, 188, 202, 203, 265], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 36, 38, 39, 82, 83, 84, 87, 127, 129, 131, 133, 142, 186, 201, 211, 231, 234, 235, 240, 244, 263, 264, 265, 267, 268, 269, 270, 271, 272], "parallel": [4, 14, 19, 29, 32, 38, 39, 129, 240, 244, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 284, 289], "been": [4, 12, 15, 32, 41, 43, 93, 102, 103, 108, 120, 122, 123, 127, 166, 179, 191, 194, 206, 228, 237, 240, 242, 244, 245, 257, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 284], "skip_step": 4, "wherea": [4, 10, 240, 265, 276, 289], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 99, 127, 237, 238, 240, 243, 245, 263, 265, 266, 271, 274, 282, 284, 289], "clone": [4, 228, 238, 245, 257, 265, 284], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 124, 142, 186, 201, 211, 231, 240, 241, 244, 245, 262, 265, 274, 277, 282, 290], "just": [4, 12, 19, 29, 32, 39, 56, 124, 129, 240, 244, 245, 263, 265, 268, 272], "pickl": [4, 6, 240, 265, 284], "latter": [4, 41, 124], "conveni": [4, 14, 220, 226, 227, 240, 263, 265, 266, 284], "tab": [4, 284], "complet": [4, 6, 21, 22, 23, 265, 284], "explicitli": [4, 5, 15, 127, 231, 234, 235, 240, 245, 265, 266, 284], "select": [4, 6, 112, 240, 245, 265], "two": [4, 8, 148, 231, 232, 234, 235, 236, 237, 240, 241, 243, 244, 245, 250, 261, 265, 277, 278, 280, 281, 287, 289], "edit": [4, 5, 110, 245, 265, 284], "steps_to_run": [4, 15, 41, 99, 110, 240, 242, 265, 266], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 60, 67, 73, 86, 87, 102, 103, 109, 110, 129, 142, 145, 150, 155, 160, 166, 169, 172, 174, 176, 179, 186, 189, 191, 194, 201, 204, 206, 211, 214, 216, 240, 242, 252, 255, 265, 266, 284], "init": [4, 5, 12, 16, 29, 39, 136, 228, 230, 237, 240, 242, 244, 245, 257, 259, 266, 277, 278, 280, 281, 284, 290], "full_run": [4, 149, 261, 277, 287], "restart_run": [4, 149, 261, 277, 287], "Or": [4, 240, 266], "accomplish": [4, 240, 244], "thing": [4, 120, 121, 122, 123, 124, 125, 127, 240, 244, 264], "skip": [4, 6, 15, 110, 242, 290], "take": [4, 5, 9, 11, 12, 15, 50, 240, 241, 243, 245, 265, 278, 290], "preced": [4, 50], "over": [4, 7, 12, 50, 111, 240, 244, 264, 265, 274, 277, 282, 284], "special": [4, 263, 283], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 129, 240, 271], "polaris_cach": [4, 6, 17, 240], "symlink": [4, 6, 12, 32, 34, 242, 244, 245], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 77, 147, 157, 231, 234, 235, 236, 265, 282], "structur": [4, 11, 25, 132, 239, 242, 264, 265], "without": [4, 15, 34, 240, 244, 245, 265, 266, 270, 271, 280, 281, 283, 284], "redund": [4, 220, 226, 227, 231, 265], "stamp": 4, "revis": [4, 265, 266], "remov": [4, 12, 15, 99, 231, 234, 235, 245, 265], "older": 4, "ones": [4, 220, 226, 227, 244, 265], "version": [4, 13, 27, 50, 86, 109, 110, 228, 231, 237, 238, 240, 243, 244, 245, 257, 258, 264, 265, 266, 271, 272, 275, 277, 278, 284, 285], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 36, 41, 45, 49, 50, 56, 60, 61, 64, 67, 68, 69, 73, 79, 82, 84, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 132, 135, 138, 142, 145, 148, 150, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 186, 189, 191, 193, 194, 201, 204, 206, 208, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 249, 250, 252, 255, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 283, 284, 287, 288], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 105, 123, 131, 142, 211, 228, 231, 234, 235, 240, 257, 262, 264, 265, 284], "cached_fil": [4, 17, 240], "json": [4, 6, 17, 48, 240, 272], "anvil": [4, 124, 240, 266, 271, 284], "chrysali": [4, 124, 240, 265, 266, 271, 284], "sinc": [4, 12, 15, 119, 127, 231, 240, 242, 244, 245, 265, 277, 278, 280, 281, 283, 288], "copi": [4, 6, 34, 48, 102, 103, 108, 265, 268, 284], "onto": [4, 245], "lcrc": [4, 6, 9, 48, 240, 244, 266, 267, 269, 271, 284], "server": [4, 6, 34, 48, 240, 244, 266, 272], "whose": [4, 240], "global_ocean": [4, 7, 9, 12, 237, 240, 242, 244, 245, 266, 284, 290], "qu240": [4, 12, 240, 244, 245, 266, 284], "mesh": [4, 5, 8, 14, 19, 32, 77, 89, 96, 112, 127, 129, 130, 131, 133, 140, 143, 145, 163, 166, 167, 169, 170, 172, 174, 176, 179, 183, 187, 189, 191, 194, 198, 202, 204, 206, 209, 212, 214, 220, 226, 227, 230, 231, 234, 235, 236, 238, 240, 242, 243, 244, 245, 252, 253, 263, 264, 266, 274, 276, 284, 290], "phc": [4, 240, 274, 290], "ocean_cached_fil": 4, "pr": [4, 284, 290], "look": [4, 5, 9, 15, 243, 244, 265, 266], "someth": [4, 5, 88, 92, 95, 245, 265], "culled_mesh": [4, 240, 265], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 87, 240, 242, 244, 265], "210803": 4, "culled_graph": [4, 240, 265], "info": [4, 10, 12, 19, 26, 77, 129, 240, 265], "critical_passages_mask_fin": 4, "initial_st": [4, 16, 240, 242, 265], "init_mode_forcing_data": [4, 240], "date_str": [4, 48], "let": [4, 240, 245, 263, 265, 266, 272], "string": [4, 7, 12, 34, 91, 97, 245], "choos": [4, 240, 244, 245, 265, 267, 268, 269, 270, 272, 289], "todai": [4, 48], "dry_run": [4, 48], "saniti": [4, 265], "check": [4, 15, 110, 245, 263, 265, 266, 268, 272, 284, 290], "print": [4, 10, 15, 56, 110, 115, 240, 244, 290], "stdout": [4, 10, 32, 41, 240], "translat": [4, 25, 127, 132], "compass": [4, 87, 228, 240, 244, 263, 265], "convert": [4, 7, 11, 12, 127, 240, 265], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 102, 103, 108, 118, 119, 129, 132, 133, 144, 147, 151, 157, 228, 231, 232, 234, 235, 237, 240, 242, 243, 244, 247, 257, 259, 261, 264, 265, 266, 282], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 113, 118, 119, 133, 144, 147, 151, 157, 228, 230, 231, 234, 235, 236, 237, 240, 242, 243, 244, 257, 261, 266, 283, 288], "yaml": [4, 8, 19, 20, 23, 24, 25, 129, 132, 133, 144, 151, 231, 234, 235, 236, 240, 264, 265, 268, 272], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 113, 124, 127, 132, 228, 238, 240, 241, 243, 244, 245, 257, 262, 263, 264, 265, 266, 272, 274, 277, 278, 280, 281, 282, 283, 284, 288, 289, 290], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 59, 113, 124, 127, 132, 228, 238, 240, 241, 243, 244, 245, 257, 262, 263, 264, 265, 266, 274, 277, 278, 280, 281, 282, 283, 284, 288, 290], "forward": [4, 5, 12, 15, 32, 134, 140, 141, 150, 152, 154, 182, 197, 209, 210, 212, 213, 228, 237, 240, 242, 244, 253, 254, 257, 266, 277, 278, 280, 281, 283, 288], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 230, 240, 242, 244, 245, 265, 268, 270, 272, 284], "don": [4, 5, 12, 127, 240, 242, 244, 245, 265, 270, 284, 289], "format": [4, 5, 9, 11, 12, 113, 119, 240, 241, 242, 243, 245, 265, 266, 268], "note": [4, 5, 14, 15, 211, 265, 272], "keyword": [4, 5, 12, 15, 16, 232, 240, 242, 278], "top": [4, 16, 220, 221, 222, 223, 224, 225, 226, 227, 230, 238, 265, 274], "ignor": [4, 91, 97], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 54, 62, 82, 93, 98, 124, 127, 129, 239, 240, 242, 243, 244, 245, 263, 266, 274, 284], "pars": [4, 7, 12, 20, 21, 22, 23, 79, 104, 106], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 110, 111, 112, 115, 132, 152, 231, 237, 240, 242, 243, 244, 264, 265, 266, 274, 277, 278, 282], "doesn": [4, 7, 119, 240, 242, 265, 266, 271, 284], "matter": [4, 265], "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 55, 111, 112, 240, 242, 265, 287], "myst": [5, 265], "tip": [5, 245], "easi": [5, 34, 244, 265], "start": [5, 6, 12, 105, 230, 231, 241, 243, 244, 264, 268, 271, 272, 275, 285, 287], "exist": [5, 7, 25, 32, 35, 53, 104, 106, 108, 132, 231, 240, 244, 245, 262, 265, 271, 290], "tree": [5, 104, 106, 119, 285], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 135, 136, 138, 140, 142, 148, 152, 155, 158, 160, 162, 163, 178, 181, 193, 196, 208, 209, 212, 216, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 247, 249, 250, 253, 257, 261, 263, 264, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290], "pull": [5, 244, 245, 265, 266], "request": [5, 12, 19, 26, 28, 129, 221, 222, 240, 244, 245, 262, 265, 266, 278], "guid": [5, 127, 231, 234, 235, 236, 241, 244, 261, 265, 268, 271, 275, 285], "baroclinic_channel": [5, 12, 15, 228, 233, 237, 240, 242, 243, 244, 263, 265, 275, 279, 284, 289, 290], "label": [5, 111, 271, 284], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 124, 129, 232, 237, 240, 242, 243, 244, 245, 263, 265, 270, 271, 276, 284, 289], "baroclin": [5, 45, 135, 136, 138, 140, 142, 145, 148, 152, 155, 158, 160, 211, 216, 231, 240, 242, 243, 265, 277], "channel": [5, 45, 135, 136, 138, 140, 142, 145, 148, 152, 155, 158, 160, 211, 216, 231, 240, 242, 262, 265, 277], "And": [5, 12, 245, 265], "becom": [5, 240, 242, 265], "who": [5, 245, 265, 266, 272], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 67, 91, 97, 102, 103, 108, 124, 228, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 257, 259, 261, 263, 264, 266, 271, 274, 277, 278, 282, 289, 290], "brief": [5, 265], "overview": [5, 264, 268, 272], "comment": [5, 241, 266], "appli": [5, 11, 12, 56, 230, 243, 265, 277, 282, 283, 288], "vertic": [5, 16, 230, 231, 234, 235, 236, 240, 266, 273, 275], "grid": [5, 11, 14, 61, 68, 72, 75, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 127, 174, 218, 219, 220, 221, 222, 223, 226, 227, 231, 232, 234, 235, 236, 240, 259, 265, 266], "initi": [5, 6, 32, 112, 134, 137, 140, 145, 162, 172, 189, 204, 209, 212, 214, 231, 232, 234, 235, 236, 240, 242, 243, 244, 253, 262, 263, 264, 266, 274, 276, 289], "condit": [5, 32, 137, 140, 145, 162, 172, 189, 204, 209, 212, 214, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 253, 261, 263, 264, 266, 276, 289], "forc": [5, 15, 236, 261, 265, 289], "common": [5, 7, 10, 38, 41, 45, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 262, 263, 265, 266, 271, 272, 284, 289, 290], "refer": [5, 12, 32, 134, 152, 220, 223, 226, 227, 240, 242, 244, 245, 263, 264, 265, 274, 277, 284], "awar": [5, 124, 237, 265, 271], "wish": [5, 12, 240, 245, 265, 284, 290], "test_group_nam": 5, "specif": [5, 7, 12, 43, 124, 228, 237, 238, 243, 257, 259, 264, 265, 266, 268, 271, 277, 283, 284, 288, 290], "share": [5, 16, 127, 136, 228, 231, 234, 235, 236, 237, 238, 240, 242, 243, 245, 247, 261, 264, 267, 268, 269, 270, 271, 272, 273, 277, 283, 284, 288], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 61, 68, 124, 127, 136, 147, 157, 240, 242, 243, 244, 264, 265, 278, 289], "public": [5, 9, 240, 265, 266], "api": [5, 10, 264, 265], "underscor": [5, 265], "md": [5, 265], "eval": 5, "rst": [5, 12, 265], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 136, 138, 140, 148, 152, 158, 231, 237, 242, 265], "baroclinicchanneltestcas": [5, 231], "compute_cell_count": [5, 127, 231, 234, 235, 265], "dynamic_model_config": [5, 231, 234, 235, 265], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 127, 130, 143, 144, 151, 170, 171, 187, 188, 202, 203, 231, 234, 235, 236, 242, 244, 245, 247, 263, 264, 265, 266, 278, 284, 289], "across": [5, 12, 16, 231, 240, 241, 242, 243, 244, 245, 263, 265, 273, 277, 278], "ot": [5, 265], "automat": [5, 7, 10, 12, 16, 127, 240, 242, 244, 245, 265, 266, 267, 269, 270, 271, 272, 284], "python": [5, 6, 7, 20, 38, 43, 238, 240, 242, 243, 244, 245, 263, 264, 265, 266, 271, 272, 284], "begin": [5, 15, 231, 240, 245, 259, 264, 265, 271, 277, 278, 282], "numpydoc": [5, 265], "text": [5, 6, 277, 278, 282], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 127, 220, 222, 223, 224, 225, 226, 227, 228, 234, 235, 242, 265, 266, 268, 272, 280, 281], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 72, 124, 127, 129, 130, 134, 143, 167, 170, 183, 187, 198, 202, 223, 224, 225, 231, 232, 234, 235, 236, 240, 245, 268, 269, 271, 272, 277, 280, 281, 284], "pressur": [5, 228, 266, 280, 281], "overli": [5, 265], "ic": [5, 127, 228, 244, 245, 259, 261, 264, 265, 266, 268, 274, 287, 288, 289], "shelf": [5, 127, 243, 244, 265, 266, 274], "draft": [5, 274], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 67, 72, 73, 75, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 127, 129, 130, 132, 134, 136, 138, 140, 142, 143, 144, 145, 148, 150, 151, 152, 155, 158, 160, 163, 166, 167, 169, 170, 171, 172, 174, 176, 179, 181, 183, 184, 185, 186, 187, 188, 189, 191, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 211, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 240, 242, 243, 250, 253, 255, 277, 278, 280, 281, 282], "xarrai": [5, 14, 16, 112, 220, 221, 222, 223, 224, 225, 226, 227, 240, 265], "dataarrai": [5, 183, 184, 185, 198, 199, 200, 221, 222, 223, 224, 225, 240], "sea": [5, 127, 183, 185, 198, 200, 222, 223, 224, 225, 228, 259, 261, 264, 265, 266, 274, 280, 281, 287], "surfac": [5, 127, 183, 185, 198, 200, 222, 223, 224, 225, 228, 230, 236, 261, 265, 266, 274, 277, 280, 281, 282], "height": [5, 127, 183, 185, 198, 200, 222, 223, 224, 225, 228, 265, 266, 274, 280, 281], "mask": [5, 220, 223, 226, 227, 240, 265, 266, 274], "landicepressur": [5, 242], "deviat": 5, "float": [5, 7, 12, 20, 60, 62, 63, 67, 72, 92, 110, 112, 136, 138, 140, 142, 145, 148, 152, 155, 158, 167, 183, 184, 185, 186, 189, 196, 198, 199, 200, 201, 204, 211, 212, 214, 240, 242, 265], "densiti": [5, 11, 127, 265], "seawat": 5, "displac": 5, "land": [5, 127, 228, 264, 265, 266, 274, 289], "landicedraft": 5, "equal": [5, 236, 240, 244, 282], "entri": [5, 47, 80, 102, 103], "alwai": [5, 7, 10, 15, 50, 127, 228, 237, 240, 244, 245, 257, 265, 266], "own": [5, 6, 9, 10, 16, 32, 240, 242, 244, 245, 263, 265, 266, 278, 284, 289], "line": [5, 8, 30, 32, 83, 84, 94, 240, 241, 244, 245, 264, 284], "type": [5, 12, 14, 16, 20, 89, 96, 119, 209, 212, 214, 240, 242, 243, 244, 245, 252, 257, 262, 263, 265, 266, 277, 278, 280, 281, 282, 283, 290], "side": 5, "colon": 5, "doubl": [5, 127, 240, 241, 265], "back": [5, 265, 268, 284], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 63, 85, 228, 244, 245, 262, 265, 266, 284], "arg": [5, 10, 32, 83, 84, 240], "indic": [5, 6, 12, 14, 15, 32, 33, 103, 110, 112, 223, 238, 240, 262, 265, 266, 274, 282], "On": [5, 11, 245, 271], "next": [5, 243, 265, 274, 284], "indent": [5, 240], "obviou": [5, 12, 265], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 55, 56, 58, 60, 67, 73, 77, 86, 87, 88, 91, 92, 95, 97, 99, 103, 104, 108, 109, 110, 111, 112, 114, 118, 129, 130, 142, 143, 170, 186, 187, 198, 201, 202, 211, 240, 265, 274, 277, 278, 280, 281, 282, 283, 287], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 79, 104, 114, 115, 132, 144, 151, 242, 244, 265, 266, 284, 288], "els": [5, 6, 240, 265], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 110, 111, 112, 115, 120, 121, 122, 123, 125, 127, 129, 212, 230, 240, 242, 243, 245, 265, 266, 267, 268, 269, 270, 271, 272, 277, 284, 289], "further": [5, 242, 243, 272, 283, 288], "necessari": [5, 11, 237, 265], "rais": [5, 7, 15, 32, 35, 51, 53, 110, 127, 240, 242, 243, 244, 265], "list_cas": 6, "list_machin": [6, 244], "list_suit": 6, "anywher": [6, 10, 245], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 79, 100, 104, 109, 110, 113, 114, 118, 119, 183, 198, 237, 242, 243, 244, 265], "later": [6, 15, 19, 29, 32, 39, 50, 110, 129, 240, 265, 266], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 78, 79, 113, 127, 230, 240, 242, 265], "properti": [6, 12, 230, 240, 271, 278], "clean_cas": 6, "delet": [6, 244, 245, 262, 284], "constant": [6, 60, 67, 68, 127, 230, 265, 277, 278, 280, 282, 283, 288], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 113, 219, 240, 242, 245, 261, 265], "out": [6, 11, 81, 85, 112, 238, 240, 244, 245, 266, 274, 284], "proven": [6, 8, 50, 264, 266], "save": [6, 16, 51, 75, 231, 240, 242, 243, 265, 271, 276, 277], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 36, 41, 45, 50, 79, 82, 86, 103, 104, 110, 113, 114, 115, 132, 232, 240, 242, 243, 244, 265, 278], "target": [6, 9, 14, 19, 34, 53, 55, 87, 124, 127, 129, 231, 234, 235, 240, 242, 265, 278], "minimum": [6, 55, 112, 127, 129, 231, 234, 235, 240, 265, 266, 274, 277, 278, 280, 281, 282, 283, 288], "determin": [6, 11, 12, 16, 34, 38, 41, 119, 127, 133, 231, 232, 234, 235, 240, 243, 265, 274, 277, 278, 280, 281, 283, 284, 288], "maximum": [6, 15, 110, 112, 265, 266, 274], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 83, 84, 87, 127, 129, 142, 186, 201, 211, 240, 242, 265], "cpus_per_task": [6, 12, 32, 36, 39, 83, 84, 240], "attribut": [6, 10, 11, 12, 15, 38, 91, 97, 234, 235, 243, 265], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 265, 274, 277, 278, 280, 281, 282, 283], "runtim": [6, 24, 38, 127, 130, 143, 144, 151, 170, 171, 187, 188, 202, 203, 240, 242, 265], "min_task": [6, 12, 14, 19, 29, 32, 39, 83, 84, 87, 127, 129, 142, 186, 201, 211, 240, 242, 265], "min_cpus_per_task": [6, 12, 32, 39, 83, 84, 240], "fewest": 6, "least": [6, 11, 15, 237, 245], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 110, 129, 142, 186, 201, 211, 240, 264, 265, 266, 278, 280, 281], "run_test": [6, 240, 242], "run_single_step": 6, "oper": [6, 40, 147, 157, 240, 242, 290], "log": [6, 8, 15, 16, 32, 41, 84, 110, 111, 112, 240, 242, 245, 264, 284], "figur": [6, 236, 238, 240, 243, 266], "cpu": [6, 12, 124, 240, 265, 284], "per": [6, 12, 19, 29, 31, 32, 39, 83, 84, 127, 129, 240, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 283, 288], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 59, 60, 64, 67, 68, 69, 73, 74, 87, 93, 113, 127, 128, 129, 130, 132, 135, 136, 138, 140, 142, 143, 144, 145, 148, 150, 151, 152, 155, 158, 160, 162, 163, 166, 169, 170, 171, 172, 174, 176, 177, 178, 179, 181, 183, 186, 187, 188, 189, 191, 193, 194, 196, 198, 201, 202, 203, 204, 206, 208, 209, 211, 212, 214, 216, 231, 232, 234, 235, 237, 240, 242, 244, 248, 249, 250, 252, 253, 255, 265, 278, 283, 288], "wa": [6, 15, 51, 109, 110, 124, 137, 139, 141, 149, 154, 159, 182, 197, 210, 213, 240, 242, 244, 245, 254, 262, 265, 266, 274, 284], "retriev": [6, 262], "store": [6, 15, 43, 127, 234, 235, 240, 242, 265, 284], "dure": [6, 9, 12, 24, 32, 41, 127, 130, 143, 144, 151, 170, 171, 187, 188, 202, 203, 240, 242, 244, 245, 265, 266, 284, 289, 290], "txt": [6, 108, 241, 262], "case_output": [6, 10], "individu": [6, 7, 16, 110, 242, 244, 265, 271, 272, 277, 284, 289], "involv": [6, 12, 15, 110, 240, 242, 263, 265], "implement": [6, 7, 231, 232, 234, 235, 236, 244, 261, 277, 278, 280, 281], "termin": [6, 15, 240, 245, 265], "window": 6, "update_cach": 6, "_cached_fil": [6, 240], "map": [6, 14, 17, 25, 67, 68, 87, 111, 112, 132, 174, 176, 232, 245, 266], "origin": [6, 48, 245, 265, 284], "enabl": [6, 16, 240, 262, 266, 272, 280, 281], "consum": [6, 240, 242, 265, 290], "faster": [6, 245], "debug": [6, 120, 121, 122, 123, 125, 265, 267, 268, 269, 270, 272], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 231, 234, 235, 236, 239, 240, 242, 243, 244, 245, 261, 265, 266, 267, 268, 269, 270, 271, 272, 282, 283, 284, 288, 290], "mpas_tool": [7, 10, 11, 72, 231, 234, 235, 236, 240, 265], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 54, 55, 82, 85, 86, 100, 111, 183, 198, 218, 220, 221, 222, 226, 227, 265], "certain": [7, 15, 50, 240, 245, 266, 283, 288], "add_from_packag": [7, 244, 265], "content": [7, 12, 104, 106, 119, 238, 240, 244, 261, 265, 284, 287], "found": [7, 12, 114, 244, 245, 264, 265, 267, 268, 269, 270, 271, 272], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 75, 127, 237, 240, 242, 243, 244, 265, 266], "cfg": [7, 43, 237, 242, 243, 244, 265, 266, 284], "except": [7, 15, 32, 35, 51, 110, 240, 244, 265], "first": [7, 12, 102, 103, 231, 234, 235, 236, 240, 242, 243, 244, 245, 262, 265, 267, 268, 269, 270, 271, 272, 277, 278, 282, 284], "second": [7, 11, 12, 142, 211, 236, 240, 244, 277, 282, 287], "know": [7, 9, 11, 127, 240, 244, 245, 265], "behavior": [7, 12, 99, 240, 241, 242, 245, 265], "noth": [7, 262, 278], "being": [7, 24, 32, 41, 98, 103, 110, 130, 143, 144, 151, 170, 171, 187, 188, 202, 203, 240, 242, 243, 244, 245, 265, 274], "test_group": [7, 17, 18, 32, 41, 136, 138, 140, 148, 152, 158, 163, 181, 196, 209, 212, 240, 242, 243, 250, 253, 265], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 56, 58, 98, 99, 103, 108, 110, 112, 127, 129, 214, 216, 230, 240, 242, 243, 259, 265, 266, 268, 270, 272, 277], "happen": [7, 10, 12, 14, 110, 240, 242, 265, 278], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 59, 60, 67, 73, 87, 113, 127, 128, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 177, 178, 179, 181, 183, 186, 189, 191, 193, 194, 196, 198, 201, 204, 206, 208, 209, 211, 212, 214, 216, 228, 231, 232, 234, 235, 236, 237, 240, 242, 243, 247, 248, 249, 250, 252, 253, 255, 257, 261, 265], "larg": [7, 15, 240, 242, 265, 267], "those": [7, 12, 15, 41, 109, 110, 124, 242, 243, 244, 245, 264, 265, 278, 283, 288, 290], "configpars": [7, 83, 84, 243], "getinteg": 7, "getfloat": [7, 10, 12, 14, 240, 265], "getboolean": [7, 240, 265], "getlist": [7, 265], "comma": [7, 278], "integ": [7, 11], "boolean": [7, 112, 223], "etc": [7, 12, 105, 108, 237, 240, 242, 277], "getexpress": 7, "tupl": 7, "rang": [7, 112, 265, 278], "numpi": [7, 11, 61, 68, 69, 75, 111, 127, 134, 218, 219, 240, 265], "linspac": [7, 16, 232, 278], "arang": 7, "arrai": [7, 61, 68, 69, 75, 111, 127, 218, 219, 221, 222, 223, 224, 265], "One": [7, 11, 265, 284, 290], "advantag": [7, 12, 124, 244, 265, 271], "track": [7, 19, 240, 242, 245], "associ": [7, 11, 12, 16, 220, 226, 227, 231, 242, 243, 245, 263], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 60, 67, 73, 87, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 181, 186, 189, 191, 193, 194, 196, 201, 204, 206, 208, 209, 211, 212, 214, 216, 237, 240, 242, 243, 244, 249, 250, 252, 253, 255, 265, 290], "command": [8, 13, 30, 32, 38, 83, 84, 86, 94, 240, 244, 245, 263, 264, 265, 268, 271, 272, 284], "while": [8, 14, 16, 230, 231, 240, 243, 262, 263, 265], "meant": [8, 244, 266], "simplifi": 8, "verifi": [8, 241, 266], "io": [8, 240, 242, 244, 264, 265, 266, 275, 285], "remap": [8, 16, 174, 232, 264, 278, 283, 288], "visual": [8, 11, 14, 166, 191, 206, 232, 234, 235, 240, 242, 243, 263, 264, 278, 280, 281, 283, 288], "lot": [9, 127, 240, 244, 265], "o": [9, 10, 104, 106, 119, 244, 245, 265, 266, 284], "relat": [9, 11, 12, 127, 228, 231, 234, 235, 236, 240, 243, 244, 245, 262, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 282, 283, 284, 285], "handl": [9, 10, 242, 245, 265, 271], "intern": [9, 19, 41, 240, 245, 262], "lower": [9, 242, 265, 277], "directli": [9, 11, 12, 14, 32, 238, 240, 244, 263, 264, 265, 268], "aren": [9, 32, 33, 240, 244, 245, 265, 290], "readm": [9, 242], "importlib": [9, 242], "resourc": [9, 12, 29, 36, 39, 52, 82, 83, 84, 130, 142, 143, 170, 187, 202, 211, 231, 234, 235, 240, 242, 265], "import": [9, 10, 11, 12, 14, 16, 237, 240, 242, 243, 244, 245, 263, 265], "files_for_e3sm": [9, 242, 266], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 55, 56, 60, 67, 73, 77, 79, 83, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 129, 134, 136, 142, 150, 167, 169, 172, 174, 176, 211, 219, 240, 242, 243, 252, 265], "did": [9, 15, 110, 265], "add_input_fil": [9, 14, 33, 240, 242, 265], "collect": [9, 45, 90, 128, 237, 239, 248, 263, 265], "though": [9, 32, 242, 244, 265], "whenev": [9, 240, 265], "flexibl": [9, 232, 242, 245, 265], "care": [9, 11, 240, 243, 245, 265], "No": [9, 264, 280, 281], "step_dir": 9, "database_root": [9, 240, 266, 267, 268, 269, 270, 271, 272, 284], "download_path": 9, "join": [9, 265], "bathymetry_databas": [9, 240, 266], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 223, 240, 243, 265, 274, 277, 278, 280, 281, 282, 283, 289], "url": [9, 34, 51, 240, 262, 266], "web": [9, 240, 266], "anl": [9, 240, 266], "gov": [9, 240, 262, 266, 268, 272], "mpas_standalonedata": [9, 266, 271], "dest_path": [9, 51], "remot": [9, 34, 245], "bathymetri": [9, 240, 266], "strategi": 10, "stderr": [10, 32, 41, 240], "loggingcontext": 10, "check_cal": [10, 240], "most": [10, 38, 124, 228, 237, 240, 243, 244, 245, 257, 263, 265, 266, 271, 272, 274, 275, 285, 289], "won": [10, 244, 265, 266], "logger": [10, 32, 41, 59, 84, 240, 242, 265], "full": [10, 32, 83, 99, 221, 222, 231, 232, 240, 242, 245, 261, 264, 265, 271, 274, 276, 277, 278, 280, 281, 282, 283, 284], "although": 10, "captur": 10, "insid": [10, 240, 244], "good": [10, 32, 240, 245, 265], "idea": [10, 265], "explicit": [10, 244], "go": [10, 240, 242, 243, 244, 245, 265, 272], "even": [10, 11, 12, 15, 34, 50, 124, 240, 244, 245, 265, 266, 271, 284], "subprocess": [10, 32, 83, 84, 98, 240, 244, 262], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 127, 138, 148, 158, 231, 232, 234, 235, 236, 240, 244, 245, 250, 261, 265, 280, 281, 284, 287], "otherwis": [10, 15, 240, 242, 265, 267, 268, 269, 270, 271, 272, 277], "intent": 10, "desir": [10, 11, 12, 15, 16, 110, 127, 232, 240, 241, 265, 266, 284], "trick": [10, 240], "direct": [10, 11, 12, 72, 183, 198, 231, 234, 235, 242, 265, 272, 277, 280, 281], "snippet": [10, 265], "dome": [10, 59, 240, 242, 243, 263, 284, 289], "setup_mesh": [10, 240], "setupmesh": [10, 240, 242], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 59, 124, 237, 243, 244, 245, 263, 265, 266], "mpas_grid": [10, 240], "landice_grid": [10, 240, 265], "l": [10, 110, 265, 272], "sever": [10, 240, 242, 243, 244, 245, 263, 264, 265, 283, 284, 290], "global": [11, 14, 45, 91, 92, 97, 162, 163, 232, 240, 241, 243, 244, 263, 264, 265, 266, 272, 278, 283, 284, 288, 289], "quasiuniformsphericalmeshstep": [11, 232], "icosahedralmeshstep": [11, 232], "jigsaw": [11, 60, 64, 66, 67, 69, 71, 73, 163, 166, 240], "complex": [11, 15, 68, 242, 244, 265], "build_cell_width_lat_lon": [11, 67], "opt": [11, 73], "make_jigsaw_mesh": [11, 67], "icosahedr": [11, 60, 62, 163, 166, 278], "significantli": [11, 274], "smooth": 11, "cell": [11, 12, 16, 60, 61, 62, 63, 67, 68, 69, 72, 75, 89, 96, 127, 129, 130, 143, 167, 170, 183, 185, 187, 198, 200, 202, 220, 221, 222, 223, 226, 227, 231, 234, 235, 240, 242, 243, 259, 274, 277, 278, 280, 281, 282, 283, 287], "quasi": [11, 67, 266, 278, 283, 288], "hand": [11, 92, 244], "restrict": [11, 265, 283], "resolut": [11, 12, 14, 60, 63, 67, 68, 72, 88, 92, 95, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 163, 166, 167, 169, 179, 186, 189, 191, 194, 196, 201, 204, 206, 209, 211, 212, 214, 231, 232, 234, 235, 236, 238, 240, 242, 243, 266, 277, 278, 280, 281, 282, 283, 288, 289], "subdivis": [11, 60, 61, 62, 63, 64], "icosahedron": [11, 61, 62, 63, 64], "tabl": [11, 245, 271, 284], "approxim": [11, 60, 62, 63, 67, 127, 130, 143, 170, 187, 202, 245, 265], "width": [11, 60, 61, 62, 67, 68, 69, 75, 265, 277], "km": [11, 60, 61, 62, 63, 67, 68, 69, 72, 75, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 169, 186, 189, 196, 201, 204, 211, 212, 214, 231, 232, 234, 235, 265, 266, 277, 278, 280, 281, 282, 283, 288, 289], "5": [11, 62, 127, 152, 231, 232, 240, 241, 242, 244, 262, 265, 266, 277, 278, 283, 284, 288], "240": [11, 62, 232, 266, 278], "6": [11, 62, 240, 265, 275, 277, 282, 284, 285], "120": [11, 62, 241, 278], "7": [11, 62, 265, 272, 278, 284], "60": [11, 12, 62, 232, 274, 278], "8": [11, 62, 231, 242, 245, 265, 266, 277, 278, 280, 281, 284], "30": [11, 62, 243, 265, 272, 277, 278, 282, 283, 288], "9": [11, 16, 62, 232, 265, 278, 284], "15": [11, 12, 62, 231, 265, 277, 278, 282, 283, 284, 288], "10": [11, 15, 62, 228, 231, 234, 235, 242, 243, 265, 266, 271, 274, 277, 280, 281, 282, 289], "11": [11, 62, 265, 284], "3": [11, 62, 231, 240, 241, 243, 245, 262, 265, 266, 271, 272, 274, 277, 278, 280, 281, 283, 284], "12": [11, 62, 261, 265, 268, 287], "13": [11, 62, 265, 277], "94": [11, 62], "spherical_mesh": [11, 68], "cell_width": [11, 60, 61, 62, 63, 67, 68, 69, 75], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 60, 67, 240, 265], "plot": [11, 75, 111, 112, 127, 155, 160, 174, 216, 231, 232, 234, 235, 255, 278, 280, 281, 287, 289], "plot_cell_width": 11, "cell_width_filenam": [11, 75], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 111, 174, 232, 266, 278], "lon": [11, 14, 61, 67, 68, 69, 75, 88, 90, 92, 95, 111, 174, 232, 266, 278], "sphere": [11, 232, 278], "vtk_lat_lon": 11, "far": [11, 220, 226, 227, 244, 265], "But": [11, 124, 240, 243, 244, 245, 265, 266, 271], "hexagon": [11, 72, 265, 280, 281], "planar_hex": [11, 72, 231, 234, 235, 236, 240, 265], "make_planar_hex_mesh": [11, 72, 231, 234, 235, 236, 240, 265], "x": [11, 16, 61, 68, 69, 72, 75, 91, 97, 112, 134, 183, 198, 240, 242, 265, 277, 280, 281, 282], "y": [11, 12, 16, 72, 91, 97, 112, 183, 198, 231, 234, 235, 240, 242, 265, 272, 277, 280, 281], "nx": [11, 72, 240, 243, 265], "ny": [11, 72, 240, 243, 265], "dc": [11, 240, 243, 265], "distanc": [11, 72, 265, 277], "adjac": [11, 274], "center": [11, 16, 72, 183, 198, 243, 265, 274, 277], "admittedli": 11, "oddli": 11, "period": [11, 230, 231, 234, 235, 240, 265, 277, 280, 281], "nonperiodic_x": [11, 240, 265], "nonperiodic_i": [11, 240, 265], "consider": [11, 220, 226, 227, 230, 259], "compute_planar_hex_nx_ni": [11, 265], "lx": [11, 72, 265, 277, 280, 281, 282], "ly": [11, 72, 265, 277, 282], "explan": 11, "subtleti": 11, "account": [11, 72, 245, 265, 267, 268, 270, 271, 272, 284], "behav": 11, "stagger": [11, 72], "strictli": [11, 244, 265], "physic": [11, 72, 253, 261, 265], "howev": [11, 240, 241, 242, 245, 265], "np": [11, 16, 232, 265, 278], "sqrt": [11, 280], "domain": [11, 19, 26, 72, 112, 127, 129, 134, 230, 243, 259, 265, 277, 278, 280, 281, 282, 283, 288, 289], "extra": [11, 245], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 243, 265], "max": [11, 127, 240, 265, 277, 278], "int": [11, 12, 19, 20, 29, 32, 39, 54, 55, 56, 60, 61, 62, 63, 64, 72, 83, 84, 87, 112, 129, 130, 142, 143, 163, 166, 167, 169, 170, 179, 186, 187, 191, 194, 201, 202, 206, 211, 240, 265, 282], "ds_mesh": [11, 16, 112, 265], "creation": [11, 240, 266], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 83, 84, 129, 240, 243, 244, 265], "distant": 11, "futur": [11, 38, 240, 244, 263, 264, 265, 266, 282, 284, 289], "descend": [12, 14, 127, 237, 240, 242, 243, 244, 247, 265], "modelstep": [12, 127, 240, 242, 247, 265], "update_pio": [12, 19, 129], "librari": [12, 120, 124, 245, 265, 267, 268, 269, 270, 271, 272, 284], "make_graph": [12, 19, 129], "mpi": [12, 14, 87, 120, 123, 124, 129, 131, 133, 231, 234, 235, 240, 245, 262, 264, 265, 267, 268, 269, 270, 272, 284], "construct": [12, 128, 218, 220, 221, 222, 226, 227, 230, 236, 237, 242, 243, 248, 265, 277], "non": [12, 15, 230, 240, 265, 284], "At": [12, 32, 41, 238, 239, 265], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 84, 129, 142, 186, 201, 211, 240, 241, 263, 265, 266, 268, 272, 284, 290], "openmp_thread": [12, 19, 29, 32, 39, 84, 129, 142, 186, 201, 211, 240, 242, 265], "definit": [12, 265], "prefix": [12, 34, 245, 266], "end": [12, 231, 240, 242, 244, 245, 251, 261, 263, 265, 268, 277, 278, 280, 281, 282, 287], "yml": 12, "reason": [12, 14, 38, 240, 244, 265, 290], "add_namelist_fil": [12, 19, 127, 240, 242], "add_yaml_fil": [12, 19, 240, 242, 265], "add_model_config_opt": [12, 19, 240, 242, 265], "add_streams_fil": [12, 19, 127, 240, 242], "themselv": [12, 244, 264], "question": [12, 240, 266], "constructor": [12, 231, 234, 235, 237, 243, 265], "simpli": [12, 50, 140, 209, 212, 237, 240, 242, 243, 245, 265, 274, 284, 290], "safe": [12, 15, 240, 245, 277], "never": [12, 263], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": [12, 265], "config_run_dur": [12, 242, 265], "0024_00": 12, "00": [12, 15, 242, 259, 265, 272, 284], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 138, 263, 265], "config_block_decomp_file_prefix": [12, 265], "time_integr": [12, 265], "config_time_integr": 12, "rk4": [12, 244], "filename_templ": [12, 265], "restart": [12, 41, 234, 235, 236, 241, 244, 250, 251, 261, 263, 265, 284, 290], "output_interv": [12, 265], "0030_00": 12, "clobber_mod": [12, 265], "truncat": [12, 265], "reference_tim": 12, "0001": [12, 265], "01": [12, 259, 265, 282, 287], "01_00": [12, 259, 265], "tracer": [12, 16, 231, 232, 234, 235, 236, 265, 278, 280, 281, 282], "xtime": [12, 265], "normalveloc": [12, 15, 16, 139, 141, 149, 154, 159, 182, 197, 199, 210, 230, 231, 234, 235, 236, 240, 265, 282], "layerthick": [12, 15, 127, 137, 139, 141, 149, 154, 159, 182, 197, 210, 220, 224, 225, 226, 227, 231, 234, 235, 236, 240, 242, 265], "refzmid": [12, 220, 226, 227, 240, 265], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15, 265], "clariti": [12, 240], "guarante": [12, 228, 245, 257], "uniqu": [12, 242, 265], "global_converg": [12, 228, 233, 265, 275, 276, 279], "cosine_bel": [12, 265, 283, 288], "substitut": 12, "config_write_output_on_startup": [12, 265], "0000_00": [12, 265], "config_use_mom_del2": [12, 265], "config_implicit_bottom_drag_coeff": [12, 265], "0e": [12, 281, 282], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": [12, 265], "config_cvmix_background_viscos": [12, 265], "worri": 12, "sometim": [12, 220, 226, 227, 240, 242, 263, 265], "easier": [12, 240, 244, 245, 266, 284, 290], "togeth": [12, 263, 265, 290], "seem": [12, 265, 268, 272], "overkil": 12, "reli": [12, 240, 265], "differ": [12, 14, 15, 50, 64, 69, 110, 124, 127, 142, 152, 228, 231, 237, 238, 240, 241, 242, 243, 244, 257, 263, 265, 266, 268, 272, 277, 278, 280, 281, 283, 288], "along": [12, 16, 231, 240, 242, 264, 265], "could": [12, 14, 16, 232, 240, 241, 242, 244, 245, 265, 278], "nu": [12, 142, 155, 211, 231, 240, 242, 265], "viscos": [12, 142, 152, 155, 231, 240, 242, 244, 265, 277], "hmix": 12, "config_mom_del2": [12, 231, 240, 265], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 56, 98, 99, 102, 103, 108, 110, 111, 115, 129, 130, 142, 143, 144, 151, 163, 166, 170, 171, 187, 188, 202, 203, 211, 265], "cannot": [12, 15], "known": [12, 32, 33, 232, 240, 265], "beforehand": 12, "particularli": [12, 262, 265, 283, 288], "openmp": [12, 19, 29, 32, 39, 84, 120, 122, 123, 129, 142, 186, 201, 211, 240, 265, 267, 268, 269, 270, 272], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 244, 263, 265, 277, 284], "complic": [12, 243, 244, 245, 247, 265], "xml": [12, 104, 106, 107, 119, 257, 263], "slightli": [12, 15, 245], "sophist": 12, "immutable_stream": [12, 265], "var_struct": [12, 257], "var": [12, 105, 257, 265], "var_arrai": [12, 257], "tag": [12, 264], "taken": [12, 19, 129, 232, 240, 265, 272, 284], "past": 12, "experi": [12, 124, 244, 274], "shown": [12, 238, 242, 282], "featur": [12, 244, 245, 263, 265, 266, 277, 282], "difficult": [12, 124, 271], "synchron": [12, 264], "equival": [12, 245, 265, 267], "try": [12, 53, 244, 245, 262, 265, 266, 268, 272, 284], "template_replac": [12, 22, 23], "treat": [12, 241, 244], "jinja2": [12, 22, 23, 104], "render": [12, 22, 23, 104], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 266], "qu240dynamicadjust": 12, "seri": [12, 127, 155, 160, 216, 232, 234, 261, 265, 276], "dynam": [12, 129, 162, 228, 236, 266, 277, 278, 282, 283], "adjust": [12, 127, 162, 228, 266], "durat": [12, 231, 234, 235, 236, 241, 265], "interv": 12, "spin": 12, "reus": [12, 240, 244, 245, 265, 266, 284], "qualit": [12, 15], "affect": [12, 15, 240, 245, 265], "update_streams_at_runtim": 12, "fairli": [12, 242, 244, 245, 265], "hour": [12, 234, 235, 241, 261, 268, 272, 280, 281, 284, 287], "turn": [12, 32, 49, 240, 262, 265, 282], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 274, 277, 282], "minut": [12, 231, 241, 277, 290], "dai": [12, 152, 231, 232, 236, 242, 261, 265, 277, 278, 282, 287], "03d": 12, "_": [12, 87, 240, 242, 245, 265, 282], "02d": 12, "forgotten": 12, "broken": [12, 240, 244], "immedi": [12, 59, 245, 265], "miss": [12, 15, 240, 265, 266], "detect": [12, 16, 266, 267, 269, 270, 271, 284], "gpmeti": [12, 266], "divid": [12, 274], "partition_graph": [12, 19, 129], "circumst": [12, 15, 32, 33, 240, 265], "wast": 12, "manual": [12, 15, 41, 42, 240, 242, 289], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 36, 39, 54, 82, 83, 84, 124, 129, 240, 241, 244, 245, 265, 266, 267, 268, 269, 270, 271, 272, 284], "v1": [12, 274], "better": [12, 14, 124, 284], "v2": [12, 266, 274], "littl": [12, 244, 245, 264, 265], "feel": [12, 240, 265], "runtime_setup": [12, 14, 29, 39, 231, 234, 235, 242], "onc": [12, 231, 245, 265, 266, 278, 284], "yourself": [12, 265, 271], "fact": [12, 32], "culler": 12, "cull": [12, 231, 234, 235, 240, 265], "model_step": [12, 240], "make_graph_fil": [12, 240], "field": [12, 15, 75, 77, 112, 174, 220, 226, 227, 230, 231, 234, 235, 236, 265, 277, 278, 280, 281], "weight": [12, 14, 77, 220, 226, 227, 265, 274], "weight_field": [12, 77], "frequent": [14, 228, 257], "observ": [14, 264], "dataset": [14, 112, 183, 198, 220, 226, 227, 240, 265], "region": [14, 16, 264, 266], "pyremap": [14, 93], "interpol": [14, 87, 232, 266], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 240, 245], "mappingfilestep": [14, 16], "woa": 14, "2023": [14, 280, 281], "__init__": [14, 17, 19, 32, 41, 45, 50, 59, 60, 67, 73, 87, 113, 128, 129, 135, 136, 138, 140, 142, 145, 148, 150, 152, 155, 158, 160, 162, 163, 166, 169, 172, 174, 176, 178, 179, 181, 183, 186, 189, 191, 193, 194, 196, 198, 201, 204, 206, 208, 209, 211, 212, 214, 216, 237, 240, 242, 243, 244, 248, 249, 250, 252, 253, 255, 263, 265], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 274], "bilinear": [14, 87, 232, 278, 283, 288], "filenam": [14, 34, 35, 81, 88, 89, 90, 91, 95, 96, 97, 100, 110, 114, 116, 240, 245, 265], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 266], "destin": [14, 87, 88, 89, 90, 91, 92, 93], "src_from_lon_lat": 14, "lon_var": [14, 88, 90, 95], "lat_var": [14, 88, 90, 95], "dst_from_mpa": 14, "mesh_nam": [14, 88, 89, 90, 91, 92, 95, 96, 97, 167, 169, 172, 174, 176], "qu60": 14, "subclass": [14, 64, 67, 68, 69, 74, 127, 265], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 163, 174, 232], "super": [14, 237, 240, 242, 243, 244, 265], "128": [14, 241, 268, 269, 272], "cosine_bell_viz": [14, 16, 232, 278, 283, 288], "dlon": [14, 92, 232, 278, 283, 288], "dlat": [14, 92, 232, 278, 283, 288], "remap_method": [14, 232, 278, 283, 288], "src_from_mpa": 14, "dst_global_lon_lat": 14, "lon_min": [14, 92], "With": [14, 245], "approach": [14, 240, 243, 244, 245, 262, 265, 274], "perhap": [14, 16, 35, 243], "cover": [14, 259, 265], "nearli": [14, 240, 263, 264, 265], "situat": [14, 25, 132, 265, 284], "workflow": [14, 240, 245], "critic": [15, 265], "compare_vari": [15, 242, 265], "filename1": [15, 110, 242, 265], "filename2": [15, 110, 265], "simpl": [15, 244, 257, 265, 284], "temperatur": [15, 137, 139, 141, 149, 154, 159, 210, 213, 230, 231, 235, 236, 240, 242, 261, 265, 277, 278, 282, 283, 288], "salin": [15, 137, 139, 141, 149, 154, 159, 210, 213, 230, 231, 236, 240, 242, 265, 277, 278, 282, 283, 288], "prognost": [15, 277], "4proc": [15, 139, 265, 277], "8proc": [15, 139, 265, 277], "alter": [15, 221, 222, 240, 242, 264, 265, 274, 277, 278, 280, 281, 282, 283], "skip_if_step_not_run": [15, 110, 242], "possibli": [15, 240, 245, 265], "failur": 15, "valueerror": [15, 242, 243, 244], "quiet": [15, 99, 110, 115], "report": 15, "threshold": [15, 278, 280, 281], "l1": [15, 110], "00000000000000e": 15, "l2": [15, 110], "l_infin": 15, "linf": [15, 110], "home": [15, 245, 265, 266, 268, 271, 272], "xylar": [15, 265, 266, 271], "test_nightly_latest": 15, "10km": [15, 231, 242, 243, 265, 277, 284, 289, 290], "threads_test": 15, "1thread": [15, 159, 231, 277], "2thread": [15, 159, 277], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 240, 242, 265], "disabl": [15, 16, 230, 278, 289], "check_output": [15, 110], "zero": [15, 221, 222, 223, 224, 225, 230, 231, 236, 265, 278, 282], "l1_norm": [15, 110], "l2_norm": [15, 110], "linf_norm": [15, 110], "nonzero": [15, 110], "easiest": [15, 245], "solut": [15, 123, 183, 184, 185, 193, 194, 196, 198, 199, 200, 201, 204, 206, 232, 234, 235, 241, 262, 265, 280, 281], "clobber": 15, "error": [15, 32, 41, 127, 167, 232, 234, 235, 240, 245, 264, 265, 280, 281], "judgment": 15, "enough": [15, 231, 240, 244, 265], "problem": [15, 240, 245, 262, 265], "compare_tim": 15, "integr": [15, 152, 231, 242, 244, 265, 277, 278, 283, 288], "rundir1": [15, 109], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": [16, 265], "often": [16, 32, 240, 241, 242, 243, 244, 245, 263, 265, 266, 289, 290], "analysi": [16, 127, 231, 242, 244, 263, 264, 266, 278, 280, 281, 289], "routin": 16, "viz": [16, 163], "plot_horiz_field": [16, 265], "patch": [16, 112, 265], "style": [16, 127, 264, 265], "edg": [16, 89, 92, 96, 112, 183, 184, 198, 199, 230, 265], "polygon": 16, "character": 16, "accordingli": [16, 85], "d": [16, 112, 183, 198, 220, 226, 227, 230, 240, 265, 282], "final_normalveloc": [16, 265], "t_index": [16, 112, 265], "vmin": [16, 112, 232, 265, 278], "max_veloc": [16, 265], "vmax": [16, 112, 232, 265, 278], "cmap": [16, 112, 265], "cmo": [16, 265], "balanc": [16, 265], "show_patch_edg": [16, 112, 265], "globe": [16, 232, 278], "plot_glob": 16, "plot_land": [16, 111], "contin": [16, 111], "overlain": 16, "usag": [16, 266, 268, 272], "cmocean": [16, 265], "noqa": [16, 59, 166, 169, 172, 191, 206, 265], "f401": [16, 265], "xr": [16, 183, 184, 185, 198, 199, 200, 265], "open_dataset": [16, 240, 265], "tracer1": 16, "isel": 16, "nvertlevel": [16, 112, 220, 226, 227, 240, 265, 274], "out_filenam": [16, 107, 111, 219], "colormap_sect": [16, 111], "titl": [16, 111, 112], "colormap": [16, 111, 112, 232, 265, 278], "cosin": [16, 166, 169, 172, 174, 176, 232, 278, 283, 288], "bell": [16, 166, 169, 172, 174, 176, 232, 278, 283, 288], "converg": [16, 191, 206, 232, 238, 241, 264, 265, 278, 283, 288, 290], "colormap_nam": [16, 111, 232, 278], "viridi": [16, 232, 265, 278], "norm": [16, 110, 111, 232, 278], "norm_typ": [16, 111, 232, 278], "linear": [16, 111, 112, 232, 234, 265, 277, 278, 280], "norm_arg": [16, 111, 232, 278], "colorbar": [16, 111, 112, 232, 278], "tick": [16, 111, 232, 278], "mark": [16, 232, 245, 278], "ll": [16, 232, 244, 265, 272, 278], "colorbar_tick": [16, 111, 232, 278], "matplotlib": [16, 265], "standard": [16, 244, 245, 253, 265, 268, 284], "symlog": [16, 111], "symmetr": 16, "central": [16, 278], "logarithm": [16, 112], "color": [16, 112], "normal": [16, 183, 184, 198, 199, 230, 240, 241, 245, 265, 271], "symlognorm": 16, "lognorm": 16, "hous": 17, "dict": [17, 20, 22, 23, 25, 32, 36, 41, 45, 79, 80, 82, 86, 87, 101, 103, 104, 111, 113, 114, 115, 132, 242, 265], "kei": [17, 41, 45, 103, 242], "cach": [17, 19, 32, 34, 102, 103, 129, 264, 266, 271, 276, 284, 290], "testgroup": [18, 32, 41, 243, 244, 265], "max_memori": [19, 29, 32, 39, 129], "mesh_filenam": [19, 77, 129], "graph_filenam": [19, 77, 129], "graph": [19, 26, 28, 38, 77, 129, 231, 234, 235, 240, 265, 266], "make_yaml": 19, "pio": [19, 28, 31, 129, 231, 234, 235], "stride": [19, 31, 129], "consist": [19, 31, 129, 228, 245, 265, 266, 277], "partit": [19, 28, 38, 54, 77, 129, 231, 234, 235, 240, 266, 267, 268, 269, 270, 272, 284], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 83, 84, 87, 127, 129, 142, 186, 201, 211, 240, 243, 244, 264, 265, 266, 289], "accommod": [19, 29, 32, 39, 83, 84, 129], "fewer": [19, 29, 32, 39, 83, 84, 129, 142, 186, 201, 211, 240, 265, 284], "amount": [19, 29, 32, 39, 129, 240, 273, 282], "memori": [19, 29, 32, 39, 129, 240, 266], "mb": [19, 29, 32, 39, 129, 266], "placehold": [19, 29, 32, 39, 129, 240, 284], "at_setup": [24, 127, 130, 143, 144, 151, 170, 171, 187, 188, 202, 203, 265], "overridden": [25, 132, 240, 242, 265], "diverg": [25, 132], "counterpart": [25, 127, 132], "nest": [25, 113, 115, 132], "graph_fil": 26, "parent": [27, 237, 240, 243], "done": [29, 39, 240, 245, 265, 284], "run_as_subprocess": [32, 240], "smallest": [32, 240, 263, 274, 289], "unit": [32, 88, 92, 95, 240, 263, 277, 289], "term": [32, 263, 265, 280, 281], "necessarili": [32, 34, 263], "input_data": 32, "until": [32, 33, 240, 242, 284], "finish": [32, 33, 74, 265], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 55, 86, 113, 240, 241, 242, 262, 265, 266, 284], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 100, 240, 242], "base_work_dir": [32, 41, 240, 242], "log_filenam": [32, 41, 240], "redirect": [32, 240], "extern": [32, 228, 237, 240, 257, 275, 285], "access": [33, 242, 244, 245, 265, 267, 271, 272], "database_compon": [34, 240], "work_dir_target": [34, 240], "come": [34, 240, 245, 265, 267, 268, 269, 270, 271, 272, 275], "root": [34, 167, 228, 232, 234, 235, 237, 240, 244, 245, 257, 263, 266, 267, 268, 269, 270, 271, 272, 274, 280, 281, 284], "suffix": [34, 103, 240], "_database_root": 34, "append": 34, "available_resourc": [36, 82], "constrain": [36, 130, 143, 170, 187, 202, 231, 234, 235, 240, 265], "cores_per_nod": [36, 82, 85, 266, 267, 268, 269, 270, 271, 272, 284], "everi": [37, 177, 231, 240, 242, 244, 261, 262, 263, 265, 277, 282], "child": [37, 177, 237, 240, 242, 244], "serial": [38, 240, 242, 264, 265, 284], "subtask": 39, "stdout_logg": 41, "goe": [41, 240, 265], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 134, 242, 244, 265, 284], "statu": 41, "run_by_default": [42, 240, 242], "assum": [43, 104, 114, 242, 245, 265, 272, 277], "prior": [43, 240, 242], "greenland": [45, 243, 263, 264, 289], "eismint2": 45, "step_path": 48, "variant": [48, 231, 241, 243, 244, 245, 265, 271, 274, 277, 278], "uncach": 48, "datestamp": 48, "yymmdd": [48, 266], "dry": [48, 241], "meta": 50, "empti": [50, 240, 244, 245, 263, 265], "link_nam": 53, "overwrit": 53, "stackoverflow": [53, 265], "55742015": 53, "7728169": [53, 265], "symbol": [53, 240], "fileexistserror": 53, "unless": [53, 99, 245], "isadirectoryerror": 53, "slurm": [54, 85, 240, 264, 266, 267, 268, 269, 270, 272, 284], "qo": [54, 267, 268, 270, 271, 272, 284], "qualiti": [54, 267, 268, 270, 271, 272, 284], "servic": [54, 267, 268, 270, 271, 272, 284], "constraint": [54, 272, 284], "wall_tim": [54, 284], "wall": [54, 284], "target_cor": 55, "min_cor": 55, "decomposition_test": [59, 243, 284], "decompositiontest": [59, 243], "e501": [59, 166, 169, 172, 191, 206, 265], "turquois": [59, 268], "usr": [59, 268, 284], "climat": [59, 267, 268, 269, 271, 284], "mhoffman": 59, "latitud": [61, 68, 88, 90, 92, 95, 111, 232, 278, 283, 288], "longitud": [61, 68, 69, 75, 88, 90, 92, 95, 111, 232, 278, 283, 288], "ndarrai": [61, 68, 69, 75, 111, 134, 218, 219, 265], "degre": [61, 68, 69, 75, 92, 266, 277], "length": [61, 68, 69, 75], "180": [61, 68, 69, 75, 92, 278], "90": [61, 68, 69, 75, 240, 278], "static": [62, 63], "rule": 62, "thumb": 62, "achiev": [63, 241], "close": [63, 264, 278], "uniform": [67, 72, 169, 231, 232, 234, 235, 243, 265, 266, 277, 278, 280, 281, 282, 283, 288], "natur": 72, "jigsawpi": [73, 240], "jigsaw_jig_t": 73, "meti": 77, "defaults_filenam": 78, "total": [82, 240, 241, 244, 265, 266, 268, 284], "substep": [83, 84], "command_line_arg": 83, "cpus_per_nod": 85, "map_filenam": 87, "src_grid_info": 87, "dst_grid_info": 87, "neareststod": [87, 232, 278, 283, 288], "conserv": [87, 232, 278, 283, 288], "map_": 87, "source_typ": 87, "dest_typ": 87, "1d": [88, 92, 95, 111, 127, 218, 219, 220, 221, 222, 223, 224, 226, 227], "2d": [88, 92, 95, 111], "5x0": [88, 92, 95], "5degre": [88, 92, 95], "coordin": [88, 90, 91, 95, 97, 111, 112, 183, 198, 220, 226, 227, 273, 275, 277, 278, 280, 281, 282, 283, 287], "mesh_typ": [89, 96, 240, 242, 243], "vertex": [89, 96], "x_var": [91, 97], "y_var": [91, 97], "proj_attr": [91, 97], "proj_str": [91, 97], "proj": [91, 97], "left": [92, 127, 265, 274, 277, 278], "remapp": [93, 94], "remap_fil": 93, "step_is_subprocess": 98, "is_test_cas": 99, "steps_to_skip": 99, "progress": 99, "unpickl": [101, 240], "cached_step": 102, "copy_execut": [102, 103, 108, 284], "serv": [102, 103, 108, 243, 265], "_all": [102, 103], "streams_filenam": 104, "lxml": [104, 106, 119], "etre": [104, 106, 119], "new_child": 105, "children": 105, "sub": [105, 265], "new_tre": 106, "rundir2": 109, "infin": 110, "toler": 110, "exclud": [110, 284], "data_arrai": 111, "colorbar_label": 111, "subtitl": 111, "field_nam": 112, "out_file_nam": 112, "ax": 112, "z_index": 112, "cmap_set_und": 112, "cmap_scal": 112, "cmap_titl": 112, "horizont": [112, 127, 212, 230, 231, 234, 235, 236, 277, 280, 281, 282], "planar": [112, 127, 230, 265, 280, 281, 282, 283, 288], "depth": [112, 127, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 265, 266, 274, 277, 278, 280, 281, 282, 283], "slice": 112, "fieldnam": 112, "present": [112, 245, 265], "visibl": 112, "bar": 112, "classmethod": 114, "jinja": 114, "namelist_templ": 118, "polarisyaml": [118, 119], "processed_registry_filenam": 119, "registri": [119, 230, 257], "steam": 119, "load_dev_polaris_0": [120, 121, 122, 123, 124, 125, 265], "alpha": [120, 121, 122, 123, 124, 125, 265], "1_anvil_intel_impi": [120, 124], "sh": [120, 121, 122, 123, 124, 125, 245, 262, 265, 267, 268, 269, 270, 272, 284], "openmpi": [120, 124, 245, 264, 267, 269, 270, 284], "mvapich": [120, 124, 267], "impi": [120, 124, 267, 270], "ifort": [120, 122, 124, 265, 267, 269], "ve": [120, 121, 122, 123, 125, 240, 245, 265], "1_anvil_gnu_openmpi": 120, "gfortran": [120, 122, 123, 124, 245, 267, 269], "load": [121, 124, 125, 245, 264, 265, 266, 267, 268, 269, 270, 271, 272], "1_chicoma": 121, "cpu_gnu_mpich": [121, 125], "crai": [121, 124, 125, 268, 272], "1_chrysalis_intel_openmpi": 122, "1_chrysalis_gnu_openmpi": 122, "yet": [123, 127, 240, 244, 265], "again": [123, 228, 240, 245, 262, 284], "soon": [123, 265, 284], "1_compy_intel_impi": 123, "1_compy_gnu_openmpi": 123, "attempt": [124, 264, 271], "particular": [124, 243, 245, 264, 268, 271, 284], "activ": [124, 271, 272, 284], "load_polaris_env": [124, 245, 265, 284], "were": [124, 142, 211, 240, 244, 263, 265, 266, 270, 274], "job": [124, 245, 264, 265, 267, 268, 269, 270, 272], "right": [124, 127, 242, 245, 265, 266, 274, 277, 278, 284], "therefor": [124, 240, 247, 263, 265], "gnu": [124, 245, 270, 271, 284], "lib": 124, "intel": [124, 271], "chicoma": [124, 271, 284], "mpich": [124, 245, 264, 268, 272, 284], "compi": [124, 270, 284], "pm": [124, 272, 284], "compymcnodefac": [124, 271], "perlmutt": [124, 268, 271, 284], "pretti": [124, 240, 244, 265, 266], "forg": [124, 264, 284], "linux": [124, 245, 271], "configure_polaris_env": [124, 245, 262, 265], "conda_path": [124, 245], "osx": [124, 271], "clang": [124, 245], "had": 124, "1_": 124, "1_pm": 125, "ever": [127, 244, 247], "expand": [127, 247, 274], "oceanmodelstep": [127, 265], "decid": [127, 265], "veri": [127, 237, 240, 244, 245, 257, 265, 282], "earli": [127, 275, 284], "stage": [127, 230, 240, 242, 245, 252, 261, 275, 284], "map_yaml_to_namelist": 127, "count": [127, 241], "heurist": 127, "exact": [127, 183, 184, 185, 198, 199, 200, 232, 234, 235, 244, 280, 281], "algorithm": [127, 142, 211, 231, 234, 235, 240, 265], "200": [127, 234, 235, 242, 265, 277, 280, 281, 282], "round": [127, 278], "cell_count": [127, 130, 143, 170, 187, 202, 265], "goal_cells_per_cor": [127, 265, 278, 280, 281, 283, 288], "pinch": 127, "2000": [127, 243, 259, 261, 265, 287], "max_cells_per_cor": [127, 265, 278, 280, 281, 283, 288], "seciton": 127, "control": [127, 232, 240, 266, 277, 278, 282, 284], "scale": [127, 277, 284], "tri": [127, 244], "apport": 127, "precis": [127, 240, 265], "caviti": [127, 244, 265, 266, 274], "frazil": 127, "flux": [127, 230, 282], "grid_1d": 127, "generate_1d_grid": 127, "vertical_grid": [127, 218, 220, 226, 227, 243, 265, 266, 274, 277, 278, 280, 281, 282, 283], "z": [127, 221, 222, 223, 224, 225, 226, 227, 265, 277, 278, 280, 281, 282, 283], "star": [127, 225, 227, 265, 277, 278, 280, 281, 282, 283], "init_vertical_coord": [127, 265], "minlevelcel": [127, 220, 222, 223, 224, 225, 226, 227, 265], "maxlevelcel": [127, 220, 221, 222, 223, 224, 225, 226, 227, 240, 265], "cellmask": [127, 220, 223, 226, 227, 265], "zmid": [127, 220, 226, 227, 265], "restingthick": [127, 220, 225, 226, 227, 240, 265], "bottomdepth": [127, 220, 221, 223, 224, 225, 226, 227, 240, 265], "entir": [127, 265, 277, 290], "petersen": [127, 245, 265, 277], "et": [127, 265, 274, 277, 278, 280, 281], "al": [127, 265, 274, 277, 278, 280, 281], "2015": [127, 265, 277], "int_": 127, "rho": 127, "dv": 127, "sort": [127, 238, 244, 245], "increas": [127, 244], "compute_rp": [127, 265], "csv": [127, 265], "dynamic_ntask": 129, "available_cor": 131, "estim": [131, 133, 265], "initial_state_file_nam": [134, 265], "output_fil": [134, 240, 265], "rest": [134, 225, 274, 278], "potenti": [134, 152, 240, 242, 265, 277], "energi": [134, 152, 242, 264, 265, 277], "netcdf": [134, 236, 266, 267, 268, 269, 270, 271, 272], "state": [134, 230, 231, 232, 234, 235, 236, 240, 241, 265, 278], "len": [134, 240, 265], "superclass": [136, 231, 240], "run_time_step": [142, 211, 265], "resources_fix": [142, 211], "shouldn": [142, 211, 265], "dt": [142, 211, 265, 277, 278, 280, 281, 283, 288], "btr_dt": [142, 211, 265, 277], "barotrop": [142, 211, 265, 277, 282], "longer": [148, 231, 241, 250, 265, 277, 278, 290], "shorter": [148, 241, 250], "20": [152, 231, 241, 242, 265, 277, 282], "rpe": [160, 216, 242, 244, 265, 284], "include_viz": 163, "less": [163, 166, 240, 274, 282], "globalocean": [163, 237], "cosinebel": [166, 169, 172, 232], "rmsevalu": 167, "squar": [167, 232, 234, 235, 280, 281], "ncell": [167, 240, 265], "viz_map": 174, "inerti": [178, 179, 181, 183, 186, 189, 191, 234, 275, 279], "graviti": [178, 179, 181, 183, 186, 189, 191, 234, 275, 279], "wave": [178, 179, 181, 183, 186, 189, 191, 198, 234, 240, 265, 275, 277, 279, 281], "analys": [179, 194], "inertialgravitywav": [181, 234], "angleedg": [183, 198], "angl": [183, 198], "posit": [183, 198, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 265, 274, 282], "xcell": [183, 198, 240, 265], "ycell": [183, 198, 240, 265], "xedg": [183, 198, 240, 265], "yedg": [183, 198], "f0": 183, "corioli": [183, 234, 235, 265, 277, 278, 281, 282], "eta0": [183, 198], "amplitid": [183, 198], "kx": [183, 198], "ky": [183, 198], "angular": [183, 198], "frequenc": [183, 198, 231], "veloc": [184, 199, 230, 231, 234, 235, 242, 245, 265, 278, 282, 284], "evalu": [184, 185, 199, 200], "norm_vel": 184, "eta": [185, 200, 280, 281], "manufactur": [193, 194, 196, 198, 201, 204, 206, 235, 281], "manufacturedsolut": [196, 235], "column": [208, 209, 212, 214, 236, 245, 247, 249, 250, 252, 253, 255, 257, 258, 259, 261, 282, 284, 287], "param": [209, 212, 214, 242, 243, 252], "singlecolumn": [209, 212, 236, 250, 253, 261], "iag": 213, "ideal_ag": [214, 216], "ivar": 214, "layer": [218, 219, 220, 224, 225, 226, 227, 230, 231, 234, 235, 236, 265, 266, 274, 277, 278, 280, 281, 282, 283], "meter": [218, 219], "bottom": [220, 221, 222, 223, 224, 225, 226, 227, 230, 265, 266, 274, 277, 278, 280, 281, 282, 283], "thick": [220, 224, 225, 226, 227, 231, 236, 259, 265, 266, 274, 277, 280, 287], "stretch": [220, 226, 227, 265, 274], "elev": [220, 226, 227, 265, 274], "midpoint": [220, 226, 227, 265], "reftopdepth": [220, 223, 224, 226, 227, 265], "down": [220, 221, 222, 223, 224, 225, 226, 227, 232, 265, 274, 278], "ref": [220, 226, 227, 265], "middl": [220, 226, 227, 265], "refbottomdepth": [220, 221, 222, 223, 224, 226, 227, 240, 265], "refinterfac": [220, 226, 227, 265], "element": [220, 226, 227, 265], "vertcoordmovementweight": [220, 226, 227, 240, 265], "movement": [220, 226, 227, 265], "partial": [221, 222, 265, 274, 277, 278, 280, 281, 282, 283], "seafloor": [221, 223, 224, 225, 274], "unstretch": 225, "shelv": [228, 266, 274], "ssh_adjust": [228, 240, 242, 266], "iter": [228, 266], "compass_branch": 228, "default_input": [228, 237, 257, 265, 266], "ocean_model": [228, 245, 266], "submodul": [228, 237, 245, 257, 265, 284], "latest": [228, 245, 257, 264, 275, 284], "master": [228, 257, 285], "compat": [228, 245, 257, 262, 264], "verison": 228, "maintain": [228, 284], "recurs": [228, 244, 245, 257, 265, 284], "whichev": [228, 257, 274], "inertial_gravity_wav": [228, 233, 280, 290], "manufactured_solut": [228, 233, 275, 279], "single_column": [228, 233, 257, 260, 275, 279, 285, 286], "design": [229, 240, 242, 244, 258, 264, 271, 277], "minim": 230, "fcell": [230, 240, 265, 278], "fedg": [230, 240, 265, 278], "fvertex": [230, 240, 265, 278], "free": [230, 265, 266], "slip": 230, "solid": [230, 259, 277, 278], "tangenti": 230, "enforc": [230, 245], "nonperiod": 230, "drag": 230, "mass": 230, "momentum": [230, 231, 234, 235, 280, 281], "scalar": 230, "rigid": 230, "solv": [230, 262, 274], "mid": [230, 277], "vari": [230, 232, 240, 262, 271, 274, 278], "consult": [230, 265], "tidal_forc": 230, "eddi": [231, 277], "addition": [231, 234, 235, 236, 267, 268, 269, 270, 272], "diffus": [231, 234, 235, 236], "50": [231, 234, 235, 243, 265, 277, 280, 281, 282], "prescrib": [231, 234, 235], "intens": 231, "globalconverg": [232, 244, 265], "studi": [232, 278], "advect": [232, 278, 280, 281, 282], "qu": [232, 265, 266, 276, 278], "ico": [232, 265, 276, 278], "fix": [232, 243, 265], "spheric": [232, 278], "24": [232, 278, 287], "shape": [232, 278], "blob": 232, "around": [232, 265, 266, 277, 278], "rate": [232, 234, 235, 265, 278, 280, 281, 282], "cosine_bell_with_viz": [232, 276], "distribut": 232, "dt_per_km": [232, 265, 277, 278, 280, 281, 283, 288], "rmse": [232, 234, 235, 280, 281], "slow": [232, 278], "shallow": [234, 245, 278, 280, 281, 283], "water": [234, 265, 277, 278, 280, 281, 282, 283], "100": [234, 235, 236, 274, 280, 281, 282], "25": [234, 235, 280, 281, 282], "exactsolut": [234, 235], "obtain": [234, 235, 245, 268], "assign": [234, 235, 278], "simul": [234, 235, 240, 263, 265, 276, 277, 280, 281, 283, 284, 288], "fall": [234, 235, 284], "accept": [234, 235], "bound": [234, 235], "calcul": [234, 240, 242], "accord": [235, 280, 281, 284], "exercis": [236, 261, 278, 282], "kpp_test": 236, "mixedlayerdepthsoutput": 236, "enabel": 236, "idealagetrac": [236, 282], "dimens": [236, 277, 282], "single_column_forc": [236, 282], "profil": [236, 262, 282], "throughout": [236, 277, 282], "idealag": 236, "encompass": 237, "perspect": 237, "four": 237, "major": [237, 240], "add_test_group": [237, 244, 265], "variou": [237, 240, 245], "univers": 237, "mix": [237, 243, 280, 281, 282], "ice_shelf_2d": 237, "iceshelf2d": 237, "ziso": [237, 274, 289], "landice_model": [237, 245], "organ": [238, 241, 243, 264], "green": 238, "blue": [238, 267, 284], "orang": 238, "red": 238, "repositori": [238, 264, 265, 284], "laid": 238, "fig": 238, "among": [238, 243, 245, 265], "organiz": 238, "concept": [238, 244, 263, 265, 289], "multiprocess": [240, 244, 266], "outsid": [240, 245], "emploi": 240, "prevent": 240, "unwant": 240, "outer": 240, "inner": 240, "variable_resolut": [240, 243, 284], "dome_varres_grid": 240, "signific": [240, 241, 242], "neglig": 240, "convent": [240, 245, 265], "high": [240, 269, 271], "fit": [240, 266], "applic": [240, 244, 245, 283, 288], "meshstep": 240, "getint": 240, "mesh_cpus_per_task": 240, "mesh_min_cpus_per_task": 240, "previous": [240, 265], "processor": [240, 277], "readi": [240, 265, 272], "write_netcdf": [240, 265], "convers": [240, 265], "generate_grid": 240, "dsmesh": 240, "graphinfofilenam": [240, 265], "use_dist": [240, 265, 277], "gradient_width_dist": [240, 265, 277], "gradient_width_frac": [240, 265, 277], "bottom_temperatur": [240, 265, 277], "surface_temperatur": [240, 265, 277, 282], "temperature_differ": [240, 265, 277], "coriolis_paramet": [240, 265, 277, 280, 281, 282], "bottom_depth": [240, 265, 266, 274, 277, 278, 280, 281, 282, 283], "vert_level": [240, 265, 266, 274, 277, 278, 280, 281, 282, 283], "ones_lik": [240, 265], "xmin": 240, "min": [240, 265, 277, 282], "xmax": 240, "ymin": 240, "ymax": 240, "ymid": 240, "xperturbmin": 240, "xperturbmax": 240, "perturbationwidth": 240, "yoffset": 240, "sin": [240, 265, 277, 280, 281], "pi": [240, 265, 274, 277, 278], "temp_vert": [240, 265], "frac": [240, 265, 274, 277, 280], "logical_and": [240, 265], "transpos": [240, 265], "3rd": [240, 265], "crest": [240, 265, 277], "expand_dim": [240, 265], "dim": [240, 265], "axi": [240, 265], "broadcast": [240, 265], "zeros_lik": [240, 265], "nedg": [240, 265], "dtype": [240, 265], "xvertex": [240, 265], "commandlin": 240, "explor": [240, 243, 265, 274], "harm": 240, "likewis": [240, 265], "subsequ": [240, 263, 290], "arisen": 240, "now": [240, 245, 265, 266, 271], "omit": [240, 284], "problemat": 240, "usual": [240, 242, 245, 265, 284], "isn": [240, 244, 265], "forwardstep": 240, "mesh_path": 240, "mesh_step": 240, "with_ice_shelf_cav": [240, 242], "initial_state_target": 240, "adjusted_init": [240, 242], "forcing_data": 240, "entha_analy_result": 240, "mat": 240, "enthalpy_benchmark": 240, "ourselv": 240, "reduc": 240, "firewal": 240, "bedmachineantarctica_v2_and_gebco_2022_0": 240, "05_degree_20220729": 240, "slate": 240, "icepresent_qu60km_polar": 240, "practic": [240, 244, 245], "u": [240, 265, 271, 272, 280, 281], "straightforward": 240, "commonli": [240, 263], "expens": [240, 241], "mechan": 240, "notat": [240, 283, 288], "That": [240, 244, 263, 265, 284], "word": 240, "ff": 240, "quwisc240": [240, 244, 284, 290], "90c": 240, "91c": 240, "92": [240, 274], "91": 240, "sowisc12to60": [240, 284, 290], "performance_test": 240, "effici": [240, 265], "transfer": 240, "feasibl": 240, "nor": [240, 265], "add_depend": 240, "overhead": 240, "philosophi": [241, 244, 265], "context": [241, 265], "namesak": 241, "256": [241, 268, 272], "quicker": 241, "32": [241, 284], "exce": 241, "limit": [241, 245, 277], "offer": 241, "benefit": [241, 264], "catch": 241, "bug": 241, "covereag": 241, "timestep": 241, "exhaust": 241, "recent": [241, 275, 285], "merg": 241, "reach": 241, "steadi": 241, "encount": [241, 262], "wet": 241, "fundament": 242, "incorpor": 242, "deprec": 242, "constrain_resourc": [242, 265], "smoke_test": [242, 243], "smoketest": [242, 243], "velo_solv": 242, "sia": [242, 245], "fo": 242, "add_step": [242, 265], "runmodel": 242, "run_step": 242, "0200": 242, "00_00": [242, 259, 265], "fine": [242, 265, 282], "recip": 242, "res_param": [242, 243], "144": 242, "36": [242, 267, 271, 282, 284], "4km": [242, 243, 265, 277, 284], "unsupport": [242, 243, 245], "enumer": [242, 265], "rpe_": [242, 265], "_nu_": [242, 265], "deliber": 242, "chosen": [242, 282], "demonstr": [242, 265], "clumsi": [242, 244], "rpe_1_nu_1": [242, 265, 277], "rpe_2_nu_5": [242, 265, 277], "filesfore3sm": 242, "configure_global_ocean": 242, "with_bgc": 242, "po4": 242, "no3": 242, "sio3": 242, "nh4": 242, "fe": [242, 268], "o2": 242, "dic": 242, "dic_alt_co2": 242, "alk": 242, "dofe": 242, "dop": 242, "dopr": 242, "donr": 242, "zooc": 242, "spchl": 242, "spc": 242, "spfe": 242, "spcaco3": 242, "diatchl": 242, "diatc": 242, "diatf": 242, "diatsi": 242, "diazchl": 242, "diazc": 242, "diazf": 242, "phaeochl": 242, "phaeoc": 242, "phaeof": 242, "dm": 242, "dmsp": 242, "prot": 242, "poli": 242, "lip": 242, "conceptu": [243, 244], "realist": [243, 264, 289], "2000m": [243, 284], "34": [243, 284], "halfar": 243, "cism": 243, "dome_typ": 243, "closest": 243, "put_origin_on_a_cel": 243, "hydrologi": 243, "hydro": [243, 289], "dome_viz": 243, "time_slic": 243, "save_imag": 243, "hide": [243, 265], "hide_fig": 243, "add_test_cas": [243, 265], "restart_test": 243, "restarttest": 243, "talk": 243, "16": [243, 266, 282, 284], "10e3": 243, "40": [243, 270], "126": 243, "4e3": 243, "160": [243, 265, 277], "500": [243, 265, 266, 274, 277], "held": 243, "initial_condit": 244, "dig": [244, 266], "infrastructur": [244, 265], "background": 244, "behind": 244, "adher": [244, 265], "pep8": [244, 245], "bot": [244, 274], "violat": 244, "pleas": [244, 245, 265, 284], "consid": 244, "editor": 244, "pycharm": [244, 245, 265], "spyder": 244, "linter": 244, "flake8": [244, 245], "discourag": 244, "reformat": 244, "autopep8": 244, "undesir": 244, "util": [244, 281], "lint": 244, "wildcard": 244, "vim": [244, 265], "plugin": 244, "id": [244, 245], "commit": [244, 245], "why": 244, "sound": 244, "subpackag": 244, "understand": [244, 266], "releas": [244, 264, 271, 275, 284], "our": [244, 265, 284], "downstream": 244, "tutori": [244, 245], "clu": 244, "intro": 244, "docstr": [244, 264, 265], "strip": 244, "mpas_ocean": 244, "hidden": 244, "shortcut": [244, 284], "referenc": [244, 265], "mention": 244, "dot": 244, "charact": 244, "unix": [244, 264], "distinct": 244, "mayb": [244, 265], "machine_config": 244, "endswith": 244, "splitext": 244, "exactli": [244, 245, 265, 274], "move": [244, 245, 265, 283, 288], "renam": 244, "visa": 244, "versa": 244, "comfort": [244, 265], "inherit": [244, 265], "orient": 244, "program": [244, 266], "led": 244, "felt": 244, "contribut": 244, "hesit": 244, "predecessor": [244, 263, 264], "harder": 244, "outcom": 244, "augment": 244, "explain": 244, "hope": 244, "dens": 244, "learn": [244, 265], "curv": 244, "worth": [244, 265], "skill": 244, "broadli": 244, "endeavor": 244, "readabl": 244, "manipul": 244, "get_available_cores_and_nod": 244, "theoret": 244, "dozen": 244, "split": 244, "theori": 244, "biogeochemistri": 244, "bash": [245, 262, 265, 284], "ksh": 245, "mac": [245, 264], "csh": 245, "tcsh": 245, "temporarili": 245, "bin": [245, 272, 284], "recogn": [245, 266, 284], "mambaforg": [245, 265, 271, 284], "permiss": 245, "miniconda3": 245, "unifi": [245, 272], "anyon": 245, "caus": [245, 268, 272, 274], "person": [245, 262], "base_path_to_install_or_update_conda": 245, "with_albani": 245, "with_netlib_lapack": 245, "with_petsc": 245, "flavor": [245, 265], "login": [245, 268, 272], "troubl": [245, 265], "recognit": 245, "trilino": 245, "downsid": 245, "unneed": 245, "laptop": [245, 265, 266], "workstat": 245, "deploy": 245, "hpc": [245, 268, 271], "touch": 245, "update_spack": 245, "reinstal": 245, "scorpio": [245, 271, 284], "esmf": [245, 284], "caution": 245, "deploi": [245, 267, 268, 269, 270, 271, 272], "load_": 245, "encod": 245, "load_dev_polaris_": [245, 265], "env_nam": 245, "dev_polaris_": [245, 262], "workdir": [245, 284], "unexpect": [245, 263, 265], "occur": [245, 262], "safest": 245, "rerun": 245, "echo": 245, "correct": 245, "checkout": [245, 265], "proceed": 245, "notic": 245, "conda_env": [245, 270, 284], "rememb": 245, "recreat": [245, 262], "incorrect": 245, "unus": 245, "session": [245, 265], "pip": 245, "substanti": 245, "risk": [245, 265], "rare": 245, "env_onli": 245, "mpas_make_target": [245, 284], "scientif": [245, 284], "_albani": 245, "instruct": [245, 265], "proce": 245, "es3m": 245, "compli": 245, "memor": 245, "guidelin": 245, "stai": 245, "complianc": 245, "checker": 245, "pre": 245, "isort": 245, "flynt": 245, "mypi": 245, "77": 245, "e302": 245, "blank": 245, "resolv": 245, "simpler": [245, 265], "mkdir": 245, "fetch": [245, 265], "new_branch_nam": 245, "put": [245, 265], "elsewher": 245, "disk": [245, 266, 268, 272], "respons": 245, "simplest": 245, "your_new_branch": 245, "seaicemodelstep": 247, "concern": 247, "six": 254, "polaris_branch": 257, "post": 257, "identifi": [257, 289], "src": 257, "registry_process": 257, "seaice_model": 257, "1m": [259, 287], "disc": [259, 287], "condidion": 259, "config_initial_ice_area": 259, "config_initial_ice_volum": 259, "config_atmospheric_forcing_typ": 259, "config_forcing_start_tim": 259, "config_forcing_cycle_start": 259, "config_forcing_cycle_dur": 259, "config_forcing_precipitation_unit": 259, "mm_per_sec": 259, "config_forcing_sst_typ": 259, "ncar": 259, "config_update_ocean_flux": 259, "config_include_pond_freshwater_feedback": 259, "standard_phys": 261, "standardphys": 261, "year": [261, 275, 287], "volum": 261, "snow": 261, "exact_restart": 261, "exactrestart": 261, "suggest": 262, "geo": 262, "cartopi": 262, "14": 262, "np110py27_4": 262, "calledprocesserror": 262, "deploy_tmp": 262, "spec": [262, 272], "vpn": 262, "site": 262, "shell": [262, 264], "honor": 262, "wide": 262, "coupl": [262, 264], "spawn": 262, "usernam": [262, 265, 268, 272], "proxy_en": 262, "export": 262, "all_proxi": 262, "proxyout": 262, "8080": 262, "no_proxi": 262, "localhost": [262, 266, 271, 272, 284], "127": 262, "proxy_dis": 262, "unset": 262, "anytim": 262, "fatal": 262, "mpi_init": 262, "stack": 262, "mpir_init_thread": 262, "159": 262, "mpid_init": 262, "164": 262, "mpidi_ch3_init": 262, "95": 262, "mpid_nem_init": 262, "314": 262, "mpid_nem_tcp_init": 262, "173": 262, "mpid_nem_tcp_get_business_card": 262, "395": 262, "getsockinterfaceaddr": 262, "369": 262, "pn2034311": 262, "errno": 262, "host": [262, 266, 271, 284], "mpirun": [262, 266, 267, 268, 269, 270, 271, 272, 284], "srun": [262, 265, 266, 267, 268, 269, 270, 271, 272, 284], "parallel_execut": [262, 266, 267, 268, 269, 270, 271, 272, 284], "plu": 263, "autom": 264, "exascal": 264, "earth": 264, "kept": 264, "sens": [264, 265], "boundari": [264, 277, 289], "expert": 264, "team": 264, "launch": 264, "uncoupl": 264, "evolv": [264, 274, 278, 282], "quick": [264, 265, 275, 285, 290], "queue": 264, "beginn": [264, 265], "worktre": [264, 265], "advanc": [264, 265], "mpas_to_yaml": 264, "troubleshoot": 264, "proxi": 264, "lanl": [264, 266, 268], "gethostbynam": 264, "glossari": 265, "port": [265, 272], "stick": 265, "miniconda": 265, "haven": 265, "3_chrysalis_intel_openmpi": 265, "switch": [265, 266], "strict": 265, "fork": 265, "push": 265, "lowercas": 265, "hyphen": 265, "settl": 265, "desktop": 265, "realli": [265, 272], "nice": [265, 272], "supercomput": 265, "yet_another_channel": 265, "vi": 265, "polaris_head": 265, "yetanotherchannel": 265, "instanc": 265, "repres": [265, 274, 278], "highli": 265, "camelcas": 265, "capit": 265, "letter": 265, "cap": 265, "awkward": 265, "encourag": 265, "enclos": 265, "briefli": 265, "alphabet": 265, "interest": 265, "anyth": 265, "probabl": [265, 271], "suppos": 265, "easili": 265, "tide": 265, "analyz": 265, "hard": [265, 277, 282], "sai": [265, 271], "res_str": 265, "1000": [265, 266, 274, 277, 280, 281], "still": [265, 275, 283, 284, 288], "ti": 265, "loop": 265, "coarsest": [265, 266], "especi": 265, "anticip": 265, "promot": 265, "pattern": 265, "familiar": 265, "seen": 265, "brows": 265, "row": 265, "greater": 265, "disadvantag": 265, "foremost": 265, "magic": 265, "effect": [265, 283], "kind": 265, "pain": 265, "path_to_mpas_ocean": 265, "path_to_working_dir": 265, "sbatch": [265, 271, 284], "job_script": [265, 284], "cat": 265, "slurm_jobid": 265, "_run_test": 265, "gpf": 265, "fs1": 265, "ac": 265, "cbegeman": 265, "successfulli": 265, "x_cell": 265, "y_cell": 265, "grid_typ": [265, 266, 274, 277, 278, 280, 281, 282, 283], "coord_typ": [265, 274, 277, 278, 280, 281, 282, 283], "partial_cell_typ": [265, 274, 277, 278, 280, 281, 282, 283], "min_pc_fract": [265, 274, 277, 278, 280, 281, 282, 283], "everywher": 265, "depress": [265, 274], "x_min": 265, "x_max": 265, "y_min": 265, "y_max": 265, "y_mid": 265, "x_perturb_min": 265, "x_perturb_max": 265, "perturb_width": [265, 277], "y_offset": 265, "normal_veloc": 265, "attr": 265, "mostli": 265, "logic": [265, 277], "northern": [265, 277], "half": [265, 277], "southern": [265, 277], "halv": [265, 277], "gradient": [265, 277, 280, 281, 282], "08": [265, 277], "500km": [265, 277], "40e3": [265, 277], "35": [265, 277, 278, 282, 283, 284, 288], "2e": [265, 277], "initial_temperatur": 265, "initial_normal_veloc": 265, "connect": [265, 272], "match": 265, "decomp": [265, 284, 290], "light": 265, "fast": 265, "e3sm_compon": 265, "interact": [265, 268, 271, 272, 284], "interrupt": 265, "pty": 265, "navig": 265, "newli": 265, "bunch": 265, "didn": 265, "mistak": 265, "finger": 265, "cross": 265, "initial_normalveloc": 265, "initial_salin": 265, "btr_dt_per_km": [265, 277], "obvious": 265, "stress": [265, 282], "steem": 265, "bring": 265, "landicemodelstep": 265, "huge": 265, "cp": 265, "config_dt": 265, "05": 265, "split_explicit_t": 265, "config_btr_dt": 265, "hmix_del2": 265, "bottom_drag": 265, "cvmix": 265, "0002": 265, "filename_interv": 265, "0100": 265, "input_interv": 265, "initial_onli": 265, "basicmesh": 265, "dayssincestart": 265, "surfacespe": 265, "lowersurfac": 265, "uppersurfac": 265, "ureconstructx": 265, "ureconstructi": 265, "great": 265, "remain": [265, 278, 282], "load_dataset": 265, "final_temperatur": 265, "ab": 265, "fresh": 265, "proc": 265, "area": 265, "markdown": 265, "users_guid": 265, "daunt": 265, "flesh": 265, "bonu": 265, "improv": 265, "introduc": 265, "techniqu": 265, "proport": [265, 274, 277, 278, 280, 281, 283, 288], "1384565": 265, "strftime": 265, "gmtime": 265, "run_second": 265, "twice": 265, "guess": 265, "recomput": 265, "aim": 265, "becam": 265, "mainten": 265, "counter": 265, "thought": 265, "yet_another_channel_test_cas": 265, "yetanotherchanneltestcas": 265, "choic": [265, 278], "spuriou": [265, 277], "dissip": [265, 277], "pop": [265, 277], "mom": [265, 277], "mitgcm": [265, 277], "higher": 265, "heavi": 265, "analogi": 265, "tet": 265, "bear": 265, "me": 265, "late": 265, "_add_step": 265, "startswith": 265, "privat": 265, "break": [265, 277], "unusu": 265, "rpe_3_nu_10": 265, "rpe_4_nu_20": 265, "rpe_5_nu_200": 265, "_setup_step": 265, "20_00": 265, "0000": 265, "dayssincestartofsim": 265, "relativevort": 265, "pyplot": 265, "plt": 265, "output_": 265, "sections_yet_another_channel_": 265, "rpe_t": 265, "init_filenam": 265, "ds_init": 265, "_plot": 265, "compact": 265, "dirti": 265, "adopt": 265, "lesson": 265, "tricki": 265, "commun": 265, "nuanc": 265, "fake": 265, "wasn": 265, "fold": 265, "proper": 265, "third": 265, "extens": 266, "single_nod": [266, 267, 268, 269, 270, 271, 272, 284], "multinod": [266, 284], "hopefulli": 266, "explanatori": 266, "my_machin": 266, "extend": 266, "gitconfig": 266, "enter": 266, "author": 266, "asai": 266, "davi": 266, "email": 266, "pull_request": 266, "28": 266, "address": 266, "metadata": 266, "customize_config_pars": 266, "server_base_url": 266, "inej": 266, "check_siz": 266, "ssl": 266, "certif": 266, "core_path": 266, "partition_execut": 266, "dask": 266, "netcdf4": 266, "netcdf4_class": 266, "netcdf3_64bit": 266, "netcdf3_class": 266, "engin": 266, "scipi": 266, "mesh_databas": 266, "ocean_database_root": 266, "landice_database_root": 266, "mesh_cor": 266, "18": [266, 268], "mesh_min_cor": 266, "mesh_max_memori": 266, "mesh_max_disk": 266, "init_cor": 266, "init_min_cor": 266, "init_max_memori": 266, "init_max_disk": 266, "init_thread": 266, "forward_cor": 266, "forward_min_cor": 266, "forward_thread": 266, "forward_max_memori": 266, "forward_max_disk": 266, "add_metadata": 266, "ec": 266, "wc": 266, "mesh_descript": 266, "autodetect": 266, "bathy_descript": 266, "gebco": 266, "2022": 266, "bedmachin": 266, "antarctica": 266, "init_descript": 266, "e3sm_vers": 266, "increment": 266, "mesh_revis": 266, "finest": 266, "min_r": 266, "max_r": 266, "max_depth": 266, "creation_d": 266, "peopl": 266, "contact": 266, "temperaturemax": 266, "statist": 266, "temperature_max": 266, "33": [266, 284], "diagnost": [266, 267, 268, 270, 271, 272, 284], "enable_ocean_initial_condit": 266, "enable_ocean_graph_partit": 266, "enable_seaice_initial_condit": 266, "scrip": 266, "enable_scrip": 266, "transect": 266, "onlin": 266, "member": 266, "offlin": 266, "enable_diagnostics_fil": 266, "coarser": [266, 278], "finer": 266, "comparisonlatresolut": 266, "comparisonlonresolut": 266, "antarct": 266, "polar": [266, 267, 269, 274], "stereograph": 266, "comparisonantarcticstereowidth": 266, "6000": [266, 274], "comparisonantarcticstereoresolut": 266, "arctic": [266, 287], "comparisonarcticstereowidth": 266, "comparisonarcticstereoresolut": 266, "tanh_dz": 266, "3000": 266, "min_layer_thick": [266, 274], "max_layer_thick": [266, 274], "retain": 266, "ecosystem": 267, "gain": 267, "confluenc": 267, "public_html": [267, 269, 271], "polaris_env": [267, 268, 269, 270, 271, 272], "soft": [267, 269, 271, 284], "mpi_intel": [267, 269, 270, 271], "mpi_gnu": [267, 268, 269, 270, 271, 272], "hdf5": [267, 268, 269, 270, 271, 272], "fortran": [267, 268, 269, 270, 271, 272], "pnetcdf": [267, 268, 269, 270, 271, 272], "use_e3sm_hdf5_netcdf": [267, 268, 269, 270, 271, 272], "cobalt": [267, 268, 269, 270, 271, 272], "condo": [267, 284], "acm": [267, 284], "medium": 267, "acme_high": 267, "load_latest_polaris_intel_impi": [267, 270], "load_latest_polaris_gnu_openmpi": [267, 269, 284], "dst": 268, "calendar": 268, "network": 268, "introduct": 268, "platform": 268, "batch": 268, "wtrw": 268, "ch": 268, "lustr": 268, "scratch4": 268, "scratch5": 268, "sacctmgr": 268, "assoc": 268, "cluster": 268, "45": 268, "my": 268, "sshare": 268, "grep": [268, 284], "sreport": 268, "accountutilizationbyus": 268, "2019": 268, "02": 268, "prioriti": 268, "yellow": 268, "chkhome": 268, "petabyt": 268, "df": 268, "bp": 268, "archiv": [268, 272], "hpss": [268, 272], "front": 268, "tn": 268, "storag": 268, "project_nam": 268, "salloc": [268, 271, 272], "account_nam": 268, "gpu": [268, 272], "hyperthread": [268, 272], "hang": [268, 272], "threads_per_cor": [268, 272], "modules_befor": [268, 272], "modules_aft": [268, 272], "shared_clim": [268, 284], "load_latest_polaris_gnu_mpich": [268, 272], "load_latest_polaris_intel_openmpi": 269, "compyf": 270, "app": [270, 284], "pmi2": 270, "submit": 271, "workload": 271, "squeue": 271, "my_usernam": [271, 272], "scancel": 271, "jobid": 271, "cancel": 271, "emtpi": 271, "three": 271, "mpi_mpich": [271, 284], "mpi_openmpi": [271, 284], "nompi": [271, 284], "p1": 272, "nersc": 272, "iri": 272, "filesystem": 272, "myquota": 272, "prjquota": 272, "projectid": 272, "m1795": 272, "hsi": 272, "htar": 272, "zstash": 272, "cf": [272, 284], "cdir": [272, 284], "premium": 272, "cray_compil": 272, "8844": 272, "monik": 272, "browser": 272, "grab": 272, "logon": 272, "kernel": 272, "myenv": 272, "ipykernel": 272, "kernelspec": 272, "u1": 272, "Be": 272, "interpret": 272, "argv": 272, "env": 272, "ipykernel_launch": 272, "connection_fil": 272, "display_nam": 272, "languag": 272, "2500": 274, "deepest": 274, "stewart": 274, "2017": 274, "z_2": 274, "z_1": 274, "mathrm": 274, "tanh": 274, "rightarrow": 274, "infti": 274, "z_k": 274, "z_0": 274, "z_": [274, 282], "k": 274, "finder": 274, "n_z": 274, "h_": 274, "210": [274, 278], "scienc": 274, "hydrograph": 274, "climatologi": 274, "250": 274, "5500": 274, "renorm": 274, "51": 274, "221": 274, "63": 274, "floor": 274, "flat": [274, 277], "collaps": 274, "adcroft": 274, "campin": 274, "2004": 274, "absenc": 274, "squash": 274, "watercolumn": 274, "press": 274, "batymetri": 274, "stair": 274, "month": 275, "websit": [275, 285], "release_6": 275, "ilicak": 277, "2012": 277, "distinguish": 277, "zonal": [277, 282], "meridion": [277, 282], "psu": [277, 282], "cooler": 277, "north": 277, "sinusoid": 277, "perturb": [277, 278, 281], "t_0": 277, "t_b": 277, "t_": 277, "z_b": 277, "y_": 277, "l_x": 277, "warmer": 277, "ge": [277, 278], "gradient_width_fract": 277, "l_y": 277, "le": [277, 282], "flow": [277, 278], "stationari": [277, 282], "literatur": 277, "mk": 277, "celsiu": 277, "williamson": 278, "1992": 278, "sec": 278, "3a": 278, "skamarock": 278, "gassmann": 278, "bodi": 278, "rotat": [278, 280, 281], "transport": 278, "psi": 278, "proportion": 278, "icosohydr": 278, "480": 278, "150": 278, "nearest": 278, "insensit": [278, 282], "300": [278, 283], "passiv": 278, "psi_0": 278, "co": [278, 280, 281], "radiu": 278, "debug_tracers_1": 278, "equatori": 278, "u_0": 278, "tau": 278, "transit": 278, "equat": [278, 280, 281, 282], "vel_pd": 278, "tendenc": [278, 281], "multipli": 278, "rad": 278, "lat_cent": 278, "lon_cent": 278, "14159265": 278, "2123666": 278, "6667": 278, "hill": 278, "psi0": 278, "qu_conv_thresh": 278, "warn": [278, 280, 281], "qu_conv_max": 278, "icos_conv_thresh": 278, "icos_conv_max": 278, "roughli": 278, "propag": [280, 281], "doubli": [280, 281], "assess": [280, 281], "numer": [280, 281], "accuraci": [280, 281], "discret": [280, 281], "implemen": 280, "bishnu": [280, 281], "friction": [280, 281], "neglect": [280, 281], "nonlinear": [280, 281], "analyt": [280, 289], "k_x": [280, 281], "k_y": [280, 281], "availi": [280, 281], "10000": [280, 281], "coriloi": 280, "1e": 280, "amplitud": [280, 281], "ssh_amplitud": [280, 281], "wavelength": [280, 281], "n_wavelengths_x": [280, 281], "n_wavelengths_i": [280, 281], "conv_thresh": [280, 281], "conv_max": [280, 281], "embed": 281, "eta_0": 281, "span": 282, "arbitrarili": 282, "virtu": 282, "examin": 282, "400": 282, "phi": 282, "phi_0": 282, "dz": 282, "ml": 282, "mld": 282, "surface_x": 282, "x_gradient_mixed_lay": 282, "mixed_layer_depth_x": 282, "x_difference_across_mixed_lay": 282, "x_gradient_interior": 282, "spatial": 282, "degc": 282, "temperature_gradient_mixed_lay": 282, "temperature_difference_across_mixed_lay": 282, "temperature_gradient_interior": 282, "mixed_layer_depth_temperatur": 282, "surface_salin": 282, "salinity_gradient_mixed_lay": 282, "salinity_difference_across_mixed_lay": 282, "salinity_gradient_interior": 282, "mixed_layer_depth_salin": 282, "scheme": 282, "dictat": 282, "kpp": 282, "restor": 282, "piston": 282, "toward": 282, "temperature_surface_restoring_valu": 282, "temperature_piston_veloc": 282, "salinity_surface_restoring_valu": 282, "salinity_piston_veloc": 282, "temperature_interior_restoring_r": 282, "salinity_interior_restoring_r": 282, "net": 282, "latent": 282, "heat": 282, "bulk": 282, "latent_heat_flux": 282, "sensibl": 282, "sensible_heat_flux": 282, "solar": 282, "shortwav": 282, "shortwave_heat_flux": 282, "evapor": 282, "evaporation_flux": 282, "5e": 282, "rain": 282, "rain_flux": 282, "wind": 282, "wind_stress_zon": 282, "wind_stress_meridion": 282, "characterist": [283, 288], "welcom": [283, 288], "icosohedr": [283, 288], "pertain": [283, 288], "inher": 283, "warrant": 283, "investig": 283, "load_latest_polari": 284, "minu": 284, "create_polaris_load_script": 284, "load_polaris_1": 284, "0_mpich": 284, "wiki": 284, "circular_shelf": 284, "sia_smoke_test": 284, "sia_decomposition_test": 284, "sia_restart_test": 284, "fo_smoke_test": 284, "fo_decomposition_test": 284, "fo_restart_test": 284, "37": 284, "38": 284, "17": 284, "210131_test_new_branch": 284, "my_config": 284, "smaller": 284, "previous_workdir": 284, "paper": 284, "recompil": 284, "live": 284, "safer": 284, "preserv": 284, "test_subdir": 284, "whatev": 284, "clock": 284, "j": 284, "exclus": 284, "job_nam": 284, "fo_integr": [284, 290], "full_integr": [284, 290], "sia_integr": [284, 290], "cosine_bell_cached_init": [284, 290], "ec30to60": [284, 290], "ecwisc30to60": [284, 290], "qu240_for_e3sm": [284, 290], "quwisc240_for_e3sm": [284, 290], "wc14": [284, 290], "suitenam": 284, "seaice_standalone_framework": 285, "71": 287, "35n": 287, "156": 287, "5w": 287, "atmospher": 287, "timeseri": 287, "pair": 287, "radial": 289, "form": 289, "prohibit": 290}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.job": [[54, 2, 1, "", "get_slurm_options"], [55, 2, 1, "", "write_job_script"]], "polaris.list": [[56, 2, 1, "", "list_cases"], [57, 2, 1, "", "list_machines"], [58, 2, 1, "", "list_suites"]], "polaris.logging": [[59, 2, 1, "", "log_method_call"]], "polaris.mesh": [[60, 0, 1, "", "IcosahedralMeshStep"], [67, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[60, 1, 1, "", "__init__"], [61, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [62, 1, 1, "", "get_cell_width"], [63, 1, 1, "", "get_subdivisions"], [64, 1, 1, "", "make_jigsaw_mesh"], [65, 1, 1, "", "run"], [66, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_cell_width_lat_lon"], [69, 1, 1, "", "make_jigsaw_mesh"], [70, 1, 1, "", "run"], [71, 1, 1, "", "setup"]], "polaris.mesh.planar": [[72, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[73, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, 1, 1, "", "__init__"], [74, 1, 1, "", "run"], [75, 1, 1, "", "save_and_plot_cell_width"], [76, 1, 1, "", "setup"]], "polaris.model_step": [[77, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[78, 2, 1, "", "ingest"], [79, 2, 1, "", "parse_replacements"], [80, 2, 1, "", "replace"], [81, 2, 1, "", "write"]], "polaris.ocean": [[128, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[128, 1, 1, "", "__init__"]], "polaris.ocean.model": [[129, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[129, 1, 1, "", "__init__"], [130, 1, 1, "", "compute_cell_count"], [131, 1, 1, "", "constrain_resources"], [132, 1, 1, "", "map_yaml_to_namelist"], [133, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[134, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[135, 0, 1, "", "BaroclinicChannel"], [136, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[135, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp": [[138, 0, 1, "", "Decomp"]], "polaris.ocean.tests.baroclinic_channel.decomp.Decomp": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[140, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[142, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "compute_cell_count"], [144, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.init": [[145, 0, 1, "", "Init"]], "polaris.ocean.tests.baroclinic_channel.init.Init": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "run"], [147, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart": [[148, 0, 1, "", "Restart"]], "polaris.ocean.tests.baroclinic_channel.restart.Restart": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart.restart_step": [[150, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe": [[152, 0, 1, "", "Rpe"]], "polaris.ocean.tests.baroclinic_channel.rpe.Rpe": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "configure"], [154, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis": [[155, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "run"], [157, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads": [[158, 0, 1, "", "Threads"]], "polaris.ocean.tests.baroclinic_channel.threads.Threads": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[160, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[162, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[162, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[163, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "configure"], [165, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[166, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "rmse"], [168, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[169, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "compute_cell_count"], [171, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[172, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[174, 0, 1, "", "Viz"], [176, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave": [[178, 0, 1, "", "InertialGravityWave"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[178, 1, 1, "", "__init__"]], "polaris.ocean.tests.inertial_gravity_wave.analysis": [[179, 0, 1, "", "Analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence": [[181, 0, 1, "", "Convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution": [[183, 0, 1, "", "ExactSolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "normal_velocity"], [185, 1, 1, "", "ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward": [[186, 0, 1, "", "Forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "compute_cell_count"], [188, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.inertial_gravity_wave.init": [[189, 0, 1, "", "Init"]], "polaris.ocean.tests.inertial_gravity_wave.init.Init": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.viz": [[191, 0, 1, "", "Viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution": [[193, 0, 1, "", "ManufacturedSolution"]], "polaris.ocean.tests.manufactured_solution.ManufacturedSolution": [[193, 1, 1, "", "__init__"]], "polaris.ocean.tests.manufactured_solution.analysis": [[194, 0, 1, "", "Analysis"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution.convergence": [[196, 0, 1, "", "Convergence"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "validate"]], "polaris.ocean.tests.manufactured_solution.exact_solution": [[198, 0, 1, "", "ExactSolution"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "normal_velocity"], [200, 1, 1, "", "ssh"]], "polaris.ocean.tests.manufactured_solution.forward": [[201, 0, 1, "", "Forward"]], "polaris.ocean.tests.manufactured_solution.forward.Forward": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "compute_cell_count"], [203, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.manufactured_solution.init": [[204, 0, 1, "", "Init"]], "polaris.ocean.tests.manufactured_solution.init.Init": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution.viz": [[206, 0, 1, "", "Viz"]], "polaris.ocean.tests.manufactured_solution.viz.Viz": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[208, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[208, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[209, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[211, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[211, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.ideal_age": [[212, 0, 1, "", "IdealAge"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.init": [[214, 0, 1, "", "Init"]], "polaris.ocean.tests.single_column.init.Init": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[216, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[216, 1, 1, "", "__init__"], [217, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[218, 2, 1, "", "generate_1d_grid"], [219, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[220, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[221, 2, 1, "", "alter_bottom_depth"], [222, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[223, 2, 1, "", "compute_min_max_level_cell"], [224, 2, 1, "", "compute_z_level_layer_thickness"], [225, 2, 1, "", "compute_z_level_resting_thickness"], [226, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[227, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[82, 2, 1, "", "get_available_parallel_resources"], [83, 2, 1, "", "get_parallel_command"], [84, 2, 1, "", "run_command"], [85, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[86, 2, 1, "", "write"]], "polaris.remap": [[87, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[87, 1, 1, "", "__init__"], [88, 1, 1, "", "dst_from_lon_lat"], [89, 1, 1, "", "dst_from_mpas"], [90, 1, 1, "", "dst_from_points"], [91, 1, 1, "", "dst_from_proj"], [92, 1, 1, "", "dst_global_lon_lat"], [93, 1, 1, "", "get_remapper"], [94, 1, 1, "", "runtime_setup"], [95, 1, 1, "", "src_from_lon_lat"], [96, 1, 1, "", "src_from_mpas"], [97, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[98, 2, 1, "", "run_single_step"], [99, 2, 1, "", "run_tests"]], "polaris.run": [[100, 2, 1, "", "setup_config"], [101, 2, 1, "", "unpickle_suite"]], "polaris.seaice": [[248, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[248, 1, 1, "", "__init__"]], "polaris.seaice.tests.single_column": [[249, 0, 1, "", "SingleColumn"]], "polaris.seaice.tests.single_column.SingleColumn": [[249, 1, 1, "", "__init__"]], "polaris.seaice.tests.single_column.exact_restart": [[250, 0, 1, "", "ExactRestart"]], "polaris.seaice.tests.single_column.exact_restart.ExactRestart": [[250, 1, 1, "", "__init__"], [251, 1, 1, "", "validate"]], "polaris.seaice.tests.single_column.forward": [[252, 0, 1, "", "Forward"]], "polaris.seaice.tests.single_column.forward.Forward": [[252, 1, 1, "", "__init__"]], "polaris.seaice.tests.single_column.standard_physics": [[253, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tests.single_column.standard_physics.StandardPhysics": [[253, 1, 1, "", "__init__"], [254, 1, 1, "", "validate"]], "polaris.seaice.tests.single_column.standard_physics.viz": [[255, 0, 1, "", "Viz"]], "polaris.seaice.tests.single_column.standard_physics.viz.Viz": [[255, 1, 1, "", "__init__"], [256, 1, 1, "", "run"]], "polaris.setup": [[102, 2, 1, "", "setup_case"], [103, 2, 1, "", "setup_cases"]], "polaris.streams": [[104, 2, 1, "", "read"], [105, 2, 1, "", "update_defaults"], [106, 2, 1, "", "update_tree"], [107, 2, 1, "", "write"]], "polaris.suite": [[108, 2, 1, "", "setup_suite"]], "polaris.validate": [[109, 2, 1, "", "compare_timers"], [110, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[111, 2, 1, "", "plot_global"]], "polaris.viz": [[112, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[113, 0, 1, "", "PolarisYaml"], [117, 2, 1, "", "main_mpas_to_yaml"], [118, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [119, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "read"], [115, 1, 1, "", "update"], [116, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5, 265], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 127, 245, 247, 265, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 282, 283, 287, 288], "same": 1, "implement": 1, "test": [1, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 233, 239, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 260, 265, 266, 276, 279, 284, 286, 287, 289, 290], "valid": [1, 2, 15, 44, 109, 110, 137, 139, 141, 149, 154, 159, 165, 182, 197, 210, 213, 242, 251, 254, 265, 284], "api": 2, "refer": [2, 126, 127], "compon": [2, 12, 17, 18, 49, 127, 228, 237, 244, 245, 247, 257, 275, 284, 285], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 264, 284], "framework": [2, 8, 126, 127, 231, 234, 235, 236, 244, 247, 261, 273], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 56, 57, 58], "setup": [2, 4, 6, 30, 40, 66, 71, 76, 102, 103, 133, 147, 157, 240], "suit": [2, 4, 6, 108, 241, 276, 284, 290], "run": [2, 6, 12, 37, 65, 70, 74, 98, 99, 100, 101, 127, 146, 156, 161, 168, 173, 175, 177, 180, 190, 192, 195, 205, 207, 215, 217, 240, 245, 247, 256, 277, 278, 280, 281, 282, 283, 284, 287, 288], "cach": [2, 4, 6, 48, 240], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 244], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 242], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 240, 265, 277, 278, 280, 281, 282, 283, 288], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 127, 247, 265, 266, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 282, 283, 287, 288], "io": [2, 9, 51, 52, 53], "job": [2, 54, 55, 271, 284], "log": [2, 10, 59], "mesh": [2, 11, 12, 16, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 232, 265, 277, 278, 280, 281, 282, 283, 287, 288], "model_step": [2, 77], "namelist": [2, 12, 78, 79, 80, 81, 127], "parallel": [2, 82, 83, 84, 85], "proven": [2, 13, 86], "remap": [2, 14, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "stream": [2, 12, 104, 105, 106, 107, 127, 247, 265], "viz": [2, 111, 112, 160, 161, 174, 175, 176, 177, 191, 192, 206, 207, 216, 217, 232, 234, 235, 236, 255, 256, 261, 265], "yaml": [2, 12, 113, 114, 115, 116, 117, 118, 119, 127], "build": [3, 245, 284], "serial": [4, 6, 98, 99], "docstr": 5, "modul": [6, 244, 245], "clean": 6, "file": [7, 12, 127, 240, 265, 266], "comment": 7, "symlink": [9, 53, 240], "download": [9, 51, 240], "spheric": [11, 16, 73, 74, 75, 76], "planar": [11, 16, 72], "uniform": [11, 274], "gener": 11, "model": [12, 127, 129, 130, 131, 132, 133, 229, 247, 258, 265, 284], "an": [12, 127, 247, 265], "e3sm": [12, 127, 245, 247, 284], "ad": [12, 240, 265], "updat": [12, 115, 245], "runtim": 12, "input": [12, 240], "partit": [12, 26], "pio": 12, "make": [12, 265], "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": [16, 265, 287], "horizont": [16, 265], "field": 16, "from": [16, 127, 240, 245, 271], "global": 16, "lat": 16, "lon": 16, "plot": [16, 265], "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 144, 151, 171, 188, 203], "map_yaml_to_namelist": [25, 132], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 94, 240], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 131, 240], "set_resourc": 39, "add_step": 42, "configur": [43, 153, 164, 242, 262], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "get_slurm_opt": 54, "write_job_script": 55, "list_cas": 56, "list_machin": 57, "list_suit": 58, "log_method_cal": 59, "icosahedralmeshstep": [60, 61, 62, 63, 64, 65, 66], "build_subdivisions_cell_width_lat_lon": 61, "get_cell_width": 62, "get_subdivis": 63, "make_jigsaw_mesh": [64, 69], "quasiuniformsphericalmeshstep": [67, 68, 69, 70, 71], "build_cell_width_lat_lon": 68, "compute_planar_hex_nx_ni": 72, "sphericalbasestep": [73, 74, 75, 76], "save_and_plot_cell_width": 75, "make_graph_fil": 77, "ingest": 78, "parse_replac": 79, "replac": 80, "write": [81, 86, 107, 116], "get_available_parallel_resourc": 82, "get_parallel_command": 83, "run_command": 84, "set_cores_per_nod": 85, "mappingfilestep": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "dst_from_lon_lat": 88, "dst_from_mpa": 89, "dst_from_point": 90, "dst_from_proj": 91, "dst_global_lon_lat": 92, "get_remapp": 93, "src_from_lon_lat": 95, "src_from_mpa": 96, "src_from_proj": 97, "run_single_step": 98, "run_test": 99, "setup_config": 100, "unpickle_suit": 101, "setup_cas": [102, 103], "read": [104, 114], "update_default": 105, "update_tre": 106, "setup_suit": 108, "compare_tim": 109, "compare_vari": 110, "globe": 111, "plot_glob": 111, "plot_horiz_field": 112, "polarisyaml": [113, 114, 115, 116], "main_mpas_to_yaml": 117, "mpas_namelist_and_streams_to_yaml": 118, "yaml_to_mpas_stream": 119, "anvil": [120, 267], "intel": [120, 122, 123, 267, 269, 270], "gnu": [120, 121, 122, 123, 125, 267, 268, 269, 272], "chicoma": [121, 268], "cpu": [121, 125, 268, 272], "chrysali": [122, 269], "compymcnodefac": [123, 270], "machin": [124, 245, 271, 284], "support": [124, 229, 245, 258, 271, 284], "other": [124, 240, 265, 271, 284], "perlmutt": [125, 272], "pm": 125, "ocean": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 275], "group": [126, 233, 243, 244, 246, 260, 265, 279, 286], "baroclinic_channel": [126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 231, 277], "inertial_gravity_wav": [126, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 234], "global_converg": [126, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 232, 278], "cosine_bel": [126, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 232, 276, 278], "manufactured_solut": [126, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 235, 281], "single_column": [126, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 236, 246, 249, 250, 251, 252, 253, 254, 255, 256, 261, 282, 287], "oceanmodelstep": [126, 129, 130, 131, 132, 133], "potenti": [126, 127], "energi": [126, 127], "rpe": [126, 127, 134, 152, 153, 154, 155, 156, 157, 231, 277], "vertic": [126, 127, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 265, 274, 277, 278, 280, 281, 282, 283], "coordin": [126, 127, 265, 274], "v": 127, "map": 127, "omega": 127, "mpa": [127, 230, 259], "set": [127, 245, 247, 284], "mpi": [127, 247, 271], "resourc": [127, 247], "rest": 127, "compute_cell_count": [130, 143, 170, 187, 202], "compute_rp": 134, "baroclinicchannel": 135, "baroclinicchanneltestcas": [136, 137], "decomp": [138, 139, 231, 277], "default": [140, 141, 231, 265, 277], "forward": [142, 143, 144, 169, 170, 171, 186, 187, 188, 201, 202, 203, 211, 231, 232, 234, 235, 236, 252, 261, 265], "init": [145, 146, 147, 172, 173, 189, 190, 204, 205, 214, 215, 231, 232, 234, 235, 236, 265], "restart": [148, 149, 150, 151, 231, 277, 287], "restart_step": [150, 151], "restartstep": [150, 151], "analysi": [155, 156, 157, 166, 167, 168, 179, 180, 194, 195, 232, 234, 235, 265], "thread": [158, 159, 231, 277], "globalconverg": 162, "cosinebel": [163, 164, 165], "rmse": 167, "vizmap": [176, 177], "inertialgravitywav": 178, "converg": [181, 182, 196, 197, 234, 235, 280, 281], "exact_solut": [183, 184, 185, 198, 199, 200, 234, 235], "exactsolut": [183, 184, 185, 198, 199, 200], "normal_veloc": [184, 199], "ssh": [185, 200], "manufacturedsolut": 193, "singlecolumn": [208, 249], "cvmix": [209, 210, 236, 282], "ideal_ag": [212, 213], "idealag": [212, 213], "grid_1d": [218, 219], "generate_1d_grid": 218, "write_1d_grid": 219, "init_vertical_coord": 220, "partial_cel": [221, 222], "alter_bottom_depth": 221, "alter_ssh": 222, "zlevel": [223, 224, 225, 226], "compute_min_max_level_cel": 223, "compute_z_level_layer_thick": 224, "compute_z_level_resting_thick": 225, "init_z_level_vertical_coord": 226, "zstar": 227, "init_z_star_vertical_coord": 227, "initi": [230, 259, 265, 277, 278, 280, 281, 282, 283, 287, 288], "condit": [230, 259, 265, 277, 278, 280, 281, 282, 283, 287, 288], "boundari": 230, "forc": [230, 259, 277, 278, 280, 281, 282, 283, 287, 288], "baroclinic_channel_test_cas": 231, "type": [232, 274], "ideal": [236, 282], "ag": [236, 282], "directori": 238, "structur": 238, "organ": 239, "attribut": [240, 242], "constructor": [240, 242], "output": [240, 265], "copi": 240, "depend": 240, "pull": 241, "request": 241, "pr": 241, "nightli": 241, "case": [242, 244, 265, 266, 284, 289], "overview": 244, "code": [244, 245, 265], "style": [244, 245], "packag": 244, "share": [244, 265], "within": 244, "quick": [245, 284], "start": [245, 265, 284], "develop": [245, 264, 265], "unix": 245, "shell": 245, "up": [245, 284], "repositori": 245, "beginn": 245, "conda": [245, 262, 271, 284], "environ": [245, 262, 284], "spack": [245, 284], "compil": 245, "system": 245, "albani": 245, "petsc": 245, "netlib": 245, "lapack": 245, "unknown": 245, "what": 245, "script": [245, 284], "doe": 245, "flag": 245, "activ": 245, "switch": 245, "between": [245, 265], "differ": 245, "troubleshoot": [245, 262], "creat": [245, 265], "onli": 245, "repo": 245, "worktre": 245, "advanc": 245, "user": [245, 264, 266, 284], "seaic": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "exact_restart": [250, 251], "exactrestart": [250, 251], "standard_phys": [253, 254, 255, 256], "standardphys": [253, 254], "standard_physics_test": 261, "exact_restart_test": 261, "solver": 262, "error": 262, "when": 262, "proxi": 262, "lanl": 262, "mac": 262, "gethostbynam": 262, "fail": 262, "glossari": [263, 264], "": 264, "guid": 264, "tutori": [264, 265], "compass": 264, "new": 265, "get": 265, "vari": 265, "resolut": 265, "paramet": 265, "thing": 265, "out": 265, "defin": 265, "more": 265, "again": 265, "one": 265, "time": [265, 277, 278, 280, 281, 282, 283, 288], "second": 265, "enhanc": 265, "dynam": 265, "comput": 265, "cell": 265, "count": 265, "superclass": 265, "studi": 265, "how": 265, "pass": 265, "data": [265, 272], "A": 266, "slurm": 271, "queue": 271, "mpich": 271, "openmpi": 271, "No": 271, "forg": 271, "jupyt": 272, "notebook": 272, "remot": 272, "1d": 274, "grid": [274, 277, 278, 280, 281, 282, 283], "tanh_dz": 274, "60layerphc": 274, "100layere3smv1": 274, "3d": 274, "z": 274, "star": 274, "level": 274, "cosine_bell_cached_init": 276, "descript": [277, 278, 280, 281, 282, 283, 287, 288], "durat": [277, 278, 280, 281, 282, 283, 287, 288], "core": [277, 278, 280, 281, 282, 283, 287, 288], "cosine_bell_with_viz": 278, "inerti": 280, "graviti": 280, "wave": 280, "test_group_nam": [283, 288], "test_case_nam": [283, 288], "i": 284, "yet": 284, "load": 284, "standalon": 284, "sea": 285, "ic": 285, "standard": 287, "physic": 287, "timestep": 287, "exact": 287}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [237, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [232, "mesh"], [277, "mesh"], [277, "id2"], [277, "id9"], [277, "id17"], [277, "id25"], [277, "id32"], [278, "mesh"], [280, "mesh"], [281, "mesh"], [282, "mesh"], [282, "id3"], [282, "id8"], [283, "mesh"], [287, "mesh"], [287, "id1"], [287, "id6"], [288, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [232, "viz"], [234, "viz"], [235, "viz"], [236, "viz"], [261, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"], [265, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [273, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [127, "model"], [247, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [127, "running-an-e3sm-component"], [247, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[54, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[55, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[56, "polaris-list-list-cases"]], "polaris.list.list_machines": [[57, "polaris-list-list-machines"]], "polaris.list.list_suites": [[58, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[59, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[60, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[61, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[62, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[63, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[64, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[65, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[66, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[67, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[71, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[72, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[73, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[74, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[75, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[76, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[77, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[78, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[79, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[80, "polaris-namelist-replace"]], "polaris.namelist.write": [[81, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[82, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[83, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[84, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[85, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[86, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[87, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[88, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[89, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[90, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[91, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[92, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[93, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[94, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[95, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[96, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[97, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[98, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[99, "polaris-run-serial-run-tests"]], "polaris.run.setup_config": [[100, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[101, "polaris-run-unpickle-suite"]], "polaris.setup.setup_case": [[102, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[103, "polaris-setup-setup-cases"]], "polaris.streams.read": [[104, "polaris-streams-read"]], "polaris.streams.update_defaults": [[105, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[106, "polaris-streams-update-tree"]], "polaris.streams.write": [[107, "polaris-streams-write"]], "polaris.suite.setup_suite": [[108, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[109, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[110, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[111, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[112, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[113, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[114, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[115, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[116, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[117, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[118, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[119, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[120, "anvil"], [267, "anvil"]], "intel": [[120, "intel"], [122, "intel"], [123, "intel"]], "gnu": [[120, "gnu"], [122, "gnu"], [123, "gnu"]], "Chicoma": [[121, "chicoma"], [268, "chicoma"]], "chicoma-cpu, gnu": [[121, "chicoma-cpu-gnu"]], "Chrysalis": [[122, "chrysalis"], [269, "chrysalis"]], "CompyMcNodeFace": [[123, "compymcnodeface"], [270, "compymcnodeface"]], "Machines": [[124, "machines"], [271, "machines"]], "Supported Machines": [[124, "supported-machines"], [271, "supported-machines"]], "Other Machines": [[124, "other-machines"], [271, "other-machines"]], "Perlmutter": [[125, "perlmutter"], [272, "perlmutter"]], "pm-cpu, gnu": [[125, "pm-cpu-gnu"]], "ocean": [[126, "ocean"]], "Test Groups": [[126, "test-groups"], [243, "test-groups"], [246, "test-groups"]], "baroclinic_channel": [[126, "baroclinic-channel"], [231, "baroclinic-channel"], [277, "baroclinic-channel"]], "inertial_gravity_wave": [[126, "inertial-gravity-wave"], [234, "inertial-gravity-wave"]], "global_convergence": [[126, "global-convergence"], [232, "global-convergence"], [278, "global-convergence"]], "cosine_bell": [[126, "cosine-bell"], [232, "cosine-bell"]], "manufactured_solution": [[126, "manufactured-solution"], [235, "manufactured-solution"], [281, "manufactured-solution"]], "single_column": [[126, "single-column"], [236, "single-column"], [246, "single-column"], [261, "single-column"], [282, "single-column"], [287, "single-column"]], "Ocean Framework": [[126, "ocean-framework"]], "OceanModelStep": [[126, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[126, "reference-potential-energy-rpe"]], "Vertical coordinates": [[126, "vertical-coordinates"]], "Ocean framework": [[127, "ocean-framework"]], "YAML files vs. namelists and streams": [[127, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[127, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[127, "setting-mpi-resources"], [247, "setting-mpi-resources"]], "Model config options and streams": [[127, "model-config-options-and-streams"], [247, "model-config-options-and-streams"]], "Vertical coordinate": [[127, "vertical-coordinate"], [274, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[127, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[128, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[129, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[130, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[131, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[132, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[133, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[134, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[135, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[136, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[137, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp.Decomp": [[138, "polaris-ocean-tests-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate": [[139, "polaris-ocean-tests-baroclinic-channel-decomp-decomp-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[140, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[141, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[142, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[143, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[144, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.init.Init": [[145, "polaris-ocean-tests-baroclinic-channel-init-init"]], "polaris.ocean.tests.baroclinic_channel.init.Init.run": [[146, "polaris-ocean-tests-baroclinic-channel-init-init-run"]], "polaris.ocean.tests.baroclinic_channel.init.Init.setup": [[147, "polaris-ocean-tests-baroclinic-channel-init-init-setup"]], "polaris.ocean.tests.baroclinic_channel.restart.Restart": [[148, "polaris-ocean-tests-baroclinic-channel-restart-restart"]], "polaris.ocean.tests.baroclinic_channel.restart.Restart.validate": [[149, "polaris-ocean-tests-baroclinic-channel-restart-restart-validate"]], "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep": [[150, "polaris-ocean-tests-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[151, "polaris-ocean-tests-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe.Rpe": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate": [[154, "polaris-ocean-tests-baroclinic-channel-rpe-rpe-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis": [[155, "polaris-ocean-tests-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run": [[156, "polaris-ocean-tests-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup": [[157, "polaris-ocean-tests-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads.Threads": [[158, "polaris-ocean-tests-baroclinic-channel-threads-threads"]], "polaris.ocean.tests.baroclinic_channel.threads.Threads.validate": [[159, "polaris-ocean-tests-baroclinic-channel-threads-threads-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[160, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[161, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[162, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[174, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[175, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[176, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[177, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[178, "polaris-ocean-tests-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[179, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run": [[180, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[181, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate": [[182, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence-validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[183, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[184, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[185, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[186, "polaris-ocean-tests-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count": [[187, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[188, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.inertial_gravity_wave.init.Init": [[189, "polaris-ocean-tests-inertial-gravity-wave-init-init"]], "polaris.ocean.tests.inertial_gravity_wave.init.Init.run": [[190, "polaris-ocean-tests-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[191, "polaris-ocean-tests-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run": [[192, "polaris-ocean-tests-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tests.manufactured_solution.ManufacturedSolution": [[193, "polaris-ocean-tests-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis": [[194, "polaris-ocean-tests-manufactured-solution-analysis-analysis"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run": [[195, "polaris-ocean-tests-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence": [[196, "polaris-ocean-tests-manufactured-solution-convergence-convergence"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate": [[197, "polaris-ocean-tests-manufactured-solution-convergence-convergence-validate"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution": [[198, "polaris-ocean-tests-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[199, "polaris-ocean-tests-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh": [[200, "polaris-ocean-tests-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tests.manufactured_solution.forward.Forward": [[201, "polaris-ocean-tests-manufactured-solution-forward-forward"]], "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count": [[202, "polaris-ocean-tests-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config": [[203, "polaris-ocean-tests-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.manufactured_solution.init.Init": [[204, "polaris-ocean-tests-manufactured-solution-init-init"]], "polaris.ocean.tests.manufactured_solution.init.Init.run": [[205, "polaris-ocean-tests-manufactured-solution-init-init-run"]], "polaris.ocean.tests.manufactured_solution.viz.Viz": [[206, "polaris-ocean-tests-manufactured-solution-viz-viz"]], "polaris.ocean.tests.manufactured_solution.viz.Viz.run": [[207, "polaris-ocean-tests-manufactured-solution-viz-viz-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[208, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[209, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[210, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[211, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[212, "polaris-ocean-tests-single-column-ideal-age-idealage"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate": [[213, "polaris-ocean-tests-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tests.single_column.init.Init": [[214, "polaris-ocean-tests-single-column-init-init"]], "polaris.ocean.tests.single_column.init.Init.run": [[215, "polaris-ocean-tests-single-column-init-init-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[216, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[217, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[218, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[219, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[220, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[221, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[222, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[223, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[224, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[225, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[226, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[227, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[228, "ocean-component"], [275, "ocean-component"]], "Models": [[229, "models"], [258, "models"]], "Supported Models": [[229, "supported-models"], [258, "supported-models"]], "MPAS-Ocean": [[230, "mpas-ocean"]], "Initial conditions": [[230, "initial-conditions"], [259, "initial-conditions"]], "Boundary conditions": [[230, "boundary-conditions"]], "Forcing": [[230, "forcing"], [259, "forcing"]], "framework": [[231, "framework"], [234, "framework"], [235, "framework"], [236, "framework"], [261, "framework"]], "baroclinic_channel_test_case": [[231, "baroclinic-channel-test-case"]], "init": [[231, "init"], [232, "init"], [234, "init"], [235, "init"], [236, "init"]], "forward": [[231, "forward"], [232, "forward"], [234, "forward"], [235, "forward"], [236, "forward"], [261, "forward"]], "default": [[231, "default"], [277, "default"]], "decomp": [[231, "decomp"], [277, "decomp"]], "restart": [[231, "restart"], [277, "restart"]], "threads": [[231, "threads"]], "rpe": [[231, "rpe"], [277, "rpe"]], "mesh types": [[232, "mesh-types"]], "analysis": [[232, "analysis"], [234, "analysis"], [235, "analysis"]], "Test groups": [[233, "test-groups"], [260, "test-groups"], [279, "test-groups"], [286, "test-groups"]], "exact_solution": [[234, "exact-solution"], [235, "exact-solution"]], "convergence": [[234, "convergence"], [235, "convergence"], [280, "convergence"], [281, "convergence"]], "cvmix": [[236, "cvmix"], [282, "cvmix"]], "ideal age": [[236, "ideal-age"], [282, "ocean-single-column-ideal-age"]], "Directory structure": [[238, "directory-structure"]], "Organization of Tests": [[239, "organization-of-tests"]], "Steps": [[240, "steps"]], "Step attributes": [[240, "step-attributes"]], "constructor": [[240, "constructor"], [242, "constructor"]], "constrain_resources()": [[240, "constrain-resources"]], "setup()": [[240, "setup"]], "runtime_setup()": [[240, "runtime-setup"]], "run()": [[240, "run"]], "inputs and outputs": [[240, "inputs-and-outputs"]], "Input files": [[240, "input-files"]], "Symlinks to input files": [[240, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[240, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[240, "downloading-and-symlinking-input-files"]], "Copying input files": [[240, "copying-input-files"]], "Output files": [[240, "output-files"]], "Cached output files": [[240, "cached-output-files"]], "Adding other steps as dependencies": [[240, "adding-other-steps-as-dependencies"]], "Test Suites": [[241, "test-suites"], [284, "test-suites"], [290, "test-suites"]], "Pull-Request (PR) suite": [[241, "pull-request-pr-suite"]], "Nightly suite": [[241, "nightly-suite"]], "Test cases": [[242, "test-cases"]], "TestCase attributes": [[242, "testcase-attributes"]], "configure()": [[242, "configure"]], "validate()": [[242, "validate"]], "Overview": [[244, "overview"]], "Code Style": [[244, "code-style"]], "Packages and Modules": [[244, "packages-and-modules"]], "Packages": [[244, "packages"]], "Modules": [[244, "modules"]], "Classes": [[244, "classes"]], "Code sharing": [[244, "code-sharing"]], "\u2026in the polaris framework": [[244, "in-the-polaris-framework"]], "\u2026within a component": [[244, "within-a-component"]], "\u2026within a test group": [[244, "within-a-test-group"]], "\u2026within a test case": [[244, "within-a-test-case"]], "Quick Start for Developers": [[245, "quick-start-for-developers"]], "Unix Shell": [[245, "unix-shell"]], "Set up a polaris repository: for beginners": [[245, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[245, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[245, "supported-machines"]], "Environments with Albany": [[245, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[245, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[245, "unknown-machines"]], "What the script does": [[245, "what-the-script-does"]], "Optional flags": [[245, "optional-flags"]], "Activating the environment": [[245, "activating-the-environment"]], "Switching between different polaris environments": [[245, "switching-between-different-polaris-environments"]], "Troubleshooting": [[245, "troubleshooting"], [262, "troubleshooting"]], "Creating/updating only the polaris environment": [[245, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[245, "building-e3sm-components"]], "Running polaris from the repo": [[245, "running-polaris-from-the-repo"]], "Code style for polaris": [[245, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[245, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[246, "seaice"]], "Seaice framework": [[247, "seaice-framework"]], "polaris.seaice.SeaIce": [[248, "polaris-seaice-seaice"]], "polaris.seaice.tests.single_column.SingleColumn": [[249, "polaris-seaice-tests-single-column-singlecolumn"]], "polaris.seaice.tests.single_column.exact_restart.ExactRestart": [[250, "polaris-seaice-tests-single-column-exact-restart-exactrestart"]], "polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate": [[251, "polaris-seaice-tests-single-column-exact-restart-exactrestart-validate"]], "polaris.seaice.tests.single_column.forward.Forward": [[252, "polaris-seaice-tests-single-column-forward-forward"]], "polaris.seaice.tests.single_column.standard_physics.StandardPhysics": [[253, "polaris-seaice-tests-single-column-standard-physics-standardphysics"]], "polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate": [[254, "polaris-seaice-tests-single-column-standard-physics-standardphysics-validate"]], "polaris.seaice.tests.single_column.standard_physics.viz.Viz": [[255, "polaris-seaice-tests-single-column-standard-physics-viz-viz"]], "polaris.seaice.tests.single_column.standard_physics.viz.Viz.run": [[256, "polaris-seaice-tests-single-column-standard-physics-viz-viz-run"]], "Seaice component": [[257, "seaice-component"]], "MPAS-Seaice": [[259, "mpas-seaice"]], "standard_physics_test": [[261, "standard-physics-test"]], "exact_restart_test": [[261, "exact-restart-test"]], "Solver errors when configuring conda environment": [[262, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[262, "proxy-on-lanl-macs"]], "gethostbyname failed": [[262, "gethostbyname-failed"]], "Glossary": [[263, "glossary"], [264, null]], "Polaris": [[264, "polaris"]], "User's guide": [[264, null]], "Developer's guide": [[264, null]], "Tutorials": [[264, null]], "Compass": [[264, "compass"]], "Developer Tutorial: Adding a new test group": [[265, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[265, "getting-started"]], "Making a new test group": [[265, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[265, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[265, "varying-resolution-and-other-parameters"]], "Adding the init step": [[265, "adding-the-init-step"]], "Creating a horizontal mesh": [[265, "creating-a-horizontal-mesh"]], "Adding a config file": [[265, "adding-a-config-file"]], "Adding the step to the test case": [[265, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[265, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[265, "creating-an-initial-condition"]], "Adding plots": [[265, "adding-plots"]], "Adding step outputs": [[265, "adding-step-outputs"]], "Adding validation": [[265, "adding-validation"], [265, "id1"]], "Test things out!": [[265, "test-things-out"]], "Adding the forward step": [[265, "adding-the-forward-step"]], "Defining model config options and streams": [[265, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[265, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[265, "adding-more-validation"]], "Test the test case again!": [[265, "test-the-test-case-again"]], "Adding a visualization step": [[265, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[265, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[265, "test-the-test-case-one-more-time"]], "Adding a second test case": [[265, "adding-a-second-test-case"]], "Enhancements": [[265, "enhancements"]], "Adding model config options in code": [[265, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[265, "adding-dynamic-model-config-options"]], "Computing the cell count": [[265, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[265, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[265, "adding-a-parameter-study"]], "Adding the steps to the test case": [[265, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[265, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[265, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[266, "config-files"]], "A \u201cuser\u201d config file": [[266, "a-user-config-file"]], "Test-case config files": [[266, "test-case-config-files"]], "config options": [[267, "config-options"], [268, "config-options"], [269, "config-options"], [270, "config-options"], [271, "config-options"], [272, "config-options"], [277, "config-options"], [277, "id7"], [277, "id14"], [277, "id22"], [277, "id30"], [277, "id37"], [278, "config-options"], [280, "config-options"], [281, "config-options"], [282, "config-options"], [282, "id1"], [282, "id6"], [282, "id13"], [283, "config-options"], [287, "config-options"], [287, "id5"], [287, "id10"], [288, "config-options"]], "Intel on Anvil": [[267, "intel-on-anvil"]], "Gnu on Anvil": [[267, "gnu-on-anvil"]], "Chicoma-CPU": [[268, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[268, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[269, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[269, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[270, "intel-on-compymcnodeface"]], "Slurm job queueing": [[271, "slurm-job-queueing"]], "MPICH": [[271, "mpich"]], "OpenMPI": [[271, "openmpi"]], "No MPI from conda-forge": [[271, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[272, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[272, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[272, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[274, "d-grid-type"]], "uniform": [[274, "uniform"]], "tanh_dz": [[274, "tanh-dz"]], "60layerPHC": [[274, "layerphc"]], "100layerE3SMv1": [[274, "layere3smv1"]], "3D vertical coordinates": [[274, "d-vertical-coordinates"]], "z-star": [[274, "z-star"]], "z-level": [[274, "z-level"]], "Test suites": [[276, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[276, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[277, "description"], [277, "id1"], [277, "id8"], [277, "id16"], [277, "id24"], [280, "description"], [281, "description"], [282, "description"], [282, "id2"], [282, "id7"], [283, "description"], [287, "description"], [288, "description"]], "vertical grid": [[277, "vertical-grid"], [277, "id3"], [277, "id10"], [277, "id18"], [277, "id26"], [277, "id33"], [278, "vertical-grid"], [280, "vertical-grid"], [281, "vertical-grid"], [282, "vertical-grid"], [282, "id4"], [282, "id9"], [283, "vertical-grid"]], "initial conditions": [[277, "initial-conditions"], [277, "id4"], [277, "id11"], [277, "id19"], [277, "id27"], [277, "id34"], [278, "initial-conditions"], [280, "initial-conditions"], [281, "initial-conditions"], [282, "initial-conditions"], [282, "id5"], [282, "id10"], [283, "initial-conditions"], [287, "initial-conditions"], [287, "id2"], [287, "id7"], [288, "initial-conditions"]], "forcing": [[277, "forcing"], [277, "id5"], [277, "id12"], [277, "id20"], [277, "id28"], [277, "id35"], [278, "forcing"], [280, "forcing"], [281, "forcing"], [282, "forcing"], [282, "id11"], [283, "forcing"], [287, "forcing"], [287, "id3"], [287, "id8"], [288, "forcing"]], "time step and run duration": [[277, "time-step-and-run-duration"], [277, "id6"], [277, "id13"], [277, "id21"], [277, "id29"], [277, "id36"], [278, "time-step-and-run-duration"], [280, "time-step-and-run-duration"], [281, "time-step-and-run-duration"], [282, "time-step-and-run-duration"], [282, "id12"], [283, "time-step-and-run-duration"], [288, "time-step-and-run-duration"]], "cores": [[277, "cores"], [277, "id15"], [277, "id23"], [277, "id31"], [277, "id38"], [278, "cores"], [280, "cores"], [281, "cores"], [282, "cores"], [282, "id14"], [283, "cores"], [287, "cores"], [287, "id4"], [287, "id9"], [288, "cores"]], "thread": [[277, "thread"]], "cosine_bell and cosine_bell_with_viz": [[278, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[278, "description"]], "inertial gravity wave": [[280, "inertial-gravity-wave"]], "test_group_name": [[283, "test-group-name"], [288, "test-group-name"]], "test_case_name": [[283, "test-case-name"], [288, "test-case-name"]], "Quick Start for Users": [[284, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[284, null]], "Loading polaris conda and spack environments": [[284, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[284, "e3sm-supported-machines"]], "Other machines": [[284, "other-machines"]], "Building supported E3SM components as standalone models": [[284, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[284, "setting-up-test-cases"]], "Running a test case": [[284, "running-a-test-case"]], "Running with a job script": [[284, "running-with-a-job-script"]], "Sea ice component": [[285, "sea-ice-component"]], "standard physics test": [[287, "standard-physics-test"]], "timestep and run duration": [[287, "timestep-and-run-duration"], [287, "id11"]], "visualization": [[287, "visualization"]], "exact restart test": [[287, "exact-restart-test"]], "Test Cases": [[289, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[54, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[55, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[56, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[57, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[58, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[59, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[60, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[60, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[62, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[63, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[66, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[71, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[72, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[73, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[76, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[77, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[78, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[79, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[80, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[81, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[82, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[83, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[84, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[85, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[86, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[87, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[98, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[99, "polaris.run.serial.run_tests"]], "setup_config() (in module polaris.run)": [[100, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[101, "polaris.run.unpickle_suite"]], "setup_case() (in module polaris.setup)": [[102, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[103, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[104, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[105, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[106, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[107, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[108, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[109, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[110, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[111, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[112, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[113, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[114, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[115, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[116, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[117, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[118, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[119, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[128, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[128, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[129, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[132, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[133, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[134, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[135, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[135, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[136, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[136, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[137, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomp (class in polaris.ocean.tests.baroclinic_channel.decomp)": [[138, "polaris.ocean.tests.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp.decomp method)": [[138, "polaris.ocean.tests.baroclinic_channel.decomp.Decomp.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp.decomp method)": [[139, "polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[140, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[140, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[141, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[142, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[142, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[143, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[144, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.baroclinic_channel.init)": [[145, "polaris.ocean.tests.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tests.baroclinic_channel.init.init method)": [[145, "polaris.ocean.tests.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.init.init method)": [[146, "polaris.ocean.tests.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.init.init method)": [[147, "polaris.ocean.tests.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tests.baroclinic_channel.restart)": [[148, "polaris.ocean.tests.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart.restart method)": [[148, "polaris.ocean.tests.baroclinic_channel.restart.Restart.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart.restart method)": [[149, "polaris.ocean.tests.baroclinic_channel.restart.Restart.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart.restart_step)": [[150, "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart.restart_step.restartstep method)": [[150, "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart.restart_step.restartstep method)": [[151, "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tests.baroclinic_channel.rpe)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe.rpe method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe.rpe method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe.rpe method)": [[154, "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe.analysis)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe.analysis.analysis method)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe.analysis.analysis method)": [[156, "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe.analysis.analysis method)": [[157, "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tests.baroclinic_channel.threads)": [[158, "polaris.ocean.tests.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads.threads method)": [[158, "polaris.ocean.tests.baroclinic_channel.threads.Threads.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads.threads method)": [[159, "polaris.ocean.tests.baroclinic_channel.threads.Threads.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[160, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[160, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[161, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[162, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[162, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[175, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[176, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[176, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[177, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tests.inertial_gravity_wave)": [[178, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.inertialgravitywave method)": [[178, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.__init__"]], "analysis (class in polaris.ocean.tests.inertial_gravity_wave.analysis)": [[179, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[179, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[180, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tests.inertial_gravity_wave.convergence)": [[181, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[181, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[182, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tests.inertial_gravity_wave.exact_solution)": [[183, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[183, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[184, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[185, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tests.inertial_gravity_wave.forward)": [[186, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[186, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[187, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[188, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.inertial_gravity_wave.init)": [[189, "polaris.ocean.tests.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.init.init method)": [[189, "polaris.ocean.tests.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.init.init method)": [[190, "polaris.ocean.tests.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tests.inertial_gravity_wave.viz)": [[191, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[191, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[192, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tests.manufactured_solution)": [[193, "polaris.ocean.tests.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tests.manufactured_solution.manufacturedsolution method)": [[193, "polaris.ocean.tests.manufactured_solution.ManufacturedSolution.__init__"]], "analysis (class in polaris.ocean.tests.manufactured_solution.analysis)": [[194, "polaris.ocean.tests.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tests.manufactured_solution.analysis.analysis method)": [[194, "polaris.ocean.tests.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.analysis.analysis method)": [[195, "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tests.manufactured_solution.convergence)": [[196, "polaris.ocean.tests.manufactured_solution.convergence.Convergence"]], "__init__() (polaris.ocean.tests.manufactured_solution.convergence.convergence method)": [[196, "polaris.ocean.tests.manufactured_solution.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tests.manufactured_solution.convergence.convergence method)": [[197, "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tests.manufactured_solution.exact_solution)": [[198, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tests.manufactured_solution.exact_solution.exactsolution method)": [[198, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tests.manufactured_solution.exact_solution.exactsolution method)": [[199, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tests.manufactured_solution.exact_solution.exactsolution method)": [[200, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tests.manufactured_solution.forward)": [[201, "polaris.ocean.tests.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[201, "polaris.ocean.tests.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[202, "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[203, "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.manufactured_solution.init)": [[204, "polaris.ocean.tests.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tests.manufactured_solution.init.init method)": [[204, "polaris.ocean.tests.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.init.init method)": [[205, "polaris.ocean.tests.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tests.manufactured_solution.viz)": [[206, "polaris.ocean.tests.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tests.manufactured_solution.viz.viz method)": [[206, "polaris.ocean.tests.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.viz.viz method)": [[207, "polaris.ocean.tests.manufactured_solution.viz.Viz.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[208, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[208, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[209, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[209, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[210, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[211, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[211, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tests.single_column.ideal_age)": [[212, "polaris.ocean.tests.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[212, "polaris.ocean.tests.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[213, "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate"]], "init (class in polaris.ocean.tests.single_column.init)": [[214, "polaris.ocean.tests.single_column.init.Init"]], "__init__() (polaris.ocean.tests.single_column.init.init method)": [[214, "polaris.ocean.tests.single_column.init.Init.__init__"]], "run() (polaris.ocean.tests.single_column.init.init method)": [[215, "polaris.ocean.tests.single_column.init.Init.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[216, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[216, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[217, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[218, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[219, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[220, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[221, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[222, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[223, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[224, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[225, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[226, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[227, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[248, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[248, "polaris.seaice.SeaIce.__init__"]], "singlecolumn (class in polaris.seaice.tests.single_column)": [[249, "polaris.seaice.tests.single_column.SingleColumn"]], "__init__() (polaris.seaice.tests.single_column.singlecolumn method)": [[249, "polaris.seaice.tests.single_column.SingleColumn.__init__"]], "exactrestart (class in polaris.seaice.tests.single_column.exact_restart)": [[250, "polaris.seaice.tests.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tests.single_column.exact_restart.exactrestart method)": [[250, "polaris.seaice.tests.single_column.exact_restart.ExactRestart.__init__"]], "validate() (polaris.seaice.tests.single_column.exact_restart.exactrestart method)": [[251, "polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate"]], "forward (class in polaris.seaice.tests.single_column.forward)": [[252, "polaris.seaice.tests.single_column.forward.Forward"]], "__init__() (polaris.seaice.tests.single_column.forward.forward method)": [[252, "polaris.seaice.tests.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tests.single_column.standard_physics)": [[253, "polaris.seaice.tests.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tests.single_column.standard_physics.standardphysics method)": [[253, "polaris.seaice.tests.single_column.standard_physics.StandardPhysics.__init__"]], "validate() (polaris.seaice.tests.single_column.standard_physics.standardphysics method)": [[254, "polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate"]], "viz (class in polaris.seaice.tests.single_column.standard_physics.viz)": [[255, "polaris.seaice.tests.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tests.single_column.standard_physics.viz.viz method)": [[255, "polaris.seaice.tests.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tests.single_column.standard_physics.viz.viz method)": [[256, "polaris.seaice.tests.single_column.standard_physics.viz.Viz.run"]]}})