Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.ideal_age.IdealAge", "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tests.single_column.initial_state.InitialState", "polaris.ocean.tests.single_column.initial_state.InitialState.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "single_column", "test_group_name", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 22, 23, 24, 101, 111, 115, 141, 148, 213, 214, 215], "date": [1, 4, 48, 195, 210, 215], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 38, 40, 41, 42, 45, 46, 48, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 75, 77, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 115, 116, 121, 124, 125, 126, 127, 133, 135, 137, 139, 140, 142, 144, 145, 147, 149, 152, 154, 155, 157, 160, 163, 164, 166, 167, 169, 171, 173, 176, 178, 179, 181, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232], "purpos": [1, 45, 208, 209, 212, 214, 232], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 24, 25, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 57, 58, 59, 62, 63, 65, 66, 67, 68, 71, 72, 80, 82, 83, 85, 86, 92, 98, 106, 107, 117, 118, 119, 120, 121, 122, 124, 126, 127, 129, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 195, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 223, 226, 227, 229, 230, 231, 233], "section": [1, 2, 4, 5, 7, 10, 12, 14, 19, 25, 66, 108, 112, 124, 126, 129, 185, 187, 193, 194, 195, 201, 202, 205, 206, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 227, 229, 230, 231], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 19, 24, 29, 32, 33, 34, 38, 39, 41, 48, 51, 53, 65, 66, 71, 82, 83, 86, 90, 96, 97, 98, 99, 101, 103, 106, 107, 109, 111, 116, 117, 119, 120, 121, 124, 126, 127, 139, 140, 141, 148, 167, 168, 178, 187, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233], "summar": 1, "what": [1, 9, 11, 14, 121, 209, 214, 221, 230, 231], "capabl": [1, 14, 121, 205, 209, 214, 220, 231], "ad": [1, 4, 5, 7, 8, 9, 14, 15, 33, 34, 40, 43, 50, 107, 133, 144, 154, 187, 193, 194, 207, 208, 210, 213, 216, 217, 218, 219, 221, 231], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 117, 119, 120, 121, 124, 195, 196, 198, 199, 201, 202, 203, 204, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 232, 233], "through": [1, 100, 209, 210, 214], "process": [1, 6, 12, 27, 82, 83, 116, 205, 209, 210, 212, 213, 214], "It": [1, 4, 12, 14, 32, 38, 108, 198, 205, 206, 207, 208, 209, 210, 212, 214, 215, 220], "should": [1, 4, 5, 7, 10, 12, 15, 20, 25, 33, 34, 40, 41, 43, 51, 66, 99, 100, 107, 108, 109, 117, 118, 119, 120, 121, 122, 124, 129, 144, 154, 195, 202, 205, 206, 207, 208, 210, 211, 214, 215, 226, 227, 229, 230, 231], "clear": [1, 209, 214], "new": [1, 4, 12, 17, 20, 32, 41, 45, 50, 53, 58, 65, 71, 86, 102, 103, 139, 147, 166, 178, 187, 193, 194, 205, 209, 210, 211, 212, 213, 231], "code": [1, 4, 5, 7, 10, 12, 32, 124, 195, 202, 205, 206, 207, 212, 213, 215, 222, 226, 229, 231], "do": [1, 4, 7, 9, 12, 14, 15, 111, 205, 207, 210, 211, 212, 214, 220, 227, 231], "current": [1, 4, 6, 9, 19, 29, 32, 39, 106, 107, 121, 126, 178, 195, 199, 201, 202, 205, 209, 210, 212, 213, 214, 215, 220, 223, 226, 227, 229, 231, 232, 233], "doe": [1, 7, 10, 12, 205, 213, 214, 220], "primari": [1, 4, 7, 214, 233], "challeng": 1, "respect": [1, 6, 7, 12, 16, 124, 205, 209, 227, 230], "softwar": [1, 75, 221, 231], "also": [1, 4, 5, 7, 11, 12, 15, 16, 27, 38, 50, 106, 107, 108, 124, 171, 187, 193, 194, 195, 201, 202, 203, 205, 207, 208, 209, 210, 214, 215, 220, 221, 223, 230, 231, 232], "appropri": [1, 4, 12, 20, 70, 80, 121, 195, 198, 201, 202, 205, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 230, 231], "final": [1, 5, 198, 199, 201, 203, 205, 207, 214, 227], "statement": [1, 10, 205, 212], "contain": [1, 4, 5, 6, 7, 14, 16, 17, 21, 22, 23, 36, 49, 52, 77, 81, 87, 88, 89, 90, 94, 95, 96, 101, 109, 110, 124, 131, 187, 193, 194, 202, 203, 204, 205, 209, 210, 212, 214, 215, 220, 224, 230, 231], "gener": [1, 2, 3, 5, 6, 10, 12, 15, 16, 20, 21, 22, 23, 27, 40, 65, 107, 124, 144, 154, 185, 195, 197, 198, 199, 201, 202, 205, 210, 214, 215, 220, 227, 231], "regard": 1, "success": [1, 51, 195, 202, 214, 215], "last": [1, 206, 210, 226, 231], "modifi": [1, 6, 7, 11, 12, 19, 31, 43, 101, 103, 126, 150, 198, 205, 207, 208, 210, 213, 214, 215, 226, 231], "add": [1, 4, 5, 7, 11, 12, 18, 20, 21, 22, 23, 24, 33, 34, 35, 42, 43, 46, 64, 69, 74, 101, 102, 103, 111, 112, 115, 116, 141, 148, 198, 202, 205, 207, 208, 209, 210, 212, 214, 215, 221, 227], "your": [1, 3, 4, 9, 121, 195, 209, 210, 211, 214, 215, 216, 217, 220, 221, 227, 231], "list": [1, 5, 7, 12, 15, 19, 32, 41, 42, 48, 49, 82, 83, 98, 99, 100, 105, 106, 107, 131, 152, 160, 163, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 217, 220, 221, 227, 231, 232, 233], "appear": [1, 121, 205, 214], "each": [1, 4, 5, 6, 10, 11, 12, 14, 15, 38, 41, 54, 60, 61, 70, 100, 116, 121, 124, 136, 146, 156, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 220, 223, 226, 227, 230, 231, 233], "under": [1, 14, 32, 33, 106, 121, 124, 197, 205, 206, 210, 213, 223, 232], "head": [1, 197, 217], "one": [1, 4, 5, 8, 12, 14, 15, 16, 19, 31, 32, 34, 41, 48, 53, 99, 100, 105, 107, 124, 126, 134, 136, 138, 145, 146, 151, 156, 177, 180, 195, 198, 201, 205, 207, 208, 209, 210, 211, 212, 213, 215, 220, 221, 223, 226, 227, 230, 231, 232, 233], "correspond": [1, 5, 15, 106, 107, 124, 195, 205, 210, 226], "between": [1, 4, 6, 10, 11, 12, 14, 15, 19, 31, 34, 59, 66, 67, 70, 73, 86, 92, 106, 107, 126, 145, 187, 193, 194, 199, 202, 205, 208, 209, 220, 223, 226], "propos": 1, "discuss": [1, 124, 205, 207, 208, 209, 214, 226, 227], "technic": [1, 5], "issu": [1, 205, 206, 210, 227], "rather": [1, 6, 7, 9, 11, 12, 32, 34, 50, 121, 198, 205, 207, 208, 210, 211, 214, 223], "focu": [1, 214], "model": [1, 4, 8, 19, 20, 24, 25, 27, 32, 34, 99, 100, 105, 110, 115, 117, 118, 119, 120, 121, 122, 135, 139, 141, 145, 147, 148, 149, 155, 168, 178, 195, 198, 201, 202, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 226, 230], "To": [1, 4, 10, 14, 15, 107, 121, 124, 195, 205, 209, 210, 214, 216, 217, 218, 219, 220, 221, 223, 227, 231], "extent": [1, 11, 14, 214, 226], "possibl": [1, 6, 9, 61, 124, 197, 205, 206, 209, 214, 223], "rel": [1, 4, 7, 14, 15, 34, 35, 48, 50, 99, 100, 105, 106, 107, 195, 202, 205, 209, 210, 212, 214, 226, 231, 232], "independ": [1, 4, 206, 212], "other": [1, 4, 5, 6, 7, 8, 11, 14, 16, 32, 33, 35, 50, 117, 136, 146, 156, 199, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 215, 216, 226, 232], "thu": [1, 5, 12, 214], "allow": [1, 6, 14, 15, 19, 29, 32, 39, 50, 107, 124, 126, 205, 208, 212, 214, 215, 220, 223, 227, 232], "clean": [1, 205, 207, 210], "plan": [1, 11, 195, 205, 212, 232], "For": [1, 2, 4, 5, 10, 12, 14, 16, 80, 100, 117, 197, 198, 201, 205, 209, 210, 212, 214, 215, 216, 224, 227, 231, 232], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 117, 118, 119, 120, 121, 122, 195, 202, 205, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 227, 231, 232, 233], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 29, 32, 33, 34, 39, 41, 44, 62, 65, 67, 87, 91, 92, 94, 99, 100, 105, 107, 117, 118, 119, 120, 121, 122, 124, 195, 198, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 227, 231, 232, 233], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 16, 34, 90, 96, 106, 107, 111, 124, 134, 136, 138, 146, 151, 156, 177, 180, 195, 198, 199, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 220, 224, 227, 230, 231], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 16, 19, 27, 32, 33, 34, 35, 53, 58, 60, 61, 80, 88, 95, 101, 103, 106, 107, 108, 115, 121, 126, 169, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 220, 223, 231, 232, 233], "intend": [1, 6, 7, 206, 215, 232], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 15, 16, 34, 40, 41, 51, 98, 108, 121, 124, 133, 144, 154, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 54, 107, 197, 199, 203, 205, 207, 209, 210, 211, 214, 227, 231], "pde": 1, "solver": [1, 207, 210, 213, 231], "similar": [1, 4, 6, 7, 10, 11, 12, 15, 118, 121, 122, 203, 207, 208, 209, 210, 214, 231], "well": [1, 6, 7, 10, 11, 124, 190, 198, 201, 205, 210, 212, 214, 215, 227, 231, 232], "perform": [1, 4, 6, 12, 14, 15, 37, 38, 40, 44, 58, 106, 107, 137, 139, 144, 149, 154, 159, 166, 174, 176, 178, 179, 195, 198, 199, 201, 205, 206, 207, 212, 213, 214, 215, 220, 226, 233], "In": [1, 5, 6, 7, 9, 12, 14, 15, 32, 124, 199, 203, 205, 206, 207, 208, 209, 210, 213, 214, 215, 220, 223, 227, 230, 231, 232, 233], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 19, 21, 22, 25, 32, 33, 34, 41, 43, 48, 51, 53, 75, 77, 83, 87, 88, 89, 90, 91, 94, 95, 96, 98, 100, 101, 102, 103, 106, 107, 109, 111, 112, 115, 116, 121, 126, 129, 134, 139, 163, 168, 171, 191, 195, 197, 198, 199, 201, 202, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 230, 231, 232, 233], "low": [1, 109], "level": [1, 9, 10, 11, 15, 16, 124, 187, 188, 189, 190, 191, 192, 193, 194, 198, 203, 204, 205, 207, 208, 214, 215, 226, 227, 229, 230, 233], "variabl": [1, 4, 11, 16, 17, 19, 32, 41, 44, 45, 58, 65, 71, 75, 80, 86, 87, 91, 94, 106, 107, 109, 110, 111, 116, 121, 124, 126, 133, 139, 142, 152, 160, 162, 163, 166, 171, 173, 178, 179, 187, 193, 194, 197, 201, 207, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 224, 226, 230, 231], "declar": [1, 5], "interfac": [1, 8, 185, 186, 187, 193, 194, 205, 209, 210, 213, 214, 223], "sequenc": [1, 4, 12, 204, 205, 209, 212, 214, 231, 232, 233], "If": [1, 4, 5, 6, 7, 10, 12, 15, 16, 19, 29, 32, 34, 39, 42, 43, 53, 80, 82, 83, 84, 99, 106, 107, 109, 117, 118, 119, 120, 121, 122, 126, 139, 178, 198, 205, 207, 208, 209, 210, 211, 212, 214, 215, 220, 221, 223, 227, 230, 231], "want": [1, 4, 9, 12, 14, 15, 43, 124, 205, 208, 210, 211, 214, 215, 220, 221, 229, 231, 232], "math": 1, "syntax": [1, 214], "almost": [1, 7], "ident": [1, 4, 15, 135, 145, 155, 198, 206, 209, 214, 226], "latex": 1, "b": [1, 4, 210, 212, 214, 231], "2": [1, 11, 12, 15, 33, 155, 197, 198, 203, 206, 210, 214, 215, 217, 220, 223, 226, 227, 231], "2ab": 1, "imag": [1, 5, 16, 108, 109, 208, 214, 230], "keep": [1, 4, 7, 12, 19, 50, 205, 207, 210, 214, 230], "mind": [1, 4, 214], "quit": [1, 203, 205, 207, 214], "small": [1, 7, 38, 205, 208, 214, 216, 217, 222, 223, 229, 231], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 28, 29, 32, 34, 38, 39, 41, 45, 50, 70, 80, 82, 83, 98, 100, 107, 112, 121, 124, 126, 139, 178, 187, 190, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233], "prefer": [1, 205, 206, 214, 215], "png": [1, 11, 16, 199, 214], "okai": [1, 205, 214], "size": [1, 11, 60, 61, 70, 124, 128, 130, 131, 198, 208, 214, 215, 226, 227, 229, 230], "repo": [1, 4, 195, 213, 214], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 223, 230, 231, 232, 233], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 34, 53, 121, 205, 208, 210, 214, 220, 224, 231], "actual": [1, 4, 10, 205, 207, 210, 214], "sourc": [1, 5, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 210, 214, 215, 216, 217, 218, 219, 220, 221, 231], "project": [1, 4, 5, 57, 90, 96, 195, 209, 210, 214, 215, 216, 217, 220, 231], "manag": [1, 211, 220], "item": [1, 214], "git": [1, 13, 85, 195, 210, 214, 215, 231], "branch": [1, 4, 121, 195, 202, 205, 210, 214, 231], "timelin": 1, "staf": 1, "via": [1, 4, 12, 205, 210, 220], "block": [1, 207], "like": [1, 4, 5, 6, 7, 8, 9, 12, 15, 87, 91, 94, 124, 203, 205, 208, 209, 210, 211, 213, 214, 215, 220, 226, 227, 231, 232], "def": [1, 5, 7, 9, 10, 14, 16, 202, 205, 207, 208, 209, 214], "example_funct": 1, "foo": [1, 209], "return": [1, 5, 25, 49, 51, 59, 60, 61, 66, 70, 77, 81, 82, 92, 100, 101, 103, 111, 115, 116, 124, 127, 129, 131, 140, 164, 167, 185, 188, 189, 190, 191, 192, 209, 214, 227], "0": [1, 4, 5, 11, 12, 15, 16, 60, 87, 91, 94, 107, 117, 118, 119, 120, 121, 122, 124, 187, 192, 193, 194, 197, 199, 205, 208, 209, 211, 214, 215, 217, 220, 223, 224, 226, 227, 229, 230, 231], "how": [1, 4, 10, 12, 65, 124, 204, 205, 207, 209, 210, 215, 220, 221], "show": [1, 5, 11, 205, 214, 220, 221, 226, 227, 230], "we": [1, 4, 5, 7, 9, 11, 12, 14, 15, 16, 80, 120, 121, 124, 130, 198, 199, 201, 204, 205, 207, 208, 209, 210, 214, 215, 217, 219, 220, 221, 223, 227, 229, 231, 233], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 15, 25, 32, 33, 80, 99, 100, 105, 120, 121, 124, 129, 163, 195, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 231, 232, 233], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 16, 22, 23, 25, 34, 45, 49, 88, 95, 99, 100, 101, 105, 107, 109, 111, 124, 129, 135, 145, 155, 195, 197, 202, 204, 205, 207, 208, 209, 210, 214, 215, 217, 220, 223, 226, 227, 229, 230, 231, 232, 233], "regress": [1, 159, 198, 206, 212, 213, 214, 226, 231, 233], "suit": [1, 5, 10, 15, 32, 41, 54, 97, 98, 100, 121, 198, 204, 205, 207, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 226], "would": [1, 4, 7, 12, 15, 19, 29, 32, 39, 42, 82, 83, 86, 107, 124, 126, 139, 178, 198, 203, 205, 207, 208, 209, 210, 211, 214, 220, 223, 231], "thei": [1, 4, 5, 6, 10, 11, 12, 15, 16, 32, 33, 34, 43, 50, 65, 98, 112, 124, 195, 198, 202, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 220, 223, 226, 227, 231, 233], "need": [1, 3, 4, 5, 9, 10, 11, 12, 14, 24, 42, 50, 66, 80, 124, 141, 148, 195, 202, 205, 207, 209, 210, 211, 213, 214, 215, 216, 220, 221, 223, 226, 227, 231, 233], "configur": [1, 4, 5, 7, 9, 12, 14, 29, 32, 39, 41, 51, 80, 81, 82, 83, 84, 85, 99, 100, 105, 121, 124, 185, 187, 188, 189, 193, 194, 198, 205, 208, 209, 213, 214, 215, 217, 220, 221, 223, 230, 231, 232], "work": [1, 4, 6, 9, 10, 12, 13, 14, 32, 34, 35, 37, 40, 41, 48, 85, 97, 99, 100, 105, 120, 121, 144, 154, 171, 173, 174, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 220, 227, 229, 231, 232], "properli": [1, 117, 119, 120, 214, 215, 231], "addit": [1, 5, 7, 32, 201, 202, 203, 205, 207, 208, 209, 210, 214], "modif": [1, 5, 205], "nightli": [1, 210, 231, 233], "anoth": [1, 5, 7, 8, 11, 14, 15, 32, 33, 34, 106, 107, 195, 205, 207, 208, 209, 210, 212, 214, 215, 226, 231, 232, 233], "might": [1, 9, 12, 14, 16, 205, 208, 210, 214, 215, 220, 231], "made": [1, 4, 14, 32, 35, 41, 107, 205, 207, 209, 212, 214, 232], "ensur": [1, 7, 12, 50, 198, 209, 210, 227, 229], "continu": [1, 205, 214], "expect": [1, 10, 14, 202, 205, 210, 214, 227, 229], "page": [2, 5, 216], "auto": 2, "summari": [2, 217], "more": [2, 4, 7, 9, 10, 11, 12, 14, 15, 32, 41, 48, 66, 99, 100, 124, 197, 198, 199, 203, 205, 206, 207, 209, 210, 212, 220, 224, 226, 227, 230, 231, 232], "relev": [2, 5, 7, 124, 214, 216, 217, 218, 219, 220, 221, 230, 231], "main": [2, 5, 7, 12, 37, 121, 174, 202, 208, 209, 210, 214, 232], "part": [2, 4, 5, 10, 12, 15, 16, 32, 41, 139, 166, 178, 198, 205, 206, 209, 210, 213, 214, 223], "document": [2, 7, 12, 205, 209, 213, 215, 231], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 25, 34, 45, 105, 196, 198, 199, 201, 202, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 220, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233], "As": [3, 4, 11, 15, 60, 124, 205, 206, 207, 208, 209, 210, 214, 215, 223, 227, 229, 233], "long": [3, 19, 29, 32, 39, 82, 83, 126, 139, 178, 205, 214, 226, 231], "follow": [3, 4, 5, 11, 12, 16, 57, 121, 187, 193, 194, 195, 197, 198, 205, 206, 207, 210, 211, 214, 215, 220, 221, 223, 225, 227, 229, 231], "procedur": [3, 121, 210, 214, 221], "conda": [3, 4, 13, 85, 117, 119, 120, 121, 195, 202, 209, 213, 214, 215, 216, 217, 218, 219, 221], "environ": [3, 4, 80, 117, 119, 120, 121, 195, 202, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221], "spack": [3, 4, 117, 119, 120, 121, 211, 213, 214, 216, 217, 218, 219, 220, 221], "compil": [3, 4, 12, 117, 118, 119, 120, 121, 122, 211, 213, 214, 216, 217, 218, 219, 220, 221, 231], "system": [3, 4, 19, 29, 32, 39, 80, 82, 83, 84, 117, 119, 120, 121, 126, 139, 178, 205, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 231], "modul": [3, 4, 7, 8, 10, 12, 13, 21, 22, 23, 57, 77, 101, 117, 119, 120, 121, 124, 202, 203, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 231], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 32, 34, 40, 66, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 101, 103, 105, 106, 107, 108, 109, 117, 118, 119, 120, 121, 122, 139, 141, 144, 148, 154, 159, 161, 168, 178, 187, 193, 194, 195, 197, 198, 199, 201, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 227, 229, 230, 233], "up": [3, 4, 5, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 32, 40, 41, 72, 85, 99, 100, 105, 106, 107, 117, 118, 119, 120, 121, 122, 124, 144, 154, 159, 195, 198, 199, 201, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 227, 230, 232], "alreadi": [3, 9, 12, 43, 53, 124, 139, 178, 207, 209, 210, 214, 215, 220, 223, 227, 231], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 21, 22, 23, 34, 43, 52, 77, 85, 101, 105, 111, 121, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 231], "avail": [3, 4, 5, 9, 12, 15, 16, 19, 29, 32, 35, 36, 39, 49, 54, 81, 82, 83, 126, 139, 178, 205, 207, 209, 210, 214, 216, 217, 218, 219, 221, 226, 231, 233], "Then": [3, 5, 9, 117, 118, 119, 120, 121, 122, 124, 195, 198, 201, 202, 205, 207, 208, 210, 214, 220, 226, 231], "run": [3, 4, 5, 8, 10, 14, 15, 16, 19, 24, 29, 32, 33, 35, 38, 39, 41, 42, 48, 57, 81, 82, 83, 92, 99, 100, 105, 107, 120, 121, 126, 127, 137, 139, 140, 141, 145, 148, 152, 157, 163, 166, 167, 168, 176, 178, 179, 183, 195, 198, 199, 201, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 232, 233], "script": [3, 4, 10, 16, 47, 118, 121, 122, 209, 212, 213, 214, 217, 220], "doc": [3, 5, 207, 214, 221], "cd": [3, 195, 210, 214, 217, 231], "rm": 3, "rf": 3, "developers_guid": [3, 214], "_build": 3, "make": [3, 4, 9, 10, 14, 15, 19, 28, 34, 50, 59, 60, 62, 75, 107, 117, 118, 119, 120, 121, 122, 126, 130, 135, 145, 155, 173, 187, 193, 194, 195, 198, 205, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 221, 226, 227, 231, 233], "html": [3, 224], "view": [3, 210], "open": [3, 210, 214], "index": [3, 15, 187, 188, 189, 190, 191, 192, 193, 194, 207, 208, 214], "act": [4, 209, 223], "essenti": [4, 12], "4": [4, 5, 11, 12, 15, 135, 137, 176, 179, 198, 201, 205, 207, 214, 215, 220, 226, 229, 231], "These": [4, 6, 12, 15, 17, 32, 124, 195, 197, 202, 205, 207, 209, 210, 213, 214, 215, 220, 226, 231, 232, 233], "user": [4, 5, 6, 7, 9, 12, 14, 15, 32, 41, 42, 50, 85, 107, 121, 124, 198, 201, 205, 206, 207, 208, 211, 212, 214, 217, 220, 221, 224, 226, 227], "describ": [4, 5, 12, 14, 85, 101, 103, 106, 107, 116, 121, 124, 198, 199, 201, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 227, 231], "below": [4, 12, 19, 29, 32, 39, 82, 83, 121, 126, 139, 178, 195, 203, 205, 207, 208, 210, 214, 215, 220, 223, 227, 229, 231], "when": [4, 10, 12, 14, 15, 20, 21, 22, 23, 25, 32, 33, 38, 41, 42, 50, 51, 53, 54, 97, 106, 107, 121, 124, 129, 192, 198, 201, 205, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 221, 223, 226, 227, 229, 231, 232], "instal": [4, 210, 214, 220, 221, 231], "abov": [4, 5, 12, 15, 203, 205, 206, 207, 208, 209, 210, 214, 215, 227, 229, 231, 233], "develop": [4, 5, 6, 10, 11, 16, 121, 124, 195, 197, 202, 205, 206, 209, 211, 215, 220, 224, 231], "local": [4, 6, 9, 32, 34, 41, 195, 203, 205, 207, 210, 211, 214, 215, 220, 221, 223], "off": [4, 210, 211], "http": [4, 5, 9, 53, 205, 209, 211, 213, 214, 215, 221, 224, 231], "github": [4, 5, 209, 210, 213, 214, 215, 224, 231], "com": [4, 5, 53, 209, 210, 213, 214, 215, 231], "e3sm": [4, 5, 8, 9, 32, 110, 195, 202, 205, 206, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224], "creat": [4, 6, 9, 10, 11, 12, 13, 14, 17, 19, 32, 34, 38, 41, 45, 53, 58, 59, 65, 66, 71, 86, 93, 99, 100, 105, 110, 121, 124, 133, 135, 137, 139, 142, 145, 147, 149, 152, 155, 157, 160, 163, 166, 169, 171, 173, 176, 178, 179, 181, 183, 187, 193, 194, 199, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 227, 231], "see": [4, 5, 6, 7, 10, 11, 12, 14, 15, 117, 119, 120, 198, 199, 205, 207, 210, 211, 214, 215, 220, 224, 225, 226, 229, 230, 231, 232, 233], "mode": [4, 12, 202, 210, 212, 213, 214, 231], "mean": [4, 15, 80, 164, 199, 210, 214, 223, 226, 233], "chang": [4, 6, 12, 14, 15, 65, 195, 202, 205, 206, 207, 209, 210, 212, 214, 215, 217, 221, 223, 226, 231, 233], "reflect": [4, 210], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 27, 32, 38, 41, 42, 43, 57, 92, 97, 121, 124, 198, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 221, 231], "tool": [4, 7, 10, 12, 14, 195, 202, 205, 210, 213, 214, 215], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 24, 25, 29, 32, 33, 34, 38, 39, 41, 48, 51, 66, 75, 78, 80, 82, 83, 86, 92, 97, 107, 108, 109, 110, 111, 116, 117, 121, 124, 126, 127, 128, 129, 130, 139, 140, 141, 148, 160, 163, 167, 171, 178, 185, 187, 188, 189, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 233], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 57, 58, 63, 65, 68, 71, 81, 82, 83, 85, 86, 97, 98, 99, 100, 105, 106, 107, 121, 124, 125, 126, 185, 195, 197, 198, 199, 201, 202, 203, 205, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 29, 32, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 54, 58, 63, 65, 68, 71, 81, 82, 83, 85, 86, 97, 98, 99, 100, 101, 105, 106, 107, 121, 124, 125, 126, 132, 133, 135, 137, 139, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 155, 157, 158, 160, 161, 163, 165, 166, 169, 171, 172, 173, 175, 176, 178, 179, 181, 182, 183, 184, 185, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 233], "support": [4, 6, 11, 14, 32, 124, 187, 193, 194, 197, 199, 205, 207, 208, 209, 213, 214, 215, 217, 221, 223, 226, 229, 232], "machin": [4, 6, 32, 34, 41, 85, 99, 100, 105, 195, 205, 207, 209, 213, 214, 215, 216, 217, 218, 219, 221], "option": [4, 5, 7, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 39, 41, 42, 43, 48, 50, 51, 53, 54, 58, 64, 65, 66, 69, 71, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 121, 126, 129, 139, 141, 148, 150, 161, 168, 178, 185, 187, 188, 189, 193, 194, 195, 198, 199, 201, 202, 205, 206, 207, 208, 209, 211, 213, 215, 223, 225, 231, 232], "h": [4, 12, 214], "t": [4, 5, 7, 9, 10, 12, 32, 33, 116, 124, 139, 178, 205, 207, 209, 210, 211, 214, 215, 217, 219, 220, 225, 226, 231, 232, 233], "n": [4, 59, 66, 67, 73, 205, 214, 217, 220, 221, 226, 227, 230, 231], "number": [4, 6, 11, 12, 19, 26, 29, 31, 32, 36, 38, 39, 54, 58, 59, 60, 61, 62, 70, 81, 82, 83, 86, 100, 124, 126, 127, 128, 130, 139, 140, 164, 167, 178, 195, 198, 205, 206, 207, 208, 209, 212, 214, 215, 220, 223, 225, 226, 227, 229, 230, 231], "v": [4, 210, 214, 233], "By": [4, 12, 15, 33, 34, 124, 195, 202, 207, 214, 215, 226, 229], "default": [4, 5, 7, 12, 15, 16, 19, 32, 33, 34, 41, 48, 66, 71, 76, 85, 86, 87, 91, 94, 98, 99, 100, 102, 105, 117, 119, 120, 124, 126, 139, 176, 178, 179, 195, 199, 201, 202, 205, 207, 208, 210, 213, 215, 216, 217, 218, 219, 220, 221, 223, 227, 229, 230, 231, 232, 233], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 32, 39, 41, 49, 82, 83, 85, 99, 100, 124, 125, 126, 133, 139, 178, 187, 193, 194, 195, 198, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 220, 223, 224, 226, 227, 230, 231, 232], "testcas": [4, 6, 9, 14, 15, 19, 32, 46, 58, 65, 71, 86, 99, 100, 106, 107, 126, 139, 142, 147, 152, 157, 170, 171, 173, 178, 181, 183, 205, 209, 214, 215, 226, 229, 231], "example_compact": [4, 195, 202, 215], "1km": [4, 207, 208, 214, 226, 231], "test1": 4, "1": [4, 5, 11, 12, 14, 15, 16, 32, 60, 117, 118, 119, 120, 121, 122, 124, 135, 139, 155, 178, 187, 193, 194, 198, 199, 201, 203, 205, 207, 210, 211, 214, 215, 217, 220, 221, 223, 226, 227, 229, 230, 231], "test2": 4, "displai": [4, 6, 221], "path": [4, 7, 9, 12, 15, 32, 34, 35, 41, 48, 50, 51, 53, 54, 57, 85, 99, 100, 105, 106, 107, 109, 195, 202, 205, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 231, 232], "directori": [4, 6, 9, 10, 12, 13, 15, 16, 32, 34, 35, 40, 41, 48, 53, 85, 97, 99, 100, 105, 106, 107, 121, 144, 154, 171, 173, 195, 198, 202, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 227, 231, 232], "help": [4, 11, 203, 205, 210, 213, 214, 220, 224], "messag": [4, 6, 15, 205, 207, 211, 221], "test_expr": [4, 54], "flag": [4, 205, 209, 211, 212, 214, 215, 224, 226, 231], "suppli": [4, 5, 15, 116, 205, 210, 214], "substr": 4, "regular": [4, 16, 54, 59, 66, 160, 163, 214, 216, 219, 220, 221, 231], "express": [4, 54], "subset": 4, "think": [4, 214], "search": [4, 54, 217], "within": [4, 5, 6, 7, 8, 9, 10, 12, 15, 29, 32, 34, 35, 39, 41, 52, 105, 106, 107, 198, 202, 203, 205, 206, 207, 208, 210, 212, 214, 215, 217, 220, 227, 229, 230], "name": [4, 5, 6, 7, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 26, 32, 33, 34, 41, 43, 45, 51, 53, 54, 58, 65, 71, 75, 77, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 115, 124, 126, 129, 131, 133, 139, 147, 164, 166, 169, 171, 173, 178, 186, 202, 205, 207, 208, 209, 210, 212, 214, 215, 221, 226, 231, 233], "singl": [4, 6, 16, 109, 175, 176, 179, 181, 201, 205, 207, 209, 212, 214, 220, 229], "given": [4, 5, 6, 11, 12, 14, 15, 17, 19, 51, 60, 70, 77, 80, 82, 83, 98, 101, 103, 106, 107, 111, 124, 126, 149, 164, 190, 198, 199, 201, 205, 207, 211, 213, 214, 215, 226, 227, 229, 230, 231, 233], "instead": [4, 10, 12, 19, 98, 117, 121, 205, 207, 209, 210, 214, 216, 231, 233], "pass": [4, 6, 10, 11, 12, 15, 41, 70, 107, 108, 202, 205, 207, 208, 209, 210, 212, 231], "similarli": [4, 6, 195, 205, 210, 220, 231], "compon": [4, 5, 6, 7, 8, 11, 19, 32, 34, 41, 45, 56, 85, 105, 110, 126, 132, 139, 159, 166, 175, 178, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 220, 222, 225, 232], "result": [4, 11, 15, 51, 61, 70, 106, 107, 121, 124, 135, 145, 152, 155, 157, 183, 198, 199, 205, 206, 209, 210, 212, 214, 215, 226, 227, 230, 233], "verbos": [4, 54, 56, 205, 214, 233], "about": [4, 5, 6, 10, 12, 15, 32, 86, 110, 124, 205, 207, 208, 209, 210, 214, 215, 217], "its": [4, 5, 6, 10, 14, 16, 32, 43, 92, 102, 202, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 227, 231, 232], "descript": [4, 5, 214, 215, 224], "short": [4, 137, 176, 179, 205, 206, 207, 209, 214, 226], "core": [4, 5, 6, 12, 19, 29, 31, 32, 34, 36, 38, 39, 41, 81, 82, 83, 105, 124, 125, 126, 135, 137, 176, 179, 198, 201, 202, 203, 205, 206, 207, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 231, 233], "subdirectori": [4, 6, 11, 19, 32, 34, 41, 54, 58, 65, 71, 86, 126, 139, 171, 173, 178, 198, 203, 205, 207, 209, 214, 231, 232], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 29, 41, 42, 48, 58, 63, 65, 68, 71, 72, 81, 83, 85, 86, 92, 97, 98, 99, 100, 107, 124, 126, 127, 131, 133, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 197, 198, 199, 201, 202, 203, 204, 207, 208, 209, 212, 213, 215, 221, 223, 232, 233], "tempat": 4, "subdir": [4, 14, 19, 32, 41, 58, 65, 71, 86, 126, 139, 171, 173, 178, 205, 207, 214], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 15, 41, 97, 107, 195, 202, 205, 207, 208, 212, 213, 214, 224], "must": [4, 5, 9, 12, 15, 16, 19, 22, 23, 32, 35, 37, 105, 108, 109, 124, 126, 174, 197, 205, 207, 208, 210, 214, 223, 232], "built": [4, 12, 99, 100, 105, 195, 202, 210, 213, 215, 220, 231], "execut": [4, 6, 12, 15, 19, 99, 100, 105, 126, 195, 202, 205, 210, 214, 215, 216, 217, 218, 219, 220, 221, 231], "standalon": [4, 12, 120, 202, 210, 212, 213, 220], "mpa": [4, 7, 9, 10, 11, 12, 14, 15, 16, 19, 25, 32, 34, 57, 75, 88, 95, 101, 103, 105, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 129, 159, 160, 171, 186, 195, 196, 198, 199, 201, 202, 203, 205, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 229, 230, 231, 232, 233], "befor": [4, 6, 12, 14, 38, 205, 208, 209, 210, 211, 214, 217, 221, 223, 227, 231], "w": [4, 210, 212, 214, 231], "num": 4, "f": [4, 7, 9, 12, 207, 209, 210, 214, 215, 221, 226, 231], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 38, 40, 41, 43, 48, 51, 53, 57, 74, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 113, 115, 116, 121, 126, 130, 131, 141, 144, 148, 154, 171, 173, 186, 195, 198, 199, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 217, 220, 221, 223, 226, 227, 230, 231, 232], "m": [4, 12, 59, 66, 67, 73, 198, 201, 208, 210, 214, 216, 217, 218, 219, 221, 223, 226, 227, 229, 231], "mach": [4, 32, 216, 217, 218, 219, 220, 221, 231], "p": [4, 210, 214, 215, 231], "suite_nam": [4, 6, 98, 100, 105, 231], "specifi": [4, 12, 14, 15, 16, 34, 197, 205, 210, 214, 215, 221, 226, 227, 230, 231], "either": [4, 5, 6, 10, 11, 12, 14, 60, 124, 195, 205, 210, 212, 214, 215, 223, 229, 231], "onli": [4, 5, 6, 12, 14, 15, 41, 121, 195, 197, 199, 201, 202, 205, 207, 209, 213, 214, 215, 217, 220, 221, 223, 225, 226, 227, 229, 231], "time": [4, 5, 6, 12, 15, 16, 32, 41, 109, 124, 131, 139, 149, 168, 178, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 221, 231, 233], "wai": [4, 5, 11, 12, 32, 62, 67, 121, 124, 205, 207, 208, 209, 210, 211, 213, 214, 220, 223, 229], "altern": [4, 11, 231], "ani": [4, 5, 6, 7, 11, 12, 14, 15, 16, 28, 40, 99, 100, 144, 154, 202, 203, 205, 206, 207, 208, 209, 210, 214, 215, 220, 226, 227, 229, 230, 231], "case_numb": 4, "multipl": [4, 5, 12, 15, 196, 206, 209, 210, 214, 220, 226, 231], "separ": [4, 5, 7, 12, 14, 15, 205, 206, 212, 214, 227, 231], "space": [4, 5, 7, 11, 205, 210, 214, 217, 220, 231], "requir": [4, 6, 12, 19, 29, 32, 33, 39, 86, 126, 139, 178, 195, 202, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 220, 223, 224, 230, 231, 232], "few": [4, 11, 12, 19, 29, 32, 39, 82, 83, 121, 126, 198, 201, 205, 209, 214, 215, 220], "basic": [4, 5, 215, 217, 220, 231], "piec": [4, 202, 214], "inform": [4, 5, 6, 32, 86, 107, 116, 205, 207, 210, 215, 217, 224, 231], "abl": [4, 117, 118, 119, 120, 122, 124, 205, 206, 208, 210, 214, 220, 231], "place": [4, 12, 15, 108, 205, 207, 214, 220], "download": [4, 6, 8, 32, 34, 40, 144, 154, 207, 209, 210, 215, 231, 233], "some": [4, 6, 7, 8, 9, 11, 12, 15, 41, 197, 198, 203, 205, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 231, 232, 233], "data": [4, 8, 11, 14, 15, 16, 20, 32, 33, 34, 92, 101, 103, 104, 108, 109, 110, 116, 121, 171, 187, 193, 194, 205, 210, 213, 215, 216, 217, 218, 219, 220, 231, 232, 233], "locat": [4, 12, 15, 16, 41, 99, 100, 105, 195, 205, 210, 212, 214, 215, 217, 220, 223, 226, 227, 231], "where": [4, 5, 12, 15, 32, 34, 41, 51, 85, 99, 100, 105, 108, 124, 187, 190, 193, 194, 195, 202, 204, 205, 207, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231, 233], "There": [4, 11, 187, 193, 194, 201, 203, 205, 209, 210, 211, 214, 215, 231], "r": [4, 221, 227], "tell": [4, 210], "re": [4, 205, 209, 210, 212, 214, 215, 220, 221, 227], "leav": [4, 16, 199, 207, 215, 227], "unknown": [4, 121, 209, 220], "component_path": [4, 99, 100, 105, 195, 202, 215, 231], "absolut": [4, 7, 32, 34, 50, 99, 100, 105, 195, 202, 205, 210, 231], "landic": [4, 8, 10, 17, 34, 57, 105, 202, 204, 205, 207, 208, 210, 212, 213, 214, 215, 231, 232, 233], "e3sm_submodul": [4, 195, 202, 210, 214], "mali": [4, 121, 202, 205, 210, 212, 214, 215, 231, 232], "dev": [4, 5, 202, 204, 205, 208, 209, 210, 213, 224, 231], "albani": [4, 117, 119, 120, 121, 202, 215, 216, 217, 218, 221, 231], "depend": [4, 6, 12, 14, 16, 32, 33, 40, 144, 154, 199, 207, 210, 212, 214, 215, 220, 221, 223, 227, 231, 232], "whether": [4, 6, 11, 15, 16, 19, 24, 32, 34, 41, 42, 48, 51, 53, 54, 80, 97, 98, 99, 100, 105, 107, 108, 109, 112, 124, 126, 127, 139, 140, 141, 148, 160, 163, 167, 168, 178, 205, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231], "omega": [4, 25, 110, 126, 129, 195, 202, 209, 210, 212, 214, 224, 231], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 23, 24, 25, 32, 33, 34, 41, 43, 51, 64, 66, 69, 80, 81, 82, 83, 84, 85, 99, 100, 105, 107, 108, 110, 111, 112, 113, 115, 116, 121, 126, 129, 141, 148, 161, 168, 185, 187, 188, 189, 193, 194, 195, 198, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 213, 223, 231, 232], "point": [4, 47, 53, 89, 195, 197, 202, 207, 208, 209, 210, 214, 215, 220, 231], "much": [4, 12, 205, 214], "config_fil": [4, 99, 100, 105], "work_dir": [4, 9, 15, 32, 41, 85, 99, 100, 105, 106, 107, 205, 207, 214], "base": [4, 6, 11, 12, 13, 15, 17, 32, 34, 36, 41, 45, 48, 64, 69, 71, 99, 100, 105, 121, 128, 130, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 202, 204, 205, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 232], "": [4, 5, 6, 9, 10, 12, 14, 15, 32, 34, 35, 41, 43, 48, 72, 97, 102, 105, 107, 124, 171, 173, 195, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 227, 230, 231], "recommend": [4, 5, 9, 16, 205, 206, 209, 210, 214, 220], "itself": [4, 5, 7, 32, 202, 204, 205, 207, 208, 210, 214, 231], "temp": 4, "scratch": [4, 210, 214, 217, 221, 231], "avoid": [4, 205, 214], "confus": [4, 12, 209, 210, 214], "output": [4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 32, 33, 35, 40, 41, 48, 74, 75, 83, 86, 98, 107, 124, 126, 131, 144, 154, 163, 171, 186, 198, 201, 207, 212, 215, 221, 231, 233], "compar": [4, 8, 15, 41, 99, 100, 105, 106, 107, 134, 136, 138, 146, 151, 156, 177, 180, 199, 201, 206, 209, 210, 212, 214, 225, 226, 231, 233], "previou": [4, 15, 205, 210, 214, 225, 231, 233], "same": [4, 5, 7, 12, 15, 33, 34, 41, 106, 107, 124, 201, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 229, 231, 232, 233], "baseline_dir": [4, 41, 99, 100, 105], "mani": [4, 6, 7, 124, 203, 205, 207, 209, 210, 212, 213, 214, 226, 230], "valid": [4, 5, 6, 8, 41, 187, 188, 189, 190, 191, 192, 193, 194, 198, 201, 209, 210, 213, 223, 226], "sure": [4, 10, 14, 15, 107, 121, 135, 145, 155, 195, 198, 205, 209, 210, 212, 214, 215, 220, 221, 226, 227], "timer": [4, 41, 44, 106, 206, 207, 209], "ha": [4, 7, 12, 15, 19, 29, 32, 33, 35, 39, 41, 43, 84, 92, 107, 117, 119, 120, 126, 139, 178, 195, 198, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 223, 226, 229, 231], "both": [4, 5, 6, 11, 12, 15, 24, 107, 124, 141, 148, 198, 204, 205, 208, 210, 213, 214, 215, 225, 229], "custom": [4, 6, 11, 14, 50, 51, 99, 100, 105, 195, 202, 210, 215, 221, 231], "order": [4, 6, 11, 12, 124, 202, 205, 206, 210, 214, 229, 231], "give": [4, 12, 15, 205, 209, 210, 214, 215, 231], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 15, 16, 19, 31, 121, 124, 126, 187, 193, 194, 195, 198, 202, 205, 207, 209, 210, 212, 214, 215, 220, 221, 223, 226, 227, 229, 231, 233], "after": [4, 5, 12, 14, 16, 32, 34, 35, 72, 92, 121, 188, 189, 195, 202, 205, 207, 210, 214, 215, 217, 221, 231], "c": [4, 100, 121, 205, 210, 216, 217, 218, 219, 220, 221, 225, 231, 233], "argument": [4, 5, 7, 10, 12, 15, 16, 30, 32, 82, 83, 93, 108, 198, 205, 207, 209, 210, 214, 230, 233], "resid": [4, 34], "test_suit": [4, 205], "build": [4, 8, 11, 12, 62, 67, 117, 118, 119, 120, 121, 122, 195, 199, 202, 207, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221], "mpas_model": [4, 215], "overrid": [4, 11, 12, 37, 38, 40, 43, 44, 50, 62, 65, 66, 67, 124, 144, 154, 174, 205, 207, 209, 214, 215, 221, 231], "mai": [4, 5, 6, 10, 11, 12, 15, 33, 35, 38, 108, 121, 124, 195, 197, 205, 206, 207, 208, 210, 211, 212, 214, 215, 221, 227, 229, 230, 231, 232], "baselin": [4, 6, 8, 15, 41, 99, 100, 105, 106, 107, 134, 136, 138, 146, 151, 156, 162, 177, 180, 198, 201, 206, 209, 212, 214, 225, 231], "comparison": [4, 15, 41, 106, 107, 207, 214, 215], "against": [4, 6, 8, 15, 107, 162, 198, 201, 205, 214, 225], "oppos": [4, 24, 127, 140, 141, 148, 160, 163, 167, 168, 214], "task": [4, 6, 8, 9, 12, 14, 19, 26, 29, 31, 32, 36, 38, 39, 81, 82, 83, 86, 124, 126, 128, 130, 139, 178, 198, 205, 209, 212, 213, 214, 216, 217, 218, 219, 220, 221], "parallel": [4, 14, 19, 29, 32, 38, 39, 126, 205, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 231, 232], "been": [4, 12, 15, 32, 41, 43, 92, 99, 100, 105, 117, 119, 120, 124, 163, 195, 202, 205, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 231], "skip_step": 4, "wherea": [4, 10, 205, 214, 225, 232], "typic": [4, 5, 7, 11, 12, 14, 15, 16, 32, 98, 124, 202, 203, 205, 208, 210, 212, 214, 215, 220, 223, 229, 231, 232], "clone": [4, 195, 203, 210, 214, 231], "than": [4, 6, 7, 9, 11, 12, 32, 34, 39, 50, 121, 139, 178, 198, 205, 206, 209, 210, 211, 214, 223, 226, 229, 233], "just": [4, 12, 19, 29, 32, 39, 54, 121, 126, 205, 209, 210, 212, 214, 217, 221], "pickl": [4, 6, 205, 214, 231], "latter": [4, 41, 121], "conveni": [4, 14, 187, 193, 194, 205, 212, 214, 215, 231], "tab": [4, 231], "complet": [4, 6, 21, 22, 23, 214, 231], "explicitli": [4, 5, 15, 124, 198, 205, 210, 214, 215, 231], "select": [4, 6, 109, 205, 210, 214], "two": [4, 8, 145, 198, 199, 201, 202, 205, 206, 208, 209, 210, 214, 226, 227, 232], "edit": [4, 5, 107, 210, 214, 231], "steps_to_run": [4, 15, 41, 98, 107, 205, 207, 214, 215], "test_cas": [4, 6, 7, 14, 19, 32, 45, 46, 58, 65, 71, 85, 86, 99, 100, 106, 107, 126, 139, 142, 147, 152, 157, 163, 166, 169, 171, 173, 178, 181, 183, 205, 207, 214, 215, 231], "initial_st": [4, 5, 16, 133, 197, 199, 205, 207, 209, 215, 226, 227], "full_run": [4, 146, 226], "restart_run": [4, 146, 226], "Or": [4, 205, 215], "accomplish": [4, 205, 209], "thing": [4, 117, 118, 119, 120, 121, 122, 124, 205, 209, 213], "skip": [4, 6, 15, 107, 207, 233], "take": [4, 5, 9, 11, 12, 15, 50, 205, 206, 208, 210, 214, 227, 233], "preced": [4, 50], "over": [4, 7, 12, 50, 108, 205, 209, 213, 214, 223, 226, 229, 231], "special": [4, 212, 230], "databas": [4, 6, 9, 14, 17, 19, 32, 34, 126, 205, 220], "polaris_cach": [4, 6, 17, 205], "symlink": [4, 6, 12, 32, 34, 207, 209, 210], "input": [4, 6, 8, 9, 14, 27, 32, 33, 34, 35, 40, 75, 144, 154, 198, 201, 214, 229], "structur": [4, 11, 25, 129, 204, 207, 213, 214], "without": [4, 15, 34, 205, 209, 210, 214, 215, 219, 220, 230, 231], "redund": [4, 187, 193, 194, 198, 214], "stamp": 4, "revis": [4, 214, 215], "remov": [4, 12, 15, 98, 198, 210, 214], "older": 4, "ones": [4, 187, 193, 194, 209, 214], "version": [4, 13, 27, 50, 85, 106, 107, 195, 198, 202, 203, 205, 208, 209, 210, 213, 214, 215, 220, 221, 224, 226, 231], "A": [4, 5, 6, 9, 11, 12, 14, 16, 17, 20, 22, 23, 25, 32, 33, 34, 36, 41, 45, 49, 50, 54, 58, 59, 62, 65, 66, 67, 71, 77, 81, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 129, 132, 135, 139, 142, 145, 147, 152, 155, 157, 159, 160, 163, 166, 169, 171, 173, 175, 178, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 198, 199, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 226, 227, 230, 231], "aid": 4, "updat": [4, 5, 6, 19, 21, 23, 28, 29, 38, 39, 102, 120, 128, 139, 178, 195, 198, 205, 211, 213, 214, 231], "cached_fil": [4, 17, 205], "json": [4, 6, 17, 48, 205, 221], "anvil": [4, 121, 205, 215, 220, 231], "chrysali": [4, 121, 205, 214, 215, 220, 231], "sinc": [4, 12, 15, 116, 124, 198, 205, 207, 209, 210, 214, 226, 227, 230], "copi": [4, 6, 34, 48, 99, 100, 105, 214, 217, 231], "onto": [4, 210], "lcrc": [4, 6, 9, 48, 205, 209, 215, 216, 218, 220, 231], "server": [4, 6, 34, 48, 205, 209, 215, 221], "whose": [4, 205], "global_ocean": [4, 7, 9, 12, 202, 205, 207, 209, 210, 215, 231, 233], "qu240": [4, 12, 205, 209, 210, 215, 231, 233], "mesh": [4, 5, 8, 14, 19, 32, 75, 88, 95, 109, 124, 126, 127, 128, 130, 137, 140, 142, 160, 163, 164, 166, 167, 169, 171, 173, 176, 179, 181, 187, 193, 194, 197, 198, 201, 203, 205, 207, 208, 209, 210, 212, 213, 215, 223, 225, 231, 233], "phc": [4, 205, 223, 233], "init": [4, 12, 16, 29, 39, 195, 202, 205, 207, 209, 210, 214, 215, 231, 233], "ocean_cached_fil": 4, "pr": [4, 231, 233], "look": [4, 5, 9, 15, 208, 209, 214, 215], "someth": [4, 5, 87, 91, 94, 210, 214], "culled_mesh": [4, 205, 214], "nc": [4, 9, 10, 11, 12, 14, 15, 16, 86, 205, 207, 209, 214], "210803": 4, "culled_graph": [4, 205, 214], "info": [4, 10, 12, 19, 26, 75, 126, 205, 214], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 205], "date_str": [4, 48], "let": [4, 205, 210, 212, 214, 215, 221], "string": [4, 7, 12, 34, 90, 96], "choos": [4, 205, 209, 210, 214, 216, 217, 218, 219, 221, 232], "todai": [4, 48], "dry_run": [4, 48], "saniti": [4, 214], "check": [4, 15, 80, 107, 210, 212, 214, 215, 217, 221, 231, 233], "print": [4, 10, 15, 54, 107, 112, 205, 209, 233], "stdout": [4, 10, 32, 41, 205], "translat": [4, 25, 124, 129], "compass": [4, 86, 195, 205, 209, 212, 214], "convert": [4, 7, 11, 12, 124, 205, 214], "namelist": [4, 5, 6, 8, 19, 20, 21, 24, 25, 27, 28, 31, 40, 99, 100, 105, 115, 116, 126, 129, 130, 141, 144, 148, 154, 195, 198, 199, 202, 205, 207, 208, 209, 213, 214, 215, 229], "stream": [4, 5, 6, 8, 19, 22, 24, 27, 40, 110, 115, 116, 130, 141, 144, 148, 154, 195, 197, 198, 201, 202, 205, 207, 208, 209, 215, 230], "yaml": [4, 8, 19, 20, 23, 24, 25, 126, 129, 130, 141, 148, 198, 201, 205, 213, 214, 217, 221], "e": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 110, 121, 124, 129, 195, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 221, 223, 226, 227, 229, 230, 231, 232, 233], "g": [4, 5, 9, 12, 25, 32, 33, 43, 45, 57, 110, 121, 124, 129, 195, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 223, 226, 227, 229, 230, 231, 233], "forward": [4, 5, 12, 15, 32, 131, 137, 138, 147, 149, 151, 176, 177, 179, 180, 195, 202, 205, 207, 209, 215, 226, 227, 230], "becaus": [4, 5, 9, 10, 11, 12, 15, 32, 33, 197, 205, 207, 209, 210, 214, 217, 219, 221, 231], "don": [4, 5, 12, 124, 205, 207, 209, 210, 214, 219, 231, 232], "format": [4, 5, 9, 11, 12, 110, 116, 205, 206, 207, 208, 210, 214, 215, 217], "note": [4, 5, 14, 15, 178, 214, 221], "keyword": [4, 5, 12, 15, 16, 199, 205, 207, 227], "top": [4, 16, 187, 188, 189, 190, 191, 192, 193, 194, 197, 203, 214, 223], "ignor": [4, 90, 96], "get": [4, 5, 7, 9, 10, 12, 14, 19, 20, 21, 22, 23, 32, 41, 42, 49, 60, 81, 92, 97, 121, 124, 126, 204, 205, 207, 208, 209, 210, 212, 215, 223, 231], "pars": [4, 7, 12, 20, 21, 22, 23, 77, 101, 103], "valu": [4, 5, 7, 12, 15, 16, 20, 25, 107, 108, 109, 112, 129, 149, 198, 202, 205, 207, 208, 209, 213, 214, 215, 223, 226, 227, 229], "doesn": [4, 7, 116, 205, 207, 214, 215, 220, 231], "matter": [4, 214], "usabl": 4, "sphinx": 5, "written": [5, 6, 32, 41, 108, 109, 205, 207, 214], "myst": [5, 214], "tip": [5, 210], "easi": [5, 34, 209, 214], "start": [5, 6, 12, 102, 197, 198, 206, 208, 209, 213, 217, 220, 221, 224], "exist": [5, 7, 25, 32, 35, 53, 101, 103, 105, 129, 198, 205, 209, 210, 211, 214, 220, 233], "tree": [5, 101, 103, 116], "group": [5, 7, 12, 17, 18, 32, 41, 45, 46, 49, 132, 133, 135, 137, 139, 145, 149, 152, 155, 157, 159, 160, 175, 176, 179, 183, 195, 198, 199, 201, 202, 203, 204, 205, 207, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233], "pull": [5, 209, 210, 214, 215], "request": [5, 12, 19, 26, 28, 126, 188, 189, 205, 209, 210, 211, 214, 215, 227], "guid": [5, 124, 198, 201, 206, 209, 214, 217, 220, 224], "baroclinic_channel": [5, 12, 15, 195, 200, 202, 205, 207, 208, 209, 212, 214, 224, 228, 231, 232, 233], "label": [5, 108, 220, 231], "prepend": 5, "them": [5, 6, 12, 14, 15, 19, 31, 121, 126, 199, 202, 205, 207, 208, 209, 210, 212, 214, 219, 220, 225, 231, 232], "baroclin": [5, 45, 132, 133, 135, 137, 139, 142, 145, 149, 152, 155, 157, 178, 183, 198, 205, 207, 208, 214, 226], "channel": [5, 45, 132, 133, 135, 137, 139, 142, 145, 149, 152, 155, 157, 178, 183, 198, 205, 207, 211, 214, 226], "And": [5, 12, 210, 214], "becom": [5, 205, 207, 214], "who": [5, 210, 214, 215, 221], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 16, 32, 41, 65, 90, 96, 99, 100, 105, 121, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 220, 223, 226, 227, 229, 232, 233], "brief": [5, 214], "overview": [5, 213, 217, 221], "comment": [5, 206, 215], "appli": [5, 11, 12, 54, 197, 208, 214, 226, 229, 230], "vertic": [5, 16, 197, 198, 201, 205, 215, 222, 224], "grid": [5, 11, 14, 59, 66, 70, 73, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 124, 171, 185, 186, 187, 188, 189, 190, 193, 194, 198, 199, 201, 205, 214, 215], "initi": [5, 6, 32, 131, 134, 137, 142, 159, 169, 176, 179, 181, 198, 199, 201, 205, 207, 208, 209, 211, 212, 213, 215, 223, 225, 232], "condit": [5, 32, 134, 137, 142, 159, 169, 176, 179, 181, 198, 199, 201, 205, 206, 207, 208, 209, 212, 213, 215, 225, 232], "forc": [5, 15, 201, 214, 232], "common": [5, 7, 10, 38, 41, 45, 198, 199, 201, 205, 206, 207, 208, 209, 211, 212, 214, 215, 220, 221, 231, 232, 233], "refer": [5, 12, 32, 131, 149, 187, 190, 193, 194, 205, 207, 209, 210, 212, 213, 214, 223, 226, 231], "awar": [5, 121, 202, 214, 220], "wish": [5, 12, 205, 210, 214, 231, 233], "test_group_nam": 5, "specif": [5, 7, 12, 43, 121, 195, 202, 203, 208, 213, 214, 215, 217, 220, 226, 230, 231, 233], "share": [5, 16, 124, 133, 195, 198, 201, 202, 203, 205, 207, 208, 210, 213, 216, 217, 218, 219, 220, 221, 222, 226, 230, 231], "function": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 40, 59, 66, 121, 124, 133, 144, 154, 205, 207, 208, 209, 213, 214, 227, 232], "public": [5, 9, 205, 214, 215], "api": [5, 10, 213, 214], "underscor": [5, 214], "md": [5, 214], "eval": 5, "rst": [5, 12, 214], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 133, 135, 137, 145, 149, 155, 198, 202, 207, 214], "baroclinicchanneltestcas": [5, 198], "compute_cell_count": [5, 124, 198, 214], "dynamic_model_config": [5, 198, 214], "initialst": [5, 198, 201, 205, 207, 214], "setup": [5, 7, 9, 12, 15, 24, 29, 32, 33, 39, 41, 124, 127, 140, 141, 148, 167, 168, 198, 201, 207, 209, 210, 212, 213, 214, 215, 227, 231, 232], "across": [5, 12, 16, 198, 205, 206, 207, 208, 209, 210, 212, 214, 222, 226, 227], "ot": [5, 214], "automat": [5, 7, 10, 12, 16, 124, 205, 207, 209, 210, 214, 215, 216, 218, 219, 220, 221, 231], "python": [5, 6, 7, 20, 38, 43, 203, 205, 207, 208, 209, 210, 212, 213, 214, 215, 220, 221, 231], "begin": [5, 15, 198, 205, 210, 213, 214, 220, 226, 227, 229], "numpydoc": [5, 214], "text": [5, 6, 226, 227, 229], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 124, 187, 189, 190, 191, 192, 193, 194, 195, 207, 214, 215, 217, 221], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 70, 80, 121, 124, 126, 127, 131, 140, 164, 167, 190, 191, 192, 198, 199, 201, 205, 210, 217, 218, 220, 221, 226, 231], "pressur": [5, 195, 215], "overli": [5, 214], "ic": [5, 124, 195, 209, 210, 213, 214, 215, 217, 223, 232], "shelf": [5, 124, 208, 209, 214, 215, 223], "draft": [5, 223], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 41, 42, 45, 46, 48, 51, 53, 54, 57, 58, 60, 61, 62, 65, 70, 71, 73, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 124, 126, 127, 129, 131, 133, 135, 137, 139, 140, 141, 142, 145, 147, 148, 149, 152, 155, 157, 160, 163, 164, 166, 167, 168, 169, 171, 173, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 207, 208, 226, 227, 229], "xarrai": [5, 14, 16, 109, 187, 188, 189, 190, 191, 192, 193, 194, 205, 214], "dataarrai": [5, 188, 189, 190, 191, 192, 205], "sea": [5, 124, 189, 190, 191, 192, 195, 214, 215, 223], "surfac": [5, 124, 189, 190, 191, 192, 195, 197, 201, 214, 215, 223, 226, 229], "height": [5, 124, 189, 190, 191, 192, 195, 214, 215, 223], "mask": [5, 187, 190, 193, 194, 205, 214, 215, 223], "landicepressur": [5, 207], "deviat": 5, "float": [5, 7, 12, 20, 58, 60, 61, 65, 70, 91, 107, 109, 133, 135, 137, 139, 142, 145, 149, 152, 155, 164, 178, 179, 181, 205, 207, 214], "densiti": [5, 11, 124, 214], "seawat": 5, "displac": 5, "land": [5, 124, 195, 213, 214, 215, 223, 232], "landicedraft": 5, "equal": [5, 201, 205, 209, 229], "entri": [5, 47, 78, 99, 100], "alwai": [5, 7, 10, 15, 50, 124, 195, 202, 205, 209, 210, 214, 215], "own": [5, 6, 9, 10, 16, 32, 205, 207, 209, 210, 212, 214, 215, 227, 231, 232], "line": [5, 8, 30, 32, 82, 83, 93, 205, 206, 209, 210, 213, 231], "type": [5, 12, 14, 16, 20, 88, 95, 116, 176, 179, 181, 205, 207, 208, 209, 210, 211, 212, 214, 215, 226, 227, 229, 230, 233], "side": 5, "colon": 5, "doubl": [5, 124, 205, 206, 214], "back": [5, 214, 217, 231], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 51, 61, 84, 195, 209, 210, 211, 214, 215, 231], "arg": [5, 10, 32, 82, 83, 205], "indic": [5, 6, 12, 14, 15, 32, 33, 100, 107, 109, 190, 203, 205, 211, 214, 215, 223, 229], "On": [5, 11, 210, 220], "next": [5, 208, 214, 223, 231], "indent": [5, 205], "obviou": [5, 12, 214], "none": [5, 12, 15, 19, 22, 23, 29, 32, 33, 34, 39, 41, 48, 51, 54, 56, 58, 65, 71, 75, 85, 86, 87, 90, 91, 94, 96, 98, 100, 101, 105, 106, 107, 108, 109, 111, 115, 126, 127, 139, 140, 167, 178, 205, 214, 223, 226, 227, 229, 230], "replac": [5, 7, 12, 20, 21, 22, 23, 24, 25, 41, 53, 77, 101, 111, 112, 129, 141, 148, 207, 209, 214, 215, 231], "els": [5, 6, 205, 214], "true": [5, 7, 11, 12, 15, 16, 19, 42, 51, 53, 107, 108, 109, 112, 117, 118, 119, 120, 122, 124, 126, 179, 197, 205, 207, 208, 210, 214, 215, 216, 217, 218, 219, 220, 221, 226, 231, 232], "further": [5, 207, 208, 221, 230], "necessari": [5, 11, 202, 214], "rais": [5, 7, 15, 32, 35, 51, 53, 80, 107, 124, 205, 207, 208, 209, 214], "list_cas": 6, "list_machin": [6, 209], "list_suit": 6, "anywher": [6, 10, 210], "setup_cas": [6, 7], "object": [6, 10, 14, 21, 22, 23, 77, 101, 106, 107, 110, 111, 115, 116, 202, 207, 208, 209, 214], "later": [6, 15, 19, 29, 32, 39, 50, 107, 126, 205, 214, 215], "contrast": 6, "read": [6, 17, 21, 22, 23, 32, 33, 41, 52, 76, 77, 110, 124, 197, 205, 207, 214], "properti": [6, 12, 197, 205, 220, 227], "clean_cas": 6, "delet": [6, 209, 210, 211, 231], "constant": [6, 58, 65, 66, 124, 197, 214, 226, 227, 229, 230], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 16, 110, 186, 205, 207, 210, 214], "out": [6, 11, 79, 84, 109, 203, 205, 209, 210, 215, 223, 231], "proven": [6, 8, 50, 213, 215], "save": [6, 16, 51, 73, 198, 205, 207, 208, 214, 220, 225, 226], "dictionari": [6, 7, 12, 16, 17, 20, 22, 23, 25, 32, 33, 36, 41, 45, 50, 77, 81, 85, 100, 101, 107, 110, 111, 112, 129, 199, 205, 207, 208, 209, 214, 227], "target": [6, 9, 14, 19, 34, 53, 86, 121, 124, 126, 198, 205, 207, 214, 227], "minimum": [6, 109, 124, 126, 198, 205, 214, 215, 223, 226, 227, 229, 230], "determin": [6, 11, 12, 16, 34, 38, 41, 80, 116, 124, 130, 198, 199, 205, 208, 214, 223, 226, 227, 230, 231], "maximum": [6, 15, 107, 109, 214, 215, 223], "product": 6, "ntask": [6, 12, 14, 19, 29, 32, 36, 39, 82, 83, 86, 124, 126, 139, 178, 205, 207, 214], "cpus_per_task": [6, 12, 32, 36, 39, 82, 83, 205], "attribut": [6, 10, 11, 12, 15, 38, 90, 96, 208, 214], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 214, 223, 226, 227, 229, 230], "runtim": [6, 24, 38, 124, 127, 140, 141, 148, 167, 168, 205, 207, 214], "min_task": [6, 12, 14, 19, 29, 32, 39, 82, 83, 86, 124, 126, 139, 178, 205, 207, 214], "min_cpus_per_task": [6, 12, 32, 39, 82, 83, 205], "fewest": 6, "least": [6, 11, 15, 202, 210], "fail": [6, 12, 15, 19, 29, 32, 39, 41, 51, 107, 126, 139, 178, 205, 213, 214, 215, 227], "run_test": [6, 205, 207], "run_single_step": 6, "oper": [6, 40, 144, 154, 205, 207, 233], "log": [6, 8, 15, 16, 32, 41, 83, 107, 108, 109, 205, 207, 210, 213, 231], "figur": [6, 201, 203, 205, 208, 215], "cpu": [6, 12, 121, 205, 214, 231], "per": [6, 12, 19, 29, 31, 32, 39, 82, 83, 124, 126, 205, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 230], "method": [6, 7, 11, 12, 14, 17, 19, 24, 25, 32, 33, 37, 38, 41, 42, 43, 44, 45, 50, 57, 58, 62, 65, 66, 67, 71, 72, 86, 92, 110, 124, 125, 126, 127, 129, 132, 133, 135, 137, 139, 140, 141, 142, 145, 147, 148, 149, 152, 155, 157, 159, 160, 163, 166, 167, 168, 169, 171, 173, 174, 175, 176, 178, 179, 181, 183, 198, 199, 202, 205, 207, 209, 214, 227, 230], "wa": [6, 15, 51, 106, 107, 121, 134, 136, 138, 146, 151, 156, 177, 180, 205, 207, 209, 210, 211, 214, 215, 223, 231], "retriev": [6, 211], "store": [6, 15, 43, 124, 205, 207, 214, 231], "dure": [6, 9, 12, 24, 32, 41, 124, 127, 140, 141, 148, 167, 168, 205, 207, 209, 210, 214, 215, 231, 232, 233], "txt": [6, 105, 206, 211], "case_output": [6, 10], "individu": [6, 7, 16, 107, 207, 209, 214, 220, 221, 226, 231, 232], "involv": [6, 12, 15, 107, 205, 207, 212, 214], "implement": [6, 7, 198, 199, 201, 209, 226, 227], "termin": [6, 15, 205, 210, 214], "window": 6, "update_cach": 6, "_cached_fil": [6, 205], "map": [6, 14, 17, 25, 65, 66, 86, 108, 109, 129, 171, 173, 199, 210, 215], "origin": [6, 48, 210, 214, 231], "enabl": [6, 16, 205, 211, 215, 221], "consum": [6, 205, 207, 214, 233], "faster": [6, 210], "debug": [6, 117, 118, 119, 120, 122, 214, 216, 217, 218, 219, 221], "parser": [7, 50], "here": [7, 10, 12, 14, 15, 198, 201, 204, 205, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 229, 230, 231, 233], "mpas_tool": [7, 10, 11, 70, 198, 201, 205, 214], "mpasconfigpars": 7, "polarisconfigpars": [7, 32, 41, 51, 80, 81, 84, 85, 108, 185, 187, 188, 189, 193, 194, 214], "certain": [7, 15, 50, 205, 210, 215, 230], "add_from_packag": [7, 209, 214], "content": [7, 12, 101, 103, 116, 203, 205, 209, 214, 231], "found": [7, 12, 111, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 14, 16, 43, 73, 124, 202, 205, 207, 208, 209, 214, 215], "cfg": [7, 43, 202, 207, 208, 209, 214, 215, 231], "except": [7, 15, 32, 35, 51, 107, 205, 209, 214], "first": [7, 12, 99, 100, 198, 201, 205, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 226, 227, 229, 231], "second": [7, 11, 12, 139, 178, 201, 205, 209, 226, 229], "know": [7, 9, 11, 124, 205, 209, 210, 214], "behavior": [7, 12, 98, 205, 206, 207, 210, 214], "noth": [7, 211, 227], "being": [7, 24, 32, 41, 97, 100, 107, 127, 140, 141, 148, 167, 168, 205, 207, 208, 209, 210, 214, 223], "test_group": [7, 17, 18, 32, 41, 133, 135, 137, 145, 149, 155, 160, 176, 179, 205, 207, 208, 214], "fals": [7, 11, 12, 15, 16, 19, 32, 34, 42, 48, 54, 56, 97, 98, 100, 105, 107, 109, 124, 126, 181, 183, 197, 205, 207, 208, 214, 215, 217, 219, 221, 226], "happen": [7, 10, 12, 14, 107, 205, 207, 214, 227], "class": [7, 9, 11, 12, 14, 16, 17, 19, 27, 32, 37, 41, 45, 50, 57, 58, 65, 71, 86, 110, 124, 125, 126, 132, 133, 135, 137, 139, 142, 145, 147, 149, 152, 155, 157, 159, 160, 163, 166, 169, 171, 173, 174, 175, 176, 178, 179, 181, 183, 195, 198, 199, 201, 202, 205, 207, 208, 214], "larg": [7, 15, 205, 207, 214, 216], "those": [7, 12, 15, 41, 106, 107, 121, 207, 208, 209, 210, 213, 214, 227, 230, 233], "configpars": [7, 82, 83, 208], "getinteg": 7, "getfloat": [7, 10, 12, 14, 205, 214], "getboolean": [7, 205, 214], "getlist": [7, 214], "comma": [7, 227], "integ": [7, 11], "boolean": [7, 109, 190], "etc": [7, 12, 102, 105, 202, 205, 207, 226], "getexpress": 7, "tupl": 7, "rang": [7, 109, 214, 227], "numpi": [7, 11, 59, 66, 67, 73, 108, 124, 131, 185, 186, 205, 214], "linspac": [7, 16, 199, 227], "arang": 7, "arrai": [7, 59, 66, 67, 73, 108, 124, 185, 186, 188, 189, 190, 191, 214], "One": [7, 11, 214, 231, 233], "advantag": [7, 12, 121, 209, 214, 220], "track": [7, 19, 205, 207, 210], "associ": [7, 11, 12, 16, 187, 193, 194, 198, 207, 208, 210, 212], "belong": [8, 10, 12, 19, 29, 32, 39, 41, 45, 58, 65, 71, 86, 126, 132, 133, 135, 137, 139, 142, 145, 147, 149, 152, 155, 157, 159, 160, 163, 166, 169, 171, 173, 175, 176, 178, 179, 181, 183, 202, 205, 207, 208, 209, 214, 233], "command": [8, 13, 30, 32, 38, 82, 83, 85, 93, 205, 209, 210, 212, 213, 214, 217, 220, 221, 231], "while": [8, 14, 16, 197, 198, 205, 208, 211, 212, 214], "meant": [8, 209, 215], "simplifi": 8, "verifi": [8, 206, 215], "io": [8, 205, 207, 209, 213, 214, 215, 224], "remap": [8, 16, 171, 199, 213, 227, 230], "visual": [8, 11, 14, 163, 199, 205, 207, 208, 212, 213, 227, 230], "lot": [9, 124, 205, 209, 214], "o": [9, 10, 101, 103, 116, 209, 210, 214, 215, 231], "relat": [9, 11, 12, 124, 195, 198, 201, 205, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 229, 230, 231], "handl": [9, 10, 207, 210, 214, 220], "intern": [9, 19, 41, 205, 210, 211], "lower": [9, 207, 214, 226], "directli": [9, 11, 12, 14, 32, 203, 205, 209, 212, 213, 214, 217], "aren": [9, 32, 33, 205, 209, 210, 214, 233], "readm": [9, 207], "importlib": [9, 207], "resourc": [9, 12, 29, 36, 39, 52, 81, 82, 83, 127, 139, 140, 167, 178, 198, 205, 207, 214], "import": [9, 10, 11, 12, 14, 16, 202, 205, 207, 208, 209, 210, 212, 214], "files_for_e3sm": [9, 207, 215], "str": [9, 12, 17, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 41, 45, 48, 51, 53, 54, 58, 65, 71, 75, 77, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 126, 131, 133, 139, 147, 164, 166, 169, 171, 173, 178, 186, 205, 207, 208, 214], "did": [9, 15, 107, 214], "add_input_fil": [9, 14, 33, 205, 207, 214], "collect": [9, 45, 89, 125, 202, 204, 212, 214], "though": [9, 32, 207, 209, 214], "whenev": [9, 205, 214], "flexibl": [9, 199, 207, 210, 214], "care": [9, 11, 205, 208, 210, 214], "No": [9, 213], "step_dir": 9, "database_root": [9, 205, 215, 216, 217, 218, 219, 220, 221, 231], "download_path": 9, "join": [9, 214], "bathymetry_databas": [9, 205, 215], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 190, 205, 208, 214, 223, 226, 227, 229, 230, 232], "url": [9, 34, 51, 205, 211, 215], "web": [9, 205, 215], "anl": [9, 205, 215], "gov": [9, 205, 211, 215, 217, 221], "mpas_standalonedata": [9, 215, 220], "dest_path": [9, 51], "remot": [9, 34, 210], "bathymetri": [9, 205, 215], "strategi": 10, "stderr": [10, 32, 41, 205], "loggingcontext": 10, "check_cal": [10, 205], "most": [10, 38, 121, 195, 202, 205, 208, 209, 210, 212, 214, 215, 220, 221, 223, 224, 232], "won": [10, 209, 214, 215], "logger": [10, 32, 41, 57, 83, 205, 207, 214], "full": [10, 32, 82, 98, 188, 189, 198, 199, 205, 207, 210, 213, 214, 220, 223, 225, 226, 227, 229, 230, 231], "although": 10, "captur": 10, "insid": [10, 205, 209], "good": [10, 32, 205, 210, 214], "idea": [10, 214], "explicit": [10, 209], "go": [10, 205, 207, 208, 209, 210, 214, 221], "even": [10, 11, 12, 15, 34, 50, 121, 205, 209, 210, 214, 215, 220, 231], "subprocess": [10, 32, 82, 83, 97, 205, 209, 211], "produc": [10, 12, 14, 16, 32, 33, 35, 48, 124, 135, 145, 155, 198, 199, 201, 205, 209, 210, 214, 231], "otherwis": [10, 15, 205, 207, 214, 216, 217, 218, 219, 220, 221, 226], "intent": 10, "desir": [10, 11, 12, 15, 16, 107, 124, 205, 206, 214, 215, 231], "trick": [10, 205], "direct": [10, 11, 12, 70, 198, 207, 214, 221, 226], "snippet": [10, 214], "dome": [10, 57, 205, 207, 208, 212, 231, 232], "setup_mesh": [10, 205], "setupmesh": [10, 205, 207], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 57, 121, 202, 208, 209, 210, 212, 214, 215], "mpas_grid": [10, 205], "landice_grid": [10, 205, 214], "l": [10, 107, 214, 221], "sever": [10, 205, 207, 208, 209, 210, 212, 213, 214, 230, 231, 233], "global": [11, 14, 45, 90, 96, 159, 160, 199, 205, 206, 208, 209, 212, 213, 214, 215, 221, 227, 230, 231, 232], "quasiuniformsphericalmeshstep": [11, 199], "icosahedralmeshstep": [11, 199], "jigsaw": [11, 58, 62, 64, 65, 67, 69, 71, 160, 163, 205], "complex": [11, 15, 66, 207, 209, 214], "build_cell_width_lat_lon": [11, 65], "opt": [11, 71], "make_jigsaw_mesh": [11, 65], "icosahedr": [11, 58, 60, 160, 163, 227], "significantli": [11, 223], "smooth": 11, "cell": [11, 12, 16, 58, 59, 60, 61, 65, 66, 67, 70, 73, 88, 95, 124, 126, 127, 140, 164, 167, 187, 188, 189, 190, 193, 194, 198, 205, 207, 208, 223, 226, 227, 229, 230], "quasi": [11, 65, 215, 227, 230], "hand": [11, 209], "restrict": [11, 214, 230], "resolut": [11, 12, 14, 58, 61, 65, 66, 70, 87, 91, 94, 133, 135, 137, 139, 142, 145, 147, 149, 152, 155, 160, 163, 164, 166, 176, 178, 179, 181, 198, 199, 201, 203, 205, 207, 208, 215, 226, 227, 229, 230, 232], "subdivis": [11, 58, 59, 60, 61, 62], "icosahedron": [11, 59, 60, 61, 62], "tabl": [11, 210, 220, 231], "approxim": [11, 58, 60, 61, 65, 124, 127, 140, 167, 210, 214], "width": [11, 58, 59, 60, 65, 66, 67, 73, 214, 226], "km": [11, 58, 59, 60, 61, 65, 66, 67, 70, 73, 133, 135, 137, 139, 142, 145, 147, 149, 152, 155, 166, 178, 179, 181, 198, 199, 214, 215, 226, 227, 229, 230, 232], "5": [11, 60, 124, 149, 198, 199, 205, 206, 207, 209, 211, 214, 215, 226, 227, 230, 231], "240": [11, 60, 199, 215, 227], "6": [11, 60, 205, 214, 224, 226, 229, 231], "120": [11, 60, 206, 227], "7": [11, 60, 214, 221, 227, 231], "60": [11, 12, 60, 199, 223, 227], "8": [11, 60, 198, 207, 210, 214, 215, 226, 227, 231], "30": [11, 60, 208, 214, 221, 226, 227, 229, 230], "9": [11, 16, 60, 199, 214, 227, 231], "15": [11, 12, 60, 198, 214, 226, 227, 229, 230, 231], "10": [11, 15, 60, 195, 198, 207, 208, 214, 215, 220, 223, 226, 229, 232], "11": [11, 60, 214, 231], "3": [11, 60, 198, 205, 206, 208, 210, 211, 214, 215, 220, 221, 223, 226, 227, 230, 231], "12": [11, 60, 214, 217], "13": [11, 60, 214, 226], "94": [11, 60], "spherical_mesh": [11, 66], "cell_width": [11, 58, 59, 60, 61, 65, 66, 67, 73], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 58, 65, 205, 214], "plot": [11, 73, 108, 109, 124, 152, 157, 171, 183, 198, 199, 227, 232], "plot_cell_width": 11, "cell_width_filenam": [11, 73], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 14, 59, 65, 66, 67, 73, 87, 89, 91, 94, 108, 171, 199, 215, 227], "lon": [11, 14, 59, 65, 66, 67, 73, 87, 89, 91, 94, 108, 171, 199, 215, 227], "sphere": [11, 199, 227], "vtk_lat_lon": 11, "far": [11, 187, 193, 194, 209, 214], "But": [11, 121, 205, 208, 209, 210, 214, 215, 220], "hexagon": [11, 70, 214], "planar_hex": [11, 70, 198, 201, 205, 214], "make_planar_hex_mesh": [11, 70, 198, 201, 205, 214], "x": [11, 16, 59, 66, 67, 70, 73, 90, 96, 109, 131, 205, 207, 214, 226, 229], "y": [11, 12, 16, 70, 90, 96, 109, 198, 205, 207, 214, 221, 226], "nx": [11, 70, 205, 208, 214], "ny": [11, 70, 205, 208, 214], "dc": [11, 205, 208, 214], "distanc": [11, 70, 214, 226], "adjac": [11, 223], "center": [11, 16, 70, 208, 214, 223, 226], "admittedli": 11, "oddli": 11, "period": [11, 197, 198, 205, 214, 226], "nonperiodic_x": [11, 205, 214], "nonperiodic_i": [11, 205, 214], "consider": [11, 187, 193, 194, 197], "compute_planar_hex_nx_ni": [11, 214], "lx": [11, 70, 214, 226, 229], "ly": [11, 70, 214, 226, 229], "explan": 11, "subtleti": 11, "account": [11, 70, 210, 214, 216, 217, 219, 220, 221, 231], "behav": 11, "stagger": [11, 70], "strictli": [11, 209, 214], "physic": [11, 70, 214], "howev": [11, 205, 206, 207, 210, 214], "np": [11, 16, 199, 214, 227], "sqrt": 11, "domain": [11, 19, 26, 70, 109, 124, 126, 131, 197, 208, 214, 226, 227, 229, 230, 232], "extra": [11, 210], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 208, 214], "max": [11, 124, 205, 214, 227], "int": [11, 12, 19, 20, 29, 32, 39, 54, 58, 59, 60, 61, 62, 70, 82, 83, 86, 109, 126, 127, 139, 140, 160, 163, 164, 166, 167, 178, 205, 214, 229], "ds_mesh": [11, 16, 109, 214], "creation": [11, 205, 215], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 19, 29, 32, 39, 82, 83, 126, 205, 208, 209, 214], "distant": 11, "futur": [11, 38, 205, 209, 212, 213, 214, 215, 229, 231, 232], "descend": [12, 14, 124, 202, 205, 207, 208, 209, 214], "modelstep": [12, 124, 205, 207, 214], "update_pio": [12, 19, 126], "librari": [12, 117, 121, 210, 214, 216, 217, 218, 219, 220, 221, 231], "make_graph": [12, 19, 126], "mpi": [12, 14, 86, 117, 120, 121, 126, 128, 130, 198, 205, 210, 211, 213, 214, 216, 217, 218, 219, 221, 231], "construct": [12, 125, 185, 187, 188, 189, 193, 194, 197, 201, 202, 207, 208, 214, 226], "non": [12, 15, 197, 205, 214, 231], "At": [12, 32, 41, 203, 204, 214], "set_model_resourc": 12, "thread": [12, 19, 29, 32, 38, 39, 41, 83, 126, 139, 155, 178, 198, 205, 206, 212, 214, 215, 217, 221, 226], "openmp_thread": [12, 19, 29, 32, 39, 83, 126, 139, 178, 205, 207, 214], "definit": [12, 214], "prefix": [12, 34, 210, 215], "end": [12, 198, 205, 207, 209, 210, 212, 214, 217, 226, 227, 229], "yml": 12, "reason": [12, 14, 38, 205, 209, 214, 233], "add_namelist_fil": [12, 19, 124, 205, 207], "add_yaml_fil": [12, 19, 205, 207, 214], "add_model_config_opt": [12, 19, 205, 207, 214], "add_streams_fil": [12, 19, 124, 205, 207], "themselv": [12, 209, 213], "question": [12, 205, 215], "constructor": [12, 198, 202, 208, 214], "simpli": [12, 50, 137, 176, 179, 202, 205, 207, 208, 210, 214, 223, 231, 233], "safe": [12, 15, 205, 210, 226], "never": [12, 212], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": [12, 214], "config_run_dur": [12, 207, 214], "0024_00": 12, "00": [12, 15, 207, 214, 221, 231], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 41, 135, 212, 214], "config_block_decomp_file_prefix": [12, 214], "time_integr": [12, 214], "config_time_integr": 12, "rk4": [12, 209, 233], "filename_templ": [12, 214], "restart": [12, 41, 145, 147, 198, 201, 206, 209, 212, 214, 226], "output_interv": [12, 214], "0030_00": 12, "clobber_mod": [12, 214], "truncat": [12, 214], "reference_tim": 12, "0001": [12, 214], "01": [12, 214, 229], "01_00": [12, 214], "tracer": [12, 16, 198, 199, 201, 214, 227, 229], "xtime": [12, 214], "normalveloc": [12, 15, 16, 136, 138, 146, 151, 156, 177, 197, 198, 201, 205, 214, 229], "layerthick": [12, 15, 124, 134, 136, 138, 146, 151, 156, 177, 187, 191, 192, 193, 194, 198, 201, 205, 207, 214], "refzmid": [12, 187, 193, 194, 205, 214], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 15, 214], "clariti": [12, 205], "guarante": [12, 195, 210], "uniqu": [12, 207, 214], "global_converg": [12, 195, 200, 214, 224, 225, 228], "cosine_bel": [12, 214, 230], "substitut": 12, "config_write_output_on_startup": [12, 214], "0000_00": [12, 214], "config_use_mom_del2": [12, 214], "config_implicit_bottom_drag_coeff": [12, 214], "0e": [12, 229], "config_use_cvmix_background": 12, "config_cvmix_background_diffus": [12, 214], "config_cvmix_background_viscos": [12, 214], "worri": 12, "sometim": [12, 187, 193, 194, 205, 207, 212, 214], "easier": [12, 205, 209, 210, 215, 231, 233], "togeth": [12, 212, 214, 233], "seem": [12, 214, 217, 221], "overkil": 12, "reli": [12, 205, 214], "differ": [12, 14, 15, 50, 62, 67, 107, 121, 124, 139, 149, 195, 198, 202, 203, 205, 206, 207, 208, 209, 212, 214, 215, 217, 221, 226, 227, 230], "along": [12, 16, 198, 205, 207, 213, 214], "could": [12, 14, 16, 199, 205, 206, 207, 209, 210, 214, 227], "nu": [12, 139, 152, 178, 198, 205, 207, 214], "viscos": [12, 139, 149, 152, 198, 205, 207, 209, 214, 226], "hmix": 12, "config_mom_del2": [12, 198, 205, 214], "bool": [12, 19, 20, 24, 32, 34, 41, 42, 48, 51, 53, 54, 97, 98, 99, 100, 105, 107, 108, 112, 126, 127, 139, 140, 141, 148, 160, 163, 167, 168, 178, 214], "cannot": [12, 15], "known": [12, 32, 33, 199, 205, 214], "beforehand": 12, "particularli": [12, 211, 214, 230], "openmp": [12, 19, 29, 32, 39, 83, 117, 119, 120, 126, 139, 178, 205, 214, 216, 217, 218, 219, 221], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 209, 212, 214, 226, 231], "complic": [12, 208, 209, 210, 214], "xml": [12, 101, 103, 104, 116, 212], "slightli": [12, 15, 210], "sophist": 12, "immutable_stream": [12, 214], "var_struct": 12, "var": [12, 102, 214], "var_arrai": 12, "tag": [12, 213], "taken": [12, 19, 126, 199, 205, 214, 221, 231], "past": 12, "experi": [12, 121, 209, 223], "shown": [12, 203, 207, 229], "featur": [12, 209, 210, 212, 214, 215, 226, 229], "difficult": [12, 121, 220], "synchron": [12, 213], "equival": [12, 210, 214, 216], "try": [12, 53, 209, 210, 211, 214, 215, 217, 221, 231], "template_replac": [12, 22, 23], "treat": [12, 206, 209], "jinja2": [12, 22, 23, 101], "render": [12, 22, 23, 101], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 215], "qu240dynamicadjust": 12, "seri": [12, 124, 152, 157, 183, 199, 214, 225], "dynam": [12, 126, 159, 195, 201, 215, 226, 227, 229, 230], "adjust": [12, 124, 159, 195, 215], "durat": [12, 198, 201, 206, 214], "interv": 12, "spin": 12, "reus": [12, 205, 209, 210, 214, 215, 231], "qualit": [12, 15], "affect": [12, 15, 205, 210, 214], "update_streams_at_runtim": 12, "fairli": [12, 207, 209, 210, 214], "hour": [12, 206, 217, 221, 231], "turn": [12, 32, 49, 205, 211, 214, 229], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 223, 226, 229], "minut": [12, 198, 206, 226, 233], "dai": [12, 149, 198, 199, 201, 207, 214, 226, 227, 229], "03d": 12, "_": [12, 86, 205, 207, 210, 214, 229], "02d": 12, "forgotten": 12, "broken": [12, 205, 209], "immedi": [12, 57, 210, 214], "miss": [12, 15, 205, 214, 215], "detect": [12, 16, 215, 216, 218, 219, 220, 231], "gpmeti": [12, 215], "divid": [12, 223], "partition_graph": [12, 19, 126], "circumst": [12, 15, 32, 33, 205, 214], "wast": 12, "manual": [12, 15, 41, 42, 205, 207, 232], "update_namelist_pio": 12, "node": [12, 19, 31, 32, 36, 39, 80, 81, 82, 83, 121, 126, 205, 206, 209, 210, 214, 215, 216, 217, 218, 219, 220, 221, 231], "v1": [12, 223], "better": [12, 14, 121, 231], "v2": [12, 215, 223], "littl": [12, 209, 210, 213, 214], "feel": [12, 205, 214], "runtime_setup": [12, 14, 29, 39, 198, 207], "onc": [12, 198, 210, 214, 215, 227, 231], "yourself": [12, 214, 220], "fact": [12, 32], "culler": 12, "cull": [12, 198, 205, 214], "model_step": [12, 205], "make_graph_fil": [12, 205], "field": [12, 15, 73, 75, 109, 171, 187, 193, 194, 197, 198, 201, 214, 226, 227], "weight": [12, 14, 75, 187, 193, 194, 214, 223], "weight_field": [12, 75], "frequent": [14, 195], "observ": [14, 213], "dataset": [14, 109, 187, 193, 194, 205, 214], "region": [14, 16, 213, 215], "pyremap": [14, 92], "interpol": [14, 86, 199, 215], "hood": 14, "esmf_regridweightgen": 14, "best": [14, 205, 210], "mappingfilestep": [14, 16], "woa": 14, "2023": 14, "__init__": [14, 17, 19, 32, 41, 45, 50, 57, 58, 65, 71, 86, 110, 125, 126, 132, 133, 135, 137, 139, 142, 145, 147, 149, 152, 155, 157, 159, 160, 163, 166, 169, 171, 173, 175, 176, 178, 179, 181, 183, 202, 205, 207, 208, 209, 212, 214], "mytestcas": 14, "__int__": 14, "make_map": 14, "64": [14, 223], "bilinear": [14, 86, 199, 227, 230], "filenam": [14, 34, 35, 79, 87, 88, 89, 90, 94, 95, 96, 107, 111, 113, 205, 210, 214], "woa23_decav_0": 14, "25_extrap": 14, "20230414": 14, "initial_condition_databas": [14, 215], "destin": [14, 86, 87, 88, 89, 90, 91, 92], "src_from_lon_lat": 14, "lon_var": [14, 87, 89, 94], "lat_var": [14, 87, 89, 94], "dst_from_mpa": 14, "mesh_nam": [14, 87, 88, 89, 90, 91, 94, 95, 96, 164, 166, 169, 171, 173], "qu60": 14, "subclass": [14, 62, 65, 66, 67, 72, 124, 214], "src_": 14, "dst_": 14, "pick": 14, "vizmap": [14, 171, 199], "super": [14, 202, 205, 207, 208, 209, 214], "128": [14, 206, 217, 218, 221], "cosine_bell_viz": [14, 16, 199, 227, 230], "dlon": [14, 91, 199, 227, 230], "dlat": [14, 91, 199, 227, 230], "remap_method": [14, 199, 227, 230], "src_from_mpa": 14, "dst_global_lon_lat": 14, "With": [14, 210], "approach": [14, 205, 208, 209, 210, 211, 214, 223], "perhap": [14, 16, 35, 208], "cover": [14, 214], "nearli": [14, 205, 212, 213, 214], "situat": [14, 25, 129, 214, 231], "workflow": [14, 205, 210], "critic": [15, 214], "compare_vari": [15, 207, 214], "filename1": [15, 107, 207, 214], "filename2": [15, 107, 214], "simpl": [15, 209, 214, 231], "temperatur": [15, 134, 136, 138, 146, 151, 156, 177, 180, 197, 198, 201, 205, 207, 214, 226, 227, 229, 230], "salin": [15, 134, 136, 138, 146, 151, 156, 177, 180, 197, 198, 201, 205, 207, 214, 226, 227, 229, 230], "prognost": [15, 226], "4proc": [15, 136, 214, 226], "8proc": [15, 136, 214, 226], "alter": [15, 188, 189, 205, 207, 213, 214, 223, 226, 227, 229, 230], "skip_if_step_not_run": [15, 107, 207], "possibli": [15, 205, 210, 214], "failur": 15, "valueerror": [15, 80, 207, 208, 209], "quiet": [15, 98, 107, 112], "report": 15, "threshold": [15, 227], "l1": [15, 107], "00000000000000e": 15, "l2": [15, 107], "l_infin": 15, "linf": [15, 107], "home": [15, 210, 214, 215, 217, 220, 221], "xylar": [15, 214, 215, 220], "test_nightly_latest": 15, "10km": [15, 198, 207, 208, 214, 226, 231, 232, 233], "threads_test": [15, 214, 231, 233], "1thread": [15, 156, 198, 226], "2thread": [15, 156, 226], "test_20210616": 15, "further_valid": 15, "add_output_fil": [15, 33, 205, 207, 214], "disabl": [15, 16, 197, 227, 232], "check_output": [15, 107], "zero": [15, 188, 189, 190, 191, 192, 197, 198, 201, 214, 227, 229], "l1_norm": [15, 107], "l2_norm": [15, 107], "linf_norm": [15, 107], "nonzero": [15, 107], "easiest": [15, 210], "solut": [15, 120, 199, 206, 211, 214], "clobber": 15, "error": [15, 32, 41, 124, 164, 199, 205, 210, 213, 214], "judgment": 15, "enough": [15, 198, 205, 209, 214], "problem": [15, 205, 210, 211, 214], "compare_tim": 15, "integr": [15, 149, 198, 207, 209, 214, 226, 227, 230], "rundir1": [15, 106], "92264": 15, "82317": 15, "percent": 15, "781019682649793": 15, "speedup": 15, "1208377370409515": 15, "aspect": [16, 214], "often": [16, 32, 205, 206, 207, 208, 209, 210, 212, 214, 215, 232, 233], "analysi": [16, 124, 198, 207, 209, 212, 213, 215, 227, 232], "routin": 16, "viz": 16, "plot_horiz_field": [16, 214], "patch": [16, 109, 214], "style": [16, 124, 213, 214], "edg": [16, 88, 95, 109, 197, 214], "polygon": 16, "character": 16, "accordingli": [16, 84], "d": [16, 109, 187, 193, 194, 197, 205, 214, 229], "final_normalveloc": [16, 214], "t_index": [16, 109, 214], "vmin": [16, 109, 199, 214, 227], "max_veloc": [16, 214], "vmax": [16, 109, 199, 214, 227], "cmap": [16, 109, 214], "cmo": [16, 214], "balanc": [16, 214], "show_patch_edg": [16, 109, 214], "globe": [16, 199, 227], "plot_glob": 16, "plot_land": [16, 108], "contin": [16, 108], "overlain": 16, "usag": [16, 215, 217, 221], "cmocean": [16, 214], "noqa": [16, 57, 163, 166, 169, 214], "f401": [16, 214], "xr": [16, 214], "open_dataset": [16, 205, 214], "tracer1": 16, "isel": 16, "nvertlevel": [16, 109, 187, 193, 194, 205, 214, 223], "out_filenam": [16, 104, 108, 186], "colormap_sect": [16, 108], "titl": [16, 108, 109], "colormap": [16, 108, 109, 199, 214, 227], "cosin": [16, 163, 166, 169, 171, 173, 199, 227, 230], "bell": [16, 163, 166, 169, 171, 173, 199, 227, 230], "converg": [16, 199, 203, 206, 213, 214, 227, 230], "colormap_nam": [16, 108, 199, 227], "viridi": [16, 199, 214, 227], "norm": [16, 107, 108, 199, 227], "norm_typ": [16, 108, 199, 227], "linear": [16, 108, 109, 199, 214, 226, 227], "norm_arg": [16, 108, 199, 227], "colorbar": [16, 108, 109, 199, 227], "tick": [16, 108, 199, 227], "mark": [16, 199, 210, 227], "ll": [16, 199, 209, 214, 221, 227], "colorbar_tick": [16, 108, 199, 227], "matplotlib": [16, 214], "standard": [16, 209, 210, 214, 217, 231], "symlog": [16, 108], "symmetr": 16, "central": [16, 227], "logarithm": [16, 109], "color": [16, 109], "normal": [16, 197, 205, 206, 210, 214, 220], "symlognorm": 16, "lognorm": 16, "hous": 17, "seaic": [17, 34, 205, 231], "dict": [17, 20, 22, 23, 25, 32, 36, 41, 45, 77, 78, 81, 85, 86, 100, 101, 108, 110, 111, 112, 129, 207, 214], "kei": [17, 41, 45, 100, 207], "cach": [17, 19, 32, 34, 99, 100, 126, 213, 215, 220, 225, 231, 233], "testgroup": [18, 32, 41, 208, 209, 214], "max_memori": [19, 29, 32, 39, 126], "mesh_filenam": [19, 75, 126], "graph_filenam": [19, 75, 126], "graph": [19, 26, 28, 38, 75, 126, 198, 205, 214, 215], "make_yaml": 19, "pio": [19, 28, 31, 126, 198], "stride": [19, 31, 126], "consist": [19, 31, 126, 195, 210, 214, 215, 226], "partit": [19, 28, 38, 75, 126, 198, 205, 215, 216, 217, 218, 219, 221, 231], "model_config_data": 19, "streams_data": 19, "ideal": [19, 29, 32, 39, 82, 83, 86, 124, 126, 139, 178, 205, 208, 209, 213, 214, 215, 232], "accommod": [19, 29, 32, 39, 82, 83, 126], "fewer": [19, 29, 32, 39, 82, 83, 126, 139, 178, 205, 214, 231], "amount": [19, 29, 32, 39, 126, 205, 222, 229], "memori": [19, 29, 32, 39, 126, 205, 215], "mb": [19, 29, 32, 39, 126, 215], "placehold": [19, 29, 32, 39, 126, 205, 231], "at_setup": [24, 124, 127, 140, 141, 148, 167, 168, 214], "overridden": [25, 129, 205, 207, 214], "diverg": [25, 129], "counterpart": [25, 124, 129], "nest": [25, 110, 112, 129], "graph_fil": 26, "parent": [27, 202, 205, 208], "done": [29, 39, 205, 210, 214, 231], "run_as_subprocess": [32, 205], "smallest": [32, 205, 212, 223, 232], "unit": [32, 87, 91, 94, 205, 212, 226, 232], "term": [32, 212, 214], "necessarili": [32, 34, 212], "input_data": 32, "until": [32, 33, 205, 207, 231], "finish": [32, 33, 72, 214], "suffici": 32, "establish": [32, 33], "is_depend": 32, "combin": [32, 34, 41, 50, 85, 110, 205, 206, 207, 211, 214, 215, 231], "machine_info": 32, "machineinfo": 32, "config_filenam": [32, 41, 205, 207], "base_work_dir": [32, 41, 205, 207], "log_filenam": [32, 41, 205], "redirect": [32, 205], "extern": [32, 195, 202, 205, 224], "access": [33, 207, 209, 210, 214, 216, 220, 221], "database_compon": [34, 205], "work_dir_target": [34, 205], "come": [34, 205, 210, 214, 216, 217, 218, 219, 220, 221, 224], "root": [34, 164, 195, 199, 202, 205, 209, 210, 212, 215, 216, 217, 218, 219, 220, 221, 223, 231], "suffix": [34, 100, 205], "_database_root": 34, "append": 34, "available_resourc": [36, 81], "constrain": [36, 127, 140, 167, 198, 205, 214], "cores_per_nod": [36, 81, 84, 215, 216, 217, 218, 219, 220, 221, 231], "everi": [37, 174, 198, 205, 207, 209, 211, 212, 214, 226, 229], "child": [37, 174, 202, 205, 207, 209], "serial": [38, 205, 207, 213, 214, 231], "subtask": 39, "stdout_logg": 41, "goe": [41, 205, 214], "regardless": 41, "new_step_log_fil": 41, "whole": [41, 131, 207, 209, 214, 231], "statu": 41, "run_by_default": [42, 205, 207], "assum": [43, 101, 111, 207, 210, 214, 221, 226], "prior": [43, 205, 207], "greenland": [45, 208, 212, 213, 232], "eismint2": 45, "step_path": 48, "variant": [48, 198, 206, 208, 209, 210, 214, 220, 223, 226, 227], "uncach": 48, "datestamp": 48, "yymmdd": [48, 215], "dry": [48, 206], "meta": 50, "empti": [50, 205, 209, 210, 212, 214], "link_nam": 53, "overwrit": 53, "stackoverflow": [53, 214], "55742015": 53, "7728169": [53, 214], "symbol": [53, 205], "fileexistserror": 53, "unless": [53, 98, 210], "isadirectoryerror": 53, "decomposition_test": [57, 208, 231], "decompositiontest": [57, 208], "e501": [57, 163, 166, 169, 214], "turquois": [57, 217], "usr": [57, 217, 231], "climat": [57, 216, 217, 218, 220, 231], "mhoffman": 57, "latitud": [59, 66, 87, 89, 91, 94, 108, 199, 227, 230], "longitud": [59, 66, 67, 73, 87, 89, 91, 94, 108, 199, 227, 230], "ndarrai": [59, 66, 67, 73, 108, 131, 185, 186, 214], "degre": [59, 66, 67, 73, 91, 215, 226], "length": [59, 66, 67, 73], "180": [59, 66, 67, 73, 227], "90": [59, 66, 67, 73, 205, 227], "static": [60, 61], "rule": 60, "thumb": 60, "achiev": [61, 206], "close": [61, 213, 227], "uniform": [65, 70, 166, 198, 199, 208, 214, 215, 226, 227, 229, 230], "natur": 70, "jigsawpi": [71, 205], "jigsaw_jig_t": 71, "meti": 75, "defaults_filenam": 76, "state": [80, 131, 197, 198, 199, 201, 205, 206, 214, 227], "queu": 80, "slurm": [80, 84, 205, 213, 215, 216, 217, 218, 219, 221, 231], "interact": [80, 214, 217, 220, 221, 231], "batch": [80, 217], "job": [80, 121, 210, 213, 214, 216, 217, 218, 219, 221], "slurm_job_id": 80, "total": [81, 205, 206, 209, 214, 215, 217, 231], "substep": [82, 83], "command_line_arg": 82, "cpus_per_nod": 84, "map_filenam": 86, "src_grid_info": 86, "dst_grid_info": 86, "neareststod": [86, 199, 227, 230], "conserv": [86, 199, 227, 230], "map_": 86, "source_typ": 86, "dest_typ": 86, "1d": [87, 91, 94, 108, 124, 185, 186, 187, 188, 189, 190, 191, 193, 194], "2d": [87, 91, 94, 108], "5x0": [87, 91, 94], "5degre": [87, 91, 94], "coordin": [87, 89, 90, 94, 96, 108, 109, 187, 193, 194, 222, 224, 226, 227, 229, 230], "mesh_typ": [88, 95, 205, 207, 208], "vertex": [88, 95], "x_var": [90, 96], "y_var": [90, 96], "proj_attr": [90, 96], "proj_str": [90, 96], "proj": [90, 96], "remapp": [92, 93], "remap_fil": 92, "step_is_subprocess": 97, "is_test_cas": 98, "steps_to_skip": 98, "progress": 98, "cached_step": 99, "copy_execut": [99, 100, 105, 231], "serv": [99, 100, 105, 208, 214], "_all": [99, 100], "streams_filenam": 101, "lxml": [101, 103, 116], "etre": [101, 103, 116], "new_child": 102, "children": 102, "sub": [102, 214], "new_tre": 103, "rundir2": 106, "infin": 107, "toler": 107, "exclud": [107, 231], "data_arrai": 108, "colorbar_label": 108, "subtitl": 108, "field_nam": 109, "out_file_nam": 109, "z_index": 109, "cmap_set_und": 109, "cmap_scal": 109, "horizont": [109, 124, 179, 197, 198, 201, 226, 229], "planar": [109, 124, 197, 214, 229, 230], "depth": [109, 124, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 214, 215, 223, 226, 227, 229, 230], "slice": 109, "fieldnam": 109, "present": [109, 210, 214], "visibl": 109, "ax": 109, "classmethod": 111, "jinja": 111, "namelist_templ": 115, "polarisyaml": [115, 116], "processed_registry_filenam": 116, "registri": [116, 197], "steam": 116, "load_dev_polaris_0": [117, 118, 119, 120, 121, 122, 214], "alpha": [117, 118, 119, 120, 121, 122, 214], "1_anvil_intel_impi": [117, 121], "sh": [117, 118, 119, 120, 121, 122, 210, 211, 214, 216, 217, 218, 219, 221, 231], "openmpi": [117, 121, 210, 213, 216, 218, 219, 231], "mvapich": [117, 121, 216], "impi": [117, 121, 216, 219], "ifort": [117, 119, 121, 214, 216, 218], "ve": [117, 118, 119, 120, 122, 205, 210, 214], "1_anvil_gnu_openmpi": 117, "gfortran": [117, 119, 120, 121, 210, 216, 218], "load": [118, 121, 122, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221], "1_chicoma": 118, "cpu_gnu_mpich": [118, 122], "crai": [118, 121, 122, 217, 221], "1_chrysalis_intel_openmpi": 119, "1_chrysalis_gnu_openmpi": 119, "yet": [120, 124, 205, 209, 214], "again": [120, 195, 205, 210, 211, 231], "soon": [120, 214, 231], "1_compy_intel_impi": 120, "1_compy_gnu_openmpi": 120, "attempt": [121, 213, 220], "particular": [121, 208, 210, 213, 217, 220, 231], "activ": [121, 220, 221, 231], "load_polaris_env": [121, 210, 214, 231], "were": [121, 139, 178, 205, 209, 212, 214, 215, 219, 223], "right": [121, 124, 207, 210, 214, 215, 223, 227, 231], "therefor": [121, 205, 212, 214], "gnu": [121, 210, 219, 220, 231], "lib": 121, "intel": [121, 220], "chicoma": [121, 220, 231], "mpich": [121, 210, 213, 217, 221, 231], "compi": [121, 219, 231], "pm": [121, 221, 231], "compymcnodefac": [121, 220], "perlmutt": [121, 217, 220, 231], "pretti": [121, 205, 209, 214, 215], "forg": [121, 213, 231], "linux": [121, 210, 220], "configure_polaris_env": [121, 210, 211, 214], "conda_path": [121, 210], "osx": [121, 220], "clang": [121, 210], "had": 121, "1_": 121, "1_pm": 122, "ever": [124, 209], "expand": [124, 223], "oceanmodelstep": [124, 214], "decid": [124, 214], "veri": [124, 202, 205, 209, 210, 214, 229], "earli": [124, 224, 231], "stage": [124, 197, 205, 207, 210, 224, 231], "map_yaml_to_namelist": 124, "count": [124, 206], "heurist": 124, "exact": [124, 199, 209], "algorithm": [124, 139, 178, 198, 205, 214], "200": [124, 207, 214, 226, 229], "round": [124, 227], "cell_count": [124, 127, 140, 167, 214], "goal_cells_per_cor": [124, 214, 227, 230], "pinch": 124, "2000": [124, 208, 214], "max_cells_per_cor": [124, 214, 227, 230], "seciton": 124, "control": [124, 199, 205, 215, 226, 227, 229, 231], "scale": [124, 226, 231], "tri": [124, 209], "apport": 124, "precis": [124, 205, 214], "caviti": [124, 209, 214, 215, 223], "frazil": 124, "flux": [124, 197, 229], "grid_1d": 124, "generate_1d_grid": 124, "vertical_grid": [124, 185, 187, 193, 194, 208, 214, 215, 223, 226, 227, 229, 230], "z": [124, 188, 189, 190, 191, 192, 193, 194, 214, 226, 227, 229, 230, 233], "star": [124, 192, 194, 214, 226, 227, 229, 230, 233], "init_vertical_coord": [124, 214], "minlevelcel": [124, 187, 189, 190, 191, 192, 193, 194, 214], "maxlevelcel": [124, 187, 188, 189, 190, 191, 192, 193, 194, 205, 214], "cellmask": [124, 187, 190, 193, 194, 214], "zmid": [124, 187, 193, 194, 214], "restingthick": [124, 187, 192, 193, 194, 205, 214], "bottomdepth": [124, 187, 188, 190, 191, 192, 193, 194, 205, 214], "entir": [124, 214, 226, 233], "petersen": [124, 210, 214, 226], "et": [124, 214, 223, 226, 227], "al": [124, 214, 223, 226, 227], "2015": [124, 214, 226], "int_": 124, "rho": 124, "left": [124, 214, 223, 227], "dv": 124, "sort": [124, 203, 209, 210], "increas": [124, 209], "compute_rp": [124, 214], "csv": [124, 214], "dynamic_ntask": 126, "available_cor": 128, "estim": [128, 130, 214], "initial_state_file_nam": [131, 214], "output_fil": [131, 205, 214], "rest": [131, 192, 223, 227], "potenti": [131, 149, 205, 207, 214, 226], "energi": [131, 149, 207, 213, 214, 226], "netcdf": [131, 201, 215, 216, 217, 218, 219, 220, 221], "len": [131, 205, 214], "superclass": [133, 198, 205], "run_time_step": [139, 178, 214], "resources_fix": [139, 178], "shouldn": [139, 178, 214], "dt": [139, 178, 214, 226, 227, 230], "btr_dt": [139, 178, 214, 226], "barotrop": [139, 178, 214, 226, 229], "longer": [145, 198, 206, 214, 226, 227, 233], "shorter": [145, 206], "rpe": [149, 152, 157, 183, 207, 214, 226], "20": [149, 198, 206, 207, 214, 226, 229], "less": [160, 163, 205, 223, 229], "globalocean": [160, 202], "cosinebel": [163, 166, 169, 199], "rmsevalu": 164, "squar": [164, 199], "ncell": [164, 205, 214], "viz_map": 171, "column": [175, 176, 179, 181, 201, 210, 229, 231], "param": [176, 179, 181, 207, 208], "singlecolumn": [176, 179, 201], "iag": 180, "ideal_ag": [181, 183], "ivar": 181, "posit": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 214, 223, 229], "layer": [185, 186, 187, 191, 192, 193, 194, 197, 198, 201, 214, 215, 223, 226, 227, 229, 230], "meter": [185, 186], "bottom": [187, 188, 189, 190, 191, 192, 193, 194, 197, 214, 215, 223, 226, 227, 229, 230], "thick": [187, 191, 192, 193, 194, 198, 201, 214, 215, 223, 226], "stretch": [187, 193, 194, 214, 223], "elev": [187, 193, 194, 214, 223], "midpoint": [187, 193, 194, 214], "reftopdepth": [187, 190, 191, 193, 194, 214], "down": [187, 188, 189, 190, 191, 192, 193, 194, 214, 223], "ref": [187, 193, 194, 214], "middl": [187, 193, 194, 214], "refbottomdepth": [187, 188, 189, 190, 191, 193, 194, 205, 214], "refinterfac": [187, 193, 194, 214], "element": [187, 193, 194, 214], "vertcoordmovementweight": [187, 193, 194, 205, 214], "movement": [187, 193, 194, 214], "partial": [188, 189, 214, 223, 226, 227, 229, 230], "seafloor": [188, 190, 191, 192, 223], "unstretch": 192, "shelv": [195, 215, 223], "ssh_adjust": [195, 205, 207, 215], "iter": [195, 215], "compass_branch": 195, "default_input": [195, 202, 214, 215], "ocean_model": [195, 210, 215], "submodul": [195, 202, 210, 214, 231], "latest": [195, 210, 213, 224, 231], "master": 195, "compat": [195, 210, 211, 213], "verison": 195, "maintain": [195, 231], "recurs": [195, 209, 210, 214, 231], "whichev": [195, 223], "single_column": [195, 200, 224, 228], "design": [196, 205, 207, 209, 213, 220, 226], "minim": 197, "fcell": [197, 205, 214, 227], "fedg": [197, 205, 214, 227], "fvertex": [197, 205, 214, 227], "free": [197, 214, 215], "slip": 197, "solid": [197, 226, 227], "tangenti": 197, "enforc": [197, 210], "nonperiod": 197, "drag": 197, "mass": 197, "momentum": [197, 198], "scalar": 197, "rigid": 197, "veloc": [197, 198, 207, 210, 214, 227, 229, 231], "solv": [197, 211, 223], "mid": [197, 226], "vari": [197, 199, 205, 211, 220, 223, 227], "consult": [197, 214], "tidal_forc": 197, "eddi": [198, 226], "addition": [198, 201, 216, 217, 218, 219, 221], "diffus": [198, 201], "50": [198, 208, 214, 226, 229], "prescrib": 198, "decomptest": [198, 214], "restarttest": [198, 208], "frequenc": 198, "threadstest": 198, "thread_test": 198, "rpetest": [198, 207, 214], "intens": 198, "globalconverg": [199, 209, 214], "studi": [199, 227], "advect": [199, 227, 229], "qu": [199, 214, 215, 225, 227], "ico": [199, 214, 225, 227], "fix": [199, 208, 214], "spheric": [199, 227], "24": [199, 227], "shape": [199, 227], "blob": 199, "around": [199, 214, 215, 226, 227], "rate": [199, 214, 227, 229], "distribut": 199, "dt_per_km": [199, 214, 226, 227, 230], "rmse": 199, "exercis": [201, 227, 229], "kpp_test": 201, "mixedlayerdepthsoutput": 201, "enabel": 201, "idealagetrac": [201, 229], "100": [201, 223, 229], "dimens": [201, 226, 229], "single_column_forc": [201, 229], "profil": [201, 211, 229], "throughout": [201, 226, 229], "idealag": 201, "encompass": 202, "perspect": 202, "four": 202, "major": [202, 205], "add_test_group": [202, 209, 214], "variou": [202, 205, 210], "univers": 202, "mix": [202, 208, 229], "ice_shelf_2d": [202, 233], "iceshelf2d": 202, "ziso": [202, 223, 232, 233], "landice_model": [202, 210], "organ": [203, 206, 208, 213], "green": 203, "blue": [203, 216, 231], "orang": 203, "red": 203, "repositori": [203, 213, 214, 231], "laid": 203, "fig": 203, "among": [203, 208, 210, 214], "organiz": 203, "concept": [203, 209, 212, 214, 232], "simul": [205, 212, 214, 225, 226, 230, 231], "multiprocess": [205, 209, 215], "outsid": [205, 210], "emploi": 205, "prevent": 205, "unwant": 205, "outer": 205, "inner": 205, "variable_resolut": [205, 208, 231], "dome_varres_grid": 205, "calcul": [205, 207], "signific": [205, 206, 207], "neglig": 205, "convent": [205, 210, 214], "high": [205, 218, 220], "fit": [205, 215], "applic": [205, 209, 210, 230], "meshstep": 205, "getint": 205, "mesh_cpus_per_task": 205, "mesh_min_cpus_per_task": 205, "previous": [205, 214], "processor": [205, 226], "readi": [205, 214, 221], "write_netcdf": [205, 214], "convers": [205, 214], "generate_grid": 205, "dsmesh": 205, "graphinfofilenam": [205, 214], "use_dist": [205, 214, 226], "gradient_width_dist": [205, 214, 226], "gradient_width_frac": [205, 214, 226], "bottom_temperatur": [205, 214, 226], "surface_temperatur": [205, 214, 226, 229], "temperature_differ": [205, 214, 226], "coriolis_paramet": [205, 214, 226, 229], "bottom_depth": [205, 214, 215, 223, 226, 227, 229, 230], "vert_level": [205, 214, 215, 223, 226, 227, 229, 230], "ones_lik": [205, 214], "xcell": [205, 214], "ycell": [205, 214], "xmin": 205, "min": [205, 214, 226, 229], "xmax": 205, "ymin": 205, "ymax": 205, "ymid": 205, "xperturbmin": 205, "xperturbmax": 205, "perturbationwidth": 205, "yoffset": 205, "sin": [205, 214, 226], "pi": [205, 214, 223, 226, 227], "temp_vert": [205, 214], "frac": [205, 214, 223, 226], "logical_and": [205, 214], "transpos": [205, 214], "3rd": [205, 214], "crest": [205, 214, 226], "wave": [205, 214, 226], "expand_dim": [205, 214], "dim": [205, 214], "axi": [205, 214], "broadcast": [205, 214], "zeros_lik": [205, 214], "xedg": [205, 214], "nedg": [205, 214], "dtype": [205, 214], "xvertex": [205, 214], "commandlin": 205, "explor": [205, 208, 214, 223], "harm": 205, "likewis": [205, 214], "subsequ": [205, 212, 233], "arisen": 205, "now": [205, 210, 214, 215, 220], "omit": [205, 231], "problemat": 205, "usual": [205, 207, 210, 214, 231], "isn": [205, 209, 214], "forwardstep": 205, "mesh_path": 205, "mesh_step": 205, "with_ice_shelf_cav": [205, 207], "initial_state_target": 205, "adjusted_init": [205, 207], "forcing_data": 205, "entha_analy_result": 205, "mat": 205, "enthalpy_benchmark": 205, "ourselv": 205, "reduc": 205, "firewal": 205, "bedmachineantarctica_v2_and_gebco_2022_0": 205, "05_degree_20220729": 205, "slate": 205, "icepresent_qu60km_polar": 205, "practic": [205, 209, 210], "u": [205, 214, 220, 221], "straightforward": 205, "commonli": [205, 212], "expens": [205, 206], "mechan": 205, "notat": [205, 230], "That": [205, 209, 212, 214, 231], "word": 205, "ff": 205, "quwisc240": [205, 209, 231, 233], "90c": 205, "91c": 205, "92": [205, 223], "91": 205, "sowisc12to60": [205, 231, 233], "performance_test": [205, 233], "effici": [205, 214], "transfer": 205, "feasibl": 205, "nor": [205, 214], "add_depend": 205, "unpickl": 205, "overhead": 205, "philosophi": [206, 209, 214], "context": [206, 214], "namesak": 206, "256": [206, 217, 221], "quicker": 206, "32": [206, 231], "exce": 206, "limit": [206, 210, 226], "offer": 206, "benefit": [206, 213], "catch": 206, "bug": 206, "covereag": 206, "timestep": 206, "exhaust": 206, "recent": [206, 224], "merg": 206, "reach": 206, "steadi": 206, "encount": [206, 211], "wet": 206, "fundament": 207, "incorpor": 207, "deprec": 207, "constrain_resourc": [207, 214], "smoke_test": [207, 208], "smoketest": [207, 208], "velo_solv": 207, "sia": [207, 210], "fo": 207, "add_step": [207, 214], "runmodel": 207, "run_step": 207, "0200": 207, "00_00": [207, 214], "fine": [207, 214, 229], "recip": 207, "rpe_test": [207, 209, 214, 231], "res_param": [207, 208], "144": 207, "36": [207, 216, 220, 229, 231], "4km": [207, 208, 214, 226, 231], "unsupport": [207, 208, 210], "enumer": [207, 214], "rpe_test_": [207, 214], "_nu_": [207, 214], "deliber": 207, "chosen": [207, 229], "demonstr": [207, 214], "clumsi": [207, 209], "rpe_test_1_nu_1": [207, 214, 226], "rpe_test_2_nu_5": [207, 214, 226], "filesfore3sm": 207, "configure_global_ocean": 207, "with_bgc": 207, "po4": 207, "no3": 207, "sio3": 207, "nh4": 207, "fe": [207, 217], "o2": 207, "dic": 207, "dic_alt_co2": 207, "alk": 207, "dofe": 207, "dop": 207, "dopr": 207, "donr": 207, "zooc": 207, "spchl": 207, "spc": 207, "spfe": 207, "spcaco3": 207, "diatchl": 207, "diatc": 207, "diatf": 207, "diatsi": 207, "diazchl": 207, "diazc": 207, "diazf": 207, "phaeochl": 207, "phaeoc": 207, "phaeof": 207, "dm": 207, "dmsp": 207, "prot": 207, "poli": 207, "lip": 207, "conceptu": [208, 209], "realist": [208, 213, 232], "2000m": [208, 231], "34": [208, 231], "halfar": 208, "cism": 208, "dome_typ": 208, "closest": 208, "put_origin_on_a_cel": 208, "hydrologi": 208, "hydro": [208, 232], "dome_viz": 208, "time_slic": 208, "save_imag": 208, "hide": [208, 214], "hide_fig": 208, "add_test_cas": [208, 214], "restart_test": [208, 214, 231, 233], "talk": 208, "16": [208, 215, 229, 231], "10e3": 208, "40": [208, 219], "126": 208, "4e3": 208, "160": [208, 214, 226], "500": [208, 214, 215, 223, 226], "held": 208, "initial_condit": 209, "dig": [209, 215], "infrastructur": [209, 214], "background": 209, "behind": 209, "adher": [209, 214], "pep8": [209, 210], "bot": [209, 223], "violat": 209, "pleas": [209, 210, 214, 231], "consid": 209, "editor": 209, "pycharm": [209, 210, 214], "spyder": 209, "linter": 209, "flake8": [209, 210], "discourag": 209, "reformat": 209, "autopep8": 209, "undesir": 209, "util": 209, "lint": 209, "wildcard": 209, "vim": [209, 214], "plugin": 209, "id": [209, 210], "commit": [209, 210], "why": 209, "sound": 209, "subpackag": 209, "understand": [209, 215], "releas": [209, 213, 220, 224, 231], "our": [209, 214, 231], "downstream": 209, "tutori": [209, 210], "clu": 209, "intro": 209, "docstr": [209, 213, 214], "strip": 209, "mpas_ocean": 209, "hidden": 209, "shortcut": [209, 231], "referenc": [209, 214], "mention": 209, "dot": 209, "charact": 209, "unix": [209, 213], "distinct": 209, "mayb": [209, 214], "machine_config": 209, "endswith": 209, "splitext": 209, "exactli": [209, 210, 214, 223], "move": [209, 210, 214, 230], "renam": 209, "visa": 209, "versa": 209, "comfort": [209, 214], "inherit": [209, 214], "orient": 209, "program": [209, 215], "led": 209, "felt": 209, "contribut": 209, "hesit": 209, "predecessor": [209, 212, 213], "harder": 209, "outcom": 209, "augment": 209, "explain": 209, "hope": 209, "dens": 209, "learn": [209, 214], "curv": 209, "worth": [209, 214], "skill": 209, "broadli": 209, "endeavor": 209, "readabl": 209, "manipul": 209, "get_available_cores_and_nod": 209, "theoret": 209, "dozen": 209, "split": 209, "theori": 209, "biogeochemistri": 209, "bash": [210, 211, 214, 231], "ksh": 210, "mac": [210, 213], "csh": 210, "tcsh": 210, "temporarili": 210, "bin": [210, 221, 231], "obtain": [210, 217], "recogn": [210, 215, 231], "mambaforg": [210, 214, 220, 231], "permiss": 210, "miniconda3": 210, "unifi": [210, 221], "anyon": 210, "caus": [210, 217, 221, 223], "person": [210, 211], "base_path_to_install_or_update_conda": 210, "with_albani": 210, "with_netlib_lapack": 210, "with_petsc": 210, "flavor": [210, 214], "login": [210, 217, 221], "troubl": [210, 214], "recognit": 210, "trilino": 210, "downsid": 210, "unneed": 210, "laptop": [210, 214, 215], "workstat": 210, "deploy": 210, "shallow": [210, 227, 230], "hpc": [210, 217, 220], "touch": 210, "update_spack": 210, "reinstal": 210, "scorpio": [210, 220, 231], "esmf": [210, 231], "caution": 210, "deploi": [210, 216, 217, 218, 219, 220, 221], "load_": 210, "encod": 210, "load_dev_polaris_": [210, 214], "env_nam": 210, "dev_polaris_": [210, 211], "workdir": [210, 231], "unexpect": [210, 212, 214], "occur": [210, 211], "safest": 210, "rerun": 210, "echo": 210, "correct": 210, "checkout": [210, 214], "proceed": 210, "notic": 210, "conda_env": [210, 219, 231], "rememb": 210, "recreat": [210, 211], "incorrect": 210, "unus": 210, "session": [210, 214], "pip": 210, "substanti": 210, "risk": [210, 214], "rare": 210, "env_onli": 210, "mpas_make_target": [210, 231], "scientif": [210, 231], "_albani": 210, "instruct": [210, 214], "proce": 210, "es3m": 210, "compli": 210, "memor": 210, "guidelin": 210, "stai": 210, "complianc": 210, "checker": 210, "pre": 210, "isort": 210, "mypi": 210, "77": 210, "e302": 210, "blank": 210, "resolv": 210, "simpler": [210, 214], "mkdir": 210, "fetch": [210, 214], "new_branch_nam": 210, "put": [210, 214], "elsewher": 210, "disk": [210, 215, 217, 221], "respons": 210, "simplest": 210, "your_new_branch": 210, "suggest": 211, "geo": 211, "cartopi": 211, "14": 211, "np110py27_4": 211, "calledprocesserror": 211, "deploy_tmp": 211, "spec": [211, 221], "vpn": 211, "site": 211, "shell": [211, 213], "honor": 211, "wide": 211, "coupl": [211, 213], "spawn": 211, "usernam": [211, 214, 217, 221], "proxy_en": 211, "export": 211, "all_proxi": 211, "proxyout": 211, "8080": 211, "no_proxi": 211, "localhost": [211, 215, 220, 221, 231], "127": 211, "proxy_dis": 211, "unset": 211, "anytim": 211, "fatal": 211, "mpi_init": 211, "stack": 211, "mpir_init_thread": 211, "159": 211, "mpid_init": 211, "164": 211, "mpidi_ch3_init": 211, "95": 211, "mpid_nem_init": 211, "314": 211, "mpid_nem_tcp_init": 211, "173": 211, "mpid_nem_tcp_get_business_card": 211, "395": 211, "getsockinterfaceaddr": 211, "369": 211, "pn2034311": 211, "errno": 211, "host": [211, 215, 220, 231], "mpirun": [211, 215, 216, 217, 218, 219, 220, 221, 231], "srun": [211, 214, 215, 216, 217, 218, 219, 220, 221, 231], "parallel_execut": [211, 215, 216, 217, 218, 219, 220, 221, 231], "plu": 212, "autom": 213, "exascal": 213, "earth": 213, "kept": 213, "sens": [213, 214], "boundari": [213, 226, 232], "expert": 213, "team": 213, "launch": 213, "uncoupl": 213, "evolv": [213, 223, 227, 229], "quick": [213, 214, 224, 233], "queue": 213, "beginn": [213, 214], "worktre": [213, 214], "advanc": [213, 214], "mpas_to_yaml": 213, "troubleshoot": 213, "proxi": 213, "lanl": [213, 215, 217], "gethostbynam": 213, "glossari": 214, "port": [214, 221], "stick": 214, "miniconda": 214, "haven": 214, "3_chrysalis_intel_openmpi": 214, "switch": [214, 215], "strict": 214, "fork": 214, "push": 214, "lowercas": 214, "hyphen": 214, "settl": 214, "desktop": 214, "realli": [214, 221], "nice": [214, 221], "supercomput": 214, "yet_another_channel": 214, "vi": 214, "polaris_head": 214, "yetanotherchannel": 214, "instanc": 214, "repres": [214, 223, 227], "highli": 214, "camelcas": 214, "capit": 214, "letter": 214, "cap": 214, "awkward": 214, "encourag": 214, "enclos": 214, "briefli": 214, "alphabet": 214, "interest": 214, "anyth": 214, "probabl": [214, 220], "suppos": 214, "easili": 214, "tide": 214, "analyz": 214, "hard": [214, 226, 229], "sai": [214, 220], "res_str": 214, "1000": [214, 215, 223, 226], "still": [214, 224, 230, 231], "ti": 214, "loop": 214, "coarsest": [214, 215], "especi": 214, "anticip": 214, "promot": 214, "pattern": 214, "familiar": 214, "seen": 214, "brows": 214, "row": 214, "greater": 214, "disadvantag": 214, "foremost": 214, "magic": 214, "effect": [214, 230], "kind": 214, "pain": 214, "path_to_mpas_ocean": 214, "path_to_working_dir": 214, "sbatch": [214, 220, 231], "job_script": [214, 231], "cat": 214, "slurm_jobid": 214, "_run_test": 214, "gpf": 214, "fs1": 214, "ac": 214, "cbegeman": 214, "successfulli": 214, "x_cell": 214, "y_cell": 214, "grid_typ": [214, 215, 223, 226, 227, 229, 230], "coord_typ": [214, 223, 226, 227, 229, 230], "partial_cell_typ": [214, 223, 226, 227, 229, 230], "min_pc_fract": [214, 223, 226, 227, 229, 230], "everywher": 214, "depress": [214, 223], "x_min": 214, "x_max": 214, "y_min": 214, "y_max": 214, "y_mid": 214, "x_perturb_min": 214, "x_perturb_max": 214, "perturb_width": [214, 226], "y_offset": 214, "normal_veloc": 214, "attr": 214, "mostli": 214, "logic": [214, 226], "northern": [214, 226], "half": [214, 226], "southern": [214, 226], "halv": [214, 226], "gradient": [214, 226, 229], "08": [214, 226], "500km": [214, 226], "40e3": [214, 226], "water": [214, 226, 227, 229, 230], "35": [214, 226, 227, 229, 230, 231], "corioli": [214, 226, 227, 229], "2e": [214, 226], "initial_temperatur": 214, "initial_normal_veloc": 214, "connect": [214, 221], "match": 214, "decomp_test": [214, 231, 233], "light": 214, "fast": 214, "e3sm_compon": 214, "interrupt": 214, "pty": 214, "navig": 214, "newli": 214, "bunch": 214, "didn": 214, "mistak": 214, "finger": 214, "cross": 214, "initial_normalveloc": 214, "initial_salin": 214, "btr_dt_per_km": [214, 226], "obvious": 214, "stress": [214, 229], "steem": 214, "bring": 214, "landicemodelstep": 214, "huge": 214, "cp": 214, "config_dt": 214, "05": 214, "split_explicit_t": 214, "config_btr_dt": 214, "hmix_del2": 214, "bottom_drag": 214, "cvmix": 214, "0002": 214, "filename_interv": 214, "0100": 214, "input_interv": 214, "initial_onli": 214, "basicmesh": 214, "dayssincestart": 214, "surfacespe": 214, "lowersurfac": 214, "uppersurfac": 214, "ureconstructx": 214, "ureconstructi": 214, "great": 214, "remain": [214, 227, 229], "load_dataset": 214, "final_temperatur": 214, "ab": 214, "fresh": 214, "decomp": 214, "proc": 214, "area": 214, "markdown": 214, "users_guid": 214, "daunt": 214, "flesh": 214, "bonu": 214, "improv": 214, "introduc": 214, "techniqu": 214, "proport": [214, 223, 226, 227, 230], "1384565": 214, "strftime": 214, "gmtime": 214, "run_second": 214, "twice": 214, "guess": 214, "recomput": 214, "aim": 214, "becam": 214, "mainten": 214, "counter": 214, "thought": 214, "yet_another_channel_test_cas": 214, "yetanotherchanneltestcas": 214, "choic": [214, 227], "spuriou": [214, 226], "dissip": [214, 226], "pop": [214, 226], "mom": [214, 226], "mitgcm": [214, 226], "higher": 214, "heavi": 214, "analogi": 214, "tet": 214, "bear": 214, "me": 214, "late": 214, "_add_step": 214, "startswith": 214, "privat": 214, "break": [214, 226], "unusu": 214, "rpe_test_3_nu_10": 214, "rpe_test_4_nu_20": 214, "rpe_test_5_nu_200": 214, "_setup_step": 214, "20_00": 214, "0000": 214, "dayssincestartofsim": 214, "relativevort": 214, "pyplot": 214, "plt": 214, "output_": 214, "sections_yet_another_channel_": 214, "rpe_t": 214, "init_filenam": 214, "ds_init": 214, "_plot": 214, "compact": 214, "dirti": 214, "adopt": 214, "lesson": 214, "tricki": 214, "commun": 214, "nuanc": 214, "fake": 214, "wasn": 214, "fold": 214, "proper": 214, "third": 214, "extens": 215, "single_nod": [215, 216, 217, 218, 219, 220, 221, 231], "multinod": [215, 231], "hopefulli": 215, "explanatori": 215, "my_machin": 215, "extend": 215, "gitconfig": 215, "enter": 215, "author": 215, "asai": 215, "davi": 215, "email": 215, "pull_request": 215, "28": 215, "address": 215, "metadata": 215, "customize_config_pars": 215, "server_base_url": 215, "inej": 215, "check_siz": 215, "ssl": 215, "certif": 215, "core_path": 215, "partition_execut": 215, "dask": 215, "netcdf4": 215, "netcdf4_class": 215, "netcdf3_64bit": 215, "netcdf3_class": 215, "engin": 215, "scipi": 215, "mesh_databas": 215, "ocean_database_root": 215, "landice_database_root": 215, "mesh_cor": 215, "18": [215, 217], "mesh_min_cor": 215, "mesh_max_memori": 215, "mesh_max_disk": 215, "init_cor": 215, "init_min_cor": 215, "init_max_memori": 215, "init_max_disk": 215, "init_thread": 215, "forward_cor": 215, "forward_min_cor": 215, "forward_thread": 215, "forward_max_memori": 215, "forward_max_disk": 215, "add_metadata": 215, "ec": 215, "wc": 215, "mesh_descript": 215, "autodetect": 215, "bathy_descript": 215, "gebco": 215, "2022": 215, "bedmachin": 215, "antarctica": 215, "init_descript": 215, "e3sm_vers": 215, "increment": 215, "mesh_revis": 215, "finest": 215, "min_r": 215, "max_r": 215, "max_depth": 215, "creation_d": 215, "peopl": 215, "contact": 215, "temperaturemax": 215, "statist": 215, "temperature_max": 215, "33": [215, 231], "diagnost": [215, 216, 217, 219, 220, 221, 231], "enable_ocean_initial_condit": 215, "enable_ocean_graph_partit": 215, "enable_seaice_initial_condit": 215, "scrip": 215, "enable_scrip": 215, "transect": 215, "onlin": 215, "member": 215, "offlin": 215, "enable_diagnostics_fil": 215, "coarser": [215, 227], "finer": 215, "comparisonlatresolut": 215, "comparisonlonresolut": 215, "antarct": 215, "polar": [215, 216, 218, 223], "stereograph": 215, "comparisonantarcticstereowidth": 215, "6000": [215, 223], "comparisonantarcticstereoresolut": 215, "arctic": 215, "comparisonarcticstereowidth": 215, "comparisonarcticstereoresolut": 215, "tanh_dz": 215, "3000": 215, "min_layer_thick": [215, 223], "max_layer_thick": [215, 223], "retain": 215, "ecosystem": 216, "gain": 216, "confluenc": 216, "public_html": [216, 218, 220], "polaris_env": [216, 217, 218, 219, 220, 221], "soft": [216, 218, 220, 231], "mpi_intel": [216, 218, 219, 220], "mpi_gnu": [216, 217, 218, 219, 220, 221], "hdf5": [216, 217, 218, 219, 220, 221], "fortran": [216, 217, 218, 219, 220, 221], "pnetcdf": [216, 217, 218, 219, 220, 221], "use_e3sm_hdf5_netcdf": [216, 217, 218, 219, 220, 221], "cobalt": [216, 217, 218, 219, 220, 221], "condo": [216, 231], "acm": [216, 231], "medium": 216, "qualiti": [216, 217, 219, 220, 221, 231], "servic": [216, 217, 219, 220, 221, 231], "qo": [216, 217, 219, 220, 221, 231], "acme_high": 216, "load_latest_polaris_intel_impi": [216, 219], "load_latest_polaris_gnu_openmpi": [216, 218, 231], "dst": 217, "calendar": 217, "network": 217, "introduct": 217, "platform": 217, "wtrw": 217, "ch": 217, "lustr": 217, "scratch4": 217, "scratch5": 217, "sacctmgr": 217, "assoc": 217, "cluster": 217, "45": 217, "my": 217, "sshare": 217, "grep": [217, 231], "sreport": 217, "accountutilizationbyus": 217, "2019": 217, "02": 217, "prioriti": 217, "yellow": 217, "chkhome": 217, "petabyt": 217, "df": 217, "bp": 217, "archiv": [217, 221], "hpss": [217, 221], "front": 217, "tn": 217, "storag": 217, "project_nam": 217, "salloc": [217, 220, 221], "account_nam": 217, "gpu": [217, 221], "hyperthread": [217, 221], "hang": [217, 221], "threads_per_cor": [217, 221], "modules_befor": [217, 221], "modules_aft": [217, 221], "shared_clim": [217, 231], "load_latest_polaris_gnu_mpich": [217, 221], "load_latest_polaris_intel_openmpi": 218, "compyf": 219, "app": [219, 231], "pmi2": 219, "submit": 220, "workload": 220, "squeue": 220, "my_usernam": [220, 221], "scancel": 220, "jobid": 220, "cancel": 220, "emtpi": 220, "three": 220, "mpi_mpich": [220, 231], "mpi_openmpi": [220, 231], "nompi": [220, 231], "p1": 221, "nersc": 221, "iri": 221, "filesystem": 221, "myquota": 221, "prjquota": 221, "projectid": 221, "m1795": 221, "hsi": 221, "htar": 221, "zstash": 221, "cf": [221, 231], "cdir": [221, 231], "constraint": [221, 231], "premium": 221, "cray_compil": 221, "8844": 221, "monik": 221, "browser": 221, "grab": 221, "logon": 221, "kernel": 221, "myenv": 221, "ipykernel": 221, "kernelspec": 221, "u1": 221, "Be": 221, "interpret": 221, "argv": 221, "env": 221, "ipykernel_launch": 221, "connection_fil": 221, "display_nam": 221, "languag": 221, "2500": 223, "deepest": 223, "stewart": 223, "2017": 223, "z_2": 223, "z_1": 223, "mathrm": 223, "tanh": 223, "rightarrow": 223, "infti": 223, "z_k": 223, "z_0": 223, "z_": [223, 229], "k": 223, "finder": 223, "n_z": 223, "h_": 223, "210": [223, 227], "scienc": 223, "hydrograph": 223, "climatologi": 223, "250": 223, "5500": 223, "renorm": 223, "51": 223, "221": 223, "63": 223, "floor": 223, "flat": [223, 226], "collaps": 223, "adcroft": 223, "campin": 223, "2004": 223, "absenc": 223, "squash": 223, "watercolumn": 223, "press": 223, "batymetri": 223, "stair": 223, "month": 224, "year": 224, "websit": 224, "release_6": 224, "ilicak": 226, "2012": 226, "distinguish": 226, "zonal": [226, 229], "meridion": [226, 229], "psu": [226, 229], "cooler": 226, "north": 226, "sinusoid": 226, "perturb": [226, 227], "t_0": 226, "t_b": 226, "t_": 226, "z_b": 226, "y_": 226, "l_x": 226, "warmer": 226, "ge": [226, 227], "gradient_width_fract": 226, "l_y": 226, "le": [226, 229], "flow": [226, 227], "stationari": [226, 229], "literatur": 226, "mk": 226, "celsiu": 226, "williamson": 227, "1992": 227, "sec": 227, "3a": 227, "skamarock": 227, "gassmann": 227, "bodi": 227, "rotat": 227, "transport": 227, "psi": 227, "proportion": 227, "icosohydr": 227, "480": 227, "150": 227, "nearest": 227, "insensit": [227, 229], "300": [227, 230], "passiv": 227, "psi_0": 227, "co": 227, "radiu": 227, "assign": 227, "debug_tracers_1": 227, "equatori": 227, "u_0": 227, "tau": 227, "transit": 227, "equat": [227, 229], "vel_pd": 227, "tendenc": 227, "multipli": 227, "rad": 227, "lat_cent": 227, "lon_cent": 227, "14159265": 227, "2123666": 227, "6667": 227, "hill": 227, "psi0": 227, "qu_conv_thresh": 227, "warn": 227, "qu_conv_max": 227, "icos_conv_thresh": 227, "icos_conv_max": 227, "roughli": 227, "span": 229, "arbitrarili": 229, "virtu": 229, "examin": 229, "400": 229, "phi": 229, "phi_0": 229, "dz": 229, "ml": 229, "mld": 229, "surface_x": 229, "x_gradient_mixed_lay": 229, "mixed_layer_depth_x": 229, "x_difference_across_mixed_lay": 229, "x_gradient_interior": 229, "spatial": 229, "degc": 229, "temperature_gradient_mixed_lay": 229, "temperature_difference_across_mixed_lay": 229, "temperature_gradient_interior": 229, "mixed_layer_depth_temperatur": 229, "25": 229, "surface_salin": 229, "salinity_gradient_mixed_lay": 229, "salinity_difference_across_mixed_lay": 229, "salinity_gradient_interior": 229, "mixed_layer_depth_salin": 229, "scheme": 229, "dictat": 229, "kpp": 229, "restor": 229, "piston": 229, "toward": 229, "temperature_surface_restoring_valu": 229, "temperature_piston_veloc": 229, "salinity_surface_restoring_valu": 229, "salinity_piston_veloc": 229, "temperature_interior_restoring_r": 229, "salinity_interior_restoring_r": 229, "net": 229, "latent": 229, "heat": 229, "bulk": 229, "latent_heat_flux": 229, "sensibl": 229, "sensible_heat_flux": 229, "solar": 229, "shortwav": 229, "shortwave_heat_flux": 229, "evapor": 229, "evaporation_flux": 229, "5e": 229, "rain": 229, "rain_flux": 229, "wind": 229, "wind_stress_zon": 229, "wind_stress_meridion": 229, "characterist": 230, "welcom": 230, "icosohedr": 230, "pertain": 230, "inher": 230, "warrant": 230, "investig": 230, "load_latest_polari": 231, "minu": 231, "create_polaris_load_script": 231, "load_polaris_1": 231, "0_mpich": 231, "wiki": 231, "circular_shelf": 231, "sia_smoke_test": 231, "sia_decomposition_test": 231, "sia_restart_test": 231, "fo_smoke_test": 231, "fo_decomposition_test": 231, "fo_restart_test": 231, "37": 231, "38": 231, "17": 231, "210131_test_new_branch": 231, "fall": 231, "my_config": 231, "smaller": 231, "previous_workdir": 231, "paper": 231, "recompil": 231, "live": 231, "safer": 231, "preserv": 231, "test_subdir": 231, "whatev": 231, "wall": 231, "clock": 231, "accord": 231, "j": 231, "exclus": 231, "job_nam": 231, "wall_tim": 231, "fo_integr": [231, 233], "full_integr": [231, 233], "sia_integr": [231, 233], "cosine_bell_cached_init": [231, 233], "ec30to60": [231, 233], "ecwisc30to60": [231, 233], "qu240_for_e3sm": [231, 233], "quwisc240_for_e3sm": [231, 233], "wc14": [231, 233], "suitenam": 231, "radial": 232, "analyt": 232, "form": 232, "identifi": 232, "analysis_test": 233, "5km": 233, "20km": 233, "with_frazil": 233, "prohibit": 233}, "objects": {"polaris": [[17, 0, 1, "", "Component"], [19, 0, 1, "", "ModelStep"], [32, 0, 1, "", "Step"], [41, 0, 1, "", "TestCase"], [45, 0, 1, "", "TestGroup"]], "polaris.Component": [[17, 1, 1, "", "__init__"], [18, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_model_config_options"], [21, 1, 1, "", "add_namelist_file"], [22, 1, 1, "", "add_streams_file"], [23, 1, 1, "", "add_yaml_file"], [24, 1, 1, "", "dynamic_model_config"], [25, 1, 1, "", "map_yaml_to_namelist"], [26, 1, 1, "", "partition"], [27, 1, 1, "", "process_inputs_and_outputs"], [28, 1, 1, "", "runtime_setup"], [29, 1, 1, "", "set_model_resources"], [30, 1, 1, "", "setup"], [31, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[32, 1, 1, "", "__init__"], [33, 1, 1, "", "add_dependency"], [34, 1, 1, "", "add_input_file"], [35, 1, 1, "", "add_output_file"], [36, 1, 1, "", "constrain_resources"], [37, 1, 1, "", "run"], [38, 1, 1, "", "runtime_setup"], [39, 1, 1, "", "set_resources"], [40, 1, 1, "", "setup"]], "polaris.TestCase": [[41, 1, 1, "", "__init__"], [42, 1, 1, "", "add_step"], [43, 1, 1, "", "configure"], [44, 1, 1, "", "validate"]], "polaris.TestGroup": [[45, 1, 1, "", "__init__"], [46, 1, 1, "", "add_test_case"]], "polaris.__main__": [[47, 2, 1, "", "main"]], "polaris.cache": [[48, 2, 1, "", "update_cache"]], "polaris.components": [[49, 2, 1, "", "get_components"]], "polaris.config": [[50, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[50, 1, 1, "", "__init__"]], "polaris.io": [[51, 2, 1, "", "download"], [52, 3, 0, "-", "imp_res"], [53, 2, 1, "", "symlink"]], "polaris.list": [[54, 2, 1, "", "list_cases"], [55, 2, 1, "", "list_machines"], [56, 2, 1, "", "list_suites"]], "polaris.logging": [[57, 2, 1, "", "log_method_call"]], "polaris.mesh": [[58, 0, 1, "", "IcosahedralMeshStep"], [65, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [60, 1, 1, "", "get_cell_width"], [61, 1, 1, "", "get_subdivisions"], [62, 1, 1, "", "make_jigsaw_mesh"], [63, 1, 1, "", "run"], [64, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, 1, 1, "", "__init__"], [66, 1, 1, "", "build_cell_width_lat_lon"], [67, 1, 1, "", "make_jigsaw_mesh"], [68, 1, 1, "", "run"], [69, 1, 1, "", "setup"]], "polaris.mesh.planar": [[70, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[71, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "run"], [73, 1, 1, "", "save_and_plot_cell_width"], [74, 1, 1, "", "setup"]], "polaris.model_step": [[75, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[76, 2, 1, "", "ingest"], [77, 2, 1, "", "parse_replacements"], [78, 2, 1, "", "replace"], [79, 2, 1, "", "write"]], "polaris.ocean": [[125, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[125, 1, 1, "", "__init__"]], "polaris.ocean.model": [[126, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[126, 1, 1, "", "__init__"], [127, 1, 1, "", "compute_cell_count"], [128, 1, 1, "", "constrain_resources"], [129, 1, 1, "", "map_yaml_to_namelist"], [130, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[131, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[132, 0, 1, "", "BaroclinicChannel"], [133, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[132, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[133, 1, 1, "", "__init__"], [134, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[135, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[135, 1, 1, "", "__init__"], [136, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[137, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[139, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "compute_cell_count"], [141, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[142, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "run"], [144, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[145, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[147, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[147, 1, 1, "", "__init__"], [148, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[149, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "configure"], [151, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[152, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "run"], [154, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[155, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[157, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[157, 1, 1, "", "__init__"], [158, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[159, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[159, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[160, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "configure"], [162, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[163, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "rmse"], [165, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[166, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "compute_cell_count"], [168, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[169, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[171, 0, 1, "", "Viz"], [173, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[175, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[175, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[176, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[178, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[178, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.ideal_age": [[179, 0, 1, "", "IdealAge"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.initial_state": [[181, 0, 1, "", "InitialState"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[183, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[185, 2, 1, "", "generate_1d_grid"], [186, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[187, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[188, 2, 1, "", "alter_bottom_depth"], [189, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[190, 2, 1, "", "compute_min_max_level_cell"], [191, 2, 1, "", "compute_z_level_layer_thickness"], [192, 2, 1, "", "compute_z_level_resting_thickness"], [193, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[194, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[80, 2, 1, "", "check_parallel_system"], [81, 2, 1, "", "get_available_parallel_resources"], [82, 2, 1, "", "get_parallel_command"], [83, 2, 1, "", "run_command"], [84, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[85, 2, 1, "", "write"]], "polaris.remap": [[86, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[86, 1, 1, "", "__init__"], [87, 1, 1, "", "dst_from_lon_lat"], [88, 1, 1, "", "dst_from_mpas"], [89, 1, 1, "", "dst_from_points"], [90, 1, 1, "", "dst_from_proj"], [91, 1, 1, "", "dst_global_lon_lat"], [92, 1, 1, "", "get_remapper"], [93, 1, 1, "", "runtime_setup"], [94, 1, 1, "", "src_from_lon_lat"], [95, 1, 1, "", "src_from_mpas"], [96, 1, 1, "", "src_from_proj"]], "polaris.run.serial": [[97, 2, 1, "", "run_single_step"], [98, 2, 1, "", "run_tests"]], "polaris.setup": [[99, 2, 1, "", "setup_case"], [100, 2, 1, "", "setup_cases"]], "polaris.streams": [[101, 2, 1, "", "read"], [102, 2, 1, "", "update_defaults"], [103, 2, 1, "", "update_tree"], [104, 2, 1, "", "write"]], "polaris.suite": [[105, 2, 1, "", "setup_suite"]], "polaris.validate": [[106, 2, 1, "", "compare_timers"], [107, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[108, 2, 1, "", "plot_global"]], "polaris.viz": [[109, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[110, 0, 1, "", "PolarisYaml"], [114, 2, 1, "", "main_mpas_to_yaml"], [115, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [116, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[110, 1, 1, "", "__init__"], [111, 1, 1, "", "read"], [112, 1, 1, "", "update"], [113, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5, 214], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 124, 210, 214, 216, 217, 218, 219, 220, 221, 226, 227, 229, 230], "same": 1, "implement": 1, "test": [1, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 200, 204, 206, 207, 208, 209, 214, 215, 225, 228, 231, 232, 233], "valid": [1, 2, 15, 44, 106, 107, 134, 136, 138, 146, 151, 156, 162, 177, 180, 207, 214, 231], "api": 2, "refer": [2, 123, 124], "compon": [2, 12, 17, 18, 49, 124, 195, 202, 209, 210, 224, 231], "polari": [2, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 209, 210, 213, 231], "framework": [2, 8, 123, 124, 198, 201, 209, 222], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 54, 55, 56], "setup": [2, 4, 6, 30, 40, 64, 69, 74, 99, 100, 130, 144, 154, 205], "suit": [2, 4, 6, 105, 206, 225, 231, 233], "run": [2, 6, 12, 37, 63, 68, 72, 97, 98, 124, 143, 153, 158, 165, 170, 172, 174, 182, 184, 205, 210, 226, 227, 229, 230, 231], "cach": [2, 4, 6, 48, 205], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 209], "testgroup": [2, 45, 46], "testcas": [2, 41, 42, 43, 44, 207], "step": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 205, 214, 226, 227, 229, 230], "modelstep": [2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "config": [2, 7, 12, 50, 124, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 229, 230], "io": [2, 9, 51, 52, 53], "log": [2, 10, 57], "mesh": [2, 11, 12, 16, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 199, 214, 226, 227, 229, 230], "model_step": [2, 75], "namelist": [2, 12, 76, 77, 78, 79, 124], "parallel": [2, 80, 81, 82, 83, 84], "proven": [2, 13, 85], "remap": [2, 14, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "stream": [2, 12, 101, 102, 103, 104, 124, 214], "viz": [2, 108, 109, 157, 158, 171, 172, 173, 174, 183, 184, 199, 201, 214], "yaml": [2, 12, 110, 111, 112, 113, 114, 115, 116, 124], "build": [3, 210, 231], "serial": [4, 6, 97, 98], "docstr": 5, "modul": [6, 209, 210], "clean": 6, "file": [7, 12, 124, 205, 214, 215], "comment": 7, "symlink": [9, 53, 205], "download": [9, 51, 205], "spheric": [11, 16, 71, 72, 73, 74], "planar": [11, 16, 70], "uniform": [11, 223], "gener": 11, "model": [12, 124, 126, 127, 128, 129, 130, 196, 214, 231], "an": [12, 124, 214], "e3sm": [12, 124, 210, 231], "ad": [12, 205, 214], "updat": [12, 112, 210], "runtim": 12, "input": [12, 205], "partit": [12, 26], "pio": 12, "make": [12, 214], "graph": 12, "variabl": 15, "norm": 15, "timer": 15, "visual": [16, 214], "horizont": [16, 214], "field": 16, "from": [16, 124, 205, 210, 220], "global": 16, "lat": 16, "lon": 16, "plot": [16, 214], "add_test_group": 18, "add_model_config_opt": 20, "add_namelist_fil": 21, "add_streams_fil": 22, "add_yaml_fil": 23, "dynamic_model_config": [24, 141, 148, 168], "map_yaml_to_namelist": [25, 129], "process_inputs_and_output": 27, "runtime_setup": [28, 38, 93, 205], "set_model_resourc": 29, "update_namelist_pio": 31, "add_depend": 33, "add_input_fil": 34, "add_output_fil": 35, "constrain_resourc": [36, 128, 205], "set_resourc": 39, "add_step": 42, "configur": [43, 150, 161, 207, 211], "add_test_cas": 46, "__main__": 47, "main": 47, "update_cach": 48, "get_compon": 49, "polarisconfigpars": 50, "imp_r": 52, "list_cas": 54, "list_machin": 55, "list_suit": 56, "log_method_cal": 57, "icosahedralmeshstep": [58, 59, 60, 61, 62, 63, 64], "build_subdivisions_cell_width_lat_lon": 59, "get_cell_width": 60, "get_subdivis": 61, "make_jigsaw_mesh": [62, 67], "quasiuniformsphericalmeshstep": [65, 66, 67, 68, 69], "build_cell_width_lat_lon": 66, "compute_planar_hex_nx_ni": 70, "sphericalbasestep": [71, 72, 73, 74], "save_and_plot_cell_width": 73, "make_graph_fil": 75, "ingest": 76, "parse_replac": 77, "replac": 78, "write": [79, 85, 104, 113], "check_parallel_system": 80, "get_available_parallel_resourc": 81, "get_parallel_command": 82, "run_command": 83, "set_cores_per_nod": 84, "mappingfilestep": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "dst_from_lon_lat": 87, "dst_from_mpa": 88, "dst_from_point": 89, "dst_from_proj": 90, "dst_global_lon_lat": 91, "get_remapp": 92, "src_from_lon_lat": 94, "src_from_mpa": 95, "src_from_proj": 96, "run_single_step": 97, "run_test": 98, "setup_cas": [99, 100], "read": [101, 111], "update_default": 102, "update_tre": 103, "setup_suit": 105, "compare_tim": 106, "compare_vari": 107, "globe": 108, "plot_glob": 108, "plot_horiz_field": 109, "polarisyaml": [110, 111, 112, 113], "main_mpas_to_yaml": 114, "mpas_namelist_and_streams_to_yaml": 115, "yaml_to_mpas_stream": 116, "anvil": [117, 216], "intel": [117, 119, 120, 216, 218, 219], "gnu": [117, 118, 119, 120, 122, 216, 217, 218, 221], "chicoma": [118, 217], "cpu": [118, 122, 217, 221], "chrysali": [119, 218], "compymcnodefac": [120, 219], "machin": [121, 210, 220, 231], "support": [121, 196, 210, 220, 231], "other": [121, 205, 214, 220, 231], "perlmutt": [122, 221], "pm": 122, "ocean": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 224], "group": [123, 200, 208, 209, 214, 228], "baroclinic_channel": [123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 198, 226], "global_converg": [123, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 199, 227], "cosine_bel": [123, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 199, 225, 227], "single_column": [123, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 201, 229], "oceanmodelstep": [123, 126, 127, 128, 129, 130], "potenti": [123, 124], "energi": [123, 124], "rpe": [123, 124, 131], "vertic": [123, 124, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 214, 223, 226, 227, 229, 230], "coordin": [123, 124, 214, 223], "v": 124, "map": 124, "omega": 124, "mpa": [124, 197], "set": [124, 210, 231], "mpi": [124, 220], "resourc": 124, "rest": 124, "compute_cell_count": [127, 140, 167], "compute_rp": 131, "baroclinicchannel": 132, "baroclinicchanneltestcas": [133, 134], "decomp_test": [135, 136, 198, 226], "decomptest": [135, 136], "default": [137, 138, 198, 214, 226], "forward": [139, 140, 141, 166, 167, 168, 178, 198, 199, 201, 214], "initial_st": [142, 143, 144, 181, 182, 198, 201, 214], "initialst": [142, 143, 144, 181, 182], "restart_test": [145, 146, 147, 148, 198, 226], "restarttest": [145, 146], "restart_step": [147, 148], "restartstep": [147, 148], "rpe_test": [149, 150, 151, 152, 153, 154, 198, 226], "rpetest": [149, 150, 151], "analysi": [152, 153, 154, 163, 164, 165, 199, 214], "threads_test": [155, 156, 198], "threadstest": [155, 156], "globalconverg": 159, "cosinebel": [160, 161, 162], "rmse": 164, "init": [169, 170, 199], "vizmap": [173, 174], "singlecolumn": 175, "cvmix": [176, 177, 201, 229], "ideal_ag": [179, 180], "idealag": [179, 180], "grid_1d": [185, 186], "generate_1d_grid": 185, "write_1d_grid": 186, "init_vertical_coord": 187, "partial_cel": [188, 189], "alter_bottom_depth": 188, "alter_ssh": 189, "zlevel": [190, 191, 192, 193], "compute_min_max_level_cel": 190, "compute_z_level_layer_thick": 191, "compute_z_level_resting_thick": 192, "init_z_level_vertical_coord": 193, "zstar": 194, "init_z_star_vertical_coord": 194, "initi": [197, 214, 226, 227, 229, 230], "condit": [197, 214, 226, 227, 229, 230], "boundari": 197, "forc": [197, 226, 227, 229, 230], "baroclinic_channel_test_cas": 198, "type": [199, 223], "ideal": [201, 229], "ag": [201, 229], "directori": 203, "structur": 203, "organ": 204, "attribut": [205, 207], "constructor": [205, 207], "output": [205, 214], "copi": 205, "depend": 205, "pull": 206, "request": 206, "pr": 206, "nightli": 206, "case": [207, 209, 214, 215, 231, 232], "overview": 209, "code": [209, 210, 214], "style": [209, 210], "packag": 209, "share": [209, 214], "within": 209, "quick": [210, 231], "start": [210, 214, 231], "develop": [210, 213, 214], "unix": 210, "shell": 210, "up": [210, 231], "repositori": 210, "beginn": 210, "conda": [210, 211, 220, 231], "environ": [210, 211, 231], "spack": [210, 231], "compil": 210, "system": 210, "albani": 210, "petsc": 210, "netlib": 210, "lapack": 210, "unknown": 210, "what": 210, "script": [210, 231], "doe": 210, "flag": 210, "activ": 210, "switch": 210, "between": [210, 214], "differ": 210, "troubleshoot": [210, 211], "creat": [210, 214], "onli": 210, "repo": 210, "worktre": 210, "advanc": 210, "user": [210, 213, 215, 231], "solver": 211, "error": 211, "when": 211, "proxi": 211, "lanl": 211, "mac": 211, "gethostbynam": 211, "fail": 211, "glossari": [212, 213], "": 213, "guid": 213, "tutori": [213, 214], "compass": 213, "new": 214, "get": 214, "vari": 214, "resolut": 214, "paramet": 214, "thing": 214, "out": 214, "defin": 214, "more": 214, "again": 214, "one": 214, "time": [214, 226, 227, 229, 230], "second": 214, "enhanc": 214, "dynam": 214, "comput": 214, "cell": 214, "count": 214, "superclass": 214, "studi": 214, "how": 214, "pass": 214, "data": [214, 221], "A": 215, "slurm": 220, "job": [220, 231], "queue": 220, "mpich": 220, "openmpi": 220, "No": 220, "forg": 220, "jupyt": 221, "notebook": 221, "remot": 221, "1d": 223, "grid": [223, 226, 227, 229, 230], "tanh_dz": 223, "60layerphc": 223, "100layere3smv1": 223, "3d": 223, "z": 223, "star": 223, "level": 223, "cosine_bell_cached_init": 225, "descript": [226, 227, 229, 230], "durat": [226, 227, 229, 230], "core": [226, 227, 229, 230], "thread_test": 226, "test_group_nam": 230, "test_case_nam": 230, "i": 231, "yet": 231, "load": 231, "standalon": 231}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [202, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [199, "mesh"], [226, "mesh"], [226, "id2"], [226, "id9"], [226, "id17"], [226, "id25"], [226, "id32"], [227, "mesh"], [229, "mesh"], [229, "id3"], [229, "id8"], [230, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [199, "viz"], [201, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"], [214, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [222, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [124, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [124, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Remapping": [[14, "remapping"]], "Validation": [[15, "validation"]], "Validating variables": [[15, "validating-variables"]], "Norms": [[15, "norms"]], "Validating timers": [[15, "validating-timers"]], "Visualization": [[16, "visualization"]], "horizontal fields from planar meshes": [[16, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[16, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[17, "polaris-component"]], "polaris.Component.add_test_group": [[18, "polaris-component-add-test-group"]], "polaris.ModelStep": [[19, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[20, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[21, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[22, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[23, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[24, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[25, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[26, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[27, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[28, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[29, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[30, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[31, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[32, "polaris-step"]], "polaris.Step.add_dependency": [[33, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[34, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[35, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[36, "polaris-step-constrain-resources"]], "polaris.Step.run": [[37, "polaris-step-run"]], "polaris.Step.runtime_setup": [[38, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[39, "polaris-step-set-resources"]], "polaris.Step.setup": [[40, "polaris-step-setup"]], "polaris.TestCase": [[41, "polaris-testcase"]], "polaris.TestCase.add_step": [[42, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[43, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[44, "polaris-testcase-validate"]], "polaris.TestGroup": [[45, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[46, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[47, "polaris-main-main"]], "polaris.cache.update_cache": [[48, "polaris-cache-update-cache"]], "polaris.components.get_components": [[49, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[50, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[51, "polaris-io-download"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[53, "polaris-io-symlink"]], "polaris.list.list_cases": [[54, "polaris-list-list-cases"]], "polaris.list.list_machines": [[55, "polaris-list-list-machines"]], "polaris.list.list_suites": [[56, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[57, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[58, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[59, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[60, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[61, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[62, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[63, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[64, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[70, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[72, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[73, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[74, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[75, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[76, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[77, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[78, "polaris-namelist-replace"]], "polaris.namelist.write": [[79, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[80, "polaris-parallel-check-parallel-system"]], "polaris.parallel.get_available_parallel_resources": [[81, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[82, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[83, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[84, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[85, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[86, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[87, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[88, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[89, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[90, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[91, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[92, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[93, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[94, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[95, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[96, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.serial.run_single_step": [[97, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[98, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[99, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[100, "polaris-setup-setup-cases"]], "polaris.streams.read": [[101, "polaris-streams-read"]], "polaris.streams.update_defaults": [[102, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[103, "polaris-streams-update-tree"]], "polaris.streams.write": [[104, "polaris-streams-write"]], "polaris.suite.setup_suite": [[105, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[106, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[107, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[108, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[109, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[110, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[111, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[112, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[113, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[114, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[115, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[116, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[117, "anvil"], [216, "anvil"]], "intel": [[117, "intel"], [119, "intel"], [120, "intel"]], "gnu": [[117, "gnu"], [119, "gnu"], [120, "gnu"]], "Chicoma": [[118, "chicoma"], [217, "chicoma"]], "chicoma-cpu, gnu": [[118, "chicoma-cpu-gnu"]], "Chrysalis": [[119, "chrysalis"], [218, "chrysalis"]], "CompyMcNodeFace": [[120, "compymcnodeface"], [219, "compymcnodeface"]], "Machines": [[121, "machines"], [220, "machines"]], "Supported Machines": [[121, "supported-machines"], [220, "supported-machines"]], "Other Machines": [[121, "other-machines"], [220, "other-machines"]], "Perlmutter": [[122, "perlmutter"], [221, "perlmutter"]], "pm-cpu, gnu": [[122, "pm-cpu-gnu"]], "ocean": [[123, "ocean"]], "Test Groups": [[123, "test-groups"], [208, "test-groups"]], "baroclinic_channel": [[123, "baroclinic-channel"], [198, "baroclinic-channel"], [226, "baroclinic-channel"]], "global_convergence": [[123, "global-convergence"], [199, "global-convergence"], [227, "global-convergence"]], "cosine_bell": [[123, "cosine-bell"], [199, "cosine-bell"], [227, "cosine-bell"]], "single_column": [[123, "single-column"], [201, "single-column"], [229, "single-column"]], "Ocean Framework": [[123, "ocean-framework"]], "OceanModelStep": [[123, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[123, "reference-potential-energy-rpe"]], "Vertical coordinates": [[123, "vertical-coordinates"]], "Ocean framework": [[124, "ocean-framework"]], "YAML files vs. namelists and streams": [[124, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[124, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[124, "setting-mpi-resources"]], "Model config options and streams": [[124, "model-config-options-and-streams"]], "Vertical coordinate": [[124, "vertical-coordinate"], [223, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[124, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[125, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[126, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[127, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[128, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[129, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[130, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[131, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[132, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[133, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[134, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[135, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[136, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[137, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[138, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[139, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[140, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[141, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[142, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[143, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[144, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[145, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[146, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[147, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[148, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[149, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[150, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[151, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[152, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[153, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[154, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[155, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[156, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[157, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[158, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[159, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[160, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[161, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[162, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[163, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[164, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[165, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[174, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[175, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[176, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[177, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[178, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[179, "polaris-ocean-tests-single-column-ideal-age-idealage"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate": [[180, "polaris-ocean-tests-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tests.single_column.initial_state.InitialState": [[181, "polaris-ocean-tests-single-column-initial-state-initialstate"]], "polaris.ocean.tests.single_column.initial_state.InitialState.run": [[182, "polaris-ocean-tests-single-column-initial-state-initialstate-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[183, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[184, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[185, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[186, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[187, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[188, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[189, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[190, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[191, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[192, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[193, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[194, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[195, "ocean-component"], [224, "ocean-component"]], "Models": [[196, "models"]], "Supported Models": [[196, "supported-models"]], "MPAS-Ocean": [[197, "mpas-ocean"]], "Initial conditions": [[197, "initial-conditions"]], "Boundary conditions": [[197, "boundary-conditions"]], "Forcing": [[197, "forcing"]], "framework": [[198, "framework"], [201, "framework"]], "baroclinic_channel_test_case": [[198, "baroclinic-channel-test-case"]], "initial_state": [[198, "initial-state"], [201, "initial-state"]], "forward": [[198, "forward"], [199, "forward"], [201, "forward"]], "default": [[198, "default"], [226, "default"]], "decomp_test": [[198, "decomp-test"], [226, "decomp-test"]], "restart_test": [[198, "restart-test"], [226, "restart-test"]], "threads_test": [[198, "threads-test"]], "rpe_test": [[198, "rpe-test"], [226, "rpe-test"]], "mesh types": [[199, "mesh-types"]], "init": [[199, "init"]], "analysis": [[199, "analysis"]], "Test groups": [[200, "test-groups"], [228, "test-groups"]], "cvmix": [[201, "cvmix"], [229, "cvmix"]], "ideal age": [[201, "ideal-age"], [229, "ocean-single-column-ideal-age"]], "Directory structure": [[203, "directory-structure"]], "Organization of Tests": [[204, "organization-of-tests"]], "Steps": [[205, "steps"]], "Step attributes": [[205, "step-attributes"]], "constructor": [[205, "constructor"], [207, "constructor"]], "constrain_resources()": [[205, "constrain-resources"]], "setup()": [[205, "setup"]], "runtime_setup()": [[205, "runtime-setup"]], "run()": [[205, "run"]], "inputs and outputs": [[205, "inputs-and-outputs"]], "Input files": [[205, "input-files"]], "Symlinks to input files": [[205, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[205, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[205, "downloading-and-symlinking-input-files"]], "Copying input files": [[205, "copying-input-files"]], "Output files": [[205, "output-files"]], "Cached output files": [[205, "cached-output-files"]], "Adding other steps as dependencies": [[205, "adding-other-steps-as-dependencies"]], "Test Suites": [[206, "test-suites"], [231, "test-suites"], [233, "test-suites"]], "Pull-Request (PR) suite": [[206, "pull-request-pr-suite"]], "Nightly suite": [[206, "nightly-suite"]], "Test cases": [[207, "test-cases"]], "TestCase attributes": [[207, "testcase-attributes"]], "configure()": [[207, "configure"]], "validate()": [[207, "validate"]], "Overview": [[209, "overview"]], "Code Style": [[209, "code-style"]], "Packages and Modules": [[209, "packages-and-modules"]], "Packages": [[209, "packages"]], "Modules": [[209, "modules"]], "Classes": [[209, "classes"]], "Code sharing": [[209, "code-sharing"]], "\u2026in the polaris framework": [[209, "in-the-polaris-framework"]], "\u2026within a component": [[209, "within-a-component"]], "\u2026within a test group": [[209, "within-a-test-group"]], "\u2026within a test case": [[209, "within-a-test-case"]], "Quick Start for Developers": [[210, "quick-start-for-developers"]], "Unix Shell": [[210, "unix-shell"]], "Set up a polaris repository: for beginners": [[210, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[210, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[210, "supported-machines"]], "Environments with Albany": [[210, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[210, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[210, "unknown-machines"]], "What the script does": [[210, "what-the-script-does"]], "Optional flags": [[210, "optional-flags"]], "Activating the environment": [[210, "activating-the-environment"]], "Switching between different polaris environments": [[210, "switching-between-different-polaris-environments"]], "Troubleshooting": [[210, "troubleshooting"], [211, "troubleshooting"]], "Creating/updating only the polaris environment": [[210, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[210, "building-e3sm-components"]], "Running polaris from the repo": [[210, "running-polaris-from-the-repo"]], "Code style for polaris": [[210, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[210, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[211, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[211, "proxy-on-lanl-macs"]], "gethostbyname failed": [[211, "gethostbyname-failed"]], "Glossary": [[212, "glossary"], [213, null]], "Polaris": [[213, "polaris"]], "User's guide": [[213, null]], "Developer's guide": [[213, null]], "Tutorials": [[213, null]], "Compass": [[213, "compass"]], "Developer Tutorial: Adding a new test group": [[214, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[214, "getting-started"]], "Making a new test group": [[214, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[214, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[214, "varying-resolution-and-other-parameters"]], "Adding the initial_state step": [[214, "adding-the-initial-state-step"]], "Creating a horizontal mesh": [[214, "creating-a-horizontal-mesh"]], "Adding a config file": [[214, "adding-a-config-file"]], "Adding the step to the test case": [[214, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[214, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[214, "creating-an-initial-condition"]], "Adding plots": [[214, "adding-plots"]], "Adding step outputs": [[214, "adding-step-outputs"]], "Adding validation": [[214, "adding-validation"], [214, "id1"]], "Test things out!": [[214, "test-things-out"]], "Adding the forward step": [[214, "adding-the-forward-step"]], "Defining model config options and streams": [[214, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[214, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[214, "adding-more-validation"]], "Test the test case again!": [[214, "test-the-test-case-again"]], "Adding a visualization step": [[214, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[214, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[214, "test-the-test-case-one-more-time"]], "Adding a second test case": [[214, "adding-a-second-test-case"]], "Enhancements": [[214, "enhancements"]], "Adding model config options in code": [[214, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[214, "adding-dynamic-model-config-options"]], "Computing the cell count": [[214, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[214, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[214, "adding-a-parameter-study"]], "Adding the steps to the test case": [[214, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[214, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[214, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[215, "config-files"]], "A \u201cuser\u201d config file": [[215, "a-user-config-file"]], "Test-case config files": [[215, "test-case-config-files"]], "config options": [[216, "config-options"], [217, "config-options"], [218, "config-options"], [219, "config-options"], [220, "config-options"], [221, "config-options"], [226, "config-options"], [226, "id7"], [226, "id14"], [226, "id22"], [226, "id30"], [226, "id37"], [227, "config-options"], [229, "config-options"], [229, "id1"], [229, "id6"], [229, "id13"], [230, "config-options"]], "Intel on Anvil": [[216, "intel-on-anvil"]], "Gnu on Anvil": [[216, "gnu-on-anvil"]], "Chicoma-CPU": [[217, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[217, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[218, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[218, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[219, "intel-on-compymcnodeface"]], "Slurm job queueing": [[220, "slurm-job-queueing"]], "MPICH": [[220, "mpich"]], "OpenMPI": [[220, "openmpi"]], "No MPI from conda-forge": [[220, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[221, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[221, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[221, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[223, "d-grid-type"]], "uniform": [[223, "uniform"]], "tanh_dz": [[223, "tanh-dz"]], "60layerPHC": [[223, "layerphc"]], "100layerE3SMv1": [[223, "layere3smv1"]], "3D vertical coordinates": [[223, "d-vertical-coordinates"]], "z-star": [[223, "z-star"]], "z-level": [[223, "z-level"]], "Test suites": [[225, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[225, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[226, "description"], [226, "id1"], [226, "id8"], [226, "id16"], [226, "id24"], [229, "description"], [229, "id2"], [229, "id7"], [230, "description"]], "vertical grid": [[226, "vertical-grid"], [226, "id3"], [226, "id10"], [226, "id18"], [226, "id26"], [226, "id33"], [227, "vertical-grid"], [229, "vertical-grid"], [229, "id4"], [229, "id9"], [230, "vertical-grid"]], "initial conditions": [[226, "initial-conditions"], [226, "id4"], [226, "id11"], [226, "id19"], [226, "id27"], [226, "id34"], [227, "initial-conditions"], [229, "initial-conditions"], [229, "id5"], [229, "id10"], [230, "initial-conditions"]], "forcing": [[226, "forcing"], [226, "id5"], [226, "id12"], [226, "id20"], [226, "id28"], [226, "id35"], [227, "forcing"], [229, "forcing"], [229, "id11"], [230, "forcing"]], "time step and run duration": [[226, "time-step-and-run-duration"], [226, "id6"], [226, "id13"], [226, "id21"], [226, "id29"], [226, "id36"], [227, "time-step-and-run-duration"], [229, "time-step-and-run-duration"], [229, "id12"], [230, "time-step-and-run-duration"]], "cores": [[226, "cores"], [226, "id15"], [226, "id23"], [226, "id31"], [226, "id38"], [227, "cores"], [229, "cores"], [229, "id14"], [230, "cores"]], "thread_test": [[226, "thread-test"]], "Description": [[227, "description"]], "test_group_name": [[230, "test-group-name"]], "test_case_name": [[230, "test-case-name"]], "Quick Start for Users": [[231, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[231, null]], "Loading polaris conda and spack environments": [[231, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[231, "e3sm-supported-machines"]], "Other machines": [[231, "other-machines"]], "Building supported E3SM components as standalone models": [[231, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[231, "setting-up-test-cases"]], "Running a test case": [[231, "running-a-test-case"]], "Running with a job script": [[231, "running-with-a-job-script"]], "Test Cases": [[232, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[17, "polaris.Component"]], "__init__() (polaris.component method)": [[17, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[18, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[19, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[19, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[24, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[25, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[26, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[27, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[28, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[29, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[31, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[32, "polaris.Step"]], "__init__() (polaris.step method)": [[32, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[33, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[34, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[35, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[36, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[37, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[38, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[39, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[40, "polaris.Step.setup"]], "testcase (class in polaris)": [[41, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[41, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[42, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[43, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[44, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[45, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[45, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[46, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[47, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[48, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[49, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[50, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[50, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[51, "polaris.io.download"]], "module": [[52, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[52, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[53, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[54, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[55, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[56, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[57, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[58, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[70, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[71, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[75, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[76, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[77, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[78, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[79, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[80, "polaris.parallel.check_parallel_system"]], "get_available_parallel_resources() (in module polaris.parallel)": [[81, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[82, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[83, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[84, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[85, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[86, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_proj"]], "run_single_step() (in module polaris.run.serial)": [[97, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[98, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[99, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[100, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[101, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[102, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[103, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[104, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[105, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[106, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[107, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[108, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[109, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[110, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[110, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[111, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[112, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[114, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[115, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[116, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[125, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[125, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[126, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[126, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[127, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[131, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[132, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[133, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[134, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[135, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[135, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[136, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[137, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[137, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[138, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[139, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[140, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[141, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[142, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[142, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[143, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[144, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[145, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[146, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[147, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[147, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[148, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[149, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[149, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[150, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[151, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[152, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[153, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[154, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[155, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[155, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[156, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[157, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[157, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[158, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[159, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[159, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[160, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[160, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[161, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[162, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[163, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[164, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[165, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[175, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[175, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[176, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[176, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[177, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[178, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[178, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tests.single_column.ideal_age)": [[179, "polaris.ocean.tests.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[179, "polaris.ocean.tests.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[180, "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate"]], "initialstate (class in polaris.ocean.tests.single_column.initial_state)": [[181, "polaris.ocean.tests.single_column.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[181, "polaris.ocean.tests.single_column.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.single_column.initial_state.initialstate method)": [[182, "polaris.ocean.tests.single_column.initial_state.InitialState.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[183, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[183, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[184, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[185, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[186, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[187, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[188, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[189, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[190, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[191, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[192, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[193, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[194, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})