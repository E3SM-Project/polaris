Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "cosine_bell", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "cosine bell", "Tasks", "inertial gravity wave", "manufactured solution", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 18, 20, 37, 45, 48, 49, 52, 132, 135, 144, 153, 154, 161, 164, 169, 174, 234, 237, 238, 242, 243, 244, 245, 247, 249, 251, 253, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 282, 283, 287, 288, 289, 293, 295], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 34, 48, 49, 51, 54, 67, 72, 74, 77, 80, 81, 89, 91, 93, 94, 100, 105, 106, 107, 108, 111, 112, 132, 135, 137, 142, 143, 144, 145, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 190, 191, 195, 197, 198, 199, 200, 201, 204, 205, 209, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 257, 258, 259, 261, 262, 266, 268, 269, 271, 277, 279, 294, 295], "templat": [0, 5, 6, 7, 27, 28, 29, 113, 122, 126, 132, 135, 143, 157, 163, 238, 269, 270, 271], "date": [1, 2, 5, 54, 234, 245, 251, 263, 271], "2023": [1, 16, 285, 286], "08": [1, 270, 282], "18": [1, 6, 271, 273], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 17, 132, 270, 271, 276], "asai": [1, 271], "davi": [1, 271], "capabl": [1, 2, 6, 16, 132, 247, 250, 270, 276, 289], "design": [1, 132, 235, 247, 249, 250, 269, 276, 282], "here": [1, 6, 9, 12, 14, 16, 17, 132, 135, 237, 242, 243, 246, 247, 249, 250, 251, 266, 270, 271, 272, 273, 274, 275, 276, 277, 283, 287, 288, 289, 293, 294], "abil": [1, 7], "across": [1, 6, 7, 9, 14, 18, 135, 237, 243, 247, 248, 249, 250, 251, 268, 270, 278, 282, 283], "In": [1, 2, 6, 7, 8, 9, 11, 14, 16, 17, 37, 132, 135, 243, 245, 247, 248, 249, 250, 251, 269, 270, 271, 276, 279, 283, 288, 289, 293, 294, 295], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 23, 24, 29, 30, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 56, 62, 66, 68, 71, 72, 75, 76, 77, 81, 90, 91, 93, 94, 100, 105, 108, 118, 128, 129, 130, 131, 132, 133, 135, 137, 142, 145, 148, 153, 154, 155, 157, 159, 160, 161, 163, 164, 165, 167, 168, 169, 173, 174, 177, 181, 183, 185, 187, 188, 191, 195, 197, 199, 201, 202, 205, 209, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 234, 237, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 262, 263, 267, 268, 269, 270, 271, 273, 276, 277, 279, 282, 283, 285, 286, 287, 288, 289, 293, 294], "document": [1, 3, 9, 14, 247, 250, 269, 271, 289], "refer": [1, 7, 14, 37, 151, 164, 226, 229, 232, 233, 247, 250, 251, 268, 269, 270, 279, 282, 289], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 33, 46, 105, 111, 112, 160, 168, 243, 244, 245, 247, 248, 249, 250, 251, 253, 270, 271, 276, 282, 283, 287, 288, 289, 292, 293], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 24, 27, 28, 30, 37, 39, 48, 55, 94, 96, 103, 111, 112, 113, 117, 120, 122, 132, 135, 137, 138, 139, 140, 141, 145, 148, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 178, 193, 194, 207, 208, 218, 234, 236, 243, 244, 246, 247, 249, 251, 256, 257, 259, 261, 270, 271, 273, 276, 279, 282, 283, 285, 286, 287, 288, 289], "avail": [1, 4, 5, 7, 11, 14, 18, 24, 34, 37, 40, 41, 44, 55, 63, 89, 90, 91, 132, 145, 155, 195, 209, 218, 237, 238, 247, 249, 250, 251, 270, 272, 273, 274, 275, 277, 282, 289, 294], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 128, 130, 131, 132, 135, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 290, 294, 295], "main": [1, 3, 6, 7, 9, 14, 42, 132, 187, 243, 244, 249, 250, 251, 270, 295], "motiv": 1, "behind": [1, 250], "comput": [1, 7, 13, 14, 79, 132, 135, 138, 139, 141, 145, 146, 151, 156, 180, 192, 196, 206, 210, 229, 230, 231, 237, 238, 240, 241, 242, 247, 251, 273, 274, 276, 277, 282, 283, 285, 286, 289], "expens": [1, 247, 248], "could": [1, 14, 16, 18, 132, 238, 247, 248, 249, 250, 251, 270, 283], "time": [1, 5, 6, 7, 8, 14, 17, 18, 37, 48, 61, 120, 132, 140, 150, 151, 155, 164, 178, 181, 193, 194, 197, 207, 208, 211, 218, 236, 237, 238, 240, 241, 243, 247, 248, 249, 250, 251, 266, 267, 268, 271, 273, 277, 289, 294], "order": [1, 5, 8, 13, 14, 135, 238, 244, 247, 248, 251, 270, 283, 286, 287, 289], "reflect": [1, 5, 251], "fact": [1, 14, 37, 132], "we": [1, 2, 5, 7, 9, 11, 13, 14, 16, 17, 18, 131, 132, 135, 139, 140, 149, 178, 237, 238, 242, 243, 246, 247, 249, 250, 251, 266, 269, 270, 271, 273, 275, 276, 277, 279, 283, 289, 294], "present": [1, 49, 120, 251, 270], "new": [1, 2, 5, 19, 25, 37, 48, 56, 60, 67, 74, 80, 94, 114, 115, 135, 143, 155, 162, 179, 192, 195, 206, 209, 218, 226, 232, 233, 247, 249, 250, 251, 264, 267, 268, 269, 289], "success": [1, 2, 8, 47, 58, 234, 244, 263, 270, 271], "insofar": 1, "guarante": [1, 14, 132, 234, 251, 263], "per": [1, 8, 14, 24, 34, 36, 37, 44, 90, 91, 132, 135, 145, 247, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 285, 286, 288, 293], "slurm": [1, 61, 92, 132, 247, 269, 271, 272, 273, 274, 275, 277, 289], "job": [1, 6, 132, 251, 269, 270, 272, 273, 274, 275, 277], "role": 1, "clear": [1, 2, 250, 270], "should": [1, 2, 5, 6, 7, 9, 12, 14, 17, 25, 30, 37, 38, 39, 46, 48, 50, 58, 62, 75, 111, 112, 119, 120, 128, 129, 130, 131, 132, 133, 135, 137, 141, 148, 160, 168, 220, 222, 234, 243, 244, 245, 247, 248, 249, 251, 263, 264, 267, 268, 270, 271, 282, 283, 287, 288, 289, 293], "invoc": 1, "serial": [1, 43, 247, 249, 269, 270, 289], "A": [1, 6, 7, 8, 11, 13, 14, 16, 18, 19, 25, 27, 28, 30, 37, 38, 39, 40, 41, 45, 48, 49, 52, 55, 56, 57, 63, 67, 68, 71, 74, 75, 76, 80, 86, 89, 91, 93, 94, 95, 96, 97, 98, 102, 103, 104, 108, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 132, 135, 137, 143, 148, 150, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 184, 186, 190, 195, 198, 200, 204, 209, 212, 214, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 238, 240, 241, 242, 244, 247, 248, 249, 250, 251, 256, 257, 259, 261, 268, 269, 270, 272, 273, 274, 275, 276, 277, 282, 283, 285, 286, 288, 289, 292, 293], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 16, 37, 39, 40, 45, 48, 49, 50, 52, 54, 56, 81, 107, 114, 117, 132, 135, 184, 234, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 283, 285, 286, 288, 289, 290, 293], "class": [1, 9, 11, 13, 14, 16, 17, 18, 19, 24, 32, 37, 42, 48, 56, 66, 67, 74, 80, 94, 121, 135, 136, 137, 143, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 184, 186, 187, 188, 190, 192, 195, 198, 200, 202, 204, 206, 209, 212, 214, 217, 218, 219, 220, 222, 234, 237, 238, 240, 241, 242, 244, 245, 247, 249, 254, 256, 257, 259, 260, 261, 263, 266, 270], "attribut": [1, 8, 9, 12, 13, 14, 43, 45, 52, 98, 104, 105, 137, 240, 241, 270], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 17, 18, 39, 46, 48, 58, 107, 108, 119, 132, 135, 160, 168, 174, 220, 222, 237, 238, 242, 243, 245, 247, 248, 249, 250, 251, 267, 268, 269, 270, 271, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 292, 293, 294, 295], "relat": [1, 6, 7, 11, 13, 14, 132, 135, 234, 237, 238, 240, 241, 242, 243, 247, 251, 267, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 283, 287, 288, 289, 290], "inform": [1, 5, 7, 8, 37, 94, 118, 127, 192, 206, 247, 249, 251, 271, 273, 280, 289, 290], "belong": [1, 10, 12, 14, 24, 34, 37, 44, 48, 67, 74, 80, 94, 135, 137, 143, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 184, 186, 188, 190, 195, 198, 200, 202, 204, 209, 212, 214, 217, 218, 219, 220, 222, 243, 244, 247, 249, 250, 256, 257, 259, 260, 261, 270, 294], "locat": [1, 5, 6, 9, 14, 18, 37, 49, 111, 112, 117, 135, 234, 247, 249, 251, 263, 268, 270, 271, 273, 276, 279, 282, 283, 289], "highest": 1, "level": [1, 2, 11, 12, 13, 17, 18, 135, 140, 178, 226, 227, 228, 229, 230, 231, 232, 233, 237, 243, 245, 246, 247, 249, 270, 271, 282, 283, 285, 286, 287, 288, 293], "where": [1, 5, 7, 9, 14, 17, 37, 39, 48, 56, 58, 62, 93, 112, 117, 119, 132, 135, 226, 229, 232, 233, 234, 244, 246, 247, 249, 251, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 287, 288, 289, 293, 294], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 24, 37, 44, 48, 55, 90, 91, 93, 112, 118, 132, 135, 136, 139, 140, 145, 155, 178, 195, 209, 218, 226, 232, 233, 234, 237, 243, 244, 245, 247, 248, 249, 250, 251, 254, 263, 268, 269, 270, 271, 276, 279, 280, 282, 283, 288, 289, 290, 293, 295], "below": [1, 5, 6, 14, 24, 34, 37, 44, 90, 91, 132, 135, 145, 155, 195, 209, 218, 234, 243, 245, 247, 249, 251, 270, 271, 276, 279, 283, 285, 286, 287, 289], "There": [1, 5, 6, 13, 226, 232, 233, 242, 243, 245, 247, 250, 251, 267, 270, 271, 289], "wai": [1, 5, 7, 13, 14, 37, 71, 76, 132, 135, 247, 249, 250, 251, 267, 269, 270, 276, 279, 287], "list": [1, 2, 6, 7, 9, 14, 17, 24, 37, 40, 48, 49, 54, 55, 56, 90, 91, 108, 111, 112, 117, 118, 135, 137, 143, 151, 166, 170, 174, 177, 190, 200, 202, 204, 214, 218, 247, 248, 249, 250, 251, 257, 268, 269, 270, 271, 273, 276, 277, 283, 289, 294, 295], "within": [1, 5, 7, 9, 10, 11, 12, 14, 19, 34, 37, 39, 40, 44, 48, 49, 56, 59, 117, 118, 132, 135, 237, 240, 241, 243, 244, 245, 247, 248, 249, 251, 264, 268, 270, 271, 273, 276, 283, 287, 288, 293], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 37, 43, 48, 63, 69, 70, 79, 106, 112, 127, 132, 135, 137, 141, 170, 171, 174, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 257, 258, 266, 268, 270, 271, 276, 279, 282, 283, 285, 286, 288, 289, 293, 294], "also": [1, 2, 5, 6, 7, 9, 13, 14, 18, 32, 43, 56, 118, 119, 132, 135, 184, 226, 232, 233, 234, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 270, 271, 276, 277, 279, 283, 285, 286, 288, 289, 293, 295], "find": [1, 6, 7, 58, 70, 92, 132, 234, 249, 250, 251, 267, 270, 271, 289], "onli": [1, 5, 6, 7, 8, 14, 16, 17, 48, 132, 135, 234, 236, 238, 242, 244, 247, 249, 250, 263, 266, 269, 270, 271, 273, 276, 277, 279, 281, 282, 283, 286, 287, 289, 292], "its": [1, 5, 6, 7, 8, 9, 12, 16, 18, 37, 50, 100, 105, 106, 114, 132, 135, 243, 244, 245, 247, 248, 249, 250, 251, 268, 270, 271, 272, 283, 289, 295], "would": [1, 2, 5, 9, 14, 17, 24, 34, 37, 44, 49, 90, 91, 94, 132, 135, 145, 155, 195, 209, 218, 237, 245, 247, 249, 250, 251, 267, 270, 276, 279, 289], "ident": [1, 2, 5, 17, 153, 161, 169, 237, 247, 248, 250, 256, 270, 282], "self": [1, 9, 11, 12, 14, 16, 17, 18, 50, 82, 135, 244, 247, 249, 250, 270, 271], "contain": [1, 2, 5, 6, 7, 8, 9, 16, 18, 19, 26, 27, 28, 41, 55, 59, 86, 89, 95, 96, 97, 98, 102, 103, 104, 113, 120, 121, 135, 137, 143, 151, 226, 232, 233, 244, 245, 246, 247, 250, 251, 253, 263, 264, 268, 270, 271, 276, 280, 288, 289, 290, 293], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 16, 69, 132, 135, 234, 247, 251, 268, 270, 271, 279, 287, 289], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 18, 37, 38, 39, 50, 56, 74, 108, 123, 132, 135, 150, 234, 237, 238, 243, 246, 247, 249, 250, 251, 264, 268, 269, 270, 271, 276, 279, 282, 283, 289], "As": [1, 4, 5, 6, 9, 13, 17, 69, 135, 243, 247, 248, 249, 250, 251, 270, 271, 279, 283, 287, 294], "setup": [1, 6, 7, 9, 11, 14, 17, 29, 34, 37, 38, 44, 48, 132, 135, 157, 163, 181, 197, 211, 237, 240, 241, 242, 249, 250, 251, 268, 269, 270, 271, 283, 289, 295], "suit": [1, 2, 6, 7, 12, 17, 37, 48, 62, 63, 107, 108, 110, 112, 132, 237, 246, 247, 249, 251, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 282], "proce": [1, 251], "iter": [1, 234, 271], "through": [1, 2, 112, 250, 251, 264, 270], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 16, 17, 18, 24, 32, 37, 38, 39, 40, 60, 67, 69, 70, 96, 103, 113, 115, 119, 126, 132, 137, 141, 145, 182, 237, 238, 242, 243, 244, 245, 247, 248, 249, 250, 251, 267, 268, 269, 271, 273, 276, 279, 285, 289, 294, 295], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 24, 34, 37, 38, 40, 44, 49, 50, 92, 100, 105, 128, 130, 131, 132, 144, 145, 155, 195, 209, 218, 234, 238, 244, 245, 246, 247, 248, 249, 250, 251, 263, 264, 267, 268, 270, 271, 279, 282, 283, 285, 287, 289], "been": [1, 5, 6, 37, 40, 45, 49, 50, 52, 100, 112, 117, 128, 130, 131, 132, 135, 137, 144, 177, 190, 200, 204, 214, 234, 244, 247, 249, 250, 251, 263, 267, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 289], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 16, 17, 23, 38, 39, 46, 49, 50, 51, 56, 135, 144, 150, 152, 160, 168, 176, 189, 203, 216, 226, 232, 233, 243, 244, 249, 251, 255, 264, 269, 272, 273, 274, 275, 277, 289], "initi": [1, 7, 8, 37, 120, 135, 140, 151, 153, 154, 158, 161, 164, 169, 178, 182, 198, 212, 217, 219, 220, 222, 237, 238, 240, 241, 242, 243, 247, 249, 250, 260, 267, 268, 269, 271, 279, 281, 294, 295], "fals": [1, 9, 13, 14, 17, 18, 24, 37, 39, 49, 54, 63, 65, 107, 108, 112, 117, 118, 120, 132, 135, 145, 220, 222, 236, 243, 247, 249, 264, 270, 271, 273, 275, 277, 282], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 46, 68, 75, 132, 135, 160, 168, 243, 244, 247, 249, 250, 268, 269, 270, 283, 295], "skip": [1, 5, 8, 118, 294], "true": [1, 6, 7, 9, 13, 14, 17, 18, 24, 49, 58, 60, 118, 119, 120, 123, 128, 129, 130, 131, 132, 133, 135, 145, 219, 236, 243, 247, 251, 270, 271, 272, 273, 274, 275, 276, 277, 282, 289, 295], "when": [1, 5, 6, 12, 14, 16, 17, 25, 26, 27, 28, 30, 37, 38, 43, 48, 49, 56, 58, 60, 63, 107, 118, 132, 135, 148, 231, 237, 238, 240, 241, 242, 243, 247, 249, 250, 251, 269, 270, 272, 273, 274, 275, 277, 279, 282, 283, 287, 289, 295], "complet": [1, 5, 8, 26, 27, 28, 105, 270, 289], "alreadi": [1, 4, 5, 6, 11, 14, 49, 50, 60, 132, 135, 144, 218, 247, 249, 250, 251, 270, 271, 276, 279, 283, 289], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 17, 18, 37, 48, 135, 143, 155, 179, 195, 209, 218, 237, 240, 241, 247, 248, 249, 250, 251, 269, 270, 279], "parallel": [1, 5, 16, 24, 34, 37, 43, 44, 132, 145, 247, 250, 251, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 289, 295], "make": [1, 4, 5, 6, 7, 9, 11, 12, 16, 17, 24, 33, 39, 56, 68, 69, 71, 84, 128, 129, 130, 131, 132, 133, 135, 145, 149, 153, 161, 169, 186, 226, 232, 233, 234, 237, 243, 247, 249, 250, 251, 256, 263, 268, 271, 272, 273, 274, 275, 276, 277, 282, 283, 289, 294], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 52, 54, 58, 60, 66, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 137, 140, 141, 143, 145, 149, 151, 157, 160, 163, 168, 178, 184, 186, 225, 234, 237, 238, 240, 241, 242, 243, 248, 249, 250, 251, 257, 263, 264, 266, 267, 268, 269, 273, 276, 277, 279, 282, 283, 288, 289, 292, 293, 295], "mode": [1, 5, 14, 244, 251, 268, 269, 270, 289], "sure": [1, 5, 6, 7, 12, 14, 16, 17, 132, 135, 153, 161, 169, 234, 237, 247, 250, 251, 256, 263, 268, 270, 271, 276, 277, 282, 283], "dictionari": [1, 8, 9, 14, 18, 19, 25, 27, 28, 30, 37, 38, 41, 48, 56, 86, 89, 93, 112, 113, 121, 122, 123, 135, 143, 148, 238, 247, 249, 250, 270, 283], "them": [1, 7, 8, 9, 14, 16, 17, 24, 36, 132, 135, 145, 238, 244, 245, 247, 249, 250, 251, 268, 270, 275, 276, 281, 289, 295], "constructor": [1, 9, 14, 135, 237, 240, 241, 243, 270], "argument": [1, 5, 7, 9, 12, 14, 17, 18, 35, 37, 90, 91, 101, 119, 237, 244, 247, 249, 250, 251, 270, 288, 293, 294], "replac": [1, 5, 7, 9, 14, 25, 26, 27, 28, 29, 30, 45, 48, 52, 60, 86, 113, 122, 123, 132, 135, 143, 148, 157, 163, 249, 250, 270, 271, 289], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 16, 24, 37, 39, 48, 49, 51, 56, 62, 65, 67, 74, 80, 93, 94, 111, 117, 121, 132, 137, 143, 144, 145, 152, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 176, 177, 179, 182, 184, 186, 188, 189, 190, 195, 198, 200, 202, 203, 204, 209, 212, 214, 216, 217, 218, 219, 220, 222, 243, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 259, 260, 261, 264, 268, 269, 270, 271, 276, 278, 281, 294, 295], "subdir": [1, 5, 9, 16, 24, 37, 48, 49, 67, 74, 80, 94, 135, 137, 143, 145, 155, 177, 179, 182, 184, 186, 218, 247, 249, 257, 270], "now": [1, 6, 132, 247, 251, 270, 271, 276], "rel": [1, 2, 5, 9, 16, 17, 39, 40, 49, 54, 56, 111, 112, 117, 118, 234, 244, 247, 249, 250, 251, 257, 263, 268, 270, 282, 289, 295], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 37, 39, 56, 132, 237, 247, 251, 267, 270, 279], "than": [1, 5, 6, 8, 9, 11, 13, 14, 37, 39, 44, 56, 132, 155, 195, 209, 218, 237, 247, 248, 250, 251, 267, 270, 279, 282], "parent": [1, 32, 135, 238, 243, 244, 247], "resid": [1, 5, 9, 39, 135, 137, 177, 245, 247, 249], "insid": [1, 12, 245, 247, 250, 283], "situat": [1, 16, 30, 148, 270, 289], "anoth": [1, 2, 6, 7, 9, 10, 13, 16, 17, 37, 38, 39, 118, 234, 237, 243, 245, 247, 249, 250, 251, 268, 270, 271, 282, 289, 294, 295], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 135, 234, 239, 244, 249, 270, 283, 288, 293, 294], "with_viz": [1, 238, 249, 283], "base": [1, 5, 8, 13, 14, 15, 17, 19, 37, 39, 41, 48, 54, 73, 78, 80, 111, 112, 117, 132, 135, 144, 147, 149, 179, 182, 184, 186, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 244, 246, 247, 249, 250, 251, 263, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 295], "mesh": [1, 5, 7, 10, 16, 24, 37, 84, 96, 103, 120, 137, 138, 140, 143, 145, 146, 147, 149, 151, 154, 156, 158, 174, 177, 178, 179, 180, 182, 184, 186, 190, 192, 196, 198, 200, 204, 206, 210, 212, 214, 217, 219, 220, 226, 232, 233, 236, 237, 238, 240, 241, 242, 243, 245, 247, 249, 250, 251, 259, 260, 268, 269, 271, 279, 281, 289, 294], "init": [1, 5, 6, 7, 9, 14, 17, 18, 34, 44, 135, 137, 143, 153, 154, 161, 164, 169, 179, 184, 234, 236, 244, 247, 249, 250, 251, 263, 271, 282, 283, 285, 286, 289], "forward": [1, 5, 7, 9, 14, 37, 135, 137, 143, 151, 154, 162, 164, 184, 217, 219, 234, 244, 247, 249, 250, 260, 263, 271, 282, 283, 285, 286, 288, 293], "resolut": [1, 9, 13, 14, 16, 67, 70, 74, 75, 79, 95, 99, 102, 135, 137, 138, 141, 143, 144, 153, 154, 155, 158, 161, 162, 164, 166, 169, 174, 177, 179, 190, 195, 198, 200, 202, 204, 209, 212, 214, 237, 238, 240, 241, 242, 243, 244, 245, 247, 249, 271, 282, 283, 285, 286, 287, 288, 293, 295], "singl": [1, 5, 8, 9, 18, 120, 132, 216, 217, 219, 220, 222, 242, 247, 249, 250, 255, 256, 257, 259, 260, 261, 263, 264, 268, 270, 276, 280, 283, 284, 285, 286, 290, 291], "analysi": [1, 6, 9, 18, 135, 237, 249, 250, 268, 269, 271, 283, 285, 286, 295], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 38, 39, 40, 49, 50, 51, 57, 73, 78, 83, 113, 114, 115, 122, 123, 126, 127, 132, 135, 144, 152, 157, 163, 176, 189, 203, 216, 243, 244, 247, 249, 250, 251, 255, 268, 270, 271, 277, 283], "remap": [1, 10, 18, 184, 238, 269, 283, 288, 293], "visual": [1, 10, 13, 16, 200, 214, 238, 240, 241, 243, 247, 249, 268, 269, 283, 285, 286, 288, 293], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 17, 18, 19, 30, 39, 117, 132, 235, 237, 238, 240, 241, 242, 243, 244, 246, 247, 249, 250, 251, 268, 269, 270, 271, 276, 278, 279, 281, 282, 283, 285, 286, 287, 288, 289, 294, 295], "spheric": [1, 5, 238, 249, 283, 294], "qu": [1, 5, 135, 249, 270, 271, 281, 283, 294], "base_mesh": [1, 5, 13, 67, 74, 135, 137, 143, 144, 179, 182, 184, 186, 247, 249, 270, 283], "60km": [1, 5, 249, 283], "90km": [1, 5], "120km": [1, 5, 249], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 144, 249], "map": [1, 8, 16, 19, 30, 74, 75, 94, 119, 120, 148, 184, 186, 238, 249, 251, 271], "viz": [1, 5, 18, 174, 247, 249], "two": [1, 5, 10, 17, 118, 135, 161, 171, 237, 238, 240, 241, 242, 243, 244, 247, 248, 250, 251, 256, 258, 270, 282, 283, 285, 286, 292], "first": [1, 6, 9, 14, 112, 132, 135, 237, 240, 241, 242, 247, 249, 250, 251, 267, 270, 272, 273, 274, 275, 276, 277, 282, 283, 287, 289], "verbos": [1, 5, 6, 63, 65, 132, 247, 270, 294], "10": [1, 9, 13, 69, 132, 234, 237, 240, 241, 243, 244, 270, 271, 276, 279, 282, 285, 286, 287, 295], "name": [1, 5, 7, 8, 9, 13, 14, 16, 17, 18, 19, 24, 26, 27, 28, 30, 31, 37, 38, 39, 40, 48, 50, 58, 60, 61, 62, 63, 67, 74, 80, 84, 86, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 108, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 126, 132, 135, 137, 138, 139, 140, 141, 143, 144, 145, 148, 151, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 178, 179, 182, 184, 186, 218, 225, 243, 244, 247, 249, 250, 251, 257, 259, 261, 268, 270, 271, 277, 282, 289, 294], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 135, 140, 150, 155, 178, 218, 242, 247, 250, 282, 287, 292], "symlink": [1, 5, 8, 9, 14, 17, 37, 39, 48, 49, 56, 249, 250, 251, 283], "what": [1, 2, 6, 11, 13, 16, 132, 249, 250, 270, 277, 288, 289, 293], "follow": [1, 4, 5, 7, 9, 13, 14, 18, 66, 132, 137, 226, 232, 233, 234, 236, 247, 248, 249, 251, 263, 264, 267, 270, 271, 276, 277, 279, 281, 283, 285, 286, 287, 289, 292], "subdirectori": [1, 5, 7, 8, 13, 19, 23, 24, 37, 39, 48, 49, 51, 63, 67, 74, 80, 94, 111, 135, 137, 143, 145, 155, 177, 179, 182, 184, 186, 190, 195, 198, 200, 204, 209, 212, 214, 218, 220, 222, 243, 245, 247, 249, 250, 270, 288, 289, 293, 295], "bold": [1, 249], "elsewher": [1, 251], "tree": [1, 7, 113, 115, 127, 249, 290], "thu": [1, 2, 7, 14, 270, 283], "similar": [1, 2, 5, 9, 12, 13, 14, 129, 132, 133, 135, 243, 245, 250, 251, 270, 271, 289], "had": [1, 132], "maintain": [1, 234, 289], "local": [1, 5, 6, 8, 9, 11, 17, 39, 234, 245, 247, 251, 263, 267, 270, 271, 276, 277, 279], "debug": [1, 8, 128, 129, 130, 131, 132, 133, 270, 272, 273, 274, 275, 277], "easier": [1, 14, 247, 249, 250, 251, 271, 289, 294], "symbol": [1, 60, 247], "link": [1, 2, 7, 9, 11, 14, 39, 45, 52, 60, 132, 243, 247, 249, 251, 270, 276, 280, 289, 290], "were": [1, 47, 132, 218, 247, 250, 268, 270, 271, 275, 279], "even": [1, 6, 12, 13, 14, 39, 56, 132, 247, 250, 251, 270, 271, 276, 289], "compass": [1, 5, 234, 247, 249, 250, 268, 270], "though": [1, 11, 37, 249, 250, 270], "global": [1, 13, 16, 98, 99, 104, 238, 243, 247, 248, 250, 268, 269, 270, 271, 277, 281, 283, 288, 289, 293, 295], "dynamic_adjust": [1, 14, 271], "allow": [1, 2, 8, 16, 17, 24, 34, 37, 44, 56, 118, 132, 135, 145, 247, 268, 270, 271, 276, 279, 283, 287, 295], "one": [1, 2, 5, 6, 7, 10, 14, 16, 17, 18, 24, 36, 37, 39, 40, 47, 48, 54, 60, 111, 112, 117, 132, 135, 144, 145, 161, 218, 234, 237, 240, 241, 242, 243, 245, 247, 249, 250, 251, 256, 266, 267, 268, 269, 271, 276, 277, 279, 282, 283, 286, 288, 289, 292, 293, 294, 295], "input": [1, 5, 8, 10, 11, 16, 32, 37, 38, 39, 40, 46, 84, 135, 160, 168, 237, 238, 240, 241, 242, 270, 287], "port": [1, 270, 277], "instead": [1, 5, 6, 12, 14, 24, 108, 128, 132, 247, 250, 251, 268, 270, 272, 283, 289, 294], "seri": [1, 14, 135, 166, 172, 238, 240, 266, 270, 281], "indic": [1, 7, 8, 14, 16, 17, 37, 38, 105, 112, 120, 132, 135, 229, 245, 247, 267, 270, 271, 279, 287], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 37, 38, 236, 247, 249, 250, 251, 270, 273, 275, 277, 289], "ran": [1, 106], "ico": [1, 5, 135, 249, 270, 281, 283, 294], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 24, 112, 117, 132, 145, 234, 244, 247, 251, 263, 270, 271, 272, 273, 274, 275, 276, 277, 289], "runtim": [1, 8, 14, 29, 43, 135, 157, 163, 181, 197, 211, 247, 270], "0": [1, 2, 5, 6, 7, 13, 14, 16, 17, 18, 69, 95, 99, 102, 118, 120, 128, 129, 130, 131, 132, 133, 135, 226, 231, 232, 233, 236, 238, 243, 247, 250, 264, 267, 270, 271, 273, 276, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 293], "01": [1, 14, 135, 264, 270, 287, 292], "00": [1, 14, 17, 135, 249, 264, 270, 277, 289], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 289], "02": [1, 273], "59": 1, "icos_map_60km": 1, "20": [1, 164, 237, 248, 270, 282, 287], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 56, 132, 237, 250, 251, 283, 287], "mechan": [1, 247], "prevent": [1, 247], "expect": [1, 2, 12, 16, 132, 135, 244, 247, 251, 270, 283], "affect": [1, 6, 247, 251, 270], "howev": [1, 13, 247, 248, 249, 251, 270], "perform": [1, 2, 5, 8, 14, 16, 17, 37, 42, 43, 46, 47, 67, 118, 132, 135, 143, 154, 155, 160, 164, 168, 179, 187, 195, 209, 217, 218, 219, 234, 237, 238, 240, 241, 242, 247, 248, 249, 260, 268, 269, 270, 271, 276, 282, 294], "successfulli": [1, 47, 270], "after": [1, 5, 6, 7, 9, 16, 17, 18, 37, 39, 40, 81, 100, 105, 132, 227, 228, 234, 244, 247, 249, 251, 263, 270, 271, 273, 277, 283, 289, 292], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 16, 30, 37, 38, 45, 52, 106, 112, 117, 131, 132, 135, 137, 141, 148, 177, 190, 200, 204, 214, 234, 237, 240, 241, 243, 245, 247, 248, 249, 250, 251, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 289, 294, 295], "remov": [1, 5, 14, 23, 51, 108, 237, 240, 241, 249, 251, 270], "longer": [1, 161, 237, 248, 256, 270, 282, 283], "about": [1, 5, 6, 7, 8, 12, 14, 37, 94, 121, 135, 243, 247, 249, 250, 251, 270, 271, 273], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 29, 49, 56, 75, 132, 135, 157, 163, 234, 238, 244, 247, 249, 250, 251, 263, 264, 267, 269, 270, 271, 272, 276, 277, 279, 282, 283, 289, 294], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 18, 132, 135, 234, 236, 244, 247, 248, 249, 250, 264, 267, 271, 276, 280, 289], "enforc": [1, 236, 251], "framework": [1, 5, 7, 9, 12, 13, 14, 107, 234, 243, 244, 247, 249, 263, 268, 269, 270, 280, 287, 288, 290, 293, 295], "propos": [1, 2], "close": [1, 6, 70, 132, 269, 283], "root": [1, 39, 132, 234, 240, 241, 244, 247, 250, 251, 263, 268, 271, 272, 273, 274, 275, 276, 277, 279, 285, 286, 289], "live": [1, 49, 249, 289], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 24, 36, 39, 47, 68, 75, 76, 79, 82, 94, 100, 118, 135, 145, 161, 170, 192, 206, 226, 232, 233, 238, 244, 245, 247, 249, 250, 256, 257, 276, 279, 282, 285, 286], "think": [1, 5, 270], "condit": [1, 7, 37, 135, 140, 154, 158, 178, 182, 198, 212, 217, 219, 220, 222, 237, 238, 240, 241, 242, 243, 247, 248, 249, 250, 260, 266, 268, 269, 271, 281, 294, 295], "shown": [1, 14, 132, 245, 287], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 34, 37, 38, 39, 40, 44, 48, 57, 71, 74, 76, 95, 99, 100, 102, 111, 112, 117, 128, 129, 130, 131, 132, 133, 135, 234, 237, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 286, 289, 294, 295], "simpli": [1, 14, 17, 56, 132, 154, 244, 247, 249, 251, 270, 279, 289, 294], "prefer": [1, 2, 132, 247, 248, 270, 271], "convent": [1, 247, 251, 270], "futur": [1, 13, 43, 247, 250, 268, 269, 270, 271, 287, 289, 295], "current": [1, 2, 5, 6, 8, 11, 24, 34, 37, 44, 118, 132, 145, 234, 242, 244, 247, 250, 251, 253, 263, 264, 268, 269, 270, 271, 276, 279, 282, 286, 287, 289, 294, 295], "independ": [1, 2, 5, 248, 268], "yyyi": 2, "mm": [2, 135, 150], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 43, 46, 48, 49, 51, 54, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 84, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 126, 127, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 153, 154, 155, 156, 158, 160, 161, 162, 164, 166, 168, 169, 170, 172, 174, 177, 178, 179, 180, 182, 184, 186, 188, 190, 195, 196, 198, 200, 202, 204, 209, 210, 212, 214, 217, 218, 219, 220, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 257, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 292, 293, 295], "purpos": [2, 243, 250, 270, 295], "section": [2, 3, 5, 6, 7, 9, 12, 14, 16, 24, 30, 75, 119, 123, 132, 135, 145, 148, 224, 226, 232, 233, 234, 238, 242, 243, 244, 247, 248, 250, 251, 263, 267, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 287, 288, 289, 293], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 24, 29, 34, 37, 38, 39, 40, 43, 44, 48, 49, 54, 58, 60, 74, 75, 80, 90, 91, 94, 98, 104, 105, 107, 108, 113, 115, 118, 120, 122, 127, 128, 130, 131, 132, 135, 140, 143, 144, 145, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 178, 181, 195, 197, 209, 211, 218, 226, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 257, 259, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 292, 293, 294, 295], "summar": 2, "process": [2, 6, 8, 14, 32, 90, 91, 127, 247, 250, 251, 263, 268, 269, 270], "It": [2, 5, 6, 9, 14, 16, 37, 43, 119, 135, 240, 241, 243, 247, 248, 249, 250, 251, 268, 270, 271, 276, 283, 285, 286], "code": [2, 5, 7, 9, 12, 14, 37, 135, 234, 243, 244, 247, 248, 249, 253, 263, 268, 269, 271, 278, 282, 287, 289], "do": [2, 5, 9, 11, 14, 16, 17, 122, 132, 135, 243, 247, 249, 251, 267, 268, 269, 270, 276, 283, 289], "doe": [2, 6, 9, 12, 14, 247, 253, 269, 270, 276], "primari": [2, 5, 9, 270, 294], "challeng": 2, "respect": [2, 8, 9, 14, 18, 135, 138, 247, 250, 283, 288, 293], "softwar": [2, 84, 277, 289], "appropri": [2, 5, 6, 14, 25, 79, 132, 135, 234, 237, 240, 241, 242, 244, 245, 247, 251, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 288, 289, 293], "final": [2, 5, 6, 7, 8, 132, 237, 238, 240, 241, 242, 247, 249, 266, 270, 283], "statement": [2, 12, 247, 268], "gener": [2, 3, 5, 7, 8, 12, 14, 18, 25, 26, 27, 28, 32, 46, 74, 118, 135, 160, 168, 224, 234, 236, 237, 240, 241, 242, 244, 247, 251, 263, 270, 271, 276, 283, 285, 286, 289], "regard": 2, "last": [2, 248, 251, 282, 289], "modifi": [2, 8, 9, 13, 14, 24, 36, 50, 113, 115, 135, 145, 165, 237, 240, 241, 247, 249, 251, 269, 270, 271, 282, 289], "your": [2, 4, 5, 6, 11, 132, 234, 250, 251, 263, 267, 270, 271, 272, 273, 276, 277, 283, 289], "appear": [2, 132, 247, 270], "under": [2, 16, 37, 38, 132, 135, 236, 247, 248, 251, 269, 279, 295], "head": [2, 236, 273], "correspond": [2, 6, 7, 118, 132, 135, 137, 234, 247, 251, 263, 282], "discuss": [2, 6, 135, 238, 247, 250, 270, 282], "technic": [2, 7], "issu": [2, 6, 247, 248, 251, 285, 286], "focu": [2, 270], "model": [2, 5, 10, 24, 25, 29, 30, 32, 37, 39, 112, 117, 121, 126, 128, 129, 130, 131, 132, 133, 143, 153, 155, 157, 161, 162, 163, 164, 169, 181, 197, 211, 218, 234, 237, 238, 240, 241, 242, 244, 247, 248, 250, 251, 256, 263, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 282, 285, 286, 288], "To": [2, 5, 6, 12, 16, 17, 118, 132, 135, 234, 247, 250, 251, 263, 264, 270, 272, 273, 274, 275, 276, 277, 279, 283, 289], "extent": [2, 13, 16, 270, 282], "possibl": [2, 8, 11, 70, 135, 236, 238, 247, 248, 249, 250, 270, 279], "other": [2, 5, 6, 7, 8, 9, 10, 13, 16, 18, 37, 38, 40, 48, 56, 105, 128, 171, 238, 242, 243, 244, 245, 249, 250, 251, 258, 267, 268, 269, 271, 272, 282, 283, 295], "clean": [2, 4, 5, 6, 112, 117, 247, 249, 251], "plan": [2, 13, 135, 234, 240, 241, 247, 263, 268, 285, 286, 295], "For": [2, 3, 5, 6, 7, 9, 12, 14, 16, 18, 112, 128, 132, 135, 139, 140, 178, 236, 237, 240, 241, 242, 247, 250, 251, 270, 271, 272, 280, 283, 285, 286, 289, 290, 295], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 128, 129, 130, 131, 132, 133, 135, 234, 244, 247, 249, 250, 251, 263, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 283, 289, 294, 295], "provid": [2, 3, 5, 8, 9, 14, 16, 17, 18, 24, 37, 39, 40, 45, 47, 48, 52, 94, 98, 104, 118, 122, 132, 135, 145, 150, 155, 218, 234, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 263, 266, 267, 268, 269, 270, 271, 276, 280, 283, 288, 289], "intend": [2, 6, 8, 9, 248, 271, 286, 295], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 63, 118, 236, 238, 245, 247, 250, 251, 267, 270, 289], "pde": 2, "solver": [2, 249, 251, 269, 289], "well": [2, 6, 9, 12, 13, 132, 135, 229, 237, 238, 240, 241, 242, 247, 251, 268, 270, 271, 283, 289, 295], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 23, 24, 26, 27, 30, 37, 38, 39, 47, 48, 50, 51, 54, 58, 60, 84, 86, 91, 95, 96, 97, 98, 99, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 118, 120, 122, 123, 126, 127, 132, 137, 140, 145, 148, 155, 177, 181, 184, 190, 197, 200, 204, 211, 214, 230, 234, 236, 237, 238, 240, 241, 242, 243, 244, 249, 250, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 282, 283, 285, 286, 288, 289, 292, 293, 294, 295], "low": [2, 120], "variabl": [2, 5, 13, 18, 19, 24, 37, 40, 47, 48, 56, 67, 74, 80, 84, 94, 95, 99, 102, 118, 120, 121, 122, 127, 132, 135, 137, 138, 139, 140, 141, 143, 145, 151, 155, 158, 164, 166, 170, 174, 178, 184, 186, 190, 192, 195, 198, 200, 202, 204, 206, 209, 212, 214, 218, 226, 232, 233, 236, 242, 247, 250, 251, 257, 258, 263, 267, 270, 272, 273, 274, 275, 276, 277, 280, 282, 288, 289, 290, 293], "declar": [2, 7], "interfac": [2, 10, 224, 225, 226, 232, 233, 250, 251, 269, 270, 279], "sequenc": [2, 5, 14, 238, 246, 247, 250, 268, 270, 289, 294, 295], "If": [2, 5, 6, 7, 8, 9, 12, 14, 17, 18, 24, 34, 37, 39, 44, 45, 48, 49, 50, 52, 60, 90, 91, 92, 94, 105, 118, 120, 128, 129, 130, 131, 132, 133, 135, 145, 150, 155, 195, 209, 218, 237, 247, 249, 250, 251, 264, 267, 268, 270, 271, 276, 277, 279, 283, 288, 289, 293], "want": [2, 5, 6, 11, 14, 16, 17, 50, 132, 135, 247, 249, 251, 267, 270, 271, 276, 277, 287, 289, 295], "math": 2, "syntax": [2, 135, 270], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 251, 268, 270, 289], "2": [2, 6, 13, 14, 17, 38, 132, 135, 169, 236, 237, 245, 248, 251, 257, 264, 270, 271, 273, 276, 279, 282, 283, 285, 286, 289], "2ab": 2, "imag": [2, 7, 18, 119, 120, 243, 270, 288, 293], "keep": [2, 5, 6, 9, 14, 24, 56, 238, 243, 244, 247, 249, 251, 270, 288, 293], "mind": [2, 5, 270], "quit": [2, 245, 247, 249, 270], "small": [2, 9, 43, 132, 243, 247, 270, 272, 273, 278, 279, 287, 289], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24, 33, 34, 37, 39, 43, 44, 48, 56, 79, 90, 91, 94, 107, 108, 112, 123, 132, 135, 137, 145, 150, 155, 195, 209, 218, 226, 229, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 285, 286, 287, 288, 289, 292, 293, 294, 295], "png": [2, 13, 18, 238, 247, 270], "okai": [2, 6, 247, 270], "size": [2, 13, 69, 70, 79, 135, 147, 149, 151, 243, 270, 271, 282, 283, 285, 286, 287, 288, 293], "repo": [2, 5, 6, 132, 234, 263, 269, 270, 290], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 132, 135, 243, 244, 245, 247, 248, 249, 250, 251, 267, 268, 270, 271, 273, 279, 288, 289, 294, 295], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 247, 249, 251, 270], "sourc": [2, 6, 7, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 247, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 270, 271, 272, 273, 274, 275, 276, 277, 289], "project": [2, 5, 6, 7, 66, 98, 104, 234, 250, 251, 263, 264, 270, 271, 272, 273, 276, 289, 290], "manag": [2, 267, 276], "item": [2, 270], "git": [2, 6, 15, 93, 234, 251, 263, 270, 271, 289], "branch": [2, 5, 132, 234, 244, 247, 251, 263, 269, 270, 289], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 247, 251, 276], "block": [2, 249], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 17, 95, 99, 102, 132, 135, 243, 245, 247, 249, 250, 251, 267, 269, 270, 271, 276, 282, 283, 289, 295], "def": [2, 7, 9, 11, 12, 14, 16, 17, 18, 135, 243, 244, 247, 249, 250, 270], "example_funct": 2, "foo": [2, 250], "return": [2, 7, 30, 47, 55, 58, 61, 68, 69, 70, 75, 79, 86, 89, 90, 100, 109, 110, 112, 113, 115, 118, 122, 126, 127, 135, 138, 139, 140, 144, 146, 148, 150, 151, 156, 178, 180, 193, 194, 196, 207, 208, 210, 224, 227, 228, 229, 230, 231, 249, 250, 270, 283], "how": [2, 5, 6, 12, 14, 74, 135, 246, 247, 249, 250, 251, 271, 276, 277], "show": [2, 7, 13, 247, 270, 276, 277, 282, 283, 288, 293], "met": 2, "regress": [2, 237, 238, 248, 268, 269, 270, 282, 283, 289, 294], "configur": [2, 5, 6, 11, 14, 16, 34, 37, 44, 48, 58, 62, 89, 90, 91, 92, 93, 112, 117, 132, 135, 224, 226, 227, 228, 232, 233, 247, 250, 269, 270, 271, 273, 276, 277, 279, 285, 286, 288, 289, 293, 295], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 37, 39, 40, 42, 45, 46, 48, 49, 52, 54, 56, 62, 93, 107, 112, 117, 131, 132, 160, 168, 184, 187, 245, 246, 247, 248, 249, 250, 251, 267, 268, 270, 271, 276, 283, 287, 289, 295], "properli": [2, 128, 130, 131, 270, 271, 289], "addit": [2, 7, 9, 17, 37, 135, 242, 243, 244, 245, 247, 249, 250, 251, 270], "modif": [2, 7, 247, 264], "nightli": [2, 251, 289, 294], "might": [2, 6, 11, 14, 16, 18, 132, 135, 243, 247, 251, 270, 271, 276, 289], "made": [2, 5, 16, 37, 40, 48, 118, 247, 249, 250, 264, 266, 268, 270, 295], "continu": [2, 6, 247, 270], "page": [3, 7, 132, 272], "auto": 3, "summari": [3, 273], "more": [3, 5, 6, 9, 11, 12, 13, 14, 16, 37, 48, 54, 75, 111, 112, 132, 135, 236, 237, 238, 243, 245, 247, 248, 249, 250, 251, 268, 276, 280, 282, 288, 289, 290, 293, 295], "relev": [3, 7, 9, 135, 238, 240, 241, 270, 272, 273, 274, 275, 276, 277, 288, 289, 293], "seaic": [3, 10, 19, 39, 244, 247, 266, 268, 269, 289, 290, 293, 295], "long": [4, 24, 34, 37, 44, 90, 91, 145, 155, 195, 209, 218, 247, 270, 282, 289], "procedur": [4, 132, 251, 270, 277], "conda": [4, 5, 15, 93, 128, 130, 131, 132, 234, 244, 250, 263, 269, 270, 271, 272, 273, 274, 275, 277], "environ": [4, 5, 128, 130, 131, 234, 244, 250, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277], "spack": [4, 5, 128, 130, 131, 267, 269, 270, 272, 273, 274, 275, 276, 277], "compil": [4, 5, 6, 14, 128, 129, 130, 131, 132, 133, 267, 269, 270, 272, 273, 274, 275, 276, 277, 289], "system": [4, 5, 6, 24, 34, 37, 44, 90, 91, 92, 128, 130, 131, 132, 145, 155, 195, 209, 218, 247, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 289], "modul": [4, 5, 9, 10, 12, 14, 15, 26, 27, 28, 66, 86, 113, 128, 130, 131, 132, 135, 143, 243, 244, 245, 247, 249, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 289], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 25, 26, 27, 28, 29, 37, 39, 45, 46, 52, 75, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 109, 111, 112, 113, 115, 117, 118, 119, 120, 128, 129, 130, 131, 132, 133, 157, 160, 163, 168, 175, 181, 197, 211, 218, 226, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 246, 247, 249, 250, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 285, 286, 287, 288, 293, 294], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 25, 26, 27, 28, 37, 46, 48, 81, 93, 105, 106, 109, 111, 112, 117, 118, 128, 129, 130, 131, 132, 133, 135, 160, 168, 234, 237, 238, 240, 241, 242, 246, 247, 249, 250, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 283, 288, 293, 294, 295], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 15, 26, 27, 28, 39, 50, 59, 86, 93, 113, 117, 122, 132, 135, 143, 243, 244, 245, 246, 247, 249, 251, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 289], "Then": [4, 6, 7, 11, 14, 128, 129, 130, 131, 132, 133, 234, 237, 240, 241, 242, 244, 247, 249, 251, 263, 270, 276, 282, 289], "run": [4, 5, 6, 7, 10, 12, 16, 17, 18, 24, 29, 34, 37, 38, 40, 43, 44, 47, 48, 49, 54, 66, 89, 90, 91, 100, 112, 117, 131, 132, 137, 143, 145, 154, 155, 157, 161, 163, 166, 170, 172, 177, 179, 181, 190, 195, 197, 200, 204, 209, 211, 214, 217, 218, 219, 234, 237, 238, 240, 241, 242, 245, 246, 248, 249, 250, 256, 257, 260, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 294, 295], "script": [4, 5, 6, 12, 18, 53, 62, 129, 132, 133, 250, 268, 269, 270, 273, 276], "doc": [4, 7, 270, 277], "cd": [4, 6, 234, 251, 263, 270, 273, 289], "html": [4, 280], "view": [4, 240, 241, 251, 285, 286], "open": [4, 6, 251, 270], "_build": 4, "index": [4, 17, 120, 137, 138, 140, 141, 178, 226, 227, 228, 229, 230, 231, 232, 233, 243, 270], "act": [5, 250, 279], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 132, 153, 154, 237, 240, 241, 242, 244, 247, 249, 270, 271, 276, 282, 283, 285, 286, 287, 289], "These": [5, 6, 8, 9, 14, 19, 37, 132, 135, 234, 236, 244, 247, 249, 250, 251, 263, 264, 269, 270, 271, 276, 282, 286, 289, 294, 295], "user": [5, 6, 7, 8, 9, 11, 14, 16, 37, 48, 49, 56, 62, 93, 132, 135, 237, 238, 240, 241, 242, 247, 248, 249, 267, 268, 270, 273, 276, 277, 280, 282, 283, 290], "describ": [5, 7, 14, 16, 93, 113, 115, 127, 135, 237, 238, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 289], "instal": [5, 6, 132, 251, 270, 276, 277, 289], "abov": [5, 7, 14, 17, 132, 243, 245, 247, 248, 249, 250, 251, 270, 271, 285, 286, 287, 289, 294], "off": [5, 6, 251, 267], "http": [5, 7, 11, 14, 60, 247, 250, 267, 269, 270, 271, 277, 280, 289, 290], "github": [5, 6, 7, 250, 251, 269, 270, 271, 280, 289, 290], "com": [5, 6, 7, 14, 60, 250, 251, 269, 270, 271, 289, 290], "e3sm": [5, 7, 10, 11, 37, 121, 132, 234, 244, 247, 248, 250, 263, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 290], "creat": [5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 24, 37, 39, 43, 48, 56, 60, 67, 68, 74, 75, 80, 94, 101, 111, 112, 117, 121, 132, 135, 137, 143, 144, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 184, 186, 188, 190, 192, 195, 198, 200, 202, 204, 206, 209, 212, 214, 217, 218, 219, 220, 222, 226, 232, 233, 238, 242, 243, 247, 248, 249, 250, 256, 257, 259, 260, 261, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 283, 289, 294], "see": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 128, 130, 131, 132, 237, 238, 241, 247, 251, 267, 270, 271, 276, 280, 281, 282, 283, 287, 288, 289, 290, 292, 294, 295], "mean": [5, 240, 241, 251, 270, 279, 282, 283, 285, 286, 294], "chang": [5, 6, 8, 16, 74, 105, 106, 135, 234, 244, 247, 248, 249, 250, 251, 263, 268, 270, 271, 273, 277, 279, 282, 283, 289, 294], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 32, 37, 43, 48, 49, 50, 66, 100, 107, 132, 135, 237, 240, 241, 242, 244, 247, 248, 249, 250, 251, 267, 268, 269, 270, 271, 276, 277, 289], "tool": [5, 6, 9, 12, 14, 16, 234, 244, 247, 251, 263, 269, 270, 271], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24, 29, 30, 34, 37, 38, 39, 43, 44, 48, 49, 54, 58, 62, 75, 84, 87, 90, 91, 94, 100, 107, 118, 119, 120, 121, 122, 127, 128, 132, 135, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 155, 156, 157, 163, 170, 174, 177, 178, 180, 184, 195, 196, 202, 203, 209, 210, 218, 224, 226, 227, 228, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 257, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 285, 286, 287, 288, 289, 292, 294, 295], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 31, 34, 36, 37, 40, 41, 43, 44, 46, 55, 63, 66, 72, 77, 89, 90, 91, 93, 94, 107, 108, 111, 112, 117, 132, 135, 145, 147, 149, 234, 236, 237, 238, 240, 241, 242, 244, 245, 247, 248, 251, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 290, 294], "support": [5, 6, 8, 13, 16, 37, 135, 226, 232, 233, 236, 247, 250, 263, 268, 269, 270, 271, 273, 277, 279, 282, 287, 295], "machin": [5, 8, 9, 37, 39, 61, 62, 93, 111, 112, 117, 234, 247, 250, 263, 269, 270, 271, 272, 273, 274, 275, 277], "option": [5, 7, 9, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 44, 45, 48, 49, 50, 52, 54, 56, 57, 58, 60, 61, 62, 63, 67, 73, 74, 75, 78, 80, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 107, 108, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 132, 138, 140, 143, 145, 148, 150, 155, 157, 163, 165, 175, 178, 181, 192, 195, 197, 206, 209, 211, 218, 220, 222, 224, 226, 227, 228, 232, 233, 234, 237, 238, 240, 241, 242, 243, 244, 247, 248, 249, 250, 259, 263, 264, 267, 269, 271, 279, 281, 289, 295], "help": [5, 6, 13, 132, 243, 244, 245, 247, 251, 269, 270, 276, 280, 290], "usag": [5, 18, 249, 271, 273, 277], "h": [5, 14, 270], "t": [5, 6, 7, 9, 11, 12, 14, 37, 38, 127, 132, 135, 137, 141, 193, 194, 207, 208, 218, 238, 247, 249, 250, 251, 267, 270, 271, 273, 275, 276, 281, 282, 285, 286, 289, 294, 295], "n": [5, 6, 68, 75, 76, 82, 247, 270, 273, 276, 277, 282, 283, 285, 286, 288, 289, 293], "number": [5, 6, 8, 13, 14, 24, 31, 34, 36, 37, 41, 43, 44, 61, 62, 63, 67, 68, 69, 70, 71, 79, 89, 90, 91, 94, 112, 132, 135, 145, 146, 147, 149, 155, 156, 170, 180, 192, 195, 196, 206, 209, 210, 218, 234, 237, 240, 241, 243, 247, 248, 249, 250, 257, 268, 270, 271, 276, 279, 281, 282, 283, 285, 286, 287, 288, 289, 293], "v": [5, 251, 270, 285, 286, 294], "By": [5, 14, 17, 38, 39, 135, 234, 244, 247, 249, 263, 270, 271, 282, 283, 287], "default": [5, 7, 9, 14, 17, 18, 24, 38, 39, 48, 54, 62, 75, 80, 85, 93, 94, 95, 99, 102, 108, 112, 114, 117, 120, 128, 130, 131, 132, 135, 139, 140, 155, 178, 234, 238, 240, 241, 242, 243, 244, 247, 249, 251, 263, 264, 269, 271, 272, 273, 274, 275, 276, 277, 279, 283, 287, 288, 289, 293, 295], "planar": [5, 9, 120, 135, 236, 244, 247, 270, 285, 286, 287, 288, 293, 294, 295], "baroclinic_channel": [5, 7, 9, 14, 17, 234, 239, 243, 244, 247, 250, 270, 282, 289, 294, 295], "10km": [5, 17, 237, 270, 282, 289, 294, 295], "1": [5, 7, 9, 13, 14, 16, 17, 18, 37, 69, 128, 129, 130, 131, 132, 133, 135, 153, 155, 169, 195, 209, 217, 218, 219, 226, 232, 233, 237, 238, 240, 241, 242, 244, 245, 247, 249, 251, 264, 267, 270, 271, 273, 276, 277, 279, 282, 283, 285, 286, 287, 288, 289], "decomp": [5, 244, 270, 289, 294], "displai": [5, 8, 277], "path": [5, 6, 9, 11, 14, 17, 37, 39, 40, 48, 49, 54, 56, 58, 60, 63, 66, 93, 111, 112, 117, 118, 120, 132, 137, 234, 244, 247, 249, 250, 251, 257, 263, 268, 270, 271, 272, 273, 274, 275, 276, 277, 289, 295], "directori": [5, 6, 8, 9, 11, 12, 14, 15, 18, 24, 37, 39, 40, 45, 46, 48, 49, 52, 54, 56, 60, 62, 93, 94, 107, 111, 112, 117, 118, 132, 145, 153, 154, 155, 158, 160, 161, 162, 164, 166, 168, 169, 170, 172, 184, 218, 234, 237, 244, 246, 247, 248, 249, 250, 251, 257, 259, 261, 263, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 289, 295], "messag": [5, 8, 132, 247, 267, 277], "task_expr": [5, 63], "flag": [5, 6, 132, 247, 250, 267, 268, 270, 271, 280, 282, 289, 290], "suppli": [5, 6, 7, 17, 127, 132, 247, 251, 270], "substr": [5, 132], "regular": [5, 18, 63, 68, 75, 135, 137, 174, 177, 270, 272, 275, 276, 277, 289], "express": [5, 63], "subset": 5, "search": [5, 63, 273], "given": [5, 7, 8, 13, 14, 16, 17, 19, 23, 24, 51, 58, 69, 79, 86, 90, 91, 108, 113, 115, 118, 122, 135, 137, 138, 141, 144, 145, 164, 229, 237, 238, 242, 247, 249, 267, 269, 270, 271, 282, 283, 287, 288, 289, 293, 294], "pass": [5, 8, 9, 12, 13, 14, 17, 79, 118, 119, 135, 243, 244, 247, 249, 250, 251, 268, 289], "similarli": [5, 8, 234, 247, 249, 251, 276, 289], "result": [5, 13, 17, 58, 70, 79, 132, 135, 153, 161, 166, 169, 172, 222, 237, 238, 247, 248, 250, 251, 256, 261, 268, 270, 271, 282, 283, 288, 293, 294], "descript": [5, 7, 270, 271, 280, 290], "short": [5, 154, 217, 219, 247, 248, 249, 250, 260, 270, 282], "core": [5, 7, 8, 14, 24, 34, 36, 37, 39, 41, 43, 44, 62, 89, 90, 91, 117, 132, 135, 136, 145, 153, 154, 217, 219, 237, 242, 243, 244, 247, 248, 249, 250, 264, 268, 270, 271, 272, 273, 274, 275, 276, 277, 289, 294], "underli": 5, "must": [5, 7, 11, 14, 18, 24, 27, 28, 37, 40, 42, 45, 52, 117, 119, 120, 132, 135, 137, 145, 187, 236, 247, 249, 251, 270, 279, 295], "built": [5, 14, 112, 117, 132, 234, 244, 251, 263, 269, 271, 276, 289], "standalon": [5, 14, 131, 132, 244, 251, 268, 269, 276, 290], "mpa": [5, 9, 11, 12, 13, 14, 16, 17, 18, 24, 30, 37, 39, 66, 84, 96, 103, 113, 115, 117, 126, 127, 128, 129, 130, 131, 132, 133, 136, 145, 148, 151, 184, 192, 206, 225, 234, 235, 237, 238, 240, 241, 242, 244, 247, 250, 251, 254, 263, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 285, 287, 288, 289, 290, 293, 294, 295], "befor": [5, 6, 8, 9, 14, 16, 43, 112, 117, 132, 247, 249, 250, 251, 267, 270, 273, 277, 279, 283, 289], "num": 5, "f": [5, 9, 11, 17, 135, 244, 247, 249, 250, 251, 270, 271, 277, 282, 285, 289], "m": [5, 6, 14, 68, 75, 76, 82, 237, 242, 243, 251, 270, 272, 273, 274, 275, 277, 279, 282, 283, 287, 289], "mach": [5, 9, 37, 132, 269, 272, 273, 274, 275, 276, 277, 289], "w": [5, 6, 251, 268, 270, 289], "p": [5, 6, 251, 270, 271, 289], "suite_nam": [5, 8, 108, 110, 112, 117, 289], "copy_execut": [5, 112, 117, 289], "specifi": [5, 6, 14, 16, 17, 18, 39, 132, 236, 247, 251, 266, 270, 271, 277, 282, 283, 288, 289, 293], "altern": [5, 13, 247, 264, 289], "task_numb": 5, "multipl": [5, 9, 14, 132, 235, 248, 249, 250, 251, 270, 276, 282, 289], "test": [5, 7, 8, 9, 18, 48, 49, 54, 62, 89, 90, 91, 110, 118, 132, 136, 137, 142, 143, 152, 154, 155, 161, 162, 164, 165, 166, 167, 169, 174, 175, 176, 177, 179, 182, 184, 185, 188, 189, 190, 191, 192, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 254, 255, 256, 259, 260, 261, 262, 263, 266, 268, 269, 275, 276, 277, 279, 282, 283, 285, 286, 287, 288, 289, 290, 293, 294], "separ": [5, 7, 9, 14, 16, 17, 137, 247, 248, 268, 270, 283, 289], "space": [5, 6, 7, 9, 13, 132, 240, 241, 247, 251, 270, 273, 276, 289], "requir": [5, 6, 8, 14, 24, 34, 37, 38, 44, 94, 135, 145, 155, 195, 209, 218, 234, 243, 244, 247, 248, 249, 250, 251, 263, 264, 267, 269, 270, 271, 276, 279, 280, 288, 289, 290, 293, 295], "few": [5, 13, 14, 24, 34, 37, 44, 90, 91, 132, 145, 237, 238, 240, 241, 242, 247, 250, 270, 271, 276], "basic": [5, 7, 271, 273, 276, 289], "piec": [5, 243, 244, 270], "abl": [5, 128, 129, 130, 131, 133, 135, 247, 248, 251, 270, 276, 289], "place": [5, 6, 14, 119, 132, 243, 247, 249, 264, 270, 276], "download": [5, 6, 8, 10, 37, 39, 46, 132, 160, 168, 249, 250, 251, 271, 289, 294], "some": [5, 6, 8, 9, 10, 11, 13, 14, 48, 132, 236, 238, 243, 245, 247, 249, 250, 251, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 289, 290, 294, 295], "data": [5, 10, 13, 16, 17, 18, 25, 37, 38, 39, 100, 113, 115, 116, 119, 120, 121, 127, 132, 184, 226, 232, 233, 247, 251, 269, 271, 272, 273, 274, 275, 276, 289, 294, 295], "r": [5, 277, 283], "tell": [5, 6, 132, 251], "re": [5, 6, 9, 249, 250, 251, 268, 270, 271, 276, 277, 283], "leav": [5, 18, 238, 271, 283], "unknown": [5, 132, 250, 276], "component_path": [5, 9, 112, 117, 234, 244, 263, 271, 289], "absolut": [5, 9, 37, 39, 56, 112, 117, 234, 244, 247, 251, 263, 289], "landic": [5, 6, 12, 19, 39, 66, 117, 243, 244, 246, 247, 249, 251, 268, 269, 270, 271, 289, 295], "e3sm_submodul": [5, 234, 244, 251, 263, 264, 270], "mali": [5, 132, 244, 247, 251, 268, 270, 271, 289, 295], "dev": [5, 6, 7, 243, 244, 246, 247, 250, 251, 269, 270, 280, 289, 290], "albani": [5, 128, 130, 131, 132, 244, 271, 272, 273, 274, 277, 289], "depend": [5, 14, 16, 18, 37, 38, 46, 105, 106, 132, 135, 137, 160, 168, 177, 249, 251, 268, 269, 270, 271, 276, 277, 279, 283, 289, 295], "whether": [5, 8, 13, 14, 18, 24, 29, 37, 39, 47, 48, 49, 54, 58, 60, 63, 107, 108, 112, 117, 118, 119, 120, 123, 132, 135, 137, 144, 145, 157, 163, 174, 177, 181, 197, 211, 218, 220, 222, 240, 241, 243, 247, 249, 251, 267, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 285, 286, 287, 288, 289, 293], "omega": [5, 30, 121, 145, 148, 192, 206, 234, 244, 250, 251, 268, 270, 280, 285, 286, 289], "config": [5, 7, 8, 10, 11, 12, 13, 16, 18, 20, 24, 25, 28, 29, 30, 37, 38, 39, 45, 48, 50, 52, 58, 61, 62, 73, 75, 78, 89, 90, 91, 92, 93, 109, 111, 112, 117, 119, 121, 122, 123, 124, 126, 127, 143, 145, 148, 150, 157, 163, 164, 174, 175, 181, 192, 197, 206, 211, 224, 226, 227, 228, 232, 233, 234, 237, 238, 240, 241, 242, 243, 247, 248, 249, 250, 251, 263, 264, 267, 269, 279, 289, 295], "point": [5, 6, 9, 53, 60, 97, 132, 234, 236, 243, 244, 249, 250, 251, 263, 270, 271, 276, 289], "much": [5, 6, 14, 247, 270], "config_fil": [5, 9, 112, 117], "work_dir": [5, 11, 37, 48, 62, 93, 111, 112, 117, 118, 247, 249, 270], "recommend": [5, 7, 11, 18, 132, 247, 248, 250, 251, 270, 276], "itself": [5, 6, 7, 9, 37, 45, 52, 243, 244, 246, 247, 249, 251, 270, 289], "temp": 5, "scratch": [5, 6, 251, 270, 273, 277, 289], "avoid": [5, 247, 270], "confus": [5, 14, 250, 251, 270], "output": [5, 7, 8, 10, 12, 13, 14, 17, 19, 24, 37, 38, 40, 46, 47, 48, 54, 83, 84, 91, 94, 107, 108, 118, 135, 137, 141, 143, 145, 151, 160, 168, 170, 171, 177, 184, 190, 200, 204, 214, 225, 237, 238, 240, 241, 242, 249, 257, 258, 266, 268, 271, 277, 283, 289, 294], "compar": [5, 10, 17, 37, 40, 47, 111, 112, 117, 118, 135, 170, 171, 218, 238, 242, 247, 248, 249, 250, 251, 257, 258, 266, 268, 270, 281, 282, 289, 292, 294], "previou": [5, 171, 247, 251, 258, 270, 281, 289, 294], "same": [5, 7, 9, 14, 17, 37, 38, 39, 47, 118, 132, 135, 139, 140, 178, 237, 242, 243, 245, 247, 248, 249, 250, 251, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 287, 289, 294, 295], "baseline_dir": [5, 37, 111, 112, 117, 247], "mani": [5, 6, 8, 9, 135, 243, 245, 247, 249, 250, 251, 269, 270, 282, 288, 293], "valid": [5, 10, 37, 40, 47, 135, 143, 226, 227, 228, 229, 230, 231, 232, 233, 240, 241, 242, 247, 250, 251, 269, 279, 282], "timer": [5, 17, 37, 247, 248, 250], "both": [5, 6, 7, 8, 13, 14, 29, 132, 135, 150, 157, 163, 237, 243, 244, 246, 247, 251, 269, 270, 271, 281, 283, 285, 286, 287], "custom": [5, 6, 8, 13, 16, 56, 58, 112, 117, 234, 244, 251, 263, 271, 277, 289], "give": [5, 14, 17, 132, 247, 250, 251, 270, 271, 289], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 17, 18, 24, 36, 105, 132, 135, 145, 226, 232, 233, 234, 237, 240, 241, 243, 244, 247, 249, 250, 251, 263, 268, 270, 271, 276, 277, 279, 282, 283, 287, 289, 294], "case": [5, 6, 7, 8, 9, 14, 18, 27, 28, 48, 49, 54, 62, 89, 90, 91, 113, 118, 132, 135, 136, 142, 154, 161, 162, 164, 165, 166, 167, 169, 175, 176, 177, 179, 182, 184, 185, 188, 190, 191, 192, 195, 198, 199, 200, 201, 202, 204, 205, 206, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 237, 238, 240, 241, 242, 243, 244, 245, 247, 249, 251, 254, 256, 259, 260, 262, 268, 269, 270, 276, 277, 279, 282, 283, 285, 286, 287, 288, 289, 293, 294], "pre": [5, 132, 251], "copi": [5, 6, 8, 39, 54, 112, 117, 270, 273, 289], "just": [5, 14, 24, 34, 37, 44, 63, 132, 145, 247, 250, 251, 268, 270, 273, 277], "wish": [5, 7, 14, 49, 247, 251, 270, 289], "again": [5, 14, 131, 135, 234, 247, 249, 251, 267, 289], "later": [5, 8, 17, 24, 34, 37, 44, 56, 132, 145, 247, 270, 271], "anticip": [5, 270], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 17, 38, 40, 43, 106, 119, 132, 234, 236, 243, 247, 248, 249, 251, 263, 264, 267, 268, 270, 271, 277, 283, 287, 288, 289, 293, 295], "delet": [5, 112, 117, 250, 251, 267, 289], "fresh": [5, 6, 249, 270], "sinc": [5, 14, 106, 127, 135, 237, 247, 249, 250, 251, 270, 282, 283, 285, 286, 288, 293], "rerun": [5, 251], "c": [5, 6, 112, 132, 247, 251, 272, 273, 274, 275, 276, 277, 281, 289, 294], "test_suit": [5, 110, 247], "build": [5, 6, 10, 13, 14, 71, 76, 128, 129, 130, 131, 133, 234, 244, 249, 250, 263, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277], "mpas_model": [5, 271], "overrid": [5, 13, 14, 42, 43, 46, 50, 56, 71, 74, 75, 76, 135, 160, 168, 187, 247, 249, 250, 270, 271, 277, 289], "baselin": [5, 6, 8, 10, 37, 40, 47, 111, 112, 117, 118, 135, 143, 218, 237, 240, 241, 242, 247, 248, 250, 266, 268, 270, 281, 289], "comparison": [5, 8, 17, 37, 47, 118, 247, 270, 271], "against": [5, 10, 40, 47, 118, 135, 143, 237, 240, 241, 242, 247, 266, 270, 281], "oppos": [5, 14, 29, 135, 137, 144, 157, 163, 174, 177, 181, 197, 211, 270], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 107], "wherea": [5, 12, 247, 268, 270, 281, 295], "typic": [5, 7, 9, 13, 14, 16, 17, 18, 37, 49, 108, 132, 135, 243, 244, 245, 247, 249, 251, 268, 270, 271, 276, 279, 287, 289, 295], "clone": [5, 6, 132, 234, 245, 251, 263, 270, 289], "pickl": [5, 8, 105, 106, 247, 270, 289], "latter": [5, 48, 132], "conveni": [5, 9, 16, 226, 232, 233, 243, 247, 270, 271, 283, 289, 295], "tab": [5, 289], "explicitli": [5, 7, 135, 237, 240, 241, 247, 251, 270, 271, 289], "select": [5, 8, 120, 247, 251, 270], "edit": [5, 7, 251, 270, 289], "steps_to_run": [5, 48, 108, 247, 249, 270, 271], "full_run": [5, 17, 266, 282, 292], "restart_run": [5, 17, 266, 282, 292], "Or": [5, 247, 271], "accomplish": [5, 247, 250], "thing": [5, 128, 129, 130, 131, 132, 133, 135, 243, 247, 250, 269, 294], "take": [5, 6, 7, 11, 13, 14, 56, 132, 135, 243, 247, 248, 249, 251, 270, 283, 294], "preced": [5, 56, 135], "over": [5, 9, 14, 56, 119, 247, 250, 269, 270, 279, 282, 287, 289], "intern": [5, 11, 24, 247, 251, 267], "shouldn": [5, 132, 218, 270], "special": [5, 268, 288], "databas": [5, 6, 8, 11, 16, 19, 24, 37, 39, 145, 247, 276], "polaris_cach": [5, 8, 19, 247], "structur": [5, 13, 30, 148, 246, 249, 269, 270], "without": [5, 39, 247, 250, 251, 270, 271, 275, 276, 285, 286, 288, 289], "redund": [5, 226, 232, 233, 237, 243, 270], "stamp": 5, "revis": [5, 271], "older": 5, "ones": [5, 226, 232, 233, 250, 270], "version": [5, 6, 15, 32, 56, 93, 118, 132, 234, 237, 243, 244, 245, 247, 249, 250, 251, 263, 269, 270, 271, 276, 277, 280, 282, 283, 289, 290], "updat": [5, 7, 8, 24, 26, 28, 33, 34, 43, 44, 114, 131, 132, 147, 218, 234, 237, 238, 240, 241, 247, 263, 267, 269, 270, 289], "cached_fil": [5, 19, 247], "json": [5, 8, 19, 54, 247, 277], "anvil": [5, 6, 132, 247, 271, 276, 289], "chrysali": [5, 6, 132, 247, 270, 271, 276, 289], "onto": [5, 251], "lcrc": [5, 6, 8, 11, 54, 247, 250, 271, 272, 274, 276, 289], "server": [5, 8, 39, 54, 247, 250, 271, 277], "d": [5, 18, 120, 192, 206, 226, 232, 233, 236, 247, 270, 287], "whose": [5, 45, 52, 247], "ocean_cached_fil": 5, "pr": [5, 6, 289, 294], "look": [5, 6, 7, 11, 17, 249, 250, 270, 271], "someth": [5, 7, 95, 99, 102, 132, 251, 270], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 16, 17, 18, 94, 135, 137, 143, 237, 247, 250, 270], "cellwidthvslatlon": [5, 13], "graph": [5, 24, 31, 33, 43, 84, 145, 237, 240, 241, 247, 270, 271], "info": [5, 12, 14, 24, 31, 84, 132, 145, 247, 270], "initial_st": [5, 17, 18, 135, 137, 237, 247, 270], "date_str": [5, 54], "let": [5, 247, 251, 268, 270, 271, 277], "string": [5, 9, 39, 98, 104, 132, 135, 150, 251], "choos": [5, 247, 250, 251, 270, 272, 273, 274, 275, 277, 295], "todai": [5, 54], "dry_run": [5, 54], "saniti": [5, 270], "check": [5, 6, 17, 118, 247, 251, 270, 271, 273, 277, 289, 294], "print": [5, 12, 17, 63, 118, 123, 247, 250, 294], "stdout": [5, 12, 37, 48, 247, 249], "translat": [5, 30, 135, 148], "convert": [5, 9, 13, 14, 135, 150, 247, 270], "namelist": [5, 7, 8, 10, 24, 25, 26, 29, 30, 32, 33, 36, 46, 112, 117, 126, 127, 145, 148, 149, 157, 160, 163, 168, 234, 237, 240, 241, 243, 244, 247, 249, 250, 263, 264, 266, 269, 270, 271, 287], "stream": [5, 7, 8, 10, 24, 27, 29, 32, 46, 121, 126, 127, 149, 157, 160, 163, 168, 234, 236, 237, 238, 240, 241, 242, 243, 244, 247, 249, 250, 263, 266, 271, 288, 293], "yaml": [5, 9, 10, 24, 25, 28, 29, 30, 132, 143, 145, 148, 149, 157, 163, 237, 238, 240, 241, 242, 243, 244, 247, 249, 269, 270, 273, 277], "e": [5, 6, 7, 9, 11, 14, 30, 37, 38, 50, 66, 121, 132, 135, 144, 148, 234, 243, 245, 247, 248, 250, 251, 263, 267, 268, 269, 270, 271, 277, 279, 282, 283, 285, 286, 287, 288, 289, 293, 295], "g": [5, 6, 7, 9, 11, 14, 30, 37, 38, 50, 66, 121, 132, 135, 144, 148, 234, 243, 245, 247, 248, 250, 251, 263, 267, 268, 269, 270, 271, 279, 282, 283, 285, 286, 287, 288, 289, 293], "don": [5, 6, 7, 14, 132, 135, 137, 141, 247, 249, 250, 251, 270, 275, 289, 295], "format": [5, 7, 11, 13, 14, 121, 127, 150, 248, 249, 251, 270, 271, 273], "note": [5, 7, 16, 17, 270, 277], "keyword": [5, 7, 14, 17, 18, 238, 247, 283], "top": [5, 18, 226, 227, 228, 229, 230, 231, 232, 233, 236, 245, 270, 279], "ignor": [5, 98, 104], "get": [5, 6, 7, 9, 11, 12, 14, 16, 24, 25, 26, 27, 28, 37, 48, 49, 55, 61, 69, 89, 100, 107, 132, 135, 139, 140, 145, 178, 243, 246, 247, 249, 250, 251, 268, 271, 279, 289], "pars": [5, 9, 14, 25, 26, 27, 28, 86, 113, 115], "valu": [5, 7, 9, 14, 17, 18, 25, 30, 118, 119, 120, 123, 137, 143, 148, 164, 237, 244, 247, 249, 250, 269, 270, 271, 279, 282, 283, 287], "doesn": [5, 6, 127, 132, 247, 249, 270, 271, 276, 289], "matter": [5, 270], "usabl": 5, "try": [6, 14, 60, 132, 250, 251, 267, 270, 271, 273, 277, 289], "stai": [6, 251], "sync": 6, "mpi": [6, 14, 16, 94, 128, 131, 132, 145, 147, 149, 237, 240, 241, 247, 251, 267, 269, 270, 272, 273, 274, 275, 277, 289], "librari": [6, 14, 128, 132, 251, 270, 272, 273, 274, 275, 276, 277, 289], "netcdf": [6, 132, 137, 141, 151, 242, 271, 272, 273, 274, 275, 276, 277], "fortran": [6, 132, 272, 273, 274, 275, 276, 277], "pnetcdf": [6, 132, 272, 273, 274, 275, 276, 277], "mkl": [6, 132], "linear": [6, 18, 119, 120, 238, 240, 270, 282, 283, 285], "algebra": 6, "lib": [6, 132], "esmf": [6, 251, 289], "scorpio": [6, 251, 276, 289], "forg": [6, 132, 269, 289], "python": [6, 7, 8, 9, 25, 43, 50, 135, 243, 245, 247, 249, 250, 251, 268, 269, 270, 271, 276, 277, 289], "aren": [6, 11, 37, 38, 132, 247, 250, 251, 270, 294], "brief": [6, 7, 270], "tour": 6, "login": [6, 132, 251, 273, 277], "node": [6, 14, 24, 36, 37, 41, 44, 61, 89, 90, 91, 132, 145, 247, 248, 250, 251, 270, 271, 272, 273, 274, 275, 276, 277, 289], "bootstrap": 6, "rest": [6, 151, 231, 279, 283], "u": [6, 247, 270, 276, 277, 285, 286], "unifi": [6, 132, 251, 277], "diagnost": [6, 271, 272, 273, 275, 276, 277, 289], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 135, 247, 249, 250, 251, 270], "cach": [6, 19, 24, 37, 39, 111, 112, 145, 269, 271, 276, 281, 289, 294], "own": [6, 7, 8, 9, 11, 12, 18, 37, 132, 135, 247, 249, 250, 251, 268, 270, 271, 283, 289, 295], "config_machin": 6, "xml": [6, 14, 113, 115, 116, 127, 263], "ey": 6, "master": [6, 234, 263, 290], "happen": [6, 9, 12, 16, 106, 247, 270, 283], "me": [6, 270], "dev_quick_start": 6, "fork": [6, 270], "haven": [6, 270], "mkdir": [6, 251], "involv": [6, 14, 247, 268, 270], "coupl": [6, 267, 269], "alpha": [6, 128, 129, 130, 131, 132, 133, 270], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 17, 18, 37, 135, 243, 245, 247, 248, 249, 250, 251, 270, 271, 294, 295], "stand": 6, "omit": [6, 247, 289], "suffix": [6, 39, 112, 247], "onc": [6, 14, 40, 237, 251, 270, 271, 283, 289], "releas": [6, 132, 250, 269, 276, 280, 289], "spack_for_mache_1": 6, "12": [6, 13, 69, 266, 270, 273, 292], "worktre": [6, 269, 270], "my": [6, 132, 273], "fetch": [6, 251, 270], "out": [6, 8, 9, 13, 56, 88, 92, 120, 132, 143, 245, 247, 250, 251, 271, 279, 289], "checkout": [6, 251, 270], "mambaforg": [6, 251, 270, 276, 289], "manual": [6, 14, 48, 49, 247, 249, 295], "linux": [6, 132, 251, 276], "x86_64": [6, 132], "our": [6, 132, 250, 270, 289], "found": [6, 9, 14, 122, 132, 250, 251, 269, 270, 272, 273, 274, 275, 276, 277], "exist": [6, 7, 9, 30, 37, 40, 60, 113, 115, 117, 132, 148, 237, 247, 249, 250, 251, 267, 270, 276, 294], "miniconda3": [6, 251], "alwai": [6, 7, 9, 12, 56, 132, 135, 140, 178, 234, 244, 247, 249, 250, 251, 263, 268, 270, 271], "pleas": [6, 132, 244, 250, 251, 270, 289], "start": [6, 7, 8, 14, 114, 132, 236, 237, 243, 248, 249, 250, 269, 273, 276, 277, 280, 290, 292], "definit": [6, 14, 270], "defin": [6, 7, 8, 9, 13, 14, 15, 18, 37, 48, 74, 98, 104, 111, 112, 117, 132, 135, 176, 189, 203, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 255, 263, 264, 266, 268, 269, 271, 276, 279, 282, 283, 287, 294, 295], "export": [6, 267], "conda_bas": 6, "home": [6, 17, 132, 251, 270, 271, 273, 276, 277], "readi": [6, 270, 277], "configure_polaris_env": [6, 132, 251, 267, 270], "py": [6, 12, 14, 17, 66, 132, 243, 244, 250, 251, 268, 270, 271], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 132, 251], "tmpdir": [6, 132], "group": [6, 7, 243, 269, 272, 274, 276, 277, 288, 289, 295], "spack_temp": 6, "spack_test": 6, "intel": [6, 132, 276], "gnu": [6, 132, 251, 275, 276, 289], "openmpi": [6, 128, 132, 251, 269, 272, 274, 275, 289], "impi": [6, 128, 132, 272, 275], "recreat": [6, 249, 251, 267], "request": [6, 7, 14, 24, 31, 33, 132, 143, 145, 227, 228, 247, 249, 250, 251, 267, 270, 271, 283], "twice": [6, 270], "deploy": [6, 251], "prebootstrap": 6, "load": [6, 106, 129, 132, 133, 247, 251, 269, 270, 271, 272, 273, 274, 275, 276, 277], "activ": [6, 132, 276, 277, 289], "differ": [6, 14, 16, 17, 56, 71, 76, 118, 132, 135, 152, 155, 164, 234, 237, 243, 244, 245, 247, 248, 249, 250, 263, 268, 270, 271, 273, 277, 282, 283, 285, 286, 288, 293], "On": [6, 7, 13, 132, 251, 276], "tmp": [6, 132], "safe": [6, 14, 247, 251, 282], "strictli": [6, 13, 250, 270], "necessari": [6, 7, 13, 132, 270], "good": [6, 12, 37, 247, 251, 270], "idea": [6, 12, 270], "Be": [6, 277], "awar": [6, 7, 132, 270, 276], "with_petsc": [6, 251], "wa": [6, 8, 47, 58, 118, 132, 247, 249, 250, 251, 267, 268, 270, 271, 279, 289], "limit": [6, 248, 251, 282], "amount": [6, 24, 34, 37, 44, 145, 247, 278, 287], "team": [6, 132, 269], "petsc_support": 6, "txt": [6, 8, 117, 248, 267], "with_albani": [6, 251], "albany_support": 6, "encount": [6, 248, 267], "error": [6, 8, 37, 48, 132, 135, 138, 139, 141, 238, 240, 241, 247, 249, 251, 269, 270, 283, 285, 286], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 17, 29, 37, 48, 57, 157, 163, 181, 197, 211, 247, 249, 250, 251, 270, 271, 289, 294, 295], "attempt": [6, 132, 269, 276], "sh": [6, 128, 129, 130, 131, 132, 133, 251, 267, 270, 272, 273, 274, 275, 277, 289], "build_": 6, "command": [6, 10, 15, 35, 37, 43, 90, 91, 93, 101, 132, 247, 250, 251, 268, 269, 270, 273, 276, 277, 289], "pscratch": 6, "suggest": [6, 132, 267], "correctli": 6, "seem": [6, 14, 270, 273, 277], "switch": [6, 270, 271], "v0": 6, "19": 6, "submodul": [6, 234, 244, 251, 263, 270, 289], "serv": [6, 111, 112, 117, 135, 243, 270], "kind": [6, 270], "whichev": [6, 234, 263, 279], "load_dev_polaris_0": [6, 128, 129, 130, 131, 132, 133, 270], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 234, 250, 251, 263, 270, 289], "pio": [6, 24, 33, 36, 145, 237, 240, 241], "openmp": [6, 24, 34, 37, 44, 91, 128, 130, 131, 145, 155, 195, 209, 218, 247, 270, 272, 273, 274, 275, 277], "ifort": [6, 128, 130, 132, 270, 272, 274], "ac": [6, 270], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 270, 276, 289], "job_script": [6, 270, 289], "bash": [6, 251, 267, 270, 289], "termin": [6, 8, 132, 247, 251, 270], "isn": [6, 9, 238, 247, 250, 270], "ll": [6, 18, 132, 238, 250, 270, 277, 283], "warn": [6, 285, 286], "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 128, 130, 131, 132, 251, 272, 274], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 243, 247, 270, 279], "util": [6, 250, 286], "matrix": 6, "sever": [6, 12, 132, 135, 243, 247, 249, 250, 251, 269, 270, 288, 289, 294], "automat": [6, 7, 9, 12, 14, 18, 132, 135, 247, 250, 251, 270, 271, 272, 274, 275, 276, 277, 289], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 289], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 131, 132, 135, 247, 250, 270], "integr": [6, 135, 164, 237, 250, 270, 282, 283, 288, 293], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 273, 289], "245": 6, "246": 6, "non": [6, 14, 17, 236, 247, 270, 289], "care": [6, 11, 13, 135, 243, 247, 251, 270], "temporari": [6, 132], "begin": [6, 7, 17, 237, 247, 251, 264, 269, 270, 276, 282, 283, 287], "anymor": 6, "best": [6, 16, 132, 247, 251], "hard": [6, 247, 270, 282, 287], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 37, 48, 56, 62, 119, 120, 143, 247, 249, 270, 292], "myst": [7, 270], "tip": [7, 251], "easi": [7, 9, 39, 250, 270], "pull": [7, 132, 250, 251, 270, 271], "guid": [7, 135, 237, 238, 240, 241, 242, 248, 250, 270, 273, 276, 280, 290], "baroclin": [7, 9, 14, 152, 153, 154, 155, 158, 161, 164, 166, 169, 170, 172, 218, 237, 244, 247, 270, 280, 284, 295], "channel": [7, 9, 14, 152, 153, 154, 155, 158, 161, 164, 166, 169, 170, 172, 218, 237, 244, 247, 267, 270, 280, 284, 295], "label": [7, 119, 276, 289], "prepend": 7, "categori": [7, 244, 245, 246, 269, 295], "uniqu": [7, 14, 132, 249, 270], "And": [7, 14, 251, 270], "becom": [7, 247, 249, 270], "who": [7, 251, 270, 271, 277], "citat": 7, "basi": [7, 270], "overview": [7, 269, 273, 277], "common": [7, 12, 14, 43, 48, 132, 237, 238, 240, 241, 242, 243, 247, 248, 249, 250, 267, 268, 270, 271, 276, 277, 288, 289, 293, 294, 295], "characterist": [7, 288, 293], "comment": [7, 248, 271], "appli": [7, 13, 14, 63, 236, 243, 270, 282, 287, 288, 293], "vertic": [7, 18, 140, 178, 217, 236, 237, 238, 240, 241, 242, 247, 271, 278, 280], "grid": [7, 13, 16, 68, 75, 79, 82, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 135, 184, 224, 225, 226, 227, 228, 229, 232, 233, 237, 238, 240, 241, 242, 247, 264, 270, 271], "forc": [7, 242, 266, 270, 295], "specif": [7, 9, 14, 50, 132, 135, 234, 243, 244, 245, 247, 263, 264, 269, 270, 271, 273, 276, 282, 288, 289, 293, 294], "public": [7, 11, 247, 270, 271], "api": [7, 12, 269, 270], "underscor": [7, 270], "md": [7, 270], "eval": 7, "rst": [7, 14, 270], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 244, 250], "compute_cell_count": [7, 135, 237, 240, 241, 270], "dynamic_model_config": [7, 14, 237, 240, 241, 270], "ot": [7, 270], "numpydoc": [7, 270], "text": [7, 8, 282, 283, 287], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 135, 226, 228, 229, 230, 231, 232, 233, 234, 240, 241, 247, 270, 271, 273, 277, 285, 286], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 234, 271, 285, 286], "overli": [7, 270], "ic": [7, 135, 234, 249, 250, 251, 264, 266, 269, 270, 271, 273, 279, 292, 295], "shelf": [7, 135, 243, 250, 270, 271, 279], "draft": [7, 279], "paramet": [7, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 41, 44, 45, 48, 49, 51, 52, 54, 56, 58, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 79, 80, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 135, 137, 138, 139, 140, 141, 143, 144, 145, 148, 150, 151, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 174, 177, 178, 179, 181, 182, 184, 186, 188, 190, 192, 193, 194, 195, 197, 198, 200, 202, 204, 206, 207, 208, 209, 211, 212, 214, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 240, 241, 243, 247, 249, 255, 256, 257, 259, 260, 261, 282, 283, 285, 286, 287], "xarrai": [7, 16, 18, 120, 140, 178, 226, 227, 228, 229, 230, 231, 232, 233, 247, 270], "dataarrai": [7, 140, 178, 192, 193, 194, 206, 207, 208, 227, 228, 229, 230, 231], "sea": [7, 135, 192, 194, 206, 208, 228, 229, 230, 231, 234, 264, 266, 269, 270, 271, 279, 285, 286, 292, 295], "surfac": [7, 135, 192, 194, 206, 208, 228, 229, 230, 231, 234, 236, 242, 266, 270, 271, 279, 282, 285, 286, 287], "height": [7, 135, 192, 194, 206, 208, 228, 229, 230, 231, 234, 270, 271, 279, 285, 286], "mask": [7, 226, 229, 232, 233, 247, 270, 271, 279], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 25, 67, 69, 70, 74, 79, 99, 118, 120, 135, 137, 138, 139, 140, 143, 144, 150, 153, 154, 155, 158, 161, 164, 166, 169, 174, 177, 178, 179, 190, 192, 193, 194, 195, 198, 200, 202, 204, 206, 207, 208, 209, 212, 214, 218, 247, 249, 270], "densiti": [7, 13, 135, 270], "seawat": 7, "displac": 7, "land": [7, 135, 234, 249, 269, 270, 271, 279], "landicedraft": 7, "equal": [7, 242, 247, 250, 287], "entri": [7, 53, 87, 112], "line": [7, 10, 35, 37, 90, 91, 101, 132, 247, 248, 250, 251, 269, 289], "type": [7, 14, 16, 17, 18, 25, 96, 103, 127, 132, 135, 138, 217, 219, 238, 243, 247, 249, 250, 251, 263, 267, 268, 270, 271, 282, 283, 285, 286, 287, 288, 294], "side": 7, "colon": 7, "doubl": [7, 14, 135, 247, 248, 270], "back": [7, 270, 273, 289], "quot": 7, "interfer": 7, "arg": [7, 12, 37, 90, 91, 247], "next": [7, 132, 237, 241, 270, 279, 289], "indent": [7, 247], "obviou": [7, 14, 270], "none": [7, 9, 14, 17, 24, 27, 28, 34, 37, 38, 39, 40, 44, 45, 48, 49, 52, 54, 56, 58, 62, 63, 65, 67, 74, 80, 84, 93, 94, 95, 98, 99, 102, 104, 108, 112, 113, 117, 118, 119, 120, 122, 126, 135, 137, 138, 139, 140, 141, 143, 145, 146, 150, 155, 156, 178, 180, 195, 196, 206, 209, 210, 218, 247, 249, 259, 270, 279, 282, 283, 285, 286, 287, 288, 292], "els": [7, 8, 132, 247, 249, 270], "further": [7, 243, 249, 277, 288, 293], "rais": [7, 9, 17, 37, 40, 58, 60, 135, 247, 250, 270], "list_cas": 8, "list_machin": [8, 250], "list_suit": 8, "anywher": [8, 12, 132, 251], "object": [8, 12, 16, 23, 26, 27, 28, 49, 51, 86, 105, 106, 109, 113, 121, 122, 126, 127, 143, 192, 206, 244, 249, 250, 270], "contrast": 8, "read": [8, 19, 26, 27, 28, 37, 38, 48, 59, 85, 86, 121, 236, 247, 249, 270], "properti": [8, 236, 247, 276, 283], "setup_suit": 8, "write": [8, 12, 13, 15, 18, 105, 121, 225, 247, 249, 251, 266, 270], "proven": [8, 10, 56, 269, 271], "save": [8, 18, 58, 82, 132, 237, 238, 243, 247, 249, 270, 276, 281, 282], "target": [8, 11, 16, 17, 24, 39, 60, 62, 94, 132, 135, 145, 237, 240, 241, 247, 249, 270, 283], "minimum": [8, 62, 120, 135, 139, 145, 237, 240, 241, 247, 270, 271, 279, 282, 283, 285, 286, 287, 288, 293], "determin": [8, 9, 13, 14, 18, 39, 43, 127, 132, 135, 149, 237, 238, 240, 241, 247, 270, 279, 282, 283, 285, 286, 288, 289, 293], "maximum": [8, 17, 118, 120, 270, 271, 279], "product": 8, "ntask": [8, 9, 14, 16, 24, 34, 37, 41, 44, 90, 91, 94, 135, 145, 155, 195, 209, 218, 247, 249, 270], "cpus_per_task": [8, 14, 37, 41, 44, 90, 91, 247], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 270, 279, 282, 283, 285, 286, 287, 288], "min_task": [8, 9, 14, 16, 24, 34, 37, 44, 90, 91, 94, 135, 145, 155, 195, 209, 218, 247, 270], "min_cpus_per_task": [8, 14, 37, 44, 90, 91, 247], "fewest": 8, "least": [8, 13, 244, 251, 282], "fail": [8, 14, 17, 24, 34, 37, 44, 58, 132, 135, 145, 155, 195, 209, 218, 247, 269, 270, 271, 283, 285, 286], "run_task": [8, 247, 249], "run_single_step": 8, "oper": [8, 46, 132, 160, 168, 247, 249, 294], "log": [8, 10, 18, 37, 48, 91, 118, 119, 120, 247, 249, 251, 269, 289], "figur": [8, 242, 243, 245, 247, 271], "cpu": [8, 132, 247, 270, 289], "method": [8, 9, 13, 14, 16, 17, 19, 24, 29, 30, 37, 38, 42, 43, 48, 49, 50, 56, 57, 66, 67, 71, 74, 75, 76, 80, 81, 94, 100, 121, 135, 136, 137, 139, 140, 143, 145, 148, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 169, 170, 172, 174, 177, 178, 179, 181, 182, 184, 186, 187, 188, 190, 192, 195, 197, 198, 200, 202, 203, 204, 206, 209, 211, 212, 214, 217, 218, 219, 220, 222, 238, 240, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 261, 270, 283, 288, 293], "retriev": [8, 267], "store": [8, 50, 132, 135, 240, 241, 247, 270, 289], "case_output": [8, 12], "individu": [8, 9, 18, 244, 249, 250, 270, 276, 277, 282, 289, 295], "overal": 8, "whole": [8, 48, 151, 243, 249, 250, 270, 289], "window": 8, "update_cach": 8, "_cached_fil": [8, 247], "origin": [8, 54, 251, 270, 289], "enabl": [8, 18, 242, 247, 267, 271, 277, 285, 286], "consum": [8, 247, 249, 270, 294], "faster": [8, 251], "parser": [9, 45, 52, 56, 164, 174], "mpas_tool": [9, 12, 13, 79, 237, 240, 241, 242, 247, 249, 270], "mpasconfigpars": [9, 247, 249], "polarisconfigpars": [9, 20, 37, 45, 48, 52, 58, 61, 62, 89, 92, 93, 109, 119, 135, 164, 174, 192, 206, 224, 226, 227, 228, 232, 233, 270], "certain": [9, 17, 56, 132, 247, 251, 271, 288, 293], "filepath": [9, 45, 52, 56, 135], "overridden": [9, 30, 57, 135, 148, 270], "algorithm": [9, 14, 135, 218, 237, 240, 241, 247, 270], "featur": [9, 14, 250, 251, 268, 270, 271, 282, 287], "accommod": [9, 24, 34, 37, 44, 90, 91, 145], "add_from_packag": [9, 135, 247, 249, 250, 270], "content": [9, 14, 112, 113, 115, 117, 127, 135, 243, 245, 247, 250, 266, 270, 289, 292], "inertial_gravity_wav": [9, 234, 239, 244, 249, 285, 294], "inertialgravitywav": [9, 240, 249], "import": [9, 11, 12, 13, 16, 17, 18, 135, 243, 244, 247, 249, 250, 251, 268, 270], "__init__": [9, 16, 17, 19, 24, 37, 48, 56, 66, 67, 74, 80, 94, 121, 135, 136, 137, 143, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 174, 177, 179, 182, 184, 186, 188, 190, 192, 195, 198, 200, 202, 204, 206, 209, 212, 214, 217, 218, 219, 220, 222, 243, 244, 247, 249, 250, 254, 256, 257, 259, 260, 261, 268, 270], "super": [9, 14, 16, 17, 135, 244, 247, 249, 250, 270], "cfg": [9, 50, 135, 244, 249, 250, 270, 271, 289], "except": [9, 37, 40, 58, 247, 250, 270], "behavior": [9, 14, 108, 247, 248, 251, 270], "noth": [9, 132, 267, 283], "particular": [9, 132, 243, 251, 269, 273, 276, 289], "fine": [9, 249, 270, 287], "_get_basic_config": 9, "larg": [9, 247, 249, 270, 272], "those": [9, 14, 48, 118, 132, 135, 237, 249, 250, 251, 269, 270, 283, 288, 293, 294], "configpars": [9, 90, 91], "getinteg": 9, "getfloat": [9, 12, 14, 16, 135, 247, 270], "getboolean": [9, 247, 270], "implement": [9, 244, 247, 250, 282, 283, 285, 286], "getlist": [9, 249, 270], "comma": [9, 283], "integ": [9, 13], "boolean": [9, 120, 229], "etc": [9, 14, 114, 117, 244, 247, 282], "getexpress": 9, "tupl": 9, "rang": [9, 120, 270, 283], "numpi": [9, 13, 68, 75, 76, 82, 119, 135, 151, 224, 225, 247, 270], "linspac": [9, 18, 238, 283], "arang": 9, "arrai": [9, 68, 75, 76, 82, 119, 135, 224, 225, 227, 228, 229, 230, 270], "sens": [9, 269, 270], "set_shared_config": [9, 249], "intuit": 9, "resolution_to_subdir": [9, 244], "rpe": [9, 172, 244, 250, 270, 289], "resdir": [9, 244], "config_filenam": [9, 37, 48, 109, 247, 249], "indir": [9, 24, 37, 48, 94, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 218, 220, 222, 244, 247, 257, 259, 261], "add_task": [9, 243, 244], "most": [9, 12, 43, 132, 234, 243, 244, 247, 250, 251, 263, 270, 271, 276, 277, 279, 280, 290, 295], "construct": [9, 14, 136, 224, 226, 227, 228, 232, 233, 236, 242, 244, 249, 254, 270, 282], "bring": [9, 135, 270], "add_step": [9, 249, 270], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 155, 166, 237, 247, 270], "baroclinic_channel_rp": 9, "viscos": [9, 14, 155, 164, 166, 237, 247, 250, 270, 282], "dtype": [9, 249, 270], "nu_": 9, "openmp_thread": [9, 14, 24, 34, 37, 44, 91, 145, 155, 195, 209, 218, 247, 249, 270], "add_yaml_fil": [9, 14, 24, 135, 247, 249, 270], "One": [9, 13, 270, 289, 294], "advantag": [9, 14, 132, 249, 250, 270, 276], "track": [9, 24, 247, 249, 251], "associ": [9, 13, 14, 18, 135, 226, 232, 233, 237, 247, 249, 251, 268], "while": [10, 16, 18, 236, 237, 247, 267, 270], "meant": [10, 250, 271], "simplifi": 10, "verifi": [10, 248, 271], "io": [10, 247, 249, 250, 269, 270, 271, 280, 290], "lot": [11, 135, 247, 250, 270], "o": [11, 12, 113, 115, 127, 132, 250, 251, 270, 271, 289], "handl": [11, 12, 251, 270, 276], "lower": [11, 249, 270, 282], "directli": [11, 13, 14, 16, 37, 245, 247, 250, 268, 269, 270, 273], "readm": [11, 249], "importlib": 11, "resourc": [11, 14, 34, 41, 44, 59, 89, 90, 91, 146, 156, 180, 196, 210, 218, 237, 240, 241, 247, 249, 270], "global_ocean": [11, 14, 247, 249, 250, 251, 271, 289], "files_for_e3sm": [11, 247, 249, 271], "str": [11, 14, 19, 24, 25, 26, 27, 28, 31, 37, 38, 39, 40, 45, 48, 49, 52, 54, 56, 58, 60, 61, 62, 63, 67, 74, 80, 84, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 124, 126, 127, 135, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 177, 178, 179, 182, 184, 186, 190, 195, 198, 200, 204, 209, 212, 214, 218, 220, 222, 225, 247, 249, 257, 259, 261, 270], "did": [11, 268, 270], "add_input_fil": [11, 16, 17, 38, 247, 249, 270], "collect": [11, 97, 136, 244, 246, 254, 268, 270], "whenev": [11, 247, 270], "flexibl": [11, 135, 247, 249, 251, 270], "No": [11, 269, 285, 286], "step_dir": 11, "database_root": [11, 132, 247, 271, 272, 273, 274, 275, 276, 277, 289], "download_path": 11, "join": [11, 270], "bathymetry_databas": [11, 247, 271], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 229, 243, 247, 270, 279, 282, 283, 285, 286, 287, 288, 295], "url": [11, 39, 58, 247, 267, 271], "web": [11, 247, 271], "anl": [11, 247, 271], "gov": [11, 247, 267, 271, 273, 277], "mpas_standalonedata": [11, 132, 271, 276], "dest_path": [11, 58], "remot": [11, 39, 251, 269], "bathymetri": [11, 247, 271], "strategi": 12, "stderr": [12, 37, 48, 247, 249], "loggingcontext": 12, "check_cal": [12, 247], "won": [12, 250, 270, 271], "logger": [12, 17, 37, 48, 66, 91, 118, 247, 249, 270], "full": [12, 37, 90, 108, 227, 228, 237, 247, 249, 251, 266, 269, 270, 276, 279, 281, 282, 283, 285, 286, 287, 288, 289], "although": [12, 135], "captur": 12, "explicit": [12, 250], "go": [12, 45, 52, 220, 222, 243, 247, 249, 250, 251, 270, 277], "subprocess": [12, 37, 90, 91, 107, 247, 250, 267], "produc": [12, 14, 16, 18, 37, 38, 40, 54, 135, 141, 153, 161, 169, 237, 238, 240, 241, 242, 247, 250, 251, 256, 266, 270, 285, 286, 289, 292], "otherwis": [12, 132, 247, 249, 270, 272, 273, 274, 275, 276, 277, 282], "intent": 12, "desir": [12, 13, 14, 17, 18, 118, 135, 247, 248, 249, 270, 271, 289], "trick": [12, 247], "direct": [12, 13, 14, 79, 192, 206, 237, 240, 241, 270, 277, 282, 285, 286], "snippet": [12, 270], "dome": [12, 66, 243, 247, 249, 289, 295], "setup_mesh": [12, 247], "setupmesh": [12, 247, 249], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 247], "landice_grid": [12, 247, 270], "l": [12, 118, 270, 277], "quasiuniformsphericalmeshstep": [13, 135, 249], "icosahedralmeshstep": [13, 135, 249], "jigsaw": [13, 67, 71, 73, 74, 76, 78, 80, 135, 137, 174, 177, 247], "complex": [13, 75, 249, 250, 270], "build_cell_width_lat_lon": [13, 74], "opt": [13, 80], "make_jigsaw_mesh": [13, 74], "icosahedr": [13, 67, 69, 137, 144, 174, 177, 238, 249, 283], "significantli": [13, 279], "smooth": 13, "cell": [13, 14, 18, 67, 68, 69, 70, 74, 75, 76, 79, 82, 96, 103, 135, 145, 146, 156, 180, 192, 194, 196, 206, 208, 210, 226, 227, 228, 229, 232, 233, 237, 240, 241, 243, 264, 279, 282, 283, 285, 286, 287, 288, 292], "quasi": [13, 74, 238, 249, 271, 283, 288, 293], "hand": [13, 99, 250], "restrict": [13, 270, 288], "subdivis": [13, 67, 68, 69, 70, 71], "icosahedron": [13, 68, 69, 70, 71], "tabl": [13, 251, 276, 289], "approxim": [13, 67, 69, 70, 74, 135, 146, 156, 180, 196, 210, 237, 240, 241, 251, 270], "width": [13, 67, 68, 69, 74, 75, 76, 82, 270, 282], "km": [13, 14, 67, 68, 69, 70, 74, 75, 76, 79, 82, 135, 143, 144, 153, 154, 155, 158, 161, 162, 164, 166, 169, 179, 195, 198, 202, 209, 212, 237, 238, 240, 241, 247, 270, 271, 282, 283, 285, 286, 287, 288, 293, 295], "5": [13, 14, 69, 132, 135, 164, 237, 238, 247, 248, 250, 267, 270, 271, 282, 283, 288, 289, 293], "240": [13, 69, 135, 238, 271, 283], "6": [13, 69, 247, 270, 280, 282, 287, 289, 290], "120": [13, 69, 135, 248, 283], "7": [13, 69, 132, 270, 277, 283, 289], "60": [13, 69, 135, 238, 279, 283], "8": [13, 69, 132, 237, 251, 270, 271, 282, 283, 285, 286, 289], "30": [13, 14, 69, 135, 243, 270, 277, 282, 287, 288, 293], "9": [13, 18, 69, 132, 238, 270, 283, 289], "15": [13, 14, 69, 237, 270, 282, 283, 287, 288, 289, 293], "11": [13, 69, 132, 270, 289], "3": [13, 69, 132, 135, 237, 247, 248, 251, 267, 270, 271, 276, 277, 279, 282, 283, 285, 286, 288, 289], "13": [13, 69, 270, 282], "94": [13, 69], "spherical_mesh": [13, 75], "cell_width": [13, 67, 68, 69, 70, 74, 75, 76, 82], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 82, 119, 120, 135, 137, 141, 166, 172, 184, 222, 237, 238, 240, 241, 261, 283, 285, 286, 292, 295], "plot_cell_width": 13, "cell_width_filenam": [13, 82], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": 13, "lat": [13, 16, 68, 74, 75, 76, 82, 95, 97, 99, 102, 119, 184, 238, 271, 283], "lon": [13, 16, 68, 74, 75, 76, 82, 95, 97, 99, 102, 119, 184, 238, 271, 283], "sphere": [13, 238, 283], "vtk_lat_lon": 13, "far": [13, 132, 226, 232, 233, 250, 270], "But": [13, 132, 243, 247, 250, 251, 270, 271, 276], "hexagon": [13, 79, 270, 285, 286], "planar_hex": [13, 79, 237, 240, 241, 242, 247, 270], "make_planar_hex_mesh": [13, 79, 237, 240, 241, 242, 247, 270], "x": [13, 18, 68, 75, 76, 79, 82, 98, 104, 120, 151, 192, 206, 247, 270, 282, 285, 286, 287], "y": [13, 14, 18, 79, 98, 104, 120, 192, 206, 237, 240, 241, 247, 270, 277, 282, 285, 286], "nx": [13, 79, 243, 247, 270, 287], "ny": [13, 79, 243, 247, 270, 287], "dc": [13, 243, 247, 270], "distanc": [13, 79, 270, 282], "adjac": [13, 279], "center": [13, 18, 79, 192, 206, 243, 270, 279, 282], "admittedli": 13, "oddli": 13, "period": [13, 236, 237, 240, 241, 247, 270, 282, 283, 285, 286], "nonperiodic_x": [13, 247, 270], "nonperiodic_i": [13, 247, 270], "consider": [13, 226, 232, 233, 236, 264], "compute_planar_hex_nx_ni": [13, 247, 270], "lx": [13, 79, 247, 270, 282, 285, 286, 287], "ly": [13, 79, 247, 270, 282, 287], "explan": 13, "subtleti": 13, "account": [13, 79, 251, 270, 272, 273, 275, 276, 277, 289], "behav": 13, "stagger": [13, 79], "physic": [13, 79, 260, 266, 270], "np": [13, 18, 238, 247, 270, 283], "sqrt": [13, 285], "domain": [13, 24, 31, 79, 120, 135, 145, 151, 236, 243, 264, 270, 282, 283, 285, 286, 287, 288, 293, 295], "extra": [13, 251], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 247, 270], "max": [13, 135, 247, 270, 282, 283], "int": [13, 14, 24, 25, 34, 37, 44, 61, 62, 63, 67, 68, 69, 70, 71, 79, 90, 91, 94, 120, 137, 138, 140, 141, 145, 146, 155, 156, 178, 180, 195, 196, 209, 210, 218, 247, 270, 287], "ds_mesh": [13, 18, 120, 247, 270], "creation": [13, 247, 271], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 24, 34, 37, 44, 90, 91, 145, 243, 247, 250, 270], "distant": 13, "descend": [14, 16, 135, 238, 243, 244, 247, 249, 250, 270], "modelstep": [14, 135, 247, 249, 270], "update_pio": [14, 24, 145], "make_graph": [14, 24, 145], "At": [14, 37, 48, 245, 246, 249, 270], "set_model_resourc": 14, "thread": [14, 24, 34, 37, 43, 44, 48, 91, 145, 155, 195, 209, 218, 244, 247, 248, 268, 270, 271, 273, 277, 289, 294], "prefix": [14, 39, 132, 135, 140, 178, 249, 251, 271], "end": [14, 143, 247, 249, 250, 251, 266, 268, 270, 273, 282, 283, 285, 286, 287, 292], "yml": 14, "reason": [14, 16, 43, 132, 247, 250, 270, 294], "add_namelist_fil": [14, 24, 135, 247, 249], "add_model_config_opt": [14, 24, 135, 247, 249, 270], "add_streams_fil": [14, 24, 135, 247, 249], "themselv": [14, 250, 269], "question": [14, 247, 271], "never": [14, 132, 268], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 135, 270], "config_run_dur": [14, 135, 249, 270], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 48, 153, 268, 270], "config_block_decomp_file_prefix": [14, 270], "time_integr": [14, 135, 270, 283], "config_time_integr": [14, 135], "rk4": [14, 135, 250, 283], "filename_templ": [14, 135, 270], "restart": [14, 17, 48, 135, 238, 240, 241, 242, 244, 248, 250, 256, 257, 266, 268, 270, 289, 294], "output_interv": [14, 135, 270, 283], "0030_00": 14, "clobber_mod": [14, 135, 270], "truncat": [14, 135, 270], "reference_tim": [14, 135], "0001": [14, 135, 270], "01_00": [14, 135, 264, 270], "tracer": [14, 18, 174, 219, 220, 222, 237, 238, 240, 241, 242, 270, 283, 285, 286, 287], "xtime": [14, 135, 270], "normalveloc": [14, 17, 18, 135, 171, 207, 236, 237, 240, 241, 242, 247, 270, 287], "layerthick": [14, 17, 135, 171, 226, 230, 231, 232, 233, 237, 240, 241, 242, 247, 270], "refzmid": [14, 226, 232, 233, 247, 270], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 270], "clariti": [14, 247], "global_converg": [14, 238, 249, 270, 281], "substitut": 14, "config_write_output_on_startup": [14, 270], "0000_00": [14, 270], "config_use_mom_del2": [14, 270], "config_implicit_bottom_drag_coeff": [14, 270], "0e": [14, 286, 287], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 270], "config_cvmix_background_viscos": [14, 270], "worri": 14, "sometim": [14, 226, 232, 233, 243, 245, 247, 249, 268, 270, 294], "togeth": [14, 17, 132, 243, 268, 270, 294], "overkil": 14, "reli": [14, 247, 249, 270], "along": [14, 18, 132, 237, 247, 269, 270], "dict": [14, 19, 25, 27, 28, 30, 37, 41, 48, 86, 87, 89, 93, 94, 110, 112, 113, 119, 121, 122, 123, 135, 137, 143, 148, 177, 247, 249, 270], "config_mom_del2": [14, 237, 247, 270], "precis": [14, 135, 247, 270], "bool": [14, 24, 25, 29, 37, 39, 47, 48, 49, 54, 58, 60, 63, 107, 108, 112, 117, 118, 119, 123, 135, 137, 144, 145, 157, 163, 174, 177, 181, 197, 211, 218, 220, 222, 270], "possibli": [14, 37, 48, 244, 247, 249, 251, 270], "at_setup": [14, 29, 157, 163, 181, 197, 211, 270], "being": [14, 29, 37, 48, 107, 112, 118, 132, 135, 157, 163, 181, 197, 211, 247, 249, 250, 251, 270, 279], "dt": [14, 135, 155, 218, 247, 270, 282, 283, 285, 286, 288, 293], "proport": [14, 135, 270, 279, 282, 283, 285, 286, 288, 293], "dt_per_km": [14, 135, 238, 270, 282, 285, 286, 288, 293], "stackoverflow": [14, 60, 270], "1384565": [14, 270], "7728169": [14, 60, 270], "config_dt": [14, 135, 270], "strftime": [14, 270], "gmtime": [14, 270], "run_time_step": [14, 155, 247, 270], "durat": [14, 135, 237, 240, 241, 242, 248, 270], "run_second": [14, 270], "btr_dt": [14, 135, 155, 218, 247, 270, 282], "btr_dt_per_km": [14, 135, 270, 282], "config_btr_dt": [14, 135, 270], "bit": [14, 132, 250, 268, 270, 282, 289], "complic": [14, 250, 251, 270], "slightli": [14, 251], "sophist": 14, "immutable_stream": [14, 270], "var_struct": [14, 263], "var": [14, 114, 263, 270], "var_arrai": [14, 263], "tag": [14, 269], "taken": [14, 24, 145, 238, 247, 270, 277, 289], "past": 14, "experi": [14, 132, 250, 279], "difficult": [14, 132, 276], "synchron": [14, 269], "out_nam": 14, "equival": [14, 251, 270, 272], "template_replac": [14, 27, 28, 135], "treat": [14, 248, 250], "jinja2": [14, 27, 28, 113, 143], "render": [14, 27, 28, 113], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 247, 250, 251, 271, 289], "qu240dynamicadjust": 14, "adjust": [14, 132, 135, 234, 271], "interv": [14, 150, 283], "spin": 14, "reus": [14, 247, 250, 251, 270, 271, 289], "qualit": 14, "forgotten": 14, "broken": [14, 247, 250], "immedi": [14, 66, 251, 270], "miss": [14, 247, 270, 271], "detect": [14, 18, 271, 272, 274, 275, 276, 289], "gpmeti": [14, 271], "divid": [14, 279], "partition_graph": [14, 24, 145], "circumst": [14, 17, 37, 38, 247, 270], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 267, 270, 288, 293], "v1": [14, 279], "better": [14, 16, 132, 289], "v2": [14, 271, 279], "littl": [14, 250, 251, 269, 270], "feel": [14, 132, 247, 270], "runtime_setup": [14, 16, 34, 44, 237, 240, 241, 249], "yourself": [14, 270, 276], "culler": 14, "cull": [14, 237, 240, 241, 247, 270], "model_step": 14, "make_graph_fil": 14, "field": [14, 17, 82, 84, 120, 135, 138, 139, 140, 178, 184, 226, 232, 233, 236, 237, 240, 241, 242, 270, 282, 283, 285, 286], "weight": [14, 16, 84, 226, 232, 233, 270, 279], "weight_field": [14, 84], "frequent": [16, 234, 263], "observ": [16, 269], "dataset": [16, 120, 192, 206, 226, 232, 233, 247, 270], "region": [16, 18, 269, 271], "pyremap": [16, 100], "interpol": [16, 94, 238, 271], "hood": 16, "esmf_regridweightgen": 16, "mappingfilestep": [16, 18], "woa": 16, "mytestcas": 16, "__int__": 16, "make_map": 16, "64": [16, 279], "bilinear": [16, 94, 238, 283, 288, 293], "filenam": [16, 17, 37, 39, 40, 48, 88, 95, 96, 97, 98, 102, 103, 104, 109, 118, 122, 124, 247, 249, 251, 270], "woa23_decav_0": 16, "25_extrap": 16, "20230414": 16, "initial_condition_databas": [16, 271], "destin": [16, 94, 95, 96, 97, 98, 99, 100], "src_from_lon_lat": 16, "lon_var": [16, 95, 97, 102], "lat_var": [16, 95, 97, 102], "dst_from_mpa": 16, "mesh_nam": [16, 95, 96, 97, 98, 99, 102, 103, 104, 138, 140, 144, 178, 184, 186, 249], "qu60": 16, "subclass": [16, 71, 74, 75, 76, 81, 135, 270], "src_": 16, "dst_": 16, "pick": [16, 105, 106], "vizmap": [16, 174, 184, 238, 249], "128": [16, 248, 273, 274, 277], "cosine_bell_viz": [16, 18, 238, 283, 288, 293], "dlon": [16, 99, 238, 283, 288, 293], "dlat": [16, 99, 238, 283, 288, 293], "remap_method": [16, 238, 283, 288, 293], "src_from_mpa": 16, "dst_global_lon_lat": 16, "lon_min": [16, 99], "With": [16, 251], "approach": [16, 247, 250, 251, 267, 270, 279], "perhap": [16, 18, 40, 243, 245], "cover": [16, 264, 270], "nearli": [16, 247, 249, 268, 269, 270], "workflow": [16, 247, 251], "critic": [17, 270], "easiest": [17, 132, 251], "validate_var": [17, 37, 40, 135, 143, 218, 247], "meth": 17, "add_output_fil": [17, 38, 247, 249, 270], "temperatur": [17, 171, 236, 237, 241, 242, 247, 266, 270, 282, 283, 287, 288, 293], "salin": [17, 171, 236, 237, 242, 247, 270, 282, 283, 287, 288, 293], "done": [17, 34, 44, 247, 249, 251, 270, 289], "compare_vari": [17, 270], "filename1": [17, 118, 270], "filename2": [17, 118, 270], "compact": [17, 270], "output_full_run": 17, "output_restart_run": 17, "all_pass": [17, 118], "valueerror": [17, 250], "quiet": [17, 107, 108, 118, 123], "report": 17, "threshold": [17, 135, 283, 285, 286], "l1": [17, 118], "00000000000000e": 17, "l2": [17, 118, 135, 138, 139, 238, 283], "l_infin": 17, "linf": [17, 118], "test_nightly_latest": 17, "threads_test": 17, "1thread": [17, 237, 282], "2thread": [17, 282], "test_20210616": 17, "further_valid": 17, "zero": [17, 227, 228, 229, 230, 231, 236, 237, 242, 270, 283, 287], "l1_norm": [17, 118], "l2_norm": [17, 118], "linf_norm": [17, 118], "nonzero": [17, 118], "solut": [17, 131, 138, 140, 178, 192, 193, 194, 202, 203, 204, 206, 207, 208, 209, 212, 214, 238, 240, 241, 248, 267, 270, 280, 284, 285], "aspect": [18, 270], "routin": 18, "plot_horiz_field": [18, 247, 270], "patch": [18, 120, 270], "style": [18, 135, 269, 270], "edg": [18, 96, 99, 103, 120, 192, 193, 206, 207, 236, 270], "polygon": 18, "character": 18, "accordingli": [18, 92], "final_normalveloc": [18, 270], "t_index": [18, 120, 270], "vmin": [18, 120, 238, 270, 283], "max_veloc": [18, 270], "vmax": [18, 120, 238, 270, 283], "cmap": [18, 120, 247, 270], "cmo": [18, 247, 270], "balanc": [18, 247, 270], "show_patch_edg": [18, 120, 247, 270], "globe": [18, 283], "plot_glob": 18, "plot_land": [18, 119], "disabl": [18, 236, 283, 295], "contin": [18, 119], "overlain": 18, "cmocean": [18, 247, 270], "noqa": [18, 66, 247, 270], "f401": [18, 247, 270], "xr": [18, 192, 193, 194, 206, 207, 208, 247, 270], "open_dataset": [18, 247, 270], "tracer1": [18, 135], "isel": 18, "nvertlevel": [18, 120, 137, 141, 226, 232, 233, 247, 270, 279], "out_filenam": [18, 116, 119, 225], "colormap_sect": [18, 119], "titl": [18, 119, 120, 135, 137, 141], "colormap": [18, 119, 120, 238, 270, 283], "cosin": [18, 135, 174, 176, 177, 179, 182, 184, 186, 238, 249, 270, 280, 281, 284, 288, 293], "bell": [18, 135, 174, 176, 177, 179, 182, 184, 186, 238, 249, 270, 280, 281, 284, 288, 293], "converg": [18, 174, 178, 188, 189, 202, 203, 238, 240, 241, 245, 248, 269, 270, 281, 283, 285, 288, 293], "colormap_nam": [18, 119, 238, 283], "viridi": [18, 238, 270, 283], "norm": [18, 118, 119, 135, 139, 141, 238, 283], "norm_typ": [18, 119, 238, 283], "norm_arg": [18, 119, 238, 283], "colorbar": [18, 119, 120, 238, 283], "tick": [18, 119, 238, 283], "mark": [18, 238, 251, 283], "colorbar_tick": [18, 119, 238, 283], "matplotlib": [18, 270], "standard": [18, 250, 251, 260, 270, 273, 289], "symlog": [18, 119], "symmetr": 18, "central": [18, 283], "logarithm": [18, 120], "color": [18, 120], "normal": [18, 192, 193, 206, 207, 236, 247, 248, 251, 270, 276], "symlognorm": 18, "lognorm": 18, "hous": [19, 283], "kei": [19, 48, 112, 137, 249], "max_memori": [24, 34, 37, 44, 145, 247], "mesh_filenam": [24, 84, 145, 151], "graph_filenam": [24, 84, 145], "make_yaml": 24, "stride": [24, 36, 145], "consist": [24, 36, 132, 145, 234, 251, 270, 271, 282], "partit": [24, 33, 43, 61, 84, 145, 237, 240, 241, 247, 271, 272, 273, 274, 275, 277, 289], "model_config_data": 24, "streams_data": 24, "neither": [24, 37, 48, 94, 145, 155, 218, 247], "nor": [24, 37, 48, 94, 145, 155, 218, 247, 270], "append": [24, 37, 39, 48, 94, 145, 153, 154, 155, 158, 161, 162, 164, 166, 169, 170, 172, 218, 247, 257, 259, 261], "ideal": [24, 34, 37, 44, 90, 91, 94, 135, 145, 155, 195, 209, 218, 219, 220, 222, 243, 247, 250, 269, 270, 271, 295], "fewer": [24, 34, 37, 44, 90, 91, 145, 155, 195, 209, 218, 247, 270, 289], "memori": [24, 34, 37, 44, 145, 247, 271], "mb": [24, 34, 37, 44, 145, 247, 271], "placehold": [24, 34, 37, 44, 145, 247, 289], "diverg": [30, 148], "counterpart": [30, 135, 148], "nest": [30, 121, 123, 148], "graph_fil": 31, "run_as_subprocess": [37, 247], "smallest": [37, 247, 268, 279, 295], "unit": [37, 95, 99, 102, 247, 268, 282, 295], "term": [37, 268, 270, 285, 286], "necessarili": [37, 39], "input_data": 37, "until": [37, 38, 247, 249, 289], "finish": [37, 38, 81, 247, 270], "known": [37, 38, 132, 238, 247, 270], "suffici": [37, 247], "establish": [37, 38, 247], "is_depend": [37, 247], "machine_info": [37, 247], "machineinfo": 37, "combin": [37, 39, 48, 56, 62, 93, 121, 247, 248, 249, 267, 270, 271, 289], "base_work_dir": [37, 48, 247, 249], "log_filenam": [37, 48, 247, 249], "redirect": [37, 247], "extern": [37, 132, 234, 244, 247, 249, 263, 280, 290], "turn": [37, 55, 244, 247, 267, 270, 287], "access": [38, 249, 250, 251, 270, 272, 276, 277], "database_compon": [39, 247], "work_dir_target": [39, 247], "come": [39, 132, 247, 251, 270, 272, 273, 274, 275, 276, 277, 280], "_database_root": 39, "available_resourc": [41, 89], "constrain": [41, 146, 156, 180, 196, 210, 237, 240, 241, 247, 270], "cores_per_nod": [41, 89, 92, 132, 271, 272, 273, 274, 275, 276, 277, 289], "everi": [42, 187, 237, 247, 249, 250, 266, 267, 268, 270, 282, 287], "child": [42, 187, 244, 247, 249, 250], "subtask": 44, "step_symlink": [48, 249], "outsid": [48, 49, 243, 245, 247, 249, 251], "stdout_logg": [48, 249], "goe": [48, 247, 249, 270], "regardless": [48, 249], "new_step_log_fil": [48, 249], "run_by_default": [49, 249], "assum": [50, 113, 122, 132, 251, 270, 277, 282], "prior": [50, 247], "step_path": 54, "variant": [54, 176, 237, 243, 248, 250, 251, 270, 276, 279, 282, 283], "uncach": 54, "datestamp": 54, "yymmdd": [54, 271], "dry": [54, 248], "meta": 56, "empti": [56, 247, 250, 251, 268, 270], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 108, 251], "isadirectoryerror": 60, "qo": [61, 272, 273, 275, 276, 277, 289], "qualiti": [61, 272, 273, 275, 276, 277, 289], "servic": [61, 272, 273, 275, 276, 277, 289], "constraint": [61, 277, 289], "wall_tim": [61, 289], "wall": [61, 289], "target_cor": 62, "min_cor": 62, "decomposition_test": [66, 243, 289], "decompositiontest": [66, 243], "e501": [66, 270], "turquois": [66, 273], "usr": [66, 132, 273, 289], "climat": [66, 272, 273, 274, 276, 289], "mhoffman": 66, "constant": [67, 74, 75, 135, 236, 270, 282, 283, 285, 287, 288, 293], "latitud": [68, 75, 95, 97, 99, 102, 119, 238, 283, 288, 293], "longitud": [68, 75, 76, 82, 95, 97, 99, 102, 119, 238, 283, 288, 293], "ndarrai": [68, 75, 76, 82, 119, 151, 224, 225, 270], "degre": [68, 75, 76, 82, 99, 271, 282], "length": [68, 75, 76, 82], "180": [68, 75, 76, 82, 99, 135, 283], "90": [68, 75, 76, 82, 135, 247, 283], "static": [69, 70], "rule": 69, "thumb": 69, "achiev": [70, 248], "uniform": [74, 79, 143, 179, 237, 238, 240, 241, 243, 249, 270, 271, 282, 283, 285, 286, 287, 288, 293], "natur": 79, "jigsawpi": [80, 247], "jigsaw_jig_t": 80, "meti": 84, "defaults_filenam": 85, "total": [89, 247, 248, 250, 270, 271, 273, 289], "substep": [90, 91], "command_line_arg": 90, "cpus_per_nod": 92, "map_filenam": 94, "src_grid_info": 94, "dst_grid_info": 94, "neareststod": [94, 238, 283, 288, 293], "conserv": [94, 238, 283, 288, 293], "map_": 94, "source_typ": 94, "_": [94, 132, 247, 249, 251, 270, 287], "dest_typ": 94, "1d": [95, 99, 102, 119, 135, 224, 225, 226, 227, 228, 229, 230, 232, 233], "2d": [95, 99, 102, 119], "5x0": [95, 99, 102], "5degre": [95, 99, 102], "coordin": [95, 97, 98, 102, 104, 119, 120, 192, 206, 226, 232, 233, 278, 280, 282, 283, 285, 286, 287, 288, 292], "mesh_typ": [96, 103, 243, 247, 249], "vertex": [96, 103], "x_var": [98, 104], "y_var": [98, 104], "proj_attr": [98, 104], "proj_str": [98, 104], "proj": [98, 104], "left": [99, 135, 270, 279, 282, 283], "remapp": [100, 101], "remap_fil": 100, "progress": [107, 108], "is_task": 108, "steps_to_skip": 108, "unpickl": [110, 247], "cached_step": 111, "identifi": [111, 132, 244, 263, 295], "task_list": 112, "_all": 112, "streams_filenam": 113, "lxml": [113, 115, 127], "etre": [113, 115, 127], "new_child": 114, "children": 114, "sub": [114, 270], "new_tre": 115, "infin": 118, "toler": 118, "data_arrai": 119, "colorbar_label": 119, "subtitl": 119, "field_nam": [120, 139, 140, 178], "out_file_nam": 120, "ax": 120, "z_index": 120, "cmap_set_und": 120, "cmap_scal": 120, "cmap_titl": 120, "horizont": [120, 135, 151, 236, 237, 238, 240, 241, 242, 282, 285, 286, 287], "depth": [120, 135, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 270, 271, 279, 282, 283, 285, 286, 287, 288], "slice": [120, 138], "fieldnam": 120, "visibl": 120, "bar": 120, "classmethod": 122, "jinja": [122, 135, 238], "namelist_templ": 126, "polarisyaml": [126, 127], "processed_registry_filenam": 127, "registri": [127, 236, 263], "steam": 127, "1_anvil_intel_impi": [128, 132], "mvapich": [128, 132, 272], "ve": [128, 129, 130, 131, 133, 251, 270], "1_anvil_gnu_openmpi": 128, "1_chicoma": 129, "cpu_gnu_mpich": [129, 133], "crai": [129, 132, 133, 273, 277], "1_chrysalis_intel_openmpi": 130, "1_chrysalis_gnu_openmpi": 130, "soon": [131, 132, 270, 289], "1_compy_intel_impi": 131, "1_compy_gnu_openmpi": 131, "load_polaris_env": [132, 251, 270, 289], "right": [132, 135, 249, 251, 270, 271, 279, 282, 283, 289], "therefor": [132, 247, 268, 270], "chicoma": [132, 276, 289], "mpich": [132, 251, 269, 273, 277, 289], "compi": [132, 275, 289], "pm": [132, 277, 289], "compymcnodefac": [132, 276], "perlmutt": [132, 273, 276, 289], "pretti": [132, 247, 250, 270, 271], "conda_path": [132, 251], "osx": [132, 276], "clang": [132, 251], "1_": 132, "morpheu": 132, "cobalt": [132, 272, 273, 274, 275, 276, 277], "single_nod": [132, 271, 272, 273, 274, 275, 276, 277, 289], "mpirun": [132, 267, 271, 272, 273, 274, 275, 276, 277, 289], "srun": [132, 247, 267, 270, 271, 272, 273, 274, 275, 276, 277, 289], "parallel_execut": [132, 267, 271, 272, 273, 274, 275, 276, 277, 289], "modules_befor": [132, 273, 277], "modules_aft": [132, 273, 277], "polaris_env": [132, 272, 273, 274, 275, 276, 277], "deploi": [132, 251, 269, 272, 273, 274, 275, 276, 277], "mpi_gnu": [132, 272, 273, 274, 275, 276, 277], "hdf5": [132, 272, 273, 274, 275, 276, 277], "use_e3sm_hdf5_netcdf": [132, 272, 273, 274, 275, 276, 277], "discoveri": 132, "hostnam": 132, "hostname_contain": 132, "queu": 132, "laptop": [132, 251, 270, 271], "workstat": [132, 251], "high": [132, 247, 274, 276], "hpc": [132, 251, 273, 276], "safest": [132, 251], "mpi_": 132, "simpl": [132, 135, 250, 263, 270, 289], "compiler_gnu": 132, "compiler_intel": 132, "hopefulli": [132, 271], "parlanc": 132, "concret": 132, "ubuntu": 132, "spec": [132, 267, 277], "gcc": 132, "curl": 132, "81": 132, "buildabl": 132, "install_missing_compil": 132, "cc": 132, "bin": [132, 251, 277, 289], "cxx": 132, "f77": 132, "fc": 132, "operating_system": 132, "ubuntu22": 132, "04": 132, "extra_rpath": 132, "luck": 132, "catch": [132, 248], "22": 132, "guess": [132, 270], "correct": [132, 251], "potenti": [132, 151, 164, 247, 270, 282], "purg": 132, "perl": 132, "32": [132, 248, 289], "bsnc6lt": 132, "ugetvbp": 132, "sxfyy4k": 132, "2020": 132, "304": 132, "n3b5fye": 132, "j3zxncu": 132, "7ohuiwq": 132, "k2zu3y5": 132, "mirrcz7": 132, "variou": [132, 216, 247, 251, 255], "ask": 132, "gb": 132, "minut": [132, 237, 248, 282, 294], "hour": [132, 240, 241, 248, 266, 273, 277, 285, 286, 289, 292], "zlib": 132, "incompat": 132, "ubuntu20": 132, "readlin": 132, "pkgconf": 132, "spackdir": 132, "env": [132, 277], "arch": 132, "repositori": [132, 245, 269, 270, 289], "x86_64_v4": 132, "free": [132, 236, 270, 271], "touch": [132, 251], "everyth": 132, "1_pm": 133, "ever": [135, 250], "expand": [135, 279], "oceanmodelstep": [135, 247, 270], "decid": [135, 270], "veri": [135, 244, 247, 250, 251, 263, 270, 287], "earli": [135, 280, 289], "stage": [135, 236, 247, 249, 251, 259, 266, 280, 289], "map_yaml_to_namelist": 135, "heurist": 135, "200": [135, 240, 241, 270, 282, 285, 286, 287], "round": [135, 283], "cell_count": [135, 146, 156, 180, 196, 210, 270], "goal_cells_per_cor": [135, 270, 283, 285, 286, 288, 293], "pinch": 135, "2000": [135, 243, 264, 266, 270, 292], "max_cells_per_cor": [135, 270, 283, 285, 286, 288, 293], "seciton": 135, "control": [135, 238, 247, 271, 282, 283, 287, 289], "scale": [135, 282, 289], "tri": [135, 250], "apport": 135, "dai": [135, 150, 164, 237, 238, 242, 266, 270, 282, 283, 287, 292], "form": [135, 295], "dddd_hh": [135, 150], "ss": [135, 150], "get_time_interval_str": 135, "run_dur": [135, 283], "fill": 135, "dt_str": 135, "run_duration_str": 135, "output_interval_str": 135, "yaml_filenam": [135, 143], "caviti": [135, 250, 270, 271, 279], "frazil": 135, "flux": [135, 236, 287], "fix": [135, 270], "add_spherical_base_mesh_step": [135, 249], "spherical_converg": [135, 238, 249, 283], "icos_resolut": [135, 283], "480": [135, 283], "qu_resolut": [135, 283], "150": [135, 283], "210": [135, 279, 283], "evalu": [135, 138, 139, 140, 178, 193, 194, 207, 208, 283], "convergence_eval_tim": [135, 283], "convergence_thresh": [135, 283], "error_typ": [135, 138, 139, 283], "spherical_convergence_forward": [135, 283], "split_explicit": [135, 283], "rk4_dt_per_km": [135, 283], "split": [135, 250], "split_dt_per_km": 135, "barotrop": [135, 155, 218, 247, 270, 282, 287], "simul": [135, 240, 241, 247, 268, 270, 281, 282, 285, 286, 288, 289, 293], "numer": [135, 285, 286], "infrastructur": [135, 250, 270], "add_cosine_bell_task": [135, 244], "sphericalconvergenceforward": [135, 238], "output_filenam": [135, 143, 151], "analyz": [135, 137, 177, 270, 283], "split_explicit_t": [135, 270], "sphericalconvergenceanalysi": [135, 238], "less": [135, 137, 174, 177, 247, 279], "convergence_var": [135, 137], "zidx": [135, 137, 138, 140, 141, 178], "exact_solut": 135, "state": [135, 140, 151, 153, 154, 161, 164, 169, 178, 236, 237, 238, 240, 241, 242, 247, 248, 270, 283], "grid_1d": 135, "generate_1d_grid": 135, "vertical_grid": [135, 224, 226, 232, 233, 243, 247, 270, 271, 279, 282, 283, 285, 286, 287, 288], "z": [135, 137, 138, 140, 141, 178, 227, 228, 229, 230, 231, 232, 233, 270, 282, 283, 285, 286, 287, 288], "star": [135, 231, 233, 270, 282, 283, 285, 286, 287, 288], "init_vertical_coord": [135, 247, 270], "minlevelcel": [135, 226, 228, 229, 230, 231, 232, 233, 270], "maxlevelcel": [135, 226, 227, 228, 229, 230, 231, 232, 233, 270], "cellmask": [135, 226, 229, 232, 233, 270], "zmid": [135, 226, 232, 233, 270], "restingthick": [135, 226, 231, 232, 233, 270], "bottomdepth": [135, 226, 227, 229, 230, 231, 232, 233, 247, 270], "entir": [135, 270, 282, 294], "petersen": [135, 251, 270, 282], "et": [135, 270, 279, 282, 283, 285, 286], "al": [135, 270, 279, 282, 283, 285, 286], "2015": [135, 270, 282], "int_": 135, "rho": 135, "dv": 135, "sort": [135, 244, 245, 250, 251], "increas": [135, 250], "compute_rp": [135, 270], "csv": [135, 238, 270], "geostroph": 137, "dependencies_dict": 137, "rate": [137, 139, 140, 178, 238, 240, 241, 270, 283, 285, 286, 287], "dimens": [137, 141, 178, 242, 282], "variable_nam": [138, 141], "exact": [138, 140, 178, 192, 193, 194, 206, 207, 208, 238, 240, 241, 250, 285, 286], "inf": [138, 139], "conv_thresh": [139, 285, 286], "deriv": 140, "subdivid": [144, 249], "dynamic_ntask": 145, "dynam": [145, 234, 242, 271, 282, 283, 287, 288], "available_cor": 147, "estim": [147, 149, 270], "time_str": 150, "initial_state_filenam": 151, "energi": [151, 164, 269, 270, 282], "len": [151, 270], "output_fil": [151, 247, 270], "shorter": [161, 248, 256], "step_subdir": [170, 257], "processor": [170, 247, 257, 282], "include_viz": [174, 249], "advect": [174, 238, 283, 285, 286, 287], "ncell": [178, 247, 270], "viz_map": [184, 249], "inerti": [188, 189, 190, 192, 195, 198, 200, 240, 249, 280, 284], "graviti": [188, 189, 190, 192, 195, 198, 200, 240, 249, 280, 284], "wave": [188, 189, 190, 192, 195, 198, 200, 206, 240, 247, 249, 270, 280, 282, 284, 286], "taskdir": [190, 195, 198, 200, 204, 209, 212, 214], "analys": [190, 204], "angleedg": [192, 206], "angl": [192, 206], "posit": [192, 206, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 270, 279, 287], "xcell": [192, 206, 247, 270], "ycell": [192, 206, 247, 270], "xedg": [192, 206, 247, 270], "yedg": [192, 206], "f0": 192, "corioli": [192, 240, 241, 270, 282, 283, 286, 287], "eta0": [192, 206], "amplitid": [192, 206], "kx": [192, 206], "ky": [192, 206], "angular": [192, 206], "frequenc": [192, 206, 237], "veloc": [193, 207, 236, 237, 240, 241, 249, 251, 270, 283, 287, 289], "norm_vel": 193, "eta": [194, 208, 285, 286], "manufactur": [202, 203, 204, 206, 209, 212, 214, 241, 280, 284], "column": [216, 217, 219, 220, 222, 242, 251, 255, 256, 257, 259, 260, 261, 263, 264, 266, 280, 284, 289, 290, 291], "mix": [217, 243, 244, 285, 286, 287], "param": [217, 219], "resources_fix": 218, "ag": [219, 220, 222], "evolv": [219, 269, 279, 283, 287], "ideal_ag": [220, 222], "layer": [224, 225, 226, 230, 231, 232, 233, 236, 237, 240, 241, 242, 270, 271, 279, 282, 283, 285, 286, 287, 288], "meter": [224, 225], "bottom": [226, 227, 228, 229, 230, 231, 232, 233, 236, 270, 271, 279, 282, 283, 285, 286, 287, 288], "thick": [226, 230, 231, 232, 233, 237, 242, 264, 270, 271, 279, 282, 285, 292], "stretch": [226, 232, 233, 270, 279], "elev": [226, 232, 233, 270, 279], "midpoint": [226, 232, 233, 270], "reftopdepth": [226, 229, 230, 232, 233, 270], "down": [226, 227, 228, 229, 230, 231, 232, 233, 270, 279, 283], "ref": [226, 232, 233, 270], "middl": [226, 232, 233, 270], "refbottomdepth": [226, 227, 228, 229, 230, 232, 233, 247, 270], "refinterfac": [226, 232, 233, 270], "element": [226, 232, 233, 270], "vertcoordmovementweight": [226, 232, 233, 270], "movement": [226, 232, 233, 270], "alter": [227, 228, 247, 249, 269, 270, 279, 282, 283, 285, 286, 287, 288], "partial": [227, 228, 270, 279, 282, 283, 285, 286, 287, 288], "seafloor": [227, 229, 230, 231, 279], "unstretch": 231, "shelv": [234, 271, 279], "ssh_adjust": [234, 247, 271], "compass_branch": 234, "example_compact": [234, 244, 263, 271], "default_input": [234, 244, 263, 270, 271], "ocean_model": [234, 251, 271], "latest": [234, 251, 263, 269, 280, 289], "compat": [234, 251, 263, 267, 269], "verison": 234, "manufactured_solut": [234, 239, 244, 286], "single_column": [234, 239, 244, 263, 265, 287], "minim": 236, "fcell": [236, 247, 270, 283], "fedg": [236, 247, 270, 283], "fvertex": [236, 247, 270, 283], "slip": 236, "solid": [236, 264, 282, 283], "tangenti": 236, "nonperiod": 236, "drag": [236, 238], "mass": 236, "momentum": [236, 237, 238, 240, 241, 285, 286], "scalar": 236, "rigid": 236, "solv": [236, 267, 279], "mid": [236, 282], "vari": [236, 238, 247, 267, 276, 279, 283], "consult": [236, 270], "tidal_forc": 236, "eddi": [237, 282], "addition": [237, 238, 240, 241, 242, 247, 272, 273, 274, 275, 277], "diffus": [237, 238, 240, 241, 242], "50": [237, 240, 241, 270, 282, 285, 286, 287], "prescrib": [237, 240, 241], "intens": 237, "enough": [237, 247, 250, 270], "cosinebel": [238, 249], "24": [238, 283, 292], "shape": [238, 283], "blob": 238, "around": [238, 270, 271, 282, 283], "distribut": 238, "convergence_tracer1": 238, "fast": [238, 270], "shallow": [240, 251, 283, 285, 286, 288], "water": [240, 270, 282, 283, 285, 286, 287, 288], "100": [240, 241, 242, 279, 285, 286, 287], "25": [240, 241, 285, 286, 287], "calcul": [240, 247, 249], "exactsolut": [240, 241], "obtain": [240, 241, 251, 273], "normal_veloc": [240, 241, 247, 270], "assign": [240, 241, 283], "squar": [240, 241, 285, 286], "fall": [240, 241, 289], "accept": [240, 241], "bound": [240, 241], "rmse": [240, 241, 285, 286], "manufacturedsolut": 241, "exercis": [242, 266, 283, 287], "kpp_test": 242, "mixedlayerdepthsoutput": 242, "idealagetrac": [242, 287], "single_column_forc": [242, 287], "profil": [242, 267, 287], "throughout": [242, 282, 287], "idealag": 242, "enabel": 242, "formal": 243, "organ": [243, 245, 248, 269], "conceptu": [243, 250], "broadli": [243, 244, 250], "realist": [243, 269, 295], "greenland": [243, 269, 295], "2000m": [243, 289], "34": [243, 289], "halfar": 243, "cism": 243, "dome_typ": 243, "closest": 243, "put_origin_on_a_cel": 243, "hydrologi": 243, "hydro": [243, 295], "dome_viz": 243, "time_slic": 243, "save_imag": 243, "hide": [243, 270], "hide_fig": 243, "helper": [243, 244], "clutter": 243, "smoke_test": [243, 249], "smoketest": [243, 249], "restart_test": 243, "restarttest": 243, "add_dome_task": 243, "variable_resolut": [243, 247, 289], "talk": 243, "reduc": [243, 247], "among": [243, 245, 251, 270], "encompass": 244, "perspect": 244, "four": 244, "major": [244, 247], "broader": 244, "univers": 244, "add_inertial_gravity_wave_task": 244, "add_manufactured_solution_task": 244, "add_single_column_task": 244, "alphabet": [244, 270], "landice_model": [244, 251], "diagram": 245, "green": 245, "blue": [245, 272, 289], "orang": 245, "red": 245, "laid": 245, "fig": 245, "organiz": 245, "concept": [245, 250, 270, 295], "somewher": 247, "multiprocess": [247, 250, 271], "aspir": 247, "emploi": 247, "unwant": 247, "outer": 247, "inner": 247, "dome_varres_grid": 247, "signific": [247, 248, 249], "neglig": 247, "culled_graph": [247, 270], "meshstep": 247, "getint": 247, "mesh_cpus_per_task": 247, "mesh_min_cpus_per_task": 247, "fit": [247, 271], "applic": [247, 250, 251, 288, 293], "launch": [247, 269], "write_netcdf": [247, 270], "convers": [247, 270], "greater": [247, 270], "graphinfofilenam": [247, 270], "culled_mesh": [247, 270], "use_dist": [247, 270, 282], "gradient_width_dist": [247, 270, 282], "gradient_width_frac": [247, 270, 282], "bottom_temperatur": [247, 270, 282], "surface_temperatur": [247, 270, 282, 287], "temperature_differ": [247, 270, 282], "coriolis_paramet": [247, 270, 282, 285, 286, 287], "x_cell": [247, 270], "y_cell": [247, 270], "bottom_depth": [247, 270, 271, 279, 282, 283, 285, 286, 287, 288], "ones_lik": [247, 270], "zeros_lik": [247, 270], "x_min": [247, 270], "min": [247, 270, 282, 287], "x_max": [247, 270], "y_min": [247, 270], "y_max": [247, 270], "y_mid": [247, 270], "x_perturb_min": [247, 270], "x_perturb_max": [247, 270], "perturb_width": [247, 270, 282], "y_offset": [247, 270], "sin": [247, 270, 282, 285, 286], "pi": [247, 270, 279, 282, 283], "temp_vert": [247, 270], "frac": [247, 270, 279, 282, 285], "logical_and": [247, 270], "transpos": [247, 270], "3rd": [247, 270], "crest": [247, 270, 282], "expand_dim": [247, 270], "dim": [247, 270], "axi": [247, 270], "broadcast": [247, 270], "nedg": [247, 270], "xvertex": [247, 270], "attr": [247, 270], "initial_temperatur": [247, 270], "initial_normal_veloc": [247, 270], "superclass": 247, "commandlin": 247, "harm": 247, "likewis": [247, 270], "subsequ": [247, 294], "arisen": 247, "problemat": 247, "add_depend": 247, "usual": [247, 249, 251, 270, 289], "forwardstep": 247, "mesh_path": 247, "mesh_step": 247, "with_ice_shelf_cav": 247, "initial_state_target": 247, "adjusted_init": 247, "forcing_data": 247, "init_mode_forcing_data": 247, "entha_analy_result": 247, "mat": 247, "enthalpy_benchmark": 247, "ourselv": 247, "problem": [247, 251, 267, 270], "firewal": 247, "bedmachineantarctica_v2_and_gebco_2022_0": 247, "05_degree_20220729": 247, "slate": 247, "icepresent_qu60km_polar": 247, "practic": [247, 250, 251], "straightforward": 247, "commonli": [247, 268], "notat": [247, 288, 293], "phc": [247, 279], "That": [247, 250, 268, 270, 289], "word": 247, "ff": 247, "quwisc240": [247, 250, 289], "90c": 247, "91c": 247, "92": [247, 279], "91": 247, "sowisc12to60": [247, 289], "performance_test": 247, "effici": [247, 270], "transfer": 247, "feasibl": 247, "overhead": 247, "philosophi": [248, 250, 270], "context": [248, 270], "namesak": 248, "256": [248, 273, 277], "count": [248, 268], "quicker": 248, "exce": 248, "offer": 248, "benefit": [248, 269], "bug": 248, "coverag": 248, "exhaust": 248, "recent": [248, 280, 290], "merg": 248, "reach": 248, "steadi": 248, "wet": 248, "fundament": 249, "incorpor": 249, "velo_solv": 249, "sia": [249, 251], "fo": 249, "runmodel": 249, "run_step": 249, "0200": 249, "00_00": [249, 264, 270], "recip": 249, "demonstr": [249, 270], "fairli": [249, 250, 251, 270], "_cosine_bel": 249, "_with_viz": 249, "_setup_step": [249, 270], "_resolut": 249, "remove_step": 249, "analysis_depend": 249, "base_mesh_step": 249, "cos_bell_dir": 249, "_init_": 249, "init_step": 249, "_forward_": 249, "forward_step": 249, "with_viz_dir": 249, "_map_": 249, "_viz_": 249, "rare": [249, 251], "480km": 249, "closer": 249, "imp_r": 249, "joinpath": 249, "initial_condit": 250, "dig": [250, 271], "background": 250, "adher": [250, 270], "pep8": [250, 251], "bot": [250, 279], "violat": 250, "consid": 250, "editor": 250, "pycharm": [250, 251, 270], "spyder": 250, "linter": 250, "flake8": [250, 251], "discourag": [250, 268], "reformat": 250, "autopep8": 250, "undesir": 250, "lint": 250, "wildcard": 250, "vim": [250, 270], "plugin": 250, "id": [250, 251], "commit": [250, 251], "why": 250, "sound": 250, "subpackag": 250, "understand": [250, 271], "downstream": 250, "tutori": [250, 251], "clu": 250, "intro": 250, "docstr": [250, 269, 270], "strip": 250, "mpas_ocean": 250, "hidden": 250, "shortcut": [250, 289], "referenc": [250, 270], "mention": 250, "dot": 250, "charact": 250, "unix": [250, 269], "distinct": 250, "mayb": [250, 270], "machine_config": 250, "endswith": 250, "splitext": 250, "exactli": [250, 251, 270, 279], "move": [250, 251, 270, 288, 293], "renam": 250, "visa": 250, "versa": 250, "comfort": [250, 270], "inherit": [250, 270], "orient": 250, "program": [250, 271], "led": 250, "felt": 250, "contribut": 250, "hesit": 250, "predecessor": [250, 268, 269], "clumsi": 250, "harder": 250, "outcom": 250, "augment": 250, "explain": 250, "hope": 250, "dens": 250, "learn": [250, 270], "curv": 250, "worth": [250, 270], "skill": 250, "endeavor": 250, "readabl": 250, "manipul": 250, "get_available_cores_and_nod": 250, "theoret": 250, "dozen": 250, "theori": 250, "biogeochemistri": 250, "ksh": 251, "mac": [251, 269], "csh": 251, "tcsh": 251, "temporarili": 251, "recogn": [251, 271, 289], "permiss": 251, "anyon": 251, "caus": [251, 273, 277, 279], "person": [251, 267], "base_path_to_install_or_update_conda": 251, "with_netlib_lapack": 251, "flavor": [251, 270], "troubl": [251, 270], "recognit": 251, "trilino": 251, "downsid": 251, "unneed": 251, "reinstal": 251, "caution": 251, "load_": 251, "encod": 251, "load_dev_polaris_": [251, 270], "env_nam": 251, "dev_polaris_": [251, 267], "workdir": [251, 289], "unexpect": [251, 268, 270], "occur": [251, 267], "echo": 251, "proceed": 251, "notic": 251, "conda_env": [251, 275, 289], "rememb": 251, "incorrect": 251, "unus": 251, "session": [251, 270], "pip": 251, "substanti": 251, "risk": [251, 270], "unsupport": 251, "env_onli": 251, "mpas_make_target": [251, 289], "scientif": [251, 289], "_albani": 251, "instruct": [251, 270], "es3m": 251, "compli": 251, "memor": 251, "guidelin": 251, "complianc": 251, "checker": 251, "isort": 251, "flynt": 251, "mypi": 251, "77": 251, "e302": 251, "blank": 251, "resolv": 251, "simpler": [251, 270], "new_branch_nam": 251, "put": [251, 270], "disk": [251, 271, 273, 277], "respons": 251, "simplest": 251, "your_new_branch": 251, "restart_filenam": 257, "polaris_branch": 263, "post": 263, "src": 263, "registry_process": 263, "seaice_model": 263, "1m": [264, 292], "disc": [264, 292], "config_initial_ice_area": 264, "config_initial_ice_volum": 264, "config_atmospheric_forcing_typ": 264, "config_forcing_start_tim": 264, "config_forcing_cycle_start": 264, "config_forcing_cycle_dur": 264, "config_forcing_precipitation_unit": 264, "mm_per_sec": 264, "config_forcing_sst_typ": 264, "ncar": 264, "config_update_ocean_flux": 264, "config_include_pond_freshwater_feedback": 264, "standard_phys": 266, "standardphys": 266, "year": [266, 280, 292], "volum": 266, "snow": 266, "exact_restart": 266, "exactrestart": 266, "geo": 267, "cartopi": 267, "14": 267, "np110py27_4": 267, "calledprocesserror": 267, "deploy_tmp": 267, "vpn": 267, "site": 267, "shell": [267, 269], "honor": 267, "wide": 267, "spawn": 267, "usernam": [267, 270, 273, 277], "proxy_en": 267, "all_proxi": 267, "proxyout": 267, "8080": 267, "no_proxi": 267, "localhost": [267, 271, 276, 277, 289], "127": 267, "proxy_dis": 267, "unset": 267, "anytim": 267, "fatal": 267, "mpi_init": 267, "stack": 267, "mpir_init_thread": 267, "159": 267, "mpid_init": 267, "164": 267, "mpidi_ch3_init": 267, "95": 267, "mpid_nem_init": 267, "314": 267, "mpid_nem_tcp_init": 267, "173": 267, "mpid_nem_tcp_get_business_card": 267, "395": 267, "getsockinterfaceaddr": 267, "369": 267, "pn2034311": 267, "errno": 267, "host": [267, 271, 276, 289], "focus": 268, "plu": 268, "autom": 269, "exascal": 269, "earth": 269, "kept": 269, "boundari": [269, 282, 295], "expert": 269, "uncoupl": 269, "quick": [269, 270, 280, 290], "queue": 269, "beginn": [269, 270], "advanc": [269, 270], "mpas_to_yaml": 269, "troubleshoot": 269, "proxi": 269, "lanl": [269, 271, 273], "gethostbynam": 269, "glossari": 270, "stick": 270, "miniconda": 270, "3_chrysalis_intel_openmpi": 270, "strict": 270, "push": 270, "lowercas": 270, "hyphen": 270, "settl": 270, "desktop": 270, "realli": [270, 277], "nice": [270, 277], "supercomput": 270, "yet_another_channel": 270, "testgroup": 270, "vi": 270, "polaris_head": 270, "yetanotherchannel": 270, "instanc": 270, "repres": [270, 279, 283], "highli": 270, "camelcas": 270, "capit": 270, "letter": 270, "cap": 270, "awkward": 270, "encourag": 270, "enclos": 270, "briefli": 270, "baroclinicchannel": 270, "globalconverg": 270, "add_test_group": 270, "interest": 270, "test_group": 270, "add_test_cas": 270, "anyth": 270, "testcas": [270, 271, 282, 287, 289], "probabl": [270, 276], "suppos": 270, "easili": 270, "tide": 270, "sai": [270, 276], "res_str": 270, "1000": [270, 271, 279, 282, 285, 286], "still": [270, 280, 288, 289, 293], "ti": 270, "loop": 270, "1km": [270, 282, 289], "4km": [270, 282, 289], "coarsest": [270, 271], "especi": 270, "promot": 270, "pattern": 270, "familiar": 270, "seen": 270, "brows": 270, "row": 270, "disadvantag": 270, "foremost": 270, "magic": 270, "effect": [270, 288], "pain": 270, "160": [270, 282], "500": [270, 271, 279, 282], "path_to_mpas_ocean": 270, "path_to_working_dir": 270, "cat": 270, "slurm_jobid": 270, "_run_test": 270, "gpf": 270, "fs1": 270, "cbegeman": 270, "grid_typ": [270, 271, 279, 282, 283, 285, 286, 287, 288], "vert_level": [270, 271, 279, 282, 283, 285, 286, 287, 288], "coord_typ": [270, 279, 282, 283, 285, 286, 287, 288], "partial_cell_typ": [270, 279, 282, 283, 285, 286, 287, 288], "min_pc_fract": [270, 279, 282, 283, 285, 286, 287, 288], "everywher": 270, "depress": [270, 279], "mostli": 270, "logic": [270, 282], "northern": [270, 282], "half": [270, 282], "southern": [270, 282], "halv": [270, 282], "gradient": [270, 282, 285, 286, 287], "500km": [270, 282], "40e3": [270, 282], "35": [270, 282, 283, 287, 288, 289, 293], "2e": [270, 282], "connect": [270, 277], "match": 270, "light": 270, "e3sm_compon": 270, "interact": [270, 273, 276, 277, 289], "interrupt": 270, "pty": 270, "navig": 270, "newli": 270, "bunch": 270, "didn": 270, "mistak": 270, "finger": 270, "cross": 270, "initial_normalveloc": 270, "initial_salin": 270, "obvious": 270, "stress": [270, 287], "landicemodelstep": 270, "huge": 270, "cp": 270, "05": 270, "hmix_del2": 270, "bottom_drag": 270, "cvmix": 270, "0002": 270, "filename_interv": 270, "0100": 270, "input_interv": 270, "initial_onli": 270, "basicmesh": 270, "dayssincestart": 270, "surfacespe": 270, "lowersurfac": 270, "uppersurfac": 270, "ureconstructx": 270, "ureconstructi": 270, "great": 270, "remain": [270, 283, 287], "load_dataset": 270, "final_temperatur": 270, "ab": 270, "proc": 270, "area": 270, "4proc": [270, 282], "8proc": [270, 282], "markdown": 270, "developers_guid": 270, "users_guid": 270, "daunt": 270, "flesh": 270, "bonu": 270, "improv": 270, "introduc": 270, "techniqu": 270, "cannot": 270, "aim": 270, "constrain_resourc": 270, "becam": 270, "mainten": 270, "counter": 270, "thought": 270, "yet_another_channel_test_cas": 270, "yetanotherchanneltestcas": 270, "choic": [270, 283], "spuriou": [270, 282], "dissip": [270, 282], "pop": [270, 282], "mom": [270, 282], "mitgcm": [270, 282], "higher": 270, "heavi": 270, "analogi": 270, "tet": 270, "bear": 270, "late": 270, "_add_step": 270, "startswith": 270, "enumer": 270, "rpe_": 270, "_nu_": 270, "privat": 270, "break": [270, 282], "unusu": 270, "rpe_1_nu_1": [270, 282], "rpe_2_nu_5": [270, 282], "rpe_3_nu_10": 270, "rpe_4_nu_20": 270, "rpe_5_nu_200": 270, "20_00": 270, "0000": 270, "dayssincestartofsim": 270, "relativevort": 270, "pyplot": 270, "plt": 270, "output_": 270, "sections_yet_another_channel_": 270, "rpe_t": 270, "init_filenam": 270, "initial_state_file_nam": 270, "ds_init": 270, "_plot": 270, "dirti": 270, "adopt": 270, "lesson": 270, "tricki": 270, "commun": 270, "nuanc": 270, "fake": 270, "wasn": 270, "fold": 270, "proper": 270, "third": 270, "previous": 270, "extens": 271, "multinod": [271, 289], "explanatori": 271, "my_machin": 271, "extend": 271, "gitconfig": 271, "enter": 271, "author": 271, "email": 271, "pull_request": 271, "28": 271, "address": 271, "metadata": 271, "customize_config_pars": 271, "server_base_url": 271, "inej": 271, "check_siz": 271, "ssl": 271, "certif": 271, "core_path": 271, "partition_execut": 271, "dask": 271, "netcdf4": 271, "netcdf4_class": 271, "netcdf3_64bit": 271, "netcdf3_class": 271, "engin": 271, "scipi": 271, "mesh_databas": 271, "ocean_database_root": 271, "landice_database_root": 271, "mesh_cor": 271, "mesh_min_cor": 271, "mesh_max_memori": 271, "mesh_max_disk": 271, "init_cor": 271, "init_min_cor": 271, "init_max_memori": 271, "init_max_disk": 271, "init_thread": 271, "forward_cor": 271, "forward_min_cor": 271, "forward_thread": 271, "forward_max_memori": 271, "forward_max_disk": 271, "add_metadata": 271, "ec": 271, "wc": 271, "mesh_descript": 271, "autodetect": 271, "bathy_descript": 271, "gebco": 271, "2022": 271, "bedmachin": 271, "antarctica": 271, "init_descript": 271, "e3sm_vers": 271, "increment": 271, "mesh_revis": 271, "finest": 271, "min_r": 271, "max_r": 271, "max_depth": 271, "creation_d": 271, "peopl": 271, "contact": 271, "temperaturemax": 271, "statist": 271, "temperature_max": 271, "33": [271, 289], "enable_ocean_initial_condit": 271, "enable_ocean_graph_partit": 271, "enable_seaice_initial_condit": 271, "scrip": 271, "enable_scrip": 271, "transect": 271, "onlin": 271, "member": 271, "offlin": 271, "enable_diagnostics_fil": 271, "coarser": [271, 283], "finer": 271, "comparisonlatresolut": 271, "comparisonlonresolut": 271, "antarct": 271, "polar": [271, 272, 274, 279], "stereograph": 271, "comparisonantarcticstereowidth": 271, "6000": [271, 279], "comparisonantarcticstereoresolut": 271, "arctic": [271, 292], "comparisonarcticstereowidth": 271, "comparisonarcticstereoresolut": 271, "tanh_dz": 271, "16": [271, 287, 289], "3000": 271, "min_layer_thick": [271, 279], "max_layer_thick": [271, 279], "retain": 271, "ecosystem": 272, "gain": 272, "confluenc": 272, "public_html": [272, 274, 276], "soft": [272, 274, 276, 289], "mpi_intel": [272, 274, 275, 276], "36": [272, 276, 287, 289], "condo": [272, 289], "acm": [272, 289], "medium": 272, "acme_high": 272, "load_latest_polaris_intel_impi": [272, 275], "load_latest_polaris_gnu_openmpi": [272, 274, 289], "dst": 273, "calendar": 273, "network": 273, "introduct": 273, "platform": 273, "batch": 273, "wtrw": 273, "ch": 273, "fe": 273, "lustr": 273, "scratch4": 273, "scratch5": 273, "sacctmgr": 273, "assoc": 273, "cluster": 273, "45": 273, "sshare": 273, "sreport": 273, "accountutilizationbyus": 273, "2019": 273, "prioriti": 273, "yellow": 273, "chkhome": 273, "petabyt": 273, "df": 273, "bp": 273, "archiv": [273, 277], "hpss": [273, 277], "front": 273, "tn": 273, "storag": 273, "project_nam": 273, "salloc": [273, 276, 277], "account_nam": 273, "gpu": [273, 277], "hyperthread": [273, 277], "hang": [273, 277], "threads_per_cor": [273, 277], "shared_clim": [273, 289], "load_latest_polaris_gnu_mpich": [273, 277], "load_latest_polaris_intel_openmpi": 274, "compyf": 275, "app": [275, 289], "pmi2": 275, "40": 275, "submit": 276, "workload": 276, "squeue": 276, "my_usernam": [276, 277], "scancel": 276, "jobid": 276, "cancel": 276, "emtpi": 276, "three": [276, 295], "mpi_mpich": [276, 289], "mpi_openmpi": [276, 289], "nompi": [276, 289], "p1": 277, "nersc": 277, "iri": 277, "filesystem": 277, "myquota": 277, "prjquota": 277, "projectid": 277, "m1795": 277, "hsi": 277, "htar": 277, "zstash": 277, "cf": [277, 289], "cdir": [277, 289], "premium": 277, "cray_compil": 277, "8844": 277, "monik": 277, "browser": 277, "grab": 277, "logon": 277, "kernel": 277, "myenv": 277, "ipykernel": 277, "kernelspec": 277, "u1": 277, "interpret": 277, "argv": 277, "ipykernel_launch": 277, "connection_fil": 277, "display_nam": 277, "languag": 277, "2500": 279, "deepest": 279, "stewart": 279, "2017": 279, "delta": [279, 282, 287], "z_2": 279, "z_1": 279, "mathrm": 279, "tanh": 279, "rightarrow": 279, "infti": 279, "z_k": 279, "z_0": 279, "z_": [279, 287], "k": 279, "finder": 279, "n_z": 279, "h_": 279, "scienc": 279, "hydrograph": 279, "climatologi": 279, "250": 279, "5500": 279, "renorm": 279, "51": 279, "221": 279, "ziso": [279, 295], "63": 279, "floor": 279, "flat": [279, 282], "collaps": 279, "adcroft": 279, "campin": 279, "2004": 279, "absenc": 279, "squash": 279, "watercolumn": 279, "press": 279, "batymetri": 279, "stair": 279, "month": 280, "websit": [280, 290], "release_6": 280, "ilicak": 282, "2012": 282, "variat": 282, "distinguish": 282, "zonal": [282, 287], "meridion": [282, 287], "psu": [282, 287], "cooler": 282, "north": 282, "sinusoid": 282, "perturb": [282, 283, 286], "t_0": 282, "t_b": 282, "t_": 282, "z_b": 282, "y_": 282, "l_x": 282, "warmer": 282, "ge": [282, 283], "gradient_width_fract": 282, "l_y": 282, "le": [282, 287], "flow": [282, 283], "stationari": [282, 287], "literatur": 282, "mk": 282, "celsiu": 282, "prognost": 282, "williamson": 283, "1992": 283, "sec": 283, "3a": 283, "skamarock": 283, "gassmann": 283, "bodi": 283, "rotat": [283, 285, 286], "transport": 283, "psi": 283, "proportion": 283, "slow": 283, "icosohydr": 283, "nearest": 283, "insensit": [283, 287], "300": [283, 288], "passiv": 283, "psi_0": 283, "co": [283, 285, 286], "radiu": 283, "debug_tracers_1": 283, "equatori": 283, "u_0": 283, "tau": 283, "transit": 283, "equat": [283, 285, 286, 287], "vel_pd": 283, "tendenc": [283, 286], "rung": 283, "kutta": 283, "4th": 283, "multipli": 283, "rad": 283, "lat_cent": 283, "lon_cent": 283, "14159265": 283, "2123666": 283, "6667": 283, "hill": 283, "psi0": 283, "qu_conv_thresh": 283, "icos_conv_max": 283, "circul": 283, "roughli": 283, "studi": 283, "propag": [285, 286], "doubli": [285, 286], "assess": [285, 286], "accuraci": [285, 286], "discret": [285, 286], "bishnu": [285, 286], "friction": [285, 286], "neglect": [285, 286], "nonlinear": [285, 286], "analyt": [285, 295], "k_x": [285, 286], "k_y": [285, 286], "accord": [285, 286, 289], "availi": [285, 286], "10000": [285, 286], "coriloi": 285, "1e": 285, "amplitud": [285, 286], "ssh_amplitud": [285, 286], "wavelength": [285, 286], "n_wavelengths_x": [285, 286], "n_wavelengths_i": [285, 286], "conv_max": [285, 286], "embed": 286, "eta_0": 286, "span": 287, "arbitrarili": 287, "chosen": 287, "virtu": 287, "examin": 287, "400": 287, "phi": 287, "phi_0": 287, "dz": 287, "ml": 287, "mld": 287, "surface_x": 287, "x_gradient_mixed_lay": 287, "mixed_layer_depth_x": 287, "x_difference_across_mixed_lay": 287, "x_gradient_interior": 287, "spatial": 287, "4x4": 287, "960": 287, "degc": 287, "temperature_gradient_mixed_lay": 287, "temperature_difference_across_mixed_lay": 287, "temperature_gradient_interior": 287, "mixed_layer_depth_temperatur": 287, "surface_salin": 287, "salinity_gradient_mixed_lay": 287, "salinity_difference_across_mixed_lay": 287, "salinity_gradient_interior": 287, "mixed_layer_depth_salin": 287, "scheme": 287, "dictat": 287, "kpp": 287, "restor": 287, "piston": 287, "toward": 287, "temperature_surface_restoring_valu": 287, "temperature_piston_veloc": 287, "salinity_surface_restoring_valu": 287, "salinity_piston_veloc": 287, "temperature_interior_restoring_r": 287, "salinity_interior_restoring_r": 287, "net": 287, "latent": 287, "heat": 287, "bulk": 287, "latent_heat_flux": 287, "sensibl": 287, "sensible_heat_flux": 287, "solar": 287, "shortwav": 287, "shortwave_heat_flux": 287, "evapor": 287, "evaporation_flux": 287, "5e": 287, "rain": 287, "rain_flux": 287, "wind": 287, "wind_stress_zon": 287, "wind_stress_meridion": 287, "welcom": [288, 293], "icosohedr": [288, 293], "pertain": [288, 293], "inher": 288, "warrant": 288, "investig": 288, "load_latest_polari": 289, "minu": 289, "create_polaris_load_script": 289, "load_polaris_1": 289, "0_mpich": 289, "exclud": 289, "wiki": 289, "circular_shelf": 289, "sia_smoke_test": 289, "sia_decomposition_test": 289, "sia_restart_test": 289, "fo_smoke_test": 289, "fo_decomposition_test": 289, "fo_restart_test": 289, "37": 289, "17": 289, "210131_test_new_branch": 289, "my_config": 289, "smaller": 289, "previous_workdir": 289, "paper": 289, "recompil": 289, "safer": 289, "preserv": 289, "test_subdir": 289, "whatev": 289, "clock": 289, "j": 289, "exclus": 289, "job_nam": 289, "fo_integr": 289, "sia_integr": 289, "cosine_bell_cached_init": [289, 294], "ec30to60": 289, "ecwisc30to60": 289, "qu240_for_e3sm": 289, "quwisc240_for_e3sm": 289, "wc14": 289, "suitenam": 289, "seaice_standalone_framework": 290, "71": 292, "35n": 292, "156": 292, "5w": 292, "atmospher": 292, "timeseri": 292, "pair": 292, "prohibit": 294, "speed": 294, "radial": 295}, "objects": {"polaris": [[19, 0, 1, "", "Component"], [24, 0, 1, "", "ModelStep"], [37, 0, 1, "", "Step"], [48, 0, 1, "", "Task"]], "polaris.Component": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_config"], [21, 1, 1, "", "add_step"], [22, 1, 1, "", "add_task"], [23, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[24, 1, 1, "", "__init__"], [25, 1, 1, "", "add_model_config_options"], [26, 1, 1, "", "add_namelist_file"], [27, 1, 1, "", "add_streams_file"], [28, 1, 1, "", "add_yaml_file"], [29, 1, 1, "", "dynamic_model_config"], [30, 1, 1, "", "map_yaml_to_namelist"], [31, 1, 1, "", "partition"], [32, 1, 1, "", "process_inputs_and_outputs"], [33, 1, 1, "", "runtime_setup"], [34, 1, 1, "", "set_model_resources"], [35, 1, 1, "", "setup"], [36, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[37, 1, 1, "", "__init__"], [38, 1, 1, "", "add_dependency"], [39, 1, 1, "", "add_input_file"], [40, 1, 1, "", "add_output_file"], [41, 1, 1, "", "constrain_resources"], [42, 1, 1, "", "run"], [43, 1, 1, "", "runtime_setup"], [44, 1, 1, "", "set_resources"], [45, 1, 1, "", "set_shared_config"], [46, 1, 1, "", "setup"], [47, 1, 1, "", "validate_baselines"]], "polaris.Task": [[48, 1, 1, "", "__init__"], [49, 1, 1, "", "add_step"], [50, 1, 1, "", "configure"], [51, 1, 1, "", "remove_step"], [52, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[53, 2, 1, "", "main"]], "polaris.cache": [[54, 2, 1, "", "update_cache"]], "polaris.components": [[55, 2, 1, "", "get_components"]], "polaris.config": [[56, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[56, 1, 1, "", "__init__"], [57, 1, 1, "", "setup"]], "polaris.io": [[58, 2, 1, "", "download"], [59, 3, 0, "-", "imp_res"], [60, 2, 1, "", "symlink"]], "polaris.job": [[61, 2, 1, "", "get_slurm_options"], [62, 2, 1, "", "write_job_script"]], "polaris.list": [[63, 2, 1, "", "list_cases"], [64, 2, 1, "", "list_machines"], [65, 2, 1, "", "list_suites"]], "polaris.logging": [[66, 2, 1, "", "log_method_call"]], "polaris.mesh": [[67, 0, 1, "", "IcosahedralMeshStep"], [74, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [69, 1, 1, "", "get_cell_width"], [70, 1, 1, "", "get_subdivisions"], [71, 1, 1, "", "make_jigsaw_mesh"], [72, 1, 1, "", "run"], [73, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "build_cell_width_lat_lon"], [76, 1, 1, "", "make_jigsaw_mesh"], [77, 1, 1, "", "run"], [78, 1, 1, "", "setup"]], "polaris.mesh.planar": [[79, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[80, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "run"], [82, 1, 1, "", "save_and_plot_cell_width"], [83, 1, 1, "", "setup"]], "polaris.model_step": [[84, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[85, 2, 1, "", "ingest"], [86, 2, 1, "", "parse_replacements"], [87, 2, 1, "", "replace"], [88, 2, 1, "", "write"]], "polaris.ocean": [[136, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[136, 1, 1, "", "__init__"]], "polaris.ocean.convergence.spherical": [[137, 0, 1, "", "SphericalConvergenceAnalysis"], [143, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "compute_error"], [139, 1, 1, "", "convergence_parameters"], [140, 1, 1, "", "exact_solution"], [141, 1, 1, "", "plot_convergence"], [142, 1, 1, "", "run"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[143, 1, 1, "", "__init__"]], "polaris.ocean.mesh.spherical": [[144, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[145, 0, 1, "", "OceanModelStep"], [150, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "compute_cell_count"], [147, 1, 1, "", "constrain_resources"], [148, 1, 1, "", "map_yaml_to_namelist"], [149, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[151, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[152, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[153, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[153, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[154, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[154, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[155, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "compute_cell_count"], [157, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[158, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"], [160, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[161, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[161, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[162, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[162, 1, 1, "", "__init__"], [163, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[164, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[166, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "run"], [168, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[169, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[169, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[170, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[172, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[174, 0, 1, "", "CosineBell"], [176, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[177, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[179, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "compute_cell_count"], [181, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[182, 0, 1, "", "Init"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[184, 0, 1, "", "Viz"], [186, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[188, 0, 1, "", "InertialGravityWave"], [189, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[188, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[190, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[192, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "normal_velocity"], [194, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[195, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "compute_cell_count"], [197, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[198, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[200, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[200, 1, 1, "", "__init__"], [201, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[202, 0, 1, "", "ManufacturedSolution"], [203, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[202, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[204, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[206, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "normal_velocity"], [208, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[209, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "compute_cell_count"], [211, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[212, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[214, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[214, 1, 1, "", "__init__"], [215, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[216, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[217, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[217, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[218, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[218, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[219, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[219, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[220, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[220, 1, 1, "", "__init__"], [221, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[222, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[222, 1, 1, "", "__init__"], [223, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[224, 2, 1, "", "generate_1d_grid"], [225, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[226, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[227, 2, 1, "", "alter_bottom_depth"], [228, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[229, 2, 1, "", "compute_min_max_level_cell"], [230, 2, 1, "", "compute_z_level_layer_thickness"], [231, 2, 1, "", "compute_z_level_resting_thickness"], [232, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[233, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[89, 2, 1, "", "get_available_parallel_resources"], [90, 2, 1, "", "get_parallel_command"], [91, 2, 1, "", "run_command"], [92, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[93, 2, 1, "", "write"]], "polaris.remap": [[94, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[94, 1, 1, "", "__init__"], [95, 1, 1, "", "dst_from_lon_lat"], [96, 1, 1, "", "dst_from_mpas"], [97, 1, 1, "", "dst_from_points"], [98, 1, 1, "", "dst_from_proj"], [99, 1, 1, "", "dst_global_lon_lat"], [100, 1, 1, "", "get_remapper"], [101, 1, 1, "", "runtime_setup"], [102, 1, 1, "", "src_from_lon_lat"], [103, 1, 1, "", "src_from_mpas"], [104, 1, 1, "", "src_from_proj"]], "polaris.run": [[105, 2, 1, "", "complete_step_run"], [106, 2, 1, "", "load_dependencies"], [109, 2, 1, "", "setup_config"], [110, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[107, 2, 1, "", "run_single_step"], [108, 2, 1, "", "run_tasks"]], "polaris.seaice": [[254, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[254, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[255, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[256, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[256, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[257, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[257, 1, 1, "", "__init__"], [258, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[259, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[259, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[260, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[260, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[261, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[261, 1, 1, "", "__init__"], [262, 1, 1, "", "run"]], "polaris.setup": [[111, 2, 1, "", "setup_task"], [112, 2, 1, "", "setup_tasks"]], "polaris.streams": [[113, 2, 1, "", "read"], [114, 2, 1, "", "update_defaults"], [115, 2, 1, "", "update_tree"], [116, 2, 1, "", "write"]], "polaris.suite": [[117, 2, 1, "", "setup_suite"]], "polaris.validate": [[118, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[119, 2, 1, "", "plot_global"]], "polaris.viz": [[120, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[121, 0, 1, "", "PolarisYaml"], [125, 2, 1, "", "main_mpas_to_yaml"], [126, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [127, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[121, 1, 1, "", "__init__"], [122, 1, 1, "", "read"], [123, 1, 1, "", "update"], [124, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 270], "share": [1, 6, 9, 250, 270], "step": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 134, 247, 270, 282, 283, 285, 286, 287, 288, 293], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 42, 72, 77, 81, 105, 106, 107, 108, 109, 110, 135, 142, 159, 167, 171, 173, 183, 185, 187, 191, 199, 201, 205, 213, 215, 221, 223, 247, 251, 258, 262, 282, 283, 285, 286, 287, 288, 289, 292, 293], "onc": 1, "befor": 1, "depend": [1, 6, 247], "output": [1, 247, 270], "daughter": 1, "task": [1, 3, 48, 49, 50, 51, 52, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 239, 243, 246, 249, 250, 252, 255, 256, 257, 258, 259, 260, 261, 262, 265, 270, 284, 288, 289, 291, 293, 295], "work": 1, "directori": [1, 245], "structur": [1, 245], "i": [1, 289], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 251, 269, 271, 289], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 18, 135, 247, 251, 276], "other": [1, 132, 247, 270, 276, 289], "implement": [1, 2], "set": [1, 135, 251, 289], "up": [1, 251, 289], "test": [1, 2, 6, 134, 135, 270, 271, 292], "And": 1, "valid": [1, 2, 3, 17, 118, 170, 171, 237, 257, 258, 270, 289], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 135, 251, 270, 272, 273, 274, 275, 276, 277, 282, 283, 285, 286, 287, 288, 292, 293], "same": 2, "api": 3, "refer": [3, 134, 135], "compon": [3, 14, 19, 20, 21, 22, 23, 55, 135, 234, 244, 250, 251, 263, 280, 289, 290], "polari": [3, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 247, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 269, 289], "framework": [3, 10, 134, 135, 237, 238, 240, 241, 242, 250, 253, 266, 278], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 63, 64, 65], "setup": [3, 5, 8, 35, 46, 57, 73, 78, 83, 111, 112, 149, 160, 168, 247], "suit": [3, 5, 8, 117, 248, 281, 289, 294], "cach": [3, 5, 8, 54, 247], "mpas_to_yaml": [3, 5], "base": [3, 134], "class": [3, 250], "modelstep": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "config": [3, 6, 9, 14, 56, 57, 132, 135, 244, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 285, 286, 287, 288, 292, 293], "io": [3, 11, 58, 59, 60], "job": [3, 61, 62, 276, 289], "log": [3, 12, 66], "mesh": [3, 13, 14, 18, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 134, 135, 144, 270, 282, 283, 285, 286, 287, 288, 292, 293], "model_step": [3, 84], "namelist": [3, 14, 85, 86, 87, 88, 135], "parallel": [3, 89, 90, 91, 92], "proven": [3, 15, 93], "remap": [3, 16, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "stream": [3, 14, 113, 114, 115, 116, 135, 270], "viz": [3, 119, 120, 172, 173, 184, 185, 186, 187, 200, 201, 214, 215, 222, 223, 238, 240, 241, 242, 261, 262, 266, 270], "yaml": [3, 14, 121, 122, 123, 124, 125, 126, 127, 135], "build": [4, 132, 251, 289], "serial": [5, 8, 107, 108], "deploi": 6, "new": [6, 132, 270], "spack": [6, 132, 251, 289], "environ": [6, 132, 251, 267, 289], "where": 6, "we": 6, "updat": [6, 14, 123, 251], "mach": 6, "conda": [6, 251, 267, 276, 289], "identifi": 6, "e3sm": [6, 14, 135, 251, 289], "machin": [6, 132, 251, 276, 289], "describ": [6, 132], "modul": [6, 8, 250, 251], "env": 6, "variabl": [6, 17], "etc": 6, "creat": [6, 251, 270], "remot": [6, 277], "branch": 6, "petsc": [6, 251], "netlib": [6, 251], "lapack": [6, 251], "albani": [6, 251], "troubleshoot": [6, 251, 267], "mpa": [6, 135, 236, 264], "ocean": [6, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 280], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 132, 135, 244, 247, 270, 271], "comment": 9, "symlink": [11, 60, 247], "download": [11, 58, 247], "spheric": [13, 18, 80, 81, 82, 83, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144], "planar": [13, 18, 79], "uniform": [13, 135, 279], "gener": 13, "model": [14, 134, 135, 145, 146, 147, 148, 149, 150, 235, 264, 270, 289], "an": [14, 135, 270], "ad": [14, 132, 247, 270], "dynam": [14, 270], "input": [14, 247], "partit": [14, 31], "pio": 14, "make": [14, 270], "graph": 14, "against": 17, "baselin": 17, "norm": 17, "visual": [18, 270, 292], "horizont": [18, 270], "field": 18, "global": 18, "lat": 18, "lon": 18, "plot": [18, 270], "add_config": 20, "add_step": [21, 49], "add_task": 22, "remove_step": [23, 51], "add_model_config_opt": 25, "add_namelist_fil": 26, "add_streams_fil": 27, "add_yaml_fil": 28, "dynamic_model_config": [29, 157, 163, 181, 197, 211], "map_yaml_to_namelist": [30, 148], "process_inputs_and_output": 32, "runtime_setup": [33, 43, 101, 247], "set_model_resourc": 34, "update_namelist_pio": 36, "add_depend": 38, "add_input_fil": 39, "add_output_fil": 40, "constrain_resourc": [41, 147, 247], "set_resourc": 44, "set_shared_config": [45, 52], "validate_baselin": 47, "configur": [50, 165, 175, 249, 267], "__main__": 53, "main": 53, "update_cach": 54, "get_compon": 55, "polarisconfigpars": [56, 57], "imp_r": 59, "get_slurm_opt": 61, "write_job_script": 62, "list_cas": 63, "list_machin": 64, "list_suit": 65, "log_method_cal": 66, "icosahedralmeshstep": [67, 68, 69, 70, 71, 72, 73], "build_subdivisions_cell_width_lat_lon": 68, "get_cell_width": 69, "get_subdivis": 70, "make_jigsaw_mesh": [71, 76], "quasiuniformsphericalmeshstep": [74, 75, 76, 77, 78], "build_cell_width_lat_lon": 75, "compute_planar_hex_nx_ni": 79, "sphericalbasestep": [80, 81, 82, 83], "save_and_plot_cell_width": 82, "make_graph_fil": 84, "ingest": 85, "parse_replac": 86, "replac": 87, "write": [88, 93, 116, 124], "get_available_parallel_resourc": 89, "get_parallel_command": 90, "run_command": 91, "set_cores_per_nod": 92, "mappingfilestep": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "dst_from_lon_lat": 95, "dst_from_mpa": 96, "dst_from_point": 97, "dst_from_proj": 98, "dst_global_lon_lat": 99, "get_remapp": 100, "src_from_lon_lat": 102, "src_from_mpa": 103, "src_from_proj": 104, "complete_step_run": 105, "load_depend": 106, "run_single_step": 107, "run_task": 108, "setup_config": 109, "unpickle_suit": 110, "setup_task": [111, 112], "read": [113, 122], "update_default": 114, "update_tre": 115, "setup_suit": 117, "compare_vari": 118, "globe": 119, "plot_glob": 119, "plot_horiz_field": 120, "polarisyaml": [121, 122, 123, 124], "main_mpas_to_yaml": 125, "mpas_namelist_and_streams_to_yaml": 126, "yaml_to_mpas_stream": 127, "anvil": [128, 272], "intel": [128, 130, 131, 272, 274, 275], "gnu": [128, 129, 130, 131, 133, 272, 273, 274, 277], "chicoma": [129, 273], "cpu": [129, 133, 273, 277], "chrysali": [130, 274], "compymcnodefac": [131, 275], "support": [132, 235, 251, 264, 276, 289], "perlmutt": [133, 277], "pm": 133, "baroclinic_channel": [134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 237], "inertial_gravity_wav": [134, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 240], "cosine_bel": [134, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 238, 281], "manufactured_solut": [134, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 241], "single_column": [134, 216, 217, 218, 219, 220, 221, 222, 223, 242, 252, 255, 256, 257, 258, 259, 260, 261, 262, 266], "converg": [134, 135, 137, 138, 139, 140, 141, 142, 143, 286], "potenti": [134, 135], "energi": [134, 135], "rpe": [134, 135, 151, 164, 165, 166, 167, 168, 237, 282], "vertic": [134, 135, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 270, 279, 282, 283, 285, 286, 287, 288], "coordin": [134, 135, 270, 279], "v": 135, "map": 135, "omega": 135, "mpi": [135, 276], "resourc": 135, "time": [135, 270, 282, 283, 285, 286, 287, 288, 293], "interv": 135, "quasi": 135, "icosahedr": 135, "rest": 135, "sphericalconvergenceanalysi": [137, 138, 139, 140, 141, 142], "compute_error": 138, "convergence_paramet": 139, "exact_solut": [140, 178, 192, 193, 194, 206, 207, 208, 240, 241], "plot_converg": 141, "sphericalconvergenceforward": 143, "add_spherical_base_mesh_step": 144, "oceanmodelstep": [145, 146, 147, 148, 149], "compute_cell_count": [146, 156, 180, 196, 210], "get_time_interval_str": 150, "compute_rp": 151, "add_baroclinic_channel_task": 152, "decomp": [153, 237, 282], "default": [154, 237, 270, 282], "forward": [155, 156, 157, 179, 180, 181, 195, 196, 197, 209, 210, 211, 218, 237, 238, 240, 241, 242, 259, 266, 270], "init": [158, 159, 160, 182, 183, 198, 199, 212, 213, 220, 221, 237, 238, 240, 241, 242, 270], "restart": [161, 162, 163, 237, 282, 292], "restart_step": [162, 163], "restartstep": [162, 163], "analysi": [166, 167, 168, 177, 178, 190, 191, 204, 205, 238, 240, 241, 270], "thread": [169, 237, 282], "cosinebel": [174, 175], "add_cosine_bell_task": 176, "vizmap": [186, 187], "inertialgravitywav": 188, "add_inertial_gravity_wave_task": 189, "exactsolut": [192, 193, 194, 206, 207, 208], "normal_veloc": [193, 207], "ssh": [194, 208], "manufacturedsolut": 202, "add_manufactured_solution_task": 203, "add_single_column_task": [216, 255], "cvmix": [217, 242, 287], "ideal_ag": 219, "idealag": 219, "grid_1d": [224, 225], "generate_1d_grid": 224, "write_1d_grid": 225, "init_vertical_coord": 226, "partial_cel": [227, 228], "alter_bottom_depth": 227, "alter_ssh": 228, "zlevel": [229, 230, 231, 232], "compute_min_max_level_cel": 229, "compute_z_level_layer_thick": 230, "compute_z_level_resting_thick": 231, "init_z_level_vertical_coord": 232, "zstar": 233, "init_z_star_vertical_coord": 233, "initi": [236, 264, 270, 282, 283, 285, 286, 287, 288, 292, 293], "condit": [236, 264, 270, 282, 283, 285, 286, 287, 288, 292, 293], "boundari": 236, "forc": [236, 264, 282, 283, 285, 286, 287, 288, 292, 293], "base_mesh": 238, "ideal": [242, 287], "ag": [242, 287], "categori": [243, 288, 293], "constructor": [244, 247, 249], "organ": 246, "attribut": [247, 249], "copi": 247, "pull": 248, "request": 248, "pr": 248, "nightli": 248, "overview": 250, "code": [250, 251, 270], "style": [250, 251], "packag": 250, "within": 250, "group": [250, 270], "relat": 250, "quick": [251, 289], "start": [251, 270, 289], "develop": [251, 269, 270], "unix": 251, "shell": 251, "repositori": 251, "beginn": 251, "compil": 251, "system": 251, "unknown": 251, "what": 251, "script": [251, 289], "doe": 251, "flag": 251, "activ": 251, "switch": 251, "between": [251, 270], "differ": 251, "onli": 251, "repo": 251, "worktre": 251, "advanc": 251, "seaic": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "exact_restart": [256, 257, 258], "exactrestart": 256, "standard_phys": [260, 261, 262], "standardphys": 260, "standard_physics_test": 266, "exact_restart_test": 266, "solver": 267, "error": 267, "when": 267, "proxi": 267, "lanl": 267, "mac": 267, "gethostbynam": 267, "fail": 267, "glossari": [268, 269], "": 269, "guid": 269, "tutori": [269, 270], "compass": 269, "get": 270, "vari": 270, "resolut": 270, "paramet": 270, "thing": 270, "out": 270, "defin": 270, "more": 270, "again": 270, "one": 270, "second": 270, "enhanc": 270, "comput": 270, "cell": 270, "count": 270, "superclass": 270, "studi": 270, "how": 270, "pass": 270, "data": [270, 277], "A": 271, "case": 271, "slurm": 276, "queue": 276, "mpich": 276, "openmpi": 276, "No": 276, "forg": 276, "jupyt": 277, "notebook": 277, "1d": 279, "grid": [279, 282, 283, 285, 286, 287, 288], "type": 279, "tanh_dz": 279, "60layerphc": 279, "100layere3smv1": 279, "3d": 279, "z": 279, "star": 279, "level": 279, "cosine_bell_cached_init": 281, "baroclin": 282, "channel": 282, "descript": [282, 283, 285, 286, 287, 288, 292, 293], "durat": [282, 283, 285, 286, 287, 288, 292, 293], "core": [282, 283, 285, 286, 287, 288, 292, 293], "cosin": 283, "bell": 283, "inerti": 285, "graviti": 285, "wave": 285, "manufactur": 286, "solut": 286, "singl": [287, 292], "column": [287, 292], "task_nam": [288, 293], "yet": 289, "load": 289, "standalon": 289, "sea": 290, "ic": 290, "standard": 292, "physic": 292, "timestep": 292, "exact": 292}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [244, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [282, "mesh"], [282, "id2"], [282, "id9"], [282, "id17"], [282, "id25"], [282, "id32"], [283, "mesh"], [285, "mesh"], [286, "mesh"], [287, "mesh"], [287, "id3"], [287, "id8"], [288, "mesh"], [292, "mesh"], [292, "id1"], [292, "id6"], [293, "mesh"]], "model_step": [[3, "model-step"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [237, "validate"]], "viz": [[3, "viz"], [238, "viz"], [240, "viz"], [241, "viz"], [242, "viz"], [266, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [270, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [278, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [135, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [135, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "Provenance": [[15, "provenance"]], "Remapping": [[16, "remapping"]], "Validation": [[17, "validation"]], "Validating variables against a baseline": [[17, "validating-variables-against-a-baseline"]], "Validating variables": [[17, "validating-variables"]], "Norms": [[17, "norms"]], "Visualization": [[18, "visualization"]], "horizontal fields from planar meshes": [[18, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[18, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[19, "polaris-component"]], "polaris.Component.add_config": [[20, "polaris-component-add-config"]], "polaris.Component.add_step": [[21, "polaris-component-add-step"]], "polaris.Component.add_task": [[22, "polaris-component-add-task"]], "polaris.Component.remove_step": [[23, "polaris-component-remove-step"]], "polaris.ModelStep": [[24, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[25, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[26, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[27, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[28, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[29, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[30, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[31, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[32, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[33, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[34, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[35, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[36, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[37, "polaris-step"]], "polaris.Step.add_dependency": [[38, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[39, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[40, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[41, "polaris-step-constrain-resources"]], "polaris.Step.run": [[42, "polaris-step-run"]], "polaris.Step.runtime_setup": [[43, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[44, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[45, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[46, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[47, "polaris-step-validate-baselines"]], "polaris.Task": [[48, "polaris-task"]], "polaris.Task.add_step": [[49, "polaris-task-add-step"]], "polaris.Task.configure": [[50, "polaris-task-configure"]], "polaris.Task.remove_step": [[51, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[52, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[53, "polaris-main-main"]], "polaris.cache.update_cache": [[54, "polaris-cache-update-cache"]], "polaris.components.get_components": [[55, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[56, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[57, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[58, "polaris-io-download"]], "polaris.io.imp_res": [[59, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[61, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[62, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[63, "polaris-list-list-cases"]], "polaris.list.list_machines": [[64, "polaris-list-list-machines"]], "polaris.list.list_suites": [[65, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[66, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[67, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[68, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[69, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[70, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[71, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[72, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[73, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[75, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[79, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[81, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[82, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[83, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[84, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[85, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[86, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[87, "polaris-namelist-replace"]], "polaris.namelist.write": [[88, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[89, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[90, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[91, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[92, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[93, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[94, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[95, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[96, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[97, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[98, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[99, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[100, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[101, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[102, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[103, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[104, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[105, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[106, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[107, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[108, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[109, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[110, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[111, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[112, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[113, "polaris-streams-read"]], "polaris.streams.update_defaults": [[114, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[115, "polaris-streams-update-tree"]], "polaris.streams.write": [[116, "polaris-streams-write"]], "polaris.suite.setup_suite": [[117, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[118, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[119, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[120, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[121, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[122, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[123, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[124, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[125, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[126, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[127, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[128, "anvil"], [272, "anvil"]], "intel": [[128, "intel"], [130, "intel"], [131, "intel"]], "gnu": [[128, "gnu"], [130, "gnu"], [131, "gnu"]], "Chicoma": [[129, "chicoma"], [273, "chicoma"]], "chicoma-cpu, gnu": [[129, "chicoma-cpu-gnu"]], "Chrysalis": [[130, "chrysalis"], [274, "chrysalis"]], "CompyMcNodeFace": [[131, "compymcnodeface"], [275, "compymcnodeface"]], "Machines": [[132, "machines"], [276, "machines"]], "Supported Machines": [[132, "supported-machines"], [276, "supported-machines"]], "Other Machines": [[132, "other-machines"], [276, "other-machines"]], "Adding a New Supported Machine": [[132, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[132, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[132, "describing-a-spack-environment"]], "Building the Spack Environment": [[132, "building-the-spack-environment"]], "Perlmutter": [[133, "perlmutter"], [277, "perlmutter"]], "pm-cpu, gnu": [[133, "pm-cpu-gnu"]], "ocean": [[134, "ocean"]], "Tasks": [[134, "tasks"], [239, "tasks"], [249, "tasks"], [252, "tasks"], [265, "tasks"], [284, "tasks"], [291, "tasks"], [295, "tasks"]], "baroclinic_channel": [[134, "baroclinic-channel"], [237, "baroclinic-channel"]], "inertial_gravity_wave": [[134, "inertial-gravity-wave"], [240, "inertial-gravity-wave"]], "cosine_bell": [[134, "cosine-bell"], [238, "cosine-bell"]], "manufactured_solution": [[134, "manufactured-solution"], [241, "manufactured-solution"]], "single_column": [[134, "single-column"], [242, "single-column"], [252, "single-column"], [266, "single-column"]], "Ocean Framework": [[134, "ocean-framework"]], "Spherical Convergence Tests": [[134, "spherical-convergence-tests"], [135, "spherical-convergence-tests"]], "Ocean Model": [[134, "ocean-model"]], "Spherical Base Mesh Step": [[134, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[134, "reference-potential-energy-rpe"]], "Vertical coordinates": [[134, "vertical-coordinates"]], "Ocean framework": [[135, "ocean-framework"]], "YAML files vs. namelists and streams": [[135, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[135, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[135, "setting-mpi-resources"]], "Setting time intervals in model config options": [[135, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[135, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[135, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[135, "vertical-coordinate"], [279, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[135, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[136, "polaris-ocean-ocean"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis": [[137, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error": [[138, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-compute-error"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters": [[139, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution": [[140, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-exact-solution"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence": [[141, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run": [[142, "polaris-ocean-convergence-spherical-sphericalconvergenceanalysis-run"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[143, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[144, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[145, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[146, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[147, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[148, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[149, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[150, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[151, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[152, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[153, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[154, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[155, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[156, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[157, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[158, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[159, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[160, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[161, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[162, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[163, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[164, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[165, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[166, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[167, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[168, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[169, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[170, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[171, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[172, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[173, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[174, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[175, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[176, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[177, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[178, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[179, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[180, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[181, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[182, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[183, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[184, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[185, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[186, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[187, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[188, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[189, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[190, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[191, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[192, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[193, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[194, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[195, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[196, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[197, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[198, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[199, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[200, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[201, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[202, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[203, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[204, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[205, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[206, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[207, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[208, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[209, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[210, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[211, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[212, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[213, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[214, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[215, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[216, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[217, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[218, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[219, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[220, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[221, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[222, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[223, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[224, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[225, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[226, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[227, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[228, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[229, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[230, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[231, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[232, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[233, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[234, "ocean-component"], [280, "ocean-component"]], "Models": [[235, "models"]], "Supported Models": [[235, "supported-models"]], "MPAS-Ocean": [[236, "mpas-ocean"]], "Initial conditions": [[236, "initial-conditions"], [264, "initial-conditions"]], "Boundary conditions": [[236, "boundary-conditions"]], "Forcing": [[236, "forcing"], [264, "forcing"]], "framework": [[237, "framework"], [238, "framework"], [240, "framework"], [241, "framework"], [242, "framework"], [266, "framework"]], "init": [[237, "init"], [238, "init"], [240, "init"], [241, "init"], [242, "init"]], "forward": [[237, "forward"], [238, "forward"], [240, "forward"], [241, "forward"], [242, "forward"], [266, "forward"]], "default": [[237, "default"], [282, "default"]], "decomp": [[237, "decomp"], [282, "decomp"]], "restart": [[237, "restart"], [282, "restart"]], "threads": [[237, "threads"]], "rpe": [[237, "rpe"], [282, "rpe"]], "base_mesh": [[238, "base-mesh"]], "analysis": [[238, "analysis"], [240, "analysis"], [241, "analysis"]], "exact_solution": [[240, "exact-solution"], [241, "exact-solution"]], "cvmix": [[242, "cvmix"], [287, "cvmix"]], "ideal age": [[242, "ideal-age"], [287, "ocean-single-column-ideal-age"]], "Categories of tasks": [[243, "categories-of-tasks"]], "Constructor": [[244, "constructor"]], "Config file": [[244, "config-file"]], "Directory structure": [[245, "directory-structure"]], "Organization of Tasks": [[246, "organization-of-tasks"]], "Steps": [[247, "steps"]], "Step attributes": [[247, "step-attributes"]], "constructor": [[247, "constructor"], [249, "constructor"]], "setup()": [[247, "setup"]], "constrain_resources()": [[247, "constrain-resources"]], "runtime_setup()": [[247, "runtime-setup"]], "run()": [[247, "run"]], "inputs and outputs": [[247, "inputs-and-outputs"]], "Input files": [[247, "input-files"]], "Symlinks to input files": [[247, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[247, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[247, "downloading-and-symlinking-input-files"]], "Copying input files": [[247, "copying-input-files"]], "Output files": [[247, "output-files"]], "Cached output files": [[247, "cached-output-files"]], "Adding other steps as dependencies": [[247, "adding-other-steps-as-dependencies"]], "Suites": [[248, "suites"], [281, "suites"], [289, "suites"], [294, "suites"]], "Pull-Request (PR) suite": [[248, "pull-request-pr-suite"]], "Nightly suite": [[248, "nightly-suite"]], "Task attributes": [[249, "task-attributes"]], "configure()": [[249, "configure"]], "Overview": [[250, "overview"]], "Code Style": [[250, "code-style"]], "Packages and Modules": [[250, "packages-and-modules"]], "Packages": [[250, "packages"]], "Modules": [[250, "modules"]], "Classes": [[250, "classes"]], "Code sharing": [[250, "code-sharing"]], "\u2026in the polaris framework": [[250, "in-the-polaris-framework"]], "\u2026within a component": [[250, "within-a-component"]], "\u2026within a group of related tasks": [[250, "within-a-group-of-related-tasks"]], "\u2026within a task": [[250, "within-a-task"]], "Quick Start for Developers": [[251, "quick-start-for-developers"]], "Unix Shell": [[251, "unix-shell"]], "Set up a polaris repository: for beginners": [[251, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[251, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[251, "supported-machines"]], "Environments with Albany": [[251, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[251, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[251, "unknown-machines"]], "What the script does": [[251, "what-the-script-does"]], "Optional flags": [[251, "optional-flags"]], "Activating the environment": [[251, "activating-the-environment"]], "Switching between different polaris environments": [[251, "switching-between-different-polaris-environments"]], "Troubleshooting": [[251, "troubleshooting"], [267, "troubleshooting"]], "Creating/updating only the polaris environment": [[251, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[251, "building-e3sm-components"]], "Running polaris from the repo": [[251, "running-polaris-from-the-repo"]], "Code style for polaris": [[251, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[251, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[252, "seaice"]], "SeaIce framework": [[253, "seaice-framework"]], "polaris.seaice.SeaIce": [[254, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[255, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[256, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[257, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[258, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[259, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[260, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[261, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[262, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[263, "seaice-component"]], "Supported Model: MPAS-Seaice": [[264, "supported-model-mpas-seaice"]], "standard_physics_test": [[266, "standard-physics-test"]], "exact_restart_test": [[266, "exact-restart-test"]], "Solver errors when configuring conda environment": [[267, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[267, "proxy-on-lanl-macs"]], "gethostbyname failed": [[267, "gethostbyname-failed"]], "Glossary": [[268, "glossary"], [269, null]], "Polaris": [[269, "polaris"]], "User's guide": [[269, null]], "Developer's guide": [[269, null]], "Tutorials": [[269, null]], "Compass": [[269, "compass"]], "Developer Tutorial: Adding a new test group": [[270, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[270, "getting-started"]], "Making a new test group": [[270, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[270, "adding-a-default-task"]], "Varying resolution and other parameters": [[270, "varying-resolution-and-other-parameters"]], "Adding the init step": [[270, "adding-the-init-step"]], "Creating a horizontal mesh": [[270, "creating-a-horizontal-mesh"]], "Adding a config file": [[270, "adding-a-config-file"]], "Adding the step to the task": [[270, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[270, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[270, "creating-an-initial-condition"]], "Adding plots": [[270, "adding-plots"]], "Adding step outputs": [[270, "adding-step-outputs"]], "Adding validation": [[270, "adding-validation"], [270, "id1"]], "Test things out!": [[270, "test-things-out"]], "Adding the forward step": [[270, "adding-the-forward-step"]], "Defining model config options and streams": [[270, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[270, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[270, "adding-more-validation"]], "Test the task again!": [[270, "test-the-task-again"]], "Adding a visualization step": [[270, "adding-a-visualization-step"]], "Adding the viz step to the task": [[270, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[270, "test-the-task-one-more-time"]], "Adding a second task": [[270, "adding-a-second-task"]], "Enhancements": [[270, "enhancements"]], "Adding model config options in code": [[270, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[270, "adding-dynamic-model-config-options"]], "Computing the cell count": [[270, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[270, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[270, "adding-a-parameter-study"]], "Adding the steps to the task": [[270, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[270, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[270, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[271, "config-files"]], "A \u201cuser\u201d config file": [[271, "a-user-config-file"]], "Test-case config files": [[271, "test-case-config-files"]], "config options": [[272, "config-options"], [273, "config-options"], [274, "config-options"], [275, "config-options"], [276, "config-options"], [277, "config-options"], [282, "config-options"], [282, "id7"], [282, "id14"], [282, "id22"], [282, "id30"], [282, "id37"], [283, "config-options"], [285, "config-options"], [286, "config-options"], [287, "config-options"], [287, "id1"], [287, "id6"], [287, "id13"], [288, "config-options"], [292, "config-options"], [292, "id5"], [292, "id10"], [293, "config-options"]], "Intel on Anvil": [[272, "intel-on-anvil"]], "Gnu on Anvil": [[272, "gnu-on-anvil"]], "Chicoma-CPU": [[273, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[273, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[274, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[274, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[275, "intel-on-compymcnodeface"]], "Slurm job queueing": [[276, "slurm-job-queueing"]], "MPICH": [[276, "mpich"]], "OpenMPI": [[276, "openmpi"]], "No MPI from conda-forge": [[276, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[277, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[277, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[277, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[279, "d-grid-type"]], "uniform": [[279, "uniform"]], "tanh_dz": [[279, "tanh-dz"]], "60layerPHC": [[279, "layerphc"]], "100layerE3SMv1": [[279, "layere3smv1"]], "3D vertical coordinates": [[279, "d-vertical-coordinates"]], "z-star": [[279, "z-star"]], "z-level": [[279, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[281, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[282, "baroclinic-channel"]], "description": [[282, "description"], [282, "id1"], [282, "id8"], [282, "id16"], [282, "id24"], [283, "description"], [285, "description"], [286, "description"], [287, "description"], [287, "id2"], [287, "id7"], [288, "description"], [292, "description"], [293, "description"]], "vertical grid": [[282, "vertical-grid"], [282, "id3"], [282, "id10"], [282, "id18"], [282, "id26"], [282, "id33"], [283, "vertical-grid"], [285, "vertical-grid"], [286, "vertical-grid"], [287, "vertical-grid"], [287, "id4"], [287, "id9"], [288, "vertical-grid"]], "initial conditions": [[282, "initial-conditions"], [282, "id4"], [282, "id11"], [282, "id19"], [282, "id27"], [282, "id34"], [283, "initial-conditions"], [285, "initial-conditions"], [286, "initial-conditions"], [287, "initial-conditions"], [287, "id5"], [287, "id10"], [288, "initial-conditions"], [292, "initial-conditions"], [292, "id2"], [292, "id7"], [293, "initial-conditions"]], "forcing": [[282, "forcing"], [282, "id5"], [282, "id12"], [282, "id20"], [282, "id28"], [282, "id35"], [283, "forcing"], [285, "forcing"], [286, "forcing"], [287, "forcing"], [287, "id11"], [288, "forcing"], [292, "forcing"], [292, "id3"], [292, "id8"], [293, "forcing"]], "time step and run duration": [[282, "time-step-and-run-duration"], [282, "id6"], [282, "id13"], [282, "id21"], [282, "id29"], [282, "id36"], [283, "time-step-and-run-duration"], [285, "time-step-and-run-duration"], [286, "time-step-and-run-duration"], [287, "time-step-and-run-duration"], [287, "id12"], [288, "time-step-and-run-duration"], [293, "time-step-and-run-duration"]], "cores": [[282, "cores"], [282, "id15"], [282, "id23"], [282, "id31"], [282, "id38"], [283, "cores"], [285, "cores"], [286, "cores"], [287, "cores"], [287, "id14"], [288, "cores"], [292, "cores"], [292, "id4"], [292, "id9"], [293, "cores"]], "thread": [[282, "thread"]], "cosine bell": [[283, "cosine-bell"]], "inertial gravity wave": [[285, "inertial-gravity-wave"]], "manufactured solution": [[286, "manufactured-solution"]], "convergence": [[286, "convergence"]], "single column": [[287, "single-column"], [292, "single-column"]], "<Category of task>": [[288, "ocean-category-of-task"], [293, "seaice-category-of-task"]], "task_name": [[288, "task-name"], [293, "task-name"]], "Quick Start for Users": [[289, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[289, null]], "Loading polaris conda and spack environments": [[289, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[289, "e3sm-supported-machines"]], "Other machines": [[289, "other-machines"]], "Building supported E3SM components as standalone models": [[289, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[289, "setting-up-tasks"]], "Running a task": [[289, "running-a-task"]], "Running with a job script": [[289, "running-with-a-job-script"]], "Sea ice component": [[290, "sea-ice-component"]], "standard physics test": [[292, "standard-physics-test"]], "timestep and run duration": [[292, "timestep-and-run-duration"], [292, "id11"]], "visualization": [[292, "visualization"]], "exact restart test": [[292, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[19, "polaris.Component"]], "__init__() (polaris.component method)": [[19, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[20, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[21, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[22, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[23, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[24, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[24, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[25, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[29, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[30, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[31, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[32, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[33, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[34, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[35, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[36, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[37, "polaris.Step"]], "__init__() (polaris.step method)": [[37, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[38, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[39, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[40, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[41, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[42, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[43, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[44, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[45, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[46, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[47, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[48, "polaris.Task"]], "__init__() (polaris.task method)": [[48, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[49, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[50, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[51, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[52, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[53, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[54, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[55, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[56, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[56, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[58, "polaris.io.download"]], "module": [[59, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[59, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[61, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[62, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[63, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[64, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[65, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[66, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[69, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[79, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[80, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[80, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[84, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[85, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[86, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[87, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[88, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[89, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[90, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[91, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[92, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[93, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[94, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[105, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[106, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[107, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[108, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[109, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[110, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[111, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[112, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[113, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[114, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[115, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[116, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[117, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[118, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[119, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[120, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[121, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[121, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[122, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[123, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[124, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[125, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[126, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[127, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[136, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[136, "polaris.ocean.Ocean.__init__"]], "sphericalconvergenceanalysis (class in polaris.ocean.convergence.spherical)": [[137, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[137, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[138, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[139, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[140, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.exact_solution"]], "plot_convergence() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[141, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.spherical.sphericalconvergenceanalysis method)": [[142, "polaris.ocean.convergence.spherical.SphericalConvergenceAnalysis.run"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[143, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[143, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[144, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[145, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[145, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[146, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[147, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[148, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[149, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[150, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[151, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[152, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[153, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[153, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[154, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[154, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[155, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[155, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[156, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[157, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[158, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[158, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[159, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[160, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[161, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[161, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[162, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[162, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[163, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[164, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[164, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[165, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[166, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[166, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[167, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[168, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[169, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[169, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[170, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[170, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[171, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[172, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[172, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[173, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[174, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[174, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[175, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[176, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[177, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[177, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[178, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[179, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[179, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[180, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[181, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[182, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[182, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[183, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[184, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[184, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[185, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[186, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[186, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[187, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[188, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[188, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[189, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[190, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[191, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[192, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[192, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[193, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[194, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[195, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[195, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[196, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[197, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[198, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[198, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[199, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[200, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[200, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[201, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[202, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[202, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[203, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[204, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[204, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[205, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[206, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[206, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[207, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[208, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[209, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[209, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[210, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[211, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[212, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[212, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[213, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[214, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[214, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[215, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[216, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[217, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[217, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[218, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[218, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[219, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[219, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[220, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[220, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[221, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[222, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[222, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[223, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[224, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[225, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[226, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[227, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[228, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[229, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[230, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[231, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[232, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[233, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[254, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[254, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[255, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[256, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[256, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[257, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[257, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[258, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[259, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[259, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[260, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[260, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[261, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[261, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[262, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})