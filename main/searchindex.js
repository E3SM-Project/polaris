Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.pickle_step_after_run", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/global_convergence", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/models/index", "developers_guide/seaice/models/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/global_convergence", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.pickle_step_after_run.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/global_convergence.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/models/index.md", "developers_guide/seaice/models/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/global_convergence.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_task", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.load_dependencies", "polaris.run.pickle_step_after_run", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks", "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init", "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.convergence.Convergence", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "Seaice framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "Seaice component", "Models", "MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "Baroclinic channel", "global_convergence", "Tasks", "inertial gravity wave", "manufactured_solution", "single_column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single_column", "<Category of task>", "Suites", "Tasks"], "terms": {"templat": [0, 4, 5, 6, 23, 24, 25, 104, 113, 117, 123, 140, 146, 254, 255, 256], "date": [1, 4, 46, 218, 235, 247, 256], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 39, 41, 42, 43, 46, 48, 49, 51, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 75, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 117, 118, 123, 126, 127, 128, 129, 134, 136, 137, 138, 139, 141, 143, 144, 145, 147, 149, 151, 152, 153, 155, 158, 160, 161, 163, 164, 166, 168, 170, 173, 175, 179, 180, 182, 184, 187, 189, 193, 194, 196, 198, 201, 202, 203, 204, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 237, 238, 241, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280], "purpos": [1, 227, 234, 255, 280], "thi": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 20, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 53, 57, 58, 59, 62, 63, 65, 66, 67, 68, 71, 72, 81, 82, 84, 85, 91, 99, 109, 119, 120, 121, 122, 123, 124, 126, 128, 131, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 179, 181, 182, 183, 184, 185, 187, 188, 189, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 218, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 237, 241, 243, 245, 246, 247, 252, 253, 254, 255, 256, 258, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 278, 279], "section": [1, 2, 4, 5, 6, 8, 11, 13, 15, 20, 26, 66, 110, 114, 123, 126, 128, 131, 208, 210, 216, 217, 218, 226, 227, 228, 231, 232, 234, 235, 247, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 268, 272, 273, 274, 278], "i": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 20, 25, 30, 33, 34, 35, 36, 39, 40, 42, 46, 49, 51, 65, 66, 71, 81, 82, 85, 89, 95, 98, 99, 102, 104, 106, 109, 111, 113, 118, 119, 121, 122, 123, 126, 128, 138, 140, 146, 165, 179, 181, 193, 195, 202, 210, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 277, 278, 279, 280], "summar": 1, "what": [1, 5, 10, 12, 15, 123, 233, 234, 255, 262, 273, 274, 278], "capabl": [1, 5, 15, 123, 231, 234, 255, 261, 274], "ad": [1, 4, 5, 6, 8, 9, 10, 15, 16, 34, 35, 41, 44, 48, 134, 135, 143, 151, 157, 172, 186, 200, 210, 216, 217, 227, 228, 233, 235, 239, 249, 254, 257, 258, 259, 260, 262, 274], "polari": [1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 119, 121, 122, 123, 126, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 247, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 275, 279, 280], "through": [1, 103, 234, 235, 249, 255], "process": [1, 5, 7, 13, 28, 81, 82, 118, 231, 234, 235, 247, 253, 254, 255], "It": [1, 4, 5, 13, 15, 33, 39, 110, 221, 224, 225, 227, 231, 232, 233, 234, 235, 253, 255, 256, 261, 270, 271], "should": [1, 4, 5, 6, 8, 11, 13, 16, 21, 26, 33, 34, 35, 41, 42, 44, 49, 53, 66, 102, 103, 110, 111, 119, 120, 121, 122, 123, 124, 126, 131, 143, 151, 218, 227, 228, 231, 232, 233, 235, 237, 247, 249, 252, 253, 255, 256, 267, 268, 272, 273, 274, 278], "clear": [1, 234, 255], "new": [1, 4, 13, 18, 21, 33, 42, 48, 51, 58, 65, 71, 85, 105, 106, 138, 145, 163, 176, 179, 190, 193, 202, 210, 216, 217, 231, 234, 235, 249, 252, 253, 254, 274], "code": [1, 4, 6, 8, 11, 13, 33, 126, 218, 228, 231, 232, 233, 237, 247, 253, 254, 256, 263, 267, 272, 274], "do": [1, 4, 8, 10, 13, 15, 16, 113, 123, 227, 231, 233, 235, 252, 253, 254, 255, 261, 268, 274], "current": [1, 4, 5, 7, 10, 20, 30, 33, 40, 109, 123, 128, 218, 222, 226, 228, 231, 234, 235, 237, 247, 249, 253, 254, 255, 256, 261, 264, 267, 268, 270, 271, 272, 274, 279, 280], "doe": [1, 5, 8, 11, 13, 231, 254, 255, 261], "primari": [1, 4, 8, 255, 279], "challeng": 1, "respect": [1, 7, 8, 13, 17, 126, 231, 234, 268, 273, 278], "softwar": [1, 75, 262, 274], "also": [1, 4, 5, 6, 8, 12, 13, 17, 28, 39, 48, 109, 110, 123, 126, 168, 210, 216, 217, 218, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 255, 256, 261, 262, 264, 268, 270, 271, 273, 274, 278, 280], "appropri": [1, 4, 5, 13, 21, 70, 123, 218, 221, 224, 225, 226, 228, 231, 235, 247, 254, 255, 256, 257, 258, 259, 260, 261, 262, 273, 274, 278], "final": [1, 5, 6, 7, 123, 221, 222, 224, 225, 226, 229, 231, 233, 251, 255, 268], "statement": [1, 11, 231, 253], "contain": [1, 4, 5, 6, 7, 8, 15, 17, 18, 22, 23, 24, 37, 47, 50, 77, 80, 86, 87, 88, 89, 93, 94, 95, 104, 111, 112, 126, 133, 210, 216, 217, 228, 229, 230, 231, 234, 235, 237, 247, 249, 253, 255, 256, 261, 265, 273, 274, 275, 278], "gener": [1, 2, 3, 6, 7, 11, 13, 17, 21, 22, 23, 24, 28, 41, 65, 109, 126, 143, 151, 208, 218, 220, 221, 222, 224, 225, 226, 228, 231, 235, 237, 247, 255, 256, 261, 268, 270, 271, 274], "regard": 1, "success": [1, 7, 49, 218, 228, 247, 255, 256], "last": [1, 232, 235, 267, 274], "modifi": [1, 7, 8, 12, 13, 20, 32, 44, 104, 106, 128, 148, 221, 224, 225, 231, 233, 235, 254, 255, 256, 267, 274], "add": [1, 4, 5, 6, 8, 12, 13, 16, 19, 21, 22, 23, 24, 25, 34, 35, 36, 43, 44, 64, 69, 74, 104, 105, 106, 113, 114, 117, 118, 123, 135, 140, 146, 157, 172, 186, 200, 221, 227, 228, 231, 233, 234, 235, 239, 253, 255, 256, 262, 268], "your": [1, 3, 4, 5, 10, 123, 218, 234, 235, 247, 252, 255, 256, 257, 258, 261, 262, 268, 274], "list": [1, 5, 6, 8, 13, 16, 20, 33, 36, 42, 43, 46, 47, 81, 82, 99, 102, 103, 108, 109, 133, 149, 153, 158, 160, 173, 184, 187, 189, 198, 202, 231, 232, 233, 234, 235, 241, 253, 254, 255, 256, 258, 261, 262, 268, 274, 279, 280], "appear": [1, 123, 231, 255], "each": [1, 4, 5, 6, 7, 11, 12, 13, 15, 16, 33, 39, 42, 54, 60, 61, 70, 96, 103, 118, 123, 126, 153, 154, 158, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 251, 253, 255, 256, 261, 264, 267, 268, 270, 271, 273, 274, 278, 279], "under": [1, 15, 33, 34, 123, 126, 220, 231, 232, 235, 254, 264, 280], "head": [1, 220, 258], "one": [1, 4, 5, 6, 9, 13, 15, 16, 17, 20, 32, 33, 35, 36, 42, 46, 51, 102, 103, 108, 123, 126, 128, 144, 202, 218, 221, 224, 225, 226, 227, 231, 233, 234, 235, 240, 251, 252, 253, 254, 256, 261, 262, 264, 267, 268, 270, 271, 273, 274, 277, 278, 279, 280], "correspond": [1, 5, 6, 109, 123, 126, 218, 231, 235, 247, 267], "between": [1, 4, 5, 6, 7, 11, 12, 13, 15, 16, 20, 32, 35, 59, 66, 67, 70, 73, 85, 91, 109, 128, 144, 153, 176, 190, 210, 216, 217, 222, 228, 231, 234, 240, 241, 261, 264, 267, 270, 271], "propos": 1, "discuss": [1, 5, 126, 231, 233, 234, 255, 267, 268], "technic": [1, 6], "issu": [1, 5, 231, 232, 235, 268, 270, 271], "rather": [1, 5, 7, 8, 10, 12, 13, 33, 35, 48, 123, 221, 231, 235, 252, 255, 264], "focu": [1, 255], "model": [1, 4, 9, 20, 21, 25, 26, 28, 33, 35, 102, 103, 108, 112, 117, 119, 120, 121, 122, 123, 124, 136, 138, 140, 144, 145, 146, 147, 152, 165, 181, 195, 202, 218, 221, 224, 225, 226, 228, 232, 234, 235, 240, 247, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 267, 270, 271, 273, 278], "To": [1, 4, 5, 11, 15, 16, 109, 123, 126, 218, 231, 234, 235, 247, 249, 255, 257, 258, 259, 260, 261, 262, 264, 268, 274], "extent": [1, 12, 15, 255, 267], "possibl": [1, 7, 10, 61, 126, 220, 231, 232, 234, 255, 264], "rel": [1, 4, 8, 15, 16, 35, 36, 46, 48, 102, 103, 108, 109, 218, 228, 231, 234, 235, 241, 247, 253, 255, 267, 274, 280], "independ": [1, 4, 232, 253], "other": [1, 4, 5, 6, 7, 8, 9, 12, 15, 17, 33, 34, 36, 48, 119, 154, 222, 226, 227, 228, 229, 233, 234, 235, 242, 252, 253, 254, 256, 257, 267, 280], "thu": [1, 6, 13, 255], "allow": [1, 7, 15, 16, 20, 30, 33, 40, 48, 109, 123, 126, 128, 231, 253, 255, 256, 261, 264, 268, 280], "clean": [1, 5, 231, 233, 235], "plan": [1, 12, 218, 224, 225, 231, 247, 253, 270, 271, 280], "For": [1, 2, 4, 5, 6, 11, 13, 15, 17, 103, 119, 123, 220, 221, 224, 225, 226, 231, 234, 235, 255, 256, 257, 265, 268, 270, 271, 274, 275, 280], "you": [1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 119, 120, 121, 122, 123, 124, 218, 228, 231, 233, 234, 235, 247, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 268, 274, 279, 280], "can": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 30, 33, 34, 35, 36, 40, 42, 62, 65, 67, 86, 90, 91, 93, 102, 103, 108, 119, 120, 121, 122, 123, 124, 126, 218, 221, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 271, 274, 279, 280], "provid": [1, 2, 4, 7, 8, 13, 15, 16, 17, 33, 35, 36, 89, 95, 109, 113, 123, 126, 202, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 247, 251, 252, 253, 254, 255, 256, 261, 265, 268, 273, 274], "an": [1, 2, 4, 5, 6, 8, 10, 12, 15, 16, 17, 20, 28, 33, 34, 35, 36, 51, 58, 60, 61, 87, 94, 104, 106, 110, 117, 123, 128, 166, 221, 226, 227, 228, 229, 231, 232, 233, 234, 235, 252, 253, 254, 256, 258, 261, 264, 270, 274, 279, 280], "intend": [1, 5, 7, 8, 232, 256, 271, 280], "meet": 1, "includ": [1, 4, 5, 6, 7, 8, 12, 13, 16, 17, 35, 41, 42, 49, 99, 110, 123, 126, 134, 143, 151, 158, 221, 222, 226, 227, 229, 231, 232, 233, 234, 235, 237, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 277, 278, 279, 280], "detail": [1, 2, 4, 6, 8, 10, 11, 12, 54, 109, 220, 222, 229, 231, 234, 235, 252, 255, 268, 274], "pde": 1, "solver": [1, 233, 235, 254, 274], "similar": [1, 4, 8, 11, 12, 13, 120, 123, 124, 227, 229, 233, 234, 235, 255, 256, 274], "well": [1, 5, 8, 11, 12, 123, 126, 213, 221, 224, 225, 226, 231, 235, 253, 255, 256, 268, 274, 280], "perform": [1, 4, 7, 13, 15, 16, 33, 38, 39, 41, 58, 109, 123, 137, 138, 143, 147, 151, 163, 171, 179, 193, 201, 202, 203, 218, 221, 222, 224, 225, 226, 231, 232, 233, 244, 253, 254, 255, 256, 261, 267, 279], "In": [1, 5, 6, 7, 8, 10, 13, 15, 16, 33, 123, 126, 222, 227, 229, 231, 232, 233, 234, 235, 254, 255, 256, 261, 264, 268, 270, 273, 274, 278, 279, 280], "steer": 1, "awai": 1, "from": [1, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 20, 22, 23, 26, 33, 34, 35, 42, 44, 46, 49, 51, 75, 77, 82, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 103, 104, 105, 106, 109, 111, 113, 114, 117, 118, 123, 128, 131, 138, 160, 165, 168, 173, 181, 184, 187, 195, 198, 214, 218, 220, 221, 222, 224, 225, 226, 227, 228, 233, 234, 237, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 270, 271, 273, 274, 277, 278, 279, 280], "low": [1, 111], "level": [1, 10, 11, 12, 16, 17, 126, 210, 211, 212, 213, 214, 215, 216, 217, 221, 227, 229, 230, 231, 233, 255, 256, 267, 268, 270, 271, 272, 273, 278], "variabl": [1, 4, 12, 17, 18, 20, 33, 36, 42, 58, 65, 71, 75, 85, 86, 90, 93, 109, 111, 112, 113, 118, 123, 126, 128, 134, 138, 141, 149, 153, 158, 160, 163, 168, 170, 173, 176, 179, 182, 184, 187, 189, 190, 193, 196, 198, 202, 203, 210, 216, 217, 220, 226, 234, 235, 241, 242, 247, 252, 255, 257, 258, 259, 260, 261, 262, 265, 267, 273, 274, 275, 278], "declar": [1, 6], "interfac": [1, 9, 208, 209, 210, 216, 217, 231, 234, 235, 254, 255, 264], "sequenc": [1, 4, 13, 230, 231, 234, 253, 255, 274, 279, 280], "If": [1, 4, 5, 6, 7, 8, 11, 13, 16, 17, 20, 30, 33, 35, 40, 43, 44, 51, 81, 82, 83, 102, 109, 111, 119, 120, 121, 122, 123, 124, 128, 138, 179, 193, 202, 221, 231, 233, 234, 235, 249, 252, 253, 255, 256, 261, 262, 264, 268, 273, 274, 278], "want": [1, 4, 5, 10, 13, 15, 16, 44, 123, 126, 231, 235, 252, 255, 256, 261, 262, 272, 274, 280], "math": 1, "syntax": [1, 255], "almost": [1, 8], "ident": [1, 4, 16, 136, 144, 152, 221, 232, 234, 240, 255, 267], "latex": 1, "b": [1, 4, 5, 235, 253, 255, 274], "2": [1, 5, 12, 13, 16, 34, 123, 152, 220, 221, 229, 232, 235, 241, 249, 255, 256, 258, 261, 264, 267, 268, 270, 271, 274], "2ab": 1, "imag": [1, 6, 17, 110, 111, 227, 255, 273, 278], "keep": [1, 4, 5, 8, 13, 20, 48, 227, 228, 231, 233, 235, 255, 273, 278], "mind": [1, 4, 255], "quit": [1, 229, 231, 233, 255], "small": [1, 8, 39, 123, 227, 231, 255, 257, 258, 263, 264, 272, 274], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 29, 30, 33, 35, 39, 40, 42, 48, 70, 81, 82, 99, 103, 114, 123, 126, 128, 138, 179, 193, 202, 210, 213, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 277, 278, 279, 280], "prefer": [1, 123, 231, 232, 255, 256], "png": [1, 12, 17, 222, 255], "okai": [1, 5, 231, 255], "size": [1, 12, 60, 61, 70, 126, 130, 132, 133, 221, 227, 255, 256, 267, 268, 270, 271, 272, 273, 278], "repo": [1, 4, 5, 123, 218, 247, 254, 255, 275], "exampl": [1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 123, 227, 228, 229, 231, 232, 233, 234, 235, 252, 253, 255, 256, 258, 264, 273, 274, 279, 280], "centric": 1, "pseudo": 1, "link": [1, 6, 10, 13, 35, 51, 123, 227, 231, 235, 255, 261, 265, 274, 275], "actual": [1, 4, 5, 11, 231, 233, 235, 255], "sourc": [1, 5, 6, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 255, 256, 257, 258, 259, 260, 261, 262, 274], "project": [1, 4, 5, 6, 57, 89, 95, 218, 234, 235, 247, 249, 255, 256, 257, 258, 261, 274, 275], "manag": [1, 252, 261], "item": [1, 255], "git": [1, 5, 14, 84, 218, 235, 247, 255, 256, 274], "branch": [1, 4, 123, 218, 228, 231, 235, 247, 254, 255, 274], "timelin": 1, "staf": 1, "via": [1, 4, 5, 13, 231, 235, 261], "block": [1, 233], "like": [1, 4, 5, 6, 7, 8, 9, 10, 13, 16, 86, 90, 93, 123, 126, 227, 229, 231, 234, 235, 252, 254, 255, 256, 261, 267, 268, 274, 280], "def": [1, 6, 8, 10, 11, 15, 16, 17, 227, 228, 231, 233, 234, 255], "example_funct": 1, "foo": [1, 234], "return": [1, 6, 26, 47, 49, 52, 59, 60, 61, 66, 70, 77, 80, 81, 91, 100, 101, 103, 104, 106, 109, 113, 117, 118, 126, 129, 131, 133, 139, 161, 164, 177, 178, 180, 191, 192, 194, 208, 211, 212, 213, 214, 215, 233, 234, 255, 268], "0": [1, 4, 5, 6, 12, 13, 15, 16, 17, 60, 86, 90, 93, 109, 111, 119, 120, 121, 122, 123, 124, 126, 210, 215, 216, 217, 220, 222, 227, 231, 234, 249, 252, 255, 256, 258, 261, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 278], "how": [1, 4, 5, 11, 13, 65, 126, 230, 231, 233, 234, 235, 256, 261, 262], "show": [1, 6, 12, 231, 255, 261, 262, 267, 268, 273, 278], "we": [1, 4, 6, 8, 10, 12, 13, 15, 16, 17, 122, 123, 126, 132, 221, 222, 224, 225, 226, 227, 230, 231, 233, 234, 235, 251, 254, 255, 256, 258, 260, 261, 262, 264, 268, 272, 274, 279], "have": [1, 3, 4, 5, 6, 8, 10, 11, 13, 15, 26, 33, 34, 96, 102, 103, 108, 122, 123, 126, 131, 160, 173, 184, 187, 198, 218, 221, 224, 225, 227, 229, 231, 232, 233, 234, 235, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 274, 279, 280], "met": 1, "which": [1, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 23, 24, 26, 33, 35, 47, 87, 94, 102, 103, 104, 108, 111, 113, 123, 126, 131, 136, 144, 152, 177, 178, 191, 192, 218, 220, 227, 228, 230, 231, 233, 235, 240, 255, 256, 258, 261, 264, 267, 268, 270, 271, 272, 273, 274], "regress": [1, 221, 222, 232, 253, 254, 255, 267, 268, 274, 279], "suit": [1, 5, 6, 11, 16, 33, 42, 53, 54, 98, 99, 101, 103, 123, 221, 230, 231, 233, 235, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267], "would": [1, 4, 8, 13, 16, 20, 30, 33, 40, 43, 81, 82, 85, 123, 126, 128, 138, 179, 193, 202, 221, 229, 231, 233, 234, 235, 252, 255, 261, 264, 274], "thei": [1, 4, 5, 6, 7, 11, 12, 13, 17, 33, 34, 35, 44, 48, 65, 99, 114, 123, 126, 218, 221, 222, 227, 230, 231, 233, 234, 235, 249, 253, 254, 255, 256, 261, 264, 267, 268, 274], "need": [1, 3, 4, 5, 6, 10, 11, 12, 13, 15, 16, 25, 43, 48, 66, 123, 126, 140, 146, 218, 227, 228, 231, 233, 234, 235, 247, 249, 252, 254, 255, 256, 257, 261, 262, 264, 267, 268, 274, 279], "configur": [1, 4, 5, 6, 8, 10, 13, 15, 30, 33, 40, 42, 49, 53, 80, 81, 82, 83, 84, 102, 103, 108, 123, 126, 208, 210, 211, 212, 216, 217, 221, 227, 231, 234, 254, 255, 256, 258, 261, 262, 264, 270, 271, 273, 274, 278, 280], "work": [1, 4, 5, 7, 10, 11, 13, 14, 15, 33, 35, 36, 38, 41, 42, 46, 53, 84, 98, 102, 103, 108, 122, 123, 143, 151, 168, 170, 171, 229, 230, 231, 232, 233, 234, 235, 252, 253, 255, 256, 261, 268, 272, 274, 280], "properli": [1, 119, 121, 122, 255, 256, 274], "addit": [1, 6, 8, 16, 33, 226, 227, 228, 229, 231, 233, 234, 235, 255], "modif": [1, 6, 231, 249], "nightli": [1, 235, 274, 279], "anoth": [1, 5, 6, 8, 9, 12, 15, 16, 33, 34, 35, 109, 218, 227, 231, 233, 234, 235, 253, 255, 256, 267, 274, 279, 280], "might": [1, 5, 10, 13, 15, 17, 123, 227, 231, 235, 255, 256, 261, 274], "made": [1, 4, 15, 33, 36, 42, 109, 231, 233, 234, 249, 251, 253, 255, 280], "ensur": [1, 8, 13, 48, 123, 221, 234, 235, 268, 272], "continu": [1, 5, 231, 255], "expect": [1, 11, 15, 123, 228, 231, 235, 255, 268, 272], "page": [2, 6, 123, 257], "auto": 2, "summari": [2, 258], "more": [2, 4, 5, 8, 10, 11, 12, 13, 15, 33, 42, 46, 66, 102, 103, 123, 126, 220, 221, 222, 227, 229, 231, 232, 234, 235, 237, 253, 261, 265, 267, 268, 273, 274, 275, 278, 280], "relev": [2, 6, 8, 126, 224, 225, 255, 257, 258, 259, 260, 261, 262, 273, 274, 278], "main": [2, 5, 6, 8, 13, 38, 123, 171, 227, 228, 234, 235, 255, 280], "part": [2, 4, 5, 6, 11, 13, 16, 17, 33, 42, 138, 163, 179, 193, 202, 221, 224, 225, 231, 232, 234, 235, 254, 255, 264], "document": [2, 8, 13, 231, 234, 254, 256, 274], "ocean": [2, 4, 6, 8, 9, 10, 12, 13, 16, 17, 18, 26, 35, 108, 123, 219, 221, 222, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 253, 254, 255, 256, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 279, 280], "seaic": [2, 18, 35, 231, 248, 251, 253, 254, 274, 275, 278, 280], "As": [3, 4, 5, 12, 16, 60, 126, 227, 231, 232, 233, 234, 235, 255, 256, 264, 268, 272, 279], "long": [3, 20, 30, 33, 40, 81, 82, 128, 138, 179, 193, 202, 231, 255, 267, 274], "follow": [3, 4, 6, 12, 13, 17, 57, 123, 210, 216, 217, 218, 220, 221, 231, 232, 233, 235, 247, 249, 252, 255, 256, 261, 262, 264, 266, 268, 270, 271, 272, 274, 277], "procedur": [3, 123, 235, 255, 262], "conda": [3, 4, 14, 84, 119, 121, 122, 123, 218, 228, 234, 247, 254, 255, 256, 257, 258, 259, 260, 262], "environ": [3, 4, 119, 121, 122, 218, 228, 234, 247, 254, 255, 256, 257, 258, 259, 260, 261, 262], "spack": [3, 4, 119, 121, 122, 252, 254, 255, 257, 258, 259, 260, 261, 262], "compil": [3, 4, 5, 13, 119, 120, 121, 122, 123, 124, 252, 254, 255, 257, 258, 259, 260, 261, 262, 274], "system": [3, 4, 5, 20, 30, 33, 40, 81, 82, 83, 119, 121, 122, 123, 128, 138, 179, 193, 202, 231, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 274], "modul": [3, 4, 8, 9, 11, 13, 14, 22, 23, 24, 57, 77, 104, 119, 121, 122, 123, 126, 227, 228, 229, 231, 233, 237, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 274], "set": [3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 21, 22, 23, 24, 25, 33, 35, 41, 66, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 100, 102, 103, 104, 106, 108, 109, 110, 111, 119, 120, 121, 122, 123, 124, 138, 140, 143, 146, 151, 159, 165, 181, 195, 202, 210, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 230, 231, 233, 234, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 271, 272, 273, 278, 279], "up": [3, 4, 5, 6, 7, 9, 10, 13, 15, 21, 22, 23, 24, 33, 41, 42, 72, 84, 96, 97, 100, 102, 103, 108, 109, 119, 120, 121, 122, 123, 124, 126, 143, 151, 218, 221, 222, 224, 225, 226, 230, 231, 233, 234, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 268, 273, 278, 279, 280], "alreadi": [3, 5, 10, 13, 44, 51, 123, 126, 138, 202, 233, 234, 235, 255, 256, 261, 264, 268, 274], "packag": [3, 4, 5, 6, 8, 9, 12, 13, 14, 22, 23, 24, 35, 44, 50, 77, 84, 104, 108, 113, 123, 227, 228, 229, 230, 231, 233, 235, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 274], "avail": [3, 4, 6, 10, 13, 17, 20, 30, 33, 36, 37, 40, 47, 54, 80, 81, 82, 123, 128, 138, 179, 193, 202, 222, 231, 233, 234, 235, 255, 257, 258, 259, 260, 262, 267, 274, 279], "Then": [3, 5, 6, 10, 13, 119, 120, 121, 122, 123, 124, 218, 221, 224, 225, 226, 228, 231, 233, 235, 247, 255, 261, 267, 274], "run": [3, 4, 5, 6, 9, 11, 15, 16, 17, 20, 25, 30, 33, 34, 36, 39, 40, 42, 43, 46, 57, 80, 81, 82, 91, 102, 103, 108, 122, 123, 128, 137, 138, 140, 144, 146, 149, 153, 155, 160, 163, 165, 173, 179, 181, 184, 187, 193, 195, 198, 201, 202, 203, 218, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 240, 241, 244, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 279, 280], "script": [3, 4, 5, 11, 17, 45, 53, 120, 123, 124, 234, 253, 254, 255, 258, 261], "doc": [3, 6, 255, 262], "cd": [3, 5, 218, 235, 247, 255, 258, 274], "rm": 3, "rf": 3, "developers_guid": [3, 255], "_build": 3, "make": [3, 4, 5, 6, 10, 11, 15, 16, 20, 29, 35, 48, 59, 60, 62, 75, 119, 120, 121, 122, 123, 124, 128, 132, 136, 144, 152, 170, 210, 216, 217, 218, 221, 227, 231, 233, 234, 235, 240, 247, 253, 256, 257, 258, 259, 260, 261, 262, 267, 268, 274, 279], "html": [3, 265], "view": [3, 224, 225, 235, 270, 271], "open": [3, 5, 235, 255], "index": [3, 16, 111, 210, 211, 212, 213, 214, 215, 216, 217, 227, 255], "act": [4, 234, 264], "essenti": [4, 13], "4": [4, 6, 12, 13, 123, 136, 137, 221, 224, 225, 226, 228, 231, 233, 255, 256, 261, 267, 270, 271, 272, 274], "These": [4, 5, 7, 13, 18, 33, 123, 126, 218, 220, 228, 231, 233, 234, 235, 247, 249, 254, 255, 256, 261, 267, 271, 274, 279, 280], "user": [4, 5, 6, 7, 8, 10, 13, 15, 33, 42, 43, 48, 53, 84, 123, 126, 221, 224, 225, 226, 231, 232, 233, 252, 253, 255, 258, 261, 262, 265, 267, 268, 275], "describ": [4, 6, 13, 15, 84, 104, 106, 118, 126, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 268, 274], "below": [4, 5, 13, 20, 30, 33, 40, 81, 82, 123, 128, 138, 179, 193, 202, 218, 227, 229, 231, 233, 235, 255, 256, 261, 264, 268, 270, 271, 272, 274], "when": [4, 5, 11, 13, 15, 16, 21, 22, 23, 24, 26, 33, 34, 39, 42, 43, 48, 49, 51, 54, 98, 109, 123, 126, 131, 215, 221, 222, 224, 225, 226, 227, 231, 233, 234, 235, 254, 255, 257, 258, 259, 260, 262, 264, 267, 268, 272, 274, 280], "instal": [4, 5, 123, 235, 255, 261, 262, 274], "abov": [4, 6, 13, 16, 123, 227, 229, 231, 232, 233, 234, 235, 255, 256, 268, 270, 271, 272, 274, 279], "develop": [4, 5, 6, 7, 11, 12, 17, 123, 126, 218, 220, 228, 231, 232, 234, 249, 252, 256, 261, 265, 274], "local": [4, 5, 7, 10, 16, 33, 35, 42, 218, 229, 231, 233, 235, 247, 252, 255, 256, 261, 262, 264], "off": [4, 5, 235, 252], "http": [4, 6, 10, 51, 231, 234, 252, 254, 255, 256, 262, 265, 274, 275], "github": [4, 5, 6, 234, 235, 254, 255, 256, 265, 274, 275], "com": [4, 5, 6, 51, 234, 235, 254, 255, 256, 274, 275], "e3sm": [4, 6, 9, 10, 33, 112, 123, 218, 228, 231, 232, 234, 247, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 275], "creat": [4, 7, 10, 11, 12, 13, 14, 15, 16, 18, 20, 33, 35, 39, 42, 51, 58, 59, 65, 66, 71, 85, 92, 102, 103, 108, 112, 123, 126, 134, 136, 137, 138, 141, 144, 145, 147, 149, 152, 153, 155, 158, 160, 163, 166, 168, 170, 173, 175, 176, 179, 182, 184, 187, 189, 190, 193, 196, 198, 201, 202, 203, 204, 206, 210, 216, 217, 222, 226, 227, 231, 232, 233, 234, 240, 241, 243, 244, 245, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 268, 274, 279], "see": [4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 119, 121, 122, 123, 221, 222, 225, 231, 233, 235, 237, 252, 255, 256, 261, 265, 266, 267, 272, 273, 274, 275, 277, 278, 279, 280], "mode": [4, 13, 228, 235, 253, 254, 255, 274], "mean": [4, 161, 222, 224, 225, 235, 255, 264, 267, 270, 271, 279], "chang": [4, 5, 7, 13, 15, 65, 96, 97, 218, 228, 231, 232, 233, 234, 235, 237, 247, 253, 255, 256, 258, 262, 264, 267, 274, 279], "reflect": [4, 235], "call": [4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 28, 33, 39, 42, 43, 44, 57, 91, 98, 123, 126, 221, 224, 225, 226, 228, 231, 232, 233, 234, 235, 252, 253, 254, 255, 256, 261, 262, 274], "tool": [4, 5, 8, 11, 13, 15, 218, 228, 231, 235, 247, 254, 255, 256], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 25, 26, 30, 33, 34, 35, 39, 40, 42, 46, 49, 53, 66, 75, 78, 81, 82, 85, 91, 98, 109, 110, 111, 112, 113, 118, 119, 123, 126, 128, 129, 130, 131, 132, 138, 139, 140, 146, 153, 158, 160, 164, 168, 179, 180, 186, 189, 193, 194, 202, 208, 210, 211, 212, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 241, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 270, 271, 272, 273, 274, 277, 279, 280], "task": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 30, 32, 33, 36, 37, 39, 40, 41, 47, 54, 57, 58, 63, 65, 68, 71, 80, 81, 82, 84, 85, 96, 97, 98, 99, 102, 103, 108, 123, 126, 128, 130, 132, 218, 220, 221, 222, 224, 225, 226, 228, 229, 231, 232, 235, 237, 247, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 275, 279], "support": [4, 5, 7, 12, 15, 33, 126, 210, 216, 217, 220, 222, 231, 234, 253, 254, 255, 256, 258, 262, 264, 267, 272, 280], "machin": [4, 7, 33, 35, 42, 52, 53, 84, 102, 103, 108, 218, 231, 233, 234, 247, 254, 255, 256, 257, 258, 259, 260, 262], "option": [4, 6, 8, 12, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 40, 42, 43, 44, 46, 48, 49, 51, 52, 53, 54, 58, 64, 65, 66, 69, 71, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 99, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 123, 128, 131, 138, 140, 146, 148, 159, 165, 176, 179, 181, 190, 193, 195, 202, 208, 210, 211, 212, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 231, 232, 233, 234, 243, 247, 249, 252, 254, 256, 264, 266, 274, 280], "h": [4, 13, 255], "t": [4, 5, 6, 8, 10, 11, 13, 33, 34, 118, 123, 126, 138, 177, 178, 191, 192, 202, 224, 225, 231, 233, 234, 235, 252, 255, 256, 258, 260, 261, 266, 267, 270, 271, 274, 279, 280], "test": [4, 6, 7, 8, 17, 42, 46, 53, 80, 81, 82, 85, 96, 97, 101, 109, 123, 127, 134, 135, 137, 138, 144, 145, 147, 148, 149, 150, 152, 157, 158, 159, 160, 162, 163, 166, 168, 169, 170, 172, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 251, 253, 254, 260, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 275, 278, 279], "n": [4, 5, 59, 66, 67, 73, 231, 255, 258, 261, 262, 267, 268, 270, 271, 273, 274, 278], "number": [4, 5, 7, 12, 13, 20, 27, 30, 32, 33, 37, 39, 40, 52, 53, 54, 58, 59, 60, 61, 62, 70, 80, 81, 82, 85, 103, 123, 126, 128, 129, 130, 132, 138, 139, 153, 161, 164, 176, 179, 180, 190, 193, 194, 202, 218, 221, 224, 225, 227, 231, 232, 233, 234, 241, 253, 255, 256, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 278], "v": [4, 235, 255, 270, 271, 279], "By": [4, 13, 16, 34, 35, 126, 218, 228, 233, 247, 255, 256, 267, 272], "default": [4, 6, 8, 13, 16, 17, 20, 33, 34, 35, 42, 46, 53, 66, 71, 76, 84, 85, 86, 90, 93, 99, 102, 103, 105, 108, 111, 119, 121, 122, 123, 126, 128, 138, 202, 218, 222, 224, 225, 226, 227, 228, 231, 233, 235, 247, 249, 254, 256, 257, 258, 259, 260, 261, 262, 264, 268, 272, 273, 274, 278, 280], "all": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 20, 33, 40, 42, 47, 81, 82, 84, 102, 103, 109, 123, 126, 127, 128, 134, 138, 179, 193, 202, 210, 216, 217, 218, 221, 227, 228, 229, 231, 232, 233, 234, 235, 238, 247, 253, 254, 255, 256, 261, 264, 265, 267, 268, 273, 274, 275, 278, 280], "testcas": [4, 255, 256, 267, 272, 274], "example_compact": [4, 218, 228, 247, 256], "1km": [4, 255, 267, 274], "test1": 4, "1": [4, 6, 12, 13, 15, 16, 17, 33, 60, 119, 120, 121, 122, 123, 124, 126, 136, 138, 152, 179, 193, 201, 202, 203, 210, 216, 217, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 235, 249, 252, 255, 256, 258, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274], "test2": 4, "displai": [4, 7, 262], "path": [4, 5, 8, 10, 13, 16, 33, 35, 36, 42, 46, 48, 49, 51, 54, 57, 84, 102, 103, 108, 109, 111, 123, 218, 227, 228, 231, 233, 234, 235, 241, 247, 253, 255, 256, 257, 258, 259, 260, 261, 262, 274, 280], "directori": [4, 5, 7, 10, 11, 13, 14, 17, 33, 35, 36, 41, 42, 46, 51, 53, 84, 98, 102, 103, 108, 109, 123, 143, 151, 168, 170, 218, 221, 228, 230, 231, 232, 233, 234, 235, 247, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 268, 274, 280], "help": [4, 5, 12, 123, 227, 229, 231, 235, 254, 255, 261, 265, 275], "messag": [4, 7, 123, 231, 252, 262], "task_expr": [4, 54], "flag": [4, 5, 123, 231, 234, 252, 253, 255, 256, 265, 267, 274, 275], "suppli": [4, 5, 6, 16, 118, 123, 231, 235, 255], "substr": [4, 123], "regular": [4, 17, 54, 59, 66, 158, 160, 255, 257, 260, 261, 262, 274], "express": [4, 54], "subset": 4, "think": [4, 255], "search": [4, 54, 258], "within": [4, 6, 8, 9, 10, 11, 13, 18, 30, 33, 35, 36, 40, 42, 50, 108, 109, 123, 221, 224, 225, 227, 228, 229, 231, 232, 233, 235, 237, 249, 253, 255, 256, 258, 261, 268, 272, 273, 278], "name": [4, 6, 7, 8, 12, 13, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 33, 34, 35, 36, 42, 44, 49, 51, 52, 53, 54, 58, 65, 71, 75, 77, 85, 86, 87, 88, 89, 90, 93, 94, 95, 99, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 117, 123, 126, 128, 131, 133, 134, 138, 145, 161, 163, 166, 168, 170, 202, 209, 227, 228, 231, 233, 234, 235, 243, 253, 255, 256, 262, 267, 274, 279], "singl": [4, 7, 17, 111, 123, 200, 201, 203, 204, 206, 226, 231, 233, 234, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 253, 255, 261, 268, 270, 271, 272, 277], "given": [4, 6, 7, 12, 13, 15, 16, 18, 20, 49, 60, 70, 77, 81, 82, 99, 104, 106, 109, 113, 126, 128, 147, 161, 213, 221, 222, 226, 231, 233, 252, 254, 255, 256, 267, 268, 272, 273, 274, 278, 279], "instead": [4, 5, 11, 13, 20, 99, 119, 123, 231, 234, 235, 253, 255, 257, 274, 279], "pass": [4, 7, 11, 12, 13, 16, 42, 70, 109, 110, 227, 228, 231, 233, 234, 235, 253, 274], "similarli": [4, 7, 218, 231, 235, 261, 274], "compon": [4, 5, 6, 7, 9, 12, 20, 33, 35, 42, 53, 56, 84, 108, 112, 123, 128, 134, 135, 136, 137, 138, 144, 147, 152, 157, 158, 163, 172, 175, 179, 186, 189, 193, 200, 201, 202, 203, 227, 229, 230, 231, 232, 233, 238, 239, 240, 244, 249, 253, 254, 255, 256, 261, 263, 266, 279, 280], "result": [4, 12, 16, 49, 61, 70, 123, 126, 136, 144, 149, 152, 155, 206, 221, 222, 231, 232, 234, 235, 240, 245, 253, 255, 256, 267, 268, 273, 278, 279], "verbos": [4, 5, 54, 56, 123, 231, 255, 279], "about": [4, 5, 6, 7, 11, 13, 33, 85, 112, 126, 227, 231, 233, 234, 235, 255, 256, 258], "its": [4, 5, 6, 7, 11, 15, 17, 33, 44, 91, 96, 97, 105, 123, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 253, 255, 256, 257, 268, 274, 280], "descript": [4, 6, 255, 256, 265, 275], "short": [4, 137, 201, 203, 231, 232, 233, 234, 244, 255, 267], "core": [4, 6, 7, 13, 20, 30, 32, 33, 35, 37, 39, 40, 42, 53, 80, 81, 82, 108, 123, 126, 127, 128, 136, 137, 201, 203, 221, 226, 227, 228, 231, 232, 233, 234, 249, 253, 255, 256, 257, 258, 259, 260, 261, 262, 274, 279], "subdirectori": [4, 6, 7, 12, 18, 20, 33, 35, 42, 54, 58, 65, 71, 85, 128, 138, 168, 170, 202, 221, 227, 229, 231, 233, 234, 255, 273, 274, 278, 280], "step": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 42, 43, 46, 58, 63, 65, 68, 71, 72, 80, 82, 84, 85, 91, 96, 97, 98, 99, 102, 103, 123, 126, 128, 133, 134, 138, 140, 141, 142, 143, 145, 146, 149, 150, 151, 153, 154, 155, 156, 158, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 179, 181, 182, 183, 184, 185, 187, 188, 193, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 234, 237, 241, 242, 243, 245, 246, 251, 253, 254, 256, 262, 264, 279, 280], "tempat": 4, "subdir": [4, 15, 20, 33, 42, 58, 65, 71, 85, 128, 138, 168, 170, 202, 227, 231, 233, 241, 255], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 6, 8, 11, 12, 13, 42, 98, 218, 227, 228, 231, 233, 247, 253, 254, 255, 265, 272, 273, 275, 278, 280], "must": [4, 6, 10, 13, 17, 20, 23, 24, 33, 36, 38, 108, 110, 111, 123, 126, 128, 171, 220, 231, 233, 235, 255, 264, 280], "built": [4, 13, 102, 103, 108, 123, 218, 228, 235, 247, 254, 256, 261, 274], "execut": [4, 7, 13, 20, 102, 103, 108, 123, 128, 218, 228, 231, 235, 247, 255, 256, 257, 258, 259, 260, 261, 262, 274], "standalon": [4, 13, 122, 123, 228, 235, 253, 254, 261, 275], "mpa": [4, 8, 10, 11, 12, 13, 15, 16, 17, 20, 26, 33, 35, 57, 75, 87, 94, 104, 106, 108, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 131, 158, 168, 176, 190, 209, 218, 219, 221, 222, 224, 225, 226, 228, 231, 234, 235, 237, 238, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 270, 272, 273, 274, 275, 278, 279, 280], "befor": [4, 5, 7, 13, 15, 39, 123, 231, 233, 234, 235, 252, 255, 258, 262, 264, 268, 274], "w": [4, 5, 235, 253, 255, 274], "num": 4, "f": [4, 8, 10, 13, 16, 227, 233, 234, 235, 255, 256, 262, 267, 270, 274], "file": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 33, 34, 35, 36, 39, 41, 42, 44, 46, 49, 51, 57, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 128, 132, 133, 140, 143, 146, 151, 168, 170, 209, 218, 221, 222, 224, 225, 226, 227, 228, 232, 233, 234, 235, 237, 241, 247, 249, 251, 252, 253, 254, 258, 261, 262, 264, 267, 268, 273, 274, 277, 278, 280], "m": [4, 5, 13, 59, 66, 67, 73, 221, 226, 227, 235, 255, 257, 258, 259, 260, 262, 264, 267, 268, 272, 274], "mach": [4, 33, 123, 254, 257, 258, 259, 260, 261, 262, 274], "p": [4, 5, 235, 255, 256, 274], "suite_nam": [4, 7, 99, 101, 103, 108, 274], "specifi": [4, 5, 13, 15, 16, 17, 35, 123, 220, 231, 235, 251, 255, 256, 262, 267, 268, 273, 274, 278], "either": [4, 5, 6, 7, 11, 12, 13, 15, 60, 123, 126, 218, 231, 233, 235, 253, 255, 256, 264, 272, 274], "case": [4, 5, 6, 7, 8, 13, 17, 23, 24, 46, 53, 80, 81, 82, 85, 96, 97, 104, 109, 123, 126, 127, 134, 137, 144, 145, 147, 148, 149, 150, 152, 157, 158, 159, 160, 162, 163, 166, 168, 169, 170, 173, 174, 175, 176, 179, 182, 183, 184, 185, 187, 188, 189, 190, 193, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 235, 237, 238, 240, 243, 244, 245, 246, 253, 254, 255, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 278, 279], "onli": [4, 5, 6, 7, 13, 15, 16, 42, 123, 218, 220, 222, 226, 228, 231, 233, 234, 237, 247, 251, 254, 255, 256, 258, 261, 262, 264, 266, 267, 268, 270, 271, 272, 274, 277], "time": [4, 5, 6, 7, 13, 16, 17, 33, 42, 52, 111, 123, 126, 133, 138, 147, 165, 177, 178, 181, 191, 192, 195, 202, 220, 221, 222, 224, 225, 227, 231, 232, 233, 234, 235, 251, 252, 253, 256, 258, 262, 274, 279], "wai": [4, 6, 12, 13, 33, 62, 67, 123, 231, 233, 234, 235, 252, 254, 255, 261, 264, 272], "altern": [4, 12, 249, 274], "ani": [4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 29, 41, 102, 103, 143, 151, 227, 228, 229, 231, 232, 233, 234, 235, 255, 256, 261, 267, 268, 272, 273, 274, 277, 278], "case_numb": 4, "multipl": [4, 13, 123, 219, 232, 234, 235, 255, 261, 267, 274], "separ": [4, 6, 8, 13, 15, 16, 231, 232, 253, 255, 268, 274], "space": [4, 5, 6, 8, 12, 123, 224, 225, 231, 235, 255, 258, 261, 274], "requir": [4, 5, 7, 13, 20, 30, 33, 34, 40, 85, 128, 138, 179, 193, 202, 218, 227, 228, 231, 232, 233, 234, 235, 247, 249, 252, 254, 255, 256, 261, 264, 265, 273, 274, 275, 278, 280], "few": [4, 12, 13, 20, 30, 33, 40, 81, 82, 123, 128, 221, 224, 225, 226, 231, 234, 255, 256, 261], "basic": [4, 6, 256, 258, 261, 274], "piec": [4, 227, 228, 255], "inform": [4, 6, 7, 33, 85, 109, 118, 176, 190, 231, 233, 235, 256, 258, 265, 274, 275], "abl": [4, 119, 120, 121, 122, 124, 126, 231, 232, 235, 255, 261, 274], "place": [4, 5, 13, 110, 123, 227, 231, 233, 249, 255, 261], "download": [4, 5, 7, 9, 33, 35, 41, 123, 143, 151, 233, 234, 235, 256, 274, 279], "some": [4, 5, 7, 8, 9, 10, 12, 13, 42, 123, 220, 221, 227, 229, 231, 233, 234, 235, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 274, 275, 279, 280], "data": [4, 9, 12, 15, 16, 17, 21, 33, 34, 35, 91, 104, 106, 107, 110, 111, 112, 118, 123, 168, 210, 216, 217, 231, 235, 254, 256, 257, 258, 259, 260, 261, 274, 279, 280], "locat": [4, 5, 13, 17, 33, 42, 102, 103, 108, 218, 231, 235, 237, 247, 253, 255, 256, 258, 261, 264, 267, 268, 274], "where": [4, 6, 13, 16, 33, 35, 42, 49, 53, 84, 102, 103, 108, 110, 123, 126, 210, 213, 216, 217, 218, 228, 230, 231, 233, 235, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 272, 273, 274, 278, 279], "There": [4, 5, 12, 210, 216, 217, 226, 227, 229, 231, 234, 235, 237, 252, 255, 256, 274], "r": [4, 262, 268], "tell": [4, 5, 123, 235], "re": [4, 5, 231, 234, 235, 253, 255, 256, 261, 262, 268], "leav": [4, 17, 222, 256, 268], "unknown": [4, 123, 234, 261], "component_path": [4, 102, 103, 108, 218, 228, 247, 256, 274], "absolut": [4, 8, 33, 35, 48, 102, 103, 108, 218, 228, 231, 235, 247, 274], "landic": [4, 5, 9, 11, 18, 35, 57, 108, 227, 228, 230, 231, 233, 235, 253, 254, 255, 256, 274, 280], "e3sm_submodul": [4, 218, 228, 235, 247, 249, 255], "mali": [4, 123, 228, 231, 235, 253, 255, 256, 274, 280], "dev": [4, 5, 6, 227, 228, 230, 231, 234, 235, 254, 265, 274, 275], "albani": [4, 119, 121, 122, 123, 228, 256, 257, 258, 259, 262, 274], "depend": [4, 13, 15, 17, 33, 34, 41, 96, 97, 123, 143, 151, 222, 233, 235, 253, 254, 255, 256, 261, 262, 264, 268, 274, 280], "whether": [4, 7, 12, 17, 20, 25, 33, 35, 42, 43, 46, 49, 51, 54, 98, 99, 102, 103, 108, 109, 110, 111, 114, 123, 126, 128, 138, 140, 146, 158, 160, 165, 181, 195, 202, 224, 225, 227, 231, 233, 235, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 278], "omega": [4, 26, 112, 128, 131, 176, 190, 218, 228, 234, 235, 253, 255, 265, 270, 271, 274], "config": [4, 6, 7, 9, 10, 11, 12, 15, 17, 20, 21, 24, 25, 26, 33, 34, 35, 42, 44, 49, 52, 53, 64, 66, 69, 80, 81, 82, 83, 84, 100, 102, 103, 108, 110, 112, 113, 114, 115, 117, 118, 128, 131, 140, 146, 159, 165, 176, 181, 190, 195, 208, 210, 211, 212, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 247, 249, 252, 254, 264, 274, 280], "point": [4, 5, 45, 51, 88, 123, 218, 220, 227, 228, 233, 234, 235, 247, 255, 256, 261, 274], "much": [4, 5, 13, 231, 255], "config_fil": [4, 102, 103, 108], "work_dir": [4, 10, 33, 42, 53, 84, 102, 103, 108, 109, 231, 233, 255], "base": [4, 7, 12, 13, 14, 16, 18, 33, 35, 37, 42, 46, 64, 69, 71, 102, 103, 108, 123, 130, 132, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 228, 230, 231, 233, 234, 235, 247, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 280], "": [4, 5, 6, 7, 10, 11, 13, 15, 33, 35, 36, 42, 44, 46, 72, 98, 105, 108, 123, 126, 168, 170, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 247, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 270, 271, 273, 274, 275, 278], "recommend": [4, 6, 10, 17, 123, 231, 232, 234, 235, 255, 261], "itself": [4, 5, 6, 8, 33, 227, 228, 230, 231, 233, 235, 255, 274], "temp": 4, "scratch": [4, 5, 235, 255, 258, 262, 274], "avoid": [4, 231, 255], "confus": [4, 13, 234, 235, 255], "output": [4, 6, 7, 9, 11, 12, 13, 16, 18, 20, 33, 34, 36, 41, 42, 46, 74, 75, 82, 85, 99, 109, 126, 128, 133, 143, 151, 153, 154, 160, 168, 173, 184, 187, 198, 209, 221, 224, 225, 226, 233, 241, 242, 251, 253, 256, 262, 274, 279], "compar": [4, 9, 16, 33, 36, 42, 102, 103, 108, 109, 153, 154, 202, 222, 226, 232, 233, 234, 235, 241, 242, 251, 253, 255, 266, 267, 274, 277, 279], "previou": [4, 154, 231, 235, 242, 255, 266, 274, 279], "same": [4, 6, 8, 13, 16, 33, 34, 35, 42, 109, 123, 126, 226, 229, 231, 232, 233, 234, 235, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 272, 274, 279, 280], "baseline_dir": [4, 33, 42, 102, 103, 108], "mani": [4, 5, 7, 8, 126, 229, 231, 233, 234, 235, 254, 255, 267, 273, 278], "valid": [4, 9, 33, 36, 42, 210, 211, 212, 213, 214, 215, 216, 217, 221, 224, 225, 226, 227, 234, 235, 254, 264, 267], "sure": [4, 5, 6, 11, 15, 16, 123, 136, 144, 152, 218, 221, 231, 234, 235, 240, 247, 253, 255, 256, 261, 262, 267, 268], "timer": [4, 16, 33, 42, 232, 234], "ha": [4, 5, 8, 13, 20, 30, 33, 34, 36, 40, 42, 44, 83, 91, 97, 119, 121, 122, 123, 128, 138, 179, 193, 202, 218, 228, 229, 230, 231, 232, 233, 234, 235, 247, 249, 252, 253, 255, 256, 264, 267, 272, 274], "both": [4, 5, 6, 7, 12, 13, 25, 123, 126, 140, 146, 221, 227, 228, 230, 231, 235, 254, 255, 256, 266, 270, 271, 272], "custom": [4, 5, 7, 12, 15, 48, 49, 102, 103, 108, 218, 228, 235, 247, 256, 262, 274], "order": [4, 7, 12, 13, 126, 222, 228, 231, 232, 235, 255, 268, 271, 272, 274], "give": [4, 13, 16, 123, 231, 234, 235, 255, 256, 274], "predefin": 4, "so": [4, 5, 6, 8, 11, 12, 13, 16, 17, 20, 32, 97, 123, 126, 128, 210, 216, 217, 218, 221, 224, 225, 227, 228, 231, 233, 234, 235, 247, 253, 255, 256, 261, 262, 264, 267, 268, 272, 274, 279], "after": [4, 5, 6, 13, 15, 16, 17, 33, 35, 36, 72, 91, 97, 123, 211, 212, 218, 228, 231, 233, 235, 247, 255, 256, 258, 262, 274, 277], "c": [4, 5, 103, 123, 231, 235, 257, 258, 259, 260, 261, 262, 266, 274, 279], "argument": [4, 6, 8, 11, 13, 16, 17, 31, 33, 81, 82, 92, 110, 221, 228, 231, 233, 234, 235, 255, 273, 278, 279], "resid": [4, 35], "test_suit": [4, 101, 231], "build": [4, 5, 9, 12, 13, 62, 67, 119, 120, 121, 122, 124, 218, 222, 228, 233, 234, 247, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262], "mpas_model": [4, 256], "overrid": [4, 12, 13, 38, 39, 41, 44, 48, 62, 65, 66, 67, 126, 143, 151, 171, 231, 233, 234, 255, 256, 262, 274], "mai": [4, 5, 6, 7, 11, 12, 13, 16, 34, 36, 39, 96, 110, 123, 218, 220, 227, 231, 232, 233, 235, 237, 247, 249, 252, 253, 255, 256, 262, 268, 272, 273, 274, 278, 280], "baselin": [4, 5, 7, 9, 33, 36, 42, 102, 103, 108, 109, 202, 221, 224, 225, 226, 227, 232, 234, 251, 253, 255, 266, 274], "comparison": [4, 7, 16, 33, 42, 109, 255, 256], "against": [4, 9, 36, 109, 221, 224, 225, 226, 227, 231, 251, 255, 266], "oppos": [4, 25, 140, 146, 158, 160, 165, 181, 195, 255], "parallel": [4, 15, 20, 30, 33, 39, 40, 123, 128, 231, 234, 235, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 274, 280], "been": [4, 5, 13, 33, 36, 42, 44, 91, 102, 103, 108, 119, 121, 122, 123, 126, 160, 173, 184, 187, 198, 218, 228, 231, 233, 234, 235, 247, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 274], "skip_step": 4, "wherea": [4, 11, 231, 253, 255, 266, 280], "typic": [4, 6, 8, 12, 13, 15, 16, 17, 33, 99, 123, 227, 228, 229, 231, 235, 253, 255, 256, 261, 264, 272, 274, 280], "clone": [4, 5, 123, 218, 229, 235, 247, 255, 274], "than": [4, 5, 7, 8, 10, 12, 13, 33, 35, 40, 48, 123, 138, 179, 193, 202, 221, 231, 232, 234, 235, 252, 255, 264, 267, 272], "just": [4, 13, 20, 30, 33, 40, 54, 123, 128, 231, 233, 234, 235, 253, 255, 258, 262], "pickl": [4, 7, 96, 97, 231, 255, 274], "latter": [4, 42, 123], "conveni": [4, 15, 210, 216, 217, 227, 231, 255, 256, 274, 280], "tab": [4, 274], "complet": [4, 7, 22, 23, 24, 255, 274], "explicitli": [4, 6, 126, 221, 224, 225, 231, 235, 255, 256, 274], "select": [4, 7, 111, 231, 235, 255], "two": [4, 9, 16, 109, 144, 154, 221, 222, 224, 225, 226, 227, 228, 231, 232, 234, 235, 240, 242, 255, 267, 268, 270, 271, 277], "edit": [4, 6, 235, 255, 274], "steps_to_run": [4, 42, 99, 231, 233, 255, 256], "init": [4, 5, 6, 13, 16, 17, 30, 40, 134, 218, 220, 227, 228, 231, 233, 234, 235, 247, 249, 256, 267, 268, 270, 271, 274], "full_run": [4, 16, 251, 267, 277], "restart_run": [4, 16, 251, 267, 277], "Or": [4, 231, 256], "accomplish": [4, 231, 234], "thing": [4, 119, 120, 121, 122, 123, 124, 126, 227, 231, 234, 254, 279], "skip": [4, 7, 109, 279], "take": [4, 5, 6, 10, 12, 13, 48, 123, 227, 231, 232, 233, 235, 255, 268, 279], "preced": [4, 48], "over": [4, 8, 13, 48, 110, 231, 233, 234, 254, 255, 264, 267, 272, 274], "special": [4, 253, 273], "databas": [4, 5, 7, 10, 15, 18, 20, 33, 35, 128, 231, 261], "polaris_cach": [4, 7, 18, 231], "symlink": [4, 7, 13, 16, 33, 35, 233, 234, 235], "input": [4, 7, 9, 10, 15, 28, 33, 34, 35, 36, 41, 75, 143, 151, 221, 224, 225, 226, 255, 272], "structur": [4, 12, 26, 131, 230, 233, 254, 255], "without": [4, 35, 231, 234, 235, 255, 256, 260, 261, 270, 271, 273, 274], "redund": [4, 210, 216, 217, 221, 255], "stamp": 4, "revis": [4, 256], "remov": [4, 13, 99, 221, 224, 225, 235, 255], "older": 4, "ones": [4, 210, 216, 217, 234, 255], "version": [4, 5, 14, 28, 48, 84, 109, 123, 218, 221, 227, 228, 229, 231, 233, 234, 235, 247, 248, 254, 255, 256, 261, 262, 265, 267, 268, 274, 275], "A": [4, 5, 6, 7, 10, 12, 13, 15, 17, 18, 21, 23, 24, 26, 33, 34, 35, 36, 37, 42, 47, 48, 54, 58, 59, 62, 65, 66, 67, 71, 77, 80, 82, 84, 85, 86, 87, 88, 89, 93, 94, 95, 99, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 123, 131, 136, 138, 141, 144, 145, 149, 152, 153, 155, 158, 160, 163, 166, 168, 170, 173, 179, 182, 184, 187, 193, 196, 198, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 221, 222, 224, 225, 226, 228, 231, 232, 233, 234, 235, 240, 241, 243, 245, 253, 254, 255, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 273, 274, 277, 278], "aid": 4, "updat": [4, 6, 7, 20, 22, 24, 29, 30, 39, 40, 105, 122, 123, 130, 138, 202, 218, 221, 224, 225, 231, 247, 252, 254, 255, 274], "cached_fil": [4, 18, 231], "json": [4, 7, 18, 46, 231, 262], "anvil": [4, 5, 123, 231, 256, 261, 274], "chrysali": [4, 5, 123, 231, 255, 256, 261, 274], "sinc": [4, 13, 96, 118, 221, 231, 233, 234, 235, 255, 267, 268, 270, 271, 273, 278], "copi": [4, 5, 7, 35, 46, 102, 103, 108, 255, 258, 274], "onto": [4, 235], "lcrc": [4, 5, 7, 10, 46, 231, 234, 256, 257, 259, 261, 274], "server": [4, 7, 35, 46, 231, 234, 256, 262], "whose": [4, 231], "global_ocean": [4, 8, 10, 13, 231, 233, 234, 235, 256, 274], "qu240": [4, 13, 231, 234, 235, 256, 274], "mesh": [4, 6, 9, 15, 20, 33, 75, 87, 94, 111, 126, 128, 129, 130, 132, 137, 139, 141, 158, 160, 161, 163, 164, 166, 168, 170, 173, 176, 180, 182, 184, 187, 190, 194, 196, 198, 201, 203, 204, 210, 216, 217, 220, 221, 224, 225, 226, 227, 229, 231, 233, 234, 235, 243, 244, 253, 254, 256, 264, 266, 274, 279], "phc": [4, 231, 264], "ocean_cached_fil": 4, "pr": [4, 5, 274, 279], "look": [4, 5, 6, 10, 16, 234, 255, 256], "someth": [4, 6, 86, 90, 93, 123, 235, 255], "culled_mesh": [4, 231, 255], "nc": [4, 10, 11, 12, 13, 15, 16, 17, 85, 231, 234, 255], "210803": 4, "culled_graph": [4, 231, 255], "info": [4, 11, 13, 20, 27, 75, 123, 128, 231, 255], "critical_passages_mask_fin": 4, "initial_st": [4, 16, 17, 231, 255], "init_mode_forcing_data": [4, 231], "date_str": [4, 46], "let": [4, 231, 235, 253, 255, 256, 262], "string": [4, 8, 13, 35, 89, 95, 123, 235], "choos": [4, 231, 234, 235, 255, 257, 258, 259, 260, 262, 280], "todai": [4, 46], "dry_run": [4, 46], "saniti": [4, 255], "check": [4, 5, 16, 109, 235, 255, 256, 258, 262, 274, 279], "print": [4, 11, 16, 54, 109, 114, 231, 234, 279], "stdout": [4, 11, 33, 42, 231], "translat": [4, 26, 126, 131], "compass": [4, 85, 218, 231, 234, 253, 255], "convert": [4, 8, 12, 13, 126, 231, 255], "namelist": [4, 6, 7, 9, 20, 21, 22, 25, 26, 28, 29, 32, 41, 102, 103, 108, 117, 118, 128, 131, 132, 140, 143, 146, 151, 218, 221, 222, 224, 225, 227, 228, 231, 233, 234, 237, 247, 249, 251, 254, 255, 256, 272], "stream": [4, 6, 7, 9, 20, 23, 25, 28, 41, 112, 117, 118, 132, 140, 143, 146, 151, 218, 220, 221, 224, 225, 226, 227, 228, 231, 233, 234, 247, 251, 256, 273, 278], "yaml": [4, 9, 20, 21, 24, 25, 26, 123, 128, 131, 132, 140, 146, 221, 224, 225, 226, 231, 254, 255, 258, 262], "e": [4, 5, 6, 10, 13, 26, 33, 34, 44, 57, 112, 123, 131, 218, 227, 229, 231, 232, 234, 235, 247, 252, 253, 254, 255, 256, 262, 264, 267, 268, 270, 271, 272, 273, 274, 278, 280], "g": [4, 5, 6, 10, 13, 26, 33, 34, 44, 57, 112, 123, 126, 131, 218, 227, 229, 231, 232, 234, 235, 247, 252, 253, 254, 255, 256, 264, 267, 268, 270, 271, 272, 273, 274, 278], "forward": [4, 6, 13, 33, 133, 137, 145, 147, 201, 203, 218, 228, 231, 233, 234, 244, 247, 256, 267, 268, 270, 271, 273, 278], "becaus": [4, 5, 6, 10, 11, 12, 13, 33, 34, 220, 231, 233, 234, 235, 255, 258, 260, 262, 274], "don": [4, 5, 6, 13, 123, 126, 231, 233, 234, 235, 255, 260, 274, 280], "format": [4, 6, 10, 12, 13, 112, 118, 231, 232, 233, 235, 255, 256, 258], "note": [4, 6, 15, 16, 255, 262], "keyword": [4, 6, 13, 16, 17, 222, 231, 268], "top": [4, 17, 210, 211, 212, 213, 214, 215, 216, 217, 220, 229, 255, 264], "ignor": [4, 89, 95], "get": [4, 5, 6, 8, 10, 11, 13, 15, 20, 21, 22, 23, 24, 33, 42, 43, 47, 52, 60, 80, 91, 98, 123, 126, 128, 227, 230, 231, 233, 234, 235, 253, 256, 264, 274], "pars": [4, 8, 13, 21, 22, 23, 24, 77, 104, 106], "valu": [4, 6, 8, 13, 16, 17, 21, 26, 109, 110, 111, 114, 131, 147, 221, 228, 231, 233, 234, 254, 255, 256, 264, 267, 268, 272], "doesn": [4, 5, 8, 118, 123, 231, 233, 255, 256, 261, 274], "matter": [4, 255], "usabl": 4, "try": [5, 13, 51, 123, 234, 235, 252, 255, 256, 258, 262, 274], "stai": [5, 235], "sync": 5, "mpi": [5, 13, 15, 85, 119, 122, 123, 128, 130, 132, 221, 224, 225, 231, 235, 252, 254, 255, 257, 258, 259, 260, 262, 274], "librari": [5, 13, 119, 123, 235, 255, 257, 258, 259, 260, 261, 262, 274], "netcdf": [5, 123, 133, 226, 256, 257, 258, 259, 260, 261, 262], "fortran": [5, 123, 257, 258, 259, 260, 261, 262], "pnetcdf": [5, 123, 257, 258, 259, 260, 261, 262], "mkl": [5, 123], "linear": [5, 17, 110, 111, 222, 224, 255, 267, 268, 270], "algebra": 5, "lib": [5, 123], "esmf": [5, 235, 274], "scorpio": [5, 235, 261, 274], "forg": [5, 123, 254, 274], "python": [5, 6, 7, 8, 21, 39, 44, 227, 229, 231, 233, 234, 235, 253, 254, 255, 256, 261, 262, 274], "relat": [5, 6, 10, 12, 13, 123, 126, 218, 221, 224, 225, 226, 227, 231, 235, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 272, 273, 274, 275], "aren": [5, 10, 33, 34, 123, 231, 234, 235, 255, 279], "brief": [5, 6, 255], "tour": 5, "login": [5, 123, 235, 258, 262], "node": [5, 13, 20, 32, 33, 37, 40, 52, 80, 81, 82, 123, 128, 231, 232, 234, 235, 255, 256, 257, 258, 259, 260, 261, 262, 274], "bootstrap": 5, "rest": [5, 133, 215, 264, 268], "setup": [5, 6, 8, 10, 13, 16, 25, 30, 33, 34, 40, 42, 123, 140, 146, 165, 181, 195, 221, 224, 225, 226, 233, 234, 235, 237, 253, 254, 255, 256, 268, 274, 280], "u": [5, 231, 255, 261, 262, 270, 271], "unifi": [5, 123, 235, 262], "find": [5, 6, 49, 61, 83, 123, 218, 234, 235, 252, 255, 256, 274], "diagnost": [5, 256, 257, 258, 260, 261, 262, 274], "across": [5, 6, 13, 17, 221, 227, 231, 232, 233, 234, 235, 253, 255, 263, 267, 268], "analysi": [5, 17, 126, 221, 233, 234, 253, 254, 256, 268, 270, 271, 280], "e3sm_diag": 5, "zppy": 5, "know": [5, 8, 10, 12, 126, 231, 234, 235, 255], "job": [5, 123, 235, 254, 255, 257, 258, 259, 260, 262], "cach": [5, 18, 20, 33, 35, 102, 103, 128, 254, 256, 261, 266, 274, 279], "own": [5, 6, 7, 10, 11, 17, 33, 123, 231, 233, 234, 235, 253, 255, 256, 268, 274, 280], "config_machin": 5, "xml": [5, 13, 104, 106, 107, 118, 247], "here": [5, 8, 11, 13, 15, 16, 123, 221, 224, 225, 226, 227, 230, 231, 234, 235, 251, 255, 256, 257, 258, 259, 260, 261, 262, 272, 273, 274, 278, 279], "close": [5, 61, 123, 254, 268], "ey": 5, "master": [5, 218, 247, 275], "happen": [5, 8, 11, 13, 15, 96, 231, 233, 255, 268], "me": [5, 255], "dev_quick_start": 5, "function": [5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 41, 59, 66, 123, 126, 134, 143, 151, 227, 228, 231, 233, 234, 253, 254, 255, 268, 280], "fork": [5, 255], "haven": [5, 255], "xylar": [5, 16, 123, 255, 256, 261], "mkdir": [5, 235], "now": [5, 123, 231, 235, 255, 256, 261], "involv": [5, 13, 231, 253, 255], "coupl": [5, 252, 254], "alpha": [5, 119, 120, 121, 122, 123, 124, 255], "beta": 5, "rc": 5, "simplify_local_mach": 5, "often": [5, 16, 17, 33, 227, 231, 232, 233, 234, 235, 255, 256, 279, 280], "stand": 5, "omit": [5, 231, 274], "suffix": [5, 35, 103, 231], "onc": [5, 13, 36, 221, 235, 255, 256, 268, 274], "releas": [5, 123, 234, 254, 261, 265, 274], "spack_for_mache_1": 5, "12": [5, 12, 60, 251, 255, 258, 277], "worktre": [5, 254, 255], "my": [5, 123, 258], "fetch": [5, 235, 255], "out": [5, 7, 12, 79, 83, 111, 123, 229, 231, 234, 235, 256, 264, 274], "checkout": [5, 235, 255], "mambaforg": [5, 235, 255, 261, 274], "manual": [5, 13, 42, 43, 231, 233, 280], "linux": [5, 123, 235, 261], "x86_64": [5, 123], "our": [5, 123, 234, 255, 274], "found": [5, 8, 13, 113, 123, 234, 235, 254, 255, 257, 258, 259, 260, 261, 262], "exist": [5, 6, 8, 26, 33, 36, 51, 104, 106, 108, 123, 131, 221, 231, 234, 235, 252, 255, 261, 279], "miniconda3": [5, 235], "alwai": [5, 6, 8, 11, 48, 123, 126, 218, 228, 231, 233, 234, 235, 247, 253, 255, 256], "pleas": [5, 123, 228, 234, 235, 255, 274], "start": [5, 6, 7, 13, 105, 123, 220, 221, 227, 232, 233, 234, 254, 258, 261, 262, 265, 275, 277], "definit": [5, 13, 255], "defin": [5, 6, 7, 8, 12, 13, 14, 17, 33, 42, 65, 89, 95, 102, 103, 108, 123, 157, 172, 186, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 239, 247, 249, 251, 253, 254, 256, 261, 264, 267, 268, 272, 279, 280], "export": [5, 252], "conda_bas": 5, "home": [5, 16, 123, 235, 255, 256, 258, 261, 262], "readi": [5, 231, 255, 262], "configure_polaris_env": [5, 123, 235, 252, 255], "py": [5, 11, 13, 16, 57, 123, 227, 228, 234, 235, 253, 255, 256], "mache_fork": 5, "mache_branch": 5, "update_spack": [5, 123, 235], "tmpdir": [5, 123], "group": [5, 6, 227, 237, 254, 257, 259, 261, 262, 273, 274, 280], "spack_temp": 5, "spack_test": 5, "intel": [5, 123, 261], "gnu": [5, 123, 235, 260, 261, 274], "openmpi": [5, 119, 123, 235, 254, 257, 259, 260, 274], "impi": [5, 119, 123, 257, 260], "recreat": [5, 235, 252], "request": [5, 6, 13, 20, 27, 29, 123, 128, 211, 212, 231, 234, 235, 252, 255, 256, 268], "twice": [5, 255], "deploy": [5, 235], "even": [5, 11, 12, 13, 35, 48, 123, 231, 234, 235, 255, 256, 261, 274], "prebootstrap": 5, "load": [5, 96, 120, 123, 124, 235, 254, 255, 256, 257, 258, 259, 260, 261, 262], "activ": [5, 123, 261, 262, 274], "differ": [5, 13, 15, 16, 48, 62, 67, 109, 123, 126, 135, 138, 147, 218, 221, 227, 228, 229, 231, 232, 233, 234, 247, 253, 255, 256, 258, 262, 267, 268, 270, 271, 273, 278], "On": [5, 6, 12, 123, 235, 261], "tmp": [5, 123], "safe": [5, 13, 231, 235, 267], "strictli": [5, 12, 234, 255], "necessari": [5, 6, 12, 123, 255], "good": [5, 11, 33, 231, 235, 255], "idea": [5, 11, 255], "fresh": [5, 233, 255], "Be": [5, 262], "awar": [5, 6, 123, 255, 261], "with_petsc": [5, 235], "wa": [5, 7, 49, 109, 123, 231, 233, 234, 235, 252, 253, 255, 256, 264, 274], "limit": [5, 232, 235, 267], "amount": [5, 20, 30, 33, 40, 128, 231, 263, 272], "team": [5, 123, 254], "petsc_support": 5, "txt": [5, 7, 108, 232, 252], "with_albani": [5, 235], "albany_support": 5, "encount": [5, 232, 252], "error": [5, 7, 33, 42, 123, 126, 161, 222, 224, 225, 231, 235, 254, 255, 270, 271], "dev_polaris_0_2_0_gnu_mpich": 5, "armpl": 5, "dure": [5, 7, 10, 13, 16, 25, 33, 42, 140, 146, 165, 181, 195, 231, 233, 234, 235, 255, 256, 274, 279, 280], "attempt": [5, 123, 254, 261], "first": [5, 8, 13, 102, 103, 123, 221, 224, 225, 226, 231, 233, 234, 235, 252, 255, 257, 258, 259, 260, 261, 262, 267, 268, 272, 274], "sh": [5, 119, 120, 121, 122, 123, 124, 235, 252, 255, 257, 258, 259, 260, 262, 274], "build_": 5, "command": [5, 9, 14, 31, 33, 39, 81, 82, 84, 92, 123, 231, 234, 235, 253, 254, 255, 258, 261, 262, 274], "pscratch": 5, "suggest": [5, 123, 252], "correctli": 5, "seem": [5, 13, 255, 258, 262], "switch": [5, 255, 256], "v0": 5, "18": [5, 256, 258], "19": 5, "submodul": [5, 218, 228, 235, 247, 255, 274], "serv": [5, 102, 103, 108, 227, 255], "kind": [5, 255], "whichev": [5, 218, 247, 264], "load_dev_polaris_0": [5, 119, 120, 121, 122, 123, 124, 255], "0_chrysalis_intel_openmpi": 5, "recurs": [5, 218, 234, 235, 247, 255, 274], "pio": [5, 20, 29, 32, 128, 221, 224, 225], "openmp": [5, 13, 20, 30, 33, 40, 82, 119, 121, 122, 128, 138, 179, 193, 202, 231, 255, 257, 258, 259, 260, 262], "ifort": [5, 119, 121, 123, 255, 257, 259], "ac": [5, 255], "test_20230202": 5, "ocean_pr_chrys_intel_openmpi": 5, "sbatch": [5, 255, 261, 274], "job_script": [5, 255, 274], "bash": [5, 235, 252, 255, 274], "termin": [5, 7, 123, 231, 235, 255], "isn": [5, 231, 234, 255], "ll": [5, 17, 123, 222, 234, 255, 262, 268], "warn": [5, 268, 270, 271], "0_chrysalis_gnu_openmpi": 5, "e3sm_chrys_gnu_openmpi": 5, "gfortran": [5, 119, 121, 122, 123, 235, 257, 259], "ocean_pr_chrys_gnu_openmpi": 5, "explor": [5, 227, 231, 255, 264], "util": [5, 234, 271], "matrix": 5, "sever": [5, 11, 123, 227, 231, 234, 235, 254, 255, 273, 274, 279], "automat": [5, 6, 8, 11, 13, 17, 123, 126, 231, 233, 234, 235, 255, 256, 257, 259, 260, 261, 262, 274], "0_chrysalis_gnu_openmpi_albani": 5, "true": [5, 6, 8, 12, 13, 16, 17, 20, 43, 49, 51, 109, 110, 111, 114, 119, 120, 121, 122, 123, 124, 128, 203, 220, 227, 231, 235, 255, 256, 257, 258, 259, 260, 261, 262, 267, 274, 280], "full_integr": [5, 274], "landice_full_chrys_gnu_openmpi": 5, "nonhydrostat": 5, "yet": [5, 122, 123, 126, 231, 234, 255], "integr": [5, 147, 221, 234, 255, 267, 268, 273, 278], "sara": 5, "calandrini": 5, "nonhydro": 5, "0_chrysalis_intel_openmpi_petsc": 5, "scalandr": 5, "nonhydro_chrys_intel_openmpi": 5, "grep": [5, 258, 274], "245": 5, "246": 5, "non": [5, 13, 16, 220, 231, 255, 274], "care": [5, 10, 12, 227, 231, 235, 255], "affect": [5, 13, 231, 235, 255], "temporari": [5, 123], "begin": [5, 6, 16, 221, 231, 235, 249, 254, 255, 261, 267, 268, 272], "anymor": 5, "best": [5, 15, 123, 231, 235], "hard": [5, 255, 267, 272], "reset": 5, "sphinx": 6, "written": [6, 7, 33, 42, 53, 110, 111, 231, 233, 255, 277], "myst": [6, 255], "tip": [6, 235], "easi": [6, 35, 234, 255], "tree": [6, 104, 106, 118, 275], "pull": [6, 123, 234, 235, 255, 256], "guid": [6, 126, 221, 224, 225, 226, 232, 234, 255, 258, 261, 265, 275], "baroclin": [6, 134, 135, 136, 137, 138, 141, 144, 147, 149, 152, 153, 155, 202, 221, 227, 228, 231, 255, 265, 269, 280], "channel": [6, 134, 135, 136, 137, 138, 141, 144, 147, 149, 152, 153, 155, 202, 221, 227, 228, 231, 252, 255, 265, 269, 280], "baroclinic_channel": [6, 13, 16, 218, 223, 227, 228, 231, 233, 234, 255, 267, 274, 279, 280], "label": [6, 110, 261, 274], "prepend": 6, "them": [6, 7, 13, 15, 16, 20, 32, 123, 128, 222, 231, 233, 234, 235, 253, 255, 260, 261, 266, 274, 280], "categori": [6, 228, 229, 230, 233, 254, 280], "uniqu": [6, 13, 123, 233, 255], "And": [6, 13, 235, 255], "becom": [6, 231, 233, 255], "who": [6, 235, 255, 256, 262], "citat": 6, "basi": [6, 255], "overview": [6, 254, 258, 262], "common": [6, 8, 11, 13, 39, 42, 123, 221, 222, 224, 225, 226, 227, 231, 232, 233, 234, 252, 253, 255, 256, 261, 262, 273, 274, 278, 279, 280], "characterist": [6, 273, 278], "comment": [6, 232, 233, 256], "appli": [6, 12, 13, 54, 220, 227, 255, 267, 272, 273, 278], "vertic": [6, 17, 201, 220, 221, 224, 225, 226, 231, 256, 263, 265], "grid": [6, 12, 15, 59, 66, 70, 73, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 126, 168, 208, 209, 210, 211, 212, 213, 216, 217, 221, 222, 224, 225, 226, 231, 249, 255, 256], "initi": [6, 7, 33, 111, 133, 137, 141, 166, 182, 196, 201, 203, 204, 221, 222, 224, 225, 226, 227, 231, 233, 234, 244, 252, 253, 254, 256, 264, 266, 279, 280], "condit": [6, 33, 137, 141, 166, 182, 196, 201, 203, 204, 221, 222, 224, 225, 226, 227, 231, 232, 233, 234, 244, 251, 253, 254, 256, 266, 279, 280], "forc": [6, 226, 251, 255, 280], "refer": [6, 13, 33, 133, 147, 210, 213, 216, 217, 231, 234, 235, 253, 254, 255, 264, 267, 274], "wish": [6, 13, 231, 235, 255, 274], "specif": [6, 8, 13, 44, 123, 218, 227, 228, 229, 247, 249, 254, 255, 256, 258, 261, 267, 273, 274, 278, 279], "share": [6, 17, 123, 126, 134, 218, 221, 226, 227, 228, 229, 231, 233, 235, 237, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 267, 272, 273, 274, 278, 280], "public": [6, 10, 231, 255, 256], "api": [6, 11, 254, 255], "underscor": [6, 255], "md": [6, 255], "eval": 6, "rst": [6, 13, 255], "currentmodul": 6, "autosummari": 6, "toctre": 6, "baroclinicchannel": [6, 255], "baroclinicchanneltestcas": [6, 221, 227, 233], "compute_cell_count": [6, 126, 221, 224, 225, 255], "dynamic_model_config": [6, 221, 224, 225, 255], "ot": [6, 255], "numpydoc": [6, 255], "text": [6, 7, 267, 268, 272], "restructuredtext": 6, "compute_land_ice_pressure_and_draft": 6, "ssh": [6, 126, 210, 212, 213, 214, 215, 216, 217, 218, 224, 225, 255, 256, 258, 262, 270, 271], "modifysshmask": 6, "ref_dens": 6, "comput": [6, 12, 70, 123, 126, 128, 129, 133, 139, 161, 164, 176, 180, 190, 194, 213, 214, 215, 221, 222, 224, 225, 226, 231, 235, 258, 259, 261, 262, 267, 270, 271, 274], "pressur": [6, 218, 256, 270, 271], "overli": [6, 255], "ic": [6, 126, 218, 233, 234, 235, 249, 251, 254, 255, 256, 258, 264, 277, 280], "shelf": [6, 126, 227, 234, 255, 256, 264], "draft": [6, 264], "paramet": [6, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 40, 42, 43, 46, 49, 51, 52, 53, 54, 57, 58, 60, 61, 62, 65, 70, 71, 73, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 128, 131, 133, 134, 136, 137, 138, 140, 141, 144, 145, 146, 147, 149, 152, 153, 155, 158, 160, 161, 163, 165, 166, 168, 170, 173, 175, 176, 177, 178, 179, 181, 182, 184, 187, 189, 190, 191, 192, 193, 195, 196, 198, 202, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 227, 231, 233, 239, 240, 241, 243, 244, 245, 267, 268, 270, 271, 272], "xarrai": [6, 15, 17, 111, 210, 211, 212, 213, 214, 215, 216, 217, 231, 255], "dataarrai": [6, 176, 177, 178, 190, 191, 192, 211, 212, 213, 214, 215, 231], "sea": [6, 126, 176, 178, 190, 192, 212, 213, 214, 215, 218, 249, 251, 254, 255, 256, 264, 270, 271, 277, 280], "surfac": [6, 126, 176, 178, 190, 192, 212, 213, 214, 215, 218, 220, 226, 251, 255, 256, 264, 267, 270, 271, 272], "height": [6, 126, 176, 178, 190, 192, 212, 213, 214, 215, 218, 255, 256, 264, 270, 271], "mask": [6, 210, 213, 216, 217, 231, 255, 256, 264], "landicepressur": 6, "deviat": 6, "float": [6, 8, 13, 21, 58, 60, 61, 65, 70, 90, 109, 111, 134, 136, 137, 138, 141, 144, 147, 149, 152, 161, 176, 177, 178, 179, 182, 189, 190, 191, 192, 193, 196, 202, 203, 204, 231, 255], "densiti": [6, 12, 126, 255], "seawat": 6, "displac": 6, "land": [6, 126, 218, 233, 254, 255, 256, 264], "landicedraft": 6, "equal": [6, 226, 231, 234, 272], "entri": [6, 45, 78, 102, 103], "line": [6, 9, 31, 33, 81, 82, 92, 123, 231, 232, 234, 235, 254, 274], "type": [6, 13, 15, 16, 17, 21, 87, 94, 118, 123, 201, 203, 204, 227, 231, 233, 234, 235, 247, 252, 253, 255, 256, 267, 268, 270, 271, 272, 273, 279], "side": 6, "colon": 6, "doubl": [6, 126, 231, 232, 255], "back": [6, 233, 255, 258, 274], "quot": 6, "interfer": 6, "abil": 6, "arg": [6, 11, 33, 81, 82, 231], "indic": [6, 7, 13, 15, 16, 33, 34, 103, 111, 123, 213, 229, 231, 252, 255, 256, 264, 272], "next": [6, 123, 255, 264, 274], "indent": [6, 231], "obviou": [6, 13, 255], "none": [6, 13, 16, 20, 23, 24, 30, 33, 34, 35, 36, 40, 42, 46, 49, 53, 54, 56, 58, 65, 71, 75, 84, 85, 86, 89, 90, 93, 95, 99, 103, 104, 108, 109, 110, 111, 113, 117, 128, 129, 138, 139, 164, 179, 180, 190, 193, 194, 202, 231, 255, 264, 267, 268, 270, 271, 272, 273, 277], "replac": [6, 8, 13, 21, 22, 23, 24, 25, 26, 42, 51, 77, 104, 113, 114, 123, 131, 140, 146, 233, 234, 255, 256, 274], "els": [6, 7, 123, 227, 231, 233, 255], "further": [6, 227, 233, 262, 273, 278], "rais": [6, 8, 16, 33, 36, 49, 51, 126, 231, 234, 255], "list_cas": 7, "list_machin": [7, 234], "list_suit": 7, "anywher": [7, 11, 123, 235], "setup_task": [7, 8], "object": [7, 11, 15, 22, 23, 24, 77, 96, 97, 100, 104, 112, 113, 117, 118, 176, 190, 228, 233, 234, 255], "later": [7, 16, 20, 30, 33, 40, 48, 123, 128, 231, 255, 256], "contrast": 7, "read": [7, 18, 22, 23, 24, 33, 34, 42, 50, 76, 77, 112, 220, 231, 233, 255], "properti": [7, 13, 220, 231, 261, 268], "clean_cas": 7, "delet": [7, 234, 235, 252, 274], "constant": [7, 58, 65, 66, 126, 220, 255, 267, 268, 270, 272, 273, 278], "setup_suit": 7, "clean_suit": 7, "write": [7, 11, 12, 14, 17, 112, 209, 231, 233, 235, 251, 255], "proven": [7, 9, 48, 254, 256], "save": [7, 17, 49, 73, 123, 221, 227, 231, 233, 255, 261, 266, 267], "dictionari": [7, 8, 13, 17, 18, 21, 23, 24, 26, 33, 34, 37, 42, 48, 77, 80, 84, 103, 104, 112, 113, 114, 131, 222, 231, 233, 234, 255, 268], "target": [7, 10, 15, 16, 20, 35, 51, 53, 85, 123, 126, 128, 221, 224, 225, 231, 233, 255, 268], "minimum": [7, 53, 111, 126, 128, 221, 224, 225, 231, 255, 256, 264, 267, 268, 270, 271, 272, 273, 278], "determin": [7, 12, 13, 17, 35, 39, 42, 118, 123, 126, 132, 221, 222, 224, 225, 231, 255, 264, 267, 268, 270, 271, 273, 274, 278], "maximum": [7, 16, 109, 111, 255, 256, 264], "product": 7, "ntask": [7, 13, 15, 20, 30, 33, 37, 40, 81, 82, 85, 126, 128, 138, 179, 193, 202, 231, 233, 255], "cpus_per_task": [7, 13, 33, 37, 40, 81, 82, 231], "attribut": [7, 11, 12, 13, 39, 89, 95, 224, 225, 255], "quickli": 7, "caveat": 7, "sit": 7, "idl": 7, "fraction": [7, 255, 264, 267, 268, 270, 271, 272, 273], "runtim": [7, 25, 39, 140, 146, 165, 181, 195, 231, 255], "min_task": [7, 13, 15, 20, 30, 33, 40, 81, 82, 85, 126, 128, 138, 179, 193, 202, 231, 255], "min_cpus_per_task": [7, 13, 33, 40, 81, 82, 231], "fewest": 7, "least": [7, 12, 228, 235, 267], "fail": [7, 13, 16, 20, 30, 33, 40, 42, 49, 123, 128, 138, 179, 193, 202, 231, 254, 255, 256, 268, 270, 271], "run_task": [7, 231, 233], "run_single_step": 7, "oper": [7, 41, 123, 143, 151, 231, 233, 279], "log": [7, 9, 17, 33, 42, 82, 109, 110, 111, 231, 233, 235, 254, 274], "figur": [7, 226, 227, 229, 231, 256], "cpu": [7, 13, 123, 231, 255, 274], "per": [7, 13, 20, 30, 32, 33, 40, 81, 82, 123, 126, 128, 231, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 273, 278], "method": [7, 8, 12, 13, 15, 16, 18, 20, 25, 26, 33, 34, 38, 39, 42, 43, 44, 48, 57, 58, 62, 65, 66, 67, 71, 72, 85, 91, 112, 126, 127, 128, 131, 134, 136, 137, 138, 140, 141, 144, 145, 146, 147, 149, 152, 153, 155, 158, 160, 163, 165, 166, 168, 170, 171, 173, 175, 176, 179, 181, 182, 184, 186, 187, 189, 190, 193, 195, 196, 198, 201, 202, 203, 204, 206, 221, 222, 224, 225, 228, 231, 233, 234, 238, 240, 241, 243, 244, 245, 255, 268, 273, 278], "retriev": [7, 252], "store": [7, 44, 123, 126, 224, 225, 231, 233, 255, 274], "case_output": [7, 11], "individu": [7, 8, 17, 233, 234, 255, 261, 262, 267, 274, 280], "overal": 7, "whole": [7, 42, 133, 227, 233, 234, 255, 274], "window": 7, "update_cach": 7, "_cached_fil": [7, 231], "map": [7, 15, 18, 26, 65, 66, 85, 110, 111, 131, 168, 170, 222, 233, 235, 256], "origin": [7, 46, 235, 255, 274], "enabl": [7, 17, 226, 231, 252, 256, 262, 270, 271], "consum": [7, 231, 233, 255, 279], "faster": [7, 235], "debug": [7, 119, 120, 121, 122, 123, 124, 255, 257, 258, 259, 260, 262], "parser": [8, 48], "mpas_tool": [8, 11, 12, 70, 221, 224, 225, 226, 231, 255], "mpasconfigpars": 8, "polarisconfigpars": [8, 33, 42, 49, 52, 53, 80, 83, 84, 100, 110, 176, 190, 208, 210, 211, 212, 216, 217, 233, 255], "certain": [8, 16, 48, 123, 231, 235, 256, 273, 278], "add_from_packag": [8, 227, 233, 234, 255], "content": [8, 13, 104, 106, 118, 229, 231, 234, 251, 255, 274, 277], "make_diagnostics_fil": 8, "makediagnosticsfil": 8, "self": [8, 10, 11, 13, 15, 16, 17, 44, 73, 126, 227, 228, 231, 233, 234, 255, 256], "cfg": [8, 44, 227, 228, 233, 234, 255, 256, 274], "except": [8, 33, 36, 49, 231, 234, 255], "second": [8, 12, 13, 138, 202, 226, 231, 234, 267, 272, 277], "behavior": [8, 13, 99, 231, 232, 233, 235, 255], "noth": [8, 123, 252, 268], "being": [8, 25, 33, 42, 98, 103, 109, 123, 140, 146, 165, 181, 195, 231, 233, 234, 235, 255, 264], "__module__": 8, "fals": [8, 12, 13, 16, 17, 20, 33, 35, 43, 46, 54, 56, 98, 99, 103, 108, 109, 111, 123, 128, 204, 206, 220, 227, 231, 233, 249, 255, 256, 258, 260, 262, 267], "class": [8, 10, 12, 13, 15, 16, 17, 18, 20, 28, 33, 38, 42, 48, 57, 58, 65, 71, 85, 112, 126, 127, 128, 134, 136, 137, 138, 141, 144, 145, 147, 149, 152, 153, 155, 158, 160, 163, 166, 168, 170, 171, 173, 175, 176, 179, 182, 184, 187, 189, 190, 193, 196, 198, 201, 202, 203, 204, 206, 218, 221, 222, 224, 225, 226, 227, 228, 231, 233, 237, 238, 240, 241, 243, 244, 245, 247, 251, 255], "larg": [8, 231, 233, 255, 257], "those": [8, 13, 42, 109, 123, 233, 234, 235, 254, 255, 268, 273, 278, 279], "configpars": [8, 81, 82], "getinteg": 8, "getfloat": [8, 11, 13, 15, 231, 255], "getboolean": [8, 231, 255], "implement": [8, 234, 267, 268, 270, 271], "getlist": [8, 233, 255], "comma": [8, 268], "integ": [8, 12], "boolean": [8, 111, 213], "etc": [8, 13, 105, 108, 228, 231, 267], "getexpress": 8, "tupl": 8, "rang": [8, 111, 255, 268], "numpi": [8, 12, 59, 66, 67, 73, 110, 126, 133, 208, 209, 231, 255], "linspac": [8, 17, 222, 268], "arang": 8, "arrai": [8, 59, 66, 67, 73, 110, 126, 208, 209, 211, 212, 213, 214, 255], "One": [8, 12, 255, 274, 279], "advantag": [8, 13, 123, 234, 255, 261], "track": [8, 20, 231, 233, 235], "associ": [8, 12, 13, 17, 210, 216, 217, 221, 233, 235, 253], "belong": [9, 11, 13, 20, 30, 33, 40, 42, 58, 65, 71, 85, 128, 134, 136, 137, 138, 141, 144, 145, 147, 149, 152, 153, 155, 158, 160, 163, 166, 168, 170, 173, 175, 179, 182, 184, 187, 189, 193, 196, 198, 201, 202, 203, 204, 206, 227, 228, 231, 233, 234, 240, 241, 243, 244, 245, 255, 279], "while": [9, 15, 17, 220, 221, 231, 252, 255], "meant": [9, 234, 256], "simplifi": 9, "verifi": [9, 232, 256], "io": [9, 231, 233, 234, 254, 255, 256, 265, 275], "remap": [9, 17, 168, 222, 254, 268, 273, 278], "visual": [9, 12, 15, 160, 184, 198, 222, 224, 225, 227, 231, 233, 253, 254, 268, 270, 271, 273, 278], "lot": [10, 126, 231, 234, 255], "o": [10, 11, 104, 106, 118, 123, 227, 234, 235, 255, 256, 274], "handl": [10, 11, 235, 255, 261], "intern": [10, 20, 42, 231, 235, 252], "lower": [10, 233, 255, 267], "directli": [10, 12, 13, 15, 33, 229, 231, 234, 253, 254, 255, 258], "readm": [10, 233], "importlib": [10, 233], "resourc": [10, 13, 30, 37, 40, 50, 80, 81, 82, 129, 138, 139, 164, 180, 194, 202, 221, 224, 225, 231, 233, 255], "import": [10, 11, 12, 13, 15, 16, 17, 227, 228, 231, 233, 234, 235, 253, 255], "files_for_e3sm": [10, 233, 256], "str": [10, 13, 18, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 42, 46, 49, 51, 52, 53, 54, 58, 65, 71, 75, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 115, 117, 118, 128, 133, 134, 138, 145, 153, 161, 163, 166, 168, 170, 202, 209, 231, 233, 241, 243, 255], "did": [10, 253, 255], "add_input_fil": [10, 15, 16, 34, 231, 233, 255], "collect": [10, 88, 127, 228, 230, 238, 253, 255], "though": [10, 33, 233, 234, 255], "whenev": [10, 231, 255], "flexibl": [10, 222, 233, 235, 255], "No": [10, 254, 270, 271], "step_dir": 10, "database_root": [10, 123, 231, 256, 257, 258, 259, 260, 261, 262, 274], "download_path": 10, "join": [10, 227, 255], "bathymetry_databas": [10, 231, 256], "remote_filenam": 10, "bedmachineantarctica_and_gebco_2019_0": 10, "05_degre": 10, "200128": 10, "local_filenam": 10, "topographi": [10, 213, 227, 231, 255, 264, 267, 268, 270, 271, 272, 273, 280], "url": [10, 35, 49, 231, 252, 256], "web": [10, 231, 256], "anl": [10, 231, 256], "gov": [10, 231, 252, 256, 258, 262], "mpas_standalonedata": [10, 123, 256, 261], "dest_path": [10, 49], "remot": [10, 35, 235, 254], "bathymetri": [10, 231, 256], "strategi": 11, "stderr": [11, 33, 42, 231], "loggingcontext": 11, "check_cal": [11, 231], "most": [11, 39, 123, 218, 227, 228, 231, 234, 235, 247, 255, 256, 261, 262, 264, 265, 275, 280], "won": [11, 234, 255, 256], "logger": [11, 16, 33, 42, 57, 82, 109, 231, 233, 255], "full": [11, 33, 81, 99, 211, 212, 221, 222, 231, 233, 235, 251, 254, 255, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274], "although": 11, "captur": 11, "insid": [11, 231, 234], "explicit": [11, 234], "go": [11, 227, 231, 233, 234, 235, 255, 262], "subprocess": [11, 33, 81, 82, 98, 231, 234, 252], "produc": [11, 13, 15, 17, 33, 34, 36, 46, 126, 136, 144, 152, 221, 222, 224, 225, 226, 231, 234, 235, 240, 251, 255, 270, 271, 274, 277], "otherwis": [11, 123, 231, 233, 255, 257, 258, 259, 260, 261, 262, 267], "intent": 11, "desir": [11, 12, 13, 16, 17, 109, 126, 222, 231, 232, 233, 255, 256, 274], "trick": [11, 231], "direct": [11, 12, 13, 70, 176, 190, 221, 224, 225, 255, 262, 267, 270, 271], "snippet": [11, 255], "dome": [11, 57, 227, 231, 233, 274, 280], "setup_mesh": [11, 231], "setupmesh": [11, 231, 233], "create_landice_grid_from_generic_mpas_grid": 11, "mpas_grid": [11, 231], "landice_grid": [11, 231, 255], "l": [11, 109, 255, 262], "global": [12, 15, 89, 90, 95, 158, 222, 227, 231, 232, 234, 253, 254, 255, 256, 262, 268, 273, 274, 278, 280], "quasiuniformsphericalmeshstep": [12, 222, 233], "icosahedralmeshstep": [12, 222, 233], "jigsaw": [12, 58, 62, 64, 65, 67, 69, 71, 158, 160, 231], "complex": [12, 66, 233, 234, 255], "build_cell_width_lat_lon": [12, 65], "opt": [12, 71], "make_jigsaw_mesh": [12, 65], "icosahedr": [12, 58, 60, 158, 160, 233, 268], "significantli": [12, 264], "smooth": 12, "cell": [12, 13, 17, 58, 59, 60, 61, 65, 66, 67, 70, 73, 87, 94, 126, 128, 129, 139, 161, 164, 176, 178, 180, 190, 192, 194, 210, 211, 212, 213, 216, 217, 221, 224, 225, 227, 231, 249, 264, 267, 268, 270, 271, 272, 273, 277], "quasi": [12, 65, 233, 256, 268, 273, 278], "hand": [12, 90, 234], "restrict": [12, 255, 273], "resolut": [12, 13, 15, 58, 61, 65, 66, 70, 86, 90, 93, 134, 136, 137, 138, 141, 144, 145, 147, 149, 152, 158, 160, 161, 163, 173, 179, 182, 184, 187, 189, 193, 196, 198, 201, 203, 204, 221, 222, 224, 225, 226, 227, 228, 229, 231, 233, 256, 267, 268, 270, 271, 272, 273, 278, 280], "subdivis": [12, 58, 59, 60, 61, 62], "icosahedron": [12, 59, 60, 61, 62], "tabl": [12, 235, 261, 274], "approxim": [12, 58, 60, 61, 65, 126, 129, 139, 164, 180, 194, 221, 224, 225, 235, 255], "width": [12, 58, 59, 60, 65, 66, 67, 73, 255, 267], "km": [12, 58, 59, 60, 61, 65, 66, 67, 70, 73, 134, 136, 137, 138, 141, 144, 145, 147, 149, 152, 163, 179, 182, 189, 193, 196, 203, 204, 221, 222, 224, 225, 227, 233, 255, 256, 267, 268, 270, 271, 272, 273, 278, 280], "5": [12, 60, 123, 126, 147, 221, 222, 231, 232, 234, 252, 255, 256, 267, 268, 273, 274, 278], "240": [12, 60, 222, 233, 256, 268], "6": [12, 60, 231, 255, 265, 267, 272, 274, 275], "120": [12, 60, 232, 233, 268], "7": [12, 60, 123, 255, 262, 268, 274], "60": [12, 13, 60, 222, 233, 264, 268], "8": [12, 60, 123, 221, 235, 255, 256, 267, 268, 270, 271, 274], "30": [12, 60, 227, 255, 262, 267, 268, 272, 273, 278], "9": [12, 17, 60, 123, 222, 255, 268, 274], "15": [12, 13, 60, 221, 255, 267, 268, 272, 273, 274, 278], "10": [12, 60, 123, 218, 221, 224, 225, 227, 228, 255, 256, 261, 264, 267, 270, 271, 272, 280], "11": [12, 60, 123, 255, 274], "3": [12, 60, 123, 221, 231, 232, 235, 252, 255, 256, 261, 262, 264, 267, 268, 270, 271, 273, 274], "13": [12, 60, 255, 267], "94": [12, 60], "spherical_mesh": [12, 66], "cell_width": [12, 58, 59, 60, 61, 65, 66, 67, 73, 233], "icosahedral_method": 12, "jigsaw_mesh_filenam": 12, "msh": 12, "jigsaw_geom_filenam": 12, "geom": 12, "jigsaw_jcfg_filenam": 12, "jig": 12, "jigsaw_hfun_filenam": 12, "spac": 12, "triangles_filenam": 12, "mesh_triangl": 12, "mpas_mesh_filenam": 12, "base_mesh": [12, 58, 65, 231, 255], "plot": [12, 73, 110, 111, 126, 149, 155, 168, 206, 221, 222, 224, 225, 245, 268, 270, 271, 277, 280], "plot_cell_width": 12, "cell_width_filenam": [12, 73], "cellwidthvslatlon": 12, "cell_width_image_filenam": 12, "cellwidthglob": 12, "cell_width_colormap": 12, "3wbgy5": 12, "add_mesh_dens": 12, "vtk": 12, "convert_to_vtk": 12, "vtk_dir": 12, "base_mesh_vtk": 12, "extract": 12, "lat": [12, 15, 59, 65, 66, 67, 73, 86, 88, 90, 93, 110, 168, 222, 256, 268], "lon": [12, 15, 59, 65, 66, 67, 73, 86, 88, 90, 93, 110, 168, 222, 256, 268], "sphere": [12, 222, 268], "vtk_lat_lon": 12, "far": [12, 123, 210, 216, 217, 234, 255], "But": [12, 123, 227, 231, 234, 235, 255, 256, 261], "hexagon": [12, 70, 255, 270, 271], "planar_hex": [12, 70, 221, 224, 225, 226, 231, 255], "make_planar_hex_mesh": [12, 70, 221, 224, 225, 226, 231, 255], "x": [12, 17, 59, 66, 67, 70, 73, 89, 95, 111, 133, 176, 190, 231, 255, 267, 270, 271, 272], "y": [12, 13, 17, 70, 89, 95, 111, 176, 190, 221, 224, 225, 231, 255, 262, 267, 270, 271], "nx": [12, 70, 227, 231, 255], "ny": [12, 70, 227, 231, 255], "dc": [12, 227, 231, 255], "distanc": [12, 70, 255, 267], "adjac": [12, 264], "center": [12, 17, 70, 176, 190, 227, 255, 264, 267], "admittedli": 12, "oddli": 12, "period": [12, 220, 221, 224, 225, 231, 255, 267, 270, 271], "nonperiodic_x": [12, 231, 255], "nonperiodic_i": [12, 231, 255], "consider": [12, 210, 216, 217, 220, 249], "compute_planar_hex_nx_ni": [12, 255], "lx": [12, 70, 255, 267, 270, 271, 272], "ly": [12, 70, 255, 267, 272], "explan": 12, "subtleti": 12, "account": [12, 70, 235, 255, 257, 258, 260, 261, 262, 274], "behav": 12, "stagger": [12, 70], "physic": [12, 70, 244, 251, 255], "howev": [12, 231, 232, 233, 235, 255], "np": [12, 17, 222, 255, 268], "sqrt": [12, 270], "domain": [12, 20, 27, 70, 111, 126, 128, 133, 220, 227, 249, 255, 267, 268, 270, 271, 272, 273, 278, 280], "extra": [12, 235], "factor": 12, "500e3": 12, "160e3": 12, "1e3": [12, 255], "max": [12, 126, 231, 255, 267, 268], "int": [12, 13, 20, 21, 30, 33, 40, 52, 53, 54, 58, 59, 60, 61, 62, 70, 81, 82, 85, 111, 128, 129, 138, 139, 158, 160, 161, 163, 164, 173, 179, 180, 184, 187, 193, 194, 198, 202, 231, 233, 255, 272], "ds_mesh": [12, 17, 111, 255], "creation": [12, 231, 256], "build_mesh": 12, "build_planar_mesh": 12, "too": [12, 13, 20, 30, 33, 40, 81, 82, 128, 227, 231, 234, 255], "distant": 12, "futur": [12, 39, 231, 234, 253, 254, 255, 256, 272, 274, 280], "descend": [13, 15, 126, 228, 231, 233, 234, 237, 255], "modelstep": [13, 126, 231, 233, 237, 255], "update_pio": [13, 20, 128], "make_graph": [13, 20, 128], "construct": [13, 127, 208, 210, 211, 212, 216, 217, 220, 226, 228, 233, 238, 255, 267], "At": [13, 33, 42, 229, 230, 255], "set_model_resourc": 13, "thread": [13, 20, 30, 33, 39, 40, 42, 82, 128, 138, 179, 193, 202, 228, 231, 232, 253, 255, 256, 258, 262, 274, 279], "openmp_thread": [13, 20, 30, 33, 40, 82, 128, 138, 179, 193, 202, 231, 233, 255], "prefix": [13, 35, 123, 235, 256], "end": [13, 221, 231, 233, 234, 235, 251, 253, 255, 258, 267, 268, 270, 271, 272, 277], "yml": 13, "reason": [13, 15, 39, 123, 231, 234, 255, 279], "add_namelist_fil": [13, 20, 126, 231, 233], "add_yaml_fil": [13, 20, 231, 233, 255], "add_model_config_opt": [13, 20, 231, 233, 255], "add_streams_fil": [13, 20, 126, 231, 233], "themselv": [13, 234, 254], "question": [13, 231, 256], "constructor": [13, 221, 224, 225, 227, 228, 255], "simpli": [13, 16, 48, 123, 137, 228, 231, 235, 255, 264, 274, 279], "never": [13, 123, 253], "hierarch": 13, "run_mod": 13, "config_ocean_run_mod": 13, "time_manag": [13, 255], "config_run_dur": [13, 233, 255], "0024_00": 13, "00": [13, 16, 233, 249, 255, 262, 274], "ale_vertical_grid": 13, "config_vert_coord_mov": 13, "impermeable_interfac": 13, "decomposit": [13, 42, 136, 253, 255], "config_block_decomp_file_prefix": [13, 255], "time_integr": [13, 255], "config_time_integr": 13, "rk4": [13, 234], "filename_templ": [13, 255], "restart": [13, 16, 42, 224, 225, 226, 228, 232, 234, 240, 241, 251, 253, 255, 274, 279], "output_interv": [13, 255], "0030_00": 13, "clobber_mod": [13, 255], "truncat": [13, 255], "reference_tim": 13, "0001": [13, 255], "01": [13, 249, 255, 272, 277], "01_00": [13, 249, 255], "tracer": [13, 17, 203, 221, 222, 224, 225, 226, 255, 268, 270, 271, 272], "xtime": [13, 255], "normalveloc": [13, 16, 17, 154, 191, 220, 221, 224, 225, 226, 231, 255, 272], "layerthick": [13, 16, 126, 154, 210, 214, 215, 216, 217, 221, 224, 225, 226, 231, 255], "refzmid": [13, 210, 216, 217, 231, 255], "reflayerthick": 13, "kineticenergycel": 13, "relativevorticitycel": 13, "unlik": [13, 255], "clariti": [13, 231], "guarante": [13, 123, 218, 235, 247], "global_converg": [13, 218, 223, 228, 233, 255, 265, 266, 269, 279], "cosine_bel": [13, 233, 255, 273, 278, 279], "substitut": 13, "config_write_output_on_startup": [13, 255], "0000_00": [13, 255], "config_use_mom_del2": [13, 255], "config_implicit_bottom_drag_coeff": [13, 255], "0e": [13, 271, 272], "config_use_cvmix_background": 13, "config_cvmix_background_diffus": [13, 255], "config_cvmix_background_viscos": [13, 255], "worri": 13, "sometim": [13, 210, 216, 217, 227, 231, 233, 253, 255, 279], "easier": [13, 231, 234, 235, 256, 274, 279], "togeth": [13, 16, 123, 227, 253, 255, 279], "overkil": 13, "reli": [13, 231, 255], "along": [13, 17, 123, 221, 231, 254, 255], "could": [13, 15, 17, 123, 222, 231, 232, 234, 235, 255, 268], "spefic": 13, "nu": [13, 138, 149, 221, 231, 255], "viscos": [13, 138, 147, 149, 221, 231, 234, 255, 267], "hmix": 13, "config_mom_del2": [13, 221, 231, 255], "bool": [13, 20, 21, 25, 33, 35, 42, 43, 46, 49, 51, 54, 98, 99, 102, 103, 108, 109, 110, 114, 128, 138, 140, 146, 158, 160, 165, 181, 195, 202, 255], "cannot": [13, 255], "known": [13, 33, 34, 123, 222, 231, 255], "beforehand": 13, "particularli": [13, 252, 255, 273, 278], "update_namelist_at_runtim": 13, "update_yaml_at_runtim": 13, "config_pio_num_iotask": 13, "pio_num_iotask": 13, "config_pio_strid": 13, "pio_strid": 13, "out_nam": 13, "bit": [13, 123, 234, 253, 255, 267, 274], "complic": [13, 234, 235, 237, 255], "slightli": [13, 235], "sophist": 13, "immutable_stream": [13, 255], "var_struct": [13, 247], "var": [13, 105, 247, 255], "var_arrai": [13, 247], "tag": [13, 254], "taken": [13, 20, 128, 222, 231, 255, 262, 274], "past": 13, "experi": [13, 123, 234, 264], "shown": [13, 123, 229, 233, 272], "featur": [13, 234, 235, 253, 255, 256, 267, 272], "difficult": [13, 123, 261], "synchron": [13, 254], "equival": [13, 235, 255, 257], "template_replac": [13, 23, 24], "treat": [13, 232, 234], "jinja2": [13, 23, 24, 104], "render": [13, 23, 24, 104], "d_": 13, "restart_interv": 13, "stream_replac": 13, "dynamic_adjust": [13, 256], "qu240dynamicadjust": 13, "seri": [13, 126, 149, 155, 222, 224, 251, 255, 266], "dynam": [13, 128, 218, 226, 256, 267, 268, 272, 273], "adjust": [13, 123, 126, 218, 256], "durat": [13, 221, 224, 225, 226, 232, 255], "interv": 13, "spin": 13, "reus": [13, 231, 234, 235, 255, 256, 274], "qualit": 13, "update_streams_at_runtim": 13, "fairli": [13, 233, 234, 235, 255], "hour": [13, 123, 224, 225, 232, 251, 258, 262, 270, 271, 274, 277], "turn": [13, 33, 47, 228, 231, 252, 255, 272], "datetim": 13, "timedelta": 13, "3600": 13, "planar_converg": 13, "delta": [13, 264, 267, 272], "minut": [13, 123, 221, 232, 267, 279], "dai": [13, 147, 221, 222, 226, 251, 255, 267, 268, 272, 277], "03d": 13, "_": [13, 85, 123, 231, 233, 235, 255, 272], "02d": 13, "forgotten": 13, "broken": [13, 231, 234], "immedi": [13, 57, 235, 255], "miss": [13, 231, 255, 256], "detect": [13, 17, 256, 257, 259, 260, 261, 274], "gpmeti": [13, 256], "divid": [13, 264], "partition_graph": [13, 20, 128], "circumst": [13, 16, 33, 34, 231, 255], "wast": 13, "update_namelist_pio": 13, "v1": [13, 264], "better": [13, 15, 123, 274], "v2": [13, 256, 264], "littl": [13, 234, 235, 254, 255], "feel": [13, 123, 231, 255], "runtime_setup": [13, 15, 30, 40, 221, 224, 225, 233], "yourself": [13, 255, 261], "fact": [13, 33, 123], "culler": 13, "cull": [13, 221, 224, 225, 231, 255], "model_step": [13, 231], "make_graph_fil": [13, 231], "field": [13, 16, 73, 75, 111, 168, 210, 216, 217, 220, 221, 224, 225, 226, 255, 267, 268, 270, 271], "weight": [13, 15, 75, 210, 216, 217, 255, 264], "weight_field": [13, 75], "frequent": [15, 218, 247], "observ": [15, 254], "dataset": [15, 111, 176, 190, 210, 216, 217, 231, 255], "region": [15, 17, 254, 256], "pyremap": [15, 91], "interpol": [15, 85, 222, 256], "hood": 15, "esmf_regridweightgen": 15, "mappingfilestep": [15, 17], "woa": 15, "2023": [15, 270, 271], "__init__": [15, 16, 18, 20, 33, 42, 48, 57, 58, 65, 71, 85, 112, 127, 128, 134, 136, 137, 138, 141, 144, 145, 147, 149, 152, 153, 155, 158, 160, 163, 166, 168, 170, 173, 175, 176, 179, 182, 184, 187, 189, 190, 193, 196, 198, 201, 202, 203, 204, 206, 227, 228, 231, 233, 234, 238, 240, 241, 243, 244, 245, 253, 255], "mytestcas": 15, "__int__": 15, "make_map": 15, "64": [15, 264], "bilinear": [15, 85, 222, 268, 273, 278], "filenam": [15, 16, 35, 36, 79, 86, 87, 88, 89, 93, 94, 95, 100, 109, 113, 115, 231, 235, 255], "woa23_decav_0": 15, "25_extrap": 15, "20230414": 15, "initial_condition_databas": [15, 256], "destin": [15, 85, 86, 87, 88, 89, 90, 91], "src_from_lon_lat": 15, "lon_var": [15, 86, 88, 93], "lat_var": [15, 86, 88, 93], "dst_from_mpa": 15, "mesh_nam": [15, 86, 87, 88, 89, 90, 93, 94, 95, 161, 163, 166, 168, 170, 233], "qu60": 15, "subclass": [15, 62, 65, 66, 67, 72, 126, 255], "src_": 15, "dst_": 15, "pick": [15, 96, 97], "vizmap": [15, 158, 168, 222, 233], "super": [15, 16, 227, 228, 231, 233, 234, 255], "128": [15, 232, 258, 259, 262], "cosine_bell_viz": [15, 17, 222, 268, 273, 278], "dlon": [15, 90, 222, 268, 273, 278], "dlat": [15, 90, 222, 268, 273, 278], "remap_method": [15, 222, 268, 273, 278], "src_from_mpa": 15, "dst_global_lon_lat": 15, "lon_min": [15, 90], "With": [15, 235], "approach": [15, 231, 234, 235, 252, 255, 264], "perhap": [15, 17, 36, 227, 233], "cover": [15, 249, 255], "nearli": [15, 231, 233, 253, 254, 255], "situat": [15, 26, 131, 255, 274], "workflow": [15, 231, 235], "critic": [16, 255], "easiest": [16, 123, 235], "validate_var": [16, 33, 36, 202], "meth": 16, "add_output_fil": [16, 34, 231, 233, 255], "temperatur": [16, 154, 220, 221, 225, 226, 231, 251, 255, 267, 268, 272, 273, 278], "salin": [16, 154, 220, 221, 226, 231, 255, 267, 268, 272, 273, 278], "done": [16, 30, 40, 231, 235, 255, 274], "compare_vari": [16, 255], "filename1": [16, 109, 255], "filename2": [16, 109, 255], "compact": [16, 255], "output_full_run": 16, "output_restart_run": 16, "all_pass": [16, 109], "valueerror": [16, 234], "quiet": [16, 99, 109, 114], "report": 16, "threshold": [16, 268, 270, 271], "l1": [16, 109], "00000000000000e": 16, "l2": [16, 109], "l_infin": 16, "linf": [16, 109], "test_nightly_latest": 16, "10km": [16, 221, 255, 267, 274, 279, 280], "threads_test": 16, "1thread": [16, 221, 267], "2thread": [16, 267], "test_20210616": 16, "further_valid": 16, "zero": [16, 211, 212, 213, 214, 215, 220, 221, 226, 255, 268, 272], "l1_norm": [16, 109], "l2_norm": [16, 109], "linf_norm": [16, 109], "nonzero": [16, 109], "solut": [16, 122, 176, 177, 178, 186, 187, 189, 190, 191, 192, 193, 196, 198, 222, 224, 225, 232, 252, 255, 270, 271], "aspect": [17, 255], "routin": 17, "viz": [17, 158, 233], "plot_horiz_field": [17, 255], "patch": [17, 111, 255], "style": [17, 126, 254, 255], "edg": [17, 87, 90, 94, 111, 176, 177, 190, 191, 220, 255], "polygon": 17, "character": 17, "accordingli": [17, 83], "d": [17, 111, 176, 190, 210, 216, 217, 220, 231, 255, 272], "final_normalveloc": [17, 255], "t_index": [17, 111, 255], "vmin": [17, 111, 222, 255, 268], "max_veloc": [17, 255], "vmax": [17, 111, 222, 255, 268], "cmap": [17, 111, 255], "cmo": [17, 255], "balanc": [17, 255], "show_patch_edg": [17, 111, 255], "globe": [17, 222, 268], "plot_glob": 17, "plot_land": [17, 110], "disabl": [17, 220, 268, 280], "contin": [17, 110], "overlain": 17, "usag": [17, 256, 258, 262], "cmocean": [17, 255], "noqa": [17, 57, 160, 163, 166, 184, 198, 255], "f401": [17, 255], "xr": [17, 176, 177, 178, 190, 191, 192, 255], "open_dataset": [17, 231, 255], "tracer1": 17, "isel": 17, "nvertlevel": [17, 111, 210, 216, 217, 231, 255, 264], "out_filenam": [17, 107, 110, 209], "colormap_sect": [17, 110], "titl": [17, 110, 111], "colormap": [17, 110, 111, 222, 255, 268], "cosin": [17, 157, 160, 163, 166, 168, 170, 222, 268, 273, 278], "bell": [17, 157, 160, 163, 166, 168, 170, 222, 268, 273, 278], "converg": [17, 172, 184, 186, 198, 222, 229, 232, 254, 255, 268, 273, 278, 279], "colormap_nam": [17, 110, 222, 268], "viridi": [17, 222, 255, 268], "norm": [17, 109, 110, 222, 268], "norm_typ": [17, 110, 222, 268], "norm_arg": [17, 110, 222, 268], "colorbar": [17, 110, 111, 222, 268], "tick": [17, 110, 222, 268], "mark": [17, 222, 235, 268], "colorbar_tick": [17, 110, 222, 268], "matplotlib": [17, 255], "standard": [17, 234, 235, 244, 255, 258, 274], "symlog": [17, 110], "symmetr": 17, "central": [17, 268], "logarithm": [17, 111], "color": [17, 111], "normal": [17, 176, 177, 190, 191, 220, 231, 232, 235, 255, 261], "symlognorm": 17, "lognorm": 17, "hous": 18, "dict": [18, 21, 23, 24, 26, 33, 37, 42, 77, 78, 80, 84, 85, 101, 103, 104, 110, 112, 113, 114, 131, 233, 255], "kei": [18, 42, 103, 233], "max_memori": [20, 30, 33, 40, 128], "mesh_filenam": [20, 75, 128], "graph_filenam": [20, 75, 128], "graph": [20, 27, 29, 39, 75, 128, 221, 224, 225, 231, 255, 256], "make_yaml": 20, "stride": [20, 32, 128], "consist": [20, 32, 123, 128, 218, 235, 255, 256, 267], "partit": [20, 29, 39, 52, 75, 128, 221, 224, 225, 231, 256, 257, 258, 259, 260, 262, 274], "model_config_data": 20, "streams_data": 20, "ideal": [20, 30, 33, 40, 81, 82, 85, 126, 128, 138, 179, 193, 202, 203, 227, 231, 234, 254, 255, 256, 280], "accommod": [20, 30, 33, 40, 81, 82, 128], "fewer": [20, 30, 33, 40, 81, 82, 128, 138, 179, 193, 202, 231, 255, 274], "memori": [20, 30, 33, 40, 128, 231, 256], "mb": [20, 30, 33, 40, 128, 256], "placehold": [20, 30, 33, 40, 128, 231, 274], "at_setup": [25, 140, 146, 165, 181, 195, 255], "overridden": [26, 131, 231, 233, 255], "diverg": [26, 131], "counterpart": [26, 126, 131], "nest": [26, 112, 114, 131], "graph_fil": 27, "parent": [28, 227, 228, 231, 233], "run_as_subprocess": [33, 231], "smallest": [33, 231, 253, 264, 280], "unit": [33, 86, 90, 93, 231, 253, 267, 280], "term": [33, 253, 255, 270, 271], "necessarili": [33, 35], "input_data": 33, "until": [33, 34, 231, 233, 274], "finish": [33, 34, 72, 255], "suffici": 33, "establish": [33, 34], "is_depend": 33, "combin": [33, 35, 42, 48, 53, 84, 112, 231, 232, 233, 252, 255, 256, 274], "machine_info": 33, "machineinfo": 33, "config_filenam": [33, 42, 100, 231, 233], "base_work_dir": [33, 42, 231, 233], "log_filenam": [33, 42, 231], "redirect": [33, 231], "extern": [33, 123, 218, 228, 231, 247, 265, 275], "access": [34, 233, 234, 235, 255, 257, 261, 262], "database_compon": [35, 231], "work_dir_target": [35, 231], "come": [35, 123, 231, 235, 255, 257, 258, 259, 260, 261, 262, 265], "root": [35, 123, 161, 218, 222, 224, 225, 228, 231, 234, 235, 247, 253, 256, 257, 258, 259, 260, 261, 262, 264, 270, 271, 274], "_database_root": 35, "append": 35, "available_resourc": [37, 80], "constrain": [37, 129, 139, 164, 180, 194, 221, 224, 225, 231, 255], "cores_per_nod": [37, 80, 83, 123, 256, 257, 258, 259, 260, 261, 262, 274], "everi": [38, 171, 221, 231, 233, 234, 251, 252, 253, 255, 267, 272], "child": [38, 171, 228, 231, 233, 234], "serial": [39, 231, 233, 254, 255, 274], "subtask": 40, "stdout_logg": 42, "goe": [42, 231, 255], "regardless": 42, "new_step_log_fil": 42, "statu": 42, "run_by_default": [43, 231, 233], "assum": [44, 104, 113, 123, 233, 235, 255, 262, 267], "prior": [44, 231, 233], "step_path": 46, "variant": [46, 157, 221, 227, 232, 234, 235, 255, 261, 264, 267, 268], "uncach": 46, "datestamp": 46, "yymmdd": [46, 256], "dry": [46, 232], "meta": 48, "empti": [48, 231, 234, 235, 253, 255], "link_nam": 51, "overwrit": 51, "stackoverflow": [51, 255], "55742015": 51, "7728169": [51, 255], "symbol": [51, 231], "fileexistserror": 51, "unless": [51, 99, 235], "isadirectoryerror": 51, "slurm": [52, 83, 123, 231, 254, 256, 257, 258, 259, 260, 262, 274], "qo": [52, 257, 258, 260, 261, 262, 274], "qualiti": [52, 257, 258, 260, 261, 262, 274], "servic": [52, 257, 258, 260, 261, 262, 274], "constraint": [52, 262, 274], "wall_tim": [52, 274], "wall": [52, 274], "target_cor": 53, "min_cor": 53, "decomposition_test": [57, 227, 274], "decompositiontest": [57, 227], "e501": [57, 160, 163, 166, 184, 198, 255], "turquois": [57, 258], "usr": [57, 123, 258, 274], "climat": [57, 257, 258, 259, 261, 274], "mhoffman": 57, "latitud": [59, 66, 86, 88, 90, 93, 110, 222, 268, 273, 278], "longitud": [59, 66, 67, 73, 86, 88, 90, 93, 110, 222, 268, 273, 278], "ndarrai": [59, 66, 67, 73, 110, 133, 208, 209, 255], "degre": [59, 66, 67, 73, 90, 256, 267], "length": [59, 66, 67, 73], "180": [59, 66, 67, 73, 90, 233, 268], "90": [59, 66, 67, 73, 231, 233, 268], "static": [60, 61], "rule": 60, "thumb": 60, "achiev": [61, 232], "uniform": [65, 70, 163, 221, 222, 224, 225, 227, 233, 255, 256, 267, 268, 270, 271, 272, 273, 278], "natur": 70, "jigsawpi": [71, 231], "jigsaw_jig_t": 71, "meti": 75, "defaults_filenam": 76, "total": [80, 231, 232, 234, 255, 256, 258, 274], "substep": [81, 82], "command_line_arg": 81, "cpus_per_nod": 83, "map_filenam": 85, "src_grid_info": 85, "dst_grid_info": 85, "neareststod": [85, 222, 268, 273, 278], "conserv": [85, 222, 268, 273, 278], "map_": 85, "source_typ": 85, "dest_typ": 85, "1d": [86, 90, 93, 110, 126, 208, 209, 210, 211, 212, 213, 214, 216, 217], "2d": [86, 90, 93, 110], "5x0": [86, 90, 93], "5degre": [86, 90, 93], "coordin": [86, 88, 89, 93, 95, 110, 111, 176, 190, 210, 216, 217, 263, 265, 267, 268, 270, 271, 272, 273, 277], "mesh_typ": [87, 94, 227, 231, 233], "vertex": [87, 94], "x_var": [89, 95], "y_var": [89, 95], "proj_attr": [89, 95], "proj_str": [89, 95], "proj": [89, 95], "left": [90, 126, 255, 264, 267, 268], "remapp": [91, 92], "remap_fil": 91, "ran": 96, "step_is_subprocess": 98, "is_task": 99, "steps_to_skip": 99, "progress": 99, "unpickl": [101, 231], "cached_step": 102, "copy_execut": [102, 103, 108, 274], "_all": [102, 103], "task_list": 103, "streams_filenam": 104, "lxml": [104, 106, 118], "etre": [104, 106, 118], "new_child": 105, "children": 105, "sub": [105, 255], "new_tre": 106, "infin": 109, "toler": 109, "data_arrai": 110, "colorbar_label": 110, "subtitl": 110, "field_nam": 111, "out_file_nam": 111, "ax": 111, "z_index": 111, "cmap_set_und": 111, "cmap_scal": 111, "cmap_titl": 111, "horizont": [111, 126, 203, 220, 221, 224, 225, 226, 267, 270, 271, 272], "planar": [111, 126, 220, 255, 270, 271, 272, 273, 278], "depth": [111, 126, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 256, 264, 267, 268, 270, 271, 272, 273], "slice": 111, "fieldnam": 111, "present": [111, 235, 255], "visibl": 111, "bar": 111, "classmethod": 113, "jinja": 113, "namelist_templ": 117, "polarisyaml": [117, 118], "processed_registry_filenam": 118, "registri": [118, 220, 247], "steam": 118, "1_anvil_intel_impi": [119, 123], "mvapich": [119, 123, 257], "ve": [119, 120, 121, 122, 124, 231, 235, 255], "1_anvil_gnu_openmpi": 119, "1_chicoma": 120, "cpu_gnu_mpich": [120, 124], "crai": [120, 123, 124, 258, 262], "1_chrysalis_intel_openmpi": 121, "1_chrysalis_gnu_openmpi": 121, "again": [122, 218, 231, 235, 252, 274], "soon": [122, 123, 255, 274], "1_compy_intel_impi": 122, "1_compy_gnu_openmpi": 122, "particular": [123, 227, 235, 254, 258, 261, 274], "load_polaris_env": [123, 235, 255, 274], "were": [123, 138, 202, 231, 234, 253, 255, 256, 260, 264], "right": [123, 126, 233, 235, 255, 256, 264, 267, 268, 274], "therefor": [123, 231, 237, 253, 255], "chicoma": [123, 261, 274], "mpich": [123, 235, 254, 258, 262, 274], "compi": [123, 260, 274], "pm": [123, 262, 274], "compymcnodefac": [123, 261], "perlmutt": [123, 258, 261, 274], "pretti": [123, 231, 234, 255, 256], "conda_path": [123, 235], "osx": [123, 261], "clang": [123, 235], "had": 123, "1_": 123, "morpheu": 123, "cobalt": [123, 257, 258, 259, 260, 261, 262], "single_nod": [123, 256, 257, 258, 259, 260, 261, 262, 274], "mpirun": [123, 252, 256, 257, 258, 259, 260, 261, 262, 274], "srun": [123, 252, 255, 256, 257, 258, 259, 260, 261, 262, 274], "parallel_execut": [123, 252, 256, 257, 258, 259, 260, 261, 262, 274], "modules_befor": [123, 258, 262], "modules_aft": [123, 258, 262], "polaris_env": [123, 257, 258, 259, 260, 261, 262], "deploi": [123, 235, 254, 257, 258, 259, 260, 261, 262], "mpi_gnu": [123, 257, 258, 259, 260, 261, 262], "hdf5": [123, 257, 258, 259, 260, 261, 262], "use_e3sm_hdf5_netcdf": [123, 257, 258, 259, 260, 261, 262], "discoveri": 123, "identifi": [123, 228, 247, 280], "hostnam": 123, "hostname_contain": 123, "queu": 123, "laptop": [123, 235, 255, 256], "workstat": [123, 235], "high": [123, 231, 259, 261], "hpc": [123, 235, 258, 261], "safest": [123, 235], "mpi_": 123, "simpl": [123, 126, 234, 247, 255, 274], "compiler_gnu": 123, "compiler_intel": 123, "hopefulli": [123, 256], "pre": [123, 235], "parlanc": 123, "concret": 123, "ubuntu": 123, "spec": [123, 252, 262], "gcc": 123, "curl": 123, "81": 123, "buildabl": 123, "install_missing_compil": 123, "cc": 123, "bin": [123, 235, 262, 274], "cxx": 123, "f77": 123, "fc": 123, "operating_system": 123, "ubuntu22": 123, "04": 123, "extra_rpath": 123, "luck": 123, "catch": [123, 232], "22": 123, "design": [123, 219, 231, 233, 234, 248, 254, 261, 267], "guess": [123, 255], "correct": [123, 235], "potenti": [123, 133, 147, 231, 255, 267], "purg": 123, "perl": 123, "32": [123, 232, 274], "bsnc6lt": 123, "ugetvbp": 123, "sxfyy4k": 123, "2020": 123, "304": 123, "n3b5fye": 123, "j3zxncu": 123, "7ohuiwq": 123, "k2zu3y5": 123, "mirrcz7": 123, "shouldn": [123, 138, 202, 255], "variou": [123, 200, 228, 231, 235, 239], "ask": 123, "gb": 123, "zlib": 123, "incompat": 123, "ubuntu20": 123, "readlin": 123, "pkgconf": 123, "spackdir": 123, "env": [123, 262], "arch": 123, "repositori": [123, 229, 254, 255, 274], "x86_64_v4": 123, "free": [123, 220, 255, 256], "touch": [123, 235], "everyth": 123, "1_pm": 124, "ever": [126, 234, 237], "expand": [126, 237, 264], "oceanmodelstep": [126, 255], "decid": [126, 255], "veri": [126, 228, 231, 234, 235, 247, 255, 272], "earli": [126, 265, 274], "stage": [126, 220, 231, 233, 235, 243, 251, 265, 274], "map_yaml_to_namelist": 126, "heurist": 126, "algorithm": [126, 138, 202, 221, 224, 225, 231, 255], "200": [126, 224, 225, 255, 267, 270, 271, 272], "round": [126, 268], "cell_count": [126, 129, 139, 164, 180, 194, 255], "goal_cells_per_cor": [126, 255, 268, 270, 271, 273, 278], "pinch": 126, "2000": [126, 227, 249, 251, 255, 277], "max_cells_per_cor": [126, 255, 268, 270, 271, 273, 278], "seciton": 126, "control": [126, 222, 231, 256, 267, 268, 272, 274], "scale": [126, 267, 274], "tri": [126, 234], "apport": 126, "precis": [126, 231, 255], "caviti": [126, 234, 255, 256, 264], "frazil": 126, "flux": [126, 220, 272], "grid_1d": 126, "generate_1d_grid": 126, "vertical_grid": [126, 208, 210, 216, 217, 227, 255, 256, 264, 267, 268, 270, 271, 272, 273], "z": [126, 211, 212, 213, 214, 215, 216, 217, 255, 267, 268, 270, 271, 272, 273], "star": [126, 215, 217, 255, 267, 268, 270, 271, 272, 273], "init_vertical_coord": [126, 255], "minlevelcel": [126, 210, 212, 213, 214, 215, 216, 217, 255], "maxlevelcel": [126, 210, 211, 212, 213, 214, 215, 216, 217, 231, 255], "cellmask": [126, 210, 213, 216, 217, 255], "zmid": [126, 210, 216, 217, 255], "restingthick": [126, 210, 215, 216, 217, 231, 255], "bottomdepth": [126, 210, 211, 213, 214, 215, 216, 217, 231, 255], "entir": [126, 255, 267, 279], "petersen": [126, 235, 255, 267], "et": [126, 255, 264, 267, 268, 270, 271], "al": [126, 255, 264, 267, 268, 270, 271], "2015": [126, 255, 267], "int_": 126, "rho": 126, "dv": 126, "sort": [126, 229, 234, 235], "increas": [126, 234], "compute_rp": [126, 255], "csv": [126, 255], "dynamic_ntask": 128, "available_cor": 130, "estim": [130, 132, 255], "initial_state_file_nam": [133, 255], "output_fil": [133, 231, 255], "energi": [133, 147, 254, 255, 267], "state": [133, 220, 221, 222, 224, 225, 226, 227, 231, 232, 255, 268], "len": [133, 231, 255], "superclass": [134, 221, 231], "run_time_step": [138, 255], "resources_fix": [138, 202], "dt": [138, 202, 255, 267, 268, 270, 271, 273, 278], "btr_dt": [138, 202, 255, 267], "barotrop": [138, 202, 255, 267, 272], "longer": [144, 221, 232, 240, 255, 267, 268], "shorter": [144, 232, 240], "20": [147, 221, 232, 255, 267, 272], "step_subdir": [153, 241], "processor": [153, 231, 241, 267], "rpe": [155, 228, 233, 234, 255, 274], "include_viz": [158, 233], "less": [158, 160, 231, 264, 272], "cosinebel": [160, 163, 166, 222, 233], "rmsevalu": 161, "squar": [161, 222, 224, 225, 270, 271], "ncell": [161, 231, 255], "viz_map": [168, 233], "inerti": [172, 173, 175, 176, 179, 182, 184, 224, 265, 269], "graviti": [172, 173, 175, 176, 179, 182, 184, 224, 265, 269], "wave": [172, 173, 175, 176, 179, 182, 184, 190, 224, 231, 255, 265, 267, 269, 271], "analys": [173, 187], "exact": [176, 177, 178, 190, 191, 192, 222, 224, 225, 234, 270, 271], "angleedg": [176, 190], "angl": [176, 190], "posit": [176, 190, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 264, 272], "xcell": [176, 190, 231, 255], "ycell": [176, 190, 231, 255], "xedg": [176, 190, 231, 255], "yedg": [176, 190], "f0": 176, "corioli": [176, 224, 225, 255, 267, 268, 271, 272], "eta0": [176, 190], "amplitid": [176, 190], "kx": [176, 190], "ky": [176, 190], "angular": [176, 190], "frequenc": [176, 190, 221], "veloc": [177, 191, 220, 221, 224, 225, 233, 235, 255, 268, 272, 274], "evalu": [177, 178, 191, 192], "norm_vel": 177, "eta": [178, 192, 270, 271], "manufactur": [186, 187, 189, 190, 193, 196, 198, 225, 271], "column": [200, 201, 203, 204, 206, 226, 235, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 251, 272, 274, 277], "mix": [201, 227, 228, 270, 271, 272], "param": [201, 203, 204], "ag": 203, "evolv": [203, 254, 264, 268, 272], "ideal_ag": [204, 206], "ivar": 204, "layer": [208, 209, 210, 214, 215, 216, 217, 220, 221, 224, 225, 226, 255, 256, 264, 267, 268, 270, 271, 272, 273], "meter": [208, 209], "bottom": [210, 211, 212, 213, 214, 215, 216, 217, 220, 255, 256, 264, 267, 268, 270, 271, 272, 273], "thick": [210, 214, 215, 216, 217, 221, 226, 249, 255, 256, 264, 267, 270, 277], "stretch": [210, 216, 217, 255, 264], "elev": [210, 216, 217, 255, 264], "midpoint": [210, 216, 217, 255], "reftopdepth": [210, 213, 214, 216, 217, 255], "down": [210, 211, 212, 213, 214, 215, 216, 217, 222, 255, 264, 268], "ref": [210, 216, 217, 255], "middl": [210, 216, 217, 255], "refbottomdepth": [210, 211, 212, 213, 214, 216, 217, 231, 255], "refinterfac": [210, 216, 217, 255], "element": [210, 216, 217, 255], "vertcoordmovementweight": [210, 216, 217, 231, 255], "movement": [210, 216, 217, 255], "alter": [211, 212, 231, 233, 254, 255, 264, 267, 268, 270, 271, 272, 273], "partial": [211, 212, 255, 264, 267, 268, 270, 271, 272, 273], "seafloor": [211, 213, 214, 215, 264], "unstretch": 215, "shelv": [218, 256, 264], "ssh_adjust": [218, 231, 256], "iter": [218, 256], "compass_branch": 218, "default_input": [218, 228, 247, 255, 256], "ocean_model": [218, 235, 256], "latest": [218, 235, 247, 254, 265, 274], "compat": [218, 235, 247, 252, 254], "verison": 218, "maintain": [218, 274], "inertial_gravity_wav": [218, 223, 228, 270, 279], "manufactured_solut": [218, 223, 228, 265, 269], "single_column": [218, 223, 228, 247, 250, 265, 269, 275, 276], "minim": 220, "fcell": [220, 231, 255, 268], "fedg": [220, 231, 255, 268], "fvertex": [220, 231, 255, 268], "slip": 220, "solid": [220, 249, 267, 268], "tangenti": 220, "enforc": [220, 235], "nonperiod": 220, "drag": 220, "mass": 220, "momentum": [220, 221, 224, 225, 270, 271], "scalar": 220, "rigid": 220, "solv": [220, 252, 264], "mid": [220, 267], "vari": [220, 222, 231, 252, 261, 264, 268], "consult": [220, 255], "tidal_forc": 220, "eddi": [221, 267], "addition": [221, 224, 225, 226, 257, 258, 259, 260, 262], "diffus": [221, 224, 225, 226], "50": [221, 224, 225, 255, 267, 270, 271, 272], "prescrib": [221, 224, 225], "intens": 221, "enough": [221, 231, 234, 255], "studi": [222, 268], "advect": [222, 268, 270, 271, 272], "qu": [222, 233, 255, 256, 266, 268, 279], "ico": [222, 233, 255, 266, 268, 279], "fix": [222, 255], "spheric": [222, 233, 268], "24": [222, 268, 277], "shape": [222, 268], "blob": 222, "around": [222, 255, 256, 267, 268], "rate": [222, 224, 225, 255, 268, 270, 271, 272], "cosine_bell_with_viz": [222, 266], "distribut": 222, "dt_per_km": [222, 255, 267, 268, 270, 271, 273, 278], "rmse": [222, 224, 225, 270, 271], "slow": [222, 268], "shallow": [224, 235, 268, 270, 271, 273], "water": [224, 255, 267, 268, 270, 271, 272, 273], "100": [224, 225, 226, 264, 270, 271, 272], "25": [224, 225, 270, 271, 272], "exactsolut": [224, 225], "obtain": [224, 225, 235, 258], "assign": [224, 225, 268], "simul": [224, 225, 231, 253, 255, 266, 267, 270, 271, 273, 274, 278], "fall": [224, 225, 274], "accept": [224, 225], "bound": [224, 225], "calcul": [224, 231, 233], "exercis": [226, 251, 268, 272], "kpp_test": 226, "mixedlayerdepthsoutput": 226, "idealagetrac": [226, 272], "dimens": [226, 267, 272], "single_column_forc": [226, 272], "profil": [226, 252, 272], "throughout": [226, 267, 272], "idealag": 226, "enabel": 226, "formal": 227, "organ": [227, 229, 232, 254], "conceptu": [227, 234], "outsid": [227, 231, 235], "broadli": [227, 228, 234], "realist": [227, 254, 280], "greenland": [227, 254, 280], "2000m": [227, 274], "34": [227, 274], "halfar": 227, "cism": 227, "dome_typ": 227, "closest": 227, "put_origin_on_a_cel": 227, "hydrologi": 227, "hydro": [227, 280], "dome_viz": 227, "time_slic": 227, "save_imag": 227, "hide": [227, 255], "hide_fig": 227, "helper": [227, 228], "clutter": 227, "smoke_test": [227, 233], "smoketest": [227, 233], "restart_test": 227, "restarttest": 227, "add_dome_task": 227, "variable_resolut": [227, 231, 274], "add_test_cas": [227, 255], "talk": 227, "baroclinic_channel_test_cas": 227, "res_str": [227, 255], "1000": [227, 255, 256, 264, 267, 270, 271], "add_step": [227, 233, 255], "among": [227, 229, 235, 255], "encompass": 228, "perspect": 228, "four": 228, "major": [228, 231], "add_task": 228, "univers": 228, "add_baroclinic_channel_task": [228, 234], "add_cosine_bell_task": 228, "add_inertial_gravity_wave_task": 228, "add_manufactured_solution_task": 228, "add_single_column_task": 228, "alphabet": [228, 255], "decomp": [228, 255, 274, 279], "landice_model": [228, 235], "green": 229, "blue": [229, 257, 274], "orang": 229, "red": 229, "laid": 229, "fig": 229, "organiz": 229, "concept": [229, 234, 255, 280], "test_group": [231, 233, 255], "multiprocess": [231, 234, 256], "emploi": 231, "prevent": 231, "unwant": 231, "outer": 231, "inner": 231, "dome_varres_grid": 231, "possibli": [231, 235, 255], "signific": [231, 232, 233], "neglig": 231, "convent": [231, 235, 255], "fit": [231, 256], "applic": [231, 234, 235, 273, 278], "meshstep": 231, "getint": 231, "mesh_cpus_per_task": 231, "mesh_min_cpus_per_task": 231, "previous": [231, 255], "write_netcdf": [231, 255], "convers": [231, 255], "generate_grid": 231, "dsmesh": 231, "graphinfofilenam": [231, 255], "use_dist": [231, 255, 267], "gradient_width_dist": [231, 255, 267], "gradient_width_frac": [231, 255, 267], "bottom_temperatur": [231, 255, 267], "surface_temperatur": [231, 255, 267, 272], "temperature_differ": [231, 255, 267], "coriolis_paramet": [231, 255, 267, 270, 271, 272], "bottom_depth": [231, 255, 256, 264, 267, 268, 270, 271, 272, 273], "vert_level": [231, 255, 256, 264, 267, 268, 270, 271, 272, 273], "ones_lik": [231, 255], "xmin": 231, "min": [231, 255, 267, 272], "xmax": 231, "ymin": 231, "ymax": 231, "ymid": 231, "xperturbmin": 231, "xperturbmax": 231, "perturbationwidth": 231, "yoffset": 231, "sin": [231, 255, 267, 270, 271], "pi": [231, 255, 264, 267, 268], "temp_vert": [231, 255], "frac": [231, 255, 264, 267, 270], "logical_and": [231, 255], "transpos": [231, 255], "3rd": [231, 255], "crest": [231, 255, 267], "expand_dim": [231, 255], "dim": [231, 255], "axi": [231, 255], "broadcast": [231, 255], "zeros_lik": [231, 255], "nedg": [231, 255], "dtype": [231, 233, 255], "xvertex": [231, 255], "commandlin": 231, "harm": 231, "likewis": [231, 255], "subsequ": [231, 279], "arisen": 231, "problemat": 231, "usual": [231, 233, 235, 255, 274], "forwardstep": 231, "mesh_path": 231, "mesh_step": 231, "with_ice_shelf_cav": 231, "initial_state_target": 231, "adjusted_init": 231, "forcing_data": 231, "entha_analy_result": 231, "mat": 231, "enthalpy_benchmark": 231, "ourselv": 231, "reduc": 231, "problem": [231, 235, 252, 255], "firewal": 231, "bedmachineantarctica_v2_and_gebco_2022_0": 231, "05_degree_20220729": 231, "slate": 231, "icepresent_qu60km_polar": 231, "practic": [231, 234, 235], "straightforward": 231, "commonli": [231, 253], "expens": [231, 232], "mechan": 231, "notat": [231, 273, 278], "That": [231, 234, 253, 255, 274], "word": 231, "ff": 231, "quwisc240": [231, 234, 274], "90c": 231, "91c": 231, "92": [231, 264], "91": 231, "sowisc12to60": [231, 274], "performance_test": 231, "effici": [231, 255], "transfer": 231, "feasibl": 231, "nor": [231, 255], "add_depend": 231, "overhead": 231, "philosophi": [232, 234, 255], "context": [232, 255], "namesak": 232, "256": [232, 258, 262], "count": [232, 253], "quicker": 232, "exce": 232, "offer": 232, "benefit": [232, 254], "bug": 232, "covereag": 232, "timestep": 232, "exhaust": 232, "recent": [232, 265, 275], "merg": 232, "reach": 232, "steadi": 232, "wet": 232, "fundament": 233, "incorpor": 233, "velo_solv": 233, "sia": [233, 235], "fo": 233, "runmodel": 233, "run_step": 233, "0200": 233, "00_00": [233, 249, 255], "fine": [233, 255, 272], "recip": 233, "demonstr": [233, 255], "_with_viz": 233, "_setup_step": [233, 255], "default_resolut": 233, "480": [233, 268], "150": [233, 268], "210": [233, 264, 268], "prioriti": [233, 258], "_mesh": 233, "_map": 233, "_viz": 233, "rare": [233, 235], "form": [233, 280], "_add_step": [233, 255], "filesfore3sm": 233, "configure_global_ocean": 233, "initial_condit": 234, "dig": [234, 256], "infrastructur": [234, 255], "background": 234, "behind": 234, "adher": [234, 255], "pep8": [234, 235], "bot": [234, 264], "violat": 234, "consid": 234, "editor": 234, "pycharm": [234, 235, 255], "spyder": 234, "linter": 234, "flake8": [234, 235], "discourag": [234, 253], "reformat": 234, "autopep8": 234, "undesir": 234, "lint": 234, "wildcard": 234, "vim": [234, 255], "plugin": 234, "id": [234, 235], "commit": [234, 235], "why": 234, "sound": 234, "subpackag": 234, "understand": [234, 256], "downstream": 234, "tutori": [234, 235], "clu": 234, "intro": 234, "docstr": [234, 254, 255], "strip": 234, "mpas_ocean": 234, "hidden": 234, "shortcut": [234, 274], "referenc": [234, 255], "mention": 234, "dot": 234, "charact": 234, "unix": [234, 254], "distinct": 234, "mayb": [234, 255], "machine_config": 234, "endswith": 234, "splitext": 234, "exactli": [234, 235, 255, 264], "move": [234, 235, 255, 273, 278], "renam": 234, "visa": 234, "versa": 234, "comfort": [234, 255], "inherit": [234, 255], "orient": 234, "program": [234, 256], "led": 234, "felt": 234, "contribut": 234, "hesit": 234, "predecessor": [234, 253, 254], "clumsi": 234, "harder": 234, "outcom": 234, "augment": 234, "explain": 234, "hope": 234, "dens": 234, "learn": [234, 255], "curv": 234, "worth": [234, 255], "skill": 234, "endeavor": 234, "readabl": 234, "manipul": 234, "get_available_cores_and_nod": 234, "theoret": 234, "dozen": 234, "split": 234, "theori": 234, "biogeochemistri": 234, "ksh": 235, "mac": [235, 254], "csh": 235, "tcsh": 235, "temporarili": 235, "recogn": [235, 256, 274], "permiss": 235, "anyon": 235, "caus": [235, 258, 262, 264], "person": [235, 252], "base_path_to_install_or_update_conda": 235, "with_netlib_lapack": 235, "flavor": [235, 255], "troubl": [235, 255], "recognit": 235, "trilino": 235, "downsid": 235, "unneed": 235, "reinstal": 235, "caution": 235, "load_": 235, "encod": 235, "load_dev_polaris_": [235, 255], "env_nam": 235, "dev_polaris_": [235, 252], "workdir": [235, 274], "unexpect": [235, 253, 255], "occur": [235, 252], "rerun": 235, "echo": 235, "proceed": 235, "notic": 235, "conda_env": [235, 260, 274], "rememb": 235, "incorrect": 235, "unus": 235, "session": [235, 255], "pip": 235, "substanti": 235, "risk": [235, 255], "unsupport": 235, "env_onli": 235, "mpas_make_target": [235, 274], "scientif": [235, 274], "_albani": 235, "instruct": [235, 255], "proce": 235, "es3m": 235, "compli": 235, "memor": 235, "guidelin": 235, "complianc": 235, "checker": 235, "isort": 235, "flynt": 235, "mypi": 235, "77": 235, "e302": 235, "blank": 235, "resolv": 235, "simpler": [235, 255], "new_branch_nam": 235, "put": [235, 255], "elsewher": 235, "disk": [235, 256, 258, 262], "respons": 235, "simplest": 235, "your_new_branch": 235, "seaicemodelstep": 237, "concern": 237, "restart_filenam": 241, "polaris_branch": 247, "post": 247, "src": 247, "registry_process": 247, "seaice_model": 247, "1m": [249, 277], "disc": [249, 277], "condidion": 249, "config_initial_ice_area": 249, "config_initial_ice_volum": 249, "config_atmospheric_forcing_typ": 249, "config_forcing_start_tim": 249, "config_forcing_cycle_start": 249, "config_forcing_cycle_dur": 249, "config_forcing_precipitation_unit": 249, "mm_per_sec": 249, "config_forcing_sst_typ": 249, "ncar": 249, "config_update_ocean_flux": 249, "config_include_pond_freshwater_feedback": 249, "standard_phys": 251, "standardphys": 251, "year": [251, 265, 277], "volum": 251, "snow": 251, "exact_restart": 251, "exactrestart": 251, "geo": 252, "cartopi": 252, "14": 252, "np110py27_4": 252, "calledprocesserror": 252, "deploy_tmp": 252, "vpn": 252, "site": 252, "shell": [252, 254], "honor": 252, "wide": 252, "spawn": 252, "usernam": [252, 255, 258, 262], "proxy_en": 252, "all_proxi": 252, "proxyout": 252, "8080": 252, "no_proxi": 252, "localhost": [252, 256, 261, 262, 274], "127": 252, "proxy_dis": 252, "unset": 252, "anytim": 252, "fatal": 252, "mpi_init": 252, "stack": 252, "mpir_init_thread": 252, "159": 252, "mpid_init": 252, "164": 252, "mpidi_ch3_init": 252, "95": 252, "mpid_nem_init": 252, "314": 252, "mpid_nem_tcp_init": 252, "173": 252, "mpid_nem_tcp_get_business_card": 252, "395": 252, "getsockinterfaceaddr": 252, "369": 252, "pn2034311": 252, "errno": 252, "host": [252, 256, 261, 274], "focus": 253, "plu": 253, "autom": 254, "exascal": 254, "earth": 254, "kept": 254, "sens": [254, 255], "boundari": [254, 267, 280], "expert": 254, "launch": 254, "uncoupl": 254, "quick": [254, 255, 265, 275], "queue": 254, "beginn": [254, 255], "advanc": [254, 255], "mpas_to_yaml": 254, "troubleshoot": 254, "proxi": 254, "lanl": [254, 256, 258], "gethostbynam": 254, "glossari": 255, "port": [255, 262], "stick": 255, "miniconda": 255, "3_chrysalis_intel_openmpi": 255, "strict": 255, "push": 255, "lowercas": 255, "hyphen": 255, "settl": 255, "desktop": 255, "realli": [255, 262], "nice": [255, 262], "supercomput": 255, "yet_another_channel": 255, "testgroup": 255, "vi": 255, "polaris_head": 255, "yetanotherchannel": 255, "instanc": 255, "repres": [255, 264, 268], "highli": 255, "camelcas": 255, "capit": 255, "letter": 255, "cap": 255, "awkward": 255, "encourag": 255, "enclos": 255, "briefli": 255, "globalconverg": 255, "add_test_group": 255, "interest": 255, "anyth": 255, "probabl": [255, 261], "suppos": 255, "easili": 255, "tide": 255, "analyz": 255, "sai": [255, 261], "still": [255, 265, 273, 274, 278], "ti": 255, "loop": 255, "4km": [255, 267, 274], "coarsest": [255, 256], "especi": 255, "anticip": 255, "promot": 255, "pattern": 255, "familiar": 255, "seen": 255, "brows": 255, "row": 255, "greater": 255, "disadvantag": 255, "foremost": 255, "magic": 255, "effect": [255, 273], "pain": 255, "160": [255, 267], "500": [255, 256, 264, 267], "path_to_mpas_ocean": 255, "path_to_working_dir": 255, "cat": 255, "slurm_jobid": 255, "_run_test": 255, "gpf": 255, "fs1": 255, "cbegeman": 255, "successfulli": 255, "x_cell": 255, "y_cell": 255, "grid_typ": [255, 256, 264, 267, 268, 270, 271, 272, 273], "coord_typ": [255, 264, 267, 268, 270, 271, 272, 273], "partial_cell_typ": [255, 264, 267, 268, 270, 271, 272, 273], "min_pc_fract": [255, 264, 267, 268, 270, 271, 272, 273], "everywher": 255, "depress": [255, 264], "x_min": 255, "x_max": 255, "y_min": 255, "y_max": 255, "y_mid": 255, "x_perturb_min": 255, "x_perturb_max": 255, "perturb_width": [255, 267], "y_offset": 255, "normal_veloc": 255, "attr": 255, "mostli": 255, "logic": [255, 267], "northern": [255, 267], "half": [255, 267], "southern": [255, 267], "halv": [255, 267], "gradient": [255, 267, 270, 271, 272], "08": [255, 267], "500km": [255, 267], "40e3": [255, 267], "35": [255, 267, 268, 272, 273, 274, 278], "2e": [255, 267], "initial_temperatur": 255, "initial_normal_veloc": 255, "connect": [255, 262], "match": 255, "light": 255, "fast": 255, "e3sm_compon": 255, "interact": [255, 258, 261, 262, 274], "interrupt": 255, "pty": 255, "navig": 255, "newli": 255, "bunch": 255, "didn": 255, "mistak": 255, "finger": 255, "cross": 255, "initial_normalveloc": 255, "initial_salin": 255, "btr_dt_per_km": [255, 267], "obvious": 255, "stress": [255, 272], "bring": 255, "landicemodelstep": 255, "huge": 255, "cp": 255, "config_dt": 255, "05": 255, "split_explicit_t": 255, "config_btr_dt": 255, "hmix_del2": 255, "bottom_drag": 255, "cvmix": 255, "0002": 255, "filename_interv": 255, "0100": 255, "input_interv": 255, "initial_onli": 255, "basicmesh": 255, "dayssincestart": 255, "surfacespe": 255, "lowersurfac": 255, "uppersurfac": 255, "ureconstructx": 255, "ureconstructi": 255, "great": 255, "remain": [255, 268, 272], "load_dataset": 255, "final_temperatur": 255, "ab": 255, "proc": 255, "area": 255, "4proc": [255, 267], "8proc": [255, 267], "markdown": 255, "users_guid": 255, "daunt": 255, "flesh": 255, "bonu": 255, "improv": 255, "introduc": 255, "techniqu": 255, "proport": [255, 264, 267, 268, 270, 271, 273, 278], "1384565": 255, "strftime": 255, "gmtime": 255, "run_second": 255, "aim": 255, "constrain_resourc": 255, "becam": 255, "mainten": 255, "counter": 255, "thought": 255, "yet_another_channel_test_cas": 255, "yetanotherchanneltestcas": 255, "choic": [255, 268], "spuriou": [255, 267], "dissip": [255, 267], "pop": [255, 267], "mom": [255, 267], "mitgcm": [255, 267], "higher": 255, "heavi": 255, "analogi": 255, "tet": 255, "bear": 255, "late": 255, "startswith": 255, "enumer": 255, "rpe_": 255, "_nu_": 255, "privat": 255, "break": [255, 267], "unusu": 255, "rpe_1_nu_1": [255, 267], "rpe_2_nu_5": [255, 267], "rpe_3_nu_10": 255, "rpe_4_nu_20": 255, "rpe_5_nu_200": 255, "20_00": 255, "0000": 255, "dayssincestartofsim": 255, "relativevort": 255, "pyplot": 255, "plt": 255, "output_": 255, "sections_yet_another_channel_": 255, "rpe_t": 255, "init_filenam": 255, "ds_init": 255, "_plot": 255, "dirti": 255, "adopt": 255, "lesson": 255, "tricki": 255, "commun": 255, "nuanc": 255, "fake": 255, "wasn": 255, "fold": 255, "proper": 255, "third": 255, "extens": 256, "multinod": [256, 274], "explanatori": 256, "my_machin": 256, "extend": 256, "gitconfig": 256, "enter": 256, "author": 256, "asai": 256, "davi": 256, "email": 256, "pull_request": 256, "28": 256, "address": 256, "metadata": 256, "customize_config_pars": 256, "server_base_url": 256, "inej": 256, "check_siz": 256, "ssl": 256, "certif": 256, "core_path": 256, "partition_execut": 256, "dask": 256, "netcdf4": 256, "netcdf4_class": 256, "netcdf3_64bit": 256, "netcdf3_class": 256, "engin": 256, "scipi": 256, "mesh_databas": 256, "ocean_database_root": 256, "landice_database_root": 256, "mesh_cor": 256, "mesh_min_cor": 256, "mesh_max_memori": 256, "mesh_max_disk": 256, "init_cor": 256, "init_min_cor": 256, "init_max_memori": 256, "init_max_disk": 256, "init_thread": 256, "forward_cor": 256, "forward_min_cor": 256, "forward_thread": 256, "forward_max_memori": 256, "forward_max_disk": 256, "add_metadata": 256, "ec": 256, "wc": 256, "mesh_descript": 256, "autodetect": 256, "bathy_descript": 256, "gebco": 256, "2022": 256, "bedmachin": 256, "antarctica": 256, "init_descript": 256, "e3sm_vers": 256, "increment": 256, "mesh_revis": 256, "finest": 256, "min_r": 256, "max_r": 256, "max_depth": 256, "creation_d": 256, "peopl": 256, "contact": 256, "temperaturemax": 256, "statist": 256, "temperature_max": 256, "33": [256, 274], "enable_ocean_initial_condit": 256, "enable_ocean_graph_partit": 256, "enable_seaice_initial_condit": 256, "scrip": 256, "enable_scrip": 256, "transect": 256, "onlin": 256, "member": 256, "offlin": 256, "enable_diagnostics_fil": 256, "coarser": [256, 268], "finer": 256, "comparisonlatresolut": 256, "comparisonlonresolut": 256, "antarct": 256, "polar": [256, 257, 259, 264], "stereograph": 256, "comparisonantarcticstereowidth": 256, "6000": [256, 264], "comparisonantarcticstereoresolut": 256, "arctic": [256, 277], "comparisonarcticstereowidth": 256, "comparisonarcticstereoresolut": 256, "tanh_dz": 256, "16": [256, 272, 274], "3000": 256, "min_layer_thick": [256, 264], "max_layer_thick": [256, 264], "retain": 256, "ecosystem": 257, "gain": 257, "confluenc": 257, "public_html": [257, 259, 261], "soft": [257, 259, 261, 274], "mpi_intel": [257, 259, 260, 261], "36": [257, 261, 272, 274], "condo": [257, 274], "acm": [257, 274], "medium": 257, "acme_high": 257, "load_latest_polaris_intel_impi": [257, 260], "load_latest_polaris_gnu_openmpi": [257, 259, 274], "dst": 258, "calendar": 258, "network": 258, "introduct": 258, "platform": 258, "batch": 258, "wtrw": 258, "ch": 258, "fe": 258, "lustr": 258, "scratch4": 258, "scratch5": 258, "sacctmgr": 258, "assoc": 258, "cluster": 258, "45": 258, "sshare": 258, "sreport": 258, "accountutilizationbyus": 258, "2019": 258, "02": 258, "yellow": 258, "chkhome": 258, "petabyt": 258, "df": 258, "bp": 258, "archiv": [258, 262], "hpss": [258, 262], "front": 258, "tn": 258, "storag": 258, "project_nam": 258, "salloc": [258, 261, 262], "account_nam": 258, "gpu": [258, 262], "hyperthread": [258, 262], "hang": [258, 262], "threads_per_cor": [258, 262], "shared_clim": [258, 274], "load_latest_polaris_gnu_mpich": [258, 262], "load_latest_polaris_intel_openmpi": 259, "compyf": 260, "app": [260, 274], "pmi2": 260, "40": 260, "submit": 261, "workload": 261, "squeue": 261, "my_usernam": [261, 262], "scancel": 261, "jobid": 261, "cancel": 261, "emtpi": 261, "three": [261, 280], "mpi_mpich": [261, 274], "mpi_openmpi": [261, 274], "nompi": [261, 274], "p1": 262, "nersc": 262, "iri": 262, "filesystem": 262, "myquota": 262, "prjquota": 262, "projectid": 262, "m1795": 262, "hsi": 262, "htar": 262, "zstash": 262, "cf": [262, 274], "cdir": [262, 274], "premium": 262, "cray_compil": 262, "8844": 262, "monik": 262, "browser": 262, "grab": 262, "logon": 262, "kernel": 262, "myenv": 262, "ipykernel": 262, "kernelspec": 262, "u1": 262, "interpret": 262, "argv": 262, "ipykernel_launch": 262, "connection_fil": 262, "display_nam": 262, "languag": 262, "2500": 264, "deepest": 264, "stewart": 264, "2017": 264, "z_2": 264, "z_1": 264, "mathrm": 264, "tanh": 264, "rightarrow": 264, "infti": 264, "z_k": 264, "z_0": 264, "z_": [264, 272], "k": 264, "finder": 264, "n_z": 264, "h_": 264, "scienc": 264, "hydrograph": 264, "climatologi": 264, "250": 264, "5500": 264, "renorm": 264, "51": 264, "221": 264, "ziso": [264, 280], "63": 264, "floor": 264, "flat": [264, 267], "collaps": 264, "adcroft": 264, "campin": 264, "2004": 264, "absenc": 264, "squash": 264, "watercolumn": 264, "press": 264, "batymetri": 264, "stair": 264, "month": 265, "websit": [265, 275], "release_6": 265, "ilicak": 267, "2012": 267, "variat": 267, "distinguish": 267, "zonal": [267, 272], "meridion": [267, 272], "psu": [267, 272], "cooler": 267, "north": 267, "sinusoid": 267, "perturb": [267, 268, 271], "t_0": 267, "t_b": 267, "t_": 267, "z_b": 267, "y_": 267, "l_x": 267, "warmer": 267, "ge": [267, 268], "gradient_width_fract": 267, "l_y": 267, "le": [267, 272], "flow": [267, 268], "stationari": [267, 272], "literatur": 267, "mk": 267, "celsiu": 267, "prognost": 267, "williamson": 268, "1992": 268, "sec": 268, "3a": 268, "skamarock": 268, "gassmann": 268, "bodi": 268, "rotat": [268, 270, 271], "transport": 268, "psi": 268, "proportion": 268, "icosohydr": 268, "nearest": 268, "insensit": [268, 272], "300": [268, 273], "passiv": 268, "psi_0": 268, "co": [268, 270, 271], "radiu": 268, "debug_tracers_1": 268, "equatori": 268, "u_0": 268, "tau": 268, "transit": 268, "equat": [268, 270, 271, 272], "vel_pd": 268, "tendenc": [268, 271], "multipli": 268, "rad": 268, "lat_cent": 268, "lon_cent": 268, "14159265": 268, "2123666": 268, "6667": 268, "hill": 268, "psi0": 268, "qu_conv_thresh": 268, "qu_conv_max": 268, "icos_conv_thresh": 268, "icos_conv_max": 268, "roughli": 268, "propag": [270, 271], "doubli": [270, 271], "assess": [270, 271], "numer": [270, 271], "accuraci": [270, 271], "discret": [270, 271], "bishnu": [270, 271], "friction": [270, 271], "neglect": [270, 271], "nonlinear": [270, 271], "analyt": [270, 280], "k_x": [270, 271], "k_y": [270, 271], "accord": [270, 271, 274], "availi": [270, 271], "10000": [270, 271], "coriloi": 270, "1e": 270, "amplitud": [270, 271], "ssh_amplitud": [270, 271], "wavelength": [270, 271], "n_wavelengths_x": [270, 271], "n_wavelengths_i": [270, 271], "conv_thresh": [270, 271], "conv_max": [270, 271], "embed": 271, "eta_0": 271, "span": 272, "arbitrarili": 272, "chosen": 272, "virtu": 272, "examin": 272, "400": 272, "phi": 272, "phi_0": 272, "dz": 272, "ml": 272, "mld": 272, "surface_x": 272, "x_gradient_mixed_lay": 272, "mixed_layer_depth_x": 272, "x_difference_across_mixed_lay": 272, "x_gradient_interior": 272, "spatial": 272, "degc": 272, "temperature_gradient_mixed_lay": 272, "temperature_difference_across_mixed_lay": 272, "temperature_gradient_interior": 272, "mixed_layer_depth_temperatur": 272, "surface_salin": 272, "salinity_gradient_mixed_lay": 272, "salinity_difference_across_mixed_lay": 272, "salinity_gradient_interior": 272, "mixed_layer_depth_salin": 272, "scheme": 272, "dictat": 272, "kpp": 272, "restor": 272, "piston": 272, "toward": 272, "temperature_surface_restoring_valu": 272, "temperature_piston_veloc": 272, "salinity_surface_restoring_valu": 272, "salinity_piston_veloc": 272, "temperature_interior_restoring_r": 272, "salinity_interior_restoring_r": 272, "net": 272, "latent": 272, "heat": 272, "bulk": 272, "latent_heat_flux": 272, "sensibl": 272, "sensible_heat_flux": 272, "solar": 272, "shortwav": 272, "shortwave_heat_flux": 272, "evapor": 272, "evaporation_flux": 272, "5e": 272, "rain": 272, "rain_flux": 272, "wind": 272, "wind_stress_zon": 272, "wind_stress_meridion": 272, "welcom": [273, 278], "icosohedr": [273, 278], "pertain": [273, 278], "inher": 273, "warrant": 273, "investig": 273, "load_latest_polari": 274, "minu": 274, "create_polaris_load_script": 274, "load_polaris_1": 274, "0_mpich": 274, "exclud": 274, "wiki": 274, "circular_shelf": 274, "sia_smoke_test": 274, "sia_decomposition_test": 274, "sia_restart_test": 274, "fo_smoke_test": 274, "fo_decomposition_test": 274, "fo_restart_test": 274, "37": 274, "38": 274, "17": 274, "210131_test_new_branch": 274, "my_config": 274, "smaller": 274, "previous_workdir": 274, "paper": 274, "recompil": 274, "live": 274, "safer": 274, "preserv": 274, "test_subdir": 274, "whatev": 274, "clock": 274, "j": 274, "exclus": 274, "job_nam": 274, "fo_integr": 274, "sia_integr": 274, "cosine_bell_cached_init": [274, 279], "ec30to60": 274, "ecwisc30to60": 274, "qu240_for_e3sm": 274, "quwisc240_for_e3sm": 274, "wc14": 274, "suitenam": 274, "seaice_standalone_framework": 275, "71": 277, "35n": 277, "156": 277, "5w": 277, "atmospher": 277, "timeseri": 277, "pair": 277, "prohibit": 279, "speed": 279, "radial": 280}, "objects": {"polaris": [[18, 0, 1, "", "Component"], [20, 0, 1, "", "ModelStep"], [33, 0, 1, "", "Step"], [42, 0, 1, "", "Task"]], "polaris.Component": [[18, 1, 1, "", "__init__"], [19, 1, 1, "", "add_task"]], "polaris.ModelStep": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_model_config_options"], [22, 1, 1, "", "add_namelist_file"], [23, 1, 1, "", "add_streams_file"], [24, 1, 1, "", "add_yaml_file"], [25, 1, 1, "", "dynamic_model_config"], [26, 1, 1, "", "map_yaml_to_namelist"], [27, 1, 1, "", "partition"], [28, 1, 1, "", "process_inputs_and_outputs"], [29, 1, 1, "", "runtime_setup"], [30, 1, 1, "", "set_model_resources"], [31, 1, 1, "", "setup"], [32, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[33, 1, 1, "", "__init__"], [34, 1, 1, "", "add_dependency"], [35, 1, 1, "", "add_input_file"], [36, 1, 1, "", "add_output_file"], [37, 1, 1, "", "constrain_resources"], [38, 1, 1, "", "run"], [39, 1, 1, "", "runtime_setup"], [40, 1, 1, "", "set_resources"], [41, 1, 1, "", "setup"]], "polaris.Task": [[42, 1, 1, "", "__init__"], [43, 1, 1, "", "add_step"], [44, 1, 1, "", "configure"]], "polaris.__main__": [[45, 2, 1, "", "main"]], "polaris.cache": [[46, 2, 1, "", "update_cache"]], "polaris.components": [[47, 2, 1, "", "get_components"]], "polaris.config": [[48, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[48, 1, 1, "", "__init__"]], "polaris.io": [[49, 2, 1, "", "download"], [50, 3, 0, "-", "imp_res"], [51, 2, 1, "", "symlink"]], "polaris.job": [[52, 2, 1, "", "get_slurm_options"], [53, 2, 1, "", "write_job_script"]], "polaris.list": [[54, 2, 1, "", "list_cases"], [55, 2, 1, "", "list_machines"], [56, 2, 1, "", "list_suites"]], "polaris.logging": [[57, 2, 1, "", "log_method_call"]], "polaris.mesh": [[58, 0, 1, "", "IcosahedralMeshStep"], [65, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[58, 1, 1, "", "__init__"], [59, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [60, 1, 1, "", "get_cell_width"], [61, 1, 1, "", "get_subdivisions"], [62, 1, 1, "", "make_jigsaw_mesh"], [63, 1, 1, "", "run"], [64, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, 1, 1, "", "__init__"], [66, 1, 1, "", "build_cell_width_lat_lon"], [67, 1, 1, "", "make_jigsaw_mesh"], [68, 1, 1, "", "run"], [69, 1, 1, "", "setup"]], "polaris.mesh.planar": [[70, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[71, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, 1, 1, "", "__init__"], [72, 1, 1, "", "run"], [73, 1, 1, "", "save_and_plot_cell_width"], [74, 1, 1, "", "setup"]], "polaris.model_step": [[75, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[76, 2, 1, "", "ingest"], [77, 2, 1, "", "parse_replacements"], [78, 2, 1, "", "replace"], [79, 2, 1, "", "write"]], "polaris.ocean": [[127, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[127, 1, 1, "", "__init__"]], "polaris.ocean.model": [[128, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[128, 1, 1, "", "__init__"], [129, 1, 1, "", "compute_cell_count"], [130, 1, 1, "", "constrain_resources"], [131, 1, 1, "", "map_yaml_to_namelist"], [132, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[133, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[134, 0, 1, "", "BaroclinicChannelTestCase"], [135, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase": [[134, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[136, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[136, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[137, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[137, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[138, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[138, 1, 1, "", "__init__"], [139, 1, 1, "", "compute_cell_count"], [140, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[141, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "run"], [143, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[144, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[144, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[145, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[147, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[147, 1, 1, "", "__init__"], [148, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[149, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "run"], [151, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[152, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[152, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[153, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[155, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence": [[157, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.global_convergence.cosine_bell": [[158, 0, 1, "", "CosineBell"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "configure"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis": [[160, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis": [[160, 1, 1, "", "__init__"], [161, 1, 1, "", "rmse"], [162, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward": [[163, 0, 1, "", "Forward"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "compute_cell_count"], [165, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init": [[166, 0, 1, "", "Init"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz": [[168, 0, 1, "", "Viz"], [170, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap": [[170, 1, 1, "", "__init__"], [171, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[172, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[173, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence": [[175, 0, 1, "", "Convergence"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence": [[175, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[176, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "normal_velocity"], [178, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[179, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "compute_cell_count"], [181, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[182, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[184, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[186, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[187, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.convergence": [[189, 0, 1, "", "Convergence"]], "polaris.ocean.tasks.manufactured_solution.convergence.Convergence": [[189, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[190, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[190, 1, 1, "", "__init__"], [191, 1, 1, "", "normal_velocity"], [192, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[193, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[193, 1, 1, "", "__init__"], [194, 1, 1, "", "compute_cell_count"], [195, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[196, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[198, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[200, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[201, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[201, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[202, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[202, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[203, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[203, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[204, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[206, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[208, 2, 1, "", "generate_1d_grid"], [209, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[210, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[211, 2, 1, "", "alter_bottom_depth"], [212, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[213, 2, 1, "", "compute_min_max_level_cell"], [214, 2, 1, "", "compute_z_level_layer_thickness"], [215, 2, 1, "", "compute_z_level_resting_thickness"], [216, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[217, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[80, 2, 1, "", "get_available_parallel_resources"], [81, 2, 1, "", "get_parallel_command"], [82, 2, 1, "", "run_command"], [83, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[84, 2, 1, "", "write"]], "polaris.remap": [[85, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[85, 1, 1, "", "__init__"], [86, 1, 1, "", "dst_from_lon_lat"], [87, 1, 1, "", "dst_from_mpas"], [88, 1, 1, "", "dst_from_points"], [89, 1, 1, "", "dst_from_proj"], [90, 1, 1, "", "dst_global_lon_lat"], [91, 1, 1, "", "get_remapper"], [92, 1, 1, "", "runtime_setup"], [93, 1, 1, "", "src_from_lon_lat"], [94, 1, 1, "", "src_from_mpas"], [95, 1, 1, "", "src_from_proj"]], "polaris.run": [[96, 2, 1, "", "load_dependencies"], [97, 2, 1, "", "pickle_step_after_run"], [100, 2, 1, "", "setup_config"], [101, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[98, 2, 1, "", "run_single_step"], [99, 2, 1, "", "run_tasks"]], "polaris.seaice": [[238, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[238, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[239, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[240, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[240, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[241, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[241, 1, 1, "", "__init__"], [242, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[243, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[243, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[244, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[244, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[245, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "run"]], "polaris.setup": [[102, 2, 1, "", "setup_task"], [103, 2, 1, "", "setup_tasks"]], "polaris.streams": [[104, 2, 1, "", "read"], [105, 2, 1, "", "update_defaults"], [106, 2, 1, "", "update_tree"], [107, 2, 1, "", "write"]], "polaris.suite": [[108, 2, 1, "", "setup_suite"]], "polaris.validate": [[109, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[110, 2, 1, "", "plot_global"]], "polaris.viz": [[111, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[112, 0, 1, "", "PolarisYaml"], [116, 2, 1, "", "main_mpas_to_yaml"], [117, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [118, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[112, 1, 1, "", "__init__"], [113, 1, 1, "", "read"], [114, 1, 1, "", "update"], [115, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 6, 255], "templat": [1, 13], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 5, 13, 126, 235, 237, 255, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 277, 278], "same": 1, "implement": 1, "test": [1, 5, 255, 256, 277], "valid": [1, 2, 16, 109, 153, 154, 241, 242, 255, 274], "api": 2, "refer": [2, 125, 126], "compon": [2, 13, 18, 19, 47, 126, 218, 228, 234, 235, 237, 247, 265, 274, 275], "polari": [2, 4, 5, 7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 254, 274], "framework": [2, 9, 125, 126, 221, 224, 225, 226, 234, 237, 251, 263], "command": [2, 4, 7], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 7, 54, 55, 56], "setup": [2, 4, 7, 31, 41, 64, 69, 74, 102, 103, 132, 143, 151, 231], "suit": [2, 4, 7, 108, 232, 266, 274, 279], "run": [2, 7, 13, 38, 63, 68, 72, 96, 97, 98, 99, 100, 101, 126, 142, 150, 154, 156, 162, 167, 169, 171, 174, 183, 185, 188, 197, 199, 205, 207, 231, 235, 237, 242, 246, 267, 268, 270, 271, 272, 273, 274, 277, 278], "cach": [2, 4, 7, 46, 231], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 234], "task": [2, 42, 43, 44, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 223, 227, 230, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 250, 255, 269, 273, 274, 276, 278, 280], "step": [2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 231, 255, 267, 268, 270, 271, 272, 273, 278], "modelstep": [2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "config": [2, 5, 8, 13, 48, 123, 126, 237, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 277, 278], "io": [2, 10, 49, 50, 51], "job": [2, 52, 53, 261, 274], "log": [2, 11, 57], "mesh": [2, 12, 13, 17, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 222, 255, 267, 268, 270, 271, 272, 273, 277, 278], "model_step": [2, 75], "namelist": [2, 13, 76, 77, 78, 79, 126], "parallel": [2, 80, 81, 82, 83], "proven": [2, 14, 84], "remap": [2, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "stream": [2, 13, 104, 105, 106, 107, 126, 237, 255], "viz": [2, 110, 111, 155, 156, 168, 169, 170, 171, 184, 185, 198, 199, 206, 207, 222, 224, 225, 226, 245, 246, 251, 255], "yaml": [2, 13, 112, 113, 114, 115, 116, 117, 118, 126], "build": [3, 123, 235, 274], "serial": [4, 7, 98, 99], "deploi": 5, "new": [5, 123, 255], "spack": [5, 123, 235, 274], "environ": [5, 123, 235, 252, 274], "where": 5, "do": 5, "we": 5, "updat": [5, 13, 114, 235], "depend": [5, 231], "mach": 5, "conda": [5, 235, 252, 261, 274], "identifi": 5, "e3sm": [5, 13, 126, 235, 237, 274], "machin": [5, 123, 235, 261, 274], "describ": [5, 123], "modul": [5, 7, 234, 235], "env": 5, "variabl": [5, 16], "etc": 5, "creat": [5, 235, 255], "from": [5, 17, 126, 231, 235, 261], "remot": [5, 262], "branch": 5, "petsc": [5, 235], "netlib": [5, 235], "lapack": [5, 235], "albani": [5, 235], "troubleshoot": [5, 235, 252], "mpa": [5, 126, 220, 249], "ocean": [5, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 265], "without": 5, "mali": 5, "share": [5, 234, 255], "docstr": 6, "clean": 7, "file": [8, 13, 123, 126, 231, 255, 256], "comment": 8, "symlink": [10, 51, 231], "download": [10, 49, 231], "spheric": [12, 17, 71, 72, 73, 74], "planar": [12, 17, 70], "uniform": [12, 264], "gener": 12, "model": [13, 126, 128, 129, 130, 131, 132, 219, 237, 248, 255, 274], "an": [13, 126, 237, 255], "ad": [13, 123, 231, 255], "runtim": 13, "input": [13, 231], "partit": [13, 27], "pio": 13, "make": [13, 255], "graph": 13, "against": 16, "baselin": 16, "norm": 16, "visual": [17, 255, 277], "horizont": [17, 255], "field": 17, "global": 17, "lat": 17, "lon": 17, "plot": [17, 255], "add_task": 19, "add_model_config_opt": 21, "add_namelist_fil": 22, "add_streams_fil": 23, "add_yaml_fil": 24, "dynamic_model_config": [25, 140, 146, 165, 181, 195], "map_yaml_to_namelist": [26, 131], "process_inputs_and_output": 28, "runtime_setup": [29, 39, 92, 231], "set_model_resourc": 30, "update_namelist_pio": 32, "add_depend": 34, "add_input_fil": 35, "add_output_fil": 36, "constrain_resourc": [37, 130, 231], "set_resourc": 40, "add_step": 43, "configur": [44, 148, 159, 233, 252], "__main__": 45, "main": 45, "update_cach": 46, "get_compon": 47, "polarisconfigpars": 48, "imp_r": 50, "get_slurm_opt": 52, "write_job_script": 53, "list_cas": 54, "list_machin": 55, "list_suit": 56, "log_method_cal": 57, "icosahedralmeshstep": [58, 59, 60, 61, 62, 63, 64], "build_subdivisions_cell_width_lat_lon": 59, "get_cell_width": 60, "get_subdivis": 61, "make_jigsaw_mesh": [62, 67], "quasiuniformsphericalmeshstep": [65, 66, 67, 68, 69], "build_cell_width_lat_lon": 66, "compute_planar_hex_nx_ni": 70, "sphericalbasestep": [71, 72, 73, 74], "save_and_plot_cell_width": 73, "make_graph_fil": 75, "ingest": 76, "parse_replac": 77, "replac": 78, "write": [79, 84, 107, 115], "get_available_parallel_resourc": 80, "get_parallel_command": 81, "run_command": 82, "set_cores_per_nod": 83, "mappingfilestep": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "dst_from_lon_lat": 86, "dst_from_mpa": 87, "dst_from_point": 88, "dst_from_proj": 89, "dst_global_lon_lat": 90, "get_remapp": 91, "src_from_lon_lat": 93, "src_from_mpa": 94, "src_from_proj": 95, "load_depend": 96, "pickle_step_after_run": 97, "run_single_step": 98, "run_task": 99, "setup_config": 100, "unpickle_suit": 101, "setup_task": [102, 103], "read": [104, 113], "update_default": 105, "update_tre": 106, "setup_suit": 108, "compare_vari": 109, "globe": 110, "plot_glob": 110, "plot_horiz_field": 111, "polarisyaml": [112, 113, 114, 115], "main_mpas_to_yaml": 116, "mpas_namelist_and_streams_to_yaml": 117, "yaml_to_mpas_stream": 118, "anvil": [119, 257], "intel": [119, 121, 122, 257, 259, 260], "gnu": [119, 120, 121, 122, 124, 257, 258, 259, 262], "chicoma": [120, 258], "cpu": [120, 124, 258, 262], "chrysali": [121, 259], "compymcnodefac": [122, 260], "support": [123, 219, 235, 248, 261, 274], "other": [123, 231, 255, 261, 274], "perlmutt": [124, 262], "pm": 124, "baroclinic_channel": [125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 221], "inertial_gravity_wav": [125, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 224], "global_converg": [125, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 222, 268], "cosine_bel": [125, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 222, 266, 268], "manufactured_solut": [125, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 225, 271], "single_column": [125, 200, 201, 202, 203, 204, 205, 206, 207, 226, 236, 239, 240, 241, 242, 243, 244, 245, 246, 251, 272, 277], "oceanmodelstep": [125, 128, 129, 130, 131, 132], "potenti": [125, 126], "energi": [125, 126], "rpe": [125, 126, 133, 147, 148, 149, 150, 151, 221, 267], "vertic": [125, 126, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 255, 264, 267, 268, 270, 271, 272, 273], "coordin": [125, 126, 255, 264], "v": 126, "map": 126, "omega": 126, "set": [126, 235, 237, 274], "mpi": [126, 237, 261], "resourc": [126, 237], "rest": 126, "compute_cell_count": [129, 139, 164, 180, 194], "compute_rp": 133, "baroclinicchanneltestcas": 134, "add_baroclinic_channel_task": 135, "decomp": [136, 221, 267], "default": [137, 221, 255, 267], "forward": [138, 139, 140, 163, 164, 165, 179, 180, 181, 193, 194, 195, 202, 221, 222, 224, 225, 226, 243, 251, 255], "init": [141, 142, 143, 166, 167, 182, 183, 196, 197, 204, 205, 221, 222, 224, 225, 226, 255], "restart": [144, 145, 146, 221, 267, 277], "restart_step": [145, 146], "restartstep": [145, 146], "analysi": [149, 150, 151, 160, 161, 162, 173, 174, 187, 188, 222, 224, 225, 255], "thread": [152, 221, 267], "add_cosine_bell_task": 157, "cosinebel": [158, 159], "rmse": 161, "vizmap": [170, 171], "add_inertial_gravity_wave_task": 172, "converg": [175, 189, 224, 225, 270, 271], "exact_solut": [176, 177, 178, 190, 191, 192, 224, 225], "exactsolut": [176, 177, 178, 190, 191, 192], "normal_veloc": [177, 191], "ssh": [178, 192], "add_manufactured_solution_task": 186, "add_single_column_task": [200, 239], "cvmix": [201, 226, 272], "ideal_ag": 203, "idealag": 203, "grid_1d": [208, 209], "generate_1d_grid": 208, "write_1d_grid": 209, "init_vertical_coord": 210, "partial_cel": [211, 212], "alter_bottom_depth": 211, "alter_ssh": 212, "zlevel": [213, 214, 215, 216], "compute_min_max_level_cel": 213, "compute_z_level_layer_thick": 214, "compute_z_level_resting_thick": 215, "init_z_level_vertical_coord": 216, "zstar": 217, "init_z_star_vertical_coord": 217, "initi": [220, 249, 255, 267, 268, 270, 271, 272, 273, 277, 278], "condit": [220, 249, 255, 267, 268, 270, 271, 272, 273, 277, 278], "boundari": 220, "forc": [220, 249, 267, 268, 270, 271, 272, 273, 277, 278], "baroclinic_channel_test_cas": 221, "type": [222, 264], "ideal": [226, 272], "ag": [226, 272], "categori": [227, 273, 278], "directori": 229, "structur": 229, "organ": 230, "attribut": [231, 233], "constructor": [231, 233], "output": [231, 255], "copi": 231, "pull": 232, "request": 232, "pr": 232, "nightli": 232, "overview": 234, "code": [234, 235, 255], "style": [234, 235], "packag": 234, "within": 234, "group": [234, 255], "relat": 234, "quick": [235, 274], "start": [235, 255, 274], "develop": [235, 254, 255], "unix": 235, "shell": 235, "up": [235, 274], "repositori": 235, "beginn": 235, "compil": 235, "system": 235, "unknown": 235, "what": 235, "script": [235, 274], "doe": 235, "flag": 235, "activ": 235, "switch": 235, "between": [235, 255], "differ": 235, "onli": 235, "repo": 235, "worktre": 235, "advanc": 235, "user": [235, 254, 256, 274], "seaic": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249], "exact_restart": [240, 241, 242], "exactrestart": 240, "standard_phys": [244, 245, 246], "standardphys": 244, "standard_physics_test": 251, "exact_restart_test": 251, "solver": 252, "error": 252, "when": 252, "proxi": 252, "lanl": 252, "mac": 252, "gethostbynam": 252, "fail": 252, "glossari": [253, 254], "": 254, "guid": 254, "tutori": [254, 255], "compass": 254, "get": 255, "vari": 255, "resolut": 255, "paramet": 255, "thing": 255, "out": 255, "defin": 255, "more": 255, "again": 255, "one": 255, "time": [255, 267, 268, 270, 271, 272, 273, 278], "second": 255, "enhanc": 255, "dynam": 255, "comput": 255, "cell": 255, "count": 255, "superclass": 255, "studi": 255, "how": 255, "pass": 255, "data": [255, 262], "A": 256, "case": 256, "slurm": 261, "queue": 261, "mpich": 261, "openmpi": 261, "No": 261, "forg": 261, "jupyt": 262, "notebook": 262, "1d": 264, "grid": [264, 267, 268, 270, 271, 272, 273], "tanh_dz": 264, "60layerphc": 264, "100layere3smv1": 264, "3d": 264, "z": 264, "star": 264, "level": 264, "cosine_bell_cached_init": 266, "baroclin": 267, "channel": 267, "descript": [267, 268, 270, 271, 272, 273, 277, 278], "durat": [267, 268, 270, 271, 272, 273, 277, 278], "core": [267, 268, 270, 271, 272, 273, 277, 278], "cosine_bell_with_viz": 268, "inerti": 270, "graviti": 270, "wave": 270, "task_nam": [273, 278], "i": 274, "yet": 274, "load": 274, "standalon": 274, "sea": 275, "ic": 275, "standard": 277, "physic": 277, "timestep": 277, "exact": 277}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [228, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "Task": [[2, "task"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [222, "mesh"], [267, "mesh"], [267, "id2"], [267, "id9"], [267, "id17"], [267, "id25"], [267, "id32"], [268, "mesh"], [270, "mesh"], [271, "mesh"], [272, "mesh"], [272, "id3"], [272, "id8"], [273, "mesh"], [277, "mesh"], [277, "id1"], [277, "id6"], [278, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [222, "viz"], [224, "viz"], [225, "viz"], [226, "viz"], [251, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Deploying a new spack environment": [[5, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[5, "where-do-we-update-polaris-dependencies"]], "Mache": [[5, "mache"], [5, "id1"]], "Spack": [[5, "spack"]], "Conda": [[5, "conda"]], "Identifying E3SM machines": [[5, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[5, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[5, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[5, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[5, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[5, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[5, "testing-spack-with-albany"]], "Troubleshooting spack": [[5, "troubleshooting-spack"]], "Testing polaris": [[5, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[5, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[5, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[5, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[5, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[5, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[5, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[5, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[6, "documentation"], [255, "documentation"]], "Docstrings": [[6, "docstrings"]], "Modules for polaris commands": [[7, "modules-for-polaris-commands"]], "list module": [[7, "list-module"]], "setup module": [[7, "setup-module"]], "clean module": [[7, "clean-module"]], "suite module": [[7, "suite-module"]], "run.serial module": [[7, "run-serial-module"]], "cache module": [[7, "cache-module"]], "Config files": [[8, "config-files"]], "Comments in config files": [[8, "comments-in-config-files"]], "Framework": [[9, "framework"], [263, "framework"]], "IO": [[10, "io"]], "Symlinks": [[10, "symlinks"]], "Download": [[10, "download"]], "Logging": [[11, "logging"]], "Mesh": [[12, "mesh"]], "Spherical Meshes": [[12, "spherical-meshes"]], "Planar Meshes": [[12, "planar-meshes"]], "Uniform planar meshes": [[12, "uniform-planar-meshes"]], "General planar meshes": [[12, "general-planar-meshes"]], "Model": [[13, "model"], [126, "model"], [237, "model"]], "Running an E3SM component": [[13, "running-an-e3sm-component"], [126, "running-an-e3sm-component"], [237, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[13, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[13, "adding-a-yaml-file"]], "Adding a namelist file": [[13, "adding-a-namelist-file"]], "Adding model config options": [[13, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[13, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[13, "adding-a-streams-file"]], "Adding a template streams file": [[13, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[13, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[13, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[13, "partitioning-the-mesh"]], "Updating PIO namelist options": [[13, "updating-pio-namelist-options"]], "Making a graph file": [[13, "making-a-graph-file"]], "Provenance": [[14, "provenance"]], "Remapping": [[15, "remapping"]], "Validation": [[16, "validation"]], "Validating variables against a baseline": [[16, "validating-variables-against-a-baseline"]], "Validating variables": [[16, "validating-variables"]], "Norms": [[16, "norms"]], "Visualization": [[17, "visualization"]], "horizontal fields from planar meshes": [[17, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[17, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[18, "polaris-component"]], "polaris.Component.add_task": [[19, "polaris-component-add-task"]], "polaris.ModelStep": [[20, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[21, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[22, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[23, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[24, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[25, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[26, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[27, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[28, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[29, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[30, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[31, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[32, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[33, "polaris-step"]], "polaris.Step.add_dependency": [[34, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[35, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[36, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[37, "polaris-step-constrain-resources"]], "polaris.Step.run": [[38, "polaris-step-run"]], "polaris.Step.runtime_setup": [[39, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[40, "polaris-step-set-resources"]], "polaris.Step.setup": [[41, "polaris-step-setup"]], "polaris.Task": [[42, "polaris-task"]], "polaris.Task.add_step": [[43, "polaris-task-add-step"]], "polaris.Task.configure": [[44, "polaris-task-configure"]], "polaris.__main__.main": [[45, "polaris-main-main"]], "polaris.cache.update_cache": [[46, "polaris-cache-update-cache"]], "polaris.components.get_components": [[47, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[48, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[49, "polaris-io-download"]], "polaris.io.imp_res": [[50, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[51, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[52, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[53, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[54, "polaris-list-list-cases"]], "polaris.list.list_machines": [[55, "polaris-list-list-machines"]], "polaris.list.list_suites": [[56, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[57, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[58, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[59, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[60, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[61, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[62, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[63, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[64, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[65, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[70, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[71, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[72, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[73, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[74, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[75, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[76, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[77, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[78, "polaris-namelist-replace"]], "polaris.namelist.write": [[79, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[80, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[81, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[82, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[83, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[84, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[85, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[86, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[87, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[88, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[89, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[90, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[91, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[92, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[93, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[94, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[95, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.load_dependencies": [[96, "polaris-run-load-dependencies"]], "polaris.run.pickle_step_after_run": [[97, "polaris-run-pickle-step-after-run"]], "polaris.run.serial.run_single_step": [[98, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[99, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[100, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[101, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[102, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[103, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[104, "polaris-streams-read"]], "polaris.streams.update_defaults": [[105, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[106, "polaris-streams-update-tree"]], "polaris.streams.write": [[107, "polaris-streams-write"]], "polaris.suite.setup_suite": [[108, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[109, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[110, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[111, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[112, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[113, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[114, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[115, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[116, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[117, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[118, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[119, "anvil"], [257, "anvil"]], "intel": [[119, "intel"], [121, "intel"], [122, "intel"]], "gnu": [[119, "gnu"], [121, "gnu"], [122, "gnu"]], "Chicoma": [[120, "chicoma"], [258, "chicoma"]], "chicoma-cpu, gnu": [[120, "chicoma-cpu-gnu"]], "Chrysalis": [[121, "chrysalis"], [259, "chrysalis"]], "CompyMcNodeFace": [[122, "compymcnodeface"], [260, "compymcnodeface"]], "Machines": [[123, "machines"], [261, "machines"]], "Supported Machines": [[123, "supported-machines"], [261, "supported-machines"]], "Other Machines": [[123, "other-machines"], [261, "other-machines"]], "Adding a New Supported Machine": [[123, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[123, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[123, "describing-a-spack-environment"]], "Building the Spack Environment": [[123, "building-the-spack-environment"]], "Perlmutter": [[124, "perlmutter"], [262, "perlmutter"]], "pm-cpu, gnu": [[124, "pm-cpu-gnu"]], "ocean": [[125, "ocean"]], "Tasks": [[125, "tasks"], [223, "tasks"], [233, "tasks"], [236, "tasks"], [250, "tasks"], [269, "tasks"], [276, "tasks"], [280, "tasks"]], "baroclinic_channel": [[125, "baroclinic-channel"], [221, "baroclinic-channel"]], "inertial_gravity_wave": [[125, "inertial-gravity-wave"], [224, "inertial-gravity-wave"]], "global_convergence": [[125, "global-convergence"], [222, "global-convergence"], [268, "global-convergence"]], "cosine_bell": [[125, "cosine-bell"], [222, "cosine-bell"]], "manufactured_solution": [[125, "manufactured-solution"], [225, "manufactured-solution"], [271, "manufactured-solution"]], "single_column": [[125, "single-column"], [226, "single-column"], [236, "single-column"], [251, "single-column"], [272, "single-column"], [277, "single-column"]], "Ocean Framework": [[125, "ocean-framework"]], "OceanModelStep": [[125, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[125, "reference-potential-energy-rpe"]], "Vertical coordinates": [[125, "vertical-coordinates"]], "Ocean framework": [[126, "ocean-framework"]], "YAML files vs. namelists and streams": [[126, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[126, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[126, "setting-mpi-resources"], [237, "setting-mpi-resources"]], "Model config options and streams": [[126, "model-config-options-and-streams"], [237, "model-config-options-and-streams"]], "Vertical coordinate": [[126, "vertical-coordinate"], [264, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[126, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[127, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[128, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[129, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[130, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[131, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[132, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[133, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase": [[134, "polaris-ocean-tasks-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[135, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[136, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[137, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[138, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[139, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[140, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[141, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[142, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[143, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[144, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[145, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[146, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[147, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[148, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[149, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[150, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[151, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[152, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[153, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[154, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[155, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[156, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks": [[157, "polaris-ocean-tasks-global-convergence-add-cosine-bell-tasks"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell": [[158, "polaris-ocean-tasks-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure": [[159, "polaris-ocean-tasks-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis": [[160, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse": [[161, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run": [[162, "polaris-ocean-tasks-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward": [[163, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[164, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[165, "polaris-ocean-tasks-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init": [[166, "polaris-ocean-tasks-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run": [[167, "polaris-ocean-tasks-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz": [[168, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run": [[169, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap": [[170, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run": [[171, "polaris-ocean-tasks-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[172, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[173, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[174, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence": [[175, "polaris-ocean-tasks-inertial-gravity-wave-convergence-convergence"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[176, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[177, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[178, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[179, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[180, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[181, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[182, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[183, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[184, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[185, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[186, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[187, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[188, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.convergence.Convergence": [[189, "polaris-ocean-tasks-manufactured-solution-convergence-convergence"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[190, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[191, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[192, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[193, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[194, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[195, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[196, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[197, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[198, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[199, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[200, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[201, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[202, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[203, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[204, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[205, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[206, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[207, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[208, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[209, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[210, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[211, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[212, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[213, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[214, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[215, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[216, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[217, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[218, "ocean-component"], [265, "ocean-component"]], "Models": [[219, "models"], [248, "models"]], "Supported Models": [[219, "supported-models"], [248, "supported-models"]], "MPAS-Ocean": [[220, "mpas-ocean"]], "Initial conditions": [[220, "initial-conditions"], [249, "initial-conditions"]], "Boundary conditions": [[220, "boundary-conditions"]], "Forcing": [[220, "forcing"], [249, "forcing"]], "framework": [[221, "framework"], [224, "framework"], [225, "framework"], [226, "framework"], [251, "framework"]], "baroclinic_channel_test_case": [[221, "baroclinic-channel-test-case"]], "init": [[221, "init"], [222, "init"], [224, "init"], [225, "init"], [226, "init"]], "forward": [[221, "forward"], [222, "forward"], [224, "forward"], [225, "forward"], [226, "forward"], [251, "forward"]], "default": [[221, "default"], [267, "default"]], "decomp": [[221, "decomp"], [267, "decomp"]], "restart": [[221, "restart"], [267, "restart"]], "threads": [[221, "threads"]], "rpe": [[221, "rpe"], [267, "rpe"]], "mesh types": [[222, "mesh-types"]], "analysis": [[222, "analysis"], [224, "analysis"], [225, "analysis"]], "exact_solution": [[224, "exact-solution"], [225, "exact-solution"]], "convergence": [[224, "convergence"], [225, "convergence"], [270, "convergence"], [271, "convergence"]], "cvmix": [[226, "cvmix"], [272, "cvmix"]], "ideal age": [[226, "ideal-age"], [272, "ocean-single-column-ideal-age"]], "Categories of tasks": [[227, "categories-of-tasks"]], "Directory structure": [[229, "directory-structure"]], "Organization of Tasks": [[230, "organization-of-tasks"]], "Steps": [[231, "steps"]], "Step attributes": [[231, "step-attributes"]], "constructor": [[231, "constructor"], [233, "constructor"]], "constrain_resources()": [[231, "constrain-resources"]], "setup()": [[231, "setup"]], "runtime_setup()": [[231, "runtime-setup"]], "run()": [[231, "run"]], "inputs and outputs": [[231, "inputs-and-outputs"]], "Input files": [[231, "input-files"]], "Symlinks to input files": [[231, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[231, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[231, "downloading-and-symlinking-input-files"]], "Copying input files": [[231, "copying-input-files"]], "Output files": [[231, "output-files"]], "Cached output files": [[231, "cached-output-files"]], "Adding other steps as dependencies": [[231, "adding-other-steps-as-dependencies"]], "Suites": [[232, "suites"], [266, "suites"], [274, "suites"], [279, "suites"]], "Pull-Request (PR) suite": [[232, "pull-request-pr-suite"]], "Nightly suite": [[232, "nightly-suite"]], "Task attributes": [[233, "task-attributes"]], "configure()": [[233, "configure"]], "Overview": [[234, "overview"]], "Code Style": [[234, "code-style"]], "Packages and Modules": [[234, "packages-and-modules"]], "Packages": [[234, "packages"]], "Modules": [[234, "modules"]], "Classes": [[234, "classes"]], "Code sharing": [[234, "code-sharing"]], "\u2026in the polaris framework": [[234, "in-the-polaris-framework"]], "\u2026within a component": [[234, "within-a-component"]], "\u2026within a group of related tasks": [[234, "within-a-group-of-related-tasks"]], "\u2026within a task": [[234, "within-a-task"]], "Quick Start for Developers": [[235, "quick-start-for-developers"]], "Unix Shell": [[235, "unix-shell"]], "Set up a polaris repository: for beginners": [[235, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[235, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[235, "supported-machines"]], "Environments with Albany": [[235, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[235, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[235, "unknown-machines"]], "What the script does": [[235, "what-the-script-does"]], "Optional flags": [[235, "optional-flags"]], "Activating the environment": [[235, "activating-the-environment"]], "Switching between different polaris environments": [[235, "switching-between-different-polaris-environments"]], "Troubleshooting": [[235, "troubleshooting"], [252, "troubleshooting"]], "Creating/updating only the polaris environment": [[235, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[235, "building-e3sm-components"]], "Running polaris from the repo": [[235, "running-polaris-from-the-repo"]], "Code style for polaris": [[235, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[235, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[236, "seaice"]], "Seaice framework": [[237, "seaice-framework"]], "polaris.seaice.SeaIce": [[238, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[239, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[240, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[241, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[242, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[243, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[244, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[245, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[246, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "Seaice component": [[247, "seaice-component"]], "MPAS-Seaice": [[249, "mpas-seaice"]], "standard_physics_test": [[251, "standard-physics-test"]], "exact_restart_test": [[251, "exact-restart-test"]], "Solver errors when configuring conda environment": [[252, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[252, "proxy-on-lanl-macs"]], "gethostbyname failed": [[252, "gethostbyname-failed"]], "Glossary": [[253, "glossary"], [254, null]], "Polaris": [[254, "polaris"]], "User's guide": [[254, null]], "Developer's guide": [[254, null]], "Tutorials": [[254, null]], "Compass": [[254, "compass"]], "Developer Tutorial: Adding a new test group": [[255, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[255, "getting-started"]], "Making a new test group": [[255, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[255, "adding-a-default-task"]], "Varying resolution and other parameters": [[255, "varying-resolution-and-other-parameters"]], "Adding the init step": [[255, "adding-the-init-step"]], "Creating a horizontal mesh": [[255, "creating-a-horizontal-mesh"]], "Adding a config file": [[255, "adding-a-config-file"]], "Adding the step to the task": [[255, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[255, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[255, "creating-an-initial-condition"]], "Adding plots": [[255, "adding-plots"]], "Adding step outputs": [[255, "adding-step-outputs"]], "Adding validation": [[255, "adding-validation"], [255, "id1"]], "Test things out!": [[255, "test-things-out"]], "Adding the forward step": [[255, "adding-the-forward-step"]], "Defining model config options and streams": [[255, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[255, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[255, "adding-more-validation"]], "Test the task again!": [[255, "test-the-task-again"]], "Adding a visualization step": [[255, "adding-a-visualization-step"]], "Adding the viz step to the task": [[255, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[255, "test-the-task-one-more-time"]], "Adding a second task": [[255, "adding-a-second-task"]], "Enhancements": [[255, "enhancements"]], "Adding model config options in code": [[255, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[255, "adding-dynamic-model-config-options"]], "Computing the cell count": [[255, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[255, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[255, "adding-a-parameter-study"]], "Adding the steps to the task": [[255, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[255, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[255, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[256, "config-files"]], "A \u201cuser\u201d config file": [[256, "a-user-config-file"]], "Test-case config files": [[256, "test-case-config-files"]], "config options": [[257, "config-options"], [258, "config-options"], [259, "config-options"], [260, "config-options"], [261, "config-options"], [262, "config-options"], [267, "config-options"], [267, "id7"], [267, "id14"], [267, "id22"], [267, "id30"], [267, "id37"], [268, "config-options"], [270, "config-options"], [271, "config-options"], [272, "config-options"], [272, "id1"], [272, "id6"], [272, "id13"], [273, "config-options"], [277, "config-options"], [277, "id5"], [277, "id10"], [278, "config-options"]], "Intel on Anvil": [[257, "intel-on-anvil"]], "Gnu on Anvil": [[257, "gnu-on-anvil"]], "Chicoma-CPU": [[258, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[258, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[259, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[259, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[260, "intel-on-compymcnodeface"]], "Slurm job queueing": [[261, "slurm-job-queueing"]], "MPICH": [[261, "mpich"]], "OpenMPI": [[261, "openmpi"]], "No MPI from conda-forge": [[261, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[262, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[262, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[262, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[264, "d-grid-type"]], "uniform": [[264, "uniform"]], "tanh_dz": [[264, "tanh-dz"]], "60layerPHC": [[264, "layerphc"]], "100layerE3SMv1": [[264, "layere3smv1"]], "3D vertical coordinates": [[264, "d-vertical-coordinates"]], "z-star": [[264, "z-star"]], "z-level": [[264, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[266, "cosine-bell-and-cosine-bell-cached-init-suite"]], "Baroclinic channel": [[267, "baroclinic-channel"]], "description": [[267, "description"], [267, "id1"], [267, "id8"], [267, "id16"], [267, "id24"], [270, "description"], [271, "description"], [272, "description"], [272, "id2"], [272, "id7"], [273, "description"], [277, "description"], [278, "description"]], "vertical grid": [[267, "vertical-grid"], [267, "id3"], [267, "id10"], [267, "id18"], [267, "id26"], [267, "id33"], [268, "vertical-grid"], [270, "vertical-grid"], [271, "vertical-grid"], [272, "vertical-grid"], [272, "id4"], [272, "id9"], [273, "vertical-grid"]], "initial conditions": [[267, "initial-conditions"], [267, "id4"], [267, "id11"], [267, "id19"], [267, "id27"], [267, "id34"], [268, "initial-conditions"], [270, "initial-conditions"], [271, "initial-conditions"], [272, "initial-conditions"], [272, "id5"], [272, "id10"], [273, "initial-conditions"], [277, "initial-conditions"], [277, "id2"], [277, "id7"], [278, "initial-conditions"]], "forcing": [[267, "forcing"], [267, "id5"], [267, "id12"], [267, "id20"], [267, "id28"], [267, "id35"], [268, "forcing"], [270, "forcing"], [271, "forcing"], [272, "forcing"], [272, "id11"], [273, "forcing"], [277, "forcing"], [277, "id3"], [277, "id8"], [278, "forcing"]], "time step and run duration": [[267, "time-step-and-run-duration"], [267, "id6"], [267, "id13"], [267, "id21"], [267, "id29"], [267, "id36"], [268, "time-step-and-run-duration"], [270, "time-step-and-run-duration"], [271, "time-step-and-run-duration"], [272, "time-step-and-run-duration"], [272, "id12"], [273, "time-step-and-run-duration"], [278, "time-step-and-run-duration"]], "cores": [[267, "cores"], [267, "id15"], [267, "id23"], [267, "id31"], [267, "id38"], [268, "cores"], [270, "cores"], [271, "cores"], [272, "cores"], [272, "id14"], [273, "cores"], [277, "cores"], [277, "id4"], [277, "id9"], [278, "cores"]], "thread": [[267, "thread"]], "cosine_bell and cosine_bell_with_viz": [[268, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[268, "description"]], "inertial gravity wave": [[270, "inertial-gravity-wave"]], "<Category of task>": [[273, "ocean-category-of-task"], [278, "seaice-category-of-task"]], "task_name": [[273, "task-name"], [278, "task-name"]], "Quick Start for Users": [[274, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[274, null]], "Loading polaris conda and spack environments": [[274, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[274, "e3sm-supported-machines"]], "Other machines": [[274, "other-machines"]], "Building supported E3SM components as standalone models": [[274, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[274, "setting-up-tasks"]], "Running a task": [[274, "running-a-task"]], "Running with a job script": [[274, "running-with-a-job-script"]], "Sea ice component": [[275, "sea-ice-component"]], "standard physics test": [[277, "standard-physics-test"]], "timestep and run duration": [[277, "timestep-and-run-duration"], [277, "id11"]], "visualization": [[277, "visualization"]], "exact restart test": [[277, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[18, "polaris.Component"]], "__init__() (polaris.component method)": [[18, "polaris.Component.__init__"]], "add_task() (polaris.component method)": [[19, "polaris.Component.add_task"]], "modelstep (class in polaris)": [[20, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[20, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[24, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[25, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[26, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[27, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[28, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[29, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[30, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[31, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[32, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[33, "polaris.Step"]], "__init__() (polaris.step method)": [[33, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[34, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[35, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[36, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[37, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[38, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[39, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[40, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[41, "polaris.Step.setup"]], "task (class in polaris)": [[42, "polaris.Task"]], "__init__() (polaris.task method)": [[42, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[43, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[44, "polaris.Task.configure"]], "main() (in module polaris.__main__)": [[45, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[46, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[47, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[48, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[48, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[49, "polaris.io.download"]], "module": [[50, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[50, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[51, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[52, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[53, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[54, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[55, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[56, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[57, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[58, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[58, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[60, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[70, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[71, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[75, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[76, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[77, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[78, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[79, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[80, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[81, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[82, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[83, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[84, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[85, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[85, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_proj"]], "load_dependencies() (in module polaris.run)": [[96, "polaris.run.load_dependencies"]], "pickle_step_after_run() (in module polaris.run)": [[97, "polaris.run.pickle_step_after_run"]], "run_single_step() (in module polaris.run.serial)": [[98, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[99, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[100, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[101, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[102, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[103, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[104, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[105, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[106, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[107, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[108, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[109, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[110, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[111, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[112, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[112, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[113, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[114, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[115, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[116, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[117, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[118, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[127, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[127, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[128, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[128, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[129, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[132, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[133, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchanneltestcase (class in polaris.ocean.tasks.baroclinic_channel)": [[134, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.baroclinicchanneltestcase method)": [[134, "polaris.ocean.tasks.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[135, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[136, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[136, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[137, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[137, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[138, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[138, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[140, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[141, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[141, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[142, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[143, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[144, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[144, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[145, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[145, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[146, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[147, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[147, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[148, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[149, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[149, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[150, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[151, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[152, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[152, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[153, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[153, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[154, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[155, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[155, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[156, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.global_convergence)": [[157, "polaris.ocean.tasks.global_convergence.add_cosine_bell_tasks"]], "cosinebell (class in polaris.ocean.tasks.global_convergence.cosine_bell)": [[158, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.cosinebell method)": [[158, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.global_convergence.cosine_bell.cosinebell method)": [[159, "polaris.ocean.tasks.global_convergence.cosine_bell.CosineBell.configure"]], "analysis (class in polaris.ocean.tasks.global_convergence.cosine_bell.analysis)": [[160, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[160, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[161, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.analysis.analysis method)": [[162, "polaris.ocean.tasks.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tasks.global_convergence.cosine_bell.forward)": [[163, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[163, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[164, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.global_convergence.cosine_bell.forward.forward method)": [[165, "polaris.ocean.tasks.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.global_convergence.cosine_bell.init)": [[166, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.init.init method)": [[166, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.init.init method)": [[167, "polaris.ocean.tasks.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tasks.global_convergence.cosine_bell.viz)": [[168, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.viz method)": [[168, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.viz method)": [[169, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.global_convergence.cosine_bell.viz)": [[170, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.vizmap method)": [[170, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.global_convergence.cosine_bell.viz.vizmap method)": [[171, "polaris.ocean.tasks.global_convergence.cosine_bell.viz.VizMap.run"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[172, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[173, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[173, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[174, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tasks.inertial_gravity_wave.convergence)": [[175, "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.convergence.convergence method)": [[175, "polaris.ocean.tasks.inertial_gravity_wave.convergence.Convergence.__init__"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[176, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[176, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[177, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[178, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[179, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[179, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[180, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[181, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[182, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[182, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[184, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[184, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[185, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[186, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[187, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[187, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[188, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tasks.manufactured_solution.convergence)": [[189, "polaris.ocean.tasks.manufactured_solution.convergence.Convergence"]], "__init__() (polaris.ocean.tasks.manufactured_solution.convergence.convergence method)": [[189, "polaris.ocean.tasks.manufactured_solution.convergence.Convergence.__init__"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[190, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[190, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[191, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[192, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[193, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[193, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[194, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[195, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[196, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[196, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[197, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[198, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[198, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[199, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[200, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[201, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[201, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[202, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[202, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[203, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[203, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[204, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[204, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[205, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[206, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[206, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[207, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[208, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[209, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[210, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[211, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[212, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[213, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[214, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[215, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[216, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[217, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[238, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[238, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[239, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[240, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[240, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[241, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[241, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[242, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[243, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[243, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[244, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[244, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[245, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[245, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[246, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})