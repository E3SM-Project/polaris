Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_task", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "cosine_bell", "Tasks", "inertial_gravity_wave", "manufactured_solution", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "cosine bell", "Tasks", "inertial gravity wave", "manufactured solution", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 18, 43, 44, 124, 127, 129, 137, 138, 145, 148, 153, 219, 222, 223, 227, 228, 229, 230, 232, 234, 236, 238, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 272, 273, 274, 278, 280], "step": [0, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 31, 43, 44, 47, 59, 64, 66, 69, 72, 73, 81, 83, 85, 86, 92, 97, 98, 99, 100, 103, 104, 124, 127, 129, 130, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 180, 182, 183, 184, 185, 186, 189, 190, 194, 196, 197, 198, 199, 200, 203, 205, 206, 207, 208, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 242, 243, 244, 246, 247, 251, 253, 254, 256, 262, 264, 279, 280], "templat": [0, 5, 6, 7, 24, 25, 26, 105, 114, 118, 124, 141, 147, 254, 255, 256], "date": [1, 2, 5, 47, 219, 230, 236, 248, 256], "2023": [1, 16, 270, 271], "08": [1, 255, 267], "18": [1, 6, 256, 258], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 17, 124, 255, 256, 261], "asai": [1, 256], "davi": [1, 256], "capabl": [1, 2, 6, 16, 124, 232, 235, 255, 261, 274], "design": [1, 124, 220, 232, 234, 235, 254, 261, 267], "here": [1, 6, 9, 12, 14, 16, 17, 124, 222, 227, 228, 231, 232, 234, 235, 236, 251, 255, 256, 257, 258, 259, 260, 261, 262, 272, 273, 274, 278, 279], "abil": [1, 7], "across": [1, 6, 7, 14, 18, 222, 228, 232, 233, 234, 235, 236, 253, 255, 263, 267, 268], "In": [1, 2, 6, 7, 8, 9, 11, 14, 16, 17, 34, 124, 127, 228, 230, 232, 233, 234, 235, 236, 254, 255, 256, 261, 264, 268, 273, 274, 278, 279, 280], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 21, 26, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 60, 63, 64, 67, 68, 69, 73, 82, 83, 85, 86, 92, 97, 100, 110, 120, 121, 122, 123, 124, 125, 127, 130, 133, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 151, 152, 153, 157, 158, 163, 166, 168, 170, 172, 173, 176, 180, 182, 184, 186, 187, 190, 194, 196, 198, 200, 202, 203, 204, 205, 206, 207, 208, 219, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 247, 248, 252, 253, 254, 255, 256, 258, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 278, 279], "document": [1, 3, 9, 14, 232, 235, 254, 256, 274], "refer": [1, 7, 14, 34, 135, 148, 211, 214, 217, 218, 232, 235, 236, 253, 254, 255, 264, 267, 274], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 30, 42, 97, 103, 104, 144, 152, 228, 229, 230, 232, 233, 234, 235, 236, 238, 255, 256, 261, 267, 268, 272, 273, 274, 277, 278], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 21, 24, 25, 27, 34, 36, 43, 48, 86, 88, 95, 103, 104, 105, 109, 112, 114, 124, 127, 130, 133, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 178, 179, 192, 193, 203, 219, 221, 228, 229, 231, 232, 234, 236, 241, 242, 244, 246, 255, 256, 258, 261, 264, 267, 268, 270, 271, 272, 273, 274], "avail": [1, 4, 5, 7, 11, 14, 18, 21, 31, 34, 37, 38, 41, 48, 55, 81, 82, 83, 124, 130, 139, 180, 194, 203, 222, 223, 232, 234, 235, 236, 255, 257, 258, 259, 260, 262, 267, 274, 279], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 120, 122, 123, 124, 127, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 275, 279, 280], "main": [1, 3, 6, 7, 9, 14, 39, 124, 172, 228, 229, 235, 236, 255, 280], "motiv": 1, "behind": [1, 235], "comput": [1, 7, 13, 14, 71, 124, 127, 130, 131, 135, 140, 162, 165, 177, 181, 191, 195, 214, 215, 216, 222, 223, 225, 226, 227, 232, 236, 258, 259, 261, 262, 267, 270, 271, 274], "expens": [1, 232, 233], "could": [1, 14, 16, 18, 124, 223, 232, 233, 234, 235, 236, 255, 268], "time": [1, 5, 6, 7, 8, 14, 17, 18, 34, 43, 53, 112, 124, 127, 135, 139, 148, 166, 178, 179, 182, 192, 193, 196, 203, 221, 222, 223, 225, 226, 228, 232, 233, 234, 235, 236, 251, 252, 253, 256, 258, 262, 274, 279], "order": [1, 5, 8, 13, 14, 127, 223, 229, 232, 233, 236, 255, 268, 271, 272, 274], "reflect": [1, 5, 236], "fact": [1, 14, 34, 124], "we": [1, 2, 5, 7, 9, 11, 13, 14, 16, 17, 18, 123, 124, 127, 134, 222, 223, 227, 228, 231, 232, 234, 235, 236, 251, 254, 255, 256, 258, 260, 261, 262, 264, 268, 274, 279], "present": [1, 44, 112, 236, 255], "new": [1, 2, 5, 19, 22, 34, 43, 49, 52, 59, 66, 72, 86, 106, 107, 139, 146, 164, 177, 180, 191, 194, 203, 211, 217, 218, 232, 234, 235, 236, 249, 252, 253, 254, 274], "success": [1, 2, 8, 50, 219, 229, 248, 255, 256], "insofar": 1, "guarante": [1, 14, 124, 219, 236, 248], "per": [1, 8, 14, 21, 31, 33, 34, 41, 82, 83, 124, 127, 130, 232, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 273, 278], "slurm": [1, 53, 84, 124, 232, 254, 256, 257, 258, 259, 260, 262, 274], "job": [1, 6, 124, 236, 254, 255, 257, 258, 259, 260, 262], "role": 1, "clear": [1, 2, 235, 255], "should": [1, 2, 5, 6, 7, 9, 12, 14, 17, 22, 27, 34, 35, 36, 42, 43, 45, 50, 54, 67, 103, 104, 111, 112, 120, 121, 122, 123, 124, 125, 127, 133, 144, 152, 205, 207, 219, 228, 229, 230, 232, 233, 234, 236, 248, 249, 252, 253, 255, 256, 267, 268, 272, 273, 274, 278], "invoc": 1, "serial": [1, 40, 232, 234, 254, 255, 274], "A": [1, 6, 7, 8, 11, 13, 14, 16, 18, 19, 22, 24, 25, 27, 34, 35, 36, 37, 38, 43, 44, 48, 49, 55, 59, 60, 63, 66, 67, 68, 72, 78, 81, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 100, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 133, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 158, 161, 164, 167, 169, 171, 175, 180, 183, 185, 189, 194, 197, 199, 203, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 222, 223, 225, 226, 227, 229, 232, 233, 234, 235, 236, 241, 242, 244, 246, 253, 254, 255, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 273, 274, 277, 278], "": [1, 5, 6, 7, 8, 11, 12, 14, 16, 34, 36, 37, 43, 44, 45, 47, 73, 99, 106, 109, 124, 127, 169, 219, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 270, 271, 273, 274, 275, 278], "class": [1, 9, 11, 13, 14, 16, 17, 18, 19, 21, 29, 34, 39, 43, 49, 58, 59, 66, 72, 86, 113, 127, 128, 130, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 158, 161, 164, 167, 169, 171, 172, 173, 175, 177, 180, 183, 185, 187, 189, 191, 194, 197, 199, 202, 203, 204, 205, 207, 219, 222, 223, 225, 226, 227, 229, 230, 232, 234, 239, 241, 242, 244, 245, 246, 248, 251, 255], "attribut": [1, 8, 12, 13, 14, 40, 90, 96, 97, 225, 226, 255], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 17, 18, 36, 42, 43, 50, 99, 100, 111, 124, 127, 144, 152, 158, 205, 207, 222, 223, 227, 228, 230, 232, 233, 234, 235, 236, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 277, 278, 279, 280], "relat": [1, 6, 7, 11, 13, 14, 124, 127, 219, 222, 223, 225, 226, 227, 228, 232, 236, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 272, 273, 274, 275], "inform": [1, 5, 7, 8, 34, 86, 110, 119, 177, 191, 232, 234, 236, 256, 258, 265, 274, 275], "belong": [1, 10, 12, 14, 21, 31, 34, 41, 43, 59, 66, 72, 86, 130, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 158, 161, 164, 167, 169, 171, 173, 175, 180, 183, 185, 187, 189, 194, 197, 199, 202, 203, 204, 205, 207, 228, 229, 232, 234, 235, 241, 242, 244, 245, 246, 255, 279], "locat": [1, 5, 6, 14, 18, 34, 44, 103, 104, 109, 219, 232, 236, 248, 253, 255, 256, 258, 261, 264, 267, 268, 274], "highest": 1, "level": [1, 2, 11, 12, 13, 17, 18, 127, 211, 212, 213, 214, 215, 216, 217, 218, 222, 228, 230, 231, 232, 234, 255, 256, 267, 268, 270, 271, 272, 273, 278], "where": [1, 5, 7, 14, 17, 34, 36, 43, 50, 54, 85, 103, 104, 109, 111, 124, 127, 211, 214, 217, 218, 219, 229, 231, 232, 234, 236, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 272, 273, 274, 278, 279], "all": [1, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 34, 41, 43, 48, 82, 83, 85, 104, 110, 124, 127, 128, 130, 139, 180, 194, 203, 211, 217, 218, 219, 222, 228, 229, 230, 232, 233, 234, 235, 236, 239, 248, 253, 254, 255, 256, 261, 264, 265, 267, 268, 273, 274, 275, 278, 280], "below": [1, 5, 6, 14, 21, 31, 34, 41, 82, 83, 124, 130, 139, 180, 194, 203, 219, 228, 230, 232, 234, 236, 255, 256, 261, 264, 268, 270, 271, 272, 274], "There": [1, 5, 6, 13, 211, 217, 218, 227, 228, 230, 232, 235, 236, 252, 255, 256, 274], "wai": [1, 5, 7, 13, 14, 34, 63, 68, 124, 232, 234, 235, 236, 252, 254, 255, 261, 264, 272], "list": [1, 2, 6, 7, 9, 14, 17, 21, 34, 37, 43, 44, 47, 48, 82, 83, 100, 103, 104, 109, 110, 135, 150, 154, 158, 161, 175, 185, 187, 189, 199, 203, 232, 233, 234, 235, 236, 242, 253, 254, 255, 256, 258, 261, 262, 268, 274, 279, 280], "within": [1, 5, 7, 9, 10, 11, 12, 14, 19, 31, 34, 36, 37, 41, 43, 44, 51, 109, 110, 124, 222, 225, 226, 228, 229, 230, 232, 233, 234, 236, 249, 253, 255, 256, 258, 261, 268, 272, 273, 278], "each": [1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 34, 40, 43, 55, 61, 62, 71, 98, 104, 119, 124, 127, 154, 155, 158, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 242, 243, 251, 253, 255, 256, 261, 264, 267, 268, 270, 271, 273, 274, 278, 279], "also": [1, 2, 5, 6, 7, 9, 13, 14, 18, 29, 40, 49, 110, 111, 124, 127, 169, 211, 217, 218, 219, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 255, 256, 261, 262, 264, 268, 270, 271, 273, 274, 278, 280], "find": [1, 6, 7, 50, 62, 84, 124, 219, 234, 235, 236, 252, 255, 256, 274], "onli": [1, 5, 6, 7, 8, 14, 16, 17, 43, 124, 127, 219, 221, 223, 227, 229, 232, 234, 235, 248, 251, 254, 255, 256, 258, 261, 262, 264, 266, 267, 268, 271, 272, 274, 277], "its": [1, 5, 6, 7, 8, 12, 16, 18, 34, 45, 92, 97, 98, 106, 124, 228, 229, 230, 232, 233, 234, 235, 236, 253, 255, 256, 257, 268, 274, 280], "would": [1, 2, 5, 9, 14, 17, 21, 31, 34, 41, 44, 82, 83, 86, 124, 127, 130, 139, 180, 194, 203, 222, 230, 232, 234, 235, 236, 252, 255, 261, 264, 274], "ident": [1, 2, 5, 17, 137, 145, 153, 222, 232, 233, 235, 241, 255, 267], "self": [1, 9, 11, 12, 14, 16, 17, 18, 45, 74, 127, 229, 232, 234, 235, 255, 256], "contain": [1, 2, 5, 6, 7, 8, 9, 16, 18, 19, 23, 24, 25, 38, 48, 51, 78, 81, 87, 88, 89, 90, 94, 95, 96, 105, 112, 113, 127, 135, 211, 217, 218, 229, 230, 231, 232, 235, 236, 238, 248, 249, 253, 255, 256, 261, 265, 273, 274, 275, 278], "either": [1, 5, 6, 7, 8, 12, 13, 14, 16, 61, 124, 127, 219, 232, 236, 253, 255, 256, 264, 272, 274], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 18, 34, 35, 36, 45, 49, 66, 100, 115, 124, 127, 219, 222, 223, 228, 231, 232, 234, 235, 236, 249, 253, 254, 255, 256, 261, 264, 267, 268, 274], "As": [1, 4, 5, 6, 13, 17, 61, 127, 228, 232, 233, 234, 235, 236, 255, 256, 264, 268, 272, 279], "setup": [1, 6, 7, 9, 11, 14, 17, 26, 31, 34, 35, 41, 43, 124, 141, 147, 166, 182, 196, 222, 225, 226, 227, 234, 235, 236, 253, 254, 255, 256, 268, 274, 280], "suit": [1, 2, 6, 7, 12, 17, 34, 43, 54, 55, 99, 100, 102, 104, 124, 222, 231, 232, 234, 236, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 267], "proce": [1, 236], "iter": [1, 219, 256], "through": [1, 2, 104, 235, 236, 249, 255], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 16, 17, 18, 21, 29, 34, 35, 36, 37, 52, 59, 61, 62, 88, 95, 105, 107, 111, 118, 124, 130, 167, 222, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 252, 253, 254, 256, 258, 261, 264, 270, 274, 279, 280], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 21, 31, 34, 35, 37, 41, 43, 44, 45, 84, 92, 97, 120, 122, 123, 124, 129, 130, 139, 180, 194, 203, 219, 229, 230, 231, 232, 233, 234, 235, 236, 248, 249, 252, 253, 255, 256, 264, 267, 270, 272, 274], "been": [1, 5, 6, 34, 37, 43, 44, 45, 92, 103, 104, 109, 120, 122, 123, 124, 127, 129, 161, 175, 185, 189, 199, 219, 229, 232, 234, 235, 236, 248, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 274], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 16, 17, 35, 36, 42, 44, 45, 49, 129, 136, 144, 152, 160, 174, 188, 201, 211, 217, 218, 228, 229, 234, 236, 240, 249, 254, 257, 258, 259, 260, 262, 274], "initi": [1, 7, 8, 34, 112, 135, 137, 138, 142, 145, 148, 153, 167, 183, 197, 202, 204, 205, 207, 222, 223, 225, 226, 227, 228, 232, 234, 235, 245, 252, 253, 254, 256, 264, 266, 279, 280], "fals": [1, 9, 13, 14, 17, 18, 21, 34, 36, 44, 47, 55, 57, 99, 100, 104, 109, 110, 112, 124, 130, 205, 207, 221, 228, 232, 234, 249, 255, 256, 258, 260, 262, 267], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 42, 60, 67, 124, 127, 144, 152, 228, 229, 232, 234, 235, 253, 254, 255, 268, 280], "skip": [1, 5, 8, 110, 279], "true": [1, 6, 7, 9, 13, 14, 17, 18, 21, 44, 50, 52, 110, 111, 112, 115, 120, 121, 122, 123, 124, 125, 130, 204, 221, 228, 232, 236, 255, 256, 257, 258, 259, 260, 261, 262, 267, 274, 280], "when": [1, 5, 6, 12, 14, 16, 17, 22, 23, 24, 25, 27, 34, 35, 40, 43, 44, 49, 50, 52, 55, 99, 110, 124, 127, 133, 216, 222, 223, 225, 226, 227, 228, 232, 234, 235, 236, 254, 255, 257, 258, 259, 260, 262, 264, 267, 268, 272, 274, 280], "complet": [1, 5, 8, 23, 24, 25, 97, 255, 274], "alreadi": [1, 4, 5, 6, 11, 14, 44, 45, 52, 124, 127, 129, 203, 232, 234, 235, 236, 255, 256, 261, 264, 268, 274], "satisfi": 1, "part": [1, 3, 5, 6, 7, 12, 14, 17, 18, 34, 43, 139, 164, 180, 194, 203, 222, 225, 226, 232, 233, 235, 236, 254, 255, 264], "parallel": [1, 5, 16, 21, 31, 34, 40, 41, 124, 130, 232, 235, 236, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 274, 280], "make": [1, 4, 5, 6, 7, 11, 12, 16, 17, 21, 30, 36, 49, 60, 61, 63, 76, 120, 121, 122, 123, 124, 125, 130, 134, 137, 145, 153, 171, 211, 217, 218, 219, 222, 228, 232, 234, 235, 236, 241, 248, 253, 256, 257, 258, 259, 260, 261, 262, 267, 268, 274, 279], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 34, 35, 36, 37, 40, 42, 43, 45, 47, 50, 52, 58, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 130, 134, 135, 141, 144, 147, 152, 169, 171, 210, 219, 222, 223, 225, 226, 227, 228, 233, 234, 235, 236, 242, 248, 249, 251, 252, 253, 254, 258, 261, 262, 264, 267, 268, 273, 274, 277, 278, 280], "mode": [1, 5, 14, 229, 236, 253, 254, 255, 274], "sure": [1, 5, 6, 7, 12, 14, 16, 17, 124, 137, 145, 153, 219, 222, 232, 235, 236, 241, 248, 253, 255, 256, 261, 262, 267, 268], "dictionari": [1, 8, 9, 14, 18, 19, 22, 24, 25, 27, 34, 35, 38, 43, 49, 78, 81, 85, 104, 105, 113, 114, 115, 133, 223, 232, 234, 235, 255, 268], "them": [1, 7, 8, 14, 16, 17, 21, 33, 124, 130, 223, 229, 230, 232, 234, 235, 236, 253, 255, 260, 261, 266, 274, 280], "constructor": [1, 14, 222, 225, 226, 228, 255], "argument": [1, 5, 7, 9, 12, 14, 17, 18, 32, 34, 82, 83, 93, 111, 222, 229, 232, 234, 235, 236, 255, 273, 278, 279], "replac": [1, 5, 7, 9, 14, 22, 23, 24, 25, 26, 27, 43, 52, 78, 105, 114, 115, 124, 133, 141, 147, 234, 235, 255, 256, 274], "compon": [1, 5, 6, 7, 8, 10, 13, 21, 34, 36, 43, 44, 54, 57, 59, 66, 72, 85, 86, 103, 109, 113, 124, 129, 130, 136, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 158, 160, 161, 164, 167, 169, 171, 173, 174, 175, 180, 183, 185, 187, 188, 189, 194, 197, 199, 201, 202, 203, 204, 205, 207, 228, 230, 231, 232, 233, 234, 238, 239, 240, 241, 242, 244, 245, 246, 249, 253, 254, 255, 256, 261, 263, 266, 279, 280], "subdir": [1, 5, 16, 21, 34, 43, 44, 59, 66, 72, 86, 130, 139, 161, 164, 167, 169, 171, 203, 232, 234, 242, 255], "now": [1, 6, 124, 232, 236, 255, 256, 261], "rel": [1, 2, 5, 9, 16, 17, 36, 37, 44, 47, 49, 103, 104, 109, 110, 219, 229, 232, 234, 235, 236, 242, 248, 253, 255, 267, 274, 280], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 34, 36, 49, 124, 222, 232, 236, 252, 255, 264], "than": [1, 5, 6, 8, 9, 11, 13, 14, 34, 36, 41, 49, 124, 139, 180, 194, 203, 222, 232, 233, 235, 236, 252, 255, 264, 267], "parent": [1, 29, 228, 229, 232, 234], "resid": [1, 5, 36, 161, 230, 232, 234], "insid": [1, 12, 230, 232, 235, 268], "situat": [1, 16, 27, 133, 255, 274], "anoth": [1, 2, 6, 7, 9, 10, 13, 16, 17, 34, 35, 36, 110, 219, 222, 228, 230, 232, 234, 235, 236, 253, 255, 256, 267, 274, 279, 280], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 219, 224, 229, 234, 255, 268, 273, 278, 279], "with_viz": [1, 223, 234, 268], "base": [1, 5, 8, 13, 14, 15, 17, 19, 34, 36, 38, 43, 47, 65, 70, 72, 103, 104, 109, 124, 129, 132, 134, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 227, 229, 231, 232, 234, 235, 236, 248, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 280], "mesh": [1, 5, 7, 10, 16, 21, 34, 76, 88, 95, 112, 130, 131, 132, 134, 138, 140, 142, 158, 161, 162, 164, 165, 167, 169, 171, 175, 177, 181, 183, 185, 189, 191, 195, 197, 199, 202, 204, 205, 211, 217, 218, 221, 222, 223, 225, 226, 227, 228, 230, 232, 234, 235, 236, 244, 245, 253, 254, 256, 264, 266, 274, 279], "init": [1, 5, 6, 7, 14, 17, 18, 31, 41, 137, 138, 145, 148, 153, 219, 221, 229, 232, 234, 235, 236, 248, 256, 267, 268, 270, 271, 274], "forward": [1, 5, 7, 14, 34, 135, 138, 146, 148, 202, 204, 219, 229, 232, 234, 235, 245, 248, 256, 267, 268, 270, 271, 273, 278], "resolut": [1, 13, 14, 16, 59, 62, 66, 67, 71, 87, 91, 94, 127, 129, 137, 138, 139, 142, 145, 146, 148, 150, 153, 158, 161, 162, 164, 175, 180, 183, 185, 187, 189, 194, 197, 199, 222, 223, 225, 226, 227, 228, 229, 230, 232, 234, 256, 267, 268, 270, 271, 272, 273, 278, 280], "singl": [1, 5, 8, 18, 112, 124, 201, 202, 204, 205, 207, 227, 232, 234, 235, 240, 241, 242, 244, 245, 246, 248, 249, 253, 255, 261, 265, 268, 269, 270, 271, 275, 276], "analysi": [1, 6, 18, 127, 222, 234, 235, 253, 254, 256, 268, 270, 271, 280], "add": [1, 2, 5, 6, 7, 9, 13, 14, 17, 20, 22, 23, 24, 25, 26, 35, 36, 37, 44, 45, 65, 70, 75, 105, 106, 107, 114, 115, 118, 119, 124, 129, 136, 141, 147, 160, 174, 188, 201, 228, 229, 232, 234, 235, 236, 240, 253, 255, 256, 262, 268], "remap": [1, 10, 18, 169, 223, 254, 268, 273, 278], "visual": [1, 10, 13, 16, 161, 185, 199, 223, 225, 226, 228, 232, 234, 253, 254, 268, 270, 271, 273, 278], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 17, 18, 19, 27, 36, 109, 124, 220, 222, 223, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 253, 254, 255, 256, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 279, 280], "spheric": [1, 5, 223, 234, 268, 279], "qu": [1, 5, 127, 234, 255, 256, 266, 268, 279], "base_mesh": [1, 5, 13, 59, 66, 129, 232, 234, 255, 268], "60km": [1, 5, 234, 268], "90km": [1, 5], "120km": [1, 5, 234], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 129, 234], "map": [1, 8, 16, 19, 27, 66, 67, 86, 111, 112, 133, 169, 171, 223, 234, 236, 256], "viz": [1, 5, 18, 158, 232, 234], "two": [1, 5, 10, 17, 110, 127, 145, 155, 222, 223, 225, 226, 227, 228, 229, 232, 233, 235, 236, 241, 243, 255, 267, 268, 270, 271, 277], "first": [1, 6, 9, 14, 104, 124, 222, 225, 226, 227, 232, 234, 235, 236, 252, 255, 257, 258, 259, 260, 261, 262, 267, 268, 272, 274], "verbos": [1, 5, 6, 55, 57, 124, 232, 255, 279], "10": [1, 13, 61, 124, 219, 222, 225, 226, 228, 229, 255, 256, 261, 264, 267, 270, 271, 272, 280], "name": [1, 5, 7, 8, 9, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 34, 35, 36, 37, 43, 45, 50, 52, 53, 54, 55, 59, 66, 72, 76, 78, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 118, 124, 127, 129, 130, 133, 135, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 162, 164, 167, 169, 171, 203, 210, 228, 229, 232, 234, 235, 236, 242, 244, 246, 253, 255, 256, 262, 267, 274, 279], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 139, 203, 227, 232, 235, 267, 272, 277], "symlink": [1, 5, 8, 14, 17, 34, 36, 43, 44, 234, 235, 236, 268], "what": [1, 2, 6, 11, 13, 16, 124, 234, 235, 255, 262, 273, 274, 278], "follow": [1, 4, 5, 7, 13, 14, 18, 58, 124, 211, 217, 218, 219, 221, 232, 233, 234, 236, 248, 249, 252, 255, 256, 261, 262, 264, 266, 268, 270, 271, 272, 274, 277], "subdirectori": [1, 5, 7, 8, 13, 19, 21, 34, 36, 43, 44, 55, 59, 66, 72, 86, 103, 130, 139, 161, 164, 167, 169, 171, 175, 180, 183, 185, 189, 194, 197, 199, 203, 205, 207, 228, 230, 232, 234, 235, 255, 273, 274, 278, 280], "bold": [1, 234], "elsewher": [1, 236], "tree": [1, 7, 105, 107, 119, 234, 275], "thu": [1, 2, 7, 14, 255, 268], "similar": [1, 2, 5, 9, 12, 13, 14, 121, 124, 125, 228, 230, 234, 235, 236, 255, 256, 274], "had": [1, 124], "maintain": [1, 219, 274], "local": [1, 5, 6, 8, 11, 17, 34, 36, 43, 219, 230, 232, 234, 236, 248, 252, 255, 256, 261, 262, 264], "debug": [1, 8, 120, 121, 122, 123, 124, 125, 255, 257, 258, 259, 260, 262], "easier": [1, 14, 232, 234, 235, 236, 256, 274, 279], "symbol": [1, 52, 232], "link": [1, 2, 7, 11, 14, 36, 52, 124, 228, 232, 236, 255, 261, 265, 274, 275], "were": [1, 124, 203, 232, 235, 253, 255, 256, 260, 264], "even": [1, 6, 12, 13, 14, 36, 49, 124, 232, 235, 236, 255, 256, 261, 274], "compass": [1, 5, 219, 232, 235, 253, 255], "though": [1, 11, 34, 234, 235, 255], "global": [1, 13, 16, 90, 91, 96, 158, 223, 228, 232, 233, 235, 253, 254, 255, 256, 262, 266, 268, 273, 274, 278, 280], "dynamic_adjust": [1, 14, 256], "allow": [1, 2, 8, 16, 17, 21, 31, 34, 41, 49, 110, 124, 127, 130, 232, 253, 255, 256, 261, 264, 268, 272, 280], "one": [1, 2, 5, 6, 7, 10, 14, 16, 17, 18, 21, 33, 34, 36, 37, 43, 47, 52, 103, 104, 109, 124, 127, 129, 130, 145, 203, 219, 222, 225, 226, 227, 228, 230, 232, 234, 235, 236, 241, 251, 252, 253, 254, 256, 261, 262, 264, 267, 268, 271, 273, 274, 277, 278, 279, 280], "input": [1, 5, 8, 10, 11, 16, 29, 34, 35, 36, 37, 42, 76, 144, 152, 222, 223, 225, 226, 227, 255, 272], "port": [1, 255, 262], "instead": [1, 5, 6, 12, 14, 21, 100, 120, 124, 232, 235, 236, 253, 255, 257, 268, 274, 279], "seri": [1, 14, 127, 150, 156, 223, 225, 251, 255, 266], "indic": [1, 7, 8, 14, 16, 17, 34, 35, 97, 104, 112, 124, 214, 230, 232, 252, 255, 256, 264, 272], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 34, 35, 221, 232, 234, 235, 236, 255, 258, 260, 262, 274], "ran": [1, 98], "ico": [1, 5, 127, 234, 255, 266, 268, 279], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 21, 103, 104, 109, 124, 130, 219, 229, 232, 236, 248, 255, 256, 257, 258, 259, 260, 261, 262, 274], "runtim": [1, 8, 14, 26, 40, 141, 147, 166, 182, 196, 232, 255], "0": [1, 2, 5, 6, 7, 13, 14, 16, 17, 18, 61, 87, 91, 94, 110, 112, 120, 121, 122, 123, 124, 125, 127, 211, 216, 217, 218, 221, 223, 228, 232, 235, 249, 252, 255, 256, 258, 261, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 278], "01": [1, 14, 249, 255, 272, 277], "00": [1, 14, 17, 234, 249, 255, 262, 274], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 274], "02": [1, 258], "59": 1, "icos_map_60km": 1, "20": [1, 148, 222, 233, 255, 267, 272], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 49, 124, 222, 235, 236, 268, 272], "mechan": [1, 232], "prevent": [1, 232], "expect": [1, 2, 12, 16, 124, 229, 232, 236, 255, 268], "affect": [1, 6, 232, 236, 255], "howev": [1, 13, 232, 233, 234, 236, 255], "perform": [1, 2, 5, 8, 14, 16, 17, 34, 39, 40, 42, 59, 110, 124, 138, 139, 144, 148, 152, 164, 172, 180, 194, 202, 203, 204, 219, 222, 223, 225, 226, 227, 232, 233, 234, 245, 253, 254, 255, 256, 261, 267, 279], "successfulli": [1, 255], "after": [1, 5, 6, 7, 16, 17, 18, 34, 36, 37, 73, 92, 97, 124, 212, 213, 219, 229, 232, 234, 236, 248, 255, 256, 258, 262, 274, 277], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 16, 27, 34, 35, 98, 103, 104, 109, 123, 124, 127, 133, 161, 175, 185, 189, 199, 219, 222, 225, 226, 228, 230, 232, 233, 234, 235, 236, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 274, 279, 280], "remov": [1, 5, 14, 100, 222, 225, 226, 236, 255], "longer": [1, 145, 222, 233, 241, 255, 267, 268], "about": [1, 5, 6, 7, 8, 12, 14, 34, 86, 113, 127, 228, 232, 234, 235, 236, 255, 256, 258], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 11, 12, 13, 14, 16, 17, 26, 44, 49, 67, 124, 127, 141, 147, 219, 223, 229, 232, 234, 235, 236, 248, 249, 252, 254, 255, 256, 257, 261, 262, 264, 267, 268, 274, 279], "develop": [1, 5, 6, 7, 8, 12, 13, 18, 124, 127, 219, 221, 229, 232, 233, 234, 235, 249, 252, 256, 261, 265, 274], "enforc": [1, 221, 236], "framework": [1, 5, 7, 9, 12, 13, 14, 99, 219, 228, 229, 232, 234, 248, 253, 254, 255, 265, 272, 273, 275, 278, 280], "propos": [1, 2], "close": [1, 6, 62, 124, 254, 268], "root": [1, 36, 124, 162, 219, 223, 225, 226, 229, 232, 235, 236, 248, 253, 256, 257, 258, 259, 260, 261, 262, 264, 270, 271, 274], "live": [1, 44, 274], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 21, 33, 36, 60, 67, 68, 71, 74, 86, 92, 110, 127, 130, 145, 154, 177, 191, 211, 217, 218, 223, 229, 230, 232, 234, 235, 241, 242, 261, 264, 267, 270, 271], "think": [1, 5, 255], "condit": [1, 7, 34, 138, 142, 167, 183, 197, 202, 204, 205, 207, 222, 223, 225, 226, 227, 228, 232, 233, 234, 235, 245, 251, 253, 254, 256, 266, 279, 280], "shown": [1, 14, 124, 230, 272], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 31, 34, 35, 36, 37, 41, 43, 63, 66, 68, 87, 91, 92, 94, 103, 104, 109, 120, 121, 122, 123, 124, 125, 127, 219, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 271, 274, 279, 280], "simpli": [1, 14, 17, 49, 124, 138, 229, 232, 236, 255, 264, 274, 279], "prefer": [1, 2, 124, 232, 233, 255, 256], "convent": [1, 232, 236, 255], "futur": [1, 13, 40, 232, 235, 253, 254, 255, 256, 272, 274, 280], "current": [1, 2, 5, 6, 8, 11, 21, 31, 34, 41, 110, 124, 130, 219, 227, 229, 232, 235, 236, 238, 248, 249, 253, 254, 255, 256, 261, 264, 267, 271, 272, 274, 279, 280], "independ": [1, 2, 5, 233, 253], "yyyi": 2, "mm": 2, "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 34, 35, 36, 37, 40, 42, 43, 44, 47, 49, 50, 52, 54, 55, 58, 59, 60, 61, 62, 63, 66, 67, 71, 72, 76, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 118, 119, 124, 127, 128, 129, 130, 131, 137, 138, 139, 140, 142, 144, 145, 146, 148, 150, 152, 153, 154, 156, 158, 161, 162, 164, 165, 167, 169, 171, 173, 175, 180, 181, 183, 185, 187, 189, 194, 195, 197, 199, 202, 203, 204, 205, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 242, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280], "purpos": [2, 228, 235, 255, 280], "section": [2, 3, 5, 6, 7, 9, 12, 14, 16, 21, 27, 67, 111, 115, 124, 127, 130, 133, 209, 211, 217, 218, 219, 227, 228, 229, 232, 233, 235, 236, 248, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 268, 272, 273, 274, 278], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 21, 26, 31, 34, 35, 36, 37, 40, 41, 43, 44, 47, 50, 52, 66, 67, 72, 82, 83, 86, 90, 96, 97, 99, 100, 105, 107, 110, 112, 114, 119, 120, 122, 123, 124, 127, 129, 130, 137, 138, 139, 141, 142, 145, 146, 147, 148, 150, 153, 154, 156, 166, 180, 182, 194, 196, 203, 211, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 242, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 277, 278, 279, 280], "summar": 2, "process": [2, 6, 8, 14, 29, 82, 83, 119, 232, 235, 236, 248, 253, 254, 255], "It": [2, 5, 6, 14, 16, 34, 40, 111, 225, 226, 228, 232, 233, 234, 235, 236, 253, 255, 256, 261, 270, 271], "code": [2, 5, 7, 9, 12, 14, 34, 127, 219, 228, 229, 232, 233, 234, 238, 248, 253, 254, 256, 263, 267, 272, 274], "do": [2, 5, 9, 11, 14, 16, 17, 114, 124, 228, 232, 234, 236, 252, 253, 254, 255, 261, 268, 274], "doe": [2, 6, 9, 12, 14, 232, 238, 254, 255, 261], "primari": [2, 5, 9, 255, 279], "challeng": 2, "respect": [2, 8, 9, 14, 18, 127, 232, 235, 268, 273, 278], "softwar": [2, 76, 262, 274], "appropri": [2, 5, 6, 14, 22, 71, 124, 219, 222, 225, 226, 227, 229, 230, 232, 236, 248, 254, 255, 256, 257, 258, 259, 260, 261, 262, 273, 274, 278], "final": [2, 5, 6, 7, 8, 124, 222, 223, 225, 226, 227, 232, 234, 251, 255, 268], "statement": [2, 12, 232, 253], "gener": [2, 3, 5, 7, 8, 12, 14, 18, 22, 23, 24, 25, 29, 42, 66, 110, 127, 144, 152, 209, 219, 221, 222, 225, 226, 227, 229, 232, 236, 248, 255, 256, 261, 268, 270, 271, 274], "regard": 2, "last": [2, 233, 236, 267, 274], "modifi": [2, 8, 13, 14, 21, 33, 45, 105, 107, 130, 149, 222, 225, 226, 232, 234, 236, 254, 255, 256, 267, 274], "your": [2, 4, 5, 6, 11, 124, 219, 235, 236, 248, 252, 255, 256, 257, 258, 261, 262, 268, 274], "appear": [2, 124, 232, 255], "under": [2, 16, 34, 35, 124, 127, 221, 232, 233, 236, 254, 264, 280], "head": [2, 221, 258], "correspond": [2, 6, 7, 110, 124, 127, 219, 232, 236, 248, 267], "discuss": [2, 6, 127, 232, 235, 255, 267, 268], "technic": [2, 7], "issu": [2, 6, 232, 233, 236, 268, 270, 271], "focu": [2, 255], "model": [2, 5, 10, 21, 22, 26, 27, 29, 34, 36, 103, 104, 109, 113, 118, 120, 121, 122, 123, 124, 125, 137, 139, 141, 145, 146, 147, 148, 153, 166, 182, 196, 203, 219, 222, 223, 225, 226, 227, 229, 232, 233, 235, 236, 241, 248, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 267, 270, 271, 273, 278], "To": [2, 5, 6, 12, 16, 17, 110, 124, 127, 219, 232, 235, 236, 248, 249, 255, 257, 258, 259, 260, 261, 262, 264, 268, 274], "extent": [2, 13, 16, 255, 267], "possibl": [2, 8, 11, 62, 127, 221, 223, 232, 233, 234, 235, 255, 264], "other": [2, 5, 6, 7, 8, 9, 10, 13, 16, 18, 34, 35, 37, 49, 97, 120, 155, 223, 227, 228, 229, 230, 234, 235, 236, 243, 252, 253, 254, 256, 257, 267, 268, 280], "clean": [2, 4, 5, 6, 104, 109, 232, 234, 236], "plan": [2, 13, 219, 225, 226, 232, 248, 253, 270, 271, 280], "For": [2, 3, 5, 6, 7, 12, 14, 16, 18, 104, 120, 124, 221, 222, 225, 226, 227, 232, 235, 236, 255, 256, 257, 265, 268, 270, 271, 274, 275, 280], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 120, 121, 122, 123, 124, 125, 219, 229, 232, 234, 235, 236, 248, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 268, 274, 279, 280], "provid": [2, 3, 5, 8, 9, 14, 16, 17, 18, 21, 34, 36, 37, 43, 86, 90, 96, 110, 114, 124, 127, 130, 139, 203, 219, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 248, 251, 252, 253, 254, 255, 256, 261, 265, 268, 273, 274], "intend": [2, 6, 8, 9, 233, 256, 271, 280], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 55, 110, 221, 223, 230, 232, 235, 236, 252, 255, 268, 274], "pde": 2, "solver": [2, 234, 236, 254, 274], "well": [2, 6, 9, 12, 13, 124, 127, 214, 222, 223, 225, 226, 227, 232, 236, 253, 255, 256, 268, 274, 280], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 21, 23, 24, 27, 34, 35, 36, 43, 45, 47, 50, 52, 76, 78, 83, 87, 88, 89, 90, 91, 94, 95, 96, 98, 100, 101, 104, 105, 106, 107, 110, 112, 114, 115, 118, 119, 124, 130, 133, 139, 161, 166, 169, 175, 182, 185, 189, 196, 199, 215, 219, 221, 222, 223, 225, 226, 227, 228, 229, 234, 235, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 266, 267, 268, 270, 271, 273, 274, 277, 278, 279, 280], "low": [2, 112], "variabl": [2, 5, 13, 18, 19, 21, 34, 37, 43, 59, 66, 72, 76, 86, 87, 91, 94, 110, 112, 113, 114, 119, 124, 127, 130, 139, 142, 148, 150, 154, 158, 161, 164, 169, 171, 175, 177, 180, 183, 185, 187, 189, 191, 194, 197, 199, 203, 211, 217, 218, 221, 227, 232, 235, 236, 242, 243, 248, 252, 255, 257, 258, 259, 260, 261, 262, 265, 267, 273, 274, 275, 278], "declar": [2, 7], "interfac": [2, 10, 209, 210, 211, 217, 218, 235, 236, 254, 255, 264], "sequenc": [2, 5, 14, 223, 231, 232, 235, 253, 255, 274, 279, 280], "If": [2, 5, 6, 7, 8, 9, 12, 14, 17, 18, 21, 31, 34, 36, 41, 43, 44, 45, 52, 82, 83, 84, 86, 97, 110, 112, 120, 121, 122, 123, 124, 125, 130, 139, 180, 194, 203, 222, 232, 234, 235, 236, 249, 252, 253, 255, 256, 261, 262, 264, 268, 273, 274, 278], "want": [2, 5, 6, 11, 14, 16, 17, 45, 124, 127, 232, 234, 236, 252, 255, 256, 261, 262, 272, 274, 280], "math": 2, "syntax": [2, 255], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 236, 253, 255, 274], "2": [2, 6, 13, 14, 17, 35, 124, 153, 221, 222, 230, 233, 236, 242, 249, 255, 256, 258, 261, 264, 267, 268, 270, 271, 274], "2ab": 2, "imag": [2, 7, 18, 111, 112, 228, 255, 273, 278], "keep": [2, 5, 6, 9, 14, 21, 49, 223, 228, 229, 232, 234, 236, 255, 273, 278], "mind": [2, 5, 255], "quit": [2, 230, 232, 234, 255], "small": [2, 9, 40, 124, 228, 232, 255, 257, 258, 263, 264, 272, 274], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 30, 31, 34, 36, 40, 41, 43, 49, 71, 82, 83, 86, 99, 100, 104, 115, 124, 127, 130, 139, 180, 194, 203, 211, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 277, 278, 279, 280], "png": [2, 13, 18, 223, 232, 255], "okai": [2, 6, 232, 255], "size": [2, 13, 61, 62, 71, 127, 132, 134, 135, 228, 255, 256, 267, 268, 270, 271, 272, 273, 278], "repo": [2, 5, 6, 124, 219, 248, 254, 255, 275], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 124, 228, 229, 230, 232, 233, 234, 235, 236, 252, 253, 255, 256, 258, 264, 273, 274, 279, 280], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 232, 234, 236, 255], "sourc": [2, 6, 7, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 232, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 258, 259, 260, 261, 262, 274], "project": [2, 5, 6, 7, 58, 90, 96, 219, 235, 236, 248, 249, 255, 256, 257, 258, 261, 274, 275], "manag": [2, 252, 261], "item": [2, 255], "git": [2, 6, 15, 85, 219, 236, 248, 255, 256, 274], "branch": [2, 5, 124, 219, 229, 232, 236, 248, 254, 255, 274], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 232, 236, 261], "block": [2, 234], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 17, 87, 91, 94, 124, 127, 228, 230, 232, 234, 235, 236, 252, 254, 255, 256, 261, 267, 268, 274, 280], "def": [2, 7, 9, 11, 12, 14, 16, 17, 18, 228, 229, 232, 234, 235, 255], "example_funct": 2, "foo": [2, 235], "return": [2, 7, 27, 48, 50, 53, 60, 61, 62, 67, 71, 78, 81, 82, 92, 101, 102, 104, 105, 107, 110, 114, 118, 119, 127, 129, 131, 133, 135, 140, 162, 165, 178, 179, 181, 192, 193, 195, 209, 212, 213, 214, 215, 216, 234, 235, 255, 268], "how": [2, 5, 6, 12, 14, 66, 127, 231, 232, 234, 235, 236, 256, 261, 262], "show": [2, 7, 13, 232, 255, 261, 262, 267, 268, 273, 278], "met": 2, "regress": [2, 222, 223, 233, 253, 254, 255, 267, 268, 274, 279], "configur": [2, 5, 6, 9, 11, 14, 16, 31, 34, 41, 43, 50, 54, 81, 82, 83, 84, 85, 103, 104, 109, 124, 127, 209, 211, 212, 213, 217, 218, 232, 235, 254, 255, 256, 258, 261, 262, 264, 270, 271, 273, 274, 278, 280], "work": [2, 5, 6, 8, 11, 12, 14, 15, 16, 34, 36, 37, 39, 42, 43, 44, 47, 54, 85, 99, 103, 104, 109, 123, 124, 144, 152, 169, 172, 230, 231, 232, 233, 234, 235, 236, 252, 253, 255, 256, 261, 268, 272, 274, 280], "properli": [2, 120, 122, 123, 255, 256, 274], "addit": [2, 7, 9, 17, 34, 227, 228, 229, 230, 232, 234, 235, 236, 255], "modif": [2, 7, 232, 249], "nightli": [2, 236, 274, 279], "might": [2, 6, 11, 14, 16, 18, 124, 228, 232, 236, 255, 256, 261, 274], "made": [2, 5, 16, 34, 37, 43, 110, 232, 234, 235, 249, 251, 253, 255, 280], "continu": [2, 6, 232, 255], "page": [3, 7, 124, 257], "auto": 3, "summari": [3, 258], "more": [3, 5, 6, 9, 11, 12, 13, 14, 16, 34, 43, 47, 67, 103, 104, 124, 127, 221, 222, 223, 228, 230, 232, 233, 235, 236, 253, 261, 265, 267, 268, 273, 274, 275, 278, 280], "relev": [3, 7, 9, 127, 225, 226, 255, 257, 258, 259, 260, 261, 262, 273, 274, 278], "seaic": [3, 10, 19, 36, 229, 232, 251, 253, 254, 274, 275, 278, 280], "long": [4, 21, 31, 34, 41, 82, 83, 130, 139, 180, 194, 203, 232, 255, 267, 274], "procedur": [4, 124, 236, 255, 262], "conda": [4, 5, 15, 85, 120, 122, 123, 124, 219, 229, 235, 248, 254, 255, 256, 257, 258, 259, 260, 262], "environ": [4, 5, 120, 122, 123, 219, 229, 235, 248, 254, 255, 256, 257, 258, 259, 260, 261, 262], "spack": [4, 5, 120, 122, 123, 252, 254, 255, 257, 258, 259, 260, 261, 262], "compil": [4, 5, 6, 14, 120, 121, 122, 123, 124, 125, 252, 254, 255, 257, 258, 259, 260, 261, 262, 274], "system": [4, 5, 6, 21, 31, 34, 41, 82, 83, 84, 120, 122, 123, 124, 130, 139, 180, 194, 203, 232, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 274], "modul": [4, 5, 9, 10, 12, 14, 15, 23, 24, 25, 58, 78, 105, 120, 122, 123, 124, 127, 228, 229, 230, 232, 234, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 274], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 22, 23, 24, 25, 26, 34, 36, 42, 67, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 101, 103, 104, 105, 107, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 141, 144, 147, 152, 159, 166, 182, 196, 203, 211, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 231, 232, 234, 235, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 270, 271, 272, 273, 278, 279], "up": [4, 5, 6, 7, 8, 10, 11, 14, 16, 22, 23, 24, 25, 34, 42, 43, 73, 85, 97, 98, 101, 103, 104, 109, 110, 120, 121, 122, 123, 124, 125, 127, 144, 152, 219, 222, 223, 225, 226, 227, 231, 232, 234, 235, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 268, 273, 278, 279, 280], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 15, 23, 24, 25, 36, 45, 51, 78, 85, 105, 109, 114, 124, 228, 229, 230, 231, 232, 234, 236, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 274], "Then": [4, 6, 7, 11, 14, 120, 121, 122, 123, 124, 125, 219, 222, 225, 226, 227, 229, 232, 234, 236, 248, 255, 261, 267, 274], "run": [4, 5, 6, 7, 10, 12, 16, 17, 18, 21, 26, 31, 34, 35, 37, 40, 41, 43, 44, 47, 58, 81, 82, 83, 92, 103, 104, 109, 123, 124, 130, 138, 139, 141, 145, 147, 150, 154, 156, 161, 164, 166, 175, 180, 182, 185, 189, 194, 196, 199, 202, 203, 204, 219, 222, 223, 225, 226, 227, 230, 231, 233, 234, 235, 241, 242, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 279, 280], "script": [4, 5, 6, 12, 18, 46, 54, 121, 124, 125, 235, 253, 254, 255, 258, 261], "doc": [4, 7, 255, 262], "cd": [4, 6, 219, 236, 248, 255, 258, 274], "html": [4, 265], "view": [4, 225, 226, 236, 270, 271], "open": [4, 6, 236, 255], "_build": 4, "index": [4, 17, 112, 211, 212, 213, 214, 215, 216, 217, 218, 228, 255], "act": [5, 235, 264], "essenti": [5, 14], "4": [5, 7, 13, 14, 124, 137, 138, 222, 225, 226, 227, 229, 232, 234, 255, 256, 261, 267, 268, 270, 271, 272, 274], "These": [5, 6, 8, 14, 19, 34, 124, 127, 219, 221, 229, 232, 234, 235, 236, 248, 249, 254, 255, 256, 261, 267, 271, 274, 279, 280], "user": [5, 6, 7, 8, 9, 11, 14, 16, 34, 43, 44, 49, 54, 85, 124, 127, 222, 223, 225, 226, 227, 232, 233, 234, 252, 253, 255, 258, 261, 262, 265, 267, 268, 275], "describ": [5, 7, 14, 16, 85, 105, 107, 119, 127, 222, 223, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 268, 274], "instal": [5, 6, 124, 236, 255, 261, 262, 274], "abov": [5, 7, 14, 17, 124, 228, 230, 232, 233, 234, 235, 236, 255, 256, 268, 270, 271, 272, 274, 279], "off": [5, 6, 236, 252], "http": [5, 7, 11, 14, 52, 232, 235, 252, 254, 255, 256, 262, 265, 274, 275], "github": [5, 6, 7, 235, 236, 254, 255, 256, 265, 274, 275], "com": [5, 6, 7, 14, 52, 235, 236, 254, 255, 256, 274, 275], "e3sm": [5, 7, 10, 11, 34, 113, 124, 219, 229, 232, 233, 235, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 275], "creat": [5, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 34, 36, 40, 43, 52, 59, 60, 66, 67, 72, 86, 93, 103, 104, 109, 113, 124, 127, 129, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 158, 161, 164, 167, 169, 171, 173, 175, 177, 180, 183, 185, 187, 189, 191, 194, 197, 199, 202, 203, 204, 205, 207, 211, 217, 218, 223, 227, 228, 232, 233, 234, 235, 241, 242, 244, 245, 246, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 268, 274, 279], "see": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 120, 122, 123, 124, 222, 223, 226, 232, 234, 236, 252, 255, 256, 261, 265, 266, 267, 272, 273, 274, 275, 277, 278, 279, 280], "mean": [5, 162, 223, 225, 226, 236, 255, 264, 267, 270, 271, 279], "chang": [5, 6, 8, 16, 66, 97, 98, 219, 229, 232, 233, 234, 235, 236, 248, 253, 255, 256, 258, 262, 264, 267, 274, 279], "call": [5, 6, 8, 10, 11, 12, 13, 14, 16, 17, 18, 21, 29, 34, 40, 43, 44, 45, 58, 92, 99, 124, 127, 222, 225, 226, 227, 229, 232, 233, 234, 235, 236, 252, 253, 254, 255, 256, 261, 262, 274], "tool": [5, 6, 9, 12, 14, 16, 219, 229, 232, 236, 248, 254, 255, 256], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 26, 27, 31, 34, 35, 36, 40, 41, 43, 44, 47, 50, 54, 67, 76, 79, 82, 83, 86, 92, 99, 110, 111, 112, 113, 114, 119, 120, 124, 127, 130, 131, 132, 133, 134, 139, 140, 141, 147, 154, 158, 161, 165, 169, 180, 181, 187, 188, 194, 195, 203, 209, 211, 212, 213, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 242, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 268, 270, 271, 272, 273, 274, 277, 279, 280], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 31, 33, 34, 37, 38, 40, 41, 42, 48, 55, 58, 64, 69, 81, 82, 83, 85, 86, 99, 100, 103, 104, 109, 124, 127, 130, 132, 134, 219, 221, 222, 223, 225, 226, 227, 229, 230, 232, 233, 236, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 275, 279], "support": [5, 6, 8, 13, 16, 34, 127, 211, 217, 218, 221, 232, 235, 248, 253, 254, 255, 256, 258, 262, 264, 267, 272, 280], "machin": [5, 8, 34, 36, 43, 53, 54, 85, 103, 104, 109, 219, 232, 234, 235, 248, 254, 255, 256, 257, 258, 259, 260, 262], "option": [5, 7, 9, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 41, 43, 44, 45, 47, 49, 50, 52, 53, 54, 55, 59, 65, 66, 67, 70, 72, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 130, 133, 139, 141, 147, 149, 159, 166, 177, 180, 182, 191, 194, 196, 203, 205, 207, 209, 211, 212, 213, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 244, 248, 249, 252, 254, 256, 264, 266, 274, 280], "help": [5, 6, 13, 124, 228, 229, 230, 232, 236, 254, 255, 261, 265, 275], "usag": [5, 18, 256, 258, 262], "h": [5, 14, 255], "t": [5, 6, 7, 9, 11, 12, 14, 34, 35, 119, 124, 127, 178, 179, 192, 193, 203, 223, 232, 234, 235, 236, 252, 255, 256, 258, 260, 261, 266, 267, 270, 271, 274, 279, 280], "n": [5, 6, 60, 67, 68, 74, 232, 255, 258, 261, 262, 267, 268, 270, 271, 273, 274, 278], "number": [5, 6, 8, 13, 14, 21, 28, 31, 33, 34, 38, 40, 41, 53, 54, 55, 59, 60, 61, 62, 63, 71, 81, 82, 83, 86, 104, 124, 127, 130, 131, 132, 134, 139, 140, 154, 162, 165, 177, 180, 181, 191, 194, 195, 203, 219, 222, 225, 226, 228, 232, 233, 234, 235, 242, 253, 255, 256, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 278], "v": [5, 236, 255, 270, 271, 279], "By": [5, 14, 17, 35, 36, 127, 219, 229, 232, 234, 248, 255, 256, 267, 272], "default": [5, 7, 9, 14, 17, 18, 21, 34, 35, 36, 43, 47, 54, 67, 72, 77, 85, 86, 87, 91, 94, 100, 103, 104, 106, 109, 112, 120, 122, 123, 124, 127, 139, 219, 223, 225, 226, 227, 228, 229, 232, 234, 236, 248, 249, 254, 256, 257, 258, 259, 260, 261, 262, 264, 268, 272, 273, 274, 278, 280], "planar": [5, 112, 127, 221, 229, 232, 255, 270, 271, 272, 273, 278, 279, 280], "baroclinic_channel": [5, 7, 9, 14, 17, 219, 224, 228, 229, 232, 235, 255, 267, 274, 279, 280], "10km": [5, 17, 222, 255, 267, 274, 279, 280], "1": [5, 7, 13, 14, 16, 17, 18, 34, 61, 120, 121, 122, 123, 124, 125, 127, 137, 139, 153, 180, 194, 202, 203, 204, 211, 217, 218, 222, 223, 225, 226, 227, 229, 230, 232, 234, 236, 249, 252, 255, 256, 258, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274], "decomp": [5, 9, 229, 255, 274, 279], "displai": [5, 8, 262], "path": [5, 6, 9, 11, 14, 17, 34, 36, 37, 43, 44, 47, 49, 50, 52, 55, 58, 85, 103, 104, 109, 110, 112, 124, 219, 229, 232, 234, 235, 236, 242, 248, 253, 255, 256, 257, 258, 259, 260, 261, 262, 274, 280], "directori": [5, 6, 8, 11, 12, 14, 15, 18, 21, 34, 36, 37, 42, 43, 44, 47, 52, 54, 85, 86, 99, 103, 104, 109, 110, 124, 130, 137, 138, 139, 142, 144, 145, 146, 148, 150, 152, 153, 154, 156, 169, 203, 219, 222, 229, 231, 232, 233, 234, 235, 236, 242, 244, 246, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 268, 274, 280], "messag": [5, 8, 124, 232, 252, 262], "task_expr": [5, 55], "flag": [5, 6, 124, 232, 235, 252, 253, 255, 256, 265, 267, 274, 275], "suppli": [5, 6, 7, 17, 119, 124, 232, 236, 255], "substr": [5, 124], "regular": [5, 18, 55, 60, 67, 158, 161, 255, 257, 260, 261, 262, 274], "express": [5, 55], "subset": 5, "search": [5, 55, 258], "given": [5, 7, 8, 13, 14, 16, 17, 19, 21, 50, 61, 71, 78, 82, 83, 100, 105, 107, 110, 114, 127, 129, 130, 148, 162, 214, 222, 223, 227, 232, 234, 252, 254, 255, 256, 267, 268, 272, 273, 274, 278, 279], "pass": [5, 8, 12, 13, 14, 17, 71, 110, 111, 228, 229, 232, 234, 235, 236, 253, 274], "similarli": [5, 8, 219, 232, 234, 236, 261, 274], "result": [5, 13, 17, 50, 62, 71, 124, 127, 137, 145, 150, 153, 156, 207, 222, 223, 232, 233, 235, 236, 241, 246, 253, 255, 256, 267, 268, 273, 278, 279], "descript": [5, 7, 255, 256, 265, 275], "short": [5, 138, 202, 204, 232, 233, 234, 235, 245, 255, 267], "core": [5, 7, 8, 14, 21, 31, 33, 34, 36, 38, 40, 41, 43, 54, 81, 82, 83, 109, 124, 127, 128, 130, 137, 138, 202, 204, 222, 227, 228, 229, 232, 233, 234, 235, 249, 253, 255, 256, 257, 258, 259, 260, 261, 262, 274, 279], "underli": 5, "must": [5, 7, 11, 14, 18, 21, 24, 25, 34, 37, 39, 109, 111, 112, 124, 127, 130, 172, 221, 232, 234, 236, 255, 264, 280], "built": [5, 14, 103, 104, 109, 124, 219, 229, 236, 248, 254, 256, 261, 274], "standalon": [5, 14, 123, 124, 229, 236, 253, 254, 261, 275], "mpa": [5, 9, 11, 12, 13, 14, 16, 17, 18, 21, 27, 34, 36, 58, 76, 88, 95, 105, 107, 109, 118, 119, 120, 121, 122, 123, 124, 125, 128, 130, 133, 158, 169, 177, 191, 210, 219, 220, 222, 223, 225, 226, 227, 229, 232, 235, 236, 239, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 270, 272, 273, 274, 275, 278, 279, 280], "befor": [5, 6, 8, 14, 16, 40, 104, 109, 124, 232, 234, 235, 236, 252, 255, 258, 262, 264, 268, 274], "num": 5, "f": [5, 9, 11, 17, 229, 232, 234, 235, 236, 255, 256, 262, 267, 270, 274], "m": [5, 6, 14, 60, 67, 68, 74, 222, 227, 228, 236, 255, 257, 258, 259, 260, 262, 264, 267, 268, 272, 274], "mach": [5, 34, 124, 254, 257, 258, 259, 260, 261, 262, 274], "w": [5, 6, 236, 253, 255, 274], "p": [5, 6, 236, 255, 256, 274], "suite_nam": [5, 8, 100, 102, 104, 109, 274], "copy_execut": [5, 103, 104, 109, 274], "specifi": [5, 6, 14, 16, 17, 18, 36, 124, 221, 232, 236, 251, 255, 256, 262, 267, 268, 273, 274, 278], "altern": [5, 13, 232, 249, 274], "task_numb": 5, "multipl": [5, 14, 124, 220, 233, 235, 236, 255, 261, 267, 274], "test": [5, 7, 8, 9, 18, 43, 44, 47, 54, 81, 82, 83, 102, 110, 124, 128, 136, 138, 139, 145, 146, 148, 149, 150, 151, 153, 158, 159, 160, 161, 163, 164, 167, 169, 170, 173, 174, 175, 176, 177, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 248, 251, 253, 254, 260, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 275, 278, 279], "separ": [5, 7, 9, 14, 16, 17, 232, 233, 253, 255, 268, 274], "space": [5, 6, 7, 9, 13, 124, 225, 226, 232, 236, 255, 258, 261, 274], "requir": [5, 6, 8, 14, 21, 31, 34, 35, 41, 86, 130, 139, 180, 194, 203, 219, 228, 229, 232, 233, 234, 235, 236, 248, 249, 252, 254, 255, 256, 261, 264, 265, 273, 274, 275, 278, 280], "few": [5, 13, 14, 21, 31, 34, 41, 82, 83, 124, 130, 222, 223, 225, 226, 227, 232, 235, 255, 256, 261], "basic": [5, 7, 256, 258, 261, 274], "piec": [5, 228, 229, 255], "abl": [5, 120, 121, 122, 123, 125, 127, 232, 233, 236, 255, 261, 274], "place": [5, 6, 14, 111, 124, 228, 232, 234, 249, 255, 261], "download": [5, 6, 8, 10, 34, 36, 42, 124, 144, 152, 234, 235, 236, 256, 274, 279], "some": [5, 6, 8, 9, 10, 11, 13, 14, 43, 124, 221, 228, 230, 232, 234, 235, 236, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 274, 275, 279, 280], "data": [5, 10, 13, 16, 17, 18, 22, 34, 35, 36, 92, 105, 107, 108, 111, 112, 113, 119, 124, 169, 211, 217, 218, 232, 236, 254, 256, 257, 258, 259, 260, 261, 274, 279, 280], "r": [5, 262, 268], "tell": [5, 6, 124, 236], "re": [5, 6, 235, 236, 253, 255, 256, 261, 262, 268], "leav": [5, 18, 223, 256, 268], "unknown": [5, 124, 235, 261], "component_path": [5, 103, 104, 109, 219, 229, 248, 256, 274], "absolut": [5, 9, 34, 36, 49, 103, 104, 109, 219, 229, 232, 236, 248, 274], "landic": [5, 6, 12, 19, 36, 58, 109, 228, 229, 231, 232, 234, 236, 253, 254, 255, 256, 274, 280], "e3sm_submodul": [5, 219, 229, 236, 248, 249, 255], "mali": [5, 124, 229, 232, 236, 253, 255, 256, 274, 280], "dev": [5, 6, 7, 228, 229, 231, 232, 235, 236, 254, 255, 265, 274, 275, 278], "albani": [5, 120, 122, 123, 124, 229, 256, 257, 258, 259, 262, 274], "depend": [5, 14, 16, 18, 34, 35, 42, 97, 98, 124, 144, 152, 234, 236, 253, 254, 255, 256, 261, 262, 264, 268, 274, 280], "whether": [5, 8, 13, 14, 18, 21, 26, 34, 36, 43, 44, 47, 50, 52, 55, 99, 100, 103, 104, 109, 110, 111, 112, 115, 124, 127, 129, 130, 141, 147, 158, 161, 166, 182, 196, 203, 205, 207, 225, 226, 228, 232, 234, 236, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 278], "omega": [5, 27, 113, 130, 133, 177, 191, 219, 229, 235, 236, 253, 255, 265, 270, 271, 274], "config": [5, 7, 8, 10, 11, 12, 13, 16, 18, 21, 22, 25, 26, 27, 34, 35, 36, 43, 45, 50, 53, 54, 65, 67, 70, 81, 82, 83, 84, 85, 101, 103, 104, 109, 111, 113, 114, 115, 116, 118, 119, 130, 133, 141, 147, 159, 166, 177, 182, 191, 196, 209, 211, 212, 213, 217, 218, 219, 222, 223, 225, 226, 227, 228, 232, 233, 234, 235, 236, 248, 249, 252, 254, 264, 274, 280], "point": [5, 6, 46, 52, 89, 124, 219, 221, 228, 229, 234, 235, 236, 248, 255, 256, 261, 274], "much": [5, 6, 14, 232, 255], "config_fil": [5, 103, 104, 109], "work_dir": [5, 11, 34, 43, 54, 85, 103, 104, 109, 110, 232, 234, 255], "recommend": [5, 7, 11, 18, 124, 232, 233, 235, 236, 255, 261], "itself": [5, 6, 7, 9, 34, 228, 229, 231, 232, 234, 236, 255, 274], "temp": 5, "scratch": [5, 6, 236, 255, 258, 262, 274], "avoid": [5, 232, 255], "confus": [5, 14, 235, 236, 255], "output": [5, 7, 8, 10, 12, 13, 14, 17, 19, 21, 34, 35, 37, 42, 43, 47, 75, 76, 83, 86, 99, 100, 110, 127, 130, 135, 144, 152, 154, 155, 161, 169, 175, 185, 189, 199, 210, 222, 223, 225, 226, 227, 234, 242, 243, 251, 253, 256, 262, 274, 279], "compar": [5, 10, 17, 34, 37, 103, 104, 109, 110, 154, 155, 203, 223, 227, 232, 233, 234, 235, 236, 242, 243, 251, 253, 255, 266, 267, 274, 277, 279], "previou": [5, 155, 232, 236, 243, 255, 266, 274, 279], "same": [5, 7, 9, 14, 17, 34, 35, 36, 110, 124, 127, 222, 227, 228, 230, 232, 233, 234, 235, 236, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 272, 274, 279, 280], "baseline_dir": [5, 34, 103, 104, 109, 232], "mani": [5, 6, 8, 9, 127, 228, 230, 232, 234, 235, 236, 254, 255, 267, 273, 278], "valid": [5, 10, 34, 37, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 232, 235, 236, 254, 264, 267], "timer": [5, 17, 34, 232, 233, 235], "both": [5, 6, 7, 8, 13, 14, 26, 124, 127, 141, 147, 222, 228, 229, 231, 232, 236, 254, 255, 256, 266, 270, 271, 272], "custom": [5, 6, 8, 13, 16, 49, 50, 103, 104, 109, 219, 229, 236, 248, 256, 262, 274], "give": [5, 14, 17, 124, 232, 235, 236, 255, 256, 274], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 17, 18, 21, 33, 97, 124, 127, 130, 211, 217, 218, 219, 222, 225, 226, 228, 229, 232, 234, 235, 236, 248, 253, 255, 256, 261, 262, 264, 267, 268, 272, 274, 279], "case": [5, 6, 7, 8, 9, 14, 18, 24, 25, 43, 44, 47, 54, 81, 82, 83, 105, 110, 124, 127, 128, 138, 145, 146, 148, 149, 150, 151, 153, 158, 159, 160, 161, 163, 164, 167, 169, 170, 173, 175, 176, 177, 180, 183, 184, 185, 186, 187, 189, 190, 191, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 222, 223, 225, 226, 227, 228, 229, 230, 232, 234, 236, 239, 241, 244, 245, 247, 253, 254, 255, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 278, 279], "pre": [5, 124, 236], "copi": [5, 6, 8, 36, 47, 103, 104, 109, 255, 258, 274], "just": [5, 14, 21, 31, 34, 41, 55, 124, 130, 232, 234, 235, 236, 253, 255, 258, 262], "wish": [5, 7, 14, 44, 232, 236, 255, 274], "again": [5, 14, 123, 219, 232, 234, 236, 252, 274], "later": [5, 8, 17, 21, 31, 34, 41, 49, 124, 130, 232, 255, 256], "anticip": [5, 255], "mai": [5, 6, 7, 8, 12, 13, 14, 17, 35, 37, 40, 98, 111, 124, 219, 221, 228, 232, 233, 234, 236, 248, 249, 252, 253, 255, 256, 262, 268, 272, 273, 274, 278, 280], "delet": [5, 104, 109, 235, 236, 252, 274], "fresh": [5, 6, 234, 255], "sinc": [5, 14, 98, 119, 222, 232, 234, 235, 236, 255, 267, 268, 270, 271, 273, 278], "rerun": [5, 236], "c": [5, 6, 104, 124, 232, 236, 257, 258, 259, 260, 261, 262, 266, 274, 279], "test_suit": [5, 102, 232], "build": [5, 6, 10, 13, 14, 63, 68, 120, 121, 122, 123, 125, 219, 229, 234, 235, 248, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262], "mpas_model": [5, 256], "overrid": [5, 13, 14, 39, 40, 42, 45, 49, 63, 66, 67, 68, 127, 144, 152, 172, 232, 234, 235, 255, 256, 262, 274], "baselin": [5, 6, 8, 10, 34, 37, 103, 104, 109, 110, 203, 222, 225, 226, 227, 232, 233, 235, 251, 253, 255, 266, 274], "comparison": [5, 8, 17, 34, 110, 232, 255, 256], "against": [5, 10, 37, 110, 222, 225, 226, 227, 232, 251, 255, 266], "oppos": [5, 14, 26, 129, 141, 147, 158, 161, 166, 182, 196, 255], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 99], "wherea": [5, 12, 232, 253, 255, 266, 280], "typic": [5, 7, 9, 13, 14, 16, 17, 18, 34, 44, 100, 124, 228, 229, 230, 232, 234, 236, 253, 255, 256, 261, 264, 272, 274, 280], "clone": [5, 6, 124, 219, 230, 236, 248, 255, 274], "pickl": [5, 8, 97, 98, 232, 255, 274], "latter": [5, 43, 124], "conveni": [5, 16, 211, 217, 218, 228, 232, 255, 256, 268, 274, 280], "tab": [5, 274], "explicitli": [5, 7, 127, 222, 225, 226, 232, 236, 255, 256, 274], "select": [5, 8, 112, 232, 236, 255], "edit": [5, 7, 236, 255, 274], "steps_to_run": [5, 43, 100, 232, 234, 255, 256], "full_run": [5, 17, 251, 267, 277], "restart_run": [5, 17, 251, 267, 277], "Or": [5, 232, 256], "accomplish": [5, 232, 235], "thing": [5, 120, 121, 122, 123, 124, 125, 127, 228, 232, 235, 254, 279], "take": [5, 6, 7, 11, 13, 14, 49, 124, 228, 232, 233, 234, 236, 255, 268, 279], "preced": [5, 49], "over": [5, 9, 14, 49, 111, 232, 234, 235, 254, 255, 264, 267, 272, 274], "intern": [5, 11, 21, 232, 236, 252], "shouldn": [5, 124, 203, 255], "special": [5, 253, 273], "databas": [5, 6, 8, 11, 16, 19, 21, 34, 36, 130, 232, 261], "polaris_cach": [5, 8, 19, 232], "structur": [5, 13, 27, 133, 231, 234, 254, 255], "without": [5, 36, 232, 235, 236, 255, 256, 260, 261, 270, 271, 273, 274], "redund": [5, 211, 217, 218, 222, 228, 255], "stamp": 5, "revis": [5, 256], "older": 5, "ones": [5, 211, 217, 218, 235, 255], "version": [5, 6, 15, 29, 49, 85, 110, 124, 219, 222, 228, 229, 230, 232, 234, 235, 236, 248, 254, 255, 256, 261, 262, 265, 267, 268, 274, 275], "updat": [5, 7, 8, 21, 23, 25, 30, 31, 40, 41, 106, 123, 124, 132, 203, 219, 222, 225, 226, 232, 248, 252, 254, 255, 274], "cached_fil": [5, 19, 232], "json": [5, 8, 19, 47, 232, 262], "anvil": [5, 6, 124, 232, 256, 261, 274], "chrysali": [5, 6, 124, 232, 255, 256, 261, 274], "onto": [5, 236], "lcrc": [5, 6, 8, 11, 47, 232, 235, 256, 257, 259, 261, 274], "server": [5, 8, 36, 47, 232, 235, 256, 262], "d": [5, 18, 112, 177, 191, 211, 217, 218, 221, 232, 255, 272], "whose": [5, 232], "ocean_cached_fil": 5, "pr": [5, 6, 274, 279], "look": [5, 6, 7, 11, 17, 234, 235, 255, 256], "someth": [5, 7, 87, 91, 94, 124, 236, 255], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 16, 17, 18, 86, 222, 232, 235, 255], "cellwidthvslatlon": [5, 13], "graph": [5, 21, 28, 30, 40, 76, 130, 222, 225, 226, 232, 255, 256], "info": [5, 12, 14, 21, 28, 76, 124, 130, 232, 255], "initial_st": [5, 17, 18, 222, 232, 255], "date_str": [5, 47], "let": [5, 232, 236, 253, 255, 256, 262], "string": [5, 9, 36, 90, 96, 124, 236], "choos": [5, 232, 235, 236, 255, 257, 258, 259, 260, 262, 280], "todai": [5, 47], "dry_run": [5, 47], "saniti": [5, 255], "check": [5, 6, 17, 110, 232, 236, 255, 256, 258, 262, 274, 279], "print": [5, 12, 17, 55, 110, 115, 232, 235, 279], "stdout": [5, 12, 34, 43, 232, 234], "translat": [5, 27, 127, 133], "convert": [5, 9, 13, 14, 127, 232, 255], "namelist": [5, 7, 8, 10, 21, 22, 23, 26, 27, 29, 30, 33, 42, 103, 104, 109, 118, 119, 130, 133, 134, 141, 144, 147, 152, 219, 222, 223, 225, 226, 228, 229, 232, 234, 235, 248, 249, 251, 254, 255, 256, 272], "stream": [5, 7, 8, 10, 21, 24, 26, 29, 42, 113, 118, 119, 134, 141, 144, 147, 152, 219, 221, 222, 223, 225, 226, 227, 228, 229, 232, 234, 235, 248, 251, 256, 273, 278], "yaml": [5, 10, 21, 22, 25, 26, 27, 124, 130, 133, 134, 141, 147, 222, 223, 225, 226, 227, 228, 229, 232, 234, 254, 255, 258, 262], "e": [5, 6, 7, 11, 14, 27, 34, 35, 45, 58, 113, 124, 129, 133, 219, 228, 230, 232, 233, 234, 235, 236, 248, 252, 253, 254, 255, 256, 262, 264, 267, 268, 270, 271, 272, 273, 274, 278, 280], "g": [5, 6, 7, 11, 14, 27, 34, 35, 45, 58, 113, 124, 127, 129, 133, 219, 228, 230, 232, 233, 234, 235, 236, 248, 252, 253, 254, 255, 256, 264, 267, 268, 270, 271, 272, 273, 274, 278], "don": [5, 6, 7, 14, 124, 127, 232, 234, 235, 236, 255, 260, 274, 280], "format": [5, 7, 11, 13, 14, 113, 119, 233, 234, 236, 255, 256, 258], "note": [5, 7, 16, 17, 255, 262], "keyword": [5, 7, 14, 17, 18, 223, 232, 268], "top": [5, 18, 211, 212, 213, 214, 215, 216, 217, 218, 221, 230, 255, 264], "ignor": [5, 90, 96], "get": [5, 6, 7, 9, 11, 12, 14, 16, 21, 22, 23, 24, 25, 34, 43, 44, 48, 53, 61, 81, 92, 99, 124, 127, 130, 228, 231, 232, 234, 235, 236, 253, 256, 264, 274], "pars": [5, 9, 14, 22, 23, 24, 25, 78, 105, 107], "valu": [5, 7, 9, 14, 17, 18, 22, 27, 110, 111, 112, 115, 133, 148, 222, 229, 232, 234, 235, 254, 255, 256, 264, 267, 268, 272], "doesn": [5, 6, 9, 119, 124, 232, 234, 255, 256, 261, 274], "matter": [5, 255], "usabl": 5, "try": [6, 14, 52, 124, 235, 236, 252, 255, 256, 258, 262, 274], "stai": [6, 236], "sync": 6, "mpi": [6, 14, 16, 86, 120, 123, 124, 130, 132, 134, 222, 225, 226, 232, 236, 252, 254, 255, 257, 258, 259, 260, 262, 274], "librari": [6, 14, 120, 124, 236, 255, 257, 258, 259, 260, 261, 262, 274], "netcdf": [6, 124, 135, 227, 256, 257, 258, 259, 260, 261, 262], "fortran": [6, 124, 257, 258, 259, 260, 261, 262], "pnetcdf": [6, 124, 257, 258, 259, 260, 261, 262], "mkl": [6, 124], "linear": [6, 18, 111, 112, 223, 225, 255, 267, 268, 270], "algebra": 6, "lib": [6, 124], "esmf": [6, 236, 274], "scorpio": [6, 236, 261, 274], "forg": [6, 124, 254, 274], "python": [6, 7, 8, 9, 22, 40, 45, 228, 230, 232, 234, 235, 236, 253, 254, 255, 256, 261, 262, 274], "aren": [6, 11, 34, 35, 124, 232, 235, 236, 255, 279], "brief": [6, 7, 255], "tour": 6, "login": [6, 124, 236, 258, 262], "node": [6, 14, 21, 33, 34, 38, 41, 53, 81, 82, 83, 124, 130, 232, 233, 235, 236, 255, 256, 257, 258, 259, 260, 261, 262, 274], "bootstrap": 6, "rest": [6, 135, 216, 264, 268], "u": [6, 232, 255, 261, 262, 270, 271], "unifi": [6, 124, 236, 262], "diagnost": [6, 256, 257, 258, 260, 261, 262, 274], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 127, 232, 234, 235, 236, 255], "cach": [6, 19, 21, 34, 36, 103, 104, 130, 254, 256, 261, 266, 274, 279], "own": [6, 7, 8, 11, 12, 18, 34, 124, 232, 234, 235, 236, 253, 255, 256, 268, 274, 280], "config_machin": 6, "xml": [6, 14, 105, 107, 108, 119, 248], "ey": 6, "master": [6, 219, 248, 275], "happen": [6, 9, 12, 16, 98, 232, 234, 255, 268], "me": [6, 255], "dev_quick_start": 6, "fork": [6, 255], "haven": [6, 255], "mkdir": [6, 236], "involv": [6, 14, 232, 253, 255], "coupl": [6, 252, 254], "alpha": [6, 120, 121, 122, 123, 124, 125, 255], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 17, 18, 34, 228, 230, 232, 233, 234, 235, 236, 255, 256, 279, 280], "stand": 6, "omit": [6, 232, 274], "suffix": [6, 36, 104, 232], "onc": [6, 14, 37, 222, 236, 255, 256, 268, 274], "releas": [6, 124, 235, 254, 261, 265, 274], "spack_for_mache_1": 6, "12": [6, 13, 61, 251, 255, 258, 277], "worktre": [6, 254, 255], "my": [6, 124, 258], "fetch": [6, 236, 255], "out": [6, 8, 13, 80, 84, 112, 124, 230, 232, 235, 236, 256, 264, 274], "checkout": [6, 236, 255], "mambaforg": [6, 236, 255, 261, 274], "manual": [6, 14, 43, 44, 232, 234, 280], "linux": [6, 124, 236, 261], "x86_64": [6, 124], "our": [6, 124, 235, 255, 274], "found": [6, 9, 14, 114, 124, 235, 236, 254, 255, 257, 258, 259, 260, 261, 262], "exist": [6, 7, 9, 27, 34, 37, 52, 105, 107, 109, 124, 133, 222, 232, 234, 235, 236, 252, 255, 261, 279], "miniconda3": [6, 236], "alwai": [6, 7, 9, 12, 49, 124, 127, 219, 229, 232, 234, 235, 236, 248, 253, 255, 256], "pleas": [6, 124, 229, 235, 236, 255, 274], "start": [6, 7, 8, 14, 106, 124, 221, 222, 228, 233, 234, 235, 254, 258, 261, 262, 265, 275, 277], "definit": [6, 14, 255], "defin": [6, 7, 8, 9, 13, 14, 15, 18, 34, 43, 66, 90, 96, 103, 104, 109, 124, 160, 174, 188, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 240, 248, 249, 251, 253, 254, 256, 261, 264, 267, 268, 272, 279, 280], "export": [6, 252], "conda_bas": 6, "home": [6, 17, 124, 236, 255, 256, 258, 261, 262], "readi": [6, 255, 262], "configure_polaris_env": [6, 124, 236, 252, 255], "py": [6, 12, 14, 17, 58, 124, 228, 229, 235, 236, 253, 255, 256], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 124, 236], "tmpdir": [6, 124], "group": [6, 7, 228, 254, 257, 259, 261, 262, 273, 274, 280], "spack_temp": 6, "spack_test": 6, "intel": [6, 124, 261], "gnu": [6, 124, 236, 260, 261, 274], "openmpi": [6, 120, 124, 236, 254, 257, 259, 260, 274], "impi": [6, 120, 124, 257, 260], "recreat": [6, 236, 252], "request": [6, 7, 14, 21, 28, 30, 124, 130, 212, 213, 232, 235, 236, 252, 255, 256, 268], "twice": [6, 255], "deploy": [6, 236], "prebootstrap": 6, "load": [6, 98, 121, 124, 125, 236, 254, 255, 256, 257, 258, 259, 260, 261, 262], "activ": [6, 124, 261, 262, 274], "differ": [6, 14, 16, 17, 49, 63, 68, 110, 124, 127, 136, 139, 148, 219, 222, 228, 229, 230, 232, 233, 234, 235, 248, 253, 255, 256, 258, 262, 267, 268, 270, 271, 273, 278], "On": [6, 7, 13, 124, 236, 261], "tmp": [6, 124], "safe": [6, 14, 232, 236, 267], "strictli": [6, 13, 235, 255], "necessari": [6, 7, 13, 124, 255], "good": [6, 12, 34, 232, 236, 255], "idea": [6, 12, 255], "Be": [6, 262], "awar": [6, 7, 124, 255, 261], "with_petsc": [6, 236], "wa": [6, 8, 50, 110, 124, 232, 234, 235, 236, 252, 253, 255, 256, 264, 274], "limit": [6, 233, 236, 267], "amount": [6, 21, 31, 34, 41, 130, 232, 263, 272], "team": [6, 124, 254], "petsc_support": 6, "txt": [6, 8, 109, 233, 252], "with_albani": [6, 236], "albany_support": 6, "encount": [6, 233, 252], "error": [6, 8, 34, 43, 124, 127, 162, 223, 225, 226, 232, 234, 236, 254, 255, 270, 271], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 17, 26, 34, 43, 141, 147, 166, 182, 196, 232, 234, 235, 236, 255, 256, 274, 279, 280], "attempt": [6, 124, 254, 261], "sh": [6, 120, 121, 122, 123, 124, 125, 236, 252, 255, 257, 258, 259, 260, 262, 274], "build_": 6, "command": [6, 10, 15, 32, 34, 40, 82, 83, 85, 93, 124, 232, 235, 236, 253, 254, 255, 258, 261, 262, 274], "pscratch": 6, "suggest": [6, 124, 252], "correctli": 6, "seem": [6, 14, 255, 258, 262], "switch": [6, 255, 256], "v0": 6, "19": 6, "submodul": [6, 219, 229, 236, 248, 255, 274], "serv": [6, 103, 104, 109, 228, 255], "kind": [6, 255], "whichev": [6, 219, 248, 264], "load_dev_polaris_0": [6, 120, 121, 122, 123, 124, 125, 255], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 219, 235, 236, 248, 255, 274], "pio": [6, 21, 30, 33, 130, 222, 225, 226], "openmp": [6, 21, 31, 34, 41, 83, 120, 122, 123, 130, 139, 180, 194, 203, 232, 255, 257, 258, 259, 260, 262], "ifort": [6, 120, 122, 124, 255, 257, 259], "ac": [6, 255], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 255, 261, 274], "job_script": [6, 255, 274], "bash": [6, 236, 252, 255, 274], "termin": [6, 8, 124, 232, 236, 255], "isn": [6, 223, 232, 235, 255], "ll": [6, 18, 124, 223, 235, 255, 262, 268], "warn": [6, 268, 270, 271], "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 120, 122, 123, 124, 236, 257, 259], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 228, 232, 255, 264], "util": [6, 235, 271], "matrix": 6, "sever": [6, 12, 124, 228, 232, 234, 235, 236, 254, 255, 273, 274, 279], "automat": [6, 7, 9, 12, 14, 18, 124, 127, 232, 234, 235, 236, 255, 256, 257, 259, 260, 261, 262, 274], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 274], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 123, 124, 127, 232, 235, 255], "integr": [6, 148, 222, 235, 255, 267, 268, 273, 278], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 258, 274], "245": 6, "246": 6, "non": [6, 14, 17, 221, 232, 255, 274], "care": [6, 11, 13, 228, 232, 236, 255], "temporari": [6, 124], "begin": [6, 7, 17, 222, 232, 236, 249, 254, 255, 261, 267, 268, 272], "anymor": 6, "best": [6, 16, 124, 232, 236], "hard": [6, 232, 255, 267, 272], "reset": 6, "sphinx": 7, "written": [7, 8, 34, 43, 54, 111, 112, 232, 234, 255, 277], "myst": [7, 255], "tip": [7, 236], "easi": [7, 36, 235, 255], "pull": [7, 124, 235, 236, 255, 256], "guid": [7, 127, 222, 223, 225, 226, 227, 233, 235, 255, 258, 261, 265, 275], "baroclin": [7, 9, 14, 136, 137, 138, 139, 142, 145, 148, 150, 153, 154, 156, 203, 222, 229, 232, 255, 265, 269, 280], "channel": [7, 9, 14, 136, 137, 138, 139, 142, 145, 148, 150, 153, 154, 156, 203, 222, 229, 232, 252, 255, 265, 269, 280], "label": [7, 111, 261, 274], "prepend": 7, "categori": [7, 229, 230, 231, 254, 280], "uniqu": [7, 14, 124, 234, 255], "And": [7, 14, 236, 255], "becom": [7, 232, 234, 255], "who": [7, 236, 255, 256, 262], "citat": 7, "basi": [7, 255], "overview": [7, 254, 258, 262], "common": [7, 9, 12, 14, 40, 43, 124, 222, 223, 225, 226, 227, 228, 232, 233, 234, 235, 252, 253, 255, 256, 261, 262, 273, 274, 278, 279, 280], "characterist": [7, 273, 278], "comment": [7, 233, 234, 256], "appli": [7, 13, 14, 55, 221, 228, 255, 267, 272, 273, 278], "vertic": [7, 18, 202, 221, 222, 223, 225, 226, 227, 232, 256, 263, 265], "grid": [7, 13, 16, 60, 67, 71, 74, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 127, 169, 209, 210, 211, 212, 213, 214, 217, 218, 222, 223, 225, 226, 227, 232, 249, 255, 256], "forc": [7, 227, 251, 255, 280], "specif": [7, 9, 14, 45, 124, 219, 228, 229, 230, 232, 248, 249, 254, 255, 256, 258, 261, 267, 273, 274, 278, 279], "public": [7, 11, 232, 255, 256], "api": [7, 12, 254, 255], "underscor": [7, 255], "md": [7, 255], "eval": 7, "rst": [7, 14, 255], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 229, 235], "compute_cell_count": [7, 127, 222, 225, 226, 255], "dynamic_model_config": [7, 14, 222, 225, 226, 255], "ot": [7, 255], "numpydoc": [7, 255], "text": [7, 8, 267, 268, 272], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 127, 211, 213, 214, 215, 216, 217, 218, 219, 225, 226, 232, 255, 256, 258, 262, 270, 271], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 219, 256, 270, 271], "overli": [7, 255], "ic": [7, 127, 219, 234, 235, 236, 249, 251, 254, 255, 256, 258, 264, 277, 280], "shelf": [7, 127, 228, 235, 255, 256, 264], "draft": [7, 264], "paramet": [7, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 36, 37, 38, 41, 43, 44, 47, 50, 52, 53, 54, 55, 58, 59, 61, 62, 63, 66, 71, 72, 74, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119, 129, 130, 133, 135, 137, 138, 139, 141, 142, 145, 146, 147, 148, 150, 153, 154, 156, 158, 161, 162, 164, 166, 167, 169, 171, 173, 175, 177, 178, 179, 180, 182, 183, 185, 187, 189, 191, 192, 193, 194, 196, 197, 199, 203, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 228, 232, 234, 240, 241, 242, 244, 245, 246, 267, 268, 270, 271, 272], "xarrai": [7, 16, 18, 112, 211, 212, 213, 214, 215, 216, 217, 218, 232, 255], "dataarrai": [7, 177, 178, 179, 191, 192, 193, 212, 213, 214, 215, 216], "sea": [7, 127, 177, 179, 191, 193, 213, 214, 215, 216, 219, 249, 251, 254, 255, 256, 264, 270, 271, 277, 280], "surfac": [7, 127, 177, 179, 191, 193, 213, 214, 215, 216, 219, 221, 227, 251, 255, 256, 264, 267, 270, 271, 272], "height": [7, 127, 177, 179, 191, 193, 213, 214, 215, 216, 219, 255, 256, 264, 270, 271], "mask": [7, 211, 214, 217, 218, 232, 255, 256, 264], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 22, 59, 61, 62, 66, 71, 91, 110, 112, 129, 137, 138, 139, 142, 145, 148, 150, 153, 162, 175, 177, 178, 179, 180, 183, 185, 187, 189, 191, 192, 193, 194, 197, 199, 203, 232, 255], "densiti": [7, 13, 127, 255], "seawat": 7, "displac": 7, "land": [7, 127, 219, 234, 254, 255, 256, 264], "landicedraft": 7, "equal": [7, 227, 232, 235, 272], "entri": [7, 46, 79, 104], "line": [7, 10, 32, 34, 82, 83, 93, 124, 232, 233, 235, 236, 254, 274], "type": [7, 14, 16, 17, 18, 22, 88, 95, 119, 124, 127, 202, 204, 223, 228, 232, 234, 235, 236, 248, 252, 253, 255, 256, 267, 268, 270, 271, 272, 273, 279], "side": 7, "colon": 7, "doubl": [7, 14, 127, 232, 233, 255], "back": [7, 234, 255, 258, 274], "quot": 7, "interfer": 7, "arg": [7, 12, 34, 82, 83, 232], "next": [7, 124, 222, 226, 255, 264, 274], "indent": [7, 232], "obviou": [7, 14, 255], "none": [7, 14, 17, 21, 24, 25, 31, 34, 35, 36, 37, 41, 43, 44, 47, 50, 54, 55, 57, 59, 66, 72, 76, 85, 86, 87, 90, 91, 94, 96, 100, 104, 105, 109, 110, 111, 112, 114, 118, 130, 131, 139, 140, 165, 180, 181, 191, 194, 195, 203, 232, 234, 244, 255, 264, 267, 268, 270, 271, 272, 273, 277], "els": [7, 8, 124, 232, 234, 255], "further": [7, 228, 234, 262, 273, 278], "rais": [7, 9, 17, 34, 37, 50, 52, 127, 232, 235, 255], "list_cas": 8, "list_machin": [8, 235], "list_suit": 8, "anywher": [8, 12, 124, 236], "object": [8, 12, 16, 23, 24, 25, 44, 78, 97, 98, 101, 105, 113, 114, 118, 119, 177, 191, 229, 234, 235, 255], "contrast": 8, "read": [8, 19, 23, 24, 25, 34, 35, 43, 51, 77, 78, 113, 221, 232, 234, 255], "properti": [8, 221, 232, 261, 268], "setup_suit": 8, "write": [8, 12, 13, 15, 18, 97, 113, 210, 232, 234, 236, 251, 255], "proven": [8, 10, 49, 254, 256], "save": [8, 18, 50, 74, 124, 222, 228, 232, 234, 255, 261, 266, 267], "target": [8, 11, 16, 17, 21, 36, 52, 54, 86, 124, 127, 130, 222, 225, 226, 232, 234, 255, 268], "minimum": [8, 54, 112, 127, 130, 222, 225, 226, 232, 255, 256, 264, 267, 268, 270, 271, 272, 273, 278], "determin": [8, 13, 14, 18, 36, 40, 119, 124, 127, 134, 222, 223, 225, 226, 232, 255, 264, 267, 268, 270, 271, 273, 274, 278], "maximum": [8, 17, 110, 112, 255, 256, 264], "product": 8, "ntask": [8, 14, 16, 21, 31, 34, 38, 41, 82, 83, 86, 127, 130, 139, 180, 194, 203, 232, 234, 255], "cpus_per_task": [8, 14, 34, 38, 41, 82, 83, 232], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 255, 264, 267, 268, 270, 271, 272, 273], "min_task": [8, 14, 16, 21, 31, 34, 41, 82, 83, 86, 127, 130, 139, 180, 194, 203, 232, 255], "min_cpus_per_task": [8, 14, 34, 41, 82, 83, 232], "fewest": 8, "least": [8, 13, 229, 236, 267], "fail": [8, 14, 17, 21, 31, 34, 41, 50, 124, 130, 139, 180, 194, 203, 232, 254, 255, 256, 268, 270, 271], "run_task": [8, 232, 234], "run_single_step": 8, "oper": [8, 42, 124, 144, 152, 232, 234, 279], "log": [8, 10, 18, 34, 43, 83, 110, 111, 112, 232, 234, 236, 254, 274], "figur": [8, 227, 228, 230, 232, 256], "cpu": [8, 124, 232, 255, 274], "method": [8, 9, 13, 14, 16, 17, 19, 21, 26, 27, 34, 35, 39, 40, 43, 44, 45, 49, 58, 59, 63, 66, 67, 68, 72, 73, 86, 92, 113, 127, 128, 130, 133, 137, 138, 139, 141, 142, 145, 146, 147, 148, 150, 153, 154, 156, 158, 161, 164, 166, 167, 169, 171, 172, 173, 175, 177, 180, 182, 183, 185, 187, 188, 189, 191, 194, 196, 197, 199, 202, 203, 204, 205, 207, 223, 225, 226, 229, 232, 234, 235, 239, 241, 242, 244, 245, 246, 255, 268, 273, 278], "retriev": [8, 252], "store": [8, 45, 124, 127, 225, 226, 232, 234, 255, 274], "case_output": [8, 12], "individu": [8, 9, 18, 229, 234, 235, 255, 261, 262, 267, 274, 280], "overal": 8, "whole": [8, 43, 135, 228, 234, 235, 255, 274], "window": 8, "update_cach": 8, "_cached_fil": [8, 232], "origin": [8, 47, 236, 255, 274], "enabl": [8, 18, 227, 232, 252, 256, 262, 270, 271], "consum": [8, 232, 234, 255, 279], "faster": [8, 236], "parser": [9, 49], "mpas_tool": [9, 12, 13, 71, 222, 225, 226, 227, 232, 255], "mpasconfigpars": 9, "polarisconfigpars": [9, 34, 43, 50, 53, 54, 81, 84, 85, 101, 111, 177, 191, 209, 211, 212, 213, 217, 218, 234, 255], "certain": [9, 17, 49, 124, 232, 236, 256, 273, 278], "add_from_packag": [9, 234, 235, 255], "content": [9, 14, 104, 105, 107, 109, 119, 228, 230, 232, 235, 251, 255, 274, 277], "cfg": [9, 45, 229, 234, 235, 255, 256, 274], "except": [9, 34, 37, 50, 232, 235, 255], "behavior": [9, 14, 100, 232, 233, 234, 236, 255], "noth": [9, 124, 252, 268], "being": [9, 14, 26, 34, 43, 99, 104, 110, 124, 141, 147, 166, 182, 196, 232, 234, 235, 236, 255, 264], "__module__": 9, "larg": [9, 232, 234, 255, 257], "those": [9, 14, 43, 110, 124, 222, 234, 235, 236, 254, 255, 268, 273, 278, 279], "configpars": [9, 82, 83], "getinteg": 9, "getfloat": [9, 12, 14, 16, 232, 255], "getboolean": [9, 232, 255], "implement": [9, 229, 232, 235, 267, 268, 270, 271], "getlist": [9, 234, 255], "comma": [9, 268], "integ": [9, 13], "boolean": [9, 112, 214], "etc": [9, 14, 106, 109, 229, 232, 267], "getexpress": 9, "tupl": 9, "rang": [9, 112, 255, 268], "numpi": [9, 13, 60, 67, 68, 74, 111, 127, 135, 209, 210, 232, 255], "linspac": [9, 18, 223, 268], "arang": 9, "arrai": [9, 60, 67, 68, 74, 111, 127, 209, 210, 212, 213, 214, 215, 255], "One": [9, 13, 255, 274, 279], "advantag": [9, 14, 124, 234, 235, 255, 261], "track": [9, 21, 232, 234, 236], "associ": [9, 13, 14, 18, 211, 217, 218, 222, 232, 234, 236, 253], "while": [10, 16, 18, 221, 222, 232, 252, 255], "meant": [10, 235, 256], "simplifi": 10, "verifi": [10, 233, 256], "io": [10, 232, 234, 235, 254, 255, 256, 265, 275], "lot": [11, 127, 232, 235, 255], "o": [11, 12, 105, 107, 119, 124, 235, 236, 255, 256, 274], "handl": [11, 12, 236, 255, 261], "lower": [11, 234, 255, 267], "directli": [11, 13, 14, 16, 34, 230, 232, 235, 253, 254, 255, 258], "readm": [11, 234], "importlib": [11, 234], "resourc": [11, 14, 31, 38, 41, 51, 81, 82, 83, 131, 140, 165, 181, 195, 203, 222, 225, 226, 232, 234, 255], "import": [11, 12, 13, 16, 17, 18, 228, 229, 232, 234, 235, 236, 253, 255], "global_ocean": [11, 14, 232, 234, 235, 236, 256, 274], "files_for_e3sm": [11, 232, 234, 256], "str": [11, 14, 19, 21, 22, 23, 24, 25, 28, 34, 35, 36, 37, 43, 44, 47, 50, 52, 53, 54, 55, 59, 66, 72, 76, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 116, 118, 119, 129, 130, 135, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 161, 162, 164, 167, 169, 171, 175, 180, 183, 185, 189, 194, 197, 199, 203, 205, 207, 210, 232, 234, 242, 244, 246, 255], "did": [11, 253, 255], "add_input_fil": [11, 16, 17, 35, 232, 234, 255], "collect": [11, 89, 128, 229, 231, 239, 253, 255], "whenev": [11, 232, 255], "flexibl": [11, 127, 232, 234, 236, 255], "No": [11, 254, 270, 271], "step_dir": 11, "database_root": [11, 124, 232, 256, 257, 258, 259, 260, 261, 262, 274], "download_path": 11, "join": [11, 255], "bathymetry_databas": [11, 232, 256], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 214, 228, 232, 255, 264, 267, 268, 270, 271, 272, 273, 280], "url": [11, 36, 50, 232, 252, 256], "web": [11, 232, 256], "anl": [11, 232, 256], "gov": [11, 232, 252, 256, 258, 262], "mpas_standalonedata": [11, 124, 256, 261], "dest_path": [11, 50], "remot": [11, 36, 236, 254], "bathymetri": [11, 232, 256], "strategi": 12, "stderr": [12, 34, 43, 232, 234], "loggingcontext": 12, "check_cal": [12, 232], "most": [12, 40, 124, 219, 228, 229, 232, 235, 236, 248, 255, 256, 261, 262, 264, 265, 275, 280], "won": [12, 235, 255, 256], "logger": [12, 17, 34, 43, 58, 83, 110, 232, 234, 255], "full": [12, 34, 82, 100, 212, 213, 222, 232, 234, 236, 251, 254, 255, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274], "although": 12, "captur": 12, "explicit": [12, 235], "go": [12, 205, 207, 228, 232, 234, 235, 236, 255, 262], "subprocess": [12, 34, 82, 83, 99, 232, 235, 252], "produc": [12, 14, 16, 18, 34, 35, 37, 47, 127, 137, 145, 153, 222, 223, 225, 226, 227, 232, 235, 236, 241, 251, 255, 270, 271, 274, 277], "otherwis": [12, 124, 232, 234, 255, 257, 258, 259, 260, 261, 262, 267], "intent": 12, "desir": [12, 13, 14, 17, 18, 110, 127, 232, 233, 234, 255, 256, 274], "trick": [12, 232], "direct": [12, 13, 14, 71, 177, 191, 222, 225, 226, 255, 262, 267, 270, 271], "snippet": [12, 255], "dome": [12, 58, 228, 232, 234, 274, 280], "setup_mesh": [12, 232], "setupmesh": [12, 232, 234], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 232], "landice_grid": [12, 232, 255], "l": [12, 110, 255, 262], "quasiuniformsphericalmeshstep": [13, 127, 234], "icosahedralmeshstep": [13, 127, 234], "jigsaw": [13, 59, 63, 65, 66, 68, 70, 72, 158, 161, 232], "complex": [13, 67, 234, 235, 255], "build_cell_width_lat_lon": [13, 66], "opt": [13, 72], "make_jigsaw_mesh": [13, 66], "icosahedr": [13, 59, 61, 129, 158, 161, 223, 234, 268], "significantli": [13, 264], "smooth": 13, "cell": [13, 14, 18, 59, 60, 61, 62, 66, 67, 68, 71, 74, 88, 95, 127, 130, 131, 140, 162, 165, 177, 179, 181, 191, 193, 195, 211, 212, 213, 214, 217, 218, 222, 225, 226, 228, 249, 264, 267, 268, 270, 271, 272, 273, 277], "quasi": [13, 66, 223, 234, 256, 268, 273, 278], "hand": [13, 91, 235], "restrict": [13, 255, 273], "subdivis": [13, 59, 60, 61, 62, 63], "icosahedron": [13, 60, 61, 62, 63], "tabl": [13, 236, 261, 274], "approxim": [13, 59, 61, 62, 66, 127, 131, 140, 165, 181, 195, 222, 225, 226, 236, 255], "width": [13, 59, 60, 61, 66, 67, 68, 74, 255, 267], "km": [13, 14, 59, 60, 61, 62, 66, 67, 68, 71, 74, 127, 129, 137, 138, 139, 142, 145, 146, 148, 150, 153, 164, 180, 183, 187, 194, 197, 222, 223, 225, 226, 232, 234, 255, 256, 267, 268, 270, 271, 272, 273, 278, 280], "5": [13, 14, 61, 124, 127, 148, 222, 223, 232, 233, 235, 252, 255, 256, 267, 268, 273, 274, 278], "240": [13, 61, 223, 234, 256, 268], "6": [13, 61, 232, 255, 265, 267, 272, 274, 275], "120": [13, 61, 233, 234, 268], "7": [13, 61, 124, 255, 262, 268, 274], "60": [13, 61, 223, 234, 264, 268], "8": [13, 61, 124, 222, 236, 255, 256, 267, 268, 270, 271, 274], "30": [13, 14, 61, 228, 255, 262, 267, 268, 272, 273, 278], "9": [13, 18, 61, 124, 223, 255, 268, 274], "15": [13, 14, 61, 222, 255, 267, 268, 272, 273, 274, 278], "11": [13, 61, 124, 255, 274], "3": [13, 61, 124, 222, 232, 233, 236, 252, 255, 256, 261, 262, 264, 267, 268, 270, 271, 273, 274], "13": [13, 61, 255, 267], "94": [13, 61], "spherical_mesh": [13, 67], "cell_width": [13, 59, 60, 61, 62, 66, 67, 68, 74], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 74, 111, 112, 127, 150, 156, 169, 207, 222, 223, 225, 226, 246, 268, 270, 271, 277, 280], "plot_cell_width": 13, "cell_width_filenam": [13, 74], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": 13, "lat": [13, 16, 60, 66, 67, 68, 74, 87, 89, 91, 94, 111, 169, 223, 256, 268], "lon": [13, 16, 60, 66, 67, 68, 74, 87, 89, 91, 94, 111, 169, 223, 256, 268], "sphere": [13, 223, 268], "vtk_lat_lon": 13, "far": [13, 124, 211, 217, 218, 235, 255], "But": [13, 124, 228, 232, 235, 236, 255, 256, 261], "hexagon": [13, 71, 255, 270, 271], "planar_hex": [13, 71, 222, 225, 226, 227, 232, 255], "make_planar_hex_mesh": [13, 71, 222, 225, 226, 227, 232, 255], "x": [13, 18, 60, 67, 68, 71, 74, 90, 96, 112, 135, 177, 191, 232, 255, 267, 270, 271, 272], "y": [13, 14, 18, 71, 90, 96, 112, 177, 191, 222, 225, 226, 232, 255, 262, 267, 270, 271], "nx": [13, 71, 228, 232, 255, 272], "ny": [13, 71, 228, 232, 255, 272], "dc": [13, 228, 232, 255], "distanc": [13, 71, 255, 267], "adjac": [13, 264], "center": [13, 18, 71, 177, 191, 228, 255, 264, 267], "admittedli": 13, "oddli": 13, "period": [13, 221, 222, 225, 226, 232, 255, 267, 270, 271], "nonperiodic_x": [13, 232, 255], "nonperiodic_i": [13, 232, 255], "consider": [13, 211, 217, 218, 221, 249], "compute_planar_hex_nx_ni": [13, 232, 255], "lx": [13, 71, 232, 255, 267, 270, 271, 272], "ly": [13, 71, 232, 255, 267, 272], "explan": 13, "subtleti": 13, "account": [13, 71, 236, 255, 257, 258, 260, 261, 262, 274], "behav": 13, "stagger": [13, 71], "physic": [13, 71, 245, 251, 255], "np": [13, 18, 223, 232, 255, 268], "sqrt": [13, 270], "domain": [13, 21, 28, 71, 112, 127, 130, 135, 221, 228, 249, 255, 267, 268, 270, 271, 272, 273, 278, 280], "extra": [13, 236], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 232, 255], "max": [13, 127, 232, 255, 267, 268], "int": [13, 14, 21, 22, 31, 34, 41, 53, 54, 55, 59, 60, 61, 62, 63, 71, 82, 83, 86, 112, 130, 131, 139, 140, 158, 161, 162, 164, 165, 180, 181, 194, 195, 203, 232, 234, 255, 272], "ds_mesh": [13, 18, 112, 232, 255], "creation": [13, 232, 256], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 21, 31, 34, 41, 82, 83, 130, 228, 232, 235, 255], "distant": 13, "descend": [14, 16, 127, 228, 229, 232, 234, 235, 255], "modelstep": [14, 127, 232, 234, 255], "update_pio": [14, 21, 130], "make_graph": [14, 21, 130], "construct": [14, 128, 209, 211, 212, 213, 217, 218, 221, 227, 229, 234, 239, 255, 267], "At": [14, 34, 43, 230, 231, 234, 255], "set_model_resourc": 14, "thread": [14, 21, 31, 34, 40, 41, 43, 83, 130, 139, 180, 194, 203, 229, 232, 233, 253, 255, 256, 258, 262, 274, 279], "openmp_thread": [14, 21, 31, 34, 41, 83, 130, 139, 180, 194, 203, 232, 234, 255], "prefix": [14, 36, 124, 234, 236, 256], "end": [14, 232, 234, 235, 236, 251, 253, 255, 258, 267, 268, 270, 271, 272, 277], "yml": 14, "reason": [14, 16, 40, 124, 232, 235, 255, 279], "add_namelist_fil": [14, 21, 127, 232, 234], "add_yaml_fil": [14, 21, 232, 234, 255], "add_model_config_opt": [14, 21, 232, 234, 255], "add_streams_fil": [14, 21, 127, 232, 234], "themselv": [14, 235, 254], "question": [14, 232, 256], "never": [14, 124, 253], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 255], "config_run_dur": [14, 234, 255], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 43, 137, 253, 255], "config_block_decomp_file_prefix": [14, 255], "time_integr": [14, 255], "config_time_integr": 14, "rk4": [14, 235], "filename_templ": [14, 255], "restart": [14, 17, 43, 223, 225, 226, 227, 229, 233, 235, 241, 242, 251, 253, 255, 274, 279], "output_interv": [14, 255], "0030_00": 14, "clobber_mod": [14, 255], "truncat": [14, 255], "reference_tim": 14, "0001": [14, 255], "01_00": [14, 249, 255], "tracer": [14, 18, 204, 205, 207, 222, 223, 225, 226, 227, 255, 268, 270, 271, 272], "xtime": [14, 255], "normalveloc": [14, 17, 18, 155, 192, 221, 222, 225, 226, 227, 232, 255, 272], "layerthick": [14, 17, 127, 155, 211, 215, 216, 217, 218, 222, 225, 226, 227, 232, 255], "refzmid": [14, 211, 217, 218, 232, 255], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 255], "clariti": [14, 232], "global_converg": [14, 223, 234, 255, 266], "substitut": 14, "config_write_output_on_startup": [14, 255], "0000_00": [14, 255], "config_use_mom_del2": [14, 255], "config_implicit_bottom_drag_coeff": [14, 255], "0e": [14, 271, 272], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 255], "config_cvmix_background_viscos": [14, 255], "worri": 14, "sometim": [14, 211, 217, 218, 228, 230, 232, 234, 253, 255, 279], "togeth": [14, 17, 124, 228, 253, 255, 279], "overkil": 14, "reli": [14, 232, 255], "along": [14, 18, 124, 222, 232, 254, 255], "nu": [14, 139, 150, 222, 232, 255], "viscos": [14, 139, 148, 150, 222, 232, 235, 255, 267], "dict": [14, 19, 22, 24, 25, 27, 34, 38, 43, 78, 79, 81, 85, 86, 102, 104, 105, 111, 113, 114, 115, 133, 232, 234, 255], "config_mom_del2": [14, 222, 232, 255], "precis": [14, 127, 232, 255], "bool": [14, 21, 22, 26, 34, 36, 43, 44, 47, 50, 52, 55, 99, 100, 103, 104, 109, 110, 111, 115, 129, 130, 141, 147, 158, 161, 166, 182, 196, 203, 205, 207, 255], "algorithm": [14, 127, 203, 222, 225, 226, 232, 255], "possibli": [14, 229, 232, 236, 255], "at_setup": [14, 26, 141, 147, 166, 182, 196, 255], "super": [14, 16, 17, 229, 232, 234, 235, 255], "dt": [14, 139, 203, 232, 255, 267, 268, 270, 271, 273, 278], "proport": [14, 255, 264, 267, 268, 270, 271, 273, 278], "dt_per_km": [14, 223, 255, 267, 268, 270, 271, 273, 278], "stackoverflow": [14, 52, 255], "1384565": [14, 255], "7728169": [14, 52, 255], "config_dt": [14, 255], "strftime": [14, 255], "gmtime": [14, 255], "run_time_step": [14, 139, 232, 255], "durat": [14, 222, 225, 226, 227, 233, 255], "run_second": [14, 255], "btr_dt": [14, 139, 203, 232, 255, 267], "btr_dt_per_km": [14, 255, 267], "config_btr_dt": [14, 255], "bit": [14, 124, 235, 253, 255, 267, 274], "complic": [14, 235, 236, 255], "slightli": [14, 236], "sophist": 14, "immutable_stream": [14, 255], "var_struct": [14, 248], "var": [14, 106, 248, 255], "var_arrai": [14, 248], "tag": [14, 254], "taken": [14, 21, 130, 223, 232, 255, 262, 274], "past": 14, "experi": [14, 124, 235, 264], "featur": [14, 235, 236, 253, 255, 256, 267, 272], "difficult": [14, 124, 261], "synchron": [14, 254], "out_nam": 14, "equival": [14, 236, 255, 257], "template_replac": [14, 24, 25], "treat": [14, 233, 235], "jinja2": [14, 24, 25, 105], "render": [14, 24, 25, 105], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 232, 235, 236, 256, 274], "qu240dynamicadjust": 14, "adjust": [14, 124, 127, 219, 256], "interv": 14, "spin": 14, "reus": [14, 232, 235, 236, 255, 256, 274], "qualit": 14, "forgotten": 14, "broken": [14, 232, 235], "immedi": [14, 58, 236, 255], "miss": [14, 232, 255, 256], "detect": [14, 18, 256, 257, 259, 260, 261, 274], "gpmeti": [14, 256], "divid": [14, 264], "partition_graph": [14, 21, 130], "circumst": [14, 17, 34, 35, 232, 255], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 252, 255, 273, 278], "v1": [14, 264], "better": [14, 16, 124, 274], "v2": [14, 256, 264], "littl": [14, 235, 236, 254, 255], "feel": [14, 124, 232, 255], "runtime_setup": [14, 16, 31, 41, 222, 225, 226, 234], "yourself": [14, 255, 261], "culler": 14, "cull": [14, 222, 225, 226, 232, 255], "model_step": 14, "make_graph_fil": 14, "field": [14, 17, 74, 76, 112, 169, 211, 217, 218, 221, 222, 225, 226, 227, 255, 267, 268, 270, 271], "weight": [14, 16, 76, 211, 217, 218, 255, 264], "weight_field": [14, 76], "frequent": [16, 219, 248], "observ": [16, 254], "dataset": [16, 112, 177, 191, 211, 217, 218, 232, 255], "region": [16, 18, 254, 256], "pyremap": [16, 92], "interpol": [16, 86, 223, 256], "hood": 16, "esmf_regridweightgen": 16, "mappingfilestep": [16, 18], "woa": 16, "__init__": [16, 17, 19, 21, 34, 43, 49, 58, 59, 66, 72, 86, 113, 128, 130, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 158, 161, 164, 167, 169, 171, 173, 175, 177, 180, 183, 185, 187, 189, 191, 194, 197, 199, 202, 203, 204, 205, 207, 228, 229, 232, 234, 235, 239, 241, 242, 244, 245, 246, 253, 255], "mytestcas": 16, "__int__": 16, "make_map": 16, "64": [16, 264], "bilinear": [16, 86, 223, 268, 273, 278], "filenam": [16, 17, 36, 37, 80, 87, 88, 89, 90, 94, 95, 96, 101, 110, 114, 116, 232, 236, 255], "woa23_decav_0": 16, "25_extrap": 16, "20230414": 16, "initial_condition_databas": [16, 256], "destin": [16, 86, 87, 88, 89, 90, 91, 92], "src_from_lon_lat": 16, "lon_var": [16, 87, 89, 94], "lat_var": [16, 87, 89, 94], "dst_from_mpa": 16, "mesh_nam": [16, 87, 88, 89, 90, 91, 94, 95, 96, 129, 162, 164, 167, 169, 171, 234], "qu60": 16, "subclass": [16, 63, 66, 67, 68, 73, 127, 255], "src_": 16, "dst_": 16, "pick": [16, 97, 98], "vizmap": [16, 158, 169, 223, 234], "128": [16, 233, 258, 259, 262], "cosine_bell_viz": [16, 18, 223, 268, 273, 278], "dlon": [16, 91, 223, 268, 273, 278], "dlat": [16, 91, 223, 268, 273, 278], "remap_method": [16, 223, 268, 273, 278], "src_from_mpa": 16, "dst_global_lon_lat": 16, "lon_min": [16, 91], "With": [16, 236], "approach": [16, 232, 235, 236, 252, 255, 264], "perhap": [16, 18, 37, 228, 230, 234], "cover": [16, 249, 255], "nearli": [16, 232, 234, 253, 254, 255], "workflow": [16, 232, 236], "critic": [17, 255], "easiest": [17, 124, 236], "validate_var": [17, 34, 37, 203, 232], "meth": 17, "add_output_fil": [17, 35, 232, 234, 255], "temperatur": [17, 155, 221, 222, 226, 227, 232, 251, 255, 267, 268, 272, 273, 278], "salin": [17, 155, 221, 222, 227, 232, 255, 267, 268, 272, 273, 278], "done": [17, 31, 41, 232, 236, 255, 274], "compare_vari": [17, 255], "filename1": [17, 110, 255], "filename2": [17, 110, 255], "compact": [17, 255], "output_full_run": 17, "output_restart_run": 17, "all_pass": [17, 110], "valueerror": [17, 235], "quiet": [17, 99, 100, 110, 115], "report": 17, "threshold": [17, 268, 270, 271], "l1": [17, 110], "00000000000000e": 17, "l2": [17, 110], "l_infin": 17, "linf": [17, 110], "test_nightly_latest": 17, "threads_test": 17, "1thread": [17, 222, 267], "2thread": [17, 267], "test_20210616": 17, "further_valid": 17, "zero": [17, 212, 213, 214, 215, 216, 221, 222, 227, 255, 268, 272], "l1_norm": [17, 110], "l2_norm": [17, 110], "linf_norm": [17, 110], "nonzero": [17, 110], "solut": [17, 123, 177, 178, 179, 187, 188, 189, 191, 192, 193, 194, 197, 199, 223, 225, 226, 233, 252, 255, 265, 269, 270], "aspect": [18, 255], "routin": 18, "plot_horiz_field": [18, 232, 255], "patch": [18, 112, 255], "style": [18, 127, 254, 255], "edg": [18, 88, 91, 95, 112, 177, 178, 191, 192, 221, 255], "polygon": 18, "character": 18, "accordingli": [18, 84], "final_normalveloc": [18, 255], "t_index": [18, 112, 255], "vmin": [18, 112, 223, 255, 268], "max_veloc": [18, 255], "vmax": [18, 112, 223, 255, 268], "cmap": [18, 112, 232, 255], "cmo": [18, 232, 255], "balanc": [18, 232, 255], "show_patch_edg": [18, 112, 232, 255], "globe": 18, "plot_glob": 18, "plot_land": [18, 111], "disabl": [18, 221, 268, 280], "contin": [18, 111], "overlain": 18, "cmocean": [18, 232, 255], "noqa": [18, 58, 232, 255], "f401": [18, 232, 255], "xr": [18, 177, 178, 179, 191, 192, 193, 232, 255], "open_dataset": [18, 232, 255], "tracer1": 18, "isel": 18, "nvertlevel": [18, 112, 211, 217, 218, 232, 255, 264], "out_filenam": [18, 108, 111, 210], "colormap_sect": [18, 111], "titl": [18, 111, 112], "colormap": [18, 111, 112, 223, 255, 268], "cosin": [18, 160, 161, 164, 167, 169, 171, 223, 255, 265, 266, 269, 273, 278], "bell": [18, 160, 161, 164, 167, 169, 171, 223, 255, 265, 266, 269, 273, 278], "converg": [18, 173, 174, 187, 188, 223, 225, 226, 230, 233, 254, 255, 266, 268, 270, 273, 278], "colormap_nam": [18, 111, 223, 268], "viridi": [18, 223, 255, 268], "norm": [18, 110, 111, 223, 268], "norm_typ": [18, 111, 223, 268], "norm_arg": [18, 111, 223, 268], "colorbar": [18, 111, 112, 223, 268], "tick": [18, 111, 223, 268], "mark": [18, 223, 236, 268], "colorbar_tick": [18, 111, 223, 268], "matplotlib": [18, 255], "standard": [18, 235, 236, 245, 255, 258, 274], "symlog": [18, 111], "symmetr": 18, "central": [18, 268], "logarithm": [18, 112], "color": [18, 112], "normal": [18, 177, 178, 191, 192, 221, 232, 233, 236, 255, 261], "symlognorm": 18, "lognorm": 18, "hous": [19, 268], "kei": [19, 43, 104, 234], "indir": [21, 34, 43, 86, 130, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 203, 205, 207, 229, 232, 242, 244, 246], "max_memori": [21, 31, 34, 41, 130, 232], "mesh_filenam": [21, 76, 130], "graph_filenam": [21, 76, 130], "make_yaml": 21, "stride": [21, 33, 130], "consist": [21, 33, 124, 130, 219, 236, 255, 256, 267], "partit": [21, 30, 40, 53, 76, 130, 222, 225, 226, 232, 256, 257, 258, 259, 260, 262, 274], "model_config_data": 21, "streams_data": 21, "neither": [21, 34, 43, 86, 130, 139, 203, 232], "nor": [21, 34, 43, 86, 130, 139, 203, 232, 255], "append": [21, 34, 36, 43, 86, 130, 137, 138, 139, 142, 145, 146, 148, 150, 153, 154, 156, 203, 232, 242, 244, 246], "ideal": [21, 31, 34, 41, 82, 83, 86, 127, 130, 139, 180, 194, 203, 204, 205, 207, 228, 232, 235, 254, 255, 256, 280], "accommod": [21, 31, 34, 41, 82, 83, 130], "fewer": [21, 31, 34, 41, 82, 83, 130, 139, 180, 194, 203, 232, 255, 274], "memori": [21, 31, 34, 41, 130, 232, 256], "mb": [21, 31, 34, 41, 130, 232, 256], "placehold": [21, 31, 34, 41, 130, 232, 274], "overridden": [27, 133, 234, 255], "diverg": [27, 133], "counterpart": [27, 127, 133], "nest": [27, 113, 115, 133], "graph_fil": 28, "run_as_subprocess": [34, 232], "smallest": [34, 232, 253, 264, 280], "unit": [34, 87, 91, 94, 232, 253, 267, 280], "term": [34, 253, 255, 270, 271], "necessarili": [34, 36], "input_data": 34, "until": [34, 35, 232, 234, 274], "finish": [34, 35, 73, 232, 255], "known": [34, 35, 124, 223, 232, 255], "suffici": [34, 232], "establish": [34, 35, 232], "is_depend": [34, 232], "combin": [34, 36, 43, 49, 54, 85, 113, 232, 233, 234, 252, 255, 256, 274], "machine_info": [34, 232], "machineinfo": 34, "config_filenam": [34, 43, 101, 232, 234], "base_work_dir": [34, 43, 232, 234], "log_filenam": [34, 43, 232, 234], "redirect": [34, 232], "extern": [34, 124, 219, 229, 232, 248, 265, 275], "turn": [34, 48, 229, 232, 252, 255, 272], "access": [35, 234, 235, 236, 255, 257, 261, 262], "database_compon": [36, 232], "work_dir_target": [36, 232], "come": [36, 124, 232, 236, 255, 257, 258, 259, 260, 261, 262, 265], "_database_root": 36, "available_resourc": [38, 81], "constrain": [38, 131, 140, 165, 181, 195, 222, 225, 226, 232, 255], "cores_per_nod": [38, 81, 84, 124, 256, 257, 258, 259, 260, 261, 262, 274], "everi": [39, 172, 222, 232, 234, 235, 251, 252, 253, 255, 267, 272], "child": [39, 172, 229, 232, 234, 235], "subtask": 41, "step_symlink": [43, 234], "outsid": [43, 44, 228, 230, 232, 234, 236], "stdout_logg": [43, 234], "goe": [43, 232, 234, 255], "regardless": [43, 234], "new_step_log_fil": [43, 234], "run_by_default": [44, 232, 234], "assum": [45, 105, 114, 124, 234, 236, 255, 262, 267], "prior": [45, 232, 234], "step_path": 47, "variant": [47, 160, 222, 228, 233, 235, 236, 255, 261, 264, 267, 268], "uncach": 47, "datestamp": 47, "yymmdd": [47, 256], "dry": [47, 233], "meta": 49, "empti": [49, 232, 235, 236, 253, 255], "link_nam": 52, "overwrit": 52, "55742015": 52, "fileexistserror": 52, "unless": [52, 100, 236], "isadirectoryerror": 52, "qo": [53, 257, 258, 260, 261, 262, 274], "qualiti": [53, 257, 258, 260, 261, 262, 274], "servic": [53, 257, 258, 260, 261, 262, 274], "constraint": [53, 262, 274], "wall_tim": [53, 274], "wall": [53, 274], "target_cor": 54, "min_cor": 54, "decomposition_test": [58, 228, 274], "decompositiontest": [58, 228], "e501": [58, 255], "turquois": [58, 258], "usr": [58, 124, 258, 274], "climat": [58, 257, 258, 259, 261, 274], "mhoffman": 58, "constant": [59, 66, 67, 127, 221, 255, 267, 268, 270, 272, 273, 278], "latitud": [60, 67, 87, 89, 91, 94, 111, 223, 268, 273, 278], "longitud": [60, 67, 68, 74, 87, 89, 91, 94, 111, 223, 268, 273, 278], "ndarrai": [60, 67, 68, 74, 111, 135, 209, 210, 255], "degre": [60, 67, 68, 74, 91, 256, 267], "length": [60, 67, 68, 74], "180": [60, 67, 68, 74, 91, 234, 268], "90": [60, 67, 68, 74, 232, 234, 268], "static": [61, 62], "rule": 61, "thumb": 61, "achiev": [62, 233], "uniform": [66, 71, 164, 222, 223, 225, 226, 228, 234, 255, 256, 267, 268, 270, 271, 272, 273, 278], "natur": 71, "jigsawpi": [72, 232], "jigsaw_jig_t": 72, "meti": 76, "defaults_filenam": 77, "total": [81, 232, 233, 235, 255, 256, 258, 274], "substep": [82, 83], "command_line_arg": 82, "cpus_per_nod": 84, "map_filenam": 86, "src_grid_info": 86, "dst_grid_info": 86, "neareststod": [86, 223, 268, 273, 278], "conserv": [86, 223, 268, 273, 278], "map_": 86, "source_typ": 86, "_": [86, 124, 232, 234, 236, 255, 272], "dest_typ": 86, "1d": [87, 91, 94, 111, 127, 209, 210, 211, 212, 213, 214, 215, 217, 218], "2d": [87, 91, 94, 111], "5x0": [87, 91, 94], "5degre": [87, 91, 94], "coordin": [87, 89, 90, 94, 96, 111, 112, 177, 191, 211, 217, 218, 263, 265, 267, 268, 270, 271, 272, 273, 277], "mesh_typ": [88, 95, 228, 232, 234], "vertex": [88, 95], "x_var": [90, 96], "y_var": [90, 96], "proj_attr": [90, 96], "proj_str": [90, 96], "proj": [90, 96], "left": [91, 127, 255, 264, 267, 268], "remapp": [92, 93], "remap_fil": 92, "progress": [99, 100], "is_task": 100, "steps_to_skip": 100, "unpickl": [102, 232], "cached_step": 103, "identifi": [103, 124, 229, 248, 280], "task_list": 104, "_all": 104, "streams_filenam": 105, "lxml": [105, 107, 119], "etre": [105, 107, 119], "new_child": 106, "children": 106, "sub": [106, 255], "new_tre": 107, "infin": 110, "toler": 110, "data_arrai": 111, "colorbar_label": 111, "subtitl": 111, "field_nam": 112, "out_file_nam": 112, "ax": 112, "z_index": 112, "cmap_set_und": 112, "cmap_scal": 112, "cmap_titl": 112, "horizont": [112, 127, 221, 222, 223, 225, 226, 227, 267, 270, 271, 272], "depth": [112, 127, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 255, 256, 264, 267, 268, 270, 271, 272, 273], "slice": 112, "fieldnam": 112, "visibl": 112, "bar": 112, "classmethod": 114, "jinja": 114, "namelist_templ": 118, "polarisyaml": [118, 119], "processed_registry_filenam": 119, "registri": [119, 221, 248], "steam": 119, "1_anvil_intel_impi": [120, 124], "mvapich": [120, 124, 257], "ve": [120, 121, 122, 123, 125, 236, 255], "1_anvil_gnu_openmpi": 120, "1_chicoma": 121, "cpu_gnu_mpich": [121, 125], "crai": [121, 124, 125, 258, 262], "1_chrysalis_intel_openmpi": 122, "1_chrysalis_gnu_openmpi": 122, "soon": [123, 124, 255, 274], "1_compy_intel_impi": 123, "1_compy_gnu_openmpi": 123, "particular": [124, 228, 236, 254, 258, 261, 274], "load_polaris_env": [124, 236, 255, 274], "right": [124, 127, 234, 236, 255, 256, 264, 267, 268, 274], "therefor": [124, 232, 253, 255], "chicoma": [124, 261, 274], "mpich": [124, 236, 254, 258, 262, 274], "compi": [124, 260, 274], "pm": [124, 262, 274], "compymcnodefac": [124, 261], "perlmutt": [124, 258, 261, 274], "pretti": [124, 232, 235, 255, 256], "conda_path": [124, 236], "osx": [124, 261], "clang": [124, 236], "1_": 124, "morpheu": 124, "cobalt": [124, 257, 258, 259, 260, 261, 262], "single_nod": [124, 256, 257, 258, 259, 260, 261, 262, 274], "mpirun": [124, 252, 256, 257, 258, 259, 260, 261, 262, 274], "srun": [124, 232, 252, 255, 256, 257, 258, 259, 260, 261, 262, 274], "parallel_execut": [124, 252, 256, 257, 258, 259, 260, 261, 262, 274], "modules_befor": [124, 258, 262], "modules_aft": [124, 258, 262], "polaris_env": [124, 257, 258, 259, 260, 261, 262], "deploi": [124, 236, 254, 257, 258, 259, 260, 261, 262], "mpi_gnu": [124, 257, 258, 259, 260, 261, 262], "hdf5": [124, 257, 258, 259, 260, 261, 262], "use_e3sm_hdf5_netcdf": [124, 257, 258, 259, 260, 261, 262], "discoveri": 124, "hostnam": 124, "hostname_contain": 124, "queu": 124, "laptop": [124, 236, 255, 256], "workstat": [124, 236], "high": [124, 232, 259, 261], "hpc": [124, 236, 258, 261], "safest": [124, 236], "mpi_": 124, "simpl": [124, 127, 235, 248, 255, 274], "compiler_gnu": 124, "compiler_intel": 124, "hopefulli": [124, 256], "parlanc": 124, "concret": 124, "ubuntu": 124, "spec": [124, 252, 262], "gcc": 124, "curl": 124, "81": 124, "buildabl": 124, "install_missing_compil": 124, "cc": 124, "bin": [124, 236, 262, 274], "cxx": 124, "f77": 124, "fc": 124, "operating_system": 124, "ubuntu22": 124, "04": 124, "extra_rpath": 124, "luck": 124, "catch": [124, 233], "22": 124, "guess": [124, 255], "correct": [124, 236], "potenti": [124, 135, 148, 232, 255, 267], "purg": 124, "perl": 124, "32": [124, 233, 274], "bsnc6lt": 124, "ugetvbp": 124, "sxfyy4k": 124, "2020": 124, "304": 124, "n3b5fye": 124, "j3zxncu": 124, "7ohuiwq": 124, "k2zu3y5": 124, "mirrcz7": 124, "variou": [124, 201, 232, 236, 240], "ask": 124, "gb": 124, "minut": [124, 222, 233, 267, 279], "hour": [124, 225, 226, 233, 251, 258, 262, 270, 271, 274, 277], "zlib": 124, "incompat": 124, "ubuntu20": 124, "readlin": 124, "pkgconf": 124, "spackdir": 124, "env": [124, 262], "arch": 124, "repositori": [124, 230, 254, 255, 274], "x86_64_v4": 124, "free": [124, 221, 255, 256], "touch": [124, 236], "everyth": 124, "1_pm": 125, "ever": [127, 235], "expand": [127, 264], "oceanmodelstep": [127, 232, 255], "decid": [127, 255], "veri": [127, 229, 232, 235, 236, 248, 255, 272], "earli": [127, 265, 274], "stage": [127, 221, 232, 234, 236, 244, 251, 265, 274], "map_yaml_to_namelist": 127, "heurist": 127, "200": [127, 225, 226, 255, 267, 270, 271, 272], "round": [127, 268], "cell_count": [127, 131, 140, 165, 181, 195, 255], "goal_cells_per_cor": [127, 255, 268, 270, 271, 273, 278], "pinch": 127, "2000": [127, 228, 249, 251, 255, 277], "max_cells_per_cor": [127, 255, 268, 270, 271, 273, 278], "seciton": 127, "control": [127, 223, 232, 256, 267, 268, 272, 274], "scale": [127, 267, 274], "tri": [127, 235], "apport": 127, "caviti": [127, 235, 255, 256, 264], "frazil": 127, "flux": [127, 221, 272], "fix": [127, 255], "add_spherical_base_mesh_step": [127, 234], "grid_1d": 127, "generate_1d_grid": 127, "vertical_grid": [127, 209, 211, 217, 218, 228, 232, 255, 256, 264, 267, 268, 270, 271, 272, 273], "z": [127, 212, 213, 214, 215, 216, 217, 218, 255, 267, 268, 270, 271, 272, 273], "star": [127, 216, 218, 255, 267, 268, 270, 271, 272, 273], "init_vertical_coord": [127, 232, 255], "minlevelcel": [127, 211, 213, 214, 215, 216, 217, 218, 255], "maxlevelcel": [127, 211, 212, 213, 214, 215, 216, 217, 218, 255], "cellmask": [127, 211, 214, 217, 218, 255], "zmid": [127, 211, 217, 218, 255], "restingthick": [127, 211, 216, 217, 218, 255], "bottomdepth": [127, 211, 212, 214, 215, 216, 217, 218, 232, 255], "entir": [127, 255, 267, 279], "petersen": [127, 236, 255, 267], "et": [127, 255, 264, 267, 268, 270, 271], "al": [127, 255, 264, 267, 268, 270, 271], "2015": [127, 255, 267], "int_": 127, "rho": 127, "dv": 127, "sort": [127, 229, 230, 235, 236], "increas": [127, 235], "compute_rp": [127, 255], "csv": [127, 255], "subdivid": [129, 234], "dynamic_ntask": 130, "dynam": [130, 219, 227, 256, 267, 268, 272, 273], "available_cor": 132, "estim": [132, 134, 255], "initial_state_file_nam": [135, 255], "output_fil": [135, 232, 255], "energi": [135, 148, 254, 255, 267], "state": [135, 137, 138, 145, 148, 153, 221, 222, 223, 225, 226, 227, 232, 233, 255, 268], "len": [135, 255], "barotrop": [139, 203, 232, 255, 267, 272], "shorter": [145, 233, 241], "dai": [148, 222, 223, 227, 251, 255, 267, 268, 272, 277], "step_subdir": [154, 242], "processor": [154, 232, 242, 267], "rpe": [156, 229, 235, 255, 274], "include_viz": [158, 234], "less": [158, 161, 232, 264], "rmsevalu": 162, "squar": [162, 223, 225, 226, 270, 271], "ncell": [162, 232, 255], "viz_map": [169, 234], "inerti": [173, 174, 175, 177, 180, 183, 185, 225, 265, 269], "graviti": [173, 174, 175, 177, 180, 183, 185, 225, 265, 269], "wave": [173, 174, 175, 177, 180, 183, 185, 191, 225, 232, 255, 265, 267, 269, 271], "taskdir": [175, 180, 183, 185, 189, 194, 197, 199], "analys": [175, 189], "exact": [177, 178, 179, 191, 192, 193, 223, 225, 226, 235, 270, 271], "angleedg": [177, 191], "angl": [177, 191], "posit": [177, 191, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 255, 264, 272], "xcell": [177, 191, 232, 255], "ycell": [177, 191, 232, 255], "xedg": [177, 191, 232, 255], "yedg": [177, 191], "f0": 177, "corioli": [177, 225, 226, 255, 267, 268, 271, 272], "eta0": [177, 191], "amplitid": [177, 191], "kx": [177, 191], "ky": [177, 191], "angular": [177, 191], "frequenc": [177, 191, 222], "veloc": [178, 192, 221, 222, 225, 226, 234, 236, 255, 268, 272, 274], "evalu": [178, 179, 192, 193], "norm_vel": 178, "eta": [179, 193, 270, 271], "manufactur": [187, 188, 189, 191, 194, 197, 199, 226, 265, 269], "column": [201, 202, 204, 205, 207, 227, 236, 240, 241, 242, 244, 245, 246, 248, 249, 251, 265, 269, 274, 275, 276], "mix": [202, 228, 229, 270, 271, 272], "param": [202, 204], "resources_fix": 203, "ag": [204, 205, 207], "evolv": [204, 254, 264, 268, 272], "ideal_ag": [205, 207], "layer": [209, 210, 211, 215, 216, 217, 218, 221, 222, 225, 226, 227, 255, 256, 264, 267, 268, 270, 271, 272, 273], "meter": [209, 210], "bottom": [211, 212, 213, 214, 215, 216, 217, 218, 221, 255, 256, 264, 267, 268, 270, 271, 272, 273], "thick": [211, 215, 216, 217, 218, 222, 227, 249, 255, 256, 264, 267, 270, 277], "stretch": [211, 217, 218, 255, 264], "elev": [211, 217, 218, 255, 264], "midpoint": [211, 217, 218, 255], "reftopdepth": [211, 214, 215, 217, 218, 255], "down": [211, 212, 213, 214, 215, 216, 217, 218, 255, 264, 268], "ref": [211, 217, 218, 255], "middl": [211, 217, 218, 255], "refbottomdepth": [211, 212, 213, 214, 215, 217, 218, 232, 255], "refinterfac": [211, 217, 218, 255], "element": [211, 217, 218, 255], "vertcoordmovementweight": [211, 217, 218, 255], "movement": [211, 217, 218, 255], "alter": [212, 213, 232, 234, 254, 255, 264, 267, 268, 270, 271, 272, 273], "partial": [212, 213, 255, 264, 267, 268, 270, 271, 272, 273], "seafloor": [212, 214, 215, 216, 264], "unstretch": 216, "shelv": [219, 256, 264], "ssh_adjust": [219, 232, 256], "compass_branch": 219, "example_compact": [219, 229, 248, 256], "default_input": [219, 229, 248, 255, 256], "ocean_model": [219, 236, 256], "latest": [219, 236, 248, 254, 265, 274], "compat": [219, 236, 248, 252, 254], "verison": 219, "inertial_gravity_wav": [219, 224, 229, 270, 279], "manufactured_solut": [219, 224, 229, 271], "single_column": [219, 224, 229, 248, 250, 272], "minim": 221, "fcell": [221, 232, 255, 268], "fedg": [221, 232, 255, 268], "fvertex": [221, 232, 255, 268], "slip": 221, "solid": [221, 249, 267, 268], "tangenti": 221, "nonperiod": 221, "drag": [221, 223], "mass": 221, "momentum": [221, 222, 223, 225, 226, 270, 271], "scalar": 221, "rigid": 221, "solv": [221, 252, 264], "mid": [221, 267], "vari": [221, 223, 232, 252, 261, 264, 268], "consult": [221, 255], "tidal_forc": 221, "eddi": [222, 267], "addition": [222, 223, 225, 226, 227, 232, 257, 258, 259, 260, 262], "diffus": [222, 223, 225, 226, 227], "50": [222, 225, 226, 255, 267, 270, 271, 272], "prescrib": [222, 225, 226], "intens": 222, "enough": [222, 232, 235, 255], "cosinebel": [223, 234], "24": [223, 268, 277], "advect": [223, 268, 270, 271, 272], "shape": [223, 268], "blob": 223, "around": [223, 255, 256, 267, 268], "rate": [223, 225, 226, 255, 268, 270, 271, 272], "distribut": 223, "rmse": [223, 225, 226, 270, 271], "fast": [223, 255], "shallow": [225, 236, 268, 270, 271, 273], "water": [225, 255, 267, 268, 270, 271, 272, 273], "100": [225, 226, 227, 264, 270, 271, 272], "25": [225, 226, 270, 271, 272], "inertialgravitywav": 225, "calcul": [225, 232, 234], "exactsolut": [225, 226], "obtain": [225, 226, 236, 258], "normal_veloc": [225, 226, 232, 255], "assign": [225, 226, 268], "simul": [225, 226, 232, 253, 255, 266, 267, 270, 271, 273, 274, 278], "fall": [225, 226, 274], "accept": [225, 226], "bound": [225, 226], "manufacturedsolut": 226, "exercis": [227, 251, 268, 272], "kpp_test": 227, "mixedlayerdepthsoutput": 227, "idealagetrac": [227, 272], "dimens": [227, 267], "single_column_forc": [227, 272], "profil": [227, 252, 272], "throughout": [227, 267, 272], "idealag": 227, "enabel": 227, "formal": 228, "organ": [228, 230, 233, 254], "conceptu": [228, 235], "broadli": [228, 229, 235], "realist": [228, 254, 280], "greenland": [228, 254, 280], "2000m": [228, 274], "34": [228, 274], "halfar": 228, "cism": 228, "dome_typ": 228, "closest": 228, "put_origin_on_a_cel": 228, "hydrologi": 228, "hydro": [228, 280], "dome_viz": 228, "time_slic": 228, "save_imag": 228, "hide": [228, 255], "hide_fig": 228, "helper": [228, 229], "clutter": 228, "smoke_test": [228, 234], "smoketest": [228, 234], "restart_test": 228, "restarttest": 228, "add_dome_task": 228, "variable_resolut": [228, 232, 274], "add_task": [228, 229], "talk": 228, "reduc": [228, 232], "among": [228, 230, 236, 255], "encompass": 229, "perspect": 229, "four": 229, "major": [229, 232], "broader": 229, "univers": 229, "add_cosine_bell_task": 229, "add_inertial_gravity_wave_task": 229, "add_manufactured_solution_task": 229, "add_single_column_task": 229, "alphabet": [229, 255], "resolution_to_subdir": 229, "resdir": 229, "landice_model": [229, 236], "diagram": 230, "green": 230, "blue": [230, 257, 274], "orang": 230, "red": 230, "laid": 230, "fig": 230, "organiz": 230, "concept": [230, 235, 255, 280], "somewher": 232, "multiprocess": [232, 235, 256], "aspir": 232, "emploi": 232, "unwant": 232, "outer": 232, "inner": 232, "dome_varres_grid": 232, "signific": [232, 233, 234], "neglig": 232, "culled_graph": [232, 255], "meshstep": 232, "getint": 232, "mesh_cpus_per_task": 232, "mesh_min_cpus_per_task": 232, "fit": [232, 256], "applic": [232, 235, 236, 273, 278], "launch": [232, 254], "write_netcdf": [232, 255], "convers": [232, 255], "greater": [232, 255], "graphinfofilenam": [232, 255], "culled_mesh": [232, 255], "use_dist": [232, 255, 267], "gradient_width_dist": [232, 255, 267], "gradient_width_frac": [232, 255, 267], "bottom_temperatur": [232, 255, 267], "surface_temperatur": [232, 255, 267, 272], "temperature_differ": [232, 255, 267], "coriolis_paramet": [232, 255, 267, 270, 271, 272], "x_cell": [232, 255], "y_cell": [232, 255], "bottom_depth": [232, 255, 256, 264, 267, 268, 270, 271, 272, 273], "ones_lik": [232, 255], "zeros_lik": [232, 255], "x_min": [232, 255], "min": [232, 255, 267, 272], "x_max": [232, 255], "y_min": [232, 255], "y_max": [232, 255], "y_mid": [232, 255], "x_perturb_min": [232, 255], "x_perturb_max": [232, 255], "perturb_width": [232, 255, 267], "y_offset": [232, 255], "sin": [232, 255, 267, 270, 271], "pi": [232, 255, 264, 267, 268], "temp_vert": [232, 255], "frac": [232, 255, 264, 267, 270], "logical_and": [232, 255], "transpos": [232, 255], "3rd": [232, 255], "crest": [232, 255, 267], "expand_dim": [232, 255], "dim": [232, 255], "axi": [232, 255], "broadcast": [232, 255], "nedg": [232, 255], "xvertex": [232, 255], "attr": [232, 255], "initial_temperatur": [232, 255], "initial_normal_veloc": [232, 255], "superclass": 232, "commandlin": 232, "harm": 232, "likewis": [232, 255], "subsequ": [232, 279], "arisen": 232, "problemat": 232, "add_depend": 232, "usual": [232, 234, 236, 255, 274], "forwardstep": 232, "mesh_path": 232, "mesh_step": 232, "with_ice_shelf_cav": 232, "initial_state_target": 232, "adjusted_init": 232, "forcing_data": 232, "init_mode_forcing_data": 232, "entha_analy_result": 232, "mat": 232, "enthalpy_benchmark": 232, "ourselv": 232, "problem": [232, 236, 252, 255], "firewal": 232, "bedmachineantarctica_v2_and_gebco_2022_0": 232, "05_degree_20220729": 232, "slate": 232, "icepresent_qu60km_polar": 232, "practic": [232, 235, 236], "straightforward": 232, "commonli": [232, 253], "notat": [232, 273, 278], "phc": [232, 264], "That": [232, 235, 253, 255, 274], "word": 232, "ff": 232, "quwisc240": [232, 235, 274], "90c": 232, "91c": 232, "92": [232, 264], "91": 232, "sowisc12to60": [232, 274], "performance_test": 232, "effici": [232, 255], "transfer": 232, "feasibl": 232, "overhead": 232, "philosophi": [233, 235, 255], "context": [233, 255], "namesak": 233, "256": [233, 258, 262], "count": [233, 253], "quicker": 233, "exce": 233, "offer": 233, "benefit": [233, 254], "bug": 233, "coverag": 233, "exhaust": 233, "recent": [233, 265, 275], "merg": 233, "reach": 233, "steadi": 233, "wet": 233, "fundament": 234, "incorpor": 234, "velo_solv": 234, "sia": [234, 236], "fo": 234, "add_step": [234, 255], "runmodel": 234, "run_step": 234, "0200": 234, "00_00": [234, 249, 255], "fine": [234, 255, 272], "recip": 234, "demonstr": [234, 255], "fairli": [234, 235, 236, 255], "_setup_step": [234, 255], "default_resolut": 234, "480": [234, 268], "150": [234, 268], "210": [234, 264, 268], "prioriti": [234, 258], "dtype": [234, 255], "remove_step": 234, "cos_bell_dir": 234, "_init_": 234, "_forward_": 234, "with_viz_dir": 234, "_map_": 234, "_viz_": 234, "rare": [234, 236], "480km": 234, "closer": 234, "inherit": [234, 235, 255], "filesfore3sm": 234, "configure_global_ocean": 234, "initial_condit": 235, "dig": [235, 256], "infrastructur": [235, 255], "background": 235, "adher": [235, 255], "pep8": [235, 236], "bot": [235, 264], "violat": 235, "consid": 235, "editor": 235, "pycharm": [235, 236, 255], "spyder": 235, "linter": 235, "flake8": [235, 236], "discourag": [235, 253], "reformat": 235, "autopep8": 235, "undesir": 235, "lint": 235, "wildcard": 235, "vim": [235, 255], "plugin": 235, "id": [235, 236], "commit": [235, 236], "why": 235, "sound": 235, "subpackag": 235, "understand": [235, 256], "downstream": 235, "tutori": [235, 236], "clu": 235, "intro": 235, "docstr": [235, 254, 255], "strip": 235, "mpas_ocean": 235, "hidden": 235, "shortcut": [235, 274], "referenc": [235, 255], "mention": 235, "dot": 235, "charact": 235, "unix": [235, 254], "distinct": 235, "mayb": [235, 255], "machine_config": 235, "endswith": 235, "splitext": 235, "exactli": [235, 236, 255, 264], "move": [235, 236, 255, 273, 278], "renam": 235, "visa": 235, "versa": 235, "comfort": [235, 255], "orient": 235, "program": [235, 256], "led": 235, "felt": 235, "contribut": 235, "hesit": 235, "predecessor": [235, 253, 254], "clumsi": 235, "harder": 235, "outcom": 235, "augment": 235, "explain": 235, "hope": 235, "dens": 235, "learn": [235, 255], "curv": 235, "worth": [235, 255], "skill": 235, "endeavor": 235, "readabl": 235, "manipul": 235, "get_available_cores_and_nod": 235, "theoret": 235, "dozen": 235, "split": 235, "theori": 235, "biogeochemistri": 235, "ksh": 236, "mac": [236, 254], "csh": 236, "tcsh": 236, "temporarili": 236, "recogn": [236, 256, 274], "permiss": 236, "anyon": 236, "caus": [236, 258, 262, 264], "person": [236, 252], "base_path_to_install_or_update_conda": 236, "with_netlib_lapack": 236, "flavor": [236, 255], "troubl": [236, 255], "recognit": 236, "trilino": 236, "downsid": 236, "unneed": 236, "reinstal": 236, "caution": 236, "load_": 236, "encod": 236, "load_dev_polaris_": [236, 255], "env_nam": 236, "dev_polaris_": [236, 252], "workdir": [236, 274], "unexpect": [236, 253, 255], "occur": [236, 252], "echo": 236, "proceed": 236, "notic": 236, "conda_env": [236, 260, 274], "rememb": 236, "incorrect": 236, "unus": 236, "session": [236, 255], "pip": 236, "substanti": 236, "risk": [236, 255], "unsupport": 236, "env_onli": 236, "mpas_make_target": [236, 274], "scientif": [236, 274], "_albani": 236, "instruct": [236, 255], "es3m": 236, "compli": 236, "memor": 236, "guidelin": 236, "complianc": 236, "checker": 236, "isort": 236, "flynt": 236, "mypi": 236, "77": 236, "e302": 236, "blank": 236, "resolv": 236, "simpler": [236, 255], "new_branch_nam": 236, "put": [236, 255], "disk": [236, 256, 258, 262], "respons": 236, "simplest": 236, "your_new_branch": 236, "restart_filenam": 242, "polaris_branch": 248, "post": 248, "src": 248, "registry_process": 248, "seaice_model": 248, "1m": [249, 277], "disc": [249, 277], "config_initial_ice_area": 249, "config_initial_ice_volum": 249, "config_atmospheric_forcing_typ": 249, "config_forcing_start_tim": 249, "config_forcing_cycle_start": 249, "config_forcing_cycle_dur": 249, "config_forcing_precipitation_unit": 249, "mm_per_sec": 249, "config_forcing_sst_typ": 249, "ncar": 249, "config_update_ocean_flux": 249, "config_include_pond_freshwater_feedback": 249, "standard_phys": 251, "standardphys": 251, "year": [251, 265, 277], "volum": 251, "snow": 251, "exact_restart": 251, "exactrestart": 251, "geo": 252, "cartopi": 252, "14": 252, "np110py27_4": 252, "calledprocesserror": 252, "deploy_tmp": 252, "vpn": 252, "site": 252, "shell": [252, 254], "honor": 252, "wide": 252, "spawn": 252, "usernam": [252, 255, 258, 262], "proxy_en": 252, "all_proxi": 252, "proxyout": 252, "8080": 252, "no_proxi": 252, "localhost": [252, 256, 261, 262, 274], "127": 252, "proxy_dis": 252, "unset": 252, "anytim": 252, "fatal": 252, "mpi_init": 252, "stack": 252, "mpir_init_thread": 252, "159": 252, "mpid_init": 252, "164": 252, "mpidi_ch3_init": 252, "95": 252, "mpid_nem_init": 252, "314": 252, "mpid_nem_tcp_init": 252, "173": 252, "mpid_nem_tcp_get_business_card": 252, "395": 252, "getsockinterfaceaddr": 252, "369": 252, "pn2034311": 252, "errno": 252, "host": [252, 256, 261, 274], "focus": 253, "plu": 253, "autom": 254, "exascal": 254, "earth": 254, "kept": 254, "sens": [254, 255], "boundari": [254, 267, 280], "expert": 254, "uncoupl": 254, "quick": [254, 255, 265, 275], "queue": 254, "beginn": [254, 255], "advanc": [254, 255], "mpas_to_yaml": 254, "troubleshoot": 254, "proxi": 254, "lanl": [254, 256, 258], "gethostbynam": 254, "glossari": 255, "stick": 255, "miniconda": 255, "3_chrysalis_intel_openmpi": 255, "strict": 255, "push": 255, "lowercas": 255, "hyphen": 255, "settl": 255, "desktop": 255, "realli": [255, 262], "nice": [255, 262], "supercomput": 255, "yet_another_channel": 255, "testgroup": 255, "vi": 255, "polaris_head": 255, "yetanotherchannel": 255, "instanc": 255, "repres": [255, 264, 268], "highli": 255, "camelcas": 255, "capit": 255, "letter": 255, "cap": 255, "awkward": 255, "encourag": 255, "enclos": 255, "briefli": 255, "baroclinicchannel": 255, "globalconverg": 255, "add_test_group": 255, "interest": 255, "test_group": 255, "add_test_cas": 255, "anyth": 255, "testcas": [255, 256, 267, 272, 274], "probabl": [255, 261], "suppos": 255, "easili": 255, "tide": 255, "analyz": 255, "sai": [255, 261], "res_str": 255, "1000": [255, 256, 264, 267, 270, 271], "still": [255, 265, 273, 274, 278], "ti": 255, "loop": 255, "1km": [255, 267, 274], "4km": [255, 267, 274], "coarsest": [255, 256], "especi": 255, "promot": 255, "pattern": 255, "familiar": 255, "seen": 255, "brows": 255, "row": 255, "disadvantag": 255, "foremost": 255, "magic": 255, "effect": [255, 273], "pain": 255, "160": [255, 267], "500": [255, 256, 264, 267], "path_to_mpas_ocean": 255, "path_to_working_dir": 255, "cat": 255, "slurm_jobid": 255, "_run_test": 255, "gpf": 255, "fs1": 255, "cbegeman": 255, "grid_typ": [255, 256, 264, 267, 268, 270, 271, 272, 273], "vert_level": [255, 256, 264, 267, 268, 270, 271, 272, 273], "coord_typ": [255, 264, 267, 268, 270, 271, 272, 273], "partial_cell_typ": [255, 264, 267, 268, 270, 271, 272, 273], "min_pc_fract": [255, 264, 267, 268, 270, 271, 272, 273], "everywher": 255, "depress": [255, 264], "mostli": 255, "logic": [255, 267], "northern": [255, 267], "half": [255, 267], "southern": [255, 267], "halv": [255, 267], "gradient": [255, 267, 270, 271, 272], "500km": [255, 267], "40e3": [255, 267], "35": [255, 267, 268, 272, 273, 274, 278], "2e": [255, 267], "connect": [255, 262], "match": 255, "light": 255, "e3sm_compon": 255, "interact": [255, 258, 261, 262, 274], "interrupt": 255, "pty": 255, "navig": 255, "newli": 255, "bunch": 255, "didn": 255, "mistak": 255, "finger": 255, "cross": 255, "initial_normalveloc": 255, "initial_salin": 255, "obvious": 255, "stress": [255, 272], "bring": 255, "landicemodelstep": 255, "huge": 255, "cp": 255, "05": 255, "split_explicit_t": 255, "hmix_del2": 255, "bottom_drag": 255, "cvmix": 255, "0002": 255, "filename_interv": 255, "0100": 255, "input_interv": 255, "initial_onli": 255, "basicmesh": 255, "dayssincestart": 255, "surfacespe": 255, "lowersurfac": 255, "uppersurfac": 255, "ureconstructx": 255, "ureconstructi": 255, "great": 255, "remain": [255, 268, 272], "load_dataset": 255, "final_temperatur": 255, "ab": 255, "proc": 255, "area": 255, "4proc": [255, 267], "8proc": [255, 267], "markdown": 255, "developers_guid": 255, "users_guid": 255, "daunt": 255, "flesh": 255, "bonu": 255, "improv": 255, "introduc": 255, "techniqu": 255, "cannot": 255, "aim": 255, "constrain_resourc": 255, "becam": 255, "mainten": 255, "counter": 255, "thought": 255, "yet_another_channel_test_cas": 255, "yetanotherchanneltestcas": 255, "choic": [255, 268], "spuriou": [255, 267], "dissip": [255, 267], "pop": [255, 267], "mom": [255, 267], "mitgcm": [255, 267], "higher": 255, "heavi": 255, "analogi": 255, "tet": 255, "bear": 255, "late": 255, "_add_step": 255, "startswith": 255, "enumer": 255, "rpe_": 255, "_nu_": 255, "privat": 255, "break": [255, 267], "unusu": 255, "rpe_1_nu_1": [255, 267], "rpe_2_nu_5": [255, 267], "rpe_3_nu_10": 255, "rpe_4_nu_20": 255, "rpe_5_nu_200": 255, "20_00": 255, "0000": 255, "dayssincestartofsim": 255, "relativevort": 255, "pyplot": 255, "plt": 255, "output_": 255, "sections_yet_another_channel_": 255, "rpe_t": 255, "init_filenam": 255, "ds_init": 255, "_plot": 255, "dirti": 255, "adopt": 255, "lesson": 255, "tricki": 255, "commun": 255, "nuanc": 255, "fake": 255, "wasn": 255, "fold": 255, "proper": 255, "third": 255, "previous": 255, "extens": 256, "multinod": [256, 274], "explanatori": 256, "my_machin": 256, "extend": 256, "gitconfig": 256, "enter": 256, "author": 256, "email": 256, "pull_request": 256, "28": 256, "address": 256, "metadata": 256, "customize_config_pars": 256, "server_base_url": 256, "inej": 256, "check_siz": 256, "ssl": 256, "certif": 256, "core_path": 256, "partition_execut": 256, "dask": 256, "netcdf4": 256, "netcdf4_class": 256, "netcdf3_64bit": 256, "netcdf3_class": 256, "engin": 256, "scipi": 256, "mesh_databas": 256, "ocean_database_root": 256, "landice_database_root": 256, "mesh_cor": 256, "mesh_min_cor": 256, "mesh_max_memori": 256, "mesh_max_disk": 256, "init_cor": 256, "init_min_cor": 256, "init_max_memori": 256, "init_max_disk": 256, "init_thread": 256, "forward_cor": 256, "forward_min_cor": 256, "forward_thread": 256, "forward_max_memori": 256, "forward_max_disk": 256, "add_metadata": 256, "ec": 256, "wc": 256, "mesh_descript": 256, "autodetect": 256, "bathy_descript": 256, "gebco": 256, "2022": 256, "bedmachin": 256, "antarctica": 256, "init_descript": 256, "e3sm_vers": 256, "increment": 256, "mesh_revis": 256, "finest": 256, "min_r": 256, "max_r": 256, "max_depth": 256, "creation_d": 256, "peopl": 256, "contact": 256, "temperaturemax": 256, "statist": 256, "temperature_max": 256, "33": [256, 274], "enable_ocean_initial_condit": 256, "enable_ocean_graph_partit": 256, "enable_seaice_initial_condit": 256, "scrip": 256, "enable_scrip": 256, "transect": 256, "onlin": 256, "member": 256, "offlin": 256, "enable_diagnostics_fil": 256, "coarser": [256, 268], "finer": 256, "comparisonlatresolut": 256, "comparisonlonresolut": 256, "antarct": 256, "polar": [256, 257, 259, 264], "stereograph": 256, "comparisonantarcticstereowidth": 256, "6000": [256, 264], "comparisonantarcticstereoresolut": 256, "arctic": [256, 277], "comparisonarcticstereowidth": 256, "comparisonarcticstereoresolut": 256, "tanh_dz": 256, "16": [256, 272, 274], "3000": 256, "min_layer_thick": [256, 264], "max_layer_thick": [256, 264], "retain": 256, "ecosystem": 257, "gain": 257, "confluenc": 257, "public_html": [257, 259, 261], "soft": [257, 259, 261, 274], "mpi_intel": [257, 259, 260, 261], "36": [257, 261, 272, 274], "condo": [257, 274], "acm": [257, 274], "medium": 257, "acme_high": 257, "load_latest_polaris_intel_impi": [257, 260], "load_latest_polaris_gnu_openmpi": [257, 259, 274], "dst": 258, "calendar": 258, "network": 258, "introduct": 258, "platform": 258, "batch": 258, "wtrw": 258, "ch": 258, "fe": 258, "lustr": 258, "scratch4": 258, "scratch5": 258, "sacctmgr": 258, "assoc": 258, "cluster": 258, "45": 258, "sshare": 258, "sreport": 258, "accountutilizationbyus": 258, "2019": 258, "yellow": 258, "chkhome": 258, "petabyt": 258, "df": 258, "bp": 258, "archiv": [258, 262], "hpss": [258, 262], "front": 258, "tn": 258, "storag": 258, "project_nam": 258, "salloc": [258, 261, 262], "account_nam": 258, "gpu": [258, 262], "hyperthread": [258, 262], "hang": [258, 262], "threads_per_cor": [258, 262], "shared_clim": [258, 274], "load_latest_polaris_gnu_mpich": [258, 262], "load_latest_polaris_intel_openmpi": 259, "compyf": 260, "app": [260, 274], "pmi2": 260, "40": 260, "submit": 261, "workload": 261, "squeue": 261, "my_usernam": [261, 262], "scancel": 261, "jobid": 261, "cancel": 261, "emtpi": 261, "three": [261, 280], "mpi_mpich": [261, 274], "mpi_openmpi": [261, 274], "nompi": [261, 274], "p1": 262, "nersc": 262, "iri": 262, "filesystem": 262, "myquota": 262, "prjquota": 262, "projectid": 262, "m1795": 262, "hsi": 262, "htar": 262, "zstash": 262, "cf": [262, 274], "cdir": [262, 274], "premium": 262, "cray_compil": 262, "8844": 262, "monik": 262, "browser": 262, "grab": 262, "logon": 262, "kernel": 262, "myenv": 262, "ipykernel": 262, "kernelspec": 262, "u1": 262, "interpret": 262, "argv": 262, "ipykernel_launch": 262, "connection_fil": 262, "display_nam": 262, "languag": 262, "2500": 264, "deepest": 264, "stewart": 264, "2017": 264, "delta": [264, 267, 272], "z_2": 264, "z_1": 264, "mathrm": 264, "tanh": 264, "rightarrow": 264, "infti": 264, "z_k": 264, "z_0": 264, "z_": [264, 272], "k": 264, "finder": 264, "n_z": 264, "h_": 264, "scienc": 264, "hydrograph": 264, "climatologi": 264, "250": 264, "5500": 264, "renorm": 264, "51": 264, "221": 264, "ziso": [264, 280], "63": 264, "floor": 264, "flat": [264, 267], "collaps": 264, "adcroft": 264, "campin": 264, "2004": 264, "absenc": 264, "squash": 264, "watercolumn": 264, "press": 264, "batymetri": 264, "stair": 264, "month": 265, "websit": [265, 275], "release_6": 265, "ilicak": 267, "2012": 267, "variat": 267, "distinguish": 267, "zonal": [267, 272], "meridion": [267, 272], "psu": [267, 272], "cooler": 267, "north": 267, "sinusoid": 267, "perturb": [267, 268, 271], "t_0": 267, "t_b": 267, "t_": 267, "z_b": 267, "y_": 267, "l_x": 267, "warmer": 267, "ge": [267, 268], "gradient_width_fract": 267, "l_y": 267, "le": [267, 272], "flow": [267, 268], "stationari": [267, 272], "literatur": 267, "mk": 267, "celsiu": 267, "prognost": 267, "williamson": 268, "1992": 268, "sec": 268, "3a": 268, "skamarock": 268, "gassmann": 268, "bodi": 268, "rotat": [268, 270, 271], "transport": 268, "psi": 268, "proportion": 268, "slow": 268, "icosohydr": 268, "nearest": 268, "insensit": [268, 272], "300": [268, 273], "passiv": 268, "psi_0": 268, "co": [268, 270, 271], "radiu": 268, "debug_tracers_1": 268, "equatori": 268, "u_0": 268, "tau": 268, "transit": 268, "equat": [268, 270, 271, 272], "vel_pd": 268, "tendenc": [268, 271], "multipli": 268, "rad": 268, "lat_cent": 268, "lon_cent": 268, "14159265": 268, "2123666": 268, "6667": 268, "hill": 268, "psi0": 268, "qu_conv_thresh": 268, "qu_conv_max": 268, "icos_conv_thresh": 268, "icos_conv_max": 268, "roughli": 268, "studi": 268, "propag": [270, 271], "doubli": [270, 271], "assess": [270, 271], "numer": [270, 271], "accuraci": [270, 271], "discret": [270, 271], "bishnu": [270, 271], "friction": [270, 271], "neglect": [270, 271], "nonlinear": [270, 271], "analyt": [270, 280], "k_x": [270, 271], "k_y": [270, 271], "accord": [270, 271, 274], "availi": [270, 271], "10000": [270, 271], "coriloi": 270, "1e": 270, "amplitud": [270, 271], "ssh_amplitud": [270, 271], "wavelength": [270, 271], "n_wavelengths_x": [270, 271], "n_wavelengths_i": [270, 271], "conv_thresh": [270, 271], "conv_max": [270, 271], "embed": 271, "eta_0": 271, "span": 272, "arbitrarili": 272, "chosen": 272, "virtu": 272, "examin": 272, "400": 272, "phi": 272, "phi_0": 272, "dz": 272, "ml": 272, "mld": 272, "surface_x": 272, "x_gradient_mixed_lay": 272, "mixed_layer_depth_x": 272, "x_difference_across_mixed_lay": 272, "x_gradient_interior": 272, "spatial": 272, "4x4": 272, "960": 272, "degc": 272, "temperature_gradient_mixed_lay": 272, "temperature_difference_across_mixed_lay": 272, "temperature_gradient_interior": 272, "mixed_layer_depth_temperatur": 272, "surface_salin": 272, "salinity_gradient_mixed_lay": 272, "salinity_difference_across_mixed_lay": 272, "salinity_gradient_interior": 272, "mixed_layer_depth_salin": 272, "scheme": 272, "dictat": 272, "kpp": 272, "restor": 272, "piston": 272, "toward": 272, "temperature_surface_restoring_valu": 272, "temperature_piston_veloc": 272, "salinity_surface_restoring_valu": 272, "salinity_piston_veloc": 272, "temperature_interior_restoring_r": 272, "salinity_interior_restoring_r": 272, "net": 272, "latent": 272, "heat": 272, "bulk": 272, "latent_heat_flux": 272, "sensibl": 272, "sensible_heat_flux": 272, "solar": 272, "shortwav": 272, "shortwave_heat_flux": 272, "evapor": 272, "evaporation_flux": 272, "5e": 272, "rain": 272, "rain_flux": 272, "wind": 272, "wind_stress_zon": 272, "wind_stress_meridion": 272, "welcom": [273, 278], "icosohedr": [273, 278], "pertain": [273, 278], "inher": 273, "warrant": 273, "investig": 273, "load_latest_polari": 274, "minu": 274, "create_polaris_load_script": 274, "load_polaris_1": 274, "0_mpich": 274, "exclud": 274, "wiki": 274, "circular_shelf": 274, "sia_smoke_test": 274, "sia_decomposition_test": 274, "sia_restart_test": 274, "fo_smoke_test": 274, "fo_decomposition_test": 274, "fo_restart_test": 274, "37": 274, "17": 274, "210131_test_new_branch": 274, "my_config": 274, "smaller": 274, "previous_workdir": 274, "paper": 274, "recompil": 274, "safer": 274, "preserv": 274, "test_subdir": 274, "whatev": 274, "clock": 274, "j": 274, "exclus": 274, "job_nam": 274, "fo_integr": 274, "sia_integr": 274, "cosine_bell_cached_init": [274, 279], "ec30to60": 274, "ecwisc30to60": 274, "qu240_for_e3sm": 274, "quwisc240_for_e3sm": 274, "wc14": 274, "suitenam": 274, "seaice_standalone_framework": 275, "71": 277, "35n": 277, "156": 277, "5w": 277, "atmospher": 277, "timeseri": 277, "pair": 277, "prohibit": 279, "speed": 279, "radial": 280, "form": 280}, "objects": {"polaris": [[19, 0, 1, "", "Component"], [21, 0, 1, "", "ModelStep"], [34, 0, 1, "", "Step"], [43, 0, 1, "", "Task"]], "polaris.Component": [[19, 1, 1, "", "__init__"], [20, 1, 1, "", "add_task"]], "polaris.ModelStep": [[21, 1, 1, "", "__init__"], [22, 1, 1, "", "add_model_config_options"], [23, 1, 1, "", "add_namelist_file"], [24, 1, 1, "", "add_streams_file"], [25, 1, 1, "", "add_yaml_file"], [26, 1, 1, "", "dynamic_model_config"], [27, 1, 1, "", "map_yaml_to_namelist"], [28, 1, 1, "", "partition"], [29, 1, 1, "", "process_inputs_and_outputs"], [30, 1, 1, "", "runtime_setup"], [31, 1, 1, "", "set_model_resources"], [32, 1, 1, "", "setup"], [33, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[34, 1, 1, "", "__init__"], [35, 1, 1, "", "add_dependency"], [36, 1, 1, "", "add_input_file"], [37, 1, 1, "", "add_output_file"], [38, 1, 1, "", "constrain_resources"], [39, 1, 1, "", "run"], [40, 1, 1, "", "runtime_setup"], [41, 1, 1, "", "set_resources"], [42, 1, 1, "", "setup"]], "polaris.Task": [[43, 1, 1, "", "__init__"], [44, 1, 1, "", "add_step"], [45, 1, 1, "", "configure"]], "polaris.__main__": [[46, 2, 1, "", "main"]], "polaris.cache": [[47, 2, 1, "", "update_cache"]], "polaris.components": [[48, 2, 1, "", "get_components"]], "polaris.config": [[49, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[49, 1, 1, "", "__init__"]], "polaris.io": [[50, 2, 1, "", "download"], [51, 3, 0, "-", "imp_res"], [52, 2, 1, "", "symlink"]], "polaris.job": [[53, 2, 1, "", "get_slurm_options"], [54, 2, 1, "", "write_job_script"]], "polaris.list": [[55, 2, 1, "", "list_cases"], [56, 2, 1, "", "list_machines"], [57, 2, 1, "", "list_suites"]], "polaris.logging": [[58, 2, 1, "", "log_method_call"]], "polaris.mesh": [[59, 0, 1, "", "IcosahedralMeshStep"], [66, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[59, 1, 1, "", "__init__"], [60, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [61, 1, 1, "", "get_cell_width"], [62, 1, 1, "", "get_subdivisions"], [63, 1, 1, "", "make_jigsaw_mesh"], [64, 1, 1, "", "run"], [65, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[66, 1, 1, "", "__init__"], [67, 1, 1, "", "build_cell_width_lat_lon"], [68, 1, 1, "", "make_jigsaw_mesh"], [69, 1, 1, "", "run"], [70, 1, 1, "", "setup"]], "polaris.mesh.planar": [[71, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[72, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[72, 1, 1, "", "__init__"], [73, 1, 1, "", "run"], [74, 1, 1, "", "save_and_plot_cell_width"], [75, 1, 1, "", "setup"]], "polaris.model_step": [[76, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[77, 2, 1, "", "ingest"], [78, 2, 1, "", "parse_replacements"], [79, 2, 1, "", "replace"], [80, 2, 1, "", "write"]], "polaris.ocean": [[128, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[128, 1, 1, "", "__init__"]], "polaris.ocean.mesh.spherical": [[129, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[130, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[130, 1, 1, "", "__init__"], [131, 1, 1, "", "compute_cell_count"], [132, 1, 1, "", "constrain_resources"], [133, 1, 1, "", "map_yaml_to_namelist"], [134, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[135, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[136, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[137, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[137, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[138, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[138, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[139, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "compute_cell_count"], [141, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[142, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "run"], [144, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[145, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[145, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[146, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[146, 1, 1, "", "__init__"], [147, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[148, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[150, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[150, 1, 1, "", "__init__"], [151, 1, 1, "", "run"], [152, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[153, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[153, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[154, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[156, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[156, 1, 1, "", "__init__"], [157, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[158, 0, 1, "", "CosineBell"], [160, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[161, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "rmse"], [163, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.forward": [[164, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "compute_cell_count"], [166, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[167, 0, 1, "", "Init"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[169, 0, 1, "", "Viz"], [171, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[173, 0, 1, "", "InertialGravityWave"], [174, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[173, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[175, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[177, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "normal_velocity"], [179, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[180, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "compute_cell_count"], [182, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[183, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[185, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[185, 1, 1, "", "__init__"], [186, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[187, 0, 1, "", "ManufacturedSolution"], [188, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[187, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[189, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[191, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "normal_velocity"], [193, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[194, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "compute_cell_count"], [196, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.manufactured_solution.init": [[197, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[199, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[201, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[202, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[202, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[203, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[203, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[204, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[204, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[205, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[207, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[209, 2, 1, "", "generate_1d_grid"], [210, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[211, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[212, 2, 1, "", "alter_bottom_depth"], [213, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[214, 2, 1, "", "compute_min_max_level_cell"], [215, 2, 1, "", "compute_z_level_layer_thickness"], [216, 2, 1, "", "compute_z_level_resting_thickness"], [217, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[218, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[81, 2, 1, "", "get_available_parallel_resources"], [82, 2, 1, "", "get_parallel_command"], [83, 2, 1, "", "run_command"], [84, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[85, 2, 1, "", "write"]], "polaris.remap": [[86, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[86, 1, 1, "", "__init__"], [87, 1, 1, "", "dst_from_lon_lat"], [88, 1, 1, "", "dst_from_mpas"], [89, 1, 1, "", "dst_from_points"], [90, 1, 1, "", "dst_from_proj"], [91, 1, 1, "", "dst_global_lon_lat"], [92, 1, 1, "", "get_remapper"], [93, 1, 1, "", "runtime_setup"], [94, 1, 1, "", "src_from_lon_lat"], [95, 1, 1, "", "src_from_mpas"], [96, 1, 1, "", "src_from_proj"]], "polaris.run": [[97, 2, 1, "", "complete_step_run"], [98, 2, 1, "", "load_dependencies"], [101, 2, 1, "", "setup_config"], [102, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[99, 2, 1, "", "run_single_step"], [100, 2, 1, "", "run_tasks"]], "polaris.seaice": [[239, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[239, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[240, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[241, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[241, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[242, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[244, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[244, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[245, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[245, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[246, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[246, 1, 1, "", "__init__"], [247, 1, 1, "", "run"]], "polaris.setup": [[103, 2, 1, "", "setup_task"], [104, 2, 1, "", "setup_tasks"]], "polaris.streams": [[105, 2, 1, "", "read"], [106, 2, 1, "", "update_defaults"], [107, 2, 1, "", "update_tree"], [108, 2, 1, "", "write"]], "polaris.suite": [[109, 2, 1, "", "setup_suite"]], "polaris.validate": [[110, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[111, 2, 1, "", "plot_global"]], "polaris.viz": [[112, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[113, 0, 1, "", "PolarisYaml"], [117, 2, 1, "", "main_mpas_to_yaml"], [118, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [119, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "read"], [115, 1, 1, "", "update"], [116, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 255], "share": [1, 6, 235, 255], "step": [1, 3, 34, 35, 36, 37, 38, 39, 40, 41, 42, 126, 232, 255, 267, 268, 270, 271, 272, 273, 278], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 39, 64, 69, 73, 97, 98, 99, 100, 101, 102, 127, 143, 151, 155, 157, 163, 168, 170, 172, 176, 184, 186, 190, 198, 200, 206, 208, 232, 236, 243, 247, 267, 268, 270, 271, 272, 273, 274, 277, 278], "onc": 1, "befor": 1, "depend": [1, 6, 232], "output": [1, 232, 255], "daughter": 1, "task": [1, 3, 43, 44, 45, 126, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 224, 228, 231, 234, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 255, 269, 273, 274, 276, 278, 280], "work": 1, "directori": [1, 230], "structur": [1, 230], "i": [1, 274], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 236, 254, 256, 274], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 18, 127, 232, 236, 261], "other": [1, 124, 232, 255, 261, 274], "implement": [1, 2], "set": [1, 127, 236, 274], "up": [1, 236, 274], "test": [1, 2, 6, 255, 256, 277], "And": 1, "valid": [1, 2, 3, 17, 110, 154, 155, 222, 242, 243, 255, 274], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 127, 236, 255, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 277, 278], "same": 2, "api": 3, "refer": [3, 126, 127], "compon": [3, 14, 19, 20, 48, 127, 219, 229, 235, 236, 248, 265, 274, 275], "polari": [3, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 232, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 274], "framework": [3, 10, 126, 127, 222, 223, 225, 226, 227, 235, 238, 251, 263], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 55, 56, 57], "setup": [3, 5, 8, 32, 42, 65, 70, 75, 103, 104, 134, 144, 152, 232], "suit": [3, 5, 8, 109, 233, 266, 274, 279], "cach": [3, 5, 8, 47, 232], "mpas_to_yaml": [3, 5], "base": [3, 126], "class": [3, 235], "modelstep": [3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "config": [3, 6, 9, 14, 49, 124, 127, 229, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 277, 278], "io": [3, 11, 50, 51, 52], "job": [3, 53, 54, 261, 274], "log": [3, 12, 58], "mesh": [3, 13, 14, 18, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 126, 127, 129, 255, 267, 268, 270, 271, 272, 273, 277, 278], "model_step": [3, 76], "namelist": [3, 14, 77, 78, 79, 80, 127], "parallel": [3, 81, 82, 83, 84], "proven": [3, 15, 85], "remap": [3, 16, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "stream": [3, 14, 105, 106, 107, 108, 127, 255], "viz": [3, 111, 112, 156, 157, 169, 170, 171, 172, 185, 186, 199, 200, 207, 208, 223, 225, 226, 227, 246, 247, 251, 255], "yaml": [3, 14, 113, 114, 115, 116, 117, 118, 119, 127], "build": [4, 124, 236, 274], "serial": [5, 8, 99, 100], "deploi": 6, "new": [6, 124, 255], "spack": [6, 124, 236, 274], "environ": [6, 124, 236, 252, 274], "where": 6, "we": 6, "updat": [6, 14, 115, 236], "mach": 6, "conda": [6, 236, 252, 261, 274], "identifi": 6, "e3sm": [6, 14, 127, 236, 274], "machin": [6, 124, 236, 261, 274], "describ": [6, 124], "modul": [6, 8, 235, 236], "env": 6, "variabl": [6, 17], "etc": 6, "creat": [6, 236, 255], "remot": [6, 262], "branch": 6, "petsc": [6, 236], "netlib": [6, 236], "lapack": [6, 236], "albani": [6, 236], "troubleshoot": [6, 236, 252], "mpa": [6, 127, 221, 249], "ocean": [6, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 265], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 124, 127, 229, 232, 255, 256], "comment": 9, "symlink": [11, 52, 232], "download": [11, 50, 232], "spheric": [13, 18, 72, 73, 74, 75, 126, 127, 129], "planar": [13, 18, 71], "uniform": [13, 127, 264], "gener": 13, "model": [14, 127, 130, 131, 132, 133, 134, 220, 249, 255, 274], "an": [14, 127, 255], "ad": [14, 124, 232, 255], "dynam": [14, 255], "input": [14, 232], "partit": [14, 28], "pio": 14, "make": [14, 255], "graph": 14, "against": 17, "baselin": 17, "norm": 17, "visual": [18, 255, 277], "horizont": [18, 255], "field": 18, "global": 18, "lat": 18, "lon": 18, "plot": [18, 255], "add_task": 20, "add_model_config_opt": 22, "add_namelist_fil": 23, "add_streams_fil": 24, "add_yaml_fil": 25, "dynamic_model_config": [26, 141, 147, 166, 182, 196], "map_yaml_to_namelist": [27, 133], "process_inputs_and_output": 29, "runtime_setup": [30, 40, 93, 232], "set_model_resourc": 31, "update_namelist_pio": 33, "add_depend": 35, "add_input_fil": 36, "add_output_fil": 37, "constrain_resourc": [38, 132, 232], "set_resourc": 41, "add_step": 44, "configur": [45, 149, 159, 234, 252], "__main__": 46, "main": 46, "update_cach": 47, "get_compon": 48, "polarisconfigpars": 49, "imp_r": 51, "get_slurm_opt": 53, "write_job_script": 54, "list_cas": 55, "list_machin": 56, "list_suit": 57, "log_method_cal": 58, "icosahedralmeshstep": [59, 60, 61, 62, 63, 64, 65], "build_subdivisions_cell_width_lat_lon": 60, "get_cell_width": 61, "get_subdivis": 62, "make_jigsaw_mesh": [63, 68], "quasiuniformsphericalmeshstep": [66, 67, 68, 69, 70], "build_cell_width_lat_lon": 67, "compute_planar_hex_nx_ni": 71, "sphericalbasestep": [72, 73, 74, 75], "save_and_plot_cell_width": 74, "make_graph_fil": 76, "ingest": 77, "parse_replac": 78, "replac": 79, "write": [80, 85, 108, 116], "get_available_parallel_resourc": 81, "get_parallel_command": 82, "run_command": 83, "set_cores_per_nod": 84, "mappingfilestep": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "dst_from_lon_lat": 87, "dst_from_mpa": 88, "dst_from_point": 89, "dst_from_proj": 90, "dst_global_lon_lat": 91, "get_remapp": 92, "src_from_lon_lat": 94, "src_from_mpa": 95, "src_from_proj": 96, "complete_step_run": 97, "load_depend": 98, "run_single_step": 99, "run_task": 100, "setup_config": 101, "unpickle_suit": 102, "setup_task": [103, 104], "read": [105, 114], "update_default": 106, "update_tre": 107, "setup_suit": 109, "compare_vari": 110, "globe": 111, "plot_glob": 111, "plot_horiz_field": 112, "polarisyaml": [113, 114, 115, 116], "main_mpas_to_yaml": 117, "mpas_namelist_and_streams_to_yaml": 118, "yaml_to_mpas_stream": 119, "anvil": [120, 257], "intel": [120, 122, 123, 257, 259, 260], "gnu": [120, 121, 122, 123, 125, 257, 258, 259, 262], "chicoma": [121, 258], "cpu": [121, 125, 258, 262], "chrysali": [122, 259], "compymcnodefac": [123, 260], "support": [124, 220, 236, 249, 261, 274], "perlmutt": [125, 262], "pm": 125, "baroclinic_channel": [126, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 222], "inertial_gravity_wav": [126, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225], "cosine_bel": [126, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 223, 266], "manufactured_solut": [126, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 226], "single_column": [126, 201, 202, 203, 204, 205, 206, 207, 208, 227, 237, 240, 241, 242, 243, 244, 245, 246, 247, 251], "oceanmodelstep": [126, 130, 131, 132, 133, 134], "potenti": [126, 127], "energi": [126, 127], "rpe": [126, 127, 135, 148, 149, 150, 151, 152, 222, 267], "vertic": [126, 127, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 255, 264, 267, 268, 270, 271, 272, 273], "coordin": [126, 127, 255, 264], "v": 127, "map": 127, "omega": 127, "mpi": [127, 261], "resourc": 127, "quasi": 127, "icosahedr": 127, "rest": 127, "add_spherical_base_mesh_step": 129, "compute_cell_count": [131, 140, 165, 181, 195], "compute_rp": 135, "add_baroclinic_channel_task": 136, "decomp": [137, 222, 267], "default": [138, 222, 255, 267], "forward": [139, 140, 141, 164, 165, 166, 180, 181, 182, 194, 195, 196, 203, 222, 223, 225, 226, 227, 244, 251, 255], "init": [142, 143, 144, 167, 168, 183, 184, 197, 198, 205, 206, 222, 223, 225, 226, 227, 255], "restart": [145, 146, 147, 222, 267, 277], "restart_step": [146, 147], "restartstep": [146, 147], "analysi": [150, 151, 152, 161, 162, 163, 175, 176, 189, 190, 223, 225, 226, 255], "thread": [153, 222, 267], "cosinebel": [158, 159], "add_cosine_bell_task": 160, "rmse": 162, "vizmap": [171, 172], "inertialgravitywav": 173, "add_inertial_gravity_wave_task": 174, "exact_solut": [177, 178, 179, 191, 192, 193, 225, 226], "exactsolut": [177, 178, 179, 191, 192, 193], "normal_veloc": [178, 192], "ssh": [179, 193], "manufacturedsolut": 187, "add_manufactured_solution_task": 188, "add_single_column_task": [201, 240], "cvmix": [202, 227, 272], "ideal_ag": 204, "idealag": 204, "grid_1d": [209, 210], "generate_1d_grid": 209, "write_1d_grid": 210, "init_vertical_coord": 211, "partial_cel": [212, 213], "alter_bottom_depth": 212, "alter_ssh": 213, "zlevel": [214, 215, 216, 217], "compute_min_max_level_cel": 214, "compute_z_level_layer_thick": 215, "compute_z_level_resting_thick": 216, "init_z_level_vertical_coord": 217, "zstar": 218, "init_z_star_vertical_coord": 218, "initi": [221, 249, 255, 267, 268, 270, 271, 272, 273, 277, 278], "condit": [221, 249, 255, 267, 268, 270, 271, 272, 273, 277, 278], "boundari": 221, "forc": [221, 249, 267, 268, 270, 271, 272, 273, 277, 278], "base_mesh": 223, "ideal": [227, 272], "ag": [227, 272], "categori": [228, 273, 278], "constructor": [229, 232, 234], "organ": 231, "attribut": [232, 234], "copi": 232, "pull": 233, "request": 233, "pr": 233, "nightli": 233, "overview": 235, "code": [235, 236, 255], "style": [235, 236], "packag": 235, "within": 235, "group": [235, 255], "relat": 235, "quick": [236, 274], "start": [236, 255, 274], "develop": [236, 254, 255], "unix": 236, "shell": 236, "repositori": 236, "beginn": 236, "compil": 236, "system": 236, "unknown": 236, "what": 236, "script": [236, 274], "doe": 236, "flag": 236, "activ": 236, "switch": 236, "between": [236, 255], "differ": 236, "onli": 236, "repo": 236, "worktre": 236, "advanc": 236, "seaic": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "exact_restart": [241, 242, 243], "exactrestart": 241, "standard_phys": [245, 246, 247], "standardphys": 245, "standard_physics_test": 251, "exact_restart_test": 251, "solver": 252, "error": 252, "when": 252, "proxi": 252, "lanl": 252, "mac": 252, "gethostbynam": 252, "fail": 252, "glossari": [253, 254], "": 254, "guid": 254, "tutori": [254, 255], "compass": 254, "get": 255, "vari": 255, "resolut": 255, "paramet": 255, "thing": 255, "out": 255, "defin": 255, "more": 255, "again": 255, "one": 255, "time": [255, 267, 268, 270, 271, 272, 273, 278], "second": 255, "enhanc": 255, "comput": 255, "cell": 255, "count": 255, "superclass": 255, "studi": 255, "how": 255, "pass": 255, "data": [255, 262], "A": 256, "case": 256, "slurm": 261, "queue": 261, "mpich": 261, "openmpi": 261, "No": 261, "forg": 261, "jupyt": 262, "notebook": 262, "1d": 264, "grid": [264, 267, 268, 270, 271, 272, 273], "type": 264, "tanh_dz": 264, "60layerphc": 264, "100layere3smv1": 264, "3d": 264, "z": 264, "star": 264, "level": 264, "cosine_bell_cached_init": 266, "baroclin": 267, "channel": 267, "descript": [267, 268, 270, 271, 272, 273, 277, 278], "durat": [267, 268, 270, 271, 272, 273, 277, 278], "core": [267, 268, 270, 271, 272, 273, 277, 278], "cosin": 268, "bell": 268, "inerti": 270, "graviti": 270, "wave": 270, "manufactur": 271, "solut": 271, "converg": 271, "singl": [272, 277], "column": [272, 277], "task_nam": [273, 278], "yet": 274, "load": 274, "standalon": 274, "sea": 275, "ic": 275, "standard": 277, "physic": 277, "timestep": 277, "exact": 277}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [229, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [267, "mesh"], [267, "id2"], [267, "id9"], [267, "id17"], [267, "id25"], [267, "id32"], [268, "mesh"], [270, "mesh"], [271, "mesh"], [272, "mesh"], [272, "id3"], [272, "id8"], [273, "mesh"], [277, "mesh"], [277, "id1"], [277, "id6"], [278, "mesh"]], "model_step": [[3, "model-step"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [222, "validate"]], "viz": [[3, "viz"], [223, "viz"], [225, "viz"], [226, "viz"], [227, "viz"], [251, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [255, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [263, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [127, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [127, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "Provenance": [[15, "provenance"]], "Remapping": [[16, "remapping"]], "Validation": [[17, "validation"]], "Validating variables against a baseline": [[17, "validating-variables-against-a-baseline"]], "Validating variables": [[17, "validating-variables"]], "Norms": [[17, "norms"]], "Visualization": [[18, "visualization"]], "horizontal fields from planar meshes": [[18, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[18, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[19, "polaris-component"]], "polaris.Component.add_task": [[20, "polaris-component-add-task"]], "polaris.ModelStep": [[21, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[22, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[23, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[24, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[25, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[26, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[27, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[28, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[29, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[30, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[31, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[32, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[33, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[34, "polaris-step"]], "polaris.Step.add_dependency": [[35, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[36, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[37, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[38, "polaris-step-constrain-resources"]], "polaris.Step.run": [[39, "polaris-step-run"]], "polaris.Step.runtime_setup": [[40, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[41, "polaris-step-set-resources"]], "polaris.Step.setup": [[42, "polaris-step-setup"]], "polaris.Task": [[43, "polaris-task"]], "polaris.Task.add_step": [[44, "polaris-task-add-step"]], "polaris.Task.configure": [[45, "polaris-task-configure"]], "polaris.__main__.main": [[46, "polaris-main-main"]], "polaris.cache.update_cache": [[47, "polaris-cache-update-cache"]], "polaris.components.get_components": [[48, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[49, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[50, "polaris-io-download"]], "polaris.io.imp_res": [[51, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[52, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[53, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[54, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[55, "polaris-list-list-cases"]], "polaris.list.list_machines": [[56, "polaris-list-list-machines"]], "polaris.list.list_suites": [[57, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[58, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[59, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[60, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[61, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[62, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[63, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[64, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[65, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[66, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[68, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[71, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[72, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[73, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[74, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[75, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[76, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[77, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[78, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[79, "polaris-namelist-replace"]], "polaris.namelist.write": [[80, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[81, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[82, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[83, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[84, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[85, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[86, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[87, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[88, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[89, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[90, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[91, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[92, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[93, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[94, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[95, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[96, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[97, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[98, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[99, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[100, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[101, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[102, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[103, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[104, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[105, "polaris-streams-read"]], "polaris.streams.update_defaults": [[106, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[107, "polaris-streams-update-tree"]], "polaris.streams.write": [[108, "polaris-streams-write"]], "polaris.suite.setup_suite": [[109, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[110, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[111, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[112, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[113, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[114, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[115, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[116, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[117, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[118, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[119, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[120, "anvil"], [257, "anvil"]], "intel": [[120, "intel"], [122, "intel"], [123, "intel"]], "gnu": [[120, "gnu"], [122, "gnu"], [123, "gnu"]], "Chicoma": [[121, "chicoma"], [258, "chicoma"]], "chicoma-cpu, gnu": [[121, "chicoma-cpu-gnu"]], "Chrysalis": [[122, "chrysalis"], [259, "chrysalis"]], "CompyMcNodeFace": [[123, "compymcnodeface"], [260, "compymcnodeface"]], "Machines": [[124, "machines"], [261, "machines"]], "Supported Machines": [[124, "supported-machines"], [261, "supported-machines"]], "Other Machines": [[124, "other-machines"], [261, "other-machines"]], "Adding a New Supported Machine": [[124, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[124, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[124, "describing-a-spack-environment"]], "Building the Spack Environment": [[124, "building-the-spack-environment"]], "Perlmutter": [[125, "perlmutter"], [262, "perlmutter"]], "pm-cpu, gnu": [[125, "pm-cpu-gnu"]], "ocean": [[126, "ocean"]], "Tasks": [[126, "tasks"], [224, "tasks"], [234, "tasks"], [237, "tasks"], [250, "tasks"], [269, "tasks"], [276, "tasks"], [280, "tasks"]], "baroclinic_channel": [[126, "baroclinic-channel"], [222, "baroclinic-channel"]], "inertial_gravity_wave": [[126, "inertial-gravity-wave"], [225, "inertial-gravity-wave"]], "cosine_bell": [[126, "cosine-bell"], [223, "cosine-bell"]], "manufactured_solution": [[126, "manufactured-solution"], [226, "manufactured-solution"]], "single_column": [[126, "single-column"], [227, "single-column"], [237, "single-column"], [251, "single-column"]], "Ocean Framework": [[126, "ocean-framework"]], "OceanModelStep": [[126, "oceanmodelstep"]], "Spherical Base Mesh Step": [[126, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[126, "reference-potential-energy-rpe"]], "Vertical coordinates": [[126, "vertical-coordinates"]], "Ocean framework": [[127, "ocean-framework"]], "YAML files vs. namelists and streams": [[127, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[127, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[127, "setting-mpi-resources"]], "Model config options and streams": [[127, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[127, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[127, "vertical-coordinate"], [264, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[127, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[128, "polaris-ocean-ocean"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[129, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[130, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[131, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[132, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[133, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[134, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[135, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[136, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[137, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[138, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[139, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[140, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[141, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[142, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[143, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[144, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[145, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[146, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[147, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[148, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[149, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[150, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[151, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[152, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[153, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[154, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[155, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[156, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[157, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[158, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[159, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[160, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[161, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse": [[162, "polaris-ocean-tasks-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run": [[163, "polaris-ocean-tasks-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[164, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[165, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[166, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[167, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[168, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[169, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[170, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[171, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[172, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[173, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[174, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[175, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run": [[176, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[177, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[178, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[179, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[180, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[181, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[182, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[183, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[184, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[185, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[186, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[187, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[188, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[189, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run": [[190, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[191, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[192, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[193, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[194, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[195, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config": [[196, "polaris-ocean-tasks-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[197, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[198, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[199, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[200, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[201, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[202, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[203, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[204, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[205, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[206, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[207, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[208, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[209, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[210, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[211, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[212, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[213, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[214, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[215, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[216, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[217, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[218, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[219, "ocean-component"], [265, "ocean-component"]], "Models": [[220, "models"]], "Supported Models": [[220, "supported-models"]], "MPAS-Ocean": [[221, "mpas-ocean"]], "Initial conditions": [[221, "initial-conditions"], [249, "initial-conditions"]], "Boundary conditions": [[221, "boundary-conditions"]], "Forcing": [[221, "forcing"], [249, "forcing"]], "framework": [[222, "framework"], [223, "framework"], [225, "framework"], [226, "framework"], [227, "framework"], [251, "framework"]], "init": [[222, "init"], [223, "init"], [225, "init"], [226, "init"], [227, "init"]], "forward": [[222, "forward"], [223, "forward"], [225, "forward"], [226, "forward"], [227, "forward"], [251, "forward"]], "default": [[222, "default"], [267, "default"]], "decomp": [[222, "decomp"], [267, "decomp"]], "restart": [[222, "restart"], [267, "restart"]], "threads": [[222, "threads"]], "rpe": [[222, "rpe"], [267, "rpe"]], "base_mesh": [[223, "base-mesh"]], "analysis": [[223, "analysis"], [225, "analysis"], [226, "analysis"]], "exact_solution": [[225, "exact-solution"], [226, "exact-solution"]], "cvmix": [[227, "cvmix"], [272, "cvmix"]], "ideal age": [[227, "ideal-age"], [272, "ocean-single-column-ideal-age"]], "Categories of tasks": [[228, "categories-of-tasks"]], "Constructor": [[229, "constructor"]], "Config file": [[229, "config-file"]], "Directory structure": [[230, "directory-structure"]], "Organization of Tasks": [[231, "organization-of-tasks"]], "Steps": [[232, "steps"]], "Step attributes": [[232, "step-attributes"]], "constructor": [[232, "constructor"], [234, "constructor"]], "setup()": [[232, "setup"]], "constrain_resources()": [[232, "constrain-resources"]], "runtime_setup()": [[232, "runtime-setup"]], "run()": [[232, "run"]], "inputs and outputs": [[232, "inputs-and-outputs"]], "Input files": [[232, "input-files"]], "Symlinks to input files": [[232, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[232, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[232, "downloading-and-symlinking-input-files"]], "Copying input files": [[232, "copying-input-files"]], "Output files": [[232, "output-files"]], "Cached output files": [[232, "cached-output-files"]], "Adding other steps as dependencies": [[232, "adding-other-steps-as-dependencies"]], "Suites": [[233, "suites"], [266, "suites"], [274, "suites"], [279, "suites"]], "Pull-Request (PR) suite": [[233, "pull-request-pr-suite"]], "Nightly suite": [[233, "nightly-suite"]], "Task attributes": [[234, "task-attributes"]], "configure()": [[234, "configure"]], "Overview": [[235, "overview"]], "Code Style": [[235, "code-style"]], "Packages and Modules": [[235, "packages-and-modules"]], "Packages": [[235, "packages"]], "Modules": [[235, "modules"]], "Classes": [[235, "classes"]], "Code sharing": [[235, "code-sharing"]], "\u2026in the polaris framework": [[235, "in-the-polaris-framework"]], "\u2026within a component": [[235, "within-a-component"]], "\u2026within a group of related tasks": [[235, "within-a-group-of-related-tasks"]], "\u2026within a task": [[235, "within-a-task"]], "Quick Start for Developers": [[236, "quick-start-for-developers"]], "Unix Shell": [[236, "unix-shell"]], "Set up a polaris repository: for beginners": [[236, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[236, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[236, "supported-machines"]], "Environments with Albany": [[236, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[236, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[236, "unknown-machines"]], "What the script does": [[236, "what-the-script-does"]], "Optional flags": [[236, "optional-flags"]], "Activating the environment": [[236, "activating-the-environment"]], "Switching between different polaris environments": [[236, "switching-between-different-polaris-environments"]], "Troubleshooting": [[236, "troubleshooting"], [252, "troubleshooting"]], "Creating/updating only the polaris environment": [[236, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[236, "building-e3sm-components"]], "Running polaris from the repo": [[236, "running-polaris-from-the-repo"]], "Code style for polaris": [[236, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[236, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[237, "seaice"]], "SeaIce framework": [[238, "seaice-framework"]], "polaris.seaice.SeaIce": [[239, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[240, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[241, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[242, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[243, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[244, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[245, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[246, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[247, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[248, "seaice-component"]], "Supported Model: MPAS-Seaice": [[249, "supported-model-mpas-seaice"]], "standard_physics_test": [[251, "standard-physics-test"]], "exact_restart_test": [[251, "exact-restart-test"]], "Solver errors when configuring conda environment": [[252, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[252, "proxy-on-lanl-macs"]], "gethostbyname failed": [[252, "gethostbyname-failed"]], "Glossary": [[253, "glossary"], [254, null]], "Polaris": [[254, "polaris"]], "User's guide": [[254, null]], "Developer's guide": [[254, null]], "Tutorials": [[254, null]], "Compass": [[254, "compass"]], "Developer Tutorial: Adding a new test group": [[255, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[255, "getting-started"]], "Making a new test group": [[255, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[255, "adding-a-default-task"]], "Varying resolution and other parameters": [[255, "varying-resolution-and-other-parameters"]], "Adding the init step": [[255, "adding-the-init-step"]], "Creating a horizontal mesh": [[255, "creating-a-horizontal-mesh"]], "Adding a config file": [[255, "adding-a-config-file"]], "Adding the step to the task": [[255, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[255, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[255, "creating-an-initial-condition"]], "Adding plots": [[255, "adding-plots"]], "Adding step outputs": [[255, "adding-step-outputs"]], "Adding validation": [[255, "adding-validation"], [255, "id1"]], "Test things out!": [[255, "test-things-out"]], "Adding the forward step": [[255, "adding-the-forward-step"]], "Defining model config options and streams": [[255, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[255, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[255, "adding-more-validation"]], "Test the task again!": [[255, "test-the-task-again"]], "Adding a visualization step": [[255, "adding-a-visualization-step"]], "Adding the viz step to the task": [[255, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[255, "test-the-task-one-more-time"]], "Adding a second task": [[255, "adding-a-second-task"]], "Enhancements": [[255, "enhancements"]], "Adding model config options in code": [[255, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[255, "adding-dynamic-model-config-options"]], "Computing the cell count": [[255, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[255, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[255, "adding-a-parameter-study"]], "Adding the steps to the task": [[255, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[255, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[255, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[256, "config-files"]], "A \u201cuser\u201d config file": [[256, "a-user-config-file"]], "Test-case config files": [[256, "test-case-config-files"]], "config options": [[257, "config-options"], [258, "config-options"], [259, "config-options"], [260, "config-options"], [261, "config-options"], [262, "config-options"], [267, "config-options"], [267, "id7"], [267, "id14"], [267, "id22"], [267, "id30"], [267, "id37"], [268, "config-options"], [270, "config-options"], [271, "config-options"], [272, "config-options"], [272, "id1"], [272, "id6"], [272, "id13"], [273, "config-options"], [277, "config-options"], [277, "id5"], [277, "id10"], [278, "config-options"]], "Intel on Anvil": [[257, "intel-on-anvil"]], "Gnu on Anvil": [[257, "gnu-on-anvil"]], "Chicoma-CPU": [[258, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[258, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[259, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[259, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[260, "intel-on-compymcnodeface"]], "Slurm job queueing": [[261, "slurm-job-queueing"]], "MPICH": [[261, "mpich"]], "OpenMPI": [[261, "openmpi"]], "No MPI from conda-forge": [[261, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[262, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[262, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[262, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[264, "d-grid-type"]], "uniform": [[264, "uniform"]], "tanh_dz": [[264, "tanh-dz"]], "60layerPHC": [[264, "layerphc"]], "100layerE3SMv1": [[264, "layere3smv1"]], "3D vertical coordinates": [[264, "d-vertical-coordinates"]], "z-star": [[264, "z-star"]], "z-level": [[264, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[266, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[267, "baroclinic-channel"]], "description": [[267, "description"], [267, "id1"], [267, "id8"], [267, "id16"], [267, "id24"], [268, "description"], [270, "description"], [271, "description"], [272, "description"], [272, "id2"], [272, "id7"], [273, "description"], [277, "description"], [278, "description"]], "vertical grid": [[267, "vertical-grid"], [267, "id3"], [267, "id10"], [267, "id18"], [267, "id26"], [267, "id33"], [268, "vertical-grid"], [270, "vertical-grid"], [271, "vertical-grid"], [272, "vertical-grid"], [272, "id4"], [272, "id9"], [273, "vertical-grid"]], "initial conditions": [[267, "initial-conditions"], [267, "id4"], [267, "id11"], [267, "id19"], [267, "id27"], [267, "id34"], [268, "initial-conditions"], [270, "initial-conditions"], [271, "initial-conditions"], [272, "initial-conditions"], [272, "id5"], [272, "id10"], [273, "initial-conditions"], [277, "initial-conditions"], [277, "id2"], [277, "id7"], [278, "initial-conditions"]], "forcing": [[267, "forcing"], [267, "id5"], [267, "id12"], [267, "id20"], [267, "id28"], [267, "id35"], [268, "forcing"], [270, "forcing"], [271, "forcing"], [272, "forcing"], [272, "id11"], [273, "forcing"], [277, "forcing"], [277, "id3"], [277, "id8"], [278, "forcing"]], "time step and run duration": [[267, "time-step-and-run-duration"], [267, "id6"], [267, "id13"], [267, "id21"], [267, "id29"], [267, "id36"], [268, "time-step-and-run-duration"], [270, "time-step-and-run-duration"], [271, "time-step-and-run-duration"], [272, "time-step-and-run-duration"], [272, "id12"], [273, "time-step-and-run-duration"], [278, "time-step-and-run-duration"]], "cores": [[267, "cores"], [267, "id15"], [267, "id23"], [267, "id31"], [267, "id38"], [268, "cores"], [270, "cores"], [271, "cores"], [272, "cores"], [272, "id14"], [273, "cores"], [277, "cores"], [277, "id4"], [277, "id9"], [278, "cores"]], "thread": [[267, "thread"]], "cosine bell": [[268, "cosine-bell"]], "inertial gravity wave": [[270, "inertial-gravity-wave"]], "manufactured solution": [[271, "manufactured-solution"]], "convergence": [[271, "convergence"]], "single column": [[272, "single-column"], [277, "single-column"]], "<Category of task>": [[273, "ocean-category-of-task"], [278, "seaice-category-of-task"]], "task_name": [[273, "task-name"], [278, "task-name"]], "Quick Start for Users": [[274, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[274, null]], "Loading polaris conda and spack environments": [[274, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[274, "e3sm-supported-machines"]], "Other machines": [[274, "other-machines"]], "Building supported E3SM components as standalone models": [[274, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[274, "setting-up-tasks"]], "Running a task": [[274, "running-a-task"]], "Running with a job script": [[274, "running-with-a-job-script"]], "Sea ice component": [[275, "sea-ice-component"]], "standard physics test": [[277, "standard-physics-test"]], "timestep and run duration": [[277, "timestep-and-run-duration"], [277, "id11"]], "visualization": [[277, "visualization"]], "exact restart test": [[277, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[19, "polaris.Component"]], "__init__() (polaris.component method)": [[19, "polaris.Component.__init__"]], "add_task() (polaris.component method)": [[20, "polaris.Component.add_task"]], "modelstep (class in polaris)": [[21, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[21, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[24, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[25, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[26, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[27, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[28, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[29, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[30, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[31, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[32, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[33, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[34, "polaris.Step"]], "__init__() (polaris.step method)": [[34, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[35, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[36, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[37, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[38, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[39, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[40, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[41, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[42, "polaris.Step.setup"]], "task (class in polaris)": [[43, "polaris.Task"]], "__init__() (polaris.task method)": [[43, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[44, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[45, "polaris.Task.configure"]], "main() (in module polaris.__main__)": [[46, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[47, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[48, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[49, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[49, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[50, "polaris.io.download"]], "module": [[51, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[51, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[52, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[53, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[54, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[55, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[56, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[57, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[58, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[59, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[59, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[60, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[61, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[62, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[63, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[64, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[71, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[72, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[72, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[73, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[76, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[77, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[78, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[79, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[80, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[81, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[82, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[83, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[84, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[85, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[86, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[86, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[87, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[97, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[98, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[99, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[100, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[101, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[102, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[103, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[104, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[105, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[106, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[107, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[108, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[109, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[110, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[111, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[112, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[113, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[113, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[114, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[115, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[116, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[117, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[118, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[119, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[128, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[128, "polaris.ocean.Ocean.__init__"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[129, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[130, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[130, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[131, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[132, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[133, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[134, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[135, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[136, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[137, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[137, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[138, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[138, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[139, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[139, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[140, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[141, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[142, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[142, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[143, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[144, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[145, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[145, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[146, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[146, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[147, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[148, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[148, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[149, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[150, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[150, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[151, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[152, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[153, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[153, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[154, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[154, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[155, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[156, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[156, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[157, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[158, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[158, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[159, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[160, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[161, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[161, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[162, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[163, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[164, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[164, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[165, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[166, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[167, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[167, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[168, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[169, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[169, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[170, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[171, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[171, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[172, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[173, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[173, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[174, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[175, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[175, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[176, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[177, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[177, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[178, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[179, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[180, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[180, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[181, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[182, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[183, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[184, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[185, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[185, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[186, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[187, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[187, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[188, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[189, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[189, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[190, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.run"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[191, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[191, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[192, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[193, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[194, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[194, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[195, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[196, "polaris.ocean.tasks.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[197, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[197, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[198, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[199, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[199, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[200, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[201, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[202, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[202, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[203, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[203, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[204, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[204, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[205, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[205, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[206, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[207, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[207, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[208, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[209, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[210, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[211, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[212, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[213, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[214, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[215, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[216, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[217, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[218, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[239, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[239, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[240, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[241, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[241, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[242, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[242, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[243, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[244, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[244, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[245, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[245, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[246, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[246, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[247, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})