Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.viz.VizMap", "polaris.ocean.tasks.cosine_bell.viz.VizMap.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.geostrophic.viz.VizMap", "polaris.ocean.tasks.geostrophic.viz.VizMap.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.viz.VizMap", "polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "Tasks", "inertial_gravity_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "Tasks", "inertial gravity wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 19, 21, 38, 46, 49, 50, 53, 135, 138, 153, 162, 163, 170, 173, 178, 183, 198, 245, 271, 274, 275, 276, 277, 278, 282, 283, 284, 285, 286, 287, 289, 291, 293, 295, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 324, 325, 326, 327, 332, 333, 334, 335, 336, 340, 342], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 67, 72, 74, 77, 80, 81, 91, 93, 95, 96, 102, 107, 108, 109, 110, 113, 114, 135, 138, 140, 146, 148, 150, 151, 153, 154, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 201, 204, 205, 206, 207, 208, 209, 210, 213, 218, 220, 221, 222, 223, 226, 231, 233, 234, 235, 236, 239, 241, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 299, 300, 301, 303, 304, 308, 310, 311, 313, 319, 321, 341, 342], "templat": [0, 5, 6, 7, 28, 29, 30, 115, 125, 129, 135, 138, 148, 151, 166, 172, 275, 276, 277, 282, 283, 311, 312, 313], "date": [1, 2, 5, 55, 271, 287, 293, 305, 313], "2023": [1, 17, 330, 331], "08": [1, 312, 324], "18": [1, 6, 313, 315], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 135, 312, 313, 318], "asai": [1, 313], "davi": [1, 313], "capabl": [1, 2, 6, 17, 135, 289, 292, 312, 318, 336], "design": [1, 135, 272, 289, 291, 292, 311, 318, 324], "here": [1, 6, 9, 12, 14, 17, 18, 135, 138, 274, 284, 285, 288, 289, 291, 292, 293, 308, 312, 313, 314, 315, 316, 317, 318, 319, 325, 326, 327, 328, 332, 333, 334, 335, 336, 340, 341], "abil": [1, 7, 325, 332], "across": [1, 6, 7, 9, 14, 19, 138, 274, 285, 289, 290, 291, 292, 293, 310, 312, 320, 324, 325, 326, 327, 332, 333], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 135, 138, 285, 287, 289, 290, 291, 292, 293, 311, 312, 313, 318, 321, 326, 328, 335, 336, 340, 341, 342], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 62, 66, 68, 71, 72, 75, 76, 77, 81, 92, 93, 95, 96, 102, 107, 110, 120, 131, 132, 133, 134, 135, 136, 138, 140, 146, 150, 154, 157, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 176, 177, 178, 182, 183, 186, 190, 192, 195, 197, 198, 201, 206, 208, 210, 211, 213, 221, 223, 224, 226, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 254, 255, 256, 258, 260, 271, 274, 275, 276, 277, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 304, 305, 309, 310, 311, 312, 313, 315, 318, 319, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340, 341], "document": [1, 3, 9, 14, 289, 292, 311, 313, 336], "refer": [1, 7, 14, 38, 160, 173, 263, 266, 269, 270, 289, 292, 293, 310, 311, 312, 321, 324, 328, 336], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 34, 47, 107, 113, 114, 169, 177, 285, 286, 287, 289, 290, 291, 292, 293, 295, 312, 313, 318, 324, 326, 334, 335, 336, 339, 340], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 85, 96, 98, 105, 113, 114, 115, 119, 122, 125, 135, 138, 140, 141, 142, 143, 144, 145, 147, 154, 157, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 187, 202, 203, 209, 214, 216, 217, 218, 227, 229, 230, 231, 239, 245, 249, 271, 273, 275, 277, 282, 283, 285, 286, 288, 289, 291, 293, 298, 299, 301, 303, 312, 313, 315, 318, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 63, 91, 92, 93, 135, 138, 154, 164, 239, 274, 275, 276, 277, 278, 282, 283, 289, 291, 292, 293, 312, 314, 315, 316, 317, 319, 324, 336, 341], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 131, 133, 134, 135, 138, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 305, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 337, 341, 342], "main": [1, 3, 6, 7, 9, 14, 43, 135, 197, 210, 285, 286, 291, 292, 293, 312, 342], "motiv": 1, "behind": [1, 292], "comput": [1, 7, 13, 14, 15, 79, 135, 138, 141, 142, 145, 149, 152, 154, 155, 160, 165, 189, 193, 215, 219, 228, 232, 266, 267, 268, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 293, 315, 316, 318, 319, 324, 325, 326, 327, 328, 330, 331, 332, 333, 336], "expens": [1, 289, 290], "could": [1, 14, 17, 19, 135, 275, 276, 277, 282, 283, 289, 290, 291, 292, 293, 312, 325, 326, 327, 332, 333], "time": [1, 5, 6, 7, 8, 14, 18, 19, 38, 49, 61, 86, 122, 135, 143, 144, 150, 159, 160, 164, 173, 187, 190, 202, 203, 214, 216, 217, 227, 229, 230, 239, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 308, 309, 310, 313, 315, 319, 336, 341], "order": [1, 5, 8, 13, 14, 138, 275, 276, 277, 278, 282, 283, 286, 289, 290, 293, 312, 325, 326, 327, 328, 331, 332, 333, 334, 336], "reflect": [1, 5, 293], "fact": [1, 14, 38, 135], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 134, 135, 138, 142, 143, 144, 158, 187, 202, 203, 214, 227, 249, 274, 275, 276, 277, 282, 283, 284, 285, 288, 289, 291, 292, 293, 308, 311, 312, 313, 315, 317, 318, 319, 321, 325, 326, 327, 328, 332, 333, 336, 341], "present": [1, 50, 122, 293, 312], "new": [1, 2, 5, 20, 26, 38, 49, 57, 60, 67, 74, 80, 96, 116, 117, 138, 148, 151, 164, 171, 188, 204, 215, 218, 228, 231, 239, 252, 263, 269, 270, 289, 291, 292, 293, 306, 309, 310, 311, 336], "success": [1, 2, 8, 48, 59, 271, 286, 305, 312, 313], "insofar": 1, "guarante": [1, 14, 135, 271, 293, 305], "per": [1, 8, 14, 25, 35, 37, 38, 45, 92, 93, 135, 138, 154, 289, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 340], "slurm": [1, 61, 94, 135, 289, 311, 313, 314, 315, 316, 317, 319, 336], "job": [1, 6, 135, 293, 311, 312, 314, 315, 316, 317, 319], "role": 1, "clear": [1, 2, 292, 312], "should": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 62, 75, 113, 114, 121, 122, 131, 132, 133, 134, 135, 136, 138, 140, 145, 157, 169, 177, 241, 243, 271, 285, 286, 287, 289, 290, 291, 293, 305, 306, 309, 310, 312, 313, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 340], "invoc": 1, "serial": [1, 44, 289, 291, 311, 312, 336], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 63, 67, 68, 71, 74, 75, 76, 80, 88, 91, 93, 95, 96, 97, 98, 99, 100, 104, 105, 106, 110, 113, 114, 115, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 135, 138, 140, 148, 151, 157, 159, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 183, 186, 188, 191, 194, 196, 198, 201, 204, 205, 207, 209, 213, 218, 220, 222, 226, 231, 233, 235, 239, 241, 243, 245, 248, 250, 252, 253, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 274, 275, 276, 277, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 293, 298, 299, 301, 303, 310, 311, 312, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 339, 340], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 81, 109, 111, 116, 119, 135, 138, 194, 207, 257, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 305, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 340], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 66, 67, 74, 80, 96, 124, 138, 139, 140, 148, 151, 154, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 183, 186, 188, 191, 194, 196, 197, 198, 201, 204, 205, 207, 209, 210, 211, 213, 215, 218, 220, 222, 224, 226, 228, 231, 233, 235, 238, 239, 240, 241, 243, 245, 248, 250, 252, 253, 255, 257, 259, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 289, 291, 296, 298, 299, 301, 302, 303, 305, 308, 312], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 100, 106, 107, 140, 280, 281, 312], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 40, 47, 49, 59, 109, 110, 121, 135, 138, 169, 177, 183, 198, 241, 243, 245, 274, 275, 276, 277, 278, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 309, 310, 311, 312, 313, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342], "relat": [1, 6, 7, 11, 13, 14, 135, 138, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 293, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 337], "inform": [1, 5, 7, 8, 38, 96, 120, 130, 215, 228, 289, 291, 293, 313, 315, 322, 336, 337], "belong": [1, 10, 12, 14, 25, 35, 38, 45, 49, 67, 74, 80, 96, 111, 138, 140, 148, 151, 154, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 183, 186, 188, 191, 194, 196, 198, 201, 204, 205, 207, 209, 211, 213, 218, 220, 222, 224, 226, 231, 233, 235, 238, 239, 240, 241, 243, 245, 248, 250, 252, 253, 255, 257, 259, 285, 286, 289, 291, 292, 298, 299, 301, 302, 303, 312, 341], "locat": [1, 5, 6, 9, 14, 19, 38, 50, 113, 114, 119, 138, 271, 289, 291, 293, 305, 310, 312, 313, 315, 318, 321, 324, 326, 336], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 138, 143, 144, 187, 202, 203, 214, 227, 263, 264, 265, 266, 267, 268, 269, 270, 274, 285, 287, 288, 289, 291, 312, 313, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 340], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 62, 95, 111, 114, 119, 121, 135, 138, 263, 266, 269, 270, 271, 286, 288, 289, 291, 293, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 332, 334, 335, 336, 340, 341], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 92, 93, 95, 114, 120, 135, 138, 139, 142, 143, 154, 164, 187, 202, 214, 227, 239, 249, 263, 269, 270, 271, 274, 285, 286, 287, 289, 290, 291, 292, 293, 296, 305, 310, 311, 312, 313, 318, 321, 322, 324, 325, 326, 327, 328, 332, 333, 335, 336, 337, 340, 342], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 92, 93, 135, 138, 154, 164, 239, 271, 285, 287, 289, 291, 293, 312, 313, 318, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336], "There": [1, 5, 6, 13, 263, 269, 270, 284, 285, 287, 289, 292, 293, 309, 312, 313, 336], "wai": [1, 5, 7, 13, 14, 38, 71, 76, 135, 138, 289, 291, 292, 293, 309, 311, 312, 318, 321, 328, 334], "list": [1, 2, 6, 7, 9, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 86, 92, 93, 110, 113, 114, 119, 120, 138, 140, 148, 151, 160, 175, 179, 183, 186, 198, 201, 213, 222, 224, 226, 235, 239, 245, 248, 250, 255, 289, 290, 291, 292, 293, 299, 310, 311, 312, 313, 315, 318, 319, 325, 326, 327, 332, 333, 336, 341, 342], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 111, 119, 120, 135, 138, 274, 280, 281, 285, 286, 287, 289, 290, 291, 293, 306, 310, 312, 313, 315, 318, 334, 335, 340], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 63, 69, 70, 79, 108, 114, 130, 135, 138, 140, 145, 179, 180, 183, 198, 245, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 299, 300, 308, 310, 312, 313, 318, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 340, 341], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 120, 121, 135, 138, 194, 207, 257, 263, 269, 270, 271, 280, 281, 284, 285, 286, 287, 289, 291, 292, 293, 312, 313, 318, 319, 321, 326, 328, 330, 331, 335, 336, 340, 342], "find": [1, 6, 7, 15, 59, 70, 94, 135, 271, 291, 292, 293, 309, 312, 313, 336], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 135, 138, 271, 273, 275, 276, 277, 278, 282, 283, 284, 286, 289, 291, 292, 305, 308, 311, 312, 313, 315, 318, 319, 321, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 336, 339], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 102, 107, 108, 116, 135, 138, 285, 286, 287, 289, 290, 291, 292, 293, 310, 312, 313, 314, 326, 336, 342], "would": [1, 2, 5, 9, 14, 18, 25, 35, 38, 45, 50, 92, 93, 96, 135, 138, 154, 164, 239, 274, 287, 289, 291, 292, 293, 309, 312, 318, 321, 336], "ident": [1, 2, 5, 18, 162, 170, 178, 274, 289, 290, 292, 298, 312, 324], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 82, 138, 286, 289, 291, 292, 312, 313], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 88, 91, 97, 98, 99, 100, 104, 105, 106, 115, 122, 124, 138, 140, 148, 151, 160, 263, 269, 270, 286, 287, 288, 289, 292, 293, 295, 305, 306, 310, 312, 313, 318, 322, 335, 336, 337, 340], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 69, 135, 138, 271, 289, 293, 310, 312, 313, 321, 328, 334, 336], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 74, 110, 126, 135, 138, 159, 271, 274, 275, 276, 277, 278, 282, 283, 285, 288, 289, 291, 292, 293, 306, 310, 311, 312, 313, 318, 321, 324, 325, 326, 327, 328, 332, 333, 336], "As": [1, 4, 5, 6, 9, 13, 18, 69, 138, 285, 289, 290, 291, 292, 293, 312, 313, 321, 325, 326, 327, 328, 332, 333, 334, 341], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 135, 138, 150, 166, 172, 190, 274, 280, 281, 284, 291, 292, 293, 310, 311, 312, 313, 325, 326, 327, 328, 332, 333, 336, 342], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 62, 63, 109, 110, 111, 112, 114, 135, 274, 288, 289, 291, 293, 310, 311, 312, 313, 314, 315, 316, 317, 319, 322, 324], "proce": [1, 293], "iter": [1, 271, 313], "through": [1, 2, 114, 292, 293, 306, 312], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 60, 67, 69, 70, 98, 105, 115, 117, 121, 129, 135, 140, 145, 154, 191, 205, 253, 274, 275, 276, 277, 278, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 309, 310, 311, 313, 315, 318, 321, 328, 330, 333, 336, 341, 342], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 94, 102, 107, 131, 133, 134, 135, 153, 154, 164, 239, 271, 275, 276, 277, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 305, 306, 309, 310, 312, 313, 321, 324, 326, 330, 334, 336], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 102, 114, 119, 131, 133, 134, 135, 138, 140, 147, 153, 186, 201, 213, 222, 226, 235, 248, 250, 255, 271, 286, 289, 291, 292, 293, 305, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324, 336], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 138, 153, 159, 161, 169, 177, 185, 200, 212, 225, 237, 247, 263, 269, 270, 285, 286, 291, 293, 297, 306, 311, 314, 315, 316, 317, 319, 336], "initi": [1, 7, 8, 38, 122, 138, 143, 160, 162, 163, 167, 170, 173, 178, 187, 191, 202, 205, 214, 218, 220, 227, 231, 233, 238, 240, 241, 243, 253, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 291, 292, 302, 309, 310, 311, 313, 321, 323, 341, 342], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 63, 65, 109, 110, 114, 119, 120, 122, 135, 138, 154, 241, 243, 273, 285, 289, 291, 306, 312, 313, 315, 317, 319, 324], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 68, 75, 135, 138, 169, 177, 193, 285, 286, 289, 291, 292, 310, 311, 312, 325, 326, 327, 328, 332, 333, 342], "skip": [1, 5, 8, 120, 341], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 60, 120, 121, 122, 126, 131, 132, 133, 134, 135, 136, 138, 154, 240, 273, 285, 289, 293, 312, 313, 314, 315, 316, 317, 318, 319, 324, 336, 342], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 60, 63, 109, 120, 135, 138, 157, 268, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 291, 292, 293, 311, 312, 314, 315, 316, 317, 319, 321, 324, 326, 328, 334, 336, 342], "complet": [1, 5, 8, 27, 28, 29, 107, 312, 336], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 60, 135, 138, 153, 239, 289, 291, 292, 293, 312, 313, 318, 321, 325, 326, 327, 332, 333, 336], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 138, 148, 151, 164, 188, 204, 218, 231, 239, 252, 274, 280, 281, 289, 290, 291, 292, 293, 311, 312, 321], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 135, 154, 289, 292, 293, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 336, 342], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 68, 69, 71, 84, 131, 132, 133, 134, 135, 136, 138, 154, 158, 162, 170, 178, 196, 209, 259, 263, 269, 270, 271, 274, 285, 289, 291, 292, 293, 298, 305, 310, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 332, 333, 336, 341], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 60, 66, 83, 84, 87, 88, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 127, 129, 130, 140, 143, 144, 145, 147, 148, 151, 154, 158, 160, 166, 169, 172, 177, 187, 194, 196, 202, 203, 207, 209, 214, 227, 257, 259, 262, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 290, 291, 292, 293, 299, 305, 306, 308, 309, 310, 311, 315, 318, 319, 321, 324, 325, 326, 327, 328, 332, 333, 335, 336, 339, 340, 342], "mode": [1, 5, 14, 286, 293, 310, 311, 312, 336], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 135, 138, 162, 170, 178, 271, 274, 289, 292, 293, 298, 305, 310, 312, 313, 318, 319, 324, 325, 326, 327, 332, 333], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 88, 91, 95, 114, 115, 124, 125, 126, 138, 148, 151, 157, 275, 276, 277, 282, 283, 289, 291, 292, 312, 325, 326, 327, 328, 332, 333], "them": [1, 7, 8, 9, 14, 17, 18, 25, 37, 135, 138, 154, 275, 276, 277, 278, 282, 283, 286, 287, 289, 291, 292, 293, 310, 312, 317, 318, 323, 336, 342], "constructor": [1, 9, 14, 138, 274, 280, 281, 285, 312], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 92, 93, 103, 121, 274, 286, 289, 291, 292, 293, 312, 335, 340, 341], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 60, 88, 115, 125, 126, 135, 138, 148, 151, 157, 166, 172, 291, 292, 312, 313, 336], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 62, 65, 67, 74, 80, 95, 96, 111, 113, 119, 124, 135, 140, 148, 151, 153, 154, 161, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 183, 185, 186, 188, 191, 194, 196, 198, 200, 201, 204, 205, 207, 209, 211, 212, 213, 218, 220, 222, 224, 225, 226, 231, 233, 235, 237, 238, 239, 240, 241, 243, 245, 247, 248, 250, 252, 253, 255, 257, 259, 285, 287, 288, 289, 290, 291, 295, 296, 297, 298, 299, 301, 302, 303, 306, 310, 311, 312, 313, 318, 320, 323, 341, 342], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 67, 74, 80, 96, 138, 140, 148, 151, 154, 164, 186, 188, 191, 194, 196, 201, 204, 205, 207, 209, 213, 218, 226, 231, 239, 248, 250, 252, 253, 255, 257, 259, 289, 291, 299, 312], "now": [1, 6, 135, 289, 293, 312, 313, 318], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 113, 114, 119, 120, 271, 286, 289, 291, 292, 293, 299, 305, 310, 312, 324, 328, 336, 342], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 135, 138, 274, 289, 293, 309, 312, 321], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 135, 164, 239, 274, 289, 290, 292, 293, 309, 312, 321, 324], "parent": [1, 33, 138, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 289], "resid": [1, 5, 9, 40, 138, 140, 186, 201, 213, 226, 248, 250, 255, 287, 289, 291], "insid": [1, 12, 287, 289, 292, 325, 326, 327, 332, 333], "situat": [1, 17, 31, 157, 312, 336], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 38, 39, 40, 120, 271, 274, 285, 287, 289, 291, 292, 293, 310, 312, 313, 324, 336, 341, 342], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 138, 249, 271, 279, 286, 291, 312, 326, 333, 335, 340, 341], "with_viz": [1, 275, 276, 277, 278, 282, 283, 291, 325, 326, 327, 328, 332, 333], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 73, 78, 80, 111, 113, 114, 119, 135, 138, 147, 153, 156, 158, 188, 191, 194, 196, 204, 205, 209, 252, 253, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 288, 289, 291, 292, 293, 305, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 327, 328, 332, 333, 342], "mesh": [1, 5, 7, 10, 17, 25, 38, 84, 85, 98, 105, 122, 140, 141, 143, 144, 148, 149, 151, 152, 154, 155, 156, 158, 160, 163, 165, 167, 183, 186, 187, 188, 189, 191, 194, 196, 198, 201, 202, 203, 204, 205, 207, 209, 213, 214, 215, 218, 219, 220, 222, 226, 227, 228, 231, 232, 233, 235, 238, 240, 241, 245, 248, 250, 252, 253, 255, 257, 259, 263, 269, 270, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 301, 302, 310, 311, 313, 321, 323, 336, 341], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 138, 140, 148, 151, 162, 163, 170, 173, 178, 188, 194, 204, 207, 218, 231, 252, 257, 271, 273, 286, 289, 291, 292, 293, 305, 313, 324, 326, 330, 331, 336], "forward": [1, 5, 7, 9, 14, 38, 138, 140, 148, 151, 160, 163, 171, 173, 194, 207, 238, 240, 257, 271, 286, 289, 291, 292, 302, 305, 313, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 340], "resolut": [1, 9, 13, 14, 17, 67, 70, 74, 75, 79, 97, 101, 104, 138, 140, 141, 145, 147, 148, 151, 153, 162, 163, 164, 167, 170, 171, 173, 175, 178, 183, 186, 188, 198, 201, 204, 213, 218, 220, 222, 224, 226, 231, 233, 235, 245, 248, 250, 252, 255, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 313, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 340, 342], "singl": [1, 5, 8, 9, 19, 122, 135, 237, 238, 240, 241, 243, 284, 289, 291, 292, 297, 298, 299, 301, 302, 303, 305, 306, 310, 312, 318, 322, 325, 326, 327, 329, 330, 331, 332, 333, 337, 338], "analysi": [1, 6, 9, 19, 138, 274, 291, 292, 310, 311, 313, 325, 326, 327, 330, 331, 332, 333, 342], "add": [1, 2, 5, 6, 7, 9, 13, 14, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 73, 78, 83, 115, 116, 117, 125, 126, 129, 130, 135, 138, 147, 153, 161, 166, 172, 185, 200, 212, 225, 237, 247, 285, 286, 289, 291, 292, 293, 297, 310, 312, 313, 319, 325, 326, 327, 332, 333], "remap": [1, 10, 19, 194, 207, 257, 275, 276, 277, 282, 283, 311, 325, 326, 327, 328, 332, 333, 335, 340], "visual": [1, 10, 13, 17, 222, 235, 275, 276, 277, 278, 280, 281, 282, 283, 285, 289, 291, 310, 311, 325, 326, 327, 328, 330, 331, 332, 333, 335, 340], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 119, 135, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 310, 311, 312, 313, 318, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 341, 342], "spheric": [1, 5, 148, 275, 276, 277, 278, 282, 283, 291, 325, 326, 327, 332, 333, 341], "qu": [1, 5, 138, 291, 312, 313, 323, 325, 326, 327, 328, 332, 333, 341], "base_mesh": [1, 5, 13, 67, 74, 140, 153, 191, 194, 196, 205, 209, 252, 253, 257, 259, 289, 291, 312, 325, 326, 327, 332, 333], "60km": [1, 5, 291, 325, 326, 327, 332, 333], "90km": [1, 5], "120km": [1, 5, 291], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 153, 291], "map": [1, 8, 17, 20, 31, 74, 75, 96, 121, 122, 157, 194, 196, 207, 209, 257, 259, 275, 276, 277, 278, 282, 283, 291, 293, 313], "viz": [1, 5, 19, 183, 198, 245, 289, 291, 325, 327, 332, 333], "two": [1, 5, 10, 18, 120, 138, 170, 180, 274, 275, 276, 278, 284, 285, 286, 289, 290, 292, 293, 298, 300, 312, 324, 325, 326, 327, 330, 331, 332, 333, 339], "first": [1, 6, 9, 14, 15, 86, 114, 135, 138, 274, 280, 281, 284, 289, 291, 292, 293, 309, 312, 314, 315, 316, 317, 318, 319, 324, 326, 328, 334, 336], "verbos": [1, 5, 6, 63, 65, 135, 289, 312, 341], "10": [1, 9, 13, 69, 135, 271, 274, 280, 281, 285, 286, 312, 313, 318, 321, 324, 325, 327, 328, 330, 331, 332, 334, 342], "name": [1, 5, 7, 8, 9, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 60, 61, 62, 63, 67, 74, 80, 84, 88, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 114, 115, 119, 120, 121, 122, 124, 125, 129, 135, 138, 140, 141, 142, 143, 144, 145, 148, 151, 153, 154, 157, 160, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 187, 188, 191, 194, 196, 202, 203, 204, 205, 207, 209, 214, 218, 227, 231, 239, 245, 248, 249, 250, 252, 253, 255, 257, 259, 262, 285, 286, 289, 291, 292, 293, 299, 301, 303, 310, 312, 313, 319, 324, 336, 341], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 86, 138, 143, 144, 159, 164, 187, 202, 203, 214, 227, 239, 284, 289, 292, 324, 325, 327, 332, 334, 339], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 57, 291, 292, 293, 325, 326, 327, 332, 333], "what": [1, 2, 6, 11, 13, 17, 135, 245, 291, 292, 312, 319, 335, 336, 340], "follow": [1, 4, 5, 7, 9, 13, 14, 19, 66, 135, 140, 263, 269, 270, 271, 273, 289, 290, 291, 293, 305, 306, 309, 312, 313, 318, 319, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 339], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 63, 67, 74, 80, 96, 113, 138, 140, 148, 151, 154, 164, 186, 188, 191, 194, 196, 201, 204, 205, 207, 209, 213, 218, 220, 222, 226, 231, 233, 235, 239, 241, 243, 248, 250, 252, 253, 255, 257, 259, 285, 287, 289, 291, 292, 312, 335, 336, 340, 342], "bold": [1, 291], "elsewher": [1, 293], "tree": [1, 7, 115, 117, 130, 291, 337], "thu": [1, 2, 7, 14, 312, 325, 326, 327, 332, 333], "similar": [1, 2, 5, 9, 12, 13, 14, 132, 135, 136, 138, 285, 287, 292, 293, 312, 313, 325, 327, 332, 333, 336], "had": [1, 135], "maintain": [1, 271, 325, 336], "local": [1, 5, 6, 8, 9, 11, 18, 40, 271, 287, 289, 293, 305, 309, 312, 313, 318, 319, 321], "debug": [1, 8, 131, 132, 133, 134, 135, 136, 312, 314, 315, 316, 317, 319, 325, 332], "easier": [1, 14, 289, 291, 292, 293, 313, 336, 341], "symbol": [1, 60, 289], "link": [1, 2, 7, 9, 11, 14, 40, 46, 53, 60, 135, 285, 289, 291, 293, 312, 318, 322, 336, 337], "were": [1, 48, 135, 239, 289, 292, 310, 312, 313, 317, 321], "even": [1, 6, 12, 13, 14, 40, 57, 135, 289, 292, 293, 312, 313, 318, 336], "compass": [1, 5, 271, 289, 291, 292, 310, 312], "though": [1, 11, 38, 291, 292, 312], "global": [1, 13, 17, 100, 101, 106, 245, 275, 276, 277, 278, 282, 283, 285, 289, 290, 292, 310, 311, 312, 313, 319, 325, 326, 327, 328, 332, 333, 335, 336, 340, 342], "dynamic_adjust": [1, 14, 313], "allow": [1, 2, 8, 17, 18, 25, 35, 38, 45, 57, 120, 135, 138, 154, 289, 310, 312, 313, 318, 321, 325, 326, 327, 332, 333, 334, 342], "one": [1, 2, 5, 6, 7, 10, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 60, 113, 114, 119, 135, 138, 153, 154, 170, 239, 271, 274, 275, 277, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 298, 308, 309, 310, 311, 313, 318, 319, 321, 324, 325, 326, 327, 331, 332, 333, 335, 336, 339, 340, 341, 342], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 84, 138, 147, 169, 177, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 312, 334], "port": [1, 312, 319], "instead": [1, 5, 6, 12, 14, 15, 25, 110, 131, 135, 289, 292, 293, 310, 312, 314, 325, 326, 327, 332, 333, 336, 341], "seri": [1, 14, 138, 175, 181, 276, 278, 280, 308, 312, 323], "indic": [1, 7, 8, 14, 17, 18, 38, 39, 107, 114, 122, 135, 138, 266, 287, 289, 309, 312, 313, 321, 334], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 273, 289, 291, 292, 293, 312, 315, 317, 319, 336], "ran": [1, 108], "ico": [1, 5, 138, 291, 312, 323, 325, 326, 327, 332, 333, 341], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 114, 119, 135, 154, 271, 286, 289, 293, 305, 312, 313, 314, 315, 316, 317, 318, 319, 336], "runtim": [1, 8, 14, 30, 44, 138, 150, 166, 172, 190, 289, 312], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 69, 97, 101, 104, 120, 122, 131, 132, 133, 134, 135, 136, 138, 263, 268, 269, 270, 273, 275, 276, 277, 282, 283, 285, 289, 292, 306, 309, 312, 313, 315, 318, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340], "01": [1, 14, 138, 306, 312, 334, 339], "00": [1, 14, 18, 138, 291, 306, 312, 319, 336], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 336], "02": [1, 315], "59": 1, "icos_map_60km": 1, "20": [1, 173, 274, 290, 312, 324, 334], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 57, 135, 274, 292, 293, 325, 326, 327, 332, 333, 334], "mechan": [1, 289], "prevent": [1, 289], "expect": [1, 2, 12, 17, 135, 138, 286, 289, 293, 312], "affect": [1, 6, 275, 277, 282, 283, 289, 293, 312, 328], "howev": [1, 13, 289, 290, 291, 293, 312], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 67, 120, 135, 138, 148, 151, 163, 164, 169, 173, 177, 188, 197, 204, 210, 218, 231, 238, 239, 240, 252, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 290, 291, 302, 310, 311, 312, 313, 318, 324, 341], "successfulli": [1, 48, 312], "after": [1, 5, 6, 7, 9, 17, 18, 19, 38, 40, 41, 81, 102, 107, 135, 264, 265, 271, 275, 277, 278, 282, 283, 286, 289, 291, 293, 305, 312, 313, 315, 319, 326, 328, 336, 339], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 108, 114, 119, 134, 135, 138, 140, 145, 147, 157, 186, 201, 213, 222, 226, 235, 248, 250, 255, 271, 274, 280, 281, 285, 287, 289, 290, 291, 292, 293, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 332, 333, 336, 341, 342], "remov": [1, 5, 14, 24, 52, 110, 274, 280, 281, 291, 293, 312], "longer": [1, 170, 274, 290, 298, 312, 324, 325, 326, 327, 328, 332, 333], "about": [1, 5, 6, 7, 8, 12, 14, 38, 96, 124, 138, 285, 289, 291, 292, 293, 312, 313, 315, 328, 333], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 30, 50, 57, 75, 135, 138, 166, 172, 271, 275, 276, 277, 278, 282, 283, 286, 289, 291, 292, 293, 305, 306, 309, 311, 312, 313, 314, 318, 319, 321, 324, 325, 326, 327, 332, 333, 336, 341], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 135, 138, 271, 273, 286, 289, 290, 291, 292, 306, 309, 313, 318, 322, 336], "enforc": [1, 273, 293], "framework": [1, 5, 7, 9, 12, 13, 14, 109, 271, 285, 286, 289, 291, 305, 310, 311, 312, 322, 334, 335, 337, 340, 342], "propos": [1, 2], "close": [1, 6, 70, 135, 311, 325, 326, 327, 332, 333], "root": [1, 40, 135, 271, 286, 289, 292, 293, 305, 310, 313, 314, 315, 316, 317, 318, 319, 321, 336], "live": [1, 50, 291, 336], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 68, 75, 76, 79, 82, 96, 102, 120, 138, 154, 170, 179, 215, 228, 263, 269, 270, 275, 276, 277, 278, 282, 283, 286, 287, 289, 291, 292, 298, 299, 318, 321, 324, 325, 328, 330, 331], "think": [1, 5, 312], "condit": [1, 7, 38, 138, 143, 163, 167, 187, 191, 202, 205, 214, 218, 220, 227, 231, 233, 238, 240, 241, 243, 253, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 302, 308, 310, 311, 313, 323, 341, 342], "shown": [1, 14, 135, 278, 287, 334], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 71, 74, 76, 97, 101, 102, 104, 113, 114, 119, 131, 132, 133, 134, 135, 136, 138, 271, 274, 280, 281, 285, 286, 287, 289, 290, 291, 292, 293, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 324, 325, 326, 327, 328, 331, 332, 333, 336, 341, 342], "simpli": [1, 14, 18, 57, 135, 163, 286, 289, 291, 293, 312, 321, 336, 341], "prefer": [1, 2, 135, 289, 290, 312, 313], "convent": [1, 289, 293, 312], "futur": [1, 13, 44, 289, 292, 310, 311, 312, 313, 328, 334, 336, 342], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 120, 135, 154, 271, 284, 286, 289, 292, 293, 295, 305, 306, 310, 311, 312, 313, 318, 321, 324, 331, 334, 336, 341, 342], "independ": [1, 2, 5, 290, 310], "yyyi": 2, "mm": [2, 138, 159], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 84, 85, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 124, 125, 129, 130, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 154, 155, 159, 162, 163, 164, 165, 167, 169, 170, 171, 173, 175, 177, 178, 179, 181, 183, 186, 187, 188, 189, 191, 194, 196, 198, 201, 202, 203, 204, 205, 207, 209, 211, 213, 214, 218, 219, 220, 222, 224, 226, 227, 231, 232, 233, 235, 238, 239, 240, 241, 243, 245, 248, 249, 250, 252, 253, 255, 257, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 299, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342], "purpos": [2, 285, 292, 312, 342], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 75, 121, 126, 135, 138, 154, 157, 261, 263, 269, 270, 271, 275, 276, 277, 278, 282, 283, 284, 285, 286, 289, 290, 292, 293, 305, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 325, 326, 327, 328, 332, 333, 334, 335, 336, 340], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 60, 74, 75, 80, 86, 92, 93, 96, 100, 106, 107, 109, 110, 115, 117, 120, 122, 125, 130, 131, 133, 134, 135, 138, 143, 144, 148, 150, 151, 153, 154, 162, 163, 164, 166, 167, 170, 171, 172, 173, 175, 178, 179, 181, 187, 190, 202, 203, 214, 227, 239, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 299, 301, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342], "summar": 2, "process": [2, 6, 8, 14, 33, 92, 93, 130, 289, 292, 293, 305, 310, 311, 312], "It": [2, 5, 6, 9, 14, 17, 38, 44, 121, 138, 280, 281, 285, 289, 290, 291, 292, 293, 310, 312, 313, 318, 326, 330, 331, 332, 333], "code": [2, 5, 7, 9, 12, 14, 38, 138, 271, 285, 286, 289, 290, 291, 295, 305, 310, 311, 313, 320, 324, 334, 336], "do": [2, 5, 9, 11, 14, 17, 18, 125, 135, 138, 285, 289, 291, 293, 309, 310, 311, 312, 318, 325, 326, 327, 328, 332, 333, 336], "doe": [2, 6, 9, 12, 14, 289, 295, 311, 312, 318], "primari": [2, 5, 9, 312, 341], "challeng": 2, "respect": [2, 8, 9, 14, 19, 138, 141, 289, 292, 325, 326, 327, 332, 333, 335, 340], "softwar": [2, 84, 319, 336], "appropri": [2, 5, 6, 14, 15, 26, 79, 85, 135, 138, 271, 274, 280, 281, 284, 286, 287, 289, 293, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 335, 336, 340], "final": [2, 5, 6, 7, 8, 135, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 291, 308, 312, 326, 332], "statement": [2, 12, 289, 310], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 74, 120, 138, 169, 177, 218, 231, 261, 271, 273, 274, 280, 281, 284, 286, 289, 293, 305, 312, 313, 318, 325, 326, 327, 328, 330, 331, 332, 333, 336], "regard": 2, "last": [2, 290, 293, 324, 336], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 115, 117, 138, 154, 174, 274, 280, 281, 289, 291, 293, 311, 312, 313, 324, 336], "your": [2, 4, 5, 6, 11, 135, 271, 292, 293, 305, 309, 312, 313, 314, 315, 318, 319, 325, 326, 327, 332, 333, 336], "appear": [2, 135, 289, 312], "under": [2, 17, 38, 39, 135, 138, 273, 289, 290, 293, 311, 321, 342], "head": [2, 273, 315], "correspond": [2, 6, 7, 120, 135, 138, 140, 271, 289, 293, 305, 324], "discuss": [2, 6, 138, 275, 276, 277, 278, 282, 283, 289, 292, 312, 324], "technic": [2, 7], "issu": [2, 6, 289, 290, 293], "focu": [2, 312], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 114, 119, 124, 129, 131, 132, 133, 134, 135, 136, 144, 148, 150, 151, 162, 164, 166, 170, 171, 172, 173, 178, 190, 203, 239, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 289, 290, 292, 293, 298, 305, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 324, 330, 331, 335], "To": [2, 5, 6, 12, 17, 18, 120, 135, 138, 271, 289, 292, 293, 305, 306, 312, 314, 315, 316, 317, 318, 319, 321, 325, 326, 327, 332, 333, 336], "extent": [2, 13, 17, 312, 324], "possibl": [2, 8, 11, 70, 138, 273, 275, 276, 277, 278, 282, 283, 289, 290, 291, 292, 312, 321, 328], "other": [2, 5, 6, 7, 8, 9, 10, 13, 15, 17, 19, 38, 39, 41, 49, 57, 107, 131, 180, 275, 276, 277, 278, 282, 283, 284, 285, 286, 287, 291, 292, 293, 300, 309, 310, 311, 313, 314, 324, 325, 326, 327, 332, 333, 342], "clean": [2, 4, 5, 6, 114, 119, 289, 291, 293], "plan": [2, 13, 138, 271, 280, 281, 289, 305, 310, 330, 331, 342], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 114, 131, 135, 138, 142, 143, 187, 202, 214, 227, 249, 273, 274, 280, 281, 284, 289, 292, 293, 312, 313, 314, 322, 325, 326, 327, 328, 330, 331, 332, 333, 336, 337, 342], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 131, 132, 133, 134, 135, 136, 138, 271, 286, 289, 291, 292, 293, 305, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 325, 326, 327, 328, 332, 333, 336, 341, 342], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 96, 100, 106, 120, 125, 135, 138, 154, 159, 164, 239, 271, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 305, 308, 309, 310, 311, 312, 313, 318, 322, 325, 326, 327, 332, 333, 335, 336], "intend": [2, 6, 8, 9, 290, 313, 331, 342], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 63, 120, 273, 275, 276, 277, 278, 282, 283, 287, 289, 292, 293, 309, 312, 328, 336], "pde": 2, "solver": [2, 291, 293, 311, 336], "well": [2, 6, 9, 12, 13, 135, 138, 266, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 293, 310, 312, 313, 326, 336, 342], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 60, 84, 88, 93, 97, 98, 99, 100, 101, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 120, 122, 125, 126, 129, 130, 135, 140, 143, 144, 150, 154, 157, 164, 186, 190, 193, 194, 201, 203, 207, 213, 214, 222, 226, 227, 235, 248, 250, 255, 257, 267, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 291, 292, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 339, 340, 341, 342], "low": [2, 122, 328], "variabl": [2, 5, 13, 19, 20, 25, 38, 41, 48, 49, 57, 67, 74, 80, 84, 96, 97, 101, 104, 120, 122, 124, 125, 130, 135, 138, 140, 141, 142, 143, 144, 145, 148, 151, 154, 160, 164, 167, 173, 175, 179, 183, 187, 194, 196, 198, 202, 203, 207, 209, 213, 214, 215, 218, 220, 222, 224, 226, 227, 228, 231, 233, 235, 239, 245, 248, 249, 250, 255, 257, 259, 263, 269, 270, 273, 284, 289, 292, 293, 299, 300, 305, 309, 312, 314, 315, 316, 317, 318, 319, 322, 324, 335, 336, 337, 340], "declar": [2, 7], "interfac": [2, 10, 261, 262, 263, 269, 270, 292, 293, 311, 312, 321], "sequenc": [2, 5, 14, 275, 276, 277, 278, 282, 283, 288, 289, 292, 310, 312, 336, 341, 342], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 60, 92, 93, 94, 96, 107, 120, 122, 131, 132, 133, 134, 135, 136, 138, 154, 159, 164, 239, 274, 289, 291, 292, 293, 306, 309, 310, 312, 313, 318, 319, 321, 325, 326, 327, 328, 332, 333, 335, 336, 340], "want": [2, 5, 6, 11, 14, 17, 18, 51, 135, 138, 289, 291, 293, 309, 312, 313, 318, 319, 334, 336, 342], "math": 2, "syntax": [2, 138, 312], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 293, 310, 312, 336], "2": [2, 6, 13, 14, 15, 18, 39, 135, 138, 178, 273, 274, 277, 282, 283, 287, 290, 293, 299, 306, 312, 313, 315, 318, 321, 322, 324, 326, 328, 329, 330, 331, 336], "2ab": 2, "imag": [2, 7, 19, 121, 122, 285, 312, 335, 340], "keep": [2, 5, 6, 9, 14, 25, 57, 275, 276, 277, 278, 282, 283, 285, 286, 289, 291, 293, 312, 335, 340], "mind": [2, 5, 312], "quit": [2, 287, 289, 291, 312], "small": [2, 9, 44, 135, 285, 289, 312, 314, 315, 320, 321, 332, 334, 336], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 79, 92, 93, 96, 109, 110, 111, 114, 126, 135, 138, 140, 154, 159, 164, 239, 263, 266, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342], "png": [2, 13, 19, 275, 276, 277, 278, 282, 283, 289, 312], "okai": [2, 6, 289, 312], "size": [2, 13, 19, 69, 70, 79, 138, 156, 158, 160, 285, 312, 313, 324, 326, 328, 330, 331, 334, 335, 340], "repo": [2, 5, 6, 135, 271, 305, 311, 312, 337], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 135, 138, 285, 286, 287, 289, 290, 291, 292, 293, 309, 310, 312, 313, 315, 321, 335, 336, 341, 342], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 289, 291, 293, 312], "sourc": [2, 6, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 289, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 312, 313, 314, 315, 316, 317, 318, 319, 336], "project": [2, 5, 6, 7, 66, 100, 106, 271, 292, 293, 305, 306, 312, 313, 314, 315, 318, 336, 337], "manag": [2, 309, 318], "item": [2, 312], "git": [2, 6, 16, 95, 271, 293, 305, 312, 313, 336], "branch": [2, 5, 135, 271, 286, 289, 293, 305, 311, 312, 336], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 289, 293, 318], "block": [2, 291], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 97, 101, 104, 135, 138, 285, 287, 289, 291, 292, 293, 309, 311, 312, 313, 318, 324, 325, 326, 327, 328, 332, 333, 336, 342], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 138, 285, 286, 289, 291, 292, 312], "example_funct": 2, "foo": [2, 292], "return": [2, 7, 15, 31, 48, 56, 59, 61, 68, 69, 70, 75, 79, 85, 86, 88, 91, 92, 102, 111, 112, 114, 115, 117, 120, 125, 129, 130, 138, 141, 142, 143, 144, 149, 152, 153, 155, 157, 159, 160, 165, 187, 189, 193, 202, 203, 214, 216, 217, 219, 227, 229, 230, 232, 249, 261, 264, 265, 266, 267, 268, 291, 292, 312, 326], "how": [2, 5, 6, 12, 14, 74, 138, 288, 289, 291, 292, 293, 313, 318, 319], "show": [2, 7, 13, 289, 312, 318, 319, 324, 325, 326, 327, 328, 332, 333, 335, 340], "met": 2, "regress": [2, 274, 275, 276, 277, 278, 282, 283, 290, 310, 311, 312, 324, 326, 336, 341], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 62, 91, 92, 93, 94, 95, 114, 119, 135, 138, 198, 245, 261, 263, 264, 265, 269, 270, 289, 292, 311, 312, 313, 315, 318, 319, 321, 330, 331, 335, 336, 340, 342], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 62, 95, 109, 111, 114, 119, 134, 135, 169, 177, 194, 197, 207, 210, 257, 287, 288, 289, 290, 291, 292, 293, 309, 310, 312, 313, 318, 325, 326, 327, 328, 332, 333, 334, 336, 342], "properli": [2, 131, 133, 134, 312, 313, 336], "addit": [2, 7, 9, 18, 38, 138, 284, 285, 286, 287, 289, 291, 292, 293, 312, 328], "modif": [2, 7, 289, 306], "nightli": [2, 293, 336, 341], "might": [2, 6, 11, 14, 17, 19, 135, 138, 285, 289, 293, 312, 313, 318, 336], "made": [2, 5, 17, 38, 41, 49, 120, 289, 291, 292, 306, 308, 310, 312, 342], "continu": [2, 6, 289, 312], "page": [3, 7, 135, 314], "auto": 3, "summari": [3, 315], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 75, 113, 114, 135, 138, 273, 274, 275, 276, 277, 278, 282, 283, 285, 287, 289, 290, 291, 292, 293, 310, 318, 322, 324, 328, 335, 336, 337, 340, 342], "relev": [3, 7, 9, 138, 275, 276, 277, 278, 280, 281, 282, 283, 312, 314, 315, 316, 317, 318, 319, 335, 336, 340], "seaic": [3, 10, 20, 40, 286, 289, 308, 310, 311, 336, 337, 340, 342], "long": [4, 25, 35, 38, 45, 92, 93, 154, 164, 239, 289, 312, 324, 336], "procedur": [4, 135, 293, 312, 319], "conda": [4, 5, 16, 95, 131, 133, 134, 135, 271, 286, 292, 305, 311, 312, 313, 314, 315, 316, 317, 319], "environ": [4, 5, 131, 133, 134, 271, 286, 292, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319], "spack": [4, 5, 131, 133, 134, 309, 311, 312, 314, 315, 316, 317, 318, 319], "compil": [4, 5, 6, 14, 131, 132, 133, 134, 135, 136, 309, 311, 312, 314, 315, 316, 317, 318, 319, 336], "system": [4, 5, 6, 25, 35, 38, 45, 92, 93, 94, 131, 133, 134, 135, 154, 164, 239, 289, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 336], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 66, 88, 115, 131, 133, 134, 135, 138, 148, 151, 285, 286, 287, 289, 291, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 336], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 75, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 111, 113, 114, 115, 117, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 150, 166, 169, 172, 177, 184, 190, 199, 239, 246, 260, 263, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 288, 289, 291, 292, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 340, 341], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 81, 95, 107, 108, 111, 113, 114, 119, 120, 131, 132, 133, 134, 135, 136, 138, 169, 177, 260, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 288, 289, 291, 292, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 325, 326, 327, 332, 333, 335, 340, 341, 342], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 88, 95, 115, 119, 125, 135, 138, 148, 151, 285, 286, 287, 288, 289, 291, 293, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 336], "Then": [4, 6, 7, 11, 14, 131, 132, 133, 134, 135, 136, 271, 274, 280, 281, 284, 286, 289, 291, 293, 305, 312, 318, 324, 328, 336], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 66, 91, 92, 93, 102, 114, 119, 134, 135, 140, 148, 150, 151, 154, 163, 164, 166, 170, 172, 175, 179, 181, 186, 188, 190, 201, 204, 213, 218, 222, 226, 231, 235, 238, 239, 240, 248, 250, 252, 255, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 287, 288, 290, 291, 292, 298, 299, 302, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 341, 342], "script": [4, 5, 6, 12, 19, 54, 62, 132, 135, 136, 292, 310, 311, 312, 315, 318], "doc": [4, 7, 312, 319], "cd": [4, 6, 271, 293, 305, 312, 315, 336], "html": [4, 322], "view": [4, 280, 281, 293, 330, 331], "open": [4, 6, 293, 312], "_build": 4, "index": [4, 15, 18, 86, 122, 138, 140, 141, 143, 144, 145, 187, 202, 203, 214, 227, 263, 264, 265, 266, 267, 268, 269, 270, 285, 312], "act": [5, 292, 321], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 135, 162, 163, 274, 280, 281, 284, 286, 289, 291, 312, 313, 318, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336], "These": [5, 6, 8, 9, 14, 20, 38, 135, 138, 271, 273, 286, 289, 291, 292, 293, 305, 306, 311, 312, 313, 318, 324, 328, 331, 332, 336, 341, 342], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 62, 95, 135, 138, 147, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 290, 291, 309, 310, 312, 315, 318, 319, 322, 324, 325, 326, 327, 328, 332, 333, 337], "describ": [5, 7, 14, 17, 19, 95, 115, 117, 130, 138, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 293, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 325, 326, 327, 328, 332, 336], "instal": [5, 6, 135, 293, 312, 318, 319, 336], "abov": [5, 7, 14, 18, 135, 285, 287, 289, 290, 291, 292, 293, 312, 313, 325, 326, 327, 328, 332, 334, 336, 341], "off": [5, 6, 293, 309], "http": [5, 7, 11, 14, 60, 289, 292, 309, 311, 312, 313, 319, 322, 336, 337], "github": [5, 6, 7, 292, 293, 311, 312, 313, 322, 336, 337], "com": [5, 6, 7, 14, 60, 292, 293, 311, 312, 313, 336, 337], "e3sm": [5, 7, 10, 11, 38, 124, 135, 271, 286, 289, 290, 292, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 337], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 57, 60, 67, 68, 74, 75, 80, 96, 103, 113, 114, 119, 124, 135, 138, 140, 148, 151, 153, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 183, 186, 188, 191, 194, 196, 198, 201, 204, 205, 207, 209, 211, 213, 215, 218, 220, 222, 224, 226, 228, 231, 233, 235, 238, 239, 240, 241, 243, 245, 248, 250, 252, 253, 255, 257, 259, 263, 269, 270, 275, 276, 277, 278, 282, 283, 284, 285, 289, 290, 291, 292, 298, 299, 301, 302, 303, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 325, 326, 327, 332, 333, 336, 341], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 131, 133, 134, 135, 274, 275, 276, 277, 278, 281, 282, 283, 289, 293, 309, 312, 313, 318, 322, 323, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 337, 339, 341, 342], "mean": [5, 293, 312, 321, 324, 325, 326, 327, 328, 332, 333, 341], "chang": [5, 6, 8, 17, 74, 107, 108, 138, 147, 271, 286, 289, 290, 291, 292, 293, 305, 310, 312, 313, 315, 319, 321, 324, 325, 326, 327, 332, 333, 336, 341], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 66, 102, 109, 135, 138, 274, 280, 281, 284, 286, 289, 290, 291, 292, 293, 309, 310, 311, 312, 313, 318, 319, 336], "tool": [5, 6, 9, 12, 14, 17, 271, 286, 289, 293, 305, 311, 312, 313], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 62, 75, 84, 89, 92, 93, 96, 102, 109, 120, 121, 122, 123, 124, 125, 130, 131, 135, 138, 140, 141, 142, 143, 145, 149, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 172, 179, 183, 187, 189, 194, 198, 202, 207, 214, 219, 224, 225, 227, 232, 239, 245, 249, 250, 255, 257, 261, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 299, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 341, 342], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 63, 66, 72, 77, 91, 92, 93, 95, 96, 109, 110, 111, 113, 114, 119, 135, 138, 154, 156, 158, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 289, 290, 293, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 337, 341], "support": [5, 6, 8, 13, 17, 38, 138, 263, 269, 270, 273, 289, 292, 305, 310, 311, 312, 313, 315, 319, 321, 324, 334, 342], "machin": [5, 8, 9, 38, 40, 61, 62, 95, 113, 114, 119, 271, 289, 292, 305, 311, 312, 313, 314, 315, 316, 317, 319], "option": [5, 7, 9, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 67, 73, 74, 75, 78, 80, 84, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 110, 113, 114, 115, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 135, 141, 143, 144, 147, 148, 150, 151, 154, 157, 159, 164, 166, 172, 174, 184, 187, 190, 199, 202, 203, 214, 215, 227, 228, 239, 241, 243, 246, 261, 263, 264, 265, 269, 270, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 301, 305, 306, 309, 311, 313, 321, 323, 336, 342], "help": [5, 6, 13, 135, 285, 286, 287, 289, 293, 311, 312, 318, 322, 337], "usag": [5, 15, 19, 291, 313, 315, 319], "h": [5, 14, 312, 328], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 130, 135, 138, 140, 145, 216, 217, 229, 230, 239, 275, 276, 277, 278, 282, 283, 289, 291, 292, 293, 309, 312, 313, 315, 317, 318, 323, 324, 325, 327, 330, 331, 332, 336, 341, 342], "n": [5, 6, 68, 75, 76, 82, 289, 312, 315, 318, 319, 324, 326, 328, 330, 331, 335, 336, 340], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 61, 62, 63, 67, 68, 69, 70, 71, 79, 91, 92, 93, 96, 114, 135, 138, 149, 152, 154, 155, 156, 158, 164, 165, 179, 189, 215, 219, 228, 232, 239, 271, 274, 280, 281, 285, 289, 290, 291, 292, 299, 310, 312, 313, 318, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340], "v": [5, 293, 312, 325, 327, 328, 330, 331, 332, 341], "By": [5, 14, 18, 39, 40, 138, 271, 286, 289, 291, 305, 312, 313, 324, 326, 334], "default": [5, 7, 9, 14, 15, 18, 19, 25, 39, 40, 49, 55, 62, 75, 80, 86, 87, 95, 96, 97, 101, 104, 110, 114, 116, 119, 122, 131, 133, 134, 135, 138, 142, 143, 164, 187, 202, 214, 227, 271, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 291, 293, 305, 306, 311, 313, 314, 315, 316, 317, 318, 319, 321, 325, 326, 327, 332, 333, 334, 335, 336, 340, 342], "planar": [5, 9, 122, 138, 273, 286, 289, 312, 330, 331, 334, 335, 340, 341, 342], "baroclinic_channel": [5, 7, 9, 14, 18, 271, 279, 285, 286, 289, 292, 312, 324, 336, 341, 342], "10km": [5, 18, 274, 312, 324, 336, 341, 342], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 69, 131, 132, 133, 134, 135, 136, 138, 162, 164, 178, 238, 239, 240, 263, 269, 270, 274, 275, 276, 277, 280, 281, 282, 283, 284, 286, 287, 289, 291, 293, 306, 309, 312, 313, 315, 318, 319, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336], "decomp": [5, 286, 312, 336, 341], "displai": [5, 8, 319], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 60, 63, 66, 95, 111, 113, 114, 119, 120, 122, 135, 140, 271, 286, 289, 291, 292, 293, 299, 305, 310, 312, 313, 314, 315, 316, 317, 318, 319, 336, 342], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 60, 62, 95, 96, 109, 111, 113, 114, 119, 120, 135, 154, 162, 163, 164, 167, 169, 170, 171, 173, 175, 177, 178, 179, 181, 194, 207, 239, 257, 271, 274, 286, 288, 289, 290, 291, 292, 293, 299, 301, 303, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 325, 326, 327, 328, 332, 333, 336, 342], "messag": [5, 8, 135, 289, 309, 319], "task_expr": [5, 63], "flag": [5, 6, 135, 289, 292, 309, 310, 312, 313, 322, 324, 336, 337], "suppli": [5, 6, 7, 15, 18, 130, 135, 289, 293, 312], "substr": [5, 135], "regular": [5, 19, 63, 68, 75, 183, 198, 245, 250, 255, 312, 314, 317, 318, 319, 328, 336], "express": [5, 63], "subset": 5, "search": [5, 63, 315], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 69, 79, 85, 88, 92, 93, 110, 115, 117, 120, 125, 138, 140, 141, 144, 145, 153, 154, 173, 203, 266, 274, 275, 276, 277, 278, 282, 283, 284, 289, 291, 309, 311, 312, 313, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 340, 341], "pass": [5, 8, 9, 12, 13, 14, 18, 79, 120, 121, 138, 285, 286, 289, 291, 292, 293, 310, 336], "similarli": [5, 8, 271, 289, 291, 293, 318, 336], "result": [5, 13, 18, 59, 70, 79, 135, 138, 162, 170, 175, 178, 181, 243, 274, 275, 276, 277, 278, 282, 283, 289, 290, 292, 293, 298, 303, 310, 312, 313, 324, 325, 326, 327, 328, 332, 333, 335, 340, 341], "descript": [5, 7, 312, 313, 322, 337], "short": [5, 163, 238, 240, 289, 290, 291, 292, 302, 312, 324], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 62, 91, 92, 93, 119, 135, 138, 139, 154, 162, 163, 238, 240, 274, 284, 285, 286, 289, 290, 291, 292, 306, 310, 312, 313, 314, 315, 316, 317, 318, 319, 336, 341], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 119, 121, 122, 135, 138, 140, 154, 197, 210, 273, 289, 291, 293, 312, 321, 328, 342], "built": [5, 14, 114, 119, 135, 271, 286, 293, 305, 311, 313, 318, 336], "standalon": [5, 14, 134, 135, 286, 293, 310, 311, 318, 337], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 31, 38, 40, 66, 84, 98, 105, 115, 117, 119, 129, 130, 131, 132, 133, 134, 135, 136, 139, 154, 157, 160, 194, 207, 209, 215, 228, 245, 257, 262, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 289, 292, 293, 296, 305, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 324, 328, 330, 334, 335, 336, 337, 340, 341, 342], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 114, 119, 135, 289, 291, 292, 293, 309, 312, 315, 319, 321, 325, 326, 327, 328, 332, 333, 336], "num": 5, "f": [5, 9, 11, 18, 138, 193, 286, 289, 291, 292, 293, 312, 313, 319, 324, 328, 330, 336], "m": [5, 6, 14, 68, 75, 76, 82, 274, 284, 285, 293, 312, 314, 315, 316, 317, 319, 321, 324, 326, 327, 328, 332, 334, 336], "mach": [5, 9, 38, 135, 311, 314, 315, 316, 317, 318, 319, 336], "w": [5, 6, 293, 310, 312, 336], "p": [5, 6, 293, 312, 313, 336], "suite_nam": [5, 8, 110, 112, 114, 119, 336], "copy_execut": [5, 114, 119, 336], "specifi": [5, 6, 14, 17, 18, 19, 40, 135, 138, 273, 289, 293, 308, 312, 313, 319, 324, 325, 326, 327, 332, 333, 335, 336, 340], "altern": [5, 13, 289, 306, 336], "task_numb": 5, "multipl": [5, 9, 14, 135, 272, 290, 291, 292, 293, 312, 318, 324, 336], "test": [5, 7, 8, 9, 19, 49, 50, 55, 62, 91, 92, 93, 112, 120, 135, 139, 140, 146, 148, 151, 161, 163, 164, 170, 171, 173, 174, 175, 176, 178, 183, 184, 185, 186, 188, 191, 194, 195, 198, 199, 200, 201, 204, 205, 207, 208, 211, 212, 213, 215, 218, 220, 221, 222, 223, 224, 225, 226, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 261, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 296, 297, 298, 301, 302, 303, 304, 305, 308, 310, 311, 317, 318, 319, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341], "separ": [5, 7, 9, 14, 17, 18, 140, 289, 290, 310, 312, 325, 326, 327, 332, 333, 336], "space": [5, 6, 7, 9, 13, 135, 280, 281, 289, 293, 312, 315, 318, 328, 336], "requir": [5, 6, 8, 14, 25, 35, 38, 39, 45, 96, 138, 154, 164, 239, 271, 285, 286, 289, 290, 291, 292, 293, 305, 306, 309, 311, 312, 313, 318, 321, 322, 335, 336, 337, 340, 342], "few": [5, 13, 14, 25, 35, 38, 45, 92, 93, 135, 154, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 292, 312, 313, 318], "basic": [5, 7, 313, 315, 318, 328, 336], "piec": [5, 285, 286, 312], "abl": [5, 131, 132, 133, 134, 136, 138, 289, 290, 293, 312, 318, 336], "place": [5, 6, 14, 121, 135, 285, 289, 291, 306, 312, 318], "download": [5, 6, 8, 10, 38, 40, 47, 135, 169, 177, 291, 292, 293, 313, 336, 341], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 135, 138, 273, 275, 276, 277, 278, 282, 283, 285, 287, 289, 291, 292, 293, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 336, 337, 341, 342], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 102, 115, 117, 118, 121, 122, 124, 130, 135, 194, 207, 257, 263, 269, 270, 289, 293, 311, 313, 314, 315, 316, 317, 318, 336, 341, 342], "r": [5, 193, 319, 325, 326, 327, 332], "tell": [5, 6, 135, 293], "re": [5, 6, 9, 291, 292, 293, 310, 312, 313, 318, 319, 325, 326, 327, 332, 333], "leav": [5, 19, 275, 276, 277, 282, 283, 313, 325, 326, 327, 332, 333], "unknown": [5, 135, 292, 318], "component_path": [5, 9, 114, 119, 271, 286, 305, 313, 336], "absolut": [5, 9, 38, 40, 57, 114, 119, 271, 286, 289, 293, 305, 336], "landic": [5, 6, 12, 20, 40, 66, 119, 285, 286, 288, 289, 291, 293, 310, 311, 312, 313, 336, 342], "e3sm_submodul": [5, 271, 286, 293, 305, 306, 312], "mali": [5, 135, 286, 289, 293, 310, 312, 313, 336, 342], "dev": [5, 6, 7, 275, 277, 278, 282, 283, 285, 286, 288, 289, 292, 293, 311, 312, 322, 336, 337], "albani": [5, 131, 133, 134, 135, 286, 313, 314, 315, 316, 319, 336], "depend": [5, 14, 17, 19, 38, 39, 47, 107, 108, 135, 138, 140, 169, 177, 186, 201, 213, 226, 248, 250, 255, 291, 293, 310, 311, 312, 313, 318, 319, 321, 325, 326, 327, 332, 333, 336, 342], "whether": [5, 8, 13, 14, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 60, 63, 109, 110, 114, 119, 120, 121, 122, 126, 135, 138, 150, 153, 154, 166, 172, 183, 190, 198, 239, 241, 243, 245, 250, 255, 280, 281, 285, 289, 291, 293, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 340], "omega": [5, 31, 124, 154, 157, 215, 228, 271, 286, 292, 293, 310, 312, 322, 328, 330, 331, 336], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 61, 62, 73, 75, 78, 91, 92, 93, 94, 95, 111, 113, 114, 119, 121, 124, 125, 126, 127, 129, 130, 147, 148, 150, 151, 154, 157, 159, 166, 172, 173, 183, 184, 190, 198, 199, 215, 228, 245, 246, 261, 263, 264, 265, 269, 270, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 305, 306, 309, 311, 321, 336, 342], "point": [5, 6, 9, 54, 60, 99, 135, 271, 273, 285, 286, 291, 292, 293, 305, 312, 313, 318, 332, 336], "much": [5, 6, 14, 289, 312], "config_fil": [5, 9, 114, 119], "work_dir": [5, 11, 38, 49, 62, 95, 113, 114, 119, 120, 289, 291, 312], "recommend": [5, 7, 11, 19, 135, 289, 290, 292, 293, 312, 318], "itself": [5, 6, 7, 9, 38, 46, 53, 285, 286, 288, 289, 291, 293, 312, 336], "temp": 5, "scratch": [5, 6, 293, 312, 315, 319, 336], "avoid": [5, 289, 312], "confus": [5, 14, 292, 293, 312], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 83, 84, 93, 96, 109, 110, 120, 138, 140, 144, 145, 148, 151, 154, 160, 169, 177, 179, 180, 186, 194, 201, 203, 207, 213, 222, 226, 235, 248, 250, 255, 257, 262, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 291, 299, 300, 308, 310, 313, 319, 325, 326, 327, 328, 332, 333, 336, 341], "compar": [5, 10, 18, 38, 41, 48, 113, 114, 119, 120, 138, 179, 180, 239, 275, 276, 277, 278, 282, 283, 284, 289, 290, 291, 292, 293, 299, 300, 308, 310, 312, 323, 324, 336, 339, 341], "previou": [5, 180, 289, 293, 300, 312, 323, 336, 341], "same": [5, 7, 9, 14, 18, 38, 39, 40, 48, 120, 135, 138, 142, 143, 187, 202, 214, 227, 249, 274, 284, 285, 287, 289, 290, 291, 292, 293, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 332, 333, 334, 336, 341, 342], "baseline_dir": [5, 38, 113, 114, 119, 289], "mani": [5, 6, 8, 9, 138, 285, 287, 289, 291, 292, 293, 311, 312, 324, 335, 340], "valid": [5, 10, 38, 41, 48, 138, 148, 151, 263, 264, 265, 266, 267, 268, 269, 270, 280, 281, 284, 289, 292, 293, 311, 321, 324], "timer": [5, 18, 38, 289, 290, 292], "both": [5, 6, 7, 8, 13, 14, 30, 135, 138, 159, 166, 172, 274, 285, 286, 288, 289, 293, 311, 312, 313, 323, 326, 330, 331, 334], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 114, 119, 271, 286, 293, 305, 313, 319, 336], "give": [5, 14, 18, 135, 289, 292, 293, 312, 313, 336], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 18, 19, 25, 37, 107, 135, 138, 154, 263, 269, 270, 271, 274, 280, 281, 285, 286, 289, 291, 292, 293, 305, 310, 312, 313, 318, 319, 321, 324, 325, 326, 327, 328, 332, 333, 334, 336, 341], "case": [5, 6, 7, 8, 9, 14, 19, 28, 29, 49, 50, 55, 62, 91, 92, 93, 115, 120, 135, 138, 139, 146, 163, 170, 171, 173, 174, 175, 176, 178, 184, 185, 186, 188, 191, 194, 195, 199, 201, 204, 205, 207, 208, 211, 213, 215, 218, 220, 221, 222, 223, 224, 226, 228, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 261, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 296, 298, 301, 302, 304, 310, 311, 312, 318, 319, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340, 341], "pre": [5, 135, 293], "copi": [5, 6, 8, 40, 55, 114, 119, 312, 315, 336], "just": [5, 14, 25, 35, 38, 45, 63, 135, 154, 289, 292, 293, 310, 312, 315, 319], "wish": [5, 7, 14, 50, 289, 293, 312, 336], "again": [5, 14, 134, 138, 271, 289, 291, 293, 309, 336], "later": [5, 8, 18, 25, 35, 38, 45, 57, 135, 154, 289, 312, 313], "anticip": [5, 312], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 108, 121, 135, 147, 271, 273, 285, 289, 290, 291, 293, 305, 306, 309, 310, 312, 313, 319, 325, 326, 327, 328, 332, 333, 334, 335, 336, 340, 342], "delet": [5, 114, 119, 292, 293, 309, 336], "fresh": [5, 6, 291, 312], "sinc": [5, 14, 86, 108, 130, 138, 274, 289, 291, 292, 293, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 340], "rerun": [5, 293], "c": [5, 6, 114, 135, 289, 293, 314, 315, 316, 317, 318, 319, 323, 325, 327, 332, 333, 336, 341], "test_suit": [5, 112, 289], "build": [5, 6, 10, 13, 14, 71, 76, 131, 132, 133, 134, 136, 271, 286, 291, 292, 305, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319], "mpas_model": [5, 313], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 71, 74, 75, 76, 138, 169, 177, 197, 210, 289, 291, 292, 312, 313, 319, 336], "baselin": [5, 6, 8, 10, 38, 41, 48, 113, 114, 119, 120, 138, 148, 151, 239, 274, 280, 281, 284, 289, 290, 292, 308, 310, 312, 323, 336], "comparison": [5, 8, 18, 38, 48, 120, 289, 312, 313, 332], "against": [5, 10, 41, 48, 120, 138, 148, 151, 274, 280, 281, 284, 289, 308, 312, 323], "oppos": [5, 14, 30, 150, 153, 166, 172, 183, 190, 198, 245, 250, 255, 312], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 109], "wherea": [5, 12, 289, 310, 312, 323, 342], "typic": [5, 7, 9, 13, 14, 17, 18, 19, 38, 50, 110, 135, 138, 285, 286, 287, 289, 291, 293, 310, 312, 313, 318, 321, 334, 336, 342], "clone": [5, 6, 135, 271, 287, 293, 305, 312, 336], "pickl": [5, 8, 107, 108, 289, 312, 336], "latter": [5, 49, 135], "conveni": [5, 9, 17, 263, 269, 270, 285, 289, 312, 313, 325, 326, 327, 332, 333, 336, 342], "tab": [5, 336], "explicitli": [5, 7, 138, 274, 280, 281, 289, 293, 312, 313, 336], "select": [5, 8, 122, 289, 293, 312], "edit": [5, 7, 293, 312, 336], "steps_to_run": [5, 49, 110, 289, 291, 312, 313], "full_run": [5, 18, 308, 324, 339], "restart_run": [5, 18, 308, 324, 339], "Or": [5, 289, 313], "accomplish": [5, 289, 292], "thing": [5, 131, 132, 133, 134, 135, 136, 138, 285, 289, 292, 311, 341], "take": [5, 6, 7, 11, 13, 14, 57, 135, 138, 144, 203, 285, 289, 290, 291, 293, 312, 325, 326, 327, 332, 341], "preced": [5, 57, 138], "over": [5, 9, 14, 57, 121, 289, 292, 311, 312, 321, 324, 334, 336], "intern": [5, 11, 25, 289, 293, 309], "shouldn": [5, 135, 239, 312], "special": [5, 310, 335], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 154, 289, 318], "polaris_cach": [5, 8, 20, 289], "structur": [5, 13, 31, 157, 288, 291, 311, 312], "without": [5, 40, 289, 292, 293, 312, 313, 317, 318, 330, 331, 335, 336], "redund": [5, 263, 269, 270, 274, 285, 312], "stamp": 5, "revis": [5, 313], "older": 5, "ones": [5, 263, 269, 270, 292, 312], "version": [5, 6, 16, 33, 57, 95, 120, 135, 271, 274, 285, 286, 287, 289, 291, 292, 293, 305, 311, 312, 313, 318, 319, 322, 324, 326, 336, 337], "updat": [5, 7, 8, 25, 27, 29, 34, 35, 44, 45, 116, 134, 135, 156, 239, 271, 274, 275, 276, 277, 280, 281, 282, 283, 289, 305, 309, 311, 312, 336], "cached_fil": [5, 20, 289], "json": [5, 8, 20, 55, 289, 319], "anvil": [5, 6, 135, 289, 313, 318, 336], "chrysali": [5, 6, 135, 289, 312, 313, 318, 336], "onto": [5, 293], "lcrc": [5, 6, 8, 11, 55, 289, 292, 313, 314, 316, 318, 336], "server": [5, 8, 40, 55, 289, 292, 313, 319], "d": [5, 19, 122, 215, 228, 263, 269, 270, 273, 277, 282, 283, 289, 312, 322, 329, 334], "whose": [5, 46, 53, 85, 289], "ocean_cached_fil": 5, "pr": [5, 6, 336, 341], "look": [5, 6, 7, 11, 18, 291, 292, 312, 313], "someth": [5, 7, 97, 101, 104, 135, 293, 312], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 96, 138, 140, 148, 151, 274, 289, 292, 312], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 84, 148, 151, 154, 274, 280, 281, 289, 312, 313], "info": [5, 12, 14, 25, 32, 84, 135, 148, 151, 154, 289, 312], "initial_st": [5, 18, 19, 140, 274, 289, 312], "date_str": [5, 55], "let": [5, 289, 293, 310, 312, 313, 319], "string": [5, 9, 15, 40, 100, 106, 135, 138, 159, 245, 293], "choos": [5, 289, 292, 293, 312, 314, 315, 316, 317, 319, 342], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 312], "check": [5, 6, 18, 120, 289, 293, 312, 313, 315, 319, 336, 341], "print": [5, 12, 18, 63, 120, 126, 289, 292, 341], "stdout": [5, 12, 38, 49, 289, 291], "translat": [5, 31, 138, 157], "convert": [5, 9, 13, 14, 138, 159, 289, 312], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 114, 119, 129, 130, 154, 157, 158, 166, 169, 172, 177, 271, 274, 280, 281, 285, 286, 289, 291, 292, 305, 306, 308, 311, 312, 313, 334], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 124, 129, 130, 158, 166, 169, 172, 177, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 291, 292, 305, 308, 313, 335, 340], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 135, 148, 151, 154, 157, 158, 166, 172, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 291, 311, 312, 315, 319], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 66, 124, 135, 138, 153, 157, 271, 285, 287, 289, 290, 292, 293, 305, 309, 310, 311, 312, 313, 319, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 340, 342], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 66, 124, 135, 138, 153, 157, 271, 285, 287, 289, 290, 292, 293, 305, 309, 310, 311, 312, 313, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340], "don": [5, 6, 7, 14, 135, 138, 140, 145, 289, 291, 292, 293, 312, 317, 336, 342], "format": [5, 7, 11, 13, 14, 124, 130, 159, 290, 291, 293, 312, 313, 315], "note": [5, 7, 17, 18, 312, 319], "keyword": [5, 7, 14, 18, 19, 275, 276, 277, 282, 283, 289, 325, 326, 327, 328, 332, 333], "top": [5, 19, 263, 264, 265, 266, 267, 268, 269, 270, 273, 287, 312, 321], "ignor": [5, 100, 106], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 61, 69, 85, 91, 102, 109, 135, 138, 142, 143, 144, 154, 187, 202, 203, 214, 227, 249, 285, 288, 289, 291, 292, 293, 310, 313, 321, 336], "pars": [5, 9, 14, 26, 27, 28, 29, 88, 115, 117], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 86, 120, 121, 122, 126, 138, 140, 148, 151, 157, 173, 193, 274, 282, 286, 289, 291, 292, 311, 312, 313, 321, 324, 325, 326, 327, 328, 332, 333, 334], "doesn": [5, 6, 130, 135, 289, 291, 312, 313, 318, 336], "matter": [5, 312], "usabl": 5, "try": [6, 14, 60, 135, 292, 293, 309, 312, 313, 315, 319, 336], "stai": [6, 293], "sync": 6, "mpi": [6, 14, 17, 96, 131, 134, 135, 154, 156, 158, 274, 280, 281, 289, 293, 309, 311, 312, 314, 315, 316, 317, 319, 336], "librari": [6, 14, 131, 135, 293, 312, 314, 315, 316, 317, 318, 319, 336], "netcdf": [6, 135, 140, 145, 160, 284, 313, 314, 315, 316, 317, 318, 319], "fortran": [6, 135, 314, 315, 316, 317, 318, 319], "pnetcdf": [6, 135, 314, 315, 316, 317, 318, 319], "mkl": [6, 135], "linear": [6, 19, 121, 122, 275, 276, 277, 280, 282, 283, 312, 324, 325, 326, 327, 328, 330, 332, 333], "algebra": 6, "lib": [6, 135], "esmf": [6, 293, 336], "scorpio": [6, 293, 318, 336], "forg": [6, 135, 311, 336], "python": [6, 7, 8, 9, 26, 44, 51, 138, 285, 287, 289, 291, 292, 293, 310, 311, 312, 313, 318, 319, 336], "aren": [6, 11, 38, 39, 135, 289, 292, 293, 312, 341], "brief": [6, 7, 312], "tour": 6, "login": [6, 135, 293, 315, 319], "node": [6, 14, 25, 37, 38, 42, 45, 61, 91, 92, 93, 135, 154, 289, 290, 292, 293, 312, 313, 314, 315, 316, 317, 318, 319, 336], "bootstrap": 6, "rest": [6, 160, 268, 321, 326], "u": [6, 289, 312, 318, 319, 325, 327, 328, 330, 331, 332], "unifi": [6, 135, 293, 319], "diagnost": [6, 282, 313, 314, 315, 317, 318, 319, 325, 336], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 138, 289, 291, 292, 293, 312], "cach": [6, 20, 25, 38, 40, 113, 114, 154, 311, 313, 318, 323, 336, 341], "own": [6, 7, 8, 9, 11, 12, 19, 38, 135, 138, 289, 291, 292, 293, 310, 312, 313, 325, 326, 327, 332, 333, 336, 342], "config_machin": 6, "xml": [6, 14, 115, 117, 118, 130, 305], "ey": 6, "master": [6, 271, 305, 337], "happen": [6, 9, 12, 17, 108, 289, 312, 325, 326, 327, 332, 333], "me": [6, 312], "dev_quick_start": 6, "fork": [6, 312], "haven": [6, 312], "mkdir": [6, 293], "involv": [6, 14, 289, 310, 312], "coupl": [6, 309, 311], "alpha": [6, 131, 132, 133, 134, 135, 136, 312, 328], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 138, 285, 287, 289, 290, 291, 292, 293, 312, 313, 341, 342], "stand": 6, "omit": [6, 289, 336], "suffix": [6, 40, 114, 289], "onc": [6, 14, 41, 274, 293, 312, 313, 325, 326, 327, 332, 333, 336], "releas": [6, 135, 292, 311, 318, 322, 336], "spack_for_mache_1": 6, "12": [6, 13, 69, 275, 277, 282, 283, 308, 312, 315, 325, 327, 328, 332, 333, 339], "worktre": [6, 311, 312], "my": [6, 135, 315], "fetch": [6, 293, 312], "out": [6, 8, 9, 13, 57, 90, 94, 122, 135, 148, 151, 287, 289, 292, 293, 313, 321, 336], "checkout": [6, 293, 312], "mambaforg": [6, 293, 312, 318, 336], "manual": [6, 14, 49, 50, 289, 291, 342], "linux": [6, 135, 293, 318], "x86_64": [6, 135], "our": [6, 135, 292, 312, 336], "found": [6, 9, 14, 125, 135, 292, 293, 311, 312, 314, 315, 316, 317, 318, 319], "exist": [6, 7, 9, 31, 38, 41, 60, 115, 117, 119, 135, 157, 274, 289, 291, 292, 293, 309, 312, 318, 341], "miniconda3": [6, 293], "alwai": [6, 7, 9, 12, 57, 135, 138, 143, 187, 202, 214, 227, 271, 286, 289, 291, 292, 293, 305, 310, 312, 313], "pleas": [6, 135, 286, 292, 293, 312, 336], "start": [6, 7, 8, 14, 15, 86, 116, 135, 273, 274, 278, 285, 290, 291, 292, 311, 315, 318, 319, 322, 337, 339], "definit": [6, 14, 312], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 74, 100, 106, 113, 114, 119, 135, 138, 185, 200, 212, 225, 247, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 297, 305, 306, 308, 310, 311, 313, 318, 321, 324, 326, 333, 334, 341, 342], "export": [6, 309], "conda_bas": 6, "home": [6, 18, 135, 293, 312, 313, 315, 318, 319], "readi": [6, 312, 319], "configure_polaris_env": [6, 135, 293, 309, 312], "py": [6, 12, 14, 18, 66, 135, 285, 286, 292, 293, 310, 312, 313], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 135, 293], "tmpdir": [6, 135], "group": [6, 7, 285, 311, 314, 316, 318, 319, 335, 336, 342], "spack_temp": 6, "spack_test": 6, "intel": [6, 135, 318], "gnu": [6, 135, 293, 317, 318, 336], "openmpi": [6, 131, 135, 293, 311, 314, 316, 317, 336], "impi": [6, 131, 135, 314, 317], "recreat": [6, 291, 293, 309], "request": [6, 7, 14, 15, 25, 32, 34, 135, 138, 148, 151, 154, 264, 265, 289, 291, 292, 293, 309, 312, 313, 325, 326, 327, 332, 333], "twice": [6, 312], "deploy": [6, 293], "prebootstrap": 6, "load": [6, 19, 108, 132, 135, 136, 289, 293, 311, 312, 313, 314, 315, 316, 317, 318, 319], "activ": [6, 135, 318, 319, 336], "differ": [6, 14, 15, 17, 18, 57, 71, 76, 120, 135, 138, 161, 164, 173, 271, 274, 285, 286, 287, 289, 290, 291, 292, 305, 310, 312, 313, 315, 319, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 340], "On": [6, 7, 13, 135, 293, 318], "tmp": [6, 135], "safe": [6, 14, 289, 293, 324], "strictli": [6, 13, 292, 312], "necessari": [6, 7, 13, 135, 312], "good": [6, 12, 38, 289, 293, 312], "idea": [6, 12, 312], "Be": [6, 319], "awar": [6, 7, 135, 312, 318], "with_petsc": [6, 293], "wa": [6, 8, 48, 59, 120, 135, 289, 291, 292, 293, 309, 310, 312, 313, 321, 336], "limit": [6, 290, 293, 324], "amount": [6, 25, 35, 38, 45, 154, 289, 320, 334], "team": [6, 135, 311], "petsc_support": 6, "txt": [6, 8, 119, 290, 309], "with_albani": [6, 293], "albany_support": 6, "encount": [6, 290, 309], "error": [6, 8, 15, 38, 49, 135, 138, 141, 142, 145, 275, 276, 277, 278, 280, 281, 282, 283, 289, 291, 293, 311, 312, 325, 326, 327, 328, 332, 333], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 150, 166, 172, 190, 289, 291, 292, 293, 312, 313, 336, 341, 342], "attempt": [6, 135, 311, 318], "sh": [6, 131, 132, 133, 134, 135, 136, 293, 309, 312, 314, 315, 316, 317, 319, 336], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 92, 93, 95, 103, 135, 289, 292, 293, 310, 311, 312, 315, 318, 319, 336], "pscratch": 6, "suggest": [6, 135, 309], "correctli": 6, "seem": [6, 14, 312, 315, 319], "switch": [6, 312, 313], "v0": 6, "19": 6, "submodul": [6, 271, 286, 293, 305, 312, 336], "serv": [6, 113, 114, 119, 138, 285, 312], "kind": [6, 312], "whichev": [6, 271, 305, 321], "load_dev_polaris_0": [6, 131, 132, 133, 134, 135, 136, 312], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 271, 292, 293, 305, 312, 336], "pio": [6, 25, 34, 37, 154, 274, 280, 281], "openmp": [6, 25, 35, 38, 45, 93, 131, 133, 134, 154, 164, 239, 289, 312, 314, 315, 316, 317, 319], "ifort": [6, 131, 133, 135, 312, 314, 316], "ac": [6, 312], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 312, 318, 336], "job_script": [6, 312, 336], "bash": [6, 293, 309, 312, 336], "termin": [6, 8, 135, 289, 293, 312], "isn": [6, 9, 15, 275, 276, 277, 278, 282, 283, 289, 292, 312], "ll": [6, 19, 135, 275, 276, 277, 282, 283, 292, 312, 319, 325, 326, 327, 332, 333], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 131, 133, 134, 135, 293, 314, 316], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 285, 289, 312, 321, 332], "util": [6, 292, 331], "matrix": 6, "sever": [6, 12, 135, 138, 285, 289, 291, 292, 293, 311, 312, 335, 336, 341], "automat": [6, 7, 9, 12, 14, 19, 135, 138, 289, 292, 293, 312, 313, 314, 316, 317, 318, 319, 336], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 336], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 134, 135, 138, 289, 292, 312], "integr": [6, 15, 138, 173, 274, 292, 312, 324, 325, 326, 327, 328, 332, 333, 335, 340], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 315, 336], "245": 6, "246": 6, "non": [6, 14, 18, 273, 289, 312, 325, 332, 336], "care": [6, 11, 13, 138, 285, 289, 293, 312], "temporari": [6, 135], "begin": [6, 7, 18, 274, 289, 293, 306, 311, 312, 318, 324, 326, 334], "anymor": 6, "best": [6, 17, 135, 289, 293], "hard": [6, 289, 312, 324, 334], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 62, 121, 122, 148, 151, 289, 291, 312, 339], "myst": [7, 312], "tip": [7, 293], "easi": [7, 9, 40, 292, 312], "pull": [7, 135, 292, 293, 312, 313], "guid": [7, 138, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 290, 292, 312, 315, 318, 322, 337], "baroclin": [7, 9, 14, 161, 162, 163, 164, 167, 170, 173, 175, 178, 179, 181, 239, 274, 286, 289, 312, 322, 329, 342], "channel": [7, 9, 14, 161, 162, 163, 164, 167, 170, 173, 175, 178, 179, 181, 239, 274, 286, 289, 309, 312, 322, 329, 342], "label": [7, 121, 318, 336], "prepend": 7, "categori": [7, 286, 287, 288, 311, 342], "uniqu": [7, 14, 135, 291, 312], "And": [7, 14, 293, 312], "becom": [7, 289, 291, 312], "who": [7, 293, 312, 313, 319], "citat": 7, "basi": [7, 312], "overview": [7, 311, 315, 319], "common": [7, 12, 14, 44, 49, 135, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 309, 310, 312, 313, 318, 319, 335, 336, 340, 341, 342], "characterist": [7, 335, 340], "comment": [7, 290, 313], "appli": [7, 13, 14, 63, 273, 285, 312, 324, 334, 335, 340], "vertic": [7, 15, 19, 85, 143, 144, 187, 202, 203, 214, 227, 238, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 313, 320, 322], "grid": [7, 13, 17, 68, 75, 79, 82, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 138, 194, 207, 257, 260, 261, 262, 263, 264, 265, 266, 269, 270, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 306, 312, 313], "forc": [7, 284, 308, 312, 342], "specif": [7, 9, 14, 51, 135, 138, 271, 285, 286, 287, 289, 305, 306, 311, 312, 313, 315, 318, 324, 335, 336, 340, 341], "public": [7, 11, 289, 312, 313], "api": [7, 12, 311, 312], "underscor": [7, 312], "md": [7, 312], "eval": 7, "rst": [7, 14, 312], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 286, 292], "compute_cell_count": [7, 138, 274, 280, 281, 312], "dynamic_model_config": [7, 14, 274, 312], "ot": [7, 312], "numpydoc": [7, 312], "text": [7, 8, 324, 326, 328, 334], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 138, 263, 265, 266, 267, 268, 269, 270, 271, 280, 281, 289, 312, 313, 315, 319, 328, 330, 331], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 271, 313, 330, 331], "overli": [7, 312], "ic": [7, 138, 271, 291, 292, 293, 306, 308, 311, 312, 313, 315, 321, 339, 342], "shelf": [7, 138, 285, 292, 312, 313, 321], "draft": [7, 321], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 79, 80, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 125, 126, 127, 129, 130, 138, 140, 141, 142, 143, 144, 145, 148, 150, 151, 153, 154, 157, 159, 160, 162, 163, 164, 166, 167, 170, 171, 172, 173, 175, 178, 179, 181, 183, 186, 187, 188, 190, 191, 193, 194, 196, 198, 201, 202, 203, 204, 205, 207, 209, 211, 213, 214, 215, 216, 217, 218, 220, 222, 224, 226, 227, 228, 229, 230, 231, 233, 235, 239, 241, 243, 245, 248, 249, 250, 252, 253, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 280, 281, 285, 289, 291, 297, 298, 299, 301, 302, 303, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334], "xarrai": [7, 15, 17, 19, 85, 122, 143, 144, 187, 202, 203, 214, 227, 263, 264, 265, 266, 267, 268, 269, 270, 289, 312], "dataarrai": [7, 85, 143, 144, 187, 202, 203, 214, 215, 216, 217, 227, 228, 229, 230, 264, 265, 266, 267, 268], "sea": [7, 138, 215, 217, 228, 230, 265, 266, 267, 268, 271, 306, 308, 311, 312, 313, 321, 330, 331, 339, 342], "surfac": [7, 138, 215, 217, 228, 230, 265, 266, 267, 268, 271, 273, 284, 308, 312, 313, 321, 324, 330, 331, 334], "height": [7, 138, 215, 217, 228, 230, 265, 266, 267, 268, 271, 312, 313, 321, 330, 331], "mask": [7, 263, 266, 269, 270, 289, 312, 313, 321], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 26, 67, 69, 70, 74, 79, 86, 101, 120, 122, 138, 140, 141, 142, 143, 144, 148, 151, 153, 159, 162, 163, 164, 167, 170, 173, 175, 178, 183, 186, 187, 188, 193, 198, 201, 202, 203, 204, 213, 214, 215, 216, 217, 218, 220, 222, 224, 226, 227, 228, 229, 230, 231, 233, 235, 239, 245, 248, 249, 250, 252, 255, 289, 291, 312], "densiti": [7, 13, 138, 312], "seawat": 7, "displac": 7, "land": [7, 138, 271, 291, 311, 312, 313, 321], "landicedraft": 7, "equal": [7, 284, 289, 292, 334], "entri": [7, 54, 86, 89, 114], "line": [7, 10, 36, 38, 92, 93, 103, 135, 289, 290, 292, 293, 311, 336], "type": [7, 14, 17, 18, 19, 26, 98, 105, 130, 135, 138, 141, 193, 209, 238, 240, 275, 276, 277, 282, 283, 285, 289, 291, 292, 293, 305, 309, 310, 312, 313, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 341], "side": 7, "colon": 7, "doubl": [7, 14, 138, 289, 290, 312], "back": [7, 312, 315, 336], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 92, 93, 289], "next": [7, 135, 274, 312, 321, 336], "indent": [7, 289], "obviou": [7, 14, 312], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 62, 63, 65, 67, 74, 80, 84, 86, 95, 96, 97, 100, 101, 104, 106, 110, 114, 115, 119, 120, 121, 122, 125, 129, 138, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 154, 155, 159, 164, 165, 187, 189, 202, 203, 214, 219, 227, 228, 232, 239, 249, 289, 291, 301, 312, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 339], "els": [7, 8, 135, 289, 291, 312], "further": [7, 285, 291, 319, 335, 340], "rais": [7, 9, 18, 38, 41, 59, 60, 138, 289, 292, 312, 328], "list_cas": 8, "list_machin": [8, 292], "list_suit": 8, "anywher": [8, 12, 135, 293], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 88, 107, 108, 111, 115, 124, 125, 129, 130, 148, 151, 215, 228, 286, 291, 292, 312], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 87, 88, 124, 138, 273, 289, 291, 312], "properti": [8, 245, 273, 289, 318, 325, 326, 327, 332, 333], "setup_suit": 8, "write": [8, 12, 13, 16, 19, 107, 124, 262, 289, 291, 293, 308, 312], "proven": [8, 10, 57, 311, 313], "save": [8, 19, 59, 82, 135, 274, 275, 276, 277, 278, 282, 283, 285, 289, 291, 312, 318, 323, 324], "target": [8, 11, 17, 18, 25, 40, 60, 62, 86, 96, 135, 138, 154, 274, 280, 281, 289, 291, 312, 325, 326, 327, 332, 333], "minimum": [8, 62, 122, 138, 142, 154, 249, 274, 280, 281, 289, 312, 313, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 340], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 85, 86, 130, 135, 138, 158, 245, 274, 275, 276, 277, 278, 280, 281, 282, 283, 289, 312, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 340], "maximum": [8, 18, 120, 122, 193, 249, 312, 313, 321], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 92, 93, 96, 138, 154, 164, 239, 289, 291, 312], "cpus_per_task": [8, 14, 38, 42, 45, 92, 93, 289], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 312, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 92, 93, 96, 138, 154, 164, 239, 289, 312], "min_cpus_per_task": [8, 14, 38, 45, 92, 93, 289], "fewest": 8, "least": [8, 13, 286, 293, 324, 328], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 135, 138, 154, 164, 239, 289, 311, 312, 313, 325, 326, 327, 328, 330, 331, 332, 333], "run_task": [8, 289, 291], "run_single_step": 8, "oper": [8, 47, 135, 169, 177, 289, 291, 341], "log": [8, 10, 19, 38, 49, 93, 120, 121, 122, 289, 291, 293, 311, 336], "figur": [8, 19, 280, 281, 284, 285, 287, 289, 313, 325, 327, 332, 333], "cpu": [8, 135, 289, 312, 336], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 66, 67, 71, 74, 75, 76, 80, 81, 96, 102, 124, 138, 139, 140, 142, 143, 148, 150, 151, 154, 157, 162, 163, 164, 166, 167, 170, 171, 172, 173, 175, 178, 179, 181, 183, 186, 187, 188, 190, 191, 194, 196, 197, 198, 201, 202, 204, 205, 207, 209, 210, 211, 213, 214, 215, 218, 220, 222, 224, 225, 226, 227, 228, 231, 233, 235, 238, 239, 240, 241, 243, 245, 248, 250, 252, 253, 255, 257, 259, 275, 276, 277, 278, 280, 281, 282, 283, 286, 289, 291, 292, 296, 298, 299, 301, 302, 303, 312, 325, 326, 327, 328, 332, 333, 335, 340], "retriev": [8, 309], "store": [8, 51, 135, 138, 280, 281, 289, 312, 325, 327, 332, 333, 336], "case_output": [8, 12], "individu": [8, 9, 19, 286, 291, 292, 312, 318, 319, 324, 336, 342], "overal": 8, "whole": [8, 49, 160, 285, 291, 292, 312, 336], "window": 8, "update_cach": 8, "_cached_fil": [8, 289], "origin": [8, 55, 293, 312, 336], "enabl": [8, 19, 284, 289, 309, 313, 319, 330, 331], "consum": [8, 289, 291, 312, 341], "faster": [8, 293], "parser": [9, 46, 53, 57, 173, 183, 198, 245], "mpas_tool": [9, 12, 13, 79, 274, 280, 281, 284, 289, 291, 312], "mpasconfigpars": [9, 289, 291], "polarisconfigpars": [9, 21, 38, 46, 49, 53, 59, 61, 62, 91, 94, 95, 111, 121, 138, 173, 183, 198, 215, 228, 245, 261, 263, 264, 265, 269, 270, 312], "certain": [9, 18, 57, 135, 289, 293, 313, 335, 340], "filepath": [9, 46, 53, 57, 138], "overridden": [9, 31, 58, 138, 157, 312], "algorithm": [9, 14, 138, 239, 274, 280, 281, 289, 312], "featur": [9, 14, 292, 293, 310, 312, 313, 324, 334], "accommod": [9, 25, 35, 38, 45, 92, 93, 154], "add_from_packag": [9, 138, 289, 291, 292, 312], "content": [9, 14, 114, 115, 117, 119, 130, 138, 285, 287, 289, 292, 308, 312, 336, 339], "inertial_gravity_wav": [9, 271, 279, 281, 286, 291, 330, 341], "inertialgravitywav": [9, 280, 291], "import": [9, 11, 12, 13, 15, 17, 18, 19, 138, 285, 286, 289, 291, 292, 293, 310, 312], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 66, 67, 74, 80, 96, 124, 138, 139, 140, 148, 151, 154, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 183, 186, 188, 191, 194, 196, 198, 201, 204, 205, 207, 209, 211, 213, 215, 218, 220, 222, 224, 226, 228, 231, 233, 235, 238, 239, 240, 241, 243, 245, 248, 250, 252, 253, 255, 257, 259, 285, 286, 289, 291, 292, 296, 298, 299, 301, 302, 303, 310, 312], "super": [9, 14, 17, 18, 138, 286, 289, 291, 292, 312], "cfg": [9, 51, 138, 286, 291, 292, 312, 313, 325, 327, 332, 333, 336], "except": [9, 38, 41, 59, 289, 292, 312, 333], "behavior": [9, 14, 110, 138, 289, 290, 293, 312], "noth": [9, 135, 309, 325, 326, 327, 332, 333], "particular": [9, 135, 285, 293, 311, 315, 318, 336], "fine": [9, 291, 312, 334], "_get_basic_config": 9, "larg": [9, 289, 291, 312, 314, 332], "those": [9, 14, 49, 120, 135, 138, 274, 291, 292, 293, 311, 312, 325, 326, 327, 328, 332, 333, 335, 340, 341], "configpars": [9, 92, 93], "getinteg": 9, "getfloat": [9, 12, 14, 17, 138, 289, 312], "getboolean": [9, 289, 312], "implement": [9, 286, 289, 292, 324, 325, 326, 327, 328, 330, 331, 332, 333], "getlist": [9, 291, 312], "comma": [9, 325, 326, 327, 332, 333], "integ": [9, 13], "boolean": [9, 122, 266], "etc": [9, 14, 116, 119, 286, 289, 324], "getexpress": 9, "tupl": 9, "rang": [9, 122, 312], "numpi": [9, 13, 15, 68, 75, 76, 82, 86, 121, 138, 160, 261, 262, 289, 312], "linspac": [9, 19, 275, 276, 277, 282, 283, 325, 326, 327, 332, 333], "arang": 9, "arrai": [9, 15, 68, 75, 76, 82, 121, 138, 261, 262, 264, 265, 266, 267, 312], "sens": [9, 311, 312], "set_shared_config": [9, 291], "intuit": 9, "resolution_to_subdir": [9, 286], "rpe": [9, 181, 286, 292, 312, 336], "resdir": [9, 286], "config_filenam": [9, 38, 49, 289, 291], "indir": [9, 25, 38, 49, 96, 154, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 239, 241, 243, 286, 289, 299, 301, 303], "add_task": [9, 285, 286], "most": [9, 12, 44, 135, 271, 285, 286, 289, 292, 293, 305, 312, 313, 318, 319, 321, 322, 337, 342], "construct": [9, 14, 139, 261, 263, 264, 265, 269, 270, 273, 284, 286, 291, 296, 312, 324, 328], "bring": [9, 138, 312], "add_step": [9, 291, 312], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 164, 175, 274, 289, 312], "baroclinic_channel_rp": 9, "viscos": [9, 14, 164, 173, 175, 274, 289, 292, 312, 324], "dtype": [9, 291, 312], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 93, 154, 164, 239, 289, 291, 312], "add_yaml_fil": [9, 14, 25, 138, 289, 291, 312], "One": [9, 13, 312, 336, 341], "advantag": [9, 14, 135, 291, 292, 312, 318], "track": [9, 25, 289, 291, 293], "associ": [9, 13, 14, 15, 19, 138, 263, 269, 270, 274, 275, 277, 282, 283, 289, 291, 293, 310], "while": [10, 17, 19, 273, 274, 289, 309, 312], "meant": [10, 292, 313], "simplifi": 10, "verifi": [10, 290, 313], "io": [10, 289, 291, 292, 311, 312, 313, 322, 337], "lot": [11, 138, 289, 292, 312], "o": [11, 12, 115, 117, 130, 135, 292, 293, 312, 313, 336], "handl": [11, 12, 293, 312, 318, 328], "lower": [11, 291, 312, 324], "directli": [11, 13, 14, 17, 38, 138, 287, 289, 292, 310, 311, 312, 315], "readm": [11, 291], "importlib": 11, "resourc": [11, 14, 35, 42, 45, 91, 92, 93, 149, 152, 155, 165, 189, 219, 232, 239, 274, 280, 281, 289, 291, 312], "global_ocean": [11, 14, 289, 291, 292, 293, 313, 336], "files_for_e3sm": [11, 289, 291, 313], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 60, 61, 62, 63, 67, 74, 80, 84, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 124, 125, 127, 129, 130, 138, 140, 141, 142, 143, 144, 145, 148, 151, 153, 154, 159, 160, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 186, 187, 188, 191, 194, 196, 201, 202, 203, 204, 205, 207, 209, 213, 214, 218, 220, 222, 226, 227, 231, 233, 235, 239, 241, 243, 248, 249, 250, 252, 253, 255, 257, 259, 262, 289, 291, 299, 301, 303, 312], "did": [11, 310, 312], "add_input_fil": [11, 17, 18, 39, 289, 291, 312], "collect": [11, 99, 139, 286, 288, 296, 310, 312], "whenev": [11, 289, 312], "flexibl": [11, 138, 289, 291, 293, 312], "No": [11, 311, 330, 331], "step_dir": 11, "database_root": [11, 135, 289, 313, 314, 315, 316, 317, 318, 319, 336], "download_path": 11, "join": [11, 312], "bathymetry_databas": [11, 289, 313], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 266, 285, 289, 312, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 342], "url": [11, 40, 59, 289, 309, 313], "web": [11, 289, 313], "anl": [11, 289, 313], "gov": [11, 289, 309, 313, 315, 319], "mpas_standalonedata": [11, 135, 313, 318], "dest_path": [11, 59], "remot": [11, 40, 293, 311], "bathymetri": [11, 289, 313], "strategi": 12, "stderr": [12, 38, 49, 289, 291], "loggingcontext": 12, "check_cal": [12, 289], "won": [12, 292, 312, 313], "logger": [12, 18, 38, 49, 66, 93, 120, 289, 291, 312], "full": [12, 38, 92, 110, 264, 265, 274, 289, 291, 293, 308, 311, 312, 318, 321, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336], "although": [12, 138], "captur": 12, "explicit": [12, 292], "go": [12, 46, 53, 241, 243, 285, 289, 291, 292, 293, 312, 319], "subprocess": [12, 38, 92, 93, 109, 289, 292, 309], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 138, 145, 162, 170, 178, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 292, 293, 298, 308, 312, 325, 327, 330, 331, 332, 333, 336, 339], "otherwis": [12, 135, 289, 291, 312, 314, 315, 316, 317, 318, 319, 324], "intent": 12, "desir": [12, 13, 14, 18, 19, 120, 138, 289, 290, 291, 312, 313, 336], "trick": [12, 289], "direct": [12, 13, 14, 79, 215, 228, 274, 280, 281, 312, 319, 324, 330, 331], "snippet": [12, 312], "dome": [12, 66, 285, 289, 291, 336, 342], "setup_mesh": [12, 289], "setupmesh": [12, 289, 291], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 289], "landice_grid": [12, 289, 312], "l": [12, 120, 138, 312, 319], "quasiuniformsphericalmeshstep": [13, 138, 291], "icosahedralmeshstep": [13, 138, 291], "jigsaw": [13, 67, 71, 73, 74, 76, 78, 80, 183, 198, 245, 250, 255, 289], "complex": [13, 75, 291, 292, 312], "build_cell_width_lat_lon": [13, 74], "opt": [13, 80], "make_jigsaw_mesh": [13, 74], "icosahedr": [13, 67, 69, 153, 183, 198, 245, 250, 255, 275, 276, 277, 278, 282, 283, 291, 325, 326, 327, 328, 332, 333], "significantli": [13, 321, 328], "smooth": 13, "cell": [13, 14, 15, 19, 67, 68, 69, 70, 74, 75, 76, 79, 82, 85, 98, 105, 138, 149, 152, 154, 155, 165, 189, 207, 209, 215, 217, 219, 228, 230, 232, 263, 264, 265, 266, 269, 270, 274, 280, 281, 285, 306, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 339], "quasi": [13, 74, 275, 276, 277, 278, 282, 283, 291, 313, 325, 326, 327, 328, 332, 333, 335, 340], "hand": [13, 101, 292], "restrict": [13, 312, 335], "subdivis": [13, 67, 68, 69, 70, 71], "icosahedron": [13, 68, 69, 70, 71], "tabl": [13, 293, 318, 336], "approxim": [13, 67, 69, 70, 74, 138, 149, 152, 155, 165, 189, 219, 232, 274, 280, 281, 293, 312], "width": [13, 67, 68, 69, 74, 75, 76, 82, 312, 324], "km": [13, 14, 67, 68, 69, 70, 74, 75, 76, 79, 82, 138, 148, 151, 153, 162, 163, 164, 167, 170, 171, 173, 175, 178, 188, 204, 218, 220, 224, 231, 233, 252, 274, 275, 276, 277, 278, 280, 281, 282, 283, 289, 312, 313, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 340, 342], "5": [13, 14, 69, 135, 138, 173, 274, 275, 276, 277, 278, 282, 283, 289, 290, 292, 309, 312, 313, 324, 325, 326, 327, 328, 332, 333, 335, 336, 340], "240": [13, 69, 138, 275, 276, 277, 278, 282, 283, 313, 325, 326, 327, 332, 333], "6": [13, 69, 289, 312, 322, 324, 325, 332, 334, 336, 337], "120": [13, 69, 138, 290, 325, 326, 327, 328, 332, 333], "7": [13, 69, 135, 312, 319, 325, 326, 333, 336], "60": [13, 69, 138, 275, 276, 277, 278, 282, 283, 321, 325, 326, 327, 332, 333], "8": [13, 69, 135, 274, 293, 312, 313, 324, 326, 330, 331, 333, 336], "30": [13, 14, 69, 138, 285, 312, 319, 324, 334, 335, 340], "9": [13, 19, 69, 135, 275, 276, 277, 282, 283, 312, 325, 326, 327, 332, 333, 336], "15": [13, 14, 69, 274, 312, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 340], "11": [13, 69, 135, 312, 336], "3": [13, 69, 135, 138, 274, 289, 290, 293, 309, 312, 313, 318, 319, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336], "13": [13, 69, 312, 324], "94": [13, 69, 328], "spherical_mesh": [13, 75], "cell_width": [13, 67, 68, 69, 70, 74, 75, 76, 82], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 82, 121, 122, 138, 140, 145, 175, 181, 194, 207, 243, 257, 274, 275, 276, 277, 278, 282, 283, 303, 325, 326, 327, 328, 330, 331, 332, 333, 339, 342], "plot_cell_width": 13, "cell_width_filenam": [13, 82], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 68, 74, 75, 76, 82, 97, 99, 101, 104, 121, 194, 207, 257, 275, 276, 277, 278, 282, 283, 313, 326], "lon": [13, 17, 68, 74, 75, 76, 82, 97, 99, 101, 104, 121, 194, 207, 257, 275, 276, 277, 278, 282, 283, 313, 326], "sphere": [13, 247, 248, 250, 252, 255, 275, 276, 277, 278, 282, 283, 325, 326, 327, 332, 333], "vtk_lat_lon": 13, "far": [13, 135, 263, 269, 270, 292, 312], "But": [13, 135, 285, 289, 292, 293, 312, 313, 318], "hexagon": [13, 79, 312, 330, 331], "planar_hex": [13, 79, 274, 280, 281, 284, 289, 312], "make_planar_hex_mesh": [13, 79, 274, 280, 281, 284, 289, 312], "x": [13, 19, 68, 75, 76, 79, 82, 100, 106, 122, 160, 215, 228, 289, 312, 324, 330, 331, 334], "y": [13, 14, 19, 79, 100, 106, 122, 215, 228, 274, 280, 281, 289, 312, 319, 324, 330, 331], "nx": [13, 79, 285, 289, 312, 334], "ny": [13, 79, 285, 289, 312, 334], "dc": [13, 285, 289, 312], "distanc": [13, 79, 193, 312, 324], "adjac": [13, 321], "center": [13, 19, 79, 193, 215, 228, 285, 312, 321, 324], "admittedli": 13, "oddli": 13, "period": [13, 273, 274, 275, 277, 280, 281, 282, 283, 289, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333], "nonperiodic_x": [13, 289, 312], "nonperiodic_i": [13, 289, 312], "consider": [13, 263, 269, 270, 273, 306], "compute_planar_hex_nx_ni": [13, 289, 312], "lx": [13, 79, 289, 312, 324, 330, 331, 334], "ly": [13, 79, 289, 312, 324, 334], "explan": 13, "subtleti": 13, "account": [13, 79, 293, 312, 314, 315, 317, 318, 319, 336], "behav": 13, "stagger": [13, 79], "physic": [13, 79, 302, 308, 312], "np": [13, 15, 19, 193, 275, 276, 277, 282, 283, 289, 312, 325, 326, 327, 332, 333], "sqrt": [13, 15, 330], "domain": [13, 25, 32, 79, 122, 138, 154, 160, 273, 285, 306, 312, 324, 326, 328, 330, 331, 334, 335, 340, 342], "extra": [13, 293], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 289, 312], "max": [13, 138, 289, 312, 324, 326], "int": [13, 14, 25, 26, 35, 38, 45, 61, 62, 63, 67, 68, 69, 70, 71, 79, 86, 92, 93, 96, 122, 140, 141, 143, 144, 145, 149, 152, 154, 155, 164, 165, 187, 189, 202, 203, 214, 219, 227, 232, 239, 289, 312, 334], "ds_mesh": [13, 15, 19, 85, 122, 289, 312], "creation": [13, 289, 313], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 92, 93, 154, 285, 289, 292, 312], "distant": 13, "descend": [14, 17, 138, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 289, 291, 292, 312], "modelstep": [14, 138, 289, 291, 312], "update_pio": [14, 25, 154], "make_graph": [14, 25, 154], "At": [14, 38, 49, 287, 288, 291, 312, 328], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 93, 154, 164, 239, 286, 289, 290, 310, 312, 313, 315, 319, 336, 341], "prefix": [14, 40, 135, 138, 143, 144, 187, 202, 203, 214, 227, 291, 293, 313], "end": [14, 148, 151, 289, 291, 292, 293, 308, 310, 312, 315, 324, 325, 326, 330, 331, 334, 339], "yml": 14, "reason": [14, 17, 44, 135, 289, 292, 312, 341], "add_namelist_fil": [14, 25, 138, 289, 291], "add_model_config_opt": [14, 25, 138, 289, 291, 312], "add_streams_fil": [14, 25, 138, 289, 291], "themselv": [14, 292, 311], "question": [14, 289, 313], "never": [14, 135, 310], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 138, 312], "config_run_dur": [14, 138, 291, 312], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 162, 310, 312], "config_block_decomp_file_prefix": [14, 312], "time_integr": [14, 138, 312, 325, 326, 327, 328, 332, 333], "config_time_integr": [14, 138], "rk4": [14, 138, 292, 325, 326, 327, 328, 332, 333], "filename_templ": [14, 138, 312], "restart": [14, 18, 49, 138, 275, 276, 277, 278, 280, 281, 282, 283, 284, 286, 290, 292, 298, 299, 308, 310, 312, 336, 341], "output_interv": [14, 138, 312, 325, 326, 327, 328, 332, 333], "0030_00": 14, "clobber_mod": [14, 138, 312], "truncat": [14, 138, 312], "reference_tim": [14, 138], "0001": [14, 138, 312], "01_00": [14, 138, 306, 312], "tracer": [14, 19, 183, 193, 240, 241, 243, 245, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 312, 322, 326, 327, 329, 330, 331, 332, 333, 334], "xtime": [14, 15, 86, 138, 312], "normalveloc": [14, 18, 19, 138, 180, 229, 273, 274, 280, 281, 284, 289, 312, 334], "layerthick": [14, 18, 138, 180, 263, 267, 268, 269, 270, 274, 280, 281, 284, 289, 312], "refzmid": [14, 263, 269, 270, 289, 312], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 312], "clariti": [14, 289], "global_converg": [14, 291, 312, 323], "substitut": 14, "config_write_output_on_startup": [14, 312], "0000_00": [14, 312], "config_use_mom_del2": [14, 312], "config_implicit_bottom_drag_coeff": [14, 312], "0e": [14, 331, 334], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 312], "config_cvmix_background_viscos": [14, 312], "worri": 14, "sometim": [14, 263, 269, 270, 285, 287, 289, 291, 310, 312, 341], "togeth": [14, 18, 135, 285, 310, 312, 341], "overkil": 14, "reli": [14, 289, 291, 312], "along": [14, 19, 135, 274, 289, 311, 312], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 88, 89, 91, 95, 96, 112, 114, 115, 121, 124, 125, 126, 138, 140, 148, 151, 157, 186, 201, 213, 226, 248, 250, 255, 289, 291, 312], "config_mom_del2": [14, 274, 289, 312], "precis": [14, 138, 289, 312], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 60, 63, 109, 110, 114, 119, 120, 121, 126, 150, 153, 154, 166, 172, 183, 190, 198, 239, 241, 243, 245, 250, 255, 312], "possibli": [14, 38, 49, 286, 289, 291, 293, 312], "at_setup": [14, 30, 150, 166, 172, 190, 312], "being": [14, 30, 38, 49, 109, 111, 114, 120, 135, 138, 150, 166, 172, 190, 289, 291, 292, 293, 312, 321], "dt": [14, 138, 164, 239, 289, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 340], "proport": [14, 138, 312, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 340], "dt_per_km": [14, 138, 275, 276, 277, 278, 282, 283, 312, 324, 330, 331, 335, 340], "stackoverflow": [14, 60, 312], "1384565": [14, 312], "7728169": [14, 60, 312], "config_dt": [14, 138, 312], "strftime": [14, 312], "gmtime": [14, 312], "run_time_step": [14, 164, 289, 312], "durat": [14, 138, 274, 280, 281, 284, 290, 312], "run_second": [14, 312], "btr_dt": [14, 138, 164, 239, 289, 312, 324], "btr_dt_per_km": [14, 138, 312, 324], "config_btr_dt": [14, 138, 312], "bit": [14, 135, 292, 310, 312, 324, 336], "complic": [14, 292, 293, 312], "slightli": [14, 293], "sophist": 14, "immutable_stream": [14, 312], "var_struct": [14, 305], "var": [14, 116, 305, 312], "var_arrai": [14, 305], "tag": [14, 311], "taken": [14, 25, 154, 275, 276, 277, 278, 282, 283, 289, 312, 319, 336], "past": 14, "experi": [14, 135, 292, 321], "difficult": [14, 135, 318], "synchron": [14, 311], "out_nam": 14, "equival": [14, 293, 312, 314], "template_replac": [14, 28, 29, 138], "treat": [14, 290, 292], "jinja2": [14, 28, 29, 115, 148, 151], "render": [14, 28, 29, 115], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 289, 292, 293, 313, 336], "qu240dynamicadjust": 14, "adjust": [14, 135, 138, 271, 313], "interv": [14, 15, 159, 325, 326, 327, 328, 332, 333], "spin": 14, "reus": [14, 289, 292, 293, 312, 313, 336], "qualit": 14, "forgotten": 14, "broken": [14, 289, 292], "immedi": [14, 66, 293, 312], "miss": [14, 289, 312, 313], "detect": [14, 19, 313, 314, 316, 317, 318, 328, 336], "gpmeti": [14, 313], "divid": [14, 321], "partition_graph": [14, 25, 154], "circumst": [14, 18, 38, 39, 289, 312], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 309, 312, 335, 340], "v1": [14, 321], "better": [14, 17, 135, 336], "v2": [14, 313, 321], "littl": [14, 292, 293, 311, 312], "feel": [14, 135, 289, 312], "runtime_setup": [14, 17, 35, 45, 274, 280, 281, 291], "yourself": [14, 312, 318], "culler": 14, "cull": [14, 274, 280, 281, 289, 312], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 82, 84, 85, 122, 138, 141, 142, 143, 144, 187, 194, 202, 203, 207, 214, 227, 249, 257, 263, 269, 270, 273, 274, 278, 280, 281, 284, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333], "weight": [14, 15, 17, 84, 263, 269, 270, 312, 321], "weight_field": [14, 84], "helper": [15, 285, 286], "handi": 15, "area_for_field": 15, "right": [15, 135, 138, 291, 293, 312, 313, 321, 324, 326, 336], "edg": [15, 19, 85, 98, 101, 105, 122, 207, 209, 215, 216, 228, 229, 273, 312], "dimens": [15, 85, 140, 145, 187, 202, 284, 324], "statist": [15, 313], "calcul": [15, 280, 289, 291], "xr": [15, 19, 215, 216, 217, 228, 229, 230, 289, 312], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 144, 203], "mesh_filenam": [15, 25, 84, 154, 160], "open_dataset": [15, 19, 289, 312], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 86, 138, 285], "get_output_field": [15, 138], "field_nam": [15, 122, 142, 143, 144, 187, 202, 203, 214, 227, 249], "output_filenam": [15, 138, 148, 151, 160], "ds_out": 15, "time_index": [15, 86], "isel": [15, 19], "frequent": [17, 271, 305], "observ": [17, 311], "dataset": [17, 85, 86, 122, 215, 228, 263, 269, 270, 289, 312], "region": [17, 19, 311, 313], "pyremap": [17, 102], "interpol": [17, 96, 275, 276, 277, 278, 282, 283, 313], "hood": 17, "esmf_regridweightgen": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 321], "bilinear": [17, 96, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333, 335, 340], "filenam": [17, 18, 38, 40, 41, 49, 90, 97, 98, 99, 100, 104, 105, 106, 120, 125, 127, 289, 291, 293, 312], "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 313], "destin": [17, 96, 97, 98, 99, 100, 101, 102, 260], "src_from_lon_lat": 17, "lon_var": [17, 97, 99, 104], "lat_var": [17, 97, 99, 104], "dst_from_mpa": 17, "mesh_nam": [17, 97, 98, 99, 100, 101, 104, 105, 106, 141, 143, 144, 153, 187, 194, 196, 202, 203, 207, 209, 214, 227, 257, 259, 291], "qu60": 17, "subclass": [17, 71, 74, 75, 76, 81, 138, 312], "src_": 17, "dst_": 17, "pick": [17, 107, 108], "vizmap": [17, 183, 194, 198, 207, 245, 257, 275, 276, 277, 278, 282, 283, 291], "128": [17, 290, 315, 316, 319], "cosine_bell_viz": [17, 19, 276, 326, 335, 340], "dlon": [17, 101, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333, 335, 340], "dlat": [17, 101, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333, 335, 340], "remap_method": [17, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333, 335, 340], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 101], "With": [17, 293], "approach": [17, 289, 292, 293, 309, 312, 321], "perhap": [17, 19, 41, 285, 287], "cover": [17, 306, 312], "nearli": [17, 289, 291, 310, 311, 312], "workflow": [17, 289, 293], "critic": [18, 312], "easiest": [18, 135, 293], "validate_var": [18, 38, 41, 138, 148, 151, 239, 289], "meth": 18, "add_output_fil": [18, 39, 289, 291, 312], "temperatur": [18, 180, 273, 274, 281, 284, 289, 308, 312, 324, 325, 326, 327, 328, 332, 333, 334, 335, 340], "salin": [18, 180, 273, 274, 284, 289, 312, 324, 325, 326, 327, 328, 332, 333, 334, 335, 340], "done": [18, 35, 45, 289, 291, 293, 312, 336], "compare_vari": [18, 312], "filename1": [18, 120, 312], "filename2": [18, 120, 312], "compact": [18, 312], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 120], "valueerror": [18, 292], "quiet": [18, 109, 110, 120, 126], "report": 18, "threshold": [18, 138, 282, 325, 326, 327, 328, 330, 331, 332, 333], "l1": [18, 120], "00000000000000e": 18, "l2": [18, 120, 138, 141, 142, 275, 276, 277, 278, 282, 283, 325, 326, 327, 328, 330, 331, 332, 333], "l_infin": 18, "linf": [18, 120], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 274, 324], "2thread": [18, 324], "test_20210616": 18, "further_valid": 18, "zero": [18, 264, 265, 266, 267, 268, 273, 274, 284, 312, 325, 326, 327, 332, 333, 334], "l1_norm": [18, 120], "l2_norm": [18, 120], "linf_norm": [18, 120], "nonzero": [18, 120], "solut": [18, 134, 141, 143, 144, 187, 202, 203, 214, 215, 216, 217, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 276, 278, 280, 281, 290, 309, 312, 322, 328, 329, 330], "aspect": [19, 312], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 135, 154, 271, 293, 312, 313, 324], "plot_horiz_field": [19, 289, 312], "patch": [19, 122, 312], "polygon": 19, "character": [19, 325, 327, 332, 333], "accordingli": [19, 94], "final_normalveloc": [19, 312], "t_index": [19, 122, 312], "vmin": [19, 122, 275, 276, 277, 282, 283, 312, 325, 326, 327, 328, 332, 333], "max_veloc": [19, 312], "vmax": [19, 122, 275, 276, 277, 282, 283, 312, 325, 326, 327, 328, 332, 333], "cmap": [19, 122, 289, 312], "cmo": [19, 289, 312, 325, 327, 328, 332, 333], "balanc": [19, 198, 278, 289, 312, 325, 327, 328, 332, 333], "show_patch_edg": [19, 122, 289, 312], "plot_global_field": 19, "plot_land": [19, 121], "disabl": [19, 273, 326, 342], "contin": [19, 121], "overlain": 19, "cmocean": [19, 289, 312], "noqa": [19, 66, 289, 312], "f401": [19, 289, 312], "tracer1": [19, 138, 325, 327, 332, 333], "nvertlevel": [19, 122, 140, 145, 263, 269, 270, 289, 312, 321], "out_filenam": [19, 118, 121, 262], "colormap_sect": [19, 121], "titl": [19, 121, 122, 138, 140, 145], "colormap": [19, 121, 122, 275, 276, 277, 278, 282, 283, 312, 325, 326, 327, 328, 332, 333], "cosin": [19, 138, 183, 185, 186, 188, 191, 193, 194, 196, 204, 207, 209, 253, 257, 259, 275, 276, 277, 282, 283, 291, 312, 322, 323, 325, 327, 328, 329, 332, 333, 335, 340], "bell": [19, 138, 183, 185, 186, 188, 191, 193, 194, 196, 204, 207, 209, 253, 257, 259, 275, 276, 277, 282, 283, 291, 312, 322, 323, 325, 327, 328, 329, 332, 333, 335, 340], "converg": [19, 183, 187, 198, 202, 203, 211, 212, 214, 224, 225, 227, 249, 275, 276, 277, 278, 280, 281, 282, 283, 287, 290, 311, 312, 325, 326, 327, 328, 330, 332, 333, 335, 340], "colormap_nam": [19, 121, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333], "viridi": [19, 275, 276, 277, 282, 283, 312, 325, 326, 327, 332, 333], "norm": [19, 120, 121, 138, 142, 145, 275, 276, 277, 278, 282, 283, 325, 326, 327, 328, 330, 331, 332, 333], "norm_typ": [19, 121, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333], "norm_arg": [19, 121, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333], "colorbar": [19, 121, 122, 275, 276, 277, 282, 283, 325, 326, 327, 332, 333], "tick": [19, 121, 275, 276, 277, 282, 283, 325, 326, 327, 332, 333], "mark": [19, 275, 276, 277, 282, 283, 293, 325, 326, 327, 332, 333], "colorbar_tick": [19, 121, 275, 276, 277, 282, 283, 325, 326, 327, 332, 333], "standard": [19, 292, 293, 302, 312, 315, 336], "symlog": [19, 121], "symmetr": 19, "central": [19, 326], "logarithm": [19, 122], "color": [19, 122], "normal": [19, 215, 216, 228, 229, 273, 278, 289, 290, 293, 312, 318, 328], "symlognorm": 19, "lognorm": 19, "hous": [20, 325, 326, 327, 332, 333], "kei": [20, 49, 114, 138, 140, 291], "max_memori": [25, 35, 38, 45, 154, 289], "graph_filenam": [25, 84, 148, 151, 154], "make_yaml": 25, "stride": [25, 37, 154], "partit": [25, 34, 44, 61, 84, 154, 274, 280, 281, 289, 313, 314, 315, 316, 317, 319, 336], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 96, 154, 164, 239, 289], "nor": [25, 38, 49, 96, 154, 164, 239, 289, 312], "append": [25, 38, 40, 49, 96, 154, 162, 163, 164, 167, 170, 171, 173, 175, 178, 179, 181, 239, 289, 299, 301, 303], "ideal": [25, 35, 38, 45, 92, 93, 96, 138, 154, 164, 239, 240, 241, 243, 285, 289, 292, 311, 312, 313, 342], "fewer": [25, 35, 38, 45, 92, 93, 154, 164, 239, 289, 312, 336], "memori": [25, 35, 38, 45, 154, 289, 313], "mb": [25, 35, 38, 45, 154, 289, 313], "placehold": [25, 35, 38, 45, 154, 289, 336], "diverg": [31, 157, 277, 322, 325, 328, 329, 332], "counterpart": [31, 138, 157], "nest": [31, 124, 126, 157], "graph_fil": 32, "run_as_subprocess": [38, 289], "smallest": [38, 289, 310, 321, 342], "unit": [38, 97, 101, 104, 289, 310, 324, 342], "term": [38, 310, 312, 330, 331], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 289, 291, 336], "finish": [38, 39, 81, 289, 312], "known": [38, 39, 135, 276, 289, 312], "suffici": [38, 289], "establish": [38, 39, 289], "is_depend": [38, 289], "machine_info": [38, 289], "machineinfo": 38, "combin": [38, 40, 49, 57, 62, 95, 124, 289, 290, 291, 309, 312, 313, 336], "base_work_dir": [38, 49, 111, 289, 291], "log_filenam": [38, 49, 289, 291], "redirect": [38, 289], "extern": [38, 135, 271, 286, 289, 291, 305, 322, 337], "turn": [38, 56, 286, 289, 309, 312, 334], "access": [39, 291, 292, 293, 312, 314, 318, 319], "database_compon": [40, 289], "work_dir_target": [40, 289], "come": [40, 135, 289, 293, 312, 314, 315, 316, 317, 318, 319, 322], "_database_root": 40, "available_resourc": [42, 91], "constrain": [42, 149, 152, 155, 165, 189, 219, 232, 274, 280, 281, 289, 312], "cores_per_nod": [42, 91, 94, 135, 313, 314, 315, 316, 317, 318, 319, 336], "everi": [43, 197, 210, 274, 289, 291, 292, 308, 309, 310, 312, 324, 334], "child": [43, 138, 197, 210, 286, 289, 291, 292], "subtask": 45, "step_symlink": [49, 291], "outsid": [49, 50, 285, 287, 289, 291, 293], "stdout_logg": [49, 291], "goe": [49, 289, 291, 312], "regardless": [49, 291], "new_step_log_fil": [49, 291], "run_by_default": [50, 291], "assum": [51, 115, 125, 135, 293, 312, 319, 324], "prior": [51, 289], "step_path": 55, "variant": [55, 185, 200, 245, 247, 274, 285, 290, 292, 293, 312, 318, 321, 324, 325, 326, 327, 332, 333], "uncach": 55, "datestamp": 55, "yymmdd": [55, 313], "dry": [55, 290], "meta": 57, "empti": [57, 289, 292, 293, 310, 312], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 110, 293], "isadirectoryerror": 60, "qo": [61, 314, 315, 317, 318, 319, 336], "qualiti": [61, 314, 315, 317, 318, 319, 336], "servic": [61, 314, 315, 317, 318, 319, 336], "constraint": [61, 319, 336], "wall_tim": [61, 336], "wall": [61, 336], "target_cor": 62, "min_cor": 62, "decomposition_test": [66, 285, 336], "decompositiontest": [66, 285], "e501": [66, 312], "turquois": [66, 315], "usr": [66, 135, 315, 336], "climat": [66, 314, 315, 316, 318, 336], "mhoffman": 66, "constant": [67, 74, 75, 138, 273, 283, 312, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 340], "latitud": [68, 75, 97, 99, 101, 104, 121, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333, 335, 340], "longitud": [68, 75, 76, 82, 97, 99, 101, 104, 121, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333, 335, 340], "ndarrai": [68, 75, 76, 82, 86, 121, 160, 193, 261, 262, 312], "degre": [68, 75, 76, 82, 101, 313, 324], "length": [68, 75, 76, 82], "180": [68, 75, 76, 82, 101, 138, 325, 326, 327, 332, 333], "90": [68, 75, 76, 82, 138, 289, 325, 326, 327, 332, 333], "static": [69, 70], "rule": 69, "thumb": 69, "achiev": [70, 290], "uniform": [74, 79, 148, 151, 188, 204, 252, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 291, 312, 313, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 340], "natur": 79, "jigsawpi": [80, 289], "jigsaw_jig_t": 80, "meti": 84, "area": [85, 312], "dt_target": 86, "start_xtim": 86, "char": 86, "defaults_filenam": 87, "total": [91, 289, 290, 292, 312, 313, 315, 336], "substep": [92, 93], "command_line_arg": 92, "cpus_per_nod": 94, "map_filenam": 96, "src_grid_info": 96, "dst_grid_info": 96, "neareststod": [96, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333, 335, 340], "conserv": [96, 275, 276, 277, 282, 283, 325, 326, 327, 328, 332, 333, 335, 340], "map_": 96, "source_typ": 96, "_": [96, 135, 289, 291, 293, 312, 334], "dest_typ": 96, "1d": [97, 101, 104, 121, 138, 261, 262, 263, 264, 265, 266, 267, 269, 270], "2d": [97, 101, 104, 121, 275], "5x0": [97, 101, 104], "5degre": [97, 101, 104], "coordin": [97, 99, 100, 104, 106, 121, 122, 215, 228, 263, 269, 270, 320, 322, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 339], "mesh_typ": [98, 105, 209, 285, 289, 291], "vertex": [98, 105, 209], "x_var": [100, 106], "y_var": [100, 106], "proj_attr": [100, 106], "proj_str": [100, 106], "proj": [100, 106], "left": [101, 138, 312, 321, 324, 326], "remapp": [102, 103], "remap_fil": 102, "progress": [109, 110], "is_task": 110, "steps_to_skip": 110, "component_nam": 111, "config_filepath": 111, "unpickl": [112, 289], "cached_step": 113, "identifi": [113, 135, 286, 305, 342], "task_list": 114, "_all": 114, "streams_filenam": 115, "lxml": [115, 117, 130], "etre": [115, 117, 130], "new_child": 116, "children": 116, "sub": [116, 312], "new_tre": 117, "infin": [120, 325, 327, 332, 333], "toler": 120, "data_arrai": 121, "colorbar_label": 121, "subtitl": 121, "out_file_nam": 122, "ax": 122, "z_index": 122, "cmap_set_und": 122, "cmap_scal": 122, "cmap_titl": 122, "horizont": [122, 138, 160, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 324, 325, 327, 330, 331, 332, 333, 334], "depth": [122, 138, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 312, 313, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "slice": [122, 141], "fieldnam": 122, "visibl": 122, "bar": 122, "matplotlib": [123, 312], "style": [123, 138, 311, 312], "classmethod": 125, "jinja": [125, 138, 275, 276, 277, 282, 283], "namelist_templ": 129, "polarisyaml": [129, 130], "processed_registry_filenam": 130, "registri": [130, 273, 305], "steam": 130, "1_anvil_intel_impi": [131, 135], "mvapich": [131, 135, 314], "ve": [131, 132, 133, 134, 136, 293, 312], "1_anvil_gnu_openmpi": 131, "1_chicoma": 132, "cpu_gnu_mpich": [132, 136], "crai": [132, 135, 136, 315, 319], "1_chrysalis_intel_openmpi": 133, "1_chrysalis_gnu_openmpi": 133, "soon": [134, 135, 312, 336], "1_compy_intel_impi": 134, "1_compy_gnu_openmpi": 134, "load_polaris_env": [135, 293, 312, 336], "therefor": [135, 289, 310, 312], "chicoma": [135, 318, 336], "mpich": [135, 293, 311, 315, 319, 336], "compi": [135, 317, 336], "pm": [135, 319, 336], "compymcnodefac": [135, 318], "perlmutt": [135, 315, 318, 336], "pretti": [135, 289, 292, 312, 313], "conda_path": [135, 293], "osx": [135, 318], "clang": [135, 293], "1_": 135, "morpheu": 135, "cobalt": [135, 314, 315, 316, 317, 318, 319], "single_nod": [135, 313, 314, 315, 316, 317, 318, 319, 336], "mpirun": [135, 309, 313, 314, 315, 316, 317, 318, 319, 336], "srun": [135, 289, 309, 312, 313, 314, 315, 316, 317, 318, 319, 336], "parallel_execut": [135, 309, 313, 314, 315, 316, 317, 318, 319, 336], "modules_befor": [135, 315, 319], "modules_aft": [135, 315, 319], "polaris_env": [135, 314, 315, 316, 317, 318, 319], "deploi": [135, 293, 311, 314, 315, 316, 317, 318, 319], "mpi_gnu": [135, 314, 315, 316, 317, 318, 319], "hdf5": [135, 314, 315, 316, 317, 318, 319], "use_e3sm_hdf5_netcdf": [135, 314, 315, 316, 317, 318, 319], "discoveri": 135, "hostnam": 135, "hostname_contain": 135, "queu": 135, "laptop": [135, 293, 312, 313], "workstat": [135, 293], "high": [135, 289, 316, 318], "hpc": [135, 293, 315, 318], "safest": [135, 293], "mpi_": 135, "simpl": [135, 138, 292, 305, 312, 336], "compiler_gnu": 135, "compiler_intel": 135, "hopefulli": [135, 313], "parlanc": 135, "concret": 135, "ubuntu": 135, "spec": [135, 309, 319], "gcc": 135, "curl": 135, "81": 135, "buildabl": 135, "install_missing_compil": 135, "cc": 135, "bin": [135, 293, 319, 336], "cxx": 135, "f77": 135, "fc": 135, "operating_system": 135, "ubuntu22": 135, "04": 135, "extra_rpath": 135, "luck": 135, "catch": [135, 290], "22": 135, "guess": [135, 312], "correct": [135, 293], "potenti": [135, 160, 173, 289, 312, 324], "purg": 135, "perl": 135, "32": [135, 290, 336], "bsnc6lt": 135, "ugetvbp": 135, "sxfyy4k": 135, "2020": 135, "304": 135, "n3b5fye": 135, "j3zxncu": 135, "7ohuiwq": 135, "k2zu3y5": 135, "mirrcz7": 135, "variou": [135, 237, 289, 293, 297], "ask": 135, "gb": 135, "minut": [135, 274, 290, 324, 341], "hour": [135, 138, 280, 281, 290, 308, 315, 319, 326, 328, 330, 331, 336, 339], "zlib": 135, "incompat": 135, "ubuntu20": 135, "readlin": 135, "pkgconf": 135, "spackdir": 135, "env": [135, 319], "arch": 135, "repositori": [135, 287, 311, 312, 336], "x86_64_v4": 135, "free": [135, 273, 312, 313], "touch": [135, 293], "everyth": 135, "1_pm": 136, "ever": [138, 292], "expand": [138, 321], "oceanmodelstep": [138, 289, 312], "decid": [138, 312], "veri": [138, 286, 289, 292, 293, 305, 312, 328, 334], "earli": [138, 322, 336], "stage": [138, 273, 289, 291, 293, 301, 308, 322, 336], "map_yaml_to_namelist": 138, "heurist": 138, "200": [138, 280, 281, 312, 324, 330, 331, 334], "round": [138, 325, 326, 327, 332, 333], "cell_count": [138, 149, 152, 155, 165, 189, 219, 232, 312], "goal_cells_per_cor": [138, 312, 325, 326, 327, 330, 331, 332, 333, 335, 340], "pinch": 138, "2000": [138, 285, 306, 308, 312, 339], "max_cells_per_cor": [138, 312, 325, 326, 327, 330, 331, 332, 333, 335, 340], "seciton": 138, "control": [138, 275, 276, 277, 278, 282, 283, 289, 313, 324, 325, 326, 327, 332, 333, 334, 336], "scale": [138, 324, 332, 336], "tri": [138, 292], "apport": 138, "dai": [138, 159, 173, 274, 275, 276, 277, 278, 282, 283, 284, 308, 312, 324, 325, 326, 327, 328, 332, 333, 334, 339], "form": [138, 342], "dddd_hh": [138, 159], "ss": [138, 159], "get_time_interval_str": 138, "run_dur": [138, 325, 326, 327, 328, 332, 333], "fill": 138, "dt_str": 138, "run_duration_str": 138, "output_interval_str": 138, "yaml_filenam": [138, 148, 151], "caviti": [138, 292, 312, 313, 321], "frazil": 138, "flux": [138, 273, 334], "fix": [138, 312], "add_spherical_base_mesh_step": [138, 291], "spherical_converg": [138, 278, 291, 325, 326, 327, 332, 333], "icos_resolut": [138, 325, 326, 327, 332, 333], "480": [138, 325, 326, 327, 332, 333], "qu_resolut": [138, 325, 326, 327, 332, 333], "150": [138, 325, 326, 327, 332, 333], "210": [138, 321, 325, 326, 327, 332, 333], "evalu": [138, 141, 142, 143, 144, 187, 202, 203, 214, 216, 217, 227, 229, 230, 249, 275, 277, 282, 283, 325, 326, 327, 328, 332, 333], "convergence_eval_tim": [138, 325, 326, 327, 328, 332, 333], "24": [138, 276, 326, 339], "convergence_thresh": [138, 326], "error_typ": [138, 141, 142, 325, 326, 327, 328, 332, 333], "convergence_forward": [138, 275, 276, 277, 282, 283, 326, 328], "split_explicit": [138, 325, 326, 327, 328, 332, 333], "rk4_dt_per_km": [138, 325, 326, 327, 328, 332, 333], "split": [138, 292], "split_dt_per_km": 138, "barotrop": [138, 164, 239, 289, 312, 324, 334], "simul": [138, 280, 281, 289, 310, 312, 323, 324, 325, 328, 330, 331, 335, 336, 340], "numer": [138, 275, 277, 282, 283, 325, 327, 330, 331, 332, 333], "infti": [138, 321], "inf": [138, 141, 142, 328], "infrastructur": [138, 292, 312], "add_cosine_bell_task": [138, 286], "sphericalconvergenceforward": [138, 275, 276, 277, 278, 282, 283], "invok": 138, "analyz": [138, 140, 186, 201, 248, 250, 255, 312, 325, 326, 327, 332, 333], "split_explicit_t": [138, 312], "convergenceforward": [138, 280, 281], "convergenceanalysi": [138, 275, 276, 277, 278, 280, 281, 282, 283], "convergence_var": [138, 140], "zidx": [138, 140, 141, 143, 144, 145, 187, 202, 203, 214, 227], "exact_solut": 138, "state": [138, 143, 160, 162, 163, 170, 173, 178, 187, 202, 214, 227, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 290, 312, 326, 328], "put": [138, 293, 312], "grid_1d": 138, "generate_1d_grid": 138, "vertical_grid": [138, 261, 263, 269, 270, 285, 289, 312, 313, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "z": [138, 140, 141, 143, 144, 145, 187, 202, 203, 214, 227, 264, 265, 266, 267, 268, 269, 270, 312, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "star": [138, 268, 270, 312, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "init_vertical_coord": [138, 289, 312], "minlevelcel": [138, 263, 265, 266, 267, 268, 269, 270, 312], "maxlevelcel": [138, 263, 264, 265, 266, 267, 268, 269, 270, 312], "cellmask": [138, 263, 266, 269, 270, 312], "zmid": [138, 263, 269, 270, 312], "restingthick": [138, 263, 268, 269, 270, 312], "bottomdepth": [138, 263, 264, 266, 267, 268, 269, 270, 289, 312, 328], "entir": [138, 312, 324, 341], "petersen": [138, 293, 312, 324], "et": [138, 312, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333], "al": [138, 312, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333], "2015": [138, 312, 324], "int_": 138, "rho": 138, "dv": 138, "sort": [138, 286, 287, 292, 293], "increas": [138, 292], "compute_rp": [138, 312], "csv": [138, 275, 276, 277, 278, 282, 283, 312], "dependencies_dict": 140, "rate": [140, 142, 143, 187, 202, 214, 227, 249, 275, 276, 277, 278, 280, 281, 282, 283, 312, 325, 326, 327, 328, 330, 331, 332, 333, 334], "variable_nam": [141, 145], "exact": [141, 143, 144, 187, 202, 203, 214, 215, 216, 217, 227, 228, 229, 230, 276, 278, 280, 281, 292, 330, 331], "conv_thresh": [142, 249, 330, 331], "deriv": [143, 214, 227], "subdivid": [153, 291], "dynamic_ntask": 154, "dynam": [154, 271, 284, 313, 324, 325, 326, 327, 328, 332, 333, 334, 335], "available_cor": 156, "estim": [156, 158, 312], "time_str": 159, "initial_state_filenam": 160, "energi": [160, 173, 311, 312, 324], "len": [160, 312], "output_fil": [160, 289, 312], "shorter": [170, 290, 298], "step_subdir": [179, 299], "processor": [179, 289, 299, 324], "include_viz": [183, 198, 245, 291], "advect": [183, 245, 275, 276, 277, 278, 282, 283, 325, 326, 327, 330, 331, 332, 333, 334], "less": [183, 198, 245, 250, 255, 289, 321], "ncell": [187, 202, 289, 312], "max_valu": 193, "ri": 193, "accord": [193, 328, 330, 331, 336], "meter": [193, 261, 262, 325, 327, 332], "radiu": [193, 325, 326, 327, 332], "viz_map": [194, 257, 291], "testcas": [206, 312, 313, 324, 334, 336], "viz_map_cel": 207, "viz_map_edg": 207, "inerti": [211, 212, 213, 215, 218, 220, 222, 280, 291, 322, 329], "graviti": [211, 212, 213, 215, 218, 220, 222, 280, 291, 322, 329], "wave": [211, 212, 213, 215, 218, 220, 222, 228, 280, 289, 291, 312, 322, 324, 329, 331], "analys": [213, 226], "angleedg": [215, 228], "angl": [215, 228, 328], "posit": [215, 228, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 312, 321, 334], "xcell": [215, 228, 289, 312], "ycell": [215, 228, 289, 312], "xedg": [215, 228, 289, 312], "yedg": [215, 228], "f0": 215, "corioli": [215, 280, 281, 312, 324, 325, 326, 327, 328, 331, 332, 333, 334], "eta0": [215, 228], "amplitid": [215, 228], "kx": [215, 228], "ky": [215, 228], "angular": [215, 228], "frequenc": [215, 228, 274], "veloc": [216, 229, 273, 274, 278, 280, 281, 291, 293, 312, 325, 326, 327, 328, 332, 333, 334, 336], "norm_vel": [216, 328], "eta": [217, 230, 330, 331], "taskdir": [220, 222, 233, 235], "manufactur": [224, 225, 226, 228, 231, 233, 235, 281, 322, 329], "column": [237, 238, 240, 241, 243, 278, 284, 293, 297, 298, 299, 301, 302, 303, 305, 306, 308, 322, 328, 329, 336, 337, 338], "mix": [238, 285, 286, 325, 330, 331, 334], "param": [238, 240], "resources_fix": 239, "ag": [240, 241, 243], "evolv": [240, 311, 321, 325, 326, 327, 332, 333, 334], "ideal_ag": [241, 243], "case_nam": [245, 248, 250, 252, 253, 255], "transport": [247, 248, 250, 252, 255, 275, 277, 282, 283, 325, 326, 327, 332, 333], "nondivergent_2d": [247, 271, 279, 332], "divergent_2d": [247, 271, 279, 327], "correlated_tracers_2d": [247, 271, 279, 325], "rotation_2d": [247, 271, 279, 333], "layer": [261, 262, 263, 267, 268, 269, 270, 273, 274, 275, 277, 280, 281, 282, 283, 284, 312, 313, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "bottom": [263, 264, 265, 266, 267, 268, 269, 270, 273, 312, 313, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "thick": [263, 267, 268, 269, 270, 274, 275, 277, 278, 282, 283, 284, 306, 312, 313, 321, 324, 325, 327, 328, 330, 332, 333, 339], "stretch": [263, 269, 270, 312, 321], "elev": [263, 269, 270, 312, 321], "midpoint": [263, 269, 270, 312], "reftopdepth": [263, 266, 267, 269, 270, 312], "down": [263, 264, 265, 266, 267, 268, 269, 270, 312, 321, 326], "ref": [263, 269, 270, 312], "middl": [263, 269, 270, 312], "refbottomdepth": [263, 264, 265, 266, 267, 269, 270, 289, 312], "refinterfac": [263, 269, 270, 312], "element": [263, 269, 270, 312], "vertcoordmovementweight": [263, 269, 270, 312], "movement": [263, 269, 270, 312], "alter": [264, 265, 289, 291, 311, 312, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "partial": [264, 265, 312, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "seafloor": [264, 266, 267, 268, 321], "unstretch": 268, "shelv": [271, 313, 321], "ssh_adjust": [271, 289, 313], "compass_branch": 271, "example_compact": [271, 286, 305, 313], "default_input": [271, 286, 305, 312, 313], "ocean_model": [271, 293, 313], "latest": [271, 293, 305, 311, 322, 336], "compat": [271, 293, 305, 309, 311], "verison": 271, "geostroph": [271, 279, 322, 329], "manufactured_solut": [271, 279, 286, 331], "single_column": [271, 279, 286, 305, 307, 334], "minim": 273, "fcell": [273, 289, 312, 325, 326, 327, 332, 333], "fedg": [273, 289, 312, 325, 326, 327, 332, 333], "fvertex": [273, 289, 312, 325, 326, 327, 332, 333], "slip": 273, "solid": [273, 306, 324, 326], "tangenti": 273, "nonperiod": 273, "drag": [273, 275, 276, 277, 278, 282, 283], "mass": 273, "momentum": [273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 330, 331], "scalar": 273, "rigid": [273, 333], "solv": [273, 309, 321], "mid": [273, 324, 332], "vari": [273, 275, 276, 277, 278, 282, 283, 289, 309, 318, 321, 326, 328], "consult": [273, 312], "tidal_forc": 273, "eddi": [274, 324], "addition": [274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 289, 314, 315, 316, 317, 319], "diffus": [274, 275, 276, 277, 278, 280, 281, 282, 283, 284], "50": [274, 280, 281, 312, 324, 330, 331, 334], "prescrib": [274, 280, 281, 328], "intens": 274, "enough": [274, 289, 292, 312], "sphere_transport": [275, 277, 282, 283, 325, 327, 332, 333], "spheretransport": [275, 277, 282, 283], "deform": [275, 282, 332], "flow": [275, 277, 282, 283, 324, 325, 326, 327, 328, 332, 333], "distribut": [275, 276, 277, 282, 283, 325, 327, 332, 333], "scheme": [275, 277, 282, 283, 325, 332, 334], "correlated_trac": 275, "differenti": [275, 277, 282, 283], "convergence_": [275, 277, 282, 283], "mixinganalysi": 275, "relationship": [275, 325], "correl": [275, 322, 329], "triplot": 275, "fast": [275, 276, 277, 278, 282, 283, 312], "sphere_transport_viz": [275, 277, 282, 283, 325, 327, 332, 333], "sphere_transport_viz_": [275, 277, 282, 283], "cosinebel": [276, 291], "shape": [276, 326], "blob": 276, "around": [276, 312, 313, 324, 325, 326, 327, 332, 333], "convergence_tracer1": 276, "water": [278, 280, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "convergence_h": 278, "convergence_normalveloc": 278, "shallow": [280, 293, 325, 326, 327, 328, 330, 331, 332, 333, 335], "100": [280, 281, 284, 321, 330, 331, 334], "25": [280, 281, 325, 327, 330, 331, 332, 333, 334], "exactsolut": [280, 281], "obtain": [280, 281, 293, 315], "normal_veloc": [280, 281, 289, 312], "assign": [280, 281, 326], "fall": [280, 281, 336], "accept": [280, 281], "bound": [280, 281], "manufacturedsolut": 281, "nondiverg": [282, 322, 329], "filamentanalysi": 282, "filament": [282, 332], "rotat": [283, 322, 325, 326, 327, 329, 330, 331, 332], "exercis": [284, 308, 325, 326, 327, 328, 332, 333, 334], "kpp_test": 284, "mixedlayerdepthsoutput": 284, "idealagetrac": [284, 334], "single_column_forc": [284, 334], "profil": [284, 309, 334], "throughout": [284, 324, 334], "idealag": 284, "enabel": 284, "formal": 285, "organ": [285, 287, 290, 311], "conceptu": [285, 292], "broadli": [285, 286, 292], "realist": [285, 311, 342], "greenland": [285, 311, 342], "2000m": [285, 336], "34": [285, 336], "halfar": 285, "cism": 285, "dome_typ": 285, "put_origin_on_a_cel": 285, "hydrologi": 285, "hydro": [285, 342], "dome_viz": 285, "time_slic": 285, "save_imag": 285, "hide": [285, 312], "hide_fig": 285, "clutter": 285, "smoke_test": [285, 291], "smoketest": [285, 291], "restart_test": 285, "restarttest": 285, "add_dome_task": 285, "variable_resolut": [285, 289, 336], "talk": 285, "reduc": [285, 289], "among": [285, 287, 293, 312], "encompass": 286, "perspect": 286, "four": 286, "major": [286, 289], "broader": 286, "univers": 286, "add_inertial_gravity_wave_task": 286, "add_manufactured_solution_task": 286, "add_single_column_task": 286, "alphabet": [286, 312], "landice_model": [286, 293], "diagram": 287, "green": 287, "blue": [287, 314, 336], "orang": 287, "red": 287, "laid": 287, "fig": 287, "organiz": 287, "concept": [287, 292, 312, 342], "somewher": 289, "multiprocess": [289, 292, 313], "aspir": 289, "emploi": 289, "unwant": 289, "outer": 289, "inner": 289, "dome_varres_grid": 289, "signific": [289, 290, 291], "neglig": 289, "culled_graph": [289, 312], "meshstep": 289, "getint": 289, "mesh_cpus_per_task": 289, "mesh_min_cpus_per_task": 289, "fit": [289, 313], "applic": [289, 292, 293, 335, 340], "launch": [289, 311], "write_netcdf": [289, 312], "convers": [289, 312], "greater": [289, 312], "graphinfofilenam": [289, 312], "culled_mesh": [289, 312], "use_dist": [289, 312, 324], "gradient_width_dist": [289, 312, 324], "gradient_width_frac": [289, 312, 324], "bottom_temperatur": [289, 312, 324], "surface_temperatur": [289, 312, 324, 334], "temperature_differ": [289, 312, 324], "coriolis_paramet": [289, 312, 324, 330, 331, 334], "x_cell": [289, 312], "y_cell": [289, 312], "bottom_depth": [289, 312, 313, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "ones_lik": [289, 312], "zeros_lik": [289, 312], "x_min": [289, 312], "min": [289, 312, 324, 334], "x_max": [289, 312], "y_min": [289, 312], "y_max": [289, 312], "y_mid": [289, 312], "x_perturb_min": [289, 312], "x_perturb_max": [289, 312], "perturb_width": [289, 312, 324], "y_offset": [289, 312], "sin": [289, 312, 324, 325, 327, 328, 330, 331, 332], "pi": [289, 312, 321, 324, 325, 326, 327, 328, 332], "temp_vert": [289, 312], "frac": [289, 312, 321, 324, 325, 327, 330, 332], "logical_and": [289, 312], "transpos": [289, 312], "3rd": [289, 312], "crest": [289, 312, 324], "expand_dim": [289, 312], "dim": [289, 312], "axi": [289, 312, 333], "broadcast": [289, 312], "nedg": [289, 312], "xvertex": [289, 312], "attr": [289, 312], "initial_temperatur": [289, 312], "initial_normal_veloc": [289, 312], "superclass": 289, "commandlin": 289, "harm": 289, "likewis": [289, 312], "subsequ": [289, 341], "arisen": 289, "problemat": 289, "add_depend": 289, "usual": [289, 291, 293, 312, 336], "forwardstep": 289, "mesh_path": 289, "mesh_step": 289, "with_ice_shelf_cav": 289, "initial_state_target": 289, "adjusted_init": 289, "forcing_data": 289, "init_mode_forcing_data": 289, "entha_analy_result": 289, "mat": 289, "enthalpy_benchmark": 289, "ourselv": 289, "problem": [289, 293, 309, 312], "firewal": 289, "bedmachineantarctica_v2_and_gebco_2022_0": 289, "05_degree_20220729": 289, "slate": 289, "icepresent_qu60km_polar": 289, "practic": [289, 292, 293], "straightforward": 289, "commonli": [289, 310], "notat": [289, 335, 340], "phc": [289, 321], "That": [289, 292, 310, 312, 336], "word": 289, "ff": 289, "quwisc240": [289, 292, 336], "90c": 289, "91c": 289, "92": [289, 321], "91": 289, "sowisc12to60": [289, 336], "performance_test": 289, "effici": [289, 312], "transfer": 289, "feasibl": 289, "overhead": 289, "philosophi": [290, 292, 312], "context": [290, 312], "namesak": 290, "256": [290, 315, 319], "count": [290, 310], "quicker": 290, "exce": 290, "offer": 290, "benefit": [290, 311], "bug": 290, "coverag": 290, "exhaust": 290, "recent": [290, 322, 337], "merg": 290, "reach": 290, "steadi": [290, 328], "wet": 290, "fundament": 291, "incorpor": 291, "velo_solv": 291, "sia": [291, 293], "fo": 291, "runmodel": 291, "run_step": 291, "0200": 291, "00_00": [291, 306, 312], "recip": 291, "demonstr": [291, 312], "fairli": [291, 292, 293, 312], "_cosine_bel": 291, "_with_viz": 291, "_setup_step": [291, 312], "_resolut": 291, "remove_step": 291, "analysis_depend": 291, "base_mesh_step": 291, "cos_bell_dir": 291, "_init_": 291, "init_step": 291, "_forward_": 291, "forward_step": 291, "with_viz_dir": 291, "_map_": 291, "_viz_": 291, "rare": [291, 293], "480km": 291, "closer": 291, "imp_r": 291, "joinpath": 291, "initial_condit": 292, "dig": [292, 313], "background": 292, "adher": [292, 312], "pep8": [292, 293], "bot": [292, 321], "violat": 292, "consid": 292, "editor": 292, "pycharm": [292, 293, 312], "spyder": 292, "linter": 292, "flake8": [292, 293], "discourag": [292, 310], "reformat": 292, "autopep8": 292, "undesir": 292, "lint": 292, "wildcard": 292, "vim": [292, 312], "plugin": 292, "id": [292, 293], "commit": [292, 293], "why": 292, "sound": 292, "subpackag": 292, "understand": [292, 313], "downstream": 292, "tutori": [292, 293], "clu": 292, "intro": 292, "docstr": [292, 311, 312], "strip": 292, "mpas_ocean": 292, "hidden": 292, "shortcut": [292, 336], "referenc": [292, 312], "mention": 292, "dot": 292, "charact": 292, "unix": [292, 311], "distinct": 292, "mayb": [292, 312], "machine_config": 292, "endswith": 292, "splitext": 292, "exactli": [292, 293, 312, 321], "move": [292, 293, 312, 335, 340], "renam": 292, "visa": 292, "versa": 292, "comfort": [292, 312], "inherit": [292, 312], "orient": [292, 328], "program": [292, 313], "led": 292, "felt": 292, "contribut": 292, "hesit": 292, "predecessor": [292, 310, 311], "clumsi": 292, "harder": 292, "outcom": 292, "augment": 292, "explain": 292, "hope": 292, "dens": 292, "learn": [292, 312], "curv": 292, "worth": [292, 312], "skill": 292, "endeavor": 292, "readabl": 292, "manipul": 292, "get_available_cores_and_nod": 292, "theoret": 292, "dozen": 292, "theori": 292, "biogeochemistri": 292, "ksh": 293, "mac": [293, 311], "csh": 293, "tcsh": 293, "temporarili": 293, "recogn": [293, 313, 336], "permiss": 293, "anyon": 293, "caus": [293, 315, 319, 321], "person": [293, 309], "base_path_to_install_or_update_conda": 293, "with_netlib_lapack": 293, "flavor": [293, 312], "troubl": [293, 312], "recognit": 293, "trilino": 293, "downsid": 293, "unneed": 293, "reinstal": 293, "caution": 293, "load_": 293, "encod": 293, "load_dev_polaris_": [293, 312], "env_nam": 293, "dev_polaris_": [293, 309], "workdir": [293, 336], "unexpect": [293, 310, 312], "occur": [293, 309], "echo": 293, "proceed": 293, "notic": 293, "conda_env": [293, 317, 336], "rememb": 293, "incorrect": 293, "unus": 293, "session": [293, 312], "pip": 293, "substanti": 293, "risk": [293, 312], "unsupport": 293, "env_onli": 293, "mpas_make_target": [293, 336], "scientif": [293, 336], "_albani": 293, "instruct": [293, 312], "es3m": 293, "compli": 293, "memor": 293, "guidelin": 293, "complianc": 293, "checker": 293, "isort": 293, "flynt": 293, "mypi": 293, "77": 293, "e302": 293, "blank": 293, "resolv": 293, "simpler": [293, 312], "new_branch_nam": 293, "disk": [293, 313, 315, 319], "respons": 293, "simplest": 293, "your_new_branch": 293, "restart_filenam": 299, "polaris_branch": 305, "post": 305, "src": 305, "registry_process": 305, "seaice_model": 305, "1m": [306, 339], "disc": [306, 339], "config_initial_ice_area": 306, "config_initial_ice_volum": 306, "config_atmospheric_forcing_typ": 306, "config_forcing_start_tim": 306, "config_forcing_cycle_start": 306, "config_forcing_cycle_dur": 306, "config_forcing_precipitation_unit": 306, "mm_per_sec": 306, "config_forcing_sst_typ": 306, "ncar": 306, "config_update_ocean_flux": 306, "config_include_pond_freshwater_feedback": 306, "standard_phys": 308, "standardphys": 308, "year": [308, 322, 339], "volum": 308, "snow": 308, "exact_restart": 308, "exactrestart": 308, "geo": 309, "cartopi": 309, "14": 309, "np110py27_4": 309, "calledprocesserror": 309, "deploy_tmp": 309, "vpn": 309, "site": 309, "shell": [309, 311], "honor": 309, "wide": 309, "spawn": 309, "usernam": [309, 312, 315, 319], "proxy_en": 309, "all_proxi": 309, "proxyout": 309, "8080": 309, "no_proxi": 309, "localhost": [309, 313, 318, 319, 336], "127": 309, "proxy_dis": 309, "unset": 309, "anytim": 309, "fatal": 309, "mpi_init": 309, "stack": 309, "mpir_init_thread": 309, "159": 309, "mpid_init": 309, "164": 309, "mpidi_ch3_init": 309, "95": 309, "mpid_nem_init": 309, "314": 309, "mpid_nem_tcp_init": 309, "173": 309, "mpid_nem_tcp_get_business_card": 309, "395": 309, "getsockinterfaceaddr": 309, "369": 309, "pn2034311": 309, "errno": 309, "host": [309, 313, 318, 336], "focus": 310, "plu": 310, "autom": 311, "exascal": 311, "earth": 311, "kept": 311, "boundari": [311, 324, 342], "expert": 311, "uncoupl": 311, "quick": [311, 312, 322, 337], "queue": 311, "beginn": [311, 312], "advanc": [311, 312], "mpas_to_yaml": 311, "troubleshoot": 311, "proxi": 311, "lanl": [311, 313, 315], "gethostbynam": 311, "glossari": 312, "stick": 312, "miniconda": 312, "3_chrysalis_intel_openmpi": 312, "strict": 312, "push": 312, "lowercas": 312, "hyphen": 312, "settl": 312, "desktop": 312, "realli": [312, 319], "nice": [312, 319], "supercomput": 312, "yet_another_channel": 312, "testgroup": 312, "vi": 312, "polaris_head": 312, "yetanotherchannel": 312, "instanc": 312, "repres": [312, 321, 326, 332], "highli": 312, "camelcas": 312, "capit": 312, "letter": 312, "cap": 312, "awkward": 312, "encourag": 312, "enclos": 312, "briefli": 312, "baroclinicchannel": 312, "globalconverg": 312, "add_test_group": 312, "interest": 312, "test_group": 312, "add_test_cas": 312, "anyth": 312, "probabl": [312, 318, 328], "suppos": 312, "easili": 312, "tide": 312, "sai": [312, 318], "res_str": 312, "1000": [312, 313, 321, 324, 328, 330, 331], "still": [312, 322, 335, 336, 340], "ti": 312, "loop": 312, "1km": [312, 324, 336], "4km": [312, 324, 336], "coarsest": [312, 313], "especi": 312, "promot": 312, "pattern": 312, "familiar": 312, "seen": 312, "brows": 312, "row": 312, "disadvantag": 312, "foremost": 312, "magic": 312, "effect": [312, 335], "pain": 312, "160": [312, 324], "500": [312, 313, 321, 324], "path_to_mpas_ocean": 312, "path_to_working_dir": 312, "cat": 312, "slurm_jobid": 312, "_run_test": 312, "gpf": 312, "fs1": 312, "cbegeman": 312, "grid_typ": [312, 313, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "vert_level": [312, 313, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "coord_typ": [312, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "partial_cell_typ": [312, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "min_pc_fract": [312, 321, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335], "everywher": 312, "depress": [312, 321], "mostli": 312, "logic": [312, 324], "northern": [312, 324], "half": [312, 324], "southern": [312, 324], "halv": [312, 324], "gradient": [312, 324, 330, 331, 334], "500km": [312, 324], "40e3": [312, 324], "35": [312, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 340], "2e": [312, 324], "connect": [312, 319], "match": 312, "light": 312, "e3sm_compon": 312, "interact": [312, 315, 318, 319, 336], "interrupt": 312, "pty": 312, "navig": 312, "newli": 312, "bunch": 312, "didn": 312, "mistak": 312, "finger": 312, "cross": 312, "initial_normalveloc": 312, "initial_salin": 312, "obvious": 312, "stress": [312, 334], "landicemodelstep": 312, "huge": 312, "cp": 312, "05": [312, 328], "hmix_del2": 312, "bottom_drag": 312, "cvmix": 312, "0002": 312, "filename_interv": 312, "0100": 312, "input_interv": 312, "initial_onli": 312, "basicmesh": 312, "dayssincestart": 312, "surfacespe": 312, "lowersurfac": 312, "uppersurfac": 312, "ureconstructx": 312, "ureconstructi": 312, "great": 312, "remain": [312, 326, 328, 334], "load_dataset": 312, "final_temperatur": 312, "ab": 312, "proc": 312, "4proc": [312, 324], "8proc": [312, 324], "markdown": 312, "developers_guid": 312, "users_guid": 312, "daunt": 312, "flesh": 312, "bonu": 312, "improv": 312, "introduc": 312, "techniqu": 312, "cannot": 312, "aim": 312, "constrain_resourc": 312, "becam": 312, "mainten": 312, "counter": 312, "thought": 312, "yet_another_channel_test_cas": 312, "yetanotherchanneltestcas": 312, "choic": [312, 325, 326, 327, 328, 332, 333], "spuriou": [312, 324], "dissip": [312, 324], "pop": [312, 324], "mom": [312, 324], "mitgcm": [312, 324], "higher": 312, "heavi": 312, "analogi": 312, "tet": 312, "bear": 312, "late": 312, "_add_step": 312, "startswith": 312, "enumer": 312, "rpe_": 312, "_nu_": 312, "privat": 312, "break": [312, 324], "unusu": 312, "rpe_1_nu_1": [312, 324], "rpe_2_nu_5": [312, 324], "rpe_3_nu_10": 312, "rpe_4_nu_20": 312, "rpe_5_nu_200": 312, "20_00": 312, "0000": 312, "dayssincestartofsim": 312, "relativevort": 312, "pyplot": 312, "plt": 312, "output_": 312, "sections_yet_another_channel_": 312, "rpe_t": 312, "init_filenam": 312, "initial_state_file_nam": 312, "ds_init": 312, "_plot": 312, "dirti": 312, "adopt": 312, "lesson": 312, "tricki": 312, "commun": 312, "nuanc": 312, "fake": 312, "wasn": 312, "fold": 312, "proper": 312, "third": 312, "previous": 312, "extens": 313, "multinod": [313, 336], "explanatori": 313, "my_machin": 313, "extend": 313, "gitconfig": 313, "enter": 313, "author": 313, "email": 313, "pull_request": 313, "28": [313, 325], "address": [313, 325, 332], "metadata": 313, "customize_config_pars": 313, "server_base_url": 313, "inej": 313, "check_siz": 313, "ssl": 313, "certif": 313, "core_path": 313, "partition_execut": 313, "dask": 313, "netcdf4": 313, "netcdf4_class": 313, "netcdf3_64bit": 313, "netcdf3_class": 313, "engin": 313, "scipi": 313, "mesh_databas": 313, "ocean_database_root": 313, "landice_database_root": 313, "mesh_cor": 313, "mesh_min_cor": 313, "mesh_max_memori": 313, "mesh_max_disk": 313, "init_cor": 313, "init_min_cor": 313, "init_max_memori": 313, "init_max_disk": 313, "init_thread": 313, "forward_cor": 313, "forward_min_cor": 313, "forward_thread": 313, "forward_max_memori": 313, "forward_max_disk": 313, "add_metadata": 313, "ec": 313, "wc": 313, "mesh_descript": 313, "autodetect": 313, "bathy_descript": 313, "gebco": 313, "2022": 313, "bedmachin": 313, "antarctica": 313, "init_descript": 313, "e3sm_vers": 313, "increment": 313, "mesh_revis": 313, "finest": 313, "min_r": 313, "max_r": 313, "max_depth": 313, "creation_d": 313, "peopl": 313, "contact": 313, "temperaturemax": 313, "temperature_max": 313, "33": [313, 336], "enable_ocean_initial_condit": 313, "enable_ocean_graph_partit": 313, "enable_seaice_initial_condit": 313, "scrip": 313, "enable_scrip": 313, "transect": 313, "onlin": 313, "member": 313, "offlin": 313, "enable_diagnostics_fil": 313, "coarser": [313, 325, 326, 327, 328, 332, 333], "finer": 313, "comparisonlatresolut": 313, "comparisonlonresolut": 313, "antarct": 313, "polar": [313, 314, 316, 321], "stereograph": 313, "comparisonantarcticstereowidth": 313, "6000": [313, 321], "comparisonantarcticstereoresolut": 313, "arctic": [313, 339], "comparisonarcticstereowidth": 313, "comparisonarcticstereoresolut": 313, "tanh_dz": 313, "16": [313, 334, 336], "3000": [313, 328], "min_layer_thick": [313, 321], "max_layer_thick": [313, 321], "retain": 313, "ecosystem": 314, "gain": 314, "confluenc": 314, "public_html": [314, 316, 318], "soft": [314, 316, 318, 336], "mpi_intel": [314, 316, 317, 318], "36": [314, 318, 334, 336], "condo": [314, 336], "acm": [314, 336], "medium": 314, "acme_high": 314, "load_latest_polaris_intel_impi": [314, 317], "load_latest_polaris_gnu_openmpi": [314, 316, 336], "dst": 315, "calendar": 315, "network": 315, "introduct": 315, "platform": 315, "batch": 315, "wtrw": 315, "ch": 315, "fe": 315, "lustr": 315, "scratch4": 315, "scratch5": 315, "sacctmgr": 315, "assoc": 315, "cluster": 315, "45": 315, "sshare": 315, "sreport": 315, "accountutilizationbyus": 315, "2019": 315, "prioriti": 315, "yellow": 315, "chkhome": 315, "petabyt": 315, "df": 315, "bp": 315, "archiv": [315, 319], "hpss": [315, 319], "front": 315, "tn": 315, "storag": 315, "project_nam": 315, "salloc": [315, 318, 319], "account_nam": 315, "gpu": [315, 319], "hyperthread": [315, 319], "hang": [315, 319], "threads_per_cor": [315, 319], "shared_clim": [315, 336], "load_latest_polaris_gnu_mpich": [315, 319], "load_latest_polaris_intel_openmpi": 316, "compyf": 317, "app": [317, 336], "pmi2": 317, "40": [317, 328], "submit": 318, "workload": 318, "squeue": 318, "my_usernam": [318, 319], "scancel": 318, "jobid": 318, "cancel": 318, "emtpi": 318, "three": [318, 325, 327, 328, 332, 333, 342], "mpi_mpich": [318, 336], "mpi_openmpi": [318, 336], "nompi": [318, 336], "p1": 319, "nersc": 319, "iri": 319, "filesystem": 319, "myquota": 319, "prjquota": 319, "projectid": 319, "m1795": 319, "hsi": 319, "htar": 319, "zstash": 319, "cf": [319, 336], "cdir": [319, 336], "premium": 319, "cray_compil": 319, "8844": 319, "monik": 319, "browser": 319, "grab": 319, "logon": 319, "kernel": 319, "myenv": 319, "ipykernel": 319, "kernelspec": 319, "u1": 319, "interpret": 319, "argv": 319, "ipykernel_launch": 319, "connection_fil": 319, "display_nam": 319, "languag": 319, "2500": 321, "deepest": 321, "stewart": 321, "2017": 321, "delta": [321, 324, 328, 334], "z_2": 321, "z_1": 321, "mathrm": 321, "tanh": 321, "rightarrow": 321, "z_k": 321, "z_0": 321, "z_": [321, 334], "k": 321, "finder": 321, "n_z": 321, "h_": 321, "scienc": 321, "hydrograph": 321, "climatologi": 321, "250": 321, "5500": 321, "renorm": 321, "51": 321, "221": 321, "ziso": [321, 342], "63": 321, "floor": 321, "flat": [321, 324, 328], "collaps": 321, "adcroft": 321, "campin": 321, "2004": 321, "absenc": 321, "squash": 321, "watercolumn": 321, "press": 321, "batymetri": 321, "stair": 321, "month": 322, "websit": [322, 337], "release_6": 322, "ilicak": 324, "2012": [324, 325, 327, 332, 333], "variat": [324, 328], "distinguish": 324, "zonal": [324, 328, 334], "meridion": [324, 334], "psu": [324, 334], "cooler": 324, "north": 324, "sinusoid": 324, "perturb": [324, 326, 331], "t_0": 324, "t_b": 324, "t_": 324, "z_b": 324, "y_": 324, "l_x": 324, "warmer": 324, "ge": [324, 326], "gradient_width_fract": 324, "l_y": 324, "le": [324, 334], "stationari": [324, 334], "literatur": 324, "mk": 324, "celsiu": 324, "prognost": 324, "lauritzen": [325, 327, 332, 333], "nonlinear": [325, 328, 330, 331], "mixing_analysi": 325, "icosohydr": [325, 326, 327, 332, 333], "nearest": [325, 326, 327, 332, 333], "insensit": [325, 326, 327, 328, 332, 333, 334], "300": [325, 326, 327, 332, 333, 335], "debugtrac": [325, 327, 332, 333], "tracer2": [325, 327, 332, 333], "pair": [325, 327, 332, 333, 339], "tracer3": [325, 327, 332, 333], "nonlinearli": 325, "tau": [325, 326, 327, 332], "lambda": [325, 327, 328, 332], "theta": [325, 327, 328, 332], "co": [325, 326, 327, 328, 330, 331, 332], "transit": [325, 326, 327, 332, 333], "equat": [325, 326, 327, 328, 330, 331, 332, 333, 334], "vel_pd": [325, 326, 327, 332, 333], "rung": [325, 326, 327, 328, 332, 333], "kutta": [325, 326, 327, 328, 332, 333], "4th": [325, 326, 327, 328, 332, 333], "multipli": [325, 326, 327, 328, 332, 333], "spherical_convergence_forward": [325, 327, 332, 333], "globe": [325, 326, 327, 332, 333], "correlated_tracer_2d": 325, "sphere_transport_viz_trac": [325, 327, 332, 333], "sphere_transport_viz_tracer_diff": [325, 327, 332, 333], "sphere_transport_viz_h": [325, 327, 332, 333], "99": [325, 327, 332, 333], "101": [325, 327, 332, 333], "sphere_transport_viz_h_diff": [325, 327, 332, 333], "amplitud": [325, 327, 330, 331, 332], "vel_amp": [325, 327, 332], "convergence_thresh_tracer1": [325, 327, 332, 333], "convergence_thresh_tracer2": [325, 327, 332, 333], "66": 325, "convergence_thresh_tracer3": [325, 327, 332, 333], "mixing_evaluation_tim": 325, "roughli": [325, 326, 327, 332, 333], "studi": [325, 326, 327, 328, 332, 333], "williamson": [326, 328], "1992": [326, 328], "sec": 326, "3a": 326, "skamarock": 326, "gassmann": 326, "bodi": 326, "psi": 326, "proportion": [326, 328], "slow": 326, "passiv": 326, "psi_0": 326, "debug_tracers_1": 326, "equatori": 326, "u_0": [326, 327, 328, 332], "tendenc": [326, 331], "rad": 326, "lat_cent": 326, "lon_cent": 326, "14159265": 326, "2123666": 326, "6667": 326, "hill": 326, "psi0": 326, "576": 326, "circul": 326, "discontinu": [327, 332, 333], "slot": [327, 332, 333], "cylind": [327, 332, 333], "48": 327, "86": 327, "chosen": [328, 334], "h_0": 328, "textrm": 328, "sensit": 328, "wind": [328, 334], "l_1": 328, "l_2": 328, "l_": 328, "examin": [328, 334], "vel_period": 328, "gh_0": 328, "94e4": 328, "william": 328, "paper": [328, 336], "arbitrari": 328, "evolut": 328, "unexpectedli": 328, "convergence_thresh_h": 328, "convergence_thresh_normalveloc": 328, "necessit": 328, "geostropnic_viz": 328, "geostrophic_viz": 328, "geostrophic_viz_h": 328, "deep": 328, "geostrophic_viz_vel": 328, "geostrophic_viz_diff_h": 328, "geostrophic_viz_diff_vel": 328, "propag": [330, 331], "doubli": [330, 331], "assess": [330, 331], "accuraci": [330, 331], "discret": [330, 331], "bishnu": [330, 331], "friction": [330, 331], "neglect": [330, 331], "analyt": [330, 342], "k_x": [330, 331], "k_y": [330, 331], "availi": [330, 331], "10000": [330, 331], "coriloi": 330, "1e": 330, "ssh_amplitud": [330, 331], "wavelength": [330, 331], "n_wavelengths_x": [330, 331], "n_wavelengths_i": [330, 331], "embed": 331, "eta_0": 331, "preserv": [332, 336], "rough": 332, "revers": 332, "filament_analysi": 332, "thhe": 332, "filament_evaluation_tim": 332, "offset": 333, "vector": 333, "rotation_vector": 333, "cartesian": 333, "span": 334, "arbitrarili": 334, "virtu": 334, "400": 334, "phi": 334, "phi_0": 334, "dz": 334, "ml": 334, "mld": 334, "surface_x": 334, "x_gradient_mixed_lay": 334, "mixed_layer_depth_x": 334, "x_difference_across_mixed_lay": 334, "x_gradient_interior": 334, "spatial": 334, "4x4": 334, "960": 334, "degc": 334, "temperature_gradient_mixed_lay": 334, "temperature_difference_across_mixed_lay": 334, "temperature_gradient_interior": 334, "mixed_layer_depth_temperatur": 334, "surface_salin": 334, "salinity_gradient_mixed_lay": 334, "salinity_difference_across_mixed_lay": 334, "salinity_gradient_interior": 334, "mixed_layer_depth_salin": 334, "dictat": 334, "kpp": 334, "restor": 334, "piston": 334, "toward": 334, "temperature_surface_restoring_valu": 334, "temperature_piston_veloc": 334, "salinity_surface_restoring_valu": 334, "salinity_piston_veloc": 334, "temperature_interior_restoring_r": 334, "salinity_interior_restoring_r": 334, "net": 334, "latent": 334, "heat": 334, "bulk": 334, "latent_heat_flux": 334, "sensibl": 334, "sensible_heat_flux": 334, "solar": 334, "shortwav": 334, "shortwave_heat_flux": 334, "evapor": 334, "evaporation_flux": 334, "5e": 334, "rain": 334, "rain_flux": 334, "wind_stress_zon": 334, "wind_stress_meridion": 334, "welcom": [335, 340], "icosohedr": [335, 340], "pertain": [335, 340], "inher": 335, "warrant": 335, "investig": 335, "load_latest_polari": 336, "minu": 336, "create_polaris_load_script": 336, "load_polaris_1": 336, "0_mpich": 336, "exclud": 336, "wiki": 336, "circular_shelf": 336, "sia_smoke_test": 336, "sia_decomposition_test": 336, "sia_restart_test": 336, "fo_smoke_test": 336, "fo_decomposition_test": 336, "fo_restart_test": 336, "37": 336, "17": 336, "210131_test_new_branch": 336, "my_config": 336, "smaller": 336, "previous_workdir": 336, "recompil": 336, "safer": 336, "test_subdir": 336, "whatev": 336, "clock": 336, "j": 336, "exclus": 336, "job_nam": 336, "fo_integr": 336, "sia_integr": 336, "cosine_bell_cached_init": [336, 341], "ec30to60": 336, "ecwisc30to60": 336, "qu240_for_e3sm": 336, "quwisc240_for_e3sm": 336, "wc14": 336, "suitenam": 336, "seaice_standalone_framework": 337, "71": 339, "35n": 339, "156": 339, "5w": 339, "atmospher": 339, "timeseri": 339, "prohibit": 341, "speed": 341, "radial": 342}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 2, 1, "", "symlink"]], "polaris.job": [[61, 2, 1, "", "get_slurm_options"], [62, 2, 1, "", "write_job_script"]], "polaris.list": [[63, 2, 1, "", "list_cases"], [64, 2, 1, "", "list_machines"], [65, 2, 1, "", "list_suites"]], "polaris.logging": [[66, 2, 1, "", "log_method_call"]], "polaris.mesh": [[67, 0, 1, "", "IcosahedralMeshStep"], [74, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [69, 1, 1, "", "get_cell_width"], [70, 1, 1, "", "get_subdivisions"], [71, 1, 1, "", "make_jigsaw_mesh"], [72, 1, 1, "", "run"], [73, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "build_cell_width_lat_lon"], [76, 1, 1, "", "make_jigsaw_mesh"], [77, 1, 1, "", "run"], [78, 1, 1, "", "setup"]], "polaris.mesh.planar": [[79, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[80, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "run"], [82, 1, 1, "", "save_and_plot_cell_width"], [83, 1, 1, "", "setup"]], "polaris.model_step": [[84, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[85, 2, 1, "", "area_for_field"], [86, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[87, 2, 1, "", "ingest"], [88, 2, 1, "", "parse_replacements"], [89, 2, 1, "", "replace"], [90, 2, 1, "", "write"]], "polaris.ocean": [[139, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[139, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[140, 0, 1, "", "ConvergenceAnalysis"], [148, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "compute_error"], [142, 1, 1, "", "convergence_parameters"], [143, 1, 1, "", "exact_solution"], [144, 1, 1, "", "get_output_field"], [145, 1, 1, "", "plot_convergence"], [146, 1, 1, "", "run"], [147, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "compute_cell_count"], [150, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[151, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "compute_cell_count"]], "polaris.ocean.mesh.spherical": [[153, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[154, 0, 1, "", "OceanModelStep"], [159, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "compute_cell_count"], [156, 1, 1, "", "constrain_resources"], [157, 1, 1, "", "map_yaml_to_namelist"], [158, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[160, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[161, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[162, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[162, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[163, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[163, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[164, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[164, 1, 1, "", "__init__"], [165, 1, 1, "", "compute_cell_count"], [166, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[167, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "run"], [169, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[170, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[170, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[171, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[171, 1, 1, "", "__init__"], [172, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[173, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[175, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "run"], [177, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[178, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[178, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[179, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[181, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[181, 1, 1, "", "__init__"], [182, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[183, 0, 1, "", "CosineBell"], [185, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[183, 1, 1, "", "__init__"], [184, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[186, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[188, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[188, 1, 1, "", "__init__"], [189, 1, 1, "", "compute_cell_count"], [190, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[191, 0, 1, "", "Init"], [193, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[191, 1, 1, "", "__init__"], [192, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[194, 0, 1, "", "Viz"], [196, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[196, 1, 1, "", "__init__"], [197, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[198, 0, 1, "", "Geostrophic"], [200, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[198, 1, 1, "", "__init__"], [199, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[201, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "exact_solution"], [203, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[204, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[204, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[205, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[205, 1, 1, "", "__init__"], [206, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[207, 0, 1, "", "Viz"], [209, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz.VizMap": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[211, 0, 1, "", "InertialGravityWave"], [212, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[211, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[213, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[213, 1, 1, "", "__init__"], [214, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[215, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "normal_velocity"], [217, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[218, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[218, 1, 1, "", "__init__"], [219, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[220, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[220, 1, 1, "", "__init__"], [221, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[222, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[222, 1, 1, "", "__init__"], [223, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[224, 0, 1, "", "ManufacturedSolution"], [225, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[224, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[226, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[228, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "normal_velocity"], [230, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[231, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[231, 1, 1, "", "__init__"], [232, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[233, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[233, 1, 1, "", "__init__"], [234, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[235, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[235, 1, 1, "", "__init__"], [236, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[237, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[238, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[238, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[239, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[239, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[240, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[240, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[241, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[241, 1, 1, "", "__init__"], [242, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[243, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[243, 1, 1, "", "__init__"], [244, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[245, 0, 1, "", "SphereTransport"], [247, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[248, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[250, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[250, 1, 1, "", "__init__"], [251, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[252, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[252, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[253, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[253, 1, 1, "", "__init__"], [254, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[255, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[255, 1, 1, "", "__init__"], [256, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[257, 0, 1, "", "Viz"], [259, 0, 1, "", "VizMap"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[257, 1, 1, "", "__init__"], [258, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz.VizMap": [[259, 1, 1, "", "__init__"], [260, 1, 1, "", "runtime_setup"]], "polaris.ocean.vertical.grid_1d": [[261, 2, 1, "", "generate_1d_grid"], [262, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[263, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[264, 2, 1, "", "alter_bottom_depth"], [265, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[266, 2, 1, "", "compute_min_max_level_cell"], [267, 2, 1, "", "compute_z_level_layer_thickness"], [268, 2, 1, "", "compute_z_level_resting_thickness"], [269, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[270, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[91, 2, 1, "", "get_available_parallel_resources"], [92, 2, 1, "", "get_parallel_command"], [93, 2, 1, "", "run_command"], [94, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[95, 2, 1, "", "write"]], "polaris.remap": [[96, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[96, 1, 1, "", "__init__"], [97, 1, 1, "", "dst_from_lon_lat"], [98, 1, 1, "", "dst_from_mpas"], [99, 1, 1, "", "dst_from_points"], [100, 1, 1, "", "dst_from_proj"], [101, 1, 1, "", "dst_global_lon_lat"], [102, 1, 1, "", "get_remapper"], [103, 1, 1, "", "runtime_setup"], [104, 1, 1, "", "src_from_lon_lat"], [105, 1, 1, "", "src_from_mpas"], [106, 1, 1, "", "src_from_proj"]], "polaris.run": [[107, 2, 1, "", "complete_step_run"], [108, 2, 1, "", "load_dependencies"], [111, 2, 1, "", "setup_config"], [112, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[109, 2, 1, "", "run_single_step"], [110, 2, 1, "", "run_tasks"]], "polaris.seaice": [[296, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[296, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[297, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[298, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[298, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[299, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[299, 1, 1, "", "__init__"], [300, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[301, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[301, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[302, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[302, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[303, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[303, 1, 1, "", "__init__"], [304, 1, 1, "", "run"]], "polaris.setup": [[113, 2, 1, "", "setup_task"], [114, 2, 1, "", "setup_tasks"]], "polaris.streams": [[115, 2, 1, "", "read"], [116, 2, 1, "", "update_defaults"], [117, 2, 1, "", "update_tree"], [118, 2, 1, "", "write"]], "polaris.suite": [[119, 2, 1, "", "setup_suite"]], "polaris.validate": [[120, 2, 1, "", "compare_variables"]], "polaris.viz": [[121, 2, 1, "", "plot_global_field"], [122, 2, 1, "", "plot_horiz_field"], [123, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[124, 0, 1, "", "PolarisYaml"], [128, 2, 1, "", "main_mpas_to_yaml"], [129, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [130, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "read"], [126, 1, 1, "", "update"], [127, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 312], "share": [1, 6, 9, 292, 312], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 137, 289, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 340], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 72, 77, 81, 107, 108, 109, 110, 111, 112, 138, 146, 168, 176, 180, 182, 192, 195, 197, 206, 208, 210, 221, 223, 234, 236, 242, 244, 251, 254, 256, 258, 289, 293, 300, 304, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340], "onc": 1, "befor": 1, "depend": [1, 6, 289], "output": [1, 289, 312], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 137, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 279, 285, 288, 291, 292, 294, 297, 298, 299, 300, 301, 302, 303, 304, 307, 312, 329, 335, 336, 338, 340, 342], "work": 1, "directori": [1, 287], "structur": [1, 287], "i": [1, 336], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 293, 311, 313, 336], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 138, 289, 293, 318], "other": [1, 135, 289, 312, 318, 336], "implement": [1, 2], "set": [1, 138, 293, 336], "up": [1, 293, 336], "test": [1, 2, 6, 137, 138, 312, 313, 339], "And": 1, "valid": [1, 2, 3, 18, 120, 179, 180, 274, 299, 300, 312, 336], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 138, 293, 312, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "same": 2, "api": 3, "refer": [3, 137, 138], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 138, 271, 286, 292, 293, 305, 322, 336, 337], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 289, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 311, 336], "framework": [3, 10, 137, 138, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 292, 295, 308, 320], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 63, 64, 65], "setup": [3, 5, 8, 36, 47, 58, 73, 78, 83, 113, 114, 147, 158, 169, 177, 289], "suit": [3, 5, 8, 119, 290, 323, 336, 341], "cach": [3, 5, 8, 55, 289], "mpas_to_yaml": [3, 5], "base": [3, 137], "class": [3, 292], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 135, 138, 286, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "io": [3, 11, 59, 60], "job": [3, 61, 62, 318, 336], "log": [3, 12, 66], "mesh": [3, 13, 14, 19, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 137, 138, 153, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "model_step": [3, 84], "mpa": [3, 6, 15, 85, 86, 138, 273, 306], "namelist": [3, 14, 87, 88, 89, 90, 138], "parallel": [3, 91, 92, 93, 94], "proven": [3, 16, 95], "remap": [3, 17, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "stream": [3, 14, 115, 116, 117, 118, 138, 312], "viz": [3, 121, 122, 123, 181, 182, 194, 195, 196, 197, 207, 208, 209, 210, 222, 223, 235, 236, 243, 244, 257, 258, 259, 260, 275, 276, 277, 278, 280, 281, 282, 283, 284, 303, 304, 308, 312], "yaml": [3, 14, 124, 125, 126, 127, 128, 129, 130, 138], "build": [4, 135, 293, 336], "serial": [5, 8, 109, 110], "deploi": 6, "new": [6, 135, 312], "spack": [6, 135, 293, 336], "environ": [6, 135, 293, 309, 336], "where": 6, "we": 6, "updat": [6, 14, 126, 293], "mach": 6, "conda": [6, 293, 309, 318, 336], "identifi": 6, "e3sm": [6, 14, 138, 293, 336], "machin": [6, 135, 293, 318, 336], "describ": [6, 135], "modul": [6, 8, 292, 293], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 293, 312], "remot": [6, 319], "branch": 6, "petsc": [6, 293], "netlib": [6, 293], "lapack": [6, 293], "albani": [6, 293], "troubleshoot": [6, 293, 309], "ocean": [6, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 322], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 135, 138, 286, 289, 312, 313], "comment": 9, "symlink": [11, 60, 289], "download": [11, 59, 289], "spheric": [13, 19, 80, 81, 82, 83, 137, 138, 151, 152, 153], "planar": [13, 19, 79], "uniform": [13, 138, 321], "gener": 13, "model": [14, 137, 138, 154, 155, 156, 157, 158, 159, 272, 306, 312, 336], "an": [14, 138, 312], "ad": [14, 135, 289, 312], "dynam": [14, 312], "input": [14, 289], "partit": [14, 32], "pio": 14, "make": [14, 312], "graph": 14, "area": 15, "time": [15, 138, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 340], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 312, 339], "common": 19, "matplotlib": 19, "style": [19, 292, 293], "horizont": [19, 312], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 312], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 150, 166, 172, 190], "map_yaml_to_namelist": [31, 157], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 103, 260, 289], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 156, 289], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 174, 184, 199, 246, 291, 309], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "get_slurm_opt": 61, "write_job_script": 62, "list_cas": 63, "list_machin": 64, "list_suit": 65, "log_method_cal": 66, "icosahedralmeshstep": [67, 68, 69, 70, 71, 72, 73], "build_subdivisions_cell_width_lat_lon": 68, "get_cell_width": 69, "get_subdivis": 70, "make_jigsaw_mesh": [71, 76], "quasiuniformsphericalmeshstep": [74, 75, 76, 77, 78], "build_cell_width_lat_lon": 75, "compute_planar_hex_nx_ni": 79, "sphericalbasestep": [80, 81, 82, 83], "save_and_plot_cell_width": 82, "make_graph_fil": 84, "area_for_field": 85, "time_index_from_xtim": 86, "ingest": 87, "parse_replac": 88, "replac": 89, "write": [90, 95, 118, 127], "get_available_parallel_resourc": 91, "get_parallel_command": 92, "run_command": 93, "set_cores_per_nod": 94, "mappingfilestep": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "dst_from_lon_lat": 97, "dst_from_mpa": 98, "dst_from_point": 99, "dst_from_proj": 100, "dst_global_lon_lat": 101, "get_remapp": 102, "src_from_lon_lat": 104, "src_from_mpa": 105, "src_from_proj": 106, "complete_step_run": 107, "load_depend": 108, "run_single_step": 109, "run_task": 110, "setup_config": 111, "unpickle_suit": 112, "setup_task": [113, 114], "read": [115, 125], "update_default": 116, "update_tre": 117, "setup_suit": 119, "compare_vari": 120, "plot_global_field": 121, "plot_horiz_field": 122, "use_mplstyl": 123, "polarisyaml": [124, 125, 126, 127], "main_mpas_to_yaml": 128, "mpas_namelist_and_streams_to_yaml": 129, "yaml_to_mpas_stream": 130, "anvil": [131, 314], "intel": [131, 133, 134, 314, 316, 317], "gnu": [131, 132, 133, 134, 136, 314, 315, 316, 319], "chicoma": [132, 315], "cpu": [132, 136, 315, 319], "chrysali": [133, 316], "compymcnodefac": [134, 317], "support": [135, 272, 293, 306, 318, 336], "perlmutt": [136, 319], "pm": 136, "baroclinic_channel": [137, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 274], "inertial_gravity_wav": [137, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 280], "sphere_transport": [137, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "cosine_bel": [137, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 276, 323], "geostroph": [137, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 278, 328], "manufactured_solut": [137, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 281], "single_column": [137, 237, 238, 239, 240, 241, 242, 243, 244, 284, 294, 297, 298, 299, 300, 301, 302, 303, 304, 308], "converg": [137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 331], "potenti": [137, 138], "energi": [137, 138], "rpe": [137, 138, 160, 173, 174, 175, 176, 177, 274, 324], "vertic": [137, 138, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 312, 321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "coordin": [137, 138, 312, 321], "v": 138, "map": 138, "omega": 138, "mpi": [138, 318], "resourc": 138, "interv": 138, "quasi": 138, "icosahedr": 138, "rest": 138, "convergenceanalysi": [140, 141, 142, 143, 144, 145, 146, 147], "compute_error": 141, "convergence_paramet": [142, 249], "exact_solut": [143, 187, 202, 214, 215, 216, 217, 227, 228, 229, 230, 280, 281], "get_output_field": [144, 203], "plot_converg": 145, "convergenceforward": [148, 149, 150], "compute_cell_count": [149, 152, 155, 165, 189, 219, 232], "sphericalconvergenceforward": [151, 152], "add_spherical_base_mesh_step": 153, "oceanmodelstep": [154, 155, 156, 157, 158], "get_time_interval_str": 159, "compute_rp": 160, "add_baroclinic_channel_task": 161, "decomp": [162, 274, 324], "default": [163, 274, 312, 324], "forward": [164, 165, 166, 188, 189, 190, 204, 218, 219, 231, 232, 239, 252, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 301, 308, 312], "init": [167, 168, 169, 191, 192, 193, 205, 206, 220, 221, 233, 234, 241, 242, 253, 254, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 312], "restart": [170, 171, 172, 274, 324, 339], "restart_step": [171, 172], "restartstep": [171, 172], "analysi": [175, 176, 177, 186, 187, 201, 202, 203, 213, 214, 226, 227, 248, 249, 275, 276, 277, 278, 280, 281, 282, 283, 312, 328], "thread": [178, 274, 324], "cosinebel": [183, 184], "add_cosine_bell_task": 185, "vizmap": [196, 197, 209, 210, 259, 260], "add_geostrophic_task": 200, "inertialgravitywav": 211, "add_inertial_gravity_wave_task": 212, "exactsolut": [215, 216, 217, 228, 229, 230], "normal_veloc": [216, 229], "ssh": [217, 230], "manufacturedsolut": 224, "add_manufactured_solution_task": 225, "add_single_column_task": [237, 297], "cvmix": [238, 284, 334], "ideal_ag": 240, "idealag": 240, "spheretransport": [245, 246], "add_sphere_transport_task": 247, "filament_analysi": [250, 251, 282], "filamentanalysi": [250, 251], "mixing_analysi": [255, 256, 275], "mixinganalysi": [255, 256], "grid_1d": [261, 262], "generate_1d_grid": 261, "write_1d_grid": 262, "init_vertical_coord": 263, "partial_cel": [264, 265], "alter_bottom_depth": 264, "alter_ssh": 265, "zlevel": [266, 267, 268, 269], "compute_min_max_level_cel": 266, "compute_z_level_layer_thick": 267, "compute_z_level_resting_thick": 268, "init_z_level_vertical_coord": 269, "zstar": 270, "init_z_star_vertical_coord": 270, "initi": [273, 306, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "condit": [273, 306, 312, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "boundari": 273, "forc": [273, 306, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "correlated_tracers_2d": 275, "base_mesh": [275, 276, 277, 278, 282, 283], "divergent_2d": 277, "nondivergent_2d": 282, "rotation_2d": 283, "ideal": [284, 334], "ag": [284, 334], "categori": [285, 335, 340], "constructor": [286, 289, 291], "organ": 288, "attribut": [289, 291], "copi": 289, "pull": 290, "request": 290, "pr": 290, "nightli": 290, "overview": 292, "code": [292, 293, 312], "packag": 292, "within": 292, "group": [292, 312], "relat": 292, "quick": [293, 336], "start": [293, 312, 336], "develop": [293, 311, 312], "unix": 293, "shell": 293, "repositori": 293, "beginn": 293, "compil": 293, "system": 293, "unknown": 293, "what": 293, "script": [293, 336], "doe": 293, "flag": 293, "activ": 293, "switch": 293, "between": [293, 312], "differ": 293, "onli": 293, "repo": 293, "worktre": 293, "advanc": 293, "seaic": [294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "exact_restart": [298, 299, 300], "exactrestart": 298, "standard_phys": [302, 303, 304], "standardphys": 302, "standard_physics_test": 308, "exact_restart_test": 308, "solver": 309, "error": 309, "when": 309, "proxi": 309, "lanl": 309, "mac": 309, "gethostbynam": 309, "fail": 309, "glossari": [310, 311], "": 311, "guid": 311, "tutori": [311, 312], "compass": 311, "get": 312, "vari": 312, "resolut": 312, "paramet": 312, "thing": 312, "out": 312, "defin": 312, "more": 312, "again": 312, "one": 312, "second": 312, "enhanc": 312, "comput": 312, "cell": 312, "count": 312, "superclass": 312, "studi": 312, "how": 312, "pass": 312, "data": [312, 319], "A": 313, "case": 313, "slurm": 318, "queue": 318, "mpich": 318, "openmpi": 318, "No": 318, "forg": 318, "jupyt": 319, "notebook": 319, "1d": 321, "grid": [321, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335], "type": 321, "tanh_dz": 321, "60layerphc": 321, "100layere3smv1": 321, "3d": 321, "z": 321, "star": 321, "level": 321, "cosine_bell_cached_init": 323, "baroclin": 324, "channel": 324, "descript": [324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "durat": [324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "core": [324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 339, 340], "correl": 325, "tracer": 325, "2": [325, 327, 332, 333], "d": [325, 327, 332, 333], "cosin": 326, "bell": 326, "diverg": 327, "inerti": 330, "graviti": 330, "wave": 330, "manufactur": 331, "solut": 331, "nondiverg": 332, "rotat": 333, "singl": [334, 339], "column": [334, 339], "task_nam": [335, 340], "yet": 336, "load": 336, "standalon": 336, "sea": 337, "ic": 337, "standard": 339, "physic": 339, "timestep": 339, "exact": 339}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [286, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [324, "mesh"], [324, "id2"], [324, "id9"], [324, "id17"], [324, "id25"], [324, "id32"], [325, "mesh"], [326, "mesh"], [327, "mesh"], [328, "mesh"], [330, "mesh"], [331, "mesh"], [332, "mesh"], [333, "mesh"], [334, "mesh"], [334, "id3"], [334, "id8"], [335, "mesh"], [339, "mesh"], [339, "id1"], [339, "id6"], [340, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [274, "validate"]], "viz": [[3, "viz"], [275, "viz"], [276, "viz"], [277, "viz"], [278, "viz"], [280, "viz"], [281, "viz"], [282, "viz"], [283, "viz"], [284, "viz"], [308, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [312, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [320, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [138, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [138, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[19, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[61, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[62, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[63, "polaris-list-list-cases"]], "polaris.list.list_machines": [[64, "polaris-list-list-machines"]], "polaris.list.list_suites": [[65, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[66, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[67, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[68, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[69, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[70, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[71, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[72, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[73, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[75, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[79, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[81, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[82, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[83, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[84, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[85, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[86, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[87, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[88, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[89, "polaris-namelist-replace"]], "polaris.namelist.write": [[90, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[91, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[92, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[93, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[94, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[95, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[96, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[97, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[98, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[99, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[100, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[101, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[102, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[103, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[104, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[105, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[106, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[107, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[108, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[109, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[110, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[111, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[112, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[113, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[114, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[115, "polaris-streams-read"]], "polaris.streams.update_defaults": [[116, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[117, "polaris-streams-update-tree"]], "polaris.streams.write": [[118, "polaris-streams-write"]], "polaris.suite.setup_suite": [[119, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[120, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_field": [[121, "polaris-viz-plot-global-field"]], "polaris.viz.plot_horiz_field": [[122, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[123, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[124, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[125, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[126, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[127, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[128, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[129, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[130, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[131, "anvil"], [314, "anvil"]], "intel": [[131, "intel"], [133, "intel"], [134, "intel"]], "gnu": [[131, "gnu"], [133, "gnu"], [134, "gnu"]], "Chicoma": [[132, "chicoma"], [315, "chicoma"]], "chicoma-cpu, gnu": [[132, "chicoma-cpu-gnu"]], "Chrysalis": [[133, "chrysalis"], [316, "chrysalis"]], "CompyMcNodeFace": [[134, "compymcnodeface"], [317, "compymcnodeface"]], "Machines": [[135, "machines"], [318, "machines"]], "Supported Machines": [[135, "supported-machines"], [318, "supported-machines"]], "Other Machines": [[135, "other-machines"], [318, "other-machines"]], "Adding a New Supported Machine": [[135, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[135, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[135, "describing-a-spack-environment"]], "Building the Spack Environment": [[135, "building-the-spack-environment"]], "Perlmutter": [[136, "perlmutter"], [319, "perlmutter"]], "pm-cpu, gnu": [[136, "pm-cpu-gnu"]], "ocean": [[137, "ocean"]], "Tasks": [[137, "tasks"], [279, "tasks"], [291, "tasks"], [294, "tasks"], [307, "tasks"], [329, "tasks"], [338, "tasks"], [342, "tasks"]], "baroclinic_channel": [[137, "baroclinic-channel"], [274, "baroclinic-channel"]], "inertial_gravity_wave": [[137, "inertial-gravity-wave"], [280, "inertial-gravity-wave"]], "sphere_transport": [[137, "sphere-transport"]], "cosine_bell": [[137, "cosine-bell"], [276, "cosine-bell"]], "geostrophic": [[137, "geostrophic"], [278, "geostrophic"], [328, "geostrophic"]], "manufactured_solution": [[137, "manufactured-solution"], [281, "manufactured-solution"]], "single_column": [[137, "single-column"], [284, "single-column"], [294, "single-column"], [308, "single-column"]], "Ocean Framework": [[137, "ocean-framework"]], "Convergence Tests": [[137, "convergence-tests"], [138, "convergence-tests"]], "Spherical Convergence Tests": [[137, "spherical-convergence-tests"]], "Ocean Model": [[137, "ocean-model"]], "Spherical Base Mesh Step": [[137, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[137, "reference-potential-energy-rpe"]], "Vertical coordinates": [[137, "vertical-coordinates"]], "Ocean framework": [[138, "ocean-framework"]], "YAML files vs. namelists and streams": [[138, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[138, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[138, "setting-mpi-resources"]], "Setting time intervals in model config options": [[138, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[138, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[138, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[138, "vertical-coordinate"], [321, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[138, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[139, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[140, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[141, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[142, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[143, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[144, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[145, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[146, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[147, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[148, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[149, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[150, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[151, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[152, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[153, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[154, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[155, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[156, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[157, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[158, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[159, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[160, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[161, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[162, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[163, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[164, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[165, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[166, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[167, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[168, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[169, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[170, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[171, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[172, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[173, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[174, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[175, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[176, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[177, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[178, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[179, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[180, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[181, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[182, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[183, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[184, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[185, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[186, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[187, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[188, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[189, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[190, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[191, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[192, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[193, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[194, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[195, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap": [[196, "polaris-ocean-tasks-cosine-bell-viz-vizmap"]], "polaris.ocean.tasks.cosine_bell.viz.VizMap.run": [[197, "polaris-ocean-tasks-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[198, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[199, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[200, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[201, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[202, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[203, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[204, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[205, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[206, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[207, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[208, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.viz.VizMap": [[209, "polaris-ocean-tasks-geostrophic-viz-vizmap"]], "polaris.ocean.tasks.geostrophic.viz.VizMap.run": [[210, "polaris-ocean-tasks-geostrophic-viz-vizmap-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[211, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[212, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[213, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[214, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[215, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[216, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[217, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[218, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[219, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[220, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[221, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[222, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[223, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[224, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[225, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[226, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[227, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[228, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[229, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[230, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[231, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[232, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[233, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[234, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[235, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[236, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[237, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[238, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[239, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[240, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[241, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[242, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[243, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[244, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[245, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[246, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[247, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[248, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[249, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[250, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[251, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[252, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[253, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[254, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[255, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[256, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[257, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[258, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.viz.VizMap": [[259, "polaris-ocean-tasks-sphere-transport-viz-vizmap"]], "polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup": [[260, "polaris-ocean-tasks-sphere-transport-viz-vizmap-runtime-setup"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[261, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[262, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[263, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[264, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[265, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[266, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[267, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[268, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[269, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[270, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[271, "ocean-component"], [322, "ocean-component"]], "Models": [[272, "models"]], "Supported Models": [[272, "supported-models"]], "MPAS-Ocean": [[273, "mpas-ocean"]], "Initial conditions": [[273, "initial-conditions"], [306, "initial-conditions"]], "Boundary conditions": [[273, "boundary-conditions"]], "Forcing": [[273, "forcing"], [306, "forcing"]], "framework": [[274, "framework"], [275, "framework"], [276, "framework"], [277, "framework"], [278, "framework"], [280, "framework"], [281, "framework"], [282, "framework"], [283, "framework"], [284, "framework"], [308, "framework"]], "init": [[274, "init"], [275, "init"], [276, "init"], [277, "init"], [278, "init"], [280, "init"], [281, "init"], [282, "init"], [283, "init"], [284, "init"]], "forward": [[274, "forward"], [275, "forward"], [276, "forward"], [277, "forward"], [278, "forward"], [280, "forward"], [281, "forward"], [282, "forward"], [283, "forward"], [284, "forward"], [308, "forward"]], "default": [[274, "default"], [324, "default"]], "decomp": [[274, "decomp"], [324, "decomp"]], "restart": [[274, "restart"], [324, "restart"]], "threads": [[274, "threads"]], "rpe": [[274, "rpe"], [324, "rpe"]], "correlated_tracers_2d": [[275, "correlated-tracers-2d"]], "base_mesh": [[275, "base-mesh"], [276, "base-mesh"], [277, "base-mesh"], [278, "base-mesh"], [282, "base-mesh"], [283, "base-mesh"]], "analysis": [[275, "analysis"], [276, "analysis"], [277, "analysis"], [278, "analysis"], [280, "analysis"], [281, "analysis"], [282, "analysis"], [283, "analysis"], [328, "analysis"]], "mixing_analysis": [[275, "mixing-analysis"]], "divergent_2d": [[277, "divergent-2d"]], "exact_solution": [[280, "exact-solution"], [281, "exact-solution"]], "nondivergent_2d": [[282, "nondivergent-2d"]], "filament_analysis": [[282, "filament-analysis"]], "rotation_2d": [[283, "rotation-2d"]], "cvmix": [[284, "cvmix"], [334, "cvmix"]], "ideal age": [[284, "ideal-age"], [334, "ocean-single-column-ideal-age"]], "Categories of tasks": [[285, "categories-of-tasks"]], "Constructor": [[286, "constructor"]], "Config file": [[286, "config-file"]], "Directory structure": [[287, "directory-structure"]], "Organization of Tasks": [[288, "organization-of-tasks"]], "Steps": [[289, "steps"]], "Step attributes": [[289, "step-attributes"]], "constructor": [[289, "constructor"], [291, "constructor"]], "setup()": [[289, "setup"]], "constrain_resources()": [[289, "constrain-resources"]], "runtime_setup()": [[289, "runtime-setup"]], "run()": [[289, "run"]], "inputs and outputs": [[289, "inputs-and-outputs"]], "Input files": [[289, "input-files"]], "Symlinks to input files": [[289, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[289, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[289, "downloading-and-symlinking-input-files"]], "Copying input files": [[289, "copying-input-files"]], "Output files": [[289, "output-files"]], "Cached output files": [[289, "cached-output-files"]], "Adding other steps as dependencies": [[289, "adding-other-steps-as-dependencies"]], "Suites": [[290, "suites"], [323, "suites"], [336, "suites"], [341, "suites"]], "Pull-Request (PR) suite": [[290, "pull-request-pr-suite"]], "Nightly suite": [[290, "nightly-suite"]], "Task attributes": [[291, "task-attributes"]], "configure()": [[291, "configure"]], "Overview": [[292, "overview"]], "Code Style": [[292, "code-style"]], "Packages and Modules": [[292, "packages-and-modules"]], "Packages": [[292, "packages"]], "Modules": [[292, "modules"]], "Classes": [[292, "classes"]], "Code sharing": [[292, "code-sharing"]], "\u2026in the polaris framework": [[292, "in-the-polaris-framework"]], "\u2026within a component": [[292, "within-a-component"]], "\u2026within a group of related tasks": [[292, "within-a-group-of-related-tasks"]], "\u2026within a task": [[292, "within-a-task"]], "Quick Start for Developers": [[293, "quick-start-for-developers"]], "Unix Shell": [[293, "unix-shell"]], "Set up a polaris repository: for beginners": [[293, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[293, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[293, "supported-machines"]], "Environments with Albany": [[293, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[293, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[293, "unknown-machines"]], "What the script does": [[293, "what-the-script-does"]], "Optional flags": [[293, "optional-flags"]], "Activating the environment": [[293, "activating-the-environment"]], "Switching between different polaris environments": [[293, "switching-between-different-polaris-environments"]], "Troubleshooting": [[293, "troubleshooting"], [309, "troubleshooting"]], "Creating/updating only the polaris environment": [[293, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[293, "building-e3sm-components"]], "Running polaris from the repo": [[293, "running-polaris-from-the-repo"]], "Code style for polaris": [[293, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[293, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[294, "seaice"]], "SeaIce framework": [[295, "seaice-framework"]], "polaris.seaice.SeaIce": [[296, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[297, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[298, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[299, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[300, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[301, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[302, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[303, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[304, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[305, "seaice-component"]], "Supported Model: MPAS-Seaice": [[306, "supported-model-mpas-seaice"]], "standard_physics_test": [[308, "standard-physics-test"]], "exact_restart_test": [[308, "exact-restart-test"]], "Solver errors when configuring conda environment": [[309, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[309, "proxy-on-lanl-macs"]], "gethostbyname failed": [[309, "gethostbyname-failed"]], "Glossary": [[310, "glossary"], [311, null]], "Polaris": [[311, "polaris"]], "User's guide": [[311, null]], "Developer's guide": [[311, null]], "Tutorials": [[311, null]], "Compass": [[311, "compass"]], "Developer Tutorial: Adding a new test group": [[312, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[312, "getting-started"]], "Making a new test group": [[312, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[312, "adding-a-default-task"]], "Varying resolution and other parameters": [[312, "varying-resolution-and-other-parameters"]], "Adding the init step": [[312, "adding-the-init-step"]], "Creating a horizontal mesh": [[312, "creating-a-horizontal-mesh"]], "Adding a config file": [[312, "adding-a-config-file"]], "Adding the step to the task": [[312, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[312, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[312, "creating-an-initial-condition"]], "Adding plots": [[312, "adding-plots"]], "Adding step outputs": [[312, "adding-step-outputs"]], "Adding validation": [[312, "adding-validation"], [312, "id1"]], "Test things out!": [[312, "test-things-out"]], "Adding the forward step": [[312, "adding-the-forward-step"]], "Defining model config options and streams": [[312, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[312, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[312, "adding-more-validation"]], "Test the task again!": [[312, "test-the-task-again"]], "Adding a visualization step": [[312, "adding-a-visualization-step"]], "Adding the viz step to the task": [[312, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[312, "test-the-task-one-more-time"]], "Adding a second task": [[312, "adding-a-second-task"]], "Enhancements": [[312, "enhancements"]], "Adding model config options in code": [[312, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[312, "adding-dynamic-model-config-options"]], "Computing the cell count": [[312, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[312, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[312, "adding-a-parameter-study"]], "Adding the steps to the task": [[312, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[312, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[312, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[313, "config-files"]], "A \u201cuser\u201d config file": [[313, "a-user-config-file"]], "Test-case config files": [[313, "test-case-config-files"]], "config options": [[314, "config-options"], [315, "config-options"], [316, "config-options"], [317, "config-options"], [318, "config-options"], [319, "config-options"], [324, "config-options"], [324, "id7"], [324, "id14"], [324, "id22"], [324, "id30"], [324, "id37"], [325, "config-options"], [326, "config-options"], [327, "config-options"], [328, "config-options"], [330, "config-options"], [331, "config-options"], [332, "config-options"], [333, "config-options"], [334, "config-options"], [334, "id1"], [334, "id6"], [334, "id13"], [335, "config-options"], [339, "config-options"], [339, "id5"], [339, "id10"], [340, "config-options"]], "Intel on Anvil": [[314, "intel-on-anvil"]], "Gnu on Anvil": [[314, "gnu-on-anvil"]], "Chicoma-CPU": [[315, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[315, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[316, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[316, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[317, "intel-on-compymcnodeface"]], "Slurm job queueing": [[318, "slurm-job-queueing"]], "MPICH": [[318, "mpich"]], "OpenMPI": [[318, "openmpi"]], "No MPI from conda-forge": [[318, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[319, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[319, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[319, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[321, "d-grid-type"]], "uniform": [[321, "uniform"]], "tanh_dz": [[321, "tanh-dz"]], "60layerPHC": [[321, "layerphc"]], "100layerE3SMv1": [[321, "layere3smv1"]], "3D vertical coordinates": [[321, "d-vertical-coordinates"]], "z-star": [[321, "z-star"]], "z-level": [[321, "z-level"]], "cosine_bell and cosine_bell_cached_init suite": [[323, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[324, "baroclinic-channel"]], "description": [[324, "description"], [324, "id1"], [324, "id8"], [324, "id16"], [324, "id24"], [325, "description"], [326, "description"], [327, "description"], [328, "description"], [330, "description"], [331, "description"], [332, "description"], [333, "description"], [334, "description"], [334, "id2"], [334, "id7"], [335, "description"], [339, "description"], [340, "description"]], "vertical grid": [[324, "vertical-grid"], [324, "id3"], [324, "id10"], [324, "id18"], [324, "id26"], [324, "id33"], [325, "vertical-grid"], [326, "vertical-grid"], [327, "vertical-grid"], [328, "vertical-grid"], [330, "vertical-grid"], [331, "vertical-grid"], [332, "vertical-grid"], [333, "vertical-grid"], [334, "vertical-grid"], [334, "id4"], [334, "id9"], [335, "vertical-grid"]], "initial conditions": [[324, "initial-conditions"], [324, "id4"], [324, "id11"], [324, "id19"], [324, "id27"], [324, "id34"], [325, "initial-conditions"], [326, "initial-conditions"], [327, "initial-conditions"], [328, "initial-conditions"], [330, "initial-conditions"], [331, "initial-conditions"], [332, "initial-conditions"], [333, "initial-conditions"], [334, "initial-conditions"], [334, "id5"], [334, "id10"], [335, "initial-conditions"], [339, "initial-conditions"], [339, "id2"], [339, "id7"], [340, "initial-conditions"]], "forcing": [[324, "forcing"], [324, "id5"], [324, "id12"], [324, "id20"], [324, "id28"], [324, "id35"], [325, "forcing"], [326, "forcing"], [327, "forcing"], [328, "forcing"], [330, "forcing"], [331, "forcing"], [332, "forcing"], [333, "forcing"], [334, "forcing"], [334, "id11"], [335, "forcing"], [339, "forcing"], [339, "id3"], [339, "id8"], [340, "forcing"]], "time step and run duration": [[324, "time-step-and-run-duration"], [324, "id6"], [324, "id13"], [324, "id21"], [324, "id29"], [324, "id36"], [325, "time-step-and-run-duration"], [326, "time-step-and-run-duration"], [327, "time-step-and-run-duration"], [328, "time-step-and-run-duration"], [330, "time-step-and-run-duration"], [331, "time-step-and-run-duration"], [332, "time-step-and-run-duration"], [333, "time-step-and-run-duration"], [334, "time-step-and-run-duration"], [334, "id12"], [335, "time-step-and-run-duration"], [340, "time-step-and-run-duration"]], "cores": [[324, "cores"], [324, "id15"], [324, "id23"], [324, "id31"], [324, "id38"], [325, "cores"], [326, "cores"], [327, "cores"], [328, "cores"], [330, "cores"], [331, "cores"], [332, "cores"], [333, "cores"], [334, "cores"], [334, "id14"], [335, "cores"], [339, "cores"], [339, "id4"], [339, "id9"], [340, "cores"]], "thread": [[324, "thread"]], "correlated tracers 2-d": [[325, "correlated-tracers-2-d"]], "cosine bell": [[326, "cosine-bell"]], "divergent 2-d": [[327, "divergent-2-d"]], "inertial gravity wave": [[330, "inertial-gravity-wave"]], "manufactured solution": [[331, "manufactured-solution"]], "convergence": [[331, "convergence"]], "nondivergent 2-d": [[332, "nondivergent-2-d"]], "rotation 2-d": [[333, "rotation-2-d"]], "single column": [[334, "single-column"], [339, "single-column"]], "<Category of task>": [[335, "ocean-category-of-task"], [340, "seaice-category-of-task"]], "task_name": [[335, "task-name"], [340, "task-name"]], "Quick Start for Users": [[336, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[336, null]], "Loading polaris conda and spack environments": [[336, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[336, "e3sm-supported-machines"]], "Other machines": [[336, "other-machines"]], "Building supported E3SM components as standalone models": [[336, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[336, "setting-up-tasks"]], "Running a task": [[336, "running-a-task"]], "Running with a job script": [[336, "running-with-a-job-script"]], "Sea ice component": [[337, "sea-ice-component"]], "standard physics test": [[339, "standard-physics-test"]], "timestep and run duration": [[339, "timestep-and-run-duration"], [339, "id11"]], "visualization": [[339, "visualization"]], "exact restart test": [[339, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[61, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[62, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[63, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[64, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[65, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[66, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[69, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[79, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[80, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[80, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[84, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[85, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[86, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[87, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[88, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[89, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[90, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[91, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[92, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[93, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[94, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[95, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[96, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[107, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[108, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[109, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[111, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[112, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[113, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[114, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[115, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[116, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[117, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[118, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[119, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[120, "polaris.validate.compare_variables"]], "plot_global_field() (in module polaris.viz)": [[121, "polaris.viz.plot_global_field"]], "plot_horiz_field() (in module polaris.viz)": [[122, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[123, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[124, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[124, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[125, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[126, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[127, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[128, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[129, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[130, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[139, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[139, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[140, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[140, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[142, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[148, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[148, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[149, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[150, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[151, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[151, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[153, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[154, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[154, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[155, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[156, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[157, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[158, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[159, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[160, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[161, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[162, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[162, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[163, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[163, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[164, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[164, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[166, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[167, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[167, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[169, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[170, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[170, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[173, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[173, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[175, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[175, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[177, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[178, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[178, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[179, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[179, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[181, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[181, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[183, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[183, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[185, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[186, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[186, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[188, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[188, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[190, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[191, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[191, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[193, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[194, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[194, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.cosine_bell.viz)": [[196, "polaris.ocean.tasks.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[196, "polaris.ocean.tasks.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.vizmap method)": [[197, "polaris.ocean.tasks.cosine_bell.viz.VizMap.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[198, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[198, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[199, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[200, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[201, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[201, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[203, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[204, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[204, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[205, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[205, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[206, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[207, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[207, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[208, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.geostrophic.viz)": [[209, "polaris.ocean.tasks.geostrophic.viz.VizMap"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.vizmap method)": [[209, "polaris.ocean.tasks.geostrophic.viz.VizMap.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.vizmap method)": [[210, "polaris.ocean.tasks.geostrophic.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[211, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[211, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[221, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[222, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[222, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[223, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[224, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[224, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[225, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[226, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[226, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[227, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[228, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[228, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[229, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[230, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[231, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[231, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[232, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[233, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[233, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[234, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[235, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[235, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[236, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[237, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[238, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[238, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[239, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[239, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[240, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[240, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[241, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[241, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[242, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[243, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[243, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[244, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[245, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[245, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[246, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[247, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[248, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[248, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[249, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[250, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[250, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[251, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[252, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[252, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[253, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[253, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[254, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[255, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[255, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[256, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[257, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[257, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[258, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "vizmap (class in polaris.ocean.tasks.sphere_transport.viz)": [[259, "polaris.ocean.tasks.sphere_transport.viz.VizMap"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.vizmap method)": [[259, "polaris.ocean.tasks.sphere_transport.viz.VizMap.__init__"]], "runtime_setup() (polaris.ocean.tasks.sphere_transport.viz.vizmap method)": [[260, "polaris.ocean.tasks.sphere_transport.viz.VizMap.runtime_setup"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[261, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[262, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[263, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[264, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[265, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[266, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[267, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[268, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[269, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[270, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[296, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[296, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[297, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[298, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[298, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[299, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[299, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[300, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[301, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[301, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[302, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[302, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[303, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[303, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[304, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})