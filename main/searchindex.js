Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/organization", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/organization.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Framework", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.get_available_cores_and_nodes", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "Organization of Tests", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 12, 13, 14, 77, 85, 89, 116, 123, 165, 166], "date": [1, 4, 37, 154, 162, 166], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 22, 23, 24, 25, 27, 29, 30, 31, 34, 35, 37, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 59, 63, 65, 69, 70, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 89, 90, 95, 98, 99, 100, 101, 107, 110, 112, 114, 115, 117, 119, 120, 122, 124, 127, 129, 130, 133, 136, 137, 139, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181], "purpos": [1, 34, 160, 161, 164, 181], "thi": [1, 2, 4, 5, 6, 9, 14, 15, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 46, 47, 48, 51, 52, 54, 55, 56, 57, 59, 60, 68, 70, 72, 74, 82, 83, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 106, 107, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 136, 138, 139, 140, 141, 142, 143, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 174, 177, 178, 180, 182], "section": [1, 2, 4, 5, 6, 9, 15, 55, 86, 98, 100, 103, 144, 146, 152, 153, 154, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 178, 180], "i": [1, 4, 5, 6, 9, 14, 19, 22, 23, 27, 28, 30, 37, 40, 42, 54, 55, 59, 70, 73, 74, 75, 77, 79, 82, 83, 85, 90, 91, 93, 94, 95, 98, 100, 101, 114, 115, 116, 123, 140, 141, 146, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 181, 182], "summar": 1, "what": [1, 6, 95, 161, 172, 180], "capabl": [1, 95, 160, 161, 171, 180], "ad": [1, 4, 5, 6, 23, 29, 32, 39, 83, 107, 119, 129, 146, 152, 153, 162, 165, 167, 168, 169, 170, 172, 180], "polari": [1, 3, 5, 6, 91, 93, 94, 95, 98, 154, 155, 157, 158, 163, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 181, 182], "through": [1, 76, 161], "process": [1, 6, 17, 70, 90, 160, 161, 162, 164, 165], "It": [1, 4, 22, 27, 157, 160, 161, 162, 164, 166, 171], "should": [1, 4, 5, 6, 10, 15, 23, 29, 30, 32, 40, 55, 75, 76, 83, 91, 92, 93, 94, 95, 96, 98, 103, 119, 129, 154, 160, 162, 163, 166, 177, 180], "clear": [1, 161], "new": [1, 4, 7, 10, 22, 30, 34, 39, 42, 47, 54, 59, 78, 79, 114, 122, 139, 146, 152, 153, 160, 161, 162, 163, 164, 165, 180], "code": [1, 4, 5, 6, 22, 98, 154, 160, 164, 165, 166, 173, 177, 180], "do": [1, 4, 6, 85, 160, 162, 163, 164, 171, 180], "current": [1, 4, 6, 9, 19, 22, 28, 82, 83, 95, 100, 154, 158, 160, 161, 162, 164, 165, 166, 171, 174, 177, 178, 180, 181, 182], "doe": [1, 6, 160, 165, 171], "primari": [1, 4, 6, 182], "challeng": 1, "respect": [1, 6, 98, 160, 161], "softwar": [1, 63, 172, 180], "also": [1, 4, 5, 6, 17, 27, 39, 82, 83, 98, 146, 152, 153, 154, 160, 161, 162, 166, 171, 172, 174, 177, 180, 181], "appropri": [1, 4, 6, 10, 68, 95, 154, 157, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 180], "final": [1, 5, 157, 160], "statement": [1, 6, 160, 164], "contain": [1, 4, 5, 6, 7, 11, 12, 13, 38, 41, 65, 77, 84, 98, 105, 146, 152, 153, 160, 161, 162, 164, 166, 171, 175, 180], "gener": [1, 2, 3, 5, 6, 10, 11, 12, 13, 17, 29, 54, 83, 98, 119, 129, 144, 154, 156, 157, 158, 160, 162, 166, 171, 178, 180], "regard": 1, "success": [1, 40, 154, 160, 166], "last": [1, 160, 162, 178, 180], "modifi": [1, 6, 9, 21, 32, 77, 79, 100, 108, 125, 157, 160, 162, 165, 166, 177, 180], "add": [1, 4, 5, 6, 8, 10, 11, 12, 13, 14, 23, 24, 31, 32, 35, 53, 58, 62, 77, 78, 79, 85, 86, 89, 90, 116, 123, 157, 160, 161, 162, 164, 166, 172, 178], "your": [1, 3, 4, 6, 95, 154, 161, 162, 163, 166, 167, 168, 171, 172, 178, 180], "list": [1, 5, 9, 22, 30, 31, 37, 38, 70, 74, 75, 76, 81, 82, 83, 105, 127, 133, 136, 160, 161, 162, 164, 165, 166, 168, 171, 172, 178, 180, 181, 182], "appear": [1, 95, 160], "each": [1, 4, 5, 6, 27, 30, 43, 49, 50, 76, 90, 95, 98, 111, 121, 131, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 164, 166, 171, 174, 177, 178, 180, 182], "under": [1, 82, 95, 98, 156, 160, 162, 165, 174, 181], "head": [1, 156, 168], "one": [1, 4, 5, 6, 9, 21, 23, 30, 37, 42, 75, 76, 81, 83, 98, 100, 109, 111, 113, 120, 121, 126, 131, 154, 157, 160, 161, 162, 163, 164, 165, 166, 171, 172, 174, 178, 180, 181, 182], "correspond": [1, 5, 6, 82, 83, 98, 154, 160, 162], "between": [1, 4, 6, 9, 21, 23, 48, 55, 56, 61, 82, 83, 100, 120, 146, 152, 153, 158, 160, 161, 162, 171, 174, 177], "propos": 1, "discuss": [1, 98, 160, 161, 178], "technic": [1, 5], "issu": [1, 160, 162, 178], "rather": [1, 6, 22, 23, 39, 95, 157, 160, 162, 163, 174], "focu": 1, "model": [1, 4, 9, 10, 14, 15, 17, 22, 23, 75, 76, 81, 84, 89, 91, 92, 93, 94, 95, 96, 110, 114, 116, 120, 122, 123, 124, 130, 141, 154, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177], "To": [1, 4, 6, 83, 95, 98, 154, 160, 161, 162, 167, 168, 169, 170, 171, 172, 174, 178, 180], "extent": 1, "possibl": [1, 6, 50, 98, 156, 160, 161, 174], "rel": [1, 4, 6, 23, 24, 37, 39, 75, 76, 81, 82, 83, 154, 160, 161, 162, 164, 177, 180, 181], "independ": [1, 4, 160, 164], "other": [1, 4, 5, 6, 22, 24, 39, 91, 111, 121, 131, 158, 160, 161, 162, 163, 164, 165, 166, 167, 177, 181], "thu": [1, 5, 160], "allow": [1, 6, 9, 19, 22, 28, 39, 83, 98, 100, 160, 164, 166, 171, 174, 177, 178, 181], "clean": [1, 160, 162], "plan": [1, 154, 160, 164, 181], "For": [1, 2, 4, 5, 6, 68, 76, 91, 156, 157, 160, 161, 162, 164, 166, 167, 175, 178, 180, 181], "you": [1, 3, 4, 5, 6, 91, 92, 93, 94, 95, 96, 154, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 177, 178, 180, 181, 182], "can": [1, 3, 4, 5, 6, 19, 22, 23, 28, 30, 33, 51, 54, 56, 75, 76, 81, 83, 91, 92, 93, 94, 95, 96, 98, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182], "provid": [1, 2, 4, 6, 23, 82, 83, 85, 98, 109, 111, 113, 121, 126, 131, 154, 157, 160, 161, 162, 163, 164, 165, 166, 171, 175, 180], "an": [1, 2, 4, 5, 9, 17, 22, 23, 24, 42, 47, 49, 50, 68, 77, 79, 82, 83, 89, 95, 100, 142, 157, 161, 162, 163, 164, 165, 166, 168, 171, 174, 180, 181, 182], "intend": [1, 6, 160, 166, 181], "meet": 1, "includ": [1, 4, 5, 6, 23, 29, 30, 40, 74, 95, 98, 107, 119, 129, 157, 160, 161, 162, 163, 164, 165, 166, 173, 174, 175, 176, 177, 178, 180, 181, 182], "detail": [1, 2, 4, 5, 6, 43, 83, 156, 158, 160, 161, 162, 163, 180], "pde": 1, "solver": [1, 160, 162, 165, 180], "similar": [1, 4, 6, 92, 95, 96, 160, 161, 162, 180], "well": [1, 6, 98, 149, 157, 160, 162, 164, 166, 180, 181], "perform": [1, 4, 6, 26, 27, 29, 33, 47, 82, 83, 112, 114, 119, 124, 129, 132, 139, 154, 157, 158, 160, 164, 165, 166, 171, 177, 182], "In": [1, 5, 6, 22, 98, 158, 160, 161, 162, 165, 166, 171, 174, 180, 181, 182], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 11, 12, 15, 22, 23, 30, 32, 37, 40, 42, 63, 65, 70, 74, 76, 77, 78, 79, 82, 83, 85, 86, 89, 90, 95, 100, 103, 109, 114, 136, 141, 150, 154, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 177, 178, 180, 181, 182], "low": 1, "level": [1, 6, 98, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 166, 177, 182], "variabl": [1, 4, 7, 9, 22, 30, 33, 34, 47, 54, 59, 63, 68, 82, 83, 84, 85, 90, 95, 98, 100, 107, 114, 117, 127, 133, 135, 136, 139, 146, 152, 153, 156, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 175, 177, 180], "declar": [1, 5], "interfac": [1, 6, 144, 145, 146, 152, 153, 160, 161, 162, 165, 174], "sequenc": [1, 4, 160, 161, 164, 180, 181, 182], "If": [1, 4, 5, 6, 9, 19, 22, 23, 28, 31, 32, 42, 68, 70, 71, 75, 82, 83, 91, 92, 93, 94, 95, 96, 100, 114, 157, 160, 161, 162, 163, 164, 166, 171, 172, 174, 177, 178, 180], "want": [1, 4, 6, 32, 98, 160, 162, 163, 166, 171, 172, 180, 181], "math": 1, "syntax": 1, "almost": [1, 6], "ident": [1, 4, 6, 110, 120, 130, 157, 160, 161, 177], "latex": 1, "b": [1, 4, 162, 164, 180], "2": [1, 6, 130, 156, 157, 160, 162, 166, 168, 171, 174, 177, 178, 180], "2ab": 1, "imag": [1, 5, 160], "keep": [1, 4, 6, 9, 39, 160, 162], "mind": [1, 4], "quit": [1, 160], "small": [1, 6, 27, 160, 167, 168, 173, 174, 180], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 9, 18, 19, 22, 23, 27, 28, 30, 34, 39, 68, 70, 74, 76, 83, 86, 95, 98, 100, 114, 146, 149, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 178, 180, 181, 182], "prefer": [1, 160, 166], "png": [1, 6, 158], "okai": [1, 160], "size": [1, 6, 49, 50, 98, 102, 104, 105, 157, 160, 166, 178], "repo": [1, 4, 154, 165], "exampl": [1, 2, 4, 5, 6, 160, 161, 162, 163, 164, 166, 168, 174, 180, 181, 182], "centric": 1, "pseudo": 1, "link": [1, 5, 6, 23, 42, 95, 160, 162, 171, 175, 180], "actual": [1, 4, 6, 160, 162], "sourc": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 162, 166, 167, 168, 169, 170, 171, 172, 180], "project": [1, 4, 5, 46, 154, 161, 162, 166, 167, 168, 171, 180], "manag": [1, 163, 171], "item": 1, "git": [1, 6, 72, 154, 162, 166, 180], "branch": [1, 4, 95, 154, 160, 162, 180], "timelin": 1, "staf": 1, "via": [1, 4, 160, 171], "block": [1, 160], "like": [1, 4, 5, 6, 98, 160, 161, 162, 163, 165, 166, 171, 177, 178, 180, 181], "def": [1, 5, 6, 160, 161], "example_funct": 1, "foo": [1, 161], "return": [1, 5, 15, 38, 40, 48, 49, 50, 55, 65, 69, 76, 77, 79, 85, 89, 90, 98, 101, 103, 105, 115, 137, 140, 144, 147, 148, 149, 150, 151, 161, 178], "0": [1, 4, 5, 6, 49, 83, 91, 92, 93, 94, 95, 96, 98, 146, 151, 152, 153, 156, 160, 161, 163, 166, 168, 171, 174, 175, 177, 178, 180], "how": [1, 4, 6, 54, 98, 160, 161, 166, 171, 172, 177, 178], "show": [1, 5, 6, 160, 171, 172, 177, 178], "we": [1, 4, 5, 6, 68, 94, 95, 98, 104, 157, 160, 161, 162, 166, 168, 170, 171, 172, 174, 180, 182], "have": [1, 3, 4, 5, 6, 15, 68, 75, 76, 81, 94, 95, 98, 103, 136, 154, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 180, 181, 182], "met": 1, "which": [1, 4, 5, 6, 12, 13, 15, 23, 34, 38, 75, 76, 77, 81, 83, 85, 98, 103, 110, 120, 130, 154, 156, 160, 161, 162, 166, 168, 171, 174, 177, 178, 180, 181, 182], "regress": [1, 132, 157, 160, 164, 165, 177, 180, 182], "suit": [1, 5, 22, 30, 43, 73, 74, 76, 95, 157, 162, 164, 165, 166, 167, 168, 169, 170, 172, 175], "would": [1, 4, 6, 9, 19, 22, 28, 31, 70, 83, 98, 100, 114, 157, 160, 161, 162, 163, 171, 174, 180], "thei": [1, 4, 5, 6, 23, 32, 39, 54, 74, 86, 98, 154, 157, 160, 161, 162, 164, 165, 166, 171, 174, 177, 178, 180, 182], "need": [1, 3, 4, 5, 6, 14, 31, 39, 55, 68, 98, 116, 123, 154, 160, 161, 162, 163, 165, 166, 167, 171, 172, 174, 178, 180, 182], "configur": [1, 4, 6, 19, 22, 28, 30, 40, 68, 69, 70, 71, 72, 75, 76, 81, 95, 98, 144, 146, 147, 148, 152, 153, 157, 161, 165, 166, 168, 171, 172, 174, 180, 181], "work": [1, 4, 6, 22, 23, 24, 26, 29, 30, 37, 72, 73, 75, 76, 81, 94, 95, 119, 129, 160, 161, 162, 163, 164, 166, 171, 178, 180, 181], "properli": [1, 91, 93, 94, 166, 180], "addit": [1, 5, 6, 22, 160, 161, 162], "modif": [1, 5, 160], "nightli": [1, 162, 180, 182], "anoth": [1, 5, 6, 23, 82, 83, 154, 160, 161, 162, 164, 166, 177, 180, 181, 182], "might": [1, 6, 160, 162, 166, 171, 180], "made": [1, 4, 22, 24, 30, 83, 160, 161, 164, 181], "ensur": [1, 6, 39, 157, 160, 161, 162], "continu": [1, 160], "expect": [1, 6, 160, 162], "page": [2, 5, 167], "auto": 2, "summari": [2, 168], "more": [2, 4, 6, 30, 37, 55, 75, 76, 98, 156, 157, 158, 160, 161, 162, 164, 171, 175, 177, 180, 181], "relev": [2, 5, 6, 98, 167, 168, 169, 170, 171, 172, 180], "main": [2, 5, 6, 26, 95, 160, 161, 162, 181], "part": [2, 4, 5, 6, 22, 30, 114, 139, 157, 160, 161, 162, 165, 174], "document": [2, 6, 160, 161, 165, 166, 180], "ocean": [2, 4, 5, 6, 7, 15, 23, 34, 81, 155, 157, 158, 160, 161, 162, 164, 165, 166, 171, 173, 174, 176, 177, 180, 181, 182], "As": [3, 4, 6, 49, 98, 160, 161, 162, 166, 174, 182], "long": [3, 9, 19, 22, 28, 70, 100, 114, 160, 180], "follow": [3, 4, 5, 6, 46, 95, 146, 152, 153, 154, 156, 157, 160, 162, 163, 166, 171, 172, 174, 176, 178, 180], "procedur": [3, 95, 162, 172], "conda": [3, 4, 6, 72, 91, 93, 94, 95, 154, 160, 161, 165, 166, 167, 168, 169, 170, 172], "environ": [3, 4, 68, 91, 93, 94, 95, 154, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172], "spack": [3, 4, 91, 93, 94, 95, 163, 165, 167, 168, 169, 170, 171, 172], "compil": [3, 4, 91, 92, 93, 94, 95, 96, 160, 163, 165, 167, 168, 169, 170, 171, 172, 180], "system": [3, 4, 9, 19, 22, 28, 68, 70, 71, 91, 93, 94, 95, 100, 114, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 180], "modul": [3, 4, 11, 12, 13, 46, 65, 77, 91, 93, 94, 95, 98, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 180], "set": [3, 4, 5, 6, 10, 11, 12, 13, 14, 22, 23, 29, 55, 71, 72, 75, 76, 77, 79, 81, 82, 83, 91, 92, 93, 94, 95, 96, 114, 116, 119, 123, 129, 132, 134, 141, 146, 152, 153, 154, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 182], "up": [3, 4, 5, 6, 10, 11, 12, 13, 22, 29, 30, 60, 72, 75, 76, 81, 82, 83, 91, 92, 93, 94, 95, 96, 98, 119, 129, 132, 154, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 178, 181], "alreadi": [3, 6, 32, 42, 98, 114, 160, 161, 162, 166, 171, 174, 178, 180], "packag": [3, 4, 5, 6, 11, 12, 13, 23, 32, 41, 65, 72, 77, 81, 85, 95, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 180], "avail": [3, 4, 6, 9, 19, 22, 24, 25, 28, 38, 43, 69, 70, 100, 114, 160, 161, 162, 167, 168, 169, 170, 172, 177, 178, 180, 182], "Then": [3, 5, 6, 91, 92, 93, 94, 95, 96, 98, 154, 157, 160, 162, 171, 177, 180], "run": [3, 4, 5, 9, 14, 19, 22, 24, 27, 28, 30, 31, 37, 46, 69, 70, 75, 76, 81, 83, 94, 95, 100, 101, 112, 114, 115, 116, 120, 123, 127, 136, 139, 140, 141, 154, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 181, 182], "script": [3, 4, 6, 36, 92, 95, 96, 161, 164, 165, 168, 171], "doc": [3, 5, 160, 172], "cd": [3, 154, 162, 168, 180], "rm": 3, "rf": 3, "developers_guid": 3, "_build": 3, "make": [3, 4, 9, 18, 23, 39, 48, 49, 51, 63, 83, 91, 92, 93, 94, 95, 96, 100, 104, 110, 120, 130, 146, 152, 153, 154, 157, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 177, 178, 180, 182], "html": [3, 175], "view": [3, 162], "open": [3, 162], "index": [3, 6, 146, 147, 148, 149, 150, 151, 152, 153, 160], "act": [4, 161, 174], "essenti": [4, 160], "4": [4, 5, 6, 110, 112, 157, 160, 166, 171, 177, 178, 180], "These": [4, 6, 7, 22, 98, 154, 156, 160, 161, 162, 165, 166, 171, 180, 181, 182], "user": [4, 5, 6, 22, 30, 31, 39, 72, 83, 95, 98, 157, 160, 163, 164, 168, 171, 172, 175, 177, 178], "describ": [4, 5, 72, 77, 79, 82, 83, 90, 95, 98, 157, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 178, 180], "below": [4, 9, 19, 22, 28, 70, 95, 100, 114, 154, 160, 162, 166, 171, 174, 178, 180], "when": [4, 6, 10, 11, 12, 13, 15, 27, 30, 31, 39, 40, 42, 43, 73, 82, 83, 95, 98, 103, 151, 157, 160, 161, 162, 165, 167, 168, 169, 170, 172, 174, 180, 181], "instal": [4, 162, 171, 172, 180], "abov": [4, 5, 6, 160, 161, 162, 166, 178, 180, 182], "develop": [4, 5, 6, 95, 98, 154, 156, 160, 161, 163, 166, 171, 175, 180], "local": [4, 6, 22, 23, 30, 154, 160, 162, 163, 166, 171, 172, 174], "off": [4, 162, 163], "http": [4, 5, 6, 42, 160, 161, 163, 165, 166, 172, 175, 180], "github": [4, 5, 161, 162, 165, 166, 175, 180], "com": [4, 5, 42, 161, 162, 165, 166, 180], "e3sm": [4, 5, 22, 84, 154, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175], "creat": [4, 6, 7, 9, 22, 23, 27, 30, 34, 42, 47, 48, 54, 55, 59, 75, 76, 81, 84, 95, 98, 107, 110, 112, 114, 117, 120, 122, 124, 127, 130, 133, 136, 139, 142, 146, 152, 153, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 180], "see": [4, 5, 6, 91, 93, 94, 157, 158, 160, 162, 163, 166, 171, 175, 176, 178, 180, 181, 182], "mode": [4, 160, 162, 164, 165, 180], "mean": [4, 6, 68, 137, 158, 162, 174, 177, 182], "chang": [4, 6, 54, 154, 160, 161, 162, 164, 166, 168, 172, 174, 177, 180, 182], "reflect": [4, 162], "call": [4, 6, 9, 17, 22, 27, 30, 31, 32, 46, 73, 95, 98, 157, 160, 161, 162, 163, 164, 165, 166, 171, 172, 180], "tool": [4, 6, 154, 160, 162, 165, 166], "us": [4, 5, 6, 9, 14, 15, 19, 22, 23, 27, 28, 30, 37, 40, 55, 63, 66, 68, 70, 73, 83, 84, 85, 90, 91, 95, 98, 100, 101, 102, 103, 104, 114, 115, 116, 123, 133, 136, 140, 144, 146, 147, 148, 152, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 180, 181, 182], "test": [4, 5, 6, 7, 8, 9, 19, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 43, 46, 47, 52, 54, 57, 59, 69, 70, 72, 73, 74, 75, 76, 81, 82, 83, 95, 98, 99, 100, 144, 154, 156, 157, 158, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178], "case": [4, 5, 6, 7, 9, 12, 13, 19, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 43, 47, 52, 54, 57, 59, 69, 70, 72, 73, 74, 75, 76, 77, 81, 82, 83, 95, 98, 99, 100, 106, 107, 108, 110, 112, 114, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 133, 134, 136, 138, 139, 142, 144, 154, 156, 157, 158, 162, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 182], "support": [4, 6, 22, 98, 146, 152, 153, 156, 158, 160, 161, 165, 166, 168, 172, 174, 177, 181], "machin": [4, 6, 22, 23, 30, 72, 75, 76, 81, 154, 160, 161, 165, 166, 167, 168, 169, 170, 172], "option": [4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 28, 30, 31, 32, 37, 39, 40, 42, 43, 47, 53, 54, 55, 58, 59, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 89, 90, 95, 100, 103, 108, 114, 116, 123, 125, 134, 141, 144, 146, 147, 148, 152, 153, 154, 157, 158, 161, 163, 165, 166, 174, 176, 180, 181], "h": [4, 160], "t": [4, 5, 6, 90, 98, 114, 160, 161, 162, 163, 166, 168, 170, 171, 176, 177, 178, 180, 181, 182], "n": [4, 48, 55, 56, 61, 160, 168, 171, 172, 180], "number": [4, 6, 9, 16, 19, 21, 22, 25, 27, 28, 43, 47, 48, 49, 50, 51, 69, 70, 76, 98, 100, 101, 102, 104, 114, 115, 137, 140, 154, 157, 160, 161, 164, 166, 171, 174, 176, 177, 178, 180], "v": [4, 162, 182], "By": [4, 6, 23, 98, 154, 160, 166, 177, 178], "default": [4, 5, 6, 9, 22, 23, 30, 37, 55, 59, 64, 72, 74, 75, 76, 78, 81, 91, 93, 94, 98, 100, 114, 154, 158, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 178, 180, 181, 182], "all": [4, 5, 6, 7, 9, 22, 28, 30, 38, 70, 72, 75, 76, 98, 99, 100, 107, 114, 146, 152, 153, 154, 157, 160, 161, 162, 164, 165, 166, 171, 174, 175, 177, 180, 181], "testcas": [4, 6, 9, 22, 35, 47, 54, 59, 75, 76, 82, 83, 100, 114, 117, 122, 127, 143, 161, 166, 177, 180], "example_compact": [4, 154, 160, 166], "1km": [4, 160, 177, 180], "test1": 4, "1": [4, 5, 6, 22, 49, 91, 92, 93, 94, 95, 96, 98, 110, 114, 130, 146, 152, 153, 157, 160, 162, 163, 166, 168, 171, 172, 174, 177, 178, 180], "test2": 4, "displai": [4, 6, 172], "path": [4, 6, 22, 23, 24, 30, 37, 39, 40, 42, 43, 46, 72, 75, 76, 81, 82, 83, 154, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 180, 181], "directori": [4, 6, 22, 23, 24, 29, 30, 37, 42, 72, 73, 75, 76, 81, 82, 83, 95, 119, 129, 154, 157, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 180, 181], "help": [4, 160, 162, 165, 171, 175], "messag": [4, 6, 160, 163, 172], "test_expr": [4, 43], "flag": [4, 160, 161, 163, 164, 166, 175, 177, 180], "suppli": [4, 5, 6, 90, 160, 162], "substr": 4, "regular": [4, 43, 48, 55, 133, 136, 167, 170, 171, 172, 180], "express": [4, 43], "subset": 4, "think": 4, "search": [4, 43, 168], "within": [4, 5, 6, 19, 22, 23, 24, 28, 30, 41, 81, 82, 83, 157, 160, 162, 164, 166, 168, 171], "name": [4, 5, 6, 7, 9, 11, 12, 13, 15, 16, 22, 23, 30, 32, 34, 40, 42, 43, 47, 54, 59, 63, 65, 74, 75, 76, 77, 81, 82, 83, 84, 85, 89, 98, 100, 103, 105, 107, 114, 122, 137, 139, 142, 145, 160, 161, 162, 164, 166, 172, 177, 180, 182], "singl": [4, 6, 160, 161, 164, 171, 178], "given": [4, 5, 6, 7, 9, 40, 49, 65, 68, 70, 74, 77, 79, 82, 83, 85, 98, 100, 124, 137, 149, 157, 160, 163, 165, 166, 177, 180, 182], "instead": [4, 6, 9, 74, 91, 95, 160, 161, 162, 167, 180, 182], "pass": [4, 6, 30, 83, 160, 161, 162, 164, 180], "similarli": [4, 6, 154, 160, 162, 171, 180], "compon": [4, 5, 9, 22, 23, 30, 34, 45, 72, 81, 84, 100, 106, 114, 132, 139, 164, 165, 166, 171, 173, 176, 181], "result": [4, 6, 40, 50, 82, 83, 95, 98, 110, 120, 127, 130, 157, 158, 160, 161, 162, 164, 166, 177, 178, 182], "verbos": [4, 43, 45, 160, 182], "about": [4, 5, 6, 22, 84, 98, 160, 161, 162, 166, 168, 177], "its": [4, 5, 6, 22, 32, 78, 160, 161, 162, 164, 166, 167, 178, 180, 181], "descript": [4, 5, 166, 175], "short": [4, 112, 160, 161, 177], "core": [4, 6, 9, 19, 21, 22, 23, 25, 27, 28, 30, 69, 70, 81, 98, 99, 100, 110, 112, 157, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 177, 180, 182], "subdirectori": [4, 6, 9, 22, 23, 30, 43, 47, 54, 59, 100, 114, 157, 160, 161, 180, 181], "step": [4, 5, 6, 9, 10, 11, 12, 13, 14, 19, 30, 31, 37, 47, 52, 54, 57, 59, 60, 69, 70, 72, 73, 74, 75, 76, 83, 98, 100, 101, 105, 107, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 131, 136, 138, 139, 140, 141, 142, 143, 156, 157, 158, 161, 164, 165, 166, 172, 174, 177, 181, 182], "tempat": 4, "subdir": [4, 9, 22, 30, 47, 54, 59, 100, 114, 160], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 30, 73, 83, 154, 160, 164, 165, 175], "must": [4, 5, 6, 9, 12, 13, 22, 24, 26, 81, 98, 100, 156, 160, 162, 174, 181], "built": [4, 75, 76, 81, 154, 160, 162, 165, 166, 171, 180], "execut": [4, 6, 9, 75, 76, 81, 100, 154, 160, 162, 166, 167, 168, 169, 170, 171, 172, 180], "standalon": [4, 6, 94, 160, 162, 164, 165, 171], "mpa": [4, 6, 9, 15, 22, 23, 46, 63, 77, 79, 81, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 103, 132, 133, 145, 154, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 180, 181, 182], "befor": [4, 6, 27, 160, 161, 162, 163, 168, 172, 174, 178, 180], "w": [4, 162, 164, 180], "num": 4, "f": [4, 6, 160, 161, 162, 166, 172, 180], "file": [4, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 22, 23, 24, 27, 29, 30, 32, 37, 40, 42, 46, 62, 63, 64, 65, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 95, 100, 104, 105, 116, 119, 123, 129, 145, 154, 157, 161, 162, 163, 164, 165, 168, 171, 172, 174, 177, 178, 180, 181], "m": [4, 48, 55, 56, 61, 157, 160, 162, 167, 168, 169, 170, 172, 174, 177, 178, 180], "mach": [4, 22, 167, 168, 169, 170, 171, 172, 180], "p": [4, 162, 166, 180], "suite_nam": [4, 6, 74, 76, 81, 180], "specifi": [4, 6, 23, 156, 160, 162, 166, 172, 178, 180], "either": [4, 5, 6, 49, 98, 154, 160, 162, 164, 166, 174, 180], "onli": [4, 5, 6, 30, 95, 154, 156, 158, 160, 161, 165, 166, 168, 171, 172, 174, 176, 177, 178, 180], "time": [4, 5, 6, 22, 30, 98, 105, 114, 124, 141, 156, 157, 158, 160, 161, 162, 163, 164, 166, 168, 172, 177, 180, 182], "wai": [4, 5, 22, 51, 56, 95, 98, 160, 161, 162, 163, 165, 171, 174], "altern": [4, 6, 180], "ani": [4, 5, 6, 18, 29, 75, 76, 119, 129, 160, 161, 162, 166, 171, 177, 180], "case_numb": 4, "multipl": [4, 5, 6, 155, 160, 161, 171, 177, 180], "separ": [4, 5, 6, 160, 164, 178, 180], "space": [4, 5, 6, 160, 162, 168, 171, 180], "requir": [4, 6, 9, 19, 22, 28, 100, 114, 154, 160, 161, 162, 163, 165, 166, 171, 174, 175, 180, 181], "few": [4, 9, 19, 22, 28, 70, 95, 100, 157, 160, 161, 166, 171, 177, 178], "basic": [4, 5, 166, 168, 171, 180], "piec": [4, 160], "inform": [4, 5, 6, 22, 83, 90, 160, 162, 166, 168, 175, 180], "abl": [4, 91, 92, 93, 94, 96, 98, 160, 162, 171, 180], "place": [4, 6, 160, 171, 178], "download": [4, 22, 23, 29, 119, 129, 161, 162, 166, 180, 182], "some": [4, 6, 30, 156, 157, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 180, 181, 182], "data": [4, 6, 10, 23, 77, 79, 80, 84, 90, 95, 146, 152, 153, 160, 162, 165, 166, 167, 168, 169, 170, 171, 180, 181, 182], "locat": [4, 6, 30, 75, 76, 81, 154, 160, 162, 164, 166, 168, 171, 174, 177, 178, 180], "where": [4, 5, 6, 22, 23, 30, 40, 72, 75, 76, 81, 98, 146, 149, 152, 153, 154, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 178, 180, 182], "There": [4, 146, 152, 153, 160, 161, 162, 163, 166, 180], "r": [4, 172, 178], "tell": [4, 162], "re": [4, 160, 161, 162, 164, 166, 171, 172, 178], "leav": [4, 160, 166], "unknown": [4, 95, 161, 171], "component_path": [4, 75, 76, 81, 154, 160, 166, 180], "absolut": [4, 6, 22, 23, 39, 75, 76, 81, 154, 160, 162, 180], "landic": [4, 6, 7, 23, 46, 81, 160, 162, 164, 165, 166, 180, 181, 182], "e3sm_submodul": [4, 154, 160, 162], "mali": [4, 95, 160, 162, 164, 166, 180, 181], "dev": [4, 5, 160, 161, 162, 165, 175, 180], "albani": [4, 91, 93, 94, 95, 160, 166, 167, 168, 169, 172, 180], "depend": [4, 6, 29, 119, 129, 158, 160, 162, 164, 166, 171, 172, 174, 178, 180, 181], "whether": [4, 6, 9, 14, 22, 23, 30, 31, 37, 40, 42, 43, 68, 73, 74, 75, 76, 81, 83, 86, 98, 100, 101, 114, 115, 116, 123, 133, 136, 140, 141, 160, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 177, 180], "omega": [4, 15, 84, 100, 103, 154, 160, 161, 162, 164, 175, 180], "config": [4, 5, 9, 10, 13, 14, 15, 22, 23, 30, 32, 40, 53, 55, 58, 68, 69, 70, 71, 72, 75, 76, 81, 83, 84, 85, 86, 87, 89, 90, 95, 100, 103, 116, 123, 134, 141, 144, 146, 147, 148, 152, 153, 154, 157, 158, 161, 162, 163, 165, 174, 180, 181], "point": [4, 36, 42, 154, 156, 160, 161, 162, 166, 171, 180], "much": [4, 6, 160], "config_fil": [4, 75, 76, 81], "work_dir": [4, 6, 22, 30, 72, 75, 76, 81, 82, 83, 160], "base": [4, 6, 7, 22, 23, 25, 30, 34, 37, 53, 58, 59, 75, 76, 81, 95, 102, 104, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 181], "": [4, 5, 6, 22, 23, 24, 30, 32, 37, 60, 73, 78, 81, 83, 98, 154, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 180], "recommend": [4, 5, 6, 160, 161, 162, 171, 177], "itself": [4, 5, 6, 22, 160, 162, 180], "temp": 4, "scratch": [4, 162, 168, 172, 180], "avoid": [4, 160], "confus": [4, 160, 161, 162], "output": [4, 5, 6, 7, 9, 22, 24, 29, 30, 37, 62, 63, 70, 74, 83, 98, 100, 105, 119, 129, 136, 145, 157, 164, 166, 172, 180, 182], "compar": [4, 6, 30, 75, 76, 81, 82, 83, 109, 111, 113, 121, 126, 131, 158, 160, 161, 164, 176, 177, 180, 182], "previou": [4, 6, 160, 176, 180, 182], "same": [4, 5, 6, 23, 30, 82, 83, 98, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 180, 181, 182], "baseline_dir": [4, 30, 75, 76, 81], "mani": [4, 6, 98, 160, 161, 162, 164, 165, 177, 178], "valid": [4, 30, 146, 147, 148, 149, 150, 151, 152, 153, 157, 161, 162, 165, 174, 177], "sure": [4, 6, 83, 95, 110, 120, 130, 154, 157, 160, 161, 162, 164, 166, 171, 172, 177, 178], "timer": [4, 30, 33, 82, 160, 161], "ha": [4, 6, 9, 19, 22, 24, 28, 30, 32, 71, 83, 91, 93, 94, 100, 114, 154, 157, 160, 161, 162, 163, 164, 166, 174, 177, 178, 180], "both": [4, 5, 6, 14, 83, 98, 116, 123, 157, 160, 162, 165, 166, 176], "custom": [4, 6, 39, 40, 75, 76, 81, 154, 160, 166, 172, 180], "order": [4, 6, 98, 160, 162, 180], "give": [4, 6, 160, 161, 162, 166, 180], "predefin": 4, "so": [4, 5, 6, 9, 21, 95, 98, 100, 146, 152, 153, 154, 157, 160, 161, 162, 164, 166, 171, 172, 174, 177, 178, 180, 182], "after": [4, 5, 22, 23, 24, 60, 95, 147, 148, 154, 160, 162, 166, 168, 172, 180], "c": [4, 76, 95, 160, 162, 167, 168, 169, 170, 171, 172, 176, 180, 182], "argument": [4, 5, 6, 20, 22, 70, 157, 160, 161, 162, 182], "resid": [4, 23], "test_suit": [4, 160], "build": [4, 6, 51, 56, 91, 92, 93, 94, 95, 96, 154, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172], "mpas_model": [4, 166], "overrid": [4, 6, 26, 27, 29, 32, 33, 39, 51, 54, 55, 56, 98, 119, 129, 160, 161, 166, 172, 177, 180], "mai": [4, 5, 6, 24, 27, 95, 98, 154, 156, 160, 162, 163, 164, 166, 172, 180, 181], "baselin": [4, 6, 30, 75, 76, 81, 82, 83, 109, 111, 113, 121, 126, 131, 135, 157, 160, 161, 164, 176, 180], "comparison": [4, 6, 30, 82, 83, 160, 166], "against": [4, 6, 83, 135, 157, 160, 176], "oppos": [4, 14, 101, 115, 116, 123, 133, 136, 140, 141], "task": [4, 6, 9, 16, 19, 21, 22, 27, 28, 70, 98, 100, 102, 104, 114, 157, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 177], "parallel": [4, 9, 19, 22, 27, 28, 100, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 180, 181], "been": [4, 6, 22, 30, 32, 75, 76, 81, 91, 93, 94, 98, 136, 154, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 180], "no_step": 4, "wherea": [4, 6, 160, 176, 181], "typic": [4, 5, 6, 22, 74, 98, 160, 162, 164, 166, 171, 174, 180, 181], "clone": [4, 154, 160, 162, 180], "than": [4, 6, 22, 23, 28, 39, 95, 114, 157, 160, 161, 162, 163, 174, 177, 182], "just": [4, 9, 19, 22, 28, 43, 95, 100, 160, 161, 162, 164, 168, 172], "pickl": [4, 6, 180], "latter": [4, 30, 95], "conveni": [4, 146, 152, 153, 160, 164, 166, 180], "tab": [4, 180], "complet": [4, 6, 11, 12, 13, 180], "explicitli": [4, 5, 6, 98, 157, 160, 166, 180], "select": [4, 6, 160, 162], "two": [4, 6, 120, 157, 158, 160, 161, 162, 177, 181], "edit": [4, 5, 83, 162, 180], "steps_to_run": [4, 6, 30, 74, 83, 160, 166], "test_cas": [4, 6, 9, 22, 34, 35, 47, 54, 59, 72, 75, 76, 82, 83, 100, 114, 117, 122, 127, 136, 139, 142, 160, 166, 180], "initial_st": [4, 107, 156, 158, 160, 161, 166, 177], "full_run": [4, 121, 177], "restart_run": [4, 121, 177], "Or": [4, 166], "accomplish": [4, 161], "thing": [4, 91, 92, 93, 94, 95, 96, 98, 160, 161, 165], "skip": [4, 6, 83, 160, 182], "take": [4, 5, 6, 39, 160, 162, 182], "preced": [4, 39], "over": [4, 6, 39, 160, 161, 165, 174, 177, 180], "special": [4, 164], "databas": [4, 6, 7, 9, 22, 23, 100, 160, 171], "polaris_cach": [4, 6, 7, 160], "symlink": [4, 22, 23, 161, 162], "input": [4, 6, 17, 22, 23, 24, 29, 63, 119, 129, 157], "structur": [4, 6, 15, 103, 165], "without": [4, 6, 23, 160, 161, 162, 166, 170, 171, 180], "redund": [4, 146, 152, 153, 157], "stamp": 4, "revis": [4, 166], "remov": [4, 6, 74, 157, 160], "older": 4, "ones": [4, 146, 152, 153, 161], "version": [4, 6, 17, 39, 72, 82, 83, 154, 157, 160, 161, 162, 165, 166, 171, 172, 175, 177, 180], "A": [4, 5, 6, 7, 10, 12, 13, 15, 22, 23, 30, 34, 38, 39, 43, 47, 48, 51, 54, 55, 56, 59, 65, 70, 72, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 103, 106, 110, 114, 117, 120, 122, 127, 130, 132, 133, 136, 139, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 157, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 177, 178, 180], "aid": 4, "updat": [4, 5, 9, 11, 13, 18, 19, 27, 28, 78, 94, 102, 114, 154, 157, 163, 165, 180], "cached_fil": [4, 7, 160], "json": [4, 6, 7, 37, 160, 172], "anvil": [4, 95, 160, 166, 171, 180], "chrysali": [4, 95, 160, 166, 171, 180], "sinc": [4, 6, 90, 98, 157, 160, 161, 162, 177, 178], "copi": [4, 6, 23, 37, 75, 76, 81, 168, 180], "onto": [4, 162], "lcrc": [4, 6, 37, 160, 161, 166, 167, 169, 171, 180], "server": [4, 6, 23, 37, 160, 161, 166, 172], "whose": [4, 160], "global_ocean": [4, 6, 160, 161, 162, 166, 180, 182], "qu240": [4, 160, 161, 162, 166, 180, 182], "mesh": [4, 9, 22, 63, 98, 100, 101, 102, 104, 112, 115, 117, 133, 136, 137, 139, 140, 142, 146, 152, 153, 156, 157, 160, 161, 162, 164, 165, 166, 174, 176, 177, 178, 180, 182], "phc": [4, 160, 174, 182], "init": [4, 19, 28, 154, 160, 161, 162, 166, 180, 182], "ocean_cached_fil": 4, "pr": [4, 180, 182], "look": [4, 5, 6, 160, 161, 166], "someth": [4, 5, 162], "culled_mesh": [4, 160], "nc": [4, 6, 160, 161], "210803": 4, "culled_graph": [4, 160], "info": [4, 6, 9, 16, 63, 100, 160], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 160], "date_str": [4, 37], "let": [4, 160, 162, 164, 166, 172], "string": [4, 6, 23, 160], "choos": [4, 160, 161, 167, 168, 169, 170, 172, 181], "todai": [4, 37], "dry_run": [4, 37], "saniti": 4, "check": [4, 6, 68, 83, 162, 164, 166, 168, 172, 180, 182], "print": [4, 6, 43, 83, 86, 160, 161, 182], "stdout": [4, 6, 22, 30, 160], "translat": [4, 15, 98, 103], "compass": [4, 46, 154, 160, 161, 164], "convert": [4, 6, 98, 160], "namelist": [4, 5, 9, 10, 11, 14, 15, 17, 18, 21, 29, 75, 76, 81, 89, 90, 100, 103, 104, 116, 119, 123, 129, 154, 157, 158, 161, 165, 166], "stream": [4, 5, 6, 9, 12, 14, 17, 29, 84, 89, 90, 104, 116, 119, 123, 129, 154, 156, 157, 161, 166], "yaml": [4, 9, 10, 13, 14, 15, 100, 103, 104, 116, 123, 157, 165, 168, 172], "e": [4, 5, 6, 15, 22, 32, 34, 46, 84, 95, 98, 103, 154, 160, 161, 162, 163, 164, 165, 166, 172, 174, 177, 180, 181, 182], "g": [4, 5, 6, 15, 22, 32, 34, 46, 84, 95, 98, 103, 154, 160, 161, 162, 163, 164, 165, 166, 174, 177, 180, 182], "forward": [4, 6, 22, 105, 112, 113, 122, 124, 126, 154, 160, 161, 166, 177, 178], "becaus": [4, 5, 6, 156, 160, 161, 162, 168, 170, 172, 180], "don": [4, 5, 6, 98, 160, 161, 162, 170, 180, 181], "format": [4, 5, 6, 84, 90, 160, 162, 166, 168], "note": [4, 5, 6, 172], "keyword": [4, 5, 6, 160], "top": [4, 146, 147, 148, 149, 150, 151, 152, 153, 156, 160, 174], "ignor": 4, "get": [4, 5, 6, 9, 10, 11, 12, 13, 22, 30, 31, 38, 49, 69, 73, 95, 98, 100, 160, 161, 162, 164, 166, 174, 180], "pars": [4, 6, 10, 11, 12, 13, 65, 77, 79, 160], "valu": [4, 5, 6, 10, 15, 83, 86, 103, 124, 157, 160, 161, 165, 166, 174, 177], "doesn": [4, 6, 90, 160, 166, 171, 180], "matter": 4, "usabl": 4, "sphinx": 5, "written": [5, 6, 22, 30, 160], "myst": 5, "tip": [5, 162], "easi": [5, 23, 161], "start": [5, 6, 78, 156, 157, 160, 161, 165, 168, 171, 172, 175], "exist": [5, 6, 15, 22, 24, 42, 77, 79, 81, 103, 157, 160, 161, 162, 163, 171, 182], "tree": [5, 77, 79, 90], "group": [5, 6, 7, 8, 22, 30, 34, 35, 38, 106, 107, 110, 112, 114, 120, 124, 127, 130, 132, 133, 154, 157, 158, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182], "pull": [5, 161, 162, 166], "request": [5, 9, 16, 18, 100, 147, 148, 161, 162, 163, 166, 178], "guid": [5, 98, 157, 160, 161, 168, 171, 175], "baroclinic_channel": [5, 6, 154, 159, 160, 161, 164, 175, 179, 180, 181, 182], "label": [5, 171, 180], "prepend": 5, "them": [5, 6, 9, 21, 95, 100, 158, 160, 161, 162, 164, 170, 171, 176, 180, 181], "baroclin": [5, 34, 106, 107, 110, 112, 114, 117, 120, 124, 127, 130, 157, 160, 177], "channel": [5, 34, 106, 107, 110, 112, 114, 117, 120, 124, 127, 130, 157, 160, 163, 177], "And": [5, 160, 162], "becom": [5, 160], "who": [5, 162, 166, 172], "citat": 5, "defin": [5, 6, 22, 30, 54, 75, 76, 81, 95, 154, 156, 157, 158, 160, 161, 162, 164, 165, 166, 171, 174, 177, 178, 181, 182], "brief": 5, "overview": [5, 165, 168, 172], "comment": [5, 160, 166], "appli": [5, 6, 43, 156, 160], "common": [5, 6, 27, 30, 34, 157, 160, 161, 163, 164, 166, 171, 172, 180, 181, 182], "refer": [5, 22, 105, 124, 146, 149, 152, 153, 160, 161, 162, 164, 165, 174, 177, 180], "awar": [5, 95, 160, 171], "wish": [5, 6, 160, 162, 180, 182], "specif": [5, 6, 32, 95, 154, 160, 165, 166, 168, 171, 180, 182], "share": [5, 98, 107, 154, 157, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 177, 180], "function": [5, 6, 29, 48, 55, 95, 98, 107, 119, 129, 160, 161, 165, 178, 181], "public": [5, 6, 160, 166], "api": [5, 6, 165], "underscor": 5, "md": 5, "across": [5, 6, 157, 160, 161, 164, 173, 177], "ot": 5, "automat": [5, 6, 98, 160, 161, 162, 166, 167, 169, 170, 171, 172, 180], "python": [5, 6, 10, 27, 32, 160, 161, 162, 164, 165, 166, 171, 172, 180], "begin": [5, 6, 157, 160, 162, 165, 171, 178], "numpydoc": 5, "text": [5, 6, 178], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 98, 146, 148, 149, 150, 151, 152, 153, 154, 160, 166, 168, 172], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 68, 95, 98, 100, 101, 105, 115, 137, 140, 149, 150, 151, 157, 158, 160, 162, 168, 169, 171, 172, 180], "pressur": [5, 154, 166], "overli": 5, "ic": [5, 98, 154, 161, 162, 165, 166, 168, 174, 181], "shelf": [5, 98, 160, 161, 166, 174], "draft": [5, 174], "paramet": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25, 28, 30, 31, 34, 35, 37, 40, 42, 43, 46, 47, 49, 50, 51, 54, 59, 61, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 85, 86, 87, 89, 90, 98, 100, 101, 103, 105, 107, 110, 112, 114, 115, 116, 117, 120, 122, 123, 124, 127, 130, 133, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 177], "xarrai": [5, 146, 147, 148, 149, 150, 151, 152, 153, 160], "dataarrai": [5, 147, 148, 149, 150, 151, 160], "sea": [5, 98, 148, 149, 150, 151, 154, 166, 174], "surfac": [5, 98, 148, 149, 150, 151, 154, 156, 166, 174, 177], "height": [5, 98, 148, 149, 150, 151, 154, 166, 174], "mask": [5, 146, 149, 152, 153, 160, 166, 174], "landicepressur": [5, 160], "deviat": 5, "float": [5, 6, 10, 47, 49, 50, 54, 83, 107, 110, 112, 114, 117, 120, 124, 127, 130, 137, 160], "densiti": [5, 6, 98], "seawat": 5, "displac": 5, "land": [5, 98, 154, 165, 166, 174, 181], "landicedraft": 5, "equal": [5, 161], "initi": [5, 6, 22, 105, 109, 112, 117, 132, 142, 157, 158, 160, 161, 163, 164, 165, 166, 174, 176, 177, 178, 181], "entri": [5, 36, 66, 75, 76], "alwai": [5, 6, 39, 98, 154, 160, 161, 162, 166], "own": [5, 6, 22, 160, 161, 162, 164, 166, 178, 180, 181], "line": [5, 6, 20, 22, 70, 160, 161, 162, 165, 180], "type": [5, 10, 90, 160, 161, 162, 163, 164, 166, 177, 178, 182], "side": 5, "colon": 5, "doubl": [5, 98, 160], "back": [5, 168, 180], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 40, 50, 71, 154, 161, 162, 163, 166, 180], "arg": [5, 6, 22, 70, 160], "indic": [5, 6, 76, 83, 149, 160, 163, 166, 174, 177], "On": [5, 6, 162, 171], "next": [5, 160, 174, 180], "indent": [5, 160], "obviou": [5, 160], "none": [5, 6, 9, 12, 13, 19, 22, 23, 28, 30, 37, 40, 43, 45, 47, 54, 59, 63, 72, 74, 76, 77, 81, 82, 83, 85, 89, 100, 101, 114, 115, 140, 160, 174, 177], "replac": [5, 6, 10, 11, 12, 13, 14, 15, 30, 42, 65, 77, 85, 86, 103, 116, 123, 160, 161, 166, 180], "els": [5, 6, 160], "true": [5, 6, 9, 31, 40, 42, 83, 86, 91, 92, 93, 94, 96, 98, 100, 156, 160, 162, 166, 167, 168, 169, 170, 171, 172, 180, 181], "further": [5, 160, 172], "necessari": [5, 160], "rais": [5, 6, 22, 24, 40, 42, 68, 83, 98, 160, 161], "belong": [6, 9, 19, 22, 28, 30, 34, 47, 54, 59, 100, 106, 107, 110, 112, 114, 117, 120, 122, 124, 127, 130, 132, 133, 136, 139, 142, 160, 161, 182], "command": [6, 20, 22, 27, 70, 72, 160, 161, 162, 164, 165, 168, 171, 172, 180], "while": [6, 156, 157, 160, 163, 164, 177], "meant": [6, 161, 166], "simplifi": 6, "verifi": [6, 160, 166], "list_cas": 6, "list_machin": [6, 161], "list_suit": 6, "anywher": [6, 162], "setup_cas": 6, "object": [6, 11, 12, 13, 65, 77, 82, 83, 84, 85, 89, 90, 160, 161], "later": [6, 9, 19, 22, 28, 39, 83, 100, 160, 166], "contrast": 6, "read": [6, 7, 11, 12, 13, 22, 30, 41, 64, 65, 84, 98, 156, 160], "properti": [6, 156, 160, 171, 178], "clean_cas": 6, "delet": [6, 161, 162, 163, 180], "constant": [6, 47, 54, 55, 98, 156, 177, 178], "setup_suit": 6, "clean_suit": 6, "write": [6, 84, 145, 160, 162], "out": [6, 67, 71, 160, 161, 162, 166, 174, 180], "save": [6, 40, 61, 157, 160, 171, 176, 177], "dictionari": [6, 7, 10, 12, 13, 15, 30, 34, 39, 65, 72, 76, 77, 83, 84, 85, 86, 103, 160, 161], "target": [6, 9, 23, 42, 95, 98, 100, 157, 160], "minimum": [6, 98, 100, 157, 160, 166, 174, 177, 178], "determin": [6, 23, 27, 30, 68, 90, 98, 104, 157, 158, 160, 174, 177, 178, 180], "maximum": [6, 83, 166, 174, 177, 178], "product": 6, "ntask": [6, 9, 19, 22, 25, 28, 70, 98, 100, 114, 160], "cpus_per_task": [6, 22, 25, 28, 70, 160], "attribut": [6, 27], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 174, 177], "runtim": [6, 14, 27, 98, 101, 115, 116, 123, 140, 141], "min_task": [6, 9, 19, 22, 28, 70, 98, 100, 114, 160], "min_cpus_per_task": [6, 22, 28, 70, 160], "fewest": 6, "least": [6, 160, 162], "fail": [6, 9, 19, 22, 28, 30, 40, 83, 100, 114, 160, 165, 166, 177, 178], "run_test": [6, 160], "run_single_step": 6, "oper": [6, 29, 119, 129, 160, 182], "figur": [6, 160, 166], "cpu": [6, 95, 160, 180], "per": [6, 9, 19, 21, 22, 28, 70, 98, 100, 160, 166, 167, 168, 169, 170, 171, 172, 177, 178], "method": [6, 7, 9, 14, 15, 22, 26, 27, 30, 31, 32, 33, 34, 39, 46, 47, 51, 54, 55, 56, 59, 60, 84, 98, 99, 100, 101, 103, 106, 107, 110, 112, 114, 115, 116, 117, 120, 122, 123, 124, 127, 130, 132, 133, 136, 139, 140, 141, 142, 157, 160, 161], "wa": [6, 40, 82, 83, 95, 109, 111, 113, 121, 126, 131, 160, 161, 162, 163, 166, 174, 180], "retriev": [6, 163], "store": [6, 32, 98, 160, 180], "dure": [6, 14, 22, 30, 98, 101, 115, 116, 123, 140, 141, 160, 161, 166, 180, 181, 182], "txt": [6, 81, 160, 163], "case_output": 6, "individu": [6, 83, 160, 161, 171, 172, 180, 181], "involv": [6, 83, 160, 164], "implement": [6, 157, 158, 161, 177, 178], "termin": [6, 160, 162], "window": 6, "update_cach": 6, "_cached_fil": [6, 160], "map": [6, 7, 15, 54, 55, 103, 162, 166], "origin": [6, 37, 162, 180], "enabl": [6, 160, 163, 166, 172], "consum": [6, 160, 182], "faster": [6, 162], "debug": [6, 91, 92, 93, 94, 96, 167, 168, 169, 170, 172], "parser": [6, 39], "here": [6, 157, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 180, 182], "mpas_tool": [6, 157, 160], "mpasconfigpars": 6, "polarisconfigpars": [6, 22, 30, 40, 68, 69, 71, 72, 144, 146, 147, 148, 152, 153], "certain": [6, 39, 160, 162, 166], "add_from_packag": [6, 161], "content": [6, 77, 79, 90, 160, 161, 180], "found": [6, 85, 161, 162, 165, 167, 168, 169, 170, 171, 172], "make_diagnostics_fil": 6, "makediagnosticsfil": 6, "self": [6, 32, 61, 98, 160, 161, 166], "cfg": [6, 32, 160, 161, 166, 180], "except": [6, 22, 24, 40, 83, 160, 161], "first": [6, 75, 76, 157, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 178, 180], "second": [6, 114, 160, 161, 177], "know": [6, 98, 160, 161, 162], "behavior": [6, 74, 160], "noth": [6, 163, 178], "being": [6, 14, 22, 30, 73, 76, 83, 101, 115, 116, 123, 140, 141, 160, 161, 162, 174], "test_group": [6, 7, 8, 22, 30, 107, 110, 112, 120, 124, 130, 133, 160], "fals": [6, 9, 22, 23, 31, 37, 43, 45, 73, 74, 76, 81, 83, 98, 100, 156, 160, 166, 168, 170, 172, 177], "happen": [6, 83, 160, 178], "class": [6, 7, 9, 17, 22, 26, 30, 34, 39, 46, 47, 54, 59, 84, 98, 99, 100, 106, 107, 110, 112, 114, 117, 120, 122, 124, 127, 130, 132, 133, 136, 139, 142, 154, 157, 158, 160], "larg": [6, 160, 167], "those": [6, 30, 82, 83, 95, 160, 161, 162, 165, 178, 182], "configpars": [6, 70, 160], "getinteg": 6, "getfloat": [6, 160], "getboolean": [6, 160], "getlist": 6, "comma": [6, 178], "integ": 6, "boolean": [6, 149], "etc": [6, 78, 81, 160, 177], "getexpress": 6, "tupl": 6, "rang": 6, "numpi": [6, 48, 55, 56, 61, 98, 105, 144, 145, 160], "linspac": 6, "arang": 6, "arrai": [6, 48, 55, 56, 61, 98, 144, 145, 147, 148, 149, 150], "One": [6, 180, 182], "advantag": [6, 95, 161, 171], "track": [6, 9, 160, 162], "associ": [6, 146, 152, 153, 157, 160, 164], "strategi": 6, "stderr": [6, 22, 30, 160], "loggingcontext": 6, "check_cal": [6, 160], "most": [6, 27, 95, 154, 160, 161, 162, 164, 166, 171, 172, 174, 175, 181], "handl": [6, 160, 171, 178], "won": [6, 161, 166], "logger": [6, 22, 30, 46, 70, 160], "full": [6, 22, 74, 147, 148, 157, 158, 160, 162, 165, 171, 174, 176, 177, 178, 180], "although": 6, "captur": 6, "insid": [6, 160, 161], "good": [6, 22, 160, 162], "idea": 6, "explicit": [6, 161], "go": [6, 160, 161, 162, 172], "even": [6, 23, 39, 95, 160, 161, 162, 166, 171, 180], "import": [6, 160, 161, 162, 164], "subprocess": [6, 22, 70, 73, 160, 161, 163], "produc": [6, 22, 24, 37, 98, 110, 120, 130, 157, 158, 160, 161, 162, 180], "otherwis": [6, 160, 167, 168, 169, 170, 171, 172], "intent": 6, "desir": [6, 83, 98, 160, 166, 180], "trick": [6, 160], "direct": [6, 157, 160, 172, 177], "snippet": 6, "dome": [6, 46, 160, 164, 180, 181], "setup_mesh": [6, 160], "setupmesh": [6, 160], "create_landice_grid_from_generic_mpas_grid": 6, "py": [6, 46, 95, 160, 161, 162, 164, 166], "mpas_grid": [6, 160], "o": [6, 77, 79, 90, 161, 162, 166, 180], "landice_grid": [6, 160], "l": [6, 83, 172], "sever": [6, 160, 161, 162, 164, 165, 180, 182], "lot": [6, 98, 160, 161], "relat": [6, 98, 154, 157, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180], "intern": [6, 9, 30, 160, 162, 163], "lower": [6, 160, 177], "directli": [6, 22, 160, 161, 164, 165, 168], "aren": [6, 160, 161, 162, 177, 178, 182], "readm": [6, 160], "importlib": [6, 160], "resourc": [6, 19, 28, 41, 70, 101, 114, 115, 140, 157, 160, 177], "files_for_e3sm": [6, 160, 166], "str": [6, 7, 9, 10, 11, 12, 13, 16, 22, 23, 24, 30, 34, 37, 40, 42, 43, 47, 54, 59, 63, 65, 70, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87, 89, 90, 100, 105, 107, 114, 122, 137, 139, 142, 145, 160], "did": [6, 83], "add_input_fil": [6, 160], "collect": [6, 34, 99, 160, 164], "though": [6, 22, 160, 161], "whenev": [6, 160], "flexibl": [6, 158, 160, 162], "care": [6, 160, 162], "No": [6, 165], "step_dir": 6, "database_root": [6, 160, 166, 167, 168, 169, 170, 171, 172, 180], "download_path": 6, "join": 6, "bathymetry_databas": [6, 160, 166], "remote_filenam": 6, "bedmachineantarctica_and_gebco_2019_0": 6, "05_degre": 6, "200128": 6, "local_filenam": 6, "topographi": [6, 149, 160, 174, 177, 181], "url": [6, 23, 40, 160, 163, 166], "web": [6, 160, 166], "anl": [6, 160, 166], "gov": [6, 160, 163, 166, 168, 172], "mpas_standalonedata": [6, 166, 171], "dest_path": [6, 40], "remot": [6, 23, 162], "bathymetri": [6, 160, 166], "global": [6, 34, 132, 133, 158, 160, 161, 164, 165, 166, 172, 180, 181], "quasiuniformsphericalmeshstep": [6, 158], "icosahedralmeshstep": [6, 158], "jigsaw": [6, 47, 51, 53, 54, 56, 58, 59, 133, 136, 160], "complex": [6, 55, 160, 161], "build_cell_width_lat_lon": [6, 54], "opt": [6, 59], "make_jigsaw_mesh": [6, 54], "icosahedr": [6, 47, 49, 133, 136, 178], "significantli": [6, 174], "uniform": [6, 54, 139, 157, 158, 160, 166, 177], "smooth": 6, "cell": [6, 47, 48, 49, 50, 54, 55, 56, 61, 98, 100, 101, 115, 137, 140, 146, 147, 148, 149, 152, 153, 157, 160, 174, 177, 178], "quasi": [6, 54, 166], "hand": [6, 161], "restrict": 6, "resolut": [6, 47, 50, 54, 55, 107, 110, 112, 114, 117, 120, 122, 124, 127, 130, 133, 136, 137, 139, 157, 158, 160, 166, 177, 181], "subdivis": [6, 47, 48, 49, 50, 51], "icosahedron": [6, 48, 49, 50, 51], "tabl": [6, 162, 171, 180], "approxim": [6, 47, 49, 50, 54, 98, 101, 115, 140, 162, 177, 178], "width": [6, 47, 48, 49, 54, 55, 56, 61, 177], "km": [6, 47, 48, 49, 50, 54, 55, 56, 61, 107, 110, 112, 114, 117, 120, 122, 124, 127, 130, 139, 157, 158, 166, 177, 178, 181], "5": [6, 49, 98, 124, 157, 160, 161, 163, 166, 177, 180], "240": [6, 49, 158, 166, 178], "6": [6, 49, 160, 175, 180], "120": [6, 49, 160, 178], "7": [6, 49, 172, 178, 180], "60": [6, 49, 158, 160, 174, 178], "8": [6, 49, 157, 160, 162, 166, 177, 178, 180], "30": [6, 49, 160, 172, 177, 178], "9": [6, 49, 180], "15": [6, 49, 157, 160, 177, 178, 180], "10": [6, 49, 154, 157, 160, 166, 171, 174, 177, 181], "11": [6, 49, 180], "3": [6, 49, 157, 160, 162, 163, 166, 171, 172, 174, 177, 178, 180], "12": [6, 49, 168], "13": [6, 49, 177], "94": [6, 49], "spherical_mesh": [6, 55], "cell_width": [6, 47, 48, 49, 50, 54, 55, 56, 61], "icosahedral_method": 6, "jigsaw_mesh_filenam": 6, "msh": 6, "jigsaw_geom_filenam": 6, "geom": 6, "jigsaw_jcfg_filenam": 6, "jig": 6, "jigsaw_hfun_filenam": 6, "spac": 6, "triangles_filenam": 6, "mesh_triangl": 6, "mpas_mesh_filenam": 6, "base_mesh": [6, 47, 54, 160], "plot": [6, 61, 98, 127, 157, 158, 178, 181], "plot_cell_width": 6, "cell_width_filenam": [6, 61], "cellwidthvslatlon": 6, "cell_width_image_filenam": 6, "cellwidthglob": 6, "cell_width_colormap": 6, "3wbgy5": 6, "add_mesh_dens": 6, "vtk": 6, "visual": [6, 136, 160, 164], "convert_to_vtk": 6, "vtk_dir": 6, "base_mesh_vtk": 6, "extract": 6, "lat": [6, 48, 54, 55, 56, 61, 166], "lon": [6, 48, 54, 55, 56, 61, 166], "sphere": [6, 158, 178], "vtk_lat_lon": 6, "descend": [6, 98, 160, 161], "modelstep": [6, 98, 160], "update_pio": [6, 9, 100], "librari": [6, 91, 95, 162, 167, 168, 169, 170, 171, 172, 180], "make_graph": [6, 9, 100], "mpi": [6, 91, 94, 95, 100, 102, 104, 157, 160, 162, 163, 165, 167, 168, 169, 170, 172, 177, 180], "construct": [6, 99, 144, 146, 147, 148, 152, 153, 156, 160], "non": [6, 156, 180], "At": [6, 22, 30, 160], "set_model_resourc": 6, "thread": [6, 9, 19, 22, 27, 28, 30, 70, 100, 114, 130, 157, 160, 164, 166, 168, 172, 177], "openmp_thread": [6, 9, 19, 22, 28, 70, 100, 114, 160], "gpmeti": [6, 166], "divid": [6, 174], "partition_graph": [6, 9, 100], "circumst": 6, "wast": 6, "manual": [6, 30, 31, 160, 181], "update_namelist_pio": 6, "config_pio_num_iotask": [6, 160], "config_pio_strid": [6, 160], "node": [6, 9, 21, 22, 28, 68, 69, 70, 95, 100, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 180], "particularli": [6, 160, 163], "v1": [6, 174], "better": [6, 95, 180], "v2": [6, 166, 174], "littl": [6, 161, 162, 165], "differ": [6, 39, 51, 56, 83, 95, 98, 114, 124, 154, 157, 160, 161, 162, 164, 166, 168, 172, 177, 178], "feel": [6, 160], "safe": [6, 160, 162, 177], "runtime_setup": [6, 19, 28], "onc": [6, 157, 162, 166, 178, 180], "yourself": [6, 171], "simpli": [6, 39, 112, 160, 162, 174, 180, 182], "fact": [6, 22], "culler": 6, "cull": [6, 157, 160], "model_step": [6, 160], "make_graph_fil": [6, 160], "field": [6, 61, 63, 146, 152, 153, 156, 157, 177, 178], "weight": [6, 63, 146, 152, 153, 174], "weight_field": [6, 63], "critic": 6, "compare_vari": [6, 160], "filename1": [6, 83, 160], "filename2": [6, 83], "simpl": [6, 161, 180], "temperatur": [6, 109, 111, 113, 121, 126, 131, 156, 157, 160, 177, 178], "salin": [6, 109, 111, 113, 121, 126, 131, 156, 157, 160, 177, 178], "layerthick": [6, 98, 109, 111, 113, 121, 126, 131, 146, 150, 151, 152, 153, 157, 160], "normalveloc": [6, 111, 113, 121, 126, 131, 156, 157, 160], "prognost": [6, 177], "slightli": [6, 160], "4proc": [6, 111, 177], "8proc": [6, 111, 177], "cannot": [6, 160], "alter": [6, 147, 148, 160, 165, 174, 177, 178], "miss": [6, 160, 166], "skip_if_step_not_run": [6, 83, 160], "forc": [6, 181], "possibli": [6, 160, 162], "failur": 6, "valueerror": [6, 68, 160, 161], "quiet": [6, 74, 83, 86], "report": 6, "threshold": [6, 178], "l1": [6, 83], "00000000000000e": 6, "00": [6, 160, 172, 180], "l2": [6, 83], "l_infin": 6, "linf": [6, 83], "home": [6, 162, 166, 168, 171, 172], "xylar": [6, 166, 171], "test_nightly_latest": 6, "10km": [6, 157, 160, 177, 180, 181, 182], "threads_test": [6, 180, 182], "1thread": [6, 131, 157, 177], "2thread": [6, 131, 177], "test_20210616": 6, "further_valid": 6, "add_output_fil": [6, 160], "disabl": [6, 156, 181], "check_output": [6, 83], "unlik": [6, 160], "zero": [6, 147, 148, 149, 150, 151, 156, 157], "l1_norm": [6, 83], "l2_norm": [6, 83], "linf_norm": [6, 83], "affect": [6, 160, 162], "nonzero": [6, 83], "easiest": [6, 162], "solut": [6, 94, 158, 160, 163], "clobber": 6, "qualit": [6, 160], "error": [6, 22, 30, 98, 137, 158, 160, 162, 165], "judgment": 6, "enough": [6, 157, 160, 161, 177, 178], "problem": [6, 160, 162, 163], "compare_tim": 6, "integr": [6, 124, 157, 160, 161, 177, 178], "rundir1": [6, 82], "92264": 6, "82317": 6, "percent": 6, "781019682649793": 6, "speedup": 6, "1208377370409515": 6, "hous": 7, "seaic": [7, 23, 160, 180], "dict": [7, 10, 12, 13, 15, 22, 30, 34, 65, 66, 72, 76, 77, 84, 85, 86, 103, 160], "kei": [7, 30, 34, 76, 160], "cach": [7, 9, 22, 23, 75, 76, 100, 165, 166, 171, 176, 180, 182], "__init__": [7, 9, 22, 30, 34, 39, 46, 47, 54, 59, 84, 99, 100, 106, 107, 110, 112, 114, 117, 120, 122, 124, 127, 130, 132, 133, 136, 139, 142, 160, 161, 164], "testgroup": [8, 22, 30, 160, 161], "max_memori": [9, 19, 22, 28, 100], "mesh_filenam": [9, 63, 100], "graph_filenam": [9, 63, 100], "graph": [9, 16, 18, 27, 63, 100, 157, 160, 166], "make_yaml": 9, "bool": [9, 10, 14, 22, 23, 30, 31, 37, 40, 42, 43, 73, 74, 75, 76, 81, 83, 86, 100, 101, 114, 115, 116, 123, 133, 136, 140, 141, 160], "pio": [9, 18, 21, 100, 157], "stride": [9, 21, 100], "consist": [9, 21, 100, 154, 162, 166, 177], "partit": [9, 18, 27, 63, 100, 157, 160, 166, 167, 168, 169, 170, 172, 180], "domain": [9, 16, 98, 100, 105, 156, 160, 177, 178, 181], "taken": [9, 100, 158, 160, 172, 180], "model_config_data": 9, "add_yaml_fil": [9, 160], "add_namelist_fil": [9, 98, 160], "add_model_config_opt": [9, 160], "streams_data": 9, "add_streams_fil": [9, 98, 160], "int": [9, 10, 19, 22, 25, 28, 43, 47, 48, 49, 50, 51, 69, 70, 100, 101, 114, 115, 133, 136, 137, 139, 140, 160], "ideal": [9, 19, 22, 28, 70, 98, 100, 114, 160, 161, 165, 166, 181], "too": [9, 19, 22, 28, 70, 100, 160, 161, 177, 178], "accommod": [9, 19, 22, 28, 70, 100], "fewer": [9, 19, 22, 28, 70, 100, 114, 160, 177, 180], "openmp": [9, 19, 22, 28, 70, 91, 93, 94, 100, 114, 160, 167, 168, 169, 170, 172], "amount": [9, 19, 22, 28, 100, 160, 173], "memori": [9, 19, 22, 28, 100, 160, 166], "mb": [9, 19, 22, 28, 100, 166], "placehold": [9, 19, 22, 28, 100, 160, 180], "template_replac": [12, 13, 160], "jinja2": [12, 13, 77, 160], "render": [12, 13, 77, 160], "at_setup": [14, 98, 101, 115, 116, 123, 140, 141], "setup": [14, 19, 22, 28, 30, 98, 101, 115, 116, 123, 140, 141, 157, 161, 162, 164, 165, 166, 178, 180, 181], "overridden": [15, 103, 160], "situat": [15, 103, 180], "diverg": [15, 103], "counterpart": [15, 98, 103], "nest": [15, 84, 86, 103], "graph_fil": 16, "parent": [17, 160], "done": [19, 28, 160, 180], "run_as_subprocess": [22, 160], "condit": [22, 109, 112, 117, 132, 142, 157, 158, 160, 161, 164, 165, 166, 176, 177, 181], "smallest": [22, 160, 164, 174, 181], "unit": [22, 160, 164, 177, 181], "term": [22, 164], "necessarili": [22, 23, 164], "often": [22, 160, 161, 164, 166, 181, 182], "input_data": 22, "combin": [22, 23, 30, 39, 72, 84, 160, 163, 166, 180], "machine_info": 22, "machineinfo": 22, "config_filenam": [22, 30, 160], "base_work_dir": [22, 30, 160], "log": [22, 30, 70, 83, 160, 162, 165, 180], "log_filenam": [22, 30, 160], "redirect": [22, 160], "extern": [22, 154, 160, 175], "turn": [22, 38, 160, 163], "filenam": [23, 24, 67, 83, 85, 87, 160, 162], "database_compon": [23, 160], "work_dir_target": [23, 160], "come": [23, 160, 162, 167, 168, 169, 170, 171, 172, 175], "prefix": [23, 160, 162, 166], "root": [23, 137, 154, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 180], "suffix": [23, 76, 160], "_database_root": 23, "append": 23, "perhap": [24, 160], "available_cor": [25, 102], "constrain": [25, 101, 115, 140, 157], "total": [25, 69, 160, 161, 166, 168, 180], "everi": [26, 157, 160, 161, 163, 164, 177], "child": [26, 160, 161], "reason": [27, 160, 161, 182], "futur": [27, 160, 161, 164, 165, 166, 180, 181], "serial": [27, 160, 165, 180], "subtask": 28, "decomposit": [30, 110, 160, 164, 177], "restart": [30, 120, 122, 157, 160, 161, 164, 177], "stdout_logg": 30, "goe": [30, 160], "regardless": 30, "new_step_log_fil": 30, "whole": [30, 105, 160, 161, 180], "statu": 30, "run_by_default": [31, 160], "assum": [32, 77, 85, 160, 172, 177], "prior": [32, 160], "greenland": [34, 160, 164, 165, 181], "eismint2": 34, "step_path": 37, "variant": [37, 157, 160, 161, 162, 171, 174, 177, 178], "uncach": 37, "datestamp": 37, "yymmdd": [37, 166], "dry": [37, 160], "meta": 39, "proven": [39, 165, 166], "empti": [39, 160, 161, 162, 164], "link_nam": 42, "overwrit": 42, "stackoverflow": 42, "55742015": 42, "7728169": 42, "symbol": [42, 160], "fileexistserror": 42, "unless": [42, 74, 162], "try": [42, 160, 161, 162, 163, 166, 168, 172, 180], "isadirectoryerror": 42, "decomposition_test": [46, 160, 180], "decompositiontest": [46, 160], "noqa": [46, 136, 139, 142], "e501": [46, 136, 139, 142], "turquois": [46, 168], "usr": [46, 168, 180], "climat": [46, 167, 168, 169, 171, 180], "mhoffman": 46, "immedi": [46, 160, 162], "latitud": [48, 55, 178], "longitud": [48, 55, 56, 61, 178], "grid": [48, 55, 61, 98, 144, 145, 146, 147, 148, 149, 152, 153, 157, 160, 166, 177, 178], "ndarrai": [48, 55, 56, 61, 105, 144, 145], "x": [48, 55, 56, 61, 105, 160, 177], "degre": [48, 55, 56, 61, 166, 177], "length": [48, 55, 56, 61], "180": [48, 55, 56, 61, 178], "90": [48, 55, 56, 61, 160, 178], "static": [49, 50], "rule": 49, "thumb": 49, "achiev": [50, 160], "close": [50, 165, 178], "subclass": [51, 54, 55, 56, 60, 98], "jigsawpi": [59, 160], "jigsaw_jig_t": 59, "finish": 60, "meti": 63, "defaults_filenam": 64, "state": [68, 105, 156, 157, 158, 160], "queu": 68, "slurm": [68, 71, 165, 166, 167, 168, 169, 170, 172, 180], "interact": [68, 168, 171, 172, 180], "batch": [68, 168], "job": [68, 95, 162, 165, 167, 168, 169, 170, 172], "slurm_job_id": 68, "substep": 70, "cpus_per_nod": 71, "accordingli": 71, "step_is_subprocess": 73, "is_test_cas": 74, "steps_not_to_run": 74, "progress": 74, "cached_step": 75, "copy_execut": [75, 76, 81, 180], "serv": [75, 76, 81, 160], "_all": [75, 76], "streams_filenam": 77, "lxml": [77, 79, 90], "etre": [77, 79, 90], "xml": [77, 79, 80, 90, 160, 164], "new_child": 78, "children": 78, "sub": 78, "var": [78, 160], "new_tre": 79, "out_filenam": [80, 145], "rundir2": 82, "norm": 83, "infin": 83, "toler": 83, "exclud": [83, 180], "classmethod": 85, "jinja": 85, "namelist_templ": 89, "polarisyaml": [89, 90], "processed_registry_filenam": 90, "registri": [90, 156], "steam": 90, "load_dev_polaris_0": [91, 92, 93, 94, 95, 96], "alpha": [91, 92, 93, 94, 95, 96], "1_anvil_intel_impi": [91, 95], "sh": [91, 92, 93, 94, 95, 96, 162, 163, 167, 168, 169, 170, 172, 180], "openmpi": [91, 95, 162, 165, 167, 169, 170, 180], "mvapich": [91, 95, 167], "impi": [91, 95, 167, 170], "ifort": [91, 93, 95, 167, 169], "ve": [91, 92, 93, 94, 96, 160, 162], "1_anvil_gnu_openmpi": 91, "gfortran": [91, 93, 94, 95, 162, 167, 169], "load": [92, 95, 96, 162, 165, 166, 167, 168, 169, 170, 171, 172], "1_chicoma": 92, "cpu_gnu_mpich": [92, 96], "crai": [92, 95, 96, 168, 172], "1_chrysalis_intel_openmpi": 93, "1_chrysalis_gnu_openmpi": 93, "yet": [94, 98, 160, 161], "again": [94, 154, 160, 162, 163, 180], "soon": [94, 180], "1_compy_intel_impi": 94, "1_compy_gnu_openmpi": 94, "attempt": [95, 165, 171], "particular": [95, 160, 162, 165, 168, 171, 180], "But": [95, 160, 161, 166, 171], "difficult": [95, 160, 171], "activ": [95, 171, 172, 180], "load_polaris_env": [95, 162, 180], "were": [95, 114, 160, 161, 164, 166, 170, 174], "right": [95, 98, 160, 162, 166, 174, 178, 180], "therefor": [95, 160, 164, 178], "gnu": [95, 162, 170, 171, 180], "lib": 95, "intel": [95, 171], "chicoma": [95, 171, 180], "mpich": [95, 162, 165, 168, 172, 180], "compi": [95, 170, 180], "pm": [95, 172, 180], "compymcnodefac": [95, 171], "perlmutt": [95, 168, 171, 180], "pretti": [95, 160, 161, 166], "forg": [95, 165, 180], "linux": [95, 162, 171], "configure_polaris_env": [95, 162, 163], "conda_path": [95, 162], "osx": [95, 171], "clang": [95, 162], "had": 95, "experi": [95, 160, 161, 174], "1_": 95, "1_pm": 96, "ever": [98, 161], "expand": [98, 174], "oceanmodelstep": 98, "decid": 98, "style": [98, 165], "veri": [98, 160, 161, 162], "earli": [98, 175, 180], "stage": [98, 156, 160, 162, 175, 180], "map_yaml_to_namelist": 98, "compute_cell_count": [98, 157], "count": [98, 160], "heurist": 98, "exact": [98, 158, 161], "algorithm": [98, 114, 157, 160], "200": [98, 160, 177], "max": [98, 160, 178], "round": [98, 178], "cell_count": [98, 101, 115, 140], "goal_cells_per_cor": [98, 177, 178], "pinch": 98, "2000": [98, 160, 177], "max_cells_per_cor": [98, 177, 178], "seciton": 98, "control": [98, 160, 166, 177, 178, 180], "scale": [98, 180], "planar": [98, 156], "tri": [98, 161], "apport": 98, "precis": [98, 160], "adjust": [98, 132, 154, 160, 166], "caviti": [98, 161, 166, 174], "frazil": 98, "flux": [98, 156], "grid_1d": 98, "1d": [98, 144, 145, 146, 147, 148, 149, 150, 152, 153], "generate_1d_grid": 98, "vertical_grid": [98, 144, 146, 152, 153, 160, 166, 174, 177], "z": [98, 147, 148, 149, 150, 151, 152, 153, 177, 182], "star": [98, 151, 153, 177, 182], "init_vertical_coord": 98, "minlevelcel": [98, 146, 148, 149, 150, 151, 152, 153], "maxlevelcel": [98, 146, 147, 148, 149, 150, 151, 152, 153, 160], "cellmask": [98, 146, 149, 152, 153], "zmid": [98, 146, 152, 153], "restingthick": [98, 146, 151, 152, 153, 160], "bottomdepth": [98, 146, 147, 149, 150, 151, 152, 153, 160], "entir": [98, 177, 182], "petersen": [98, 162, 177], "et": [98, 174, 177, 178], "al": [98, 174, 177, 178], "2015": [98, 177], "int_": 98, "rho": 98, "left": [98, 174, 178], "dv": 98, "sort": [98, 160, 161, 162], "horizont": [98, 156, 157, 177], "increas": [98, 161], "depth": [98, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 174, 177], "compute_rp": 98, "seri": [98, 127, 158, 160, 176], "csv": 98, "analysi": [98, 157, 160, 161, 164, 165, 166, 178, 181], "dynamic_ntask": 100, "dynam": [100, 132, 154, 160, 166], "estim": [102, 104], "initial_state_file_nam": 105, "output_fil": [105, 160], "rest": [105, 151, 174], "potenti": [105, 124, 160, 177], "energi": [105, 124, 160, 165, 177], "netcdf": [105, 166, 167, 168, 169, 170, 171, 172], "len": [105, 160], "superclass": [107, 157, 160], "baroclinicchannel": [107, 110, 112, 120, 124, 130, 157, 160], "nu": [114, 127, 157, 160], "run_time_step": 114, "resources_fix": 114, "shouldn": 114, "dt": [114, 177, 178], "btr_dt": [114, 177], "barotrop": [114, 177], "viscos": [114, 124, 127, 157, 160, 161, 177], "longer": [120, 157, 160, 177, 178, 182], "shorter": [120, 160], "rpe": [124, 127, 160, 177], "20": [124, 157, 160, 177], "dai": [124, 157, 158, 160, 177, 178], "less": [133, 136, 160, 174], "globalocean": [133, 160], "cosin": [136, 139, 142, 158, 178], "bell": [136, 139, 142, 158, 178], "cosinebel": [136, 139, 142, 158], "mesh_nam": [137, 139, 142], "rmsevalu": 137, "squar": [137, 158], "ncell": [137, 160], "posit": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 174], "layer": [144, 145, 146, 150, 151, 152, 153, 156, 157, 166, 174, 177], "meter": [144, 145], "d": [146, 152, 153, 156, 160], "coordin": [146, 152, 153, 173, 175, 177], "bottom": [146, 147, 148, 149, 150, 151, 152, 153, 156, 166, 174, 177], "thick": [146, 150, 151, 152, 153, 157, 166, 174, 177], "stretch": [146, 152, 153, 174], "elev": [146, 152, 153, 174], "midpoint": [146, 152, 153], "far": [146, 152, 153, 161], "reftopdepth": [146, 149, 150, 152, 153], "down": [146, 147, 148, 149, 150, 151, 152, 153, 174], "ref": [146, 152, 153], "refzmid": [146, 152, 153, 160], "middl": [146, 152, 153], "refbottomdepth": [146, 147, 148, 149, 150, 152, 153, 160], "refinterfac": [146, 152, 153], "nvertlevel": [146, 152, 153, 160, 174], "element": [146, 152, 153], "vertcoordmovementweight": [146, 152, 153, 160], "movement": [146, 152, 153], "consider": [146, 152, 153, 156], "sometim": [146, 152, 153, 160, 164], "dataset": [146, 152, 153, 160], "partial": [147, 148, 174, 177], "seafloor": [147, 149, 150, 151, 174], "unstretch": 151, "shelv": [154, 166, 174], "ssh_adjust": [154, 160, 166], "iter": [154, 166], "compass_branch": 154, "default_input": [154, 160, 166], "ocean_model": [154, 162, 166], "submodul": [154, 160, 162, 180], "latest": [154, 162, 165, 175, 180], "master": 154, "frequent": 154, "guarante": [154, 160, 162], "compat": [154, 162, 163, 165], "verison": 154, "maintain": [154, 180], "recurs": [154, 161, 162, 180], "whichev": [154, 174], "global_converg": [154, 159, 160, 175, 176, 179], "design": [155, 160, 161, 165, 171], "minim": 156, "fcell": [156, 160], "fedg": [156, 160], "fvertex": [156, 160], "period": [156, 157, 160, 177], "free": [156, 166], "slip": 156, "solid": [156, 177, 178], "edg": 156, "tangenti": 156, "enforc": [156, 162], "nonperiod": 156, "vertic": [156, 157, 160, 166, 173, 175, 177], "drag": 156, "mass": 156, "momentum": [156, 157], "scalar": 156, "rigid": 156, "veloc": [156, 157, 160, 162, 178, 180], "normal": [156, 160, 162, 171], "solv": [156, 163, 174], "mid": 156, "vari": [156, 158, 160, 163, 171, 174, 178], "consult": 156, "tidal_forc": 156, "eddi": [157, 177], "addition": [157, 167, 168, 169, 170, 172], "durat": [157, 160], "tracer": [157, 158, 160, 178], "diffus": 157, "baroclinicchanneltestcas": 157, "initialst": [157, 160], "planar_hex": [157, 160], "make_planar_hex_mesh": [157, 160], "y": [157, 160, 172, 177], "50": [157, 160, 177], "along": [157, 160, 165], "constructor": 157, "config_mom_del2": [157, 160], "dynamic_model_config": 157, "prescrib": 157, "runtime_steup": 157, "minut": [157, 160, 177, 182], "decomptest": 157, "end": [157, 160, 161, 162, 164, 168, 178], "restarttest": [157, 160], "frequenc": 157, "threadstest": 157, "thread_test": 157, "rpetest": [157, 160], "intens": 157, "globalconverg": [158, 161], "converg": [158, 160, 165, 178], "studi": [158, 178], "globe": [158, 178], "advect": [158, 178], "qu": [158, 166, 176, 178], "ico": [158, 176, 178], "fix": [158, 160], "spheric": [158, 178], "24": [158, 178], "shape": [158, 178], "blob": 158, "around": [158, 166, 177, 178], "known": [158, 160], "rate": [158, 178], "distribut": 158, "dt_per_km": [158, 177, 178], "rmse": 158, "green": 160, "blue": [160, 167, 180], "orang": 160, "red": 160, "repositori": [160, 165, 180], "laid": 160, "shown": 160, "fig": 160, "among": [160, 162], "organiz": 160, "concept": [160, 161, 164, 181], "encompass": 160, "perspect": 160, "four": 160, "major": 160, "add_test_group": [160, 161], "variou": [160, 162], "univers": 160, "mix": 160, "super": [160, 161], "ice_shelf_2d": [160, 182], "iceshelf2d": 160, "ziso": [160, 174, 181, 182], "landice_model": [160, 162], "conceptu": [160, 161], "realist": [160, 165, 181], "2000m": [160, 180], "nx": [160, 177], "ny": [160, 177], "34": [160, 180], "dc": [160, 177], "halfar": 160, "cism": 160, "dome_typ": 160, "center": [160, 174, 177], "closest": 160, "put_origin_on_a_cel": 160, "hydrologi": 160, "hydro": [160, 181], "dome_viz": 160, "time_slic": 160, "save_imag": 160, "hide": 160, "hide_fig": 160, "add_test_cas": 160, "smoke_test": 160, "smoketest": 160, "restart_test": [160, 180, 182], "mesh_typ": 160, "variable_resolut": [160, 180], "explor": [160, 174], "talk": 160, "complic": [160, 161, 162], "res_param": 160, "16": [160, 166, 180], "10e3": 160, "4km": [160, 177, 180], "40": [160, 170], "126": 160, "4e3": 160, "160": 160, "500": [160, 166, 174], "1e3": 160, "unsupport": 160, "param": 160, "approach": [160, 161, 162, 163, 174], "held": 160, "fundament": 160, "usual": [160, 162, 180], "incorpor": 160, "deprec": 160, "until": [160, 180], "access": [160, 161, 162, 167, 171, 172], "velo_solv": 160, "sia": [160, 162], "fo": 160, "_": [160, 162], "add_step": 160, "runmodel": 160, "run_step": 160, "config_run_dur": 160, "0200": 160, "00_00": 160, "calcul": 160, "signific": 160, "howev": 160, "fine": 160, "recip": 160, "rpe_test": [160, 161, 180], "144": 160, "36": [160, 167, 171, 180], "enumer": 160, "rpe_test_": 160, "_nu_": 160, "deliber": 160, "chosen": 160, "fairli": [160, 161, 162], "demonstr": 160, "uniqu": 160, "clumsi": [160, 161], "rpe_test_1_nu_1": [160, 177], "rpe_test_2_nu_5": [160, 177], "could": [160, 161, 162], "filesfore3sm": 160, "configure_global_ocean": 160, "io": [160, 161, 165, 166, 175], "move": [160, 161], "now": [160, 162, 166, 171], "explain": [160, 161], "with_bgc": 160, "po4": 160, "no3": 160, "sio3": 160, "nh4": 160, "fe": [160, 168], "o2": 160, "dic": 160, "dic_alt_co2": 160, "alk": 160, "dofe": 160, "dop": 160, "dopr": 160, "donr": 160, "zooc": 160, "spchl": 160, "spc": 160, "spfe": 160, "spcaco3": 160, "diatchl": 160, "diatc": 160, "diatf": 160, "diatsi": 160, "diazchl": 160, "diazc": 160, "diazf": 160, "phaeochl": 160, "phaeoc": 160, "phaeof": 160, "dm": 160, "dmsp": 160, "prot": 160, "poli": 160, "lip": 160, "with_ice_shelf_cav": 160, "adjusted_init": 160, "simul": [160, 164, 176, 177, 180], "multiprocess": [160, 161, 166], "outsid": 160, "emploi": 160, "prevent": 160, "unwant": 160, "outer": 160, "inner": 160, "reli": 160, "dome_varres_grid": 160, "question": [160, 166], "neglig": 160, "meshstep": 160, "getint": 160, "mesh_cpus_per_task": 160, "mesh_min_cpus_per_task": 160, "previous": 160, "processor": [160, 177, 178], "readi": [160, 172], "write_netcdf": 160, "convers": 160, "generate_grid": 160, "dsmesh": 160, "nonperiodic_x": 160, "nonperiodic_i": 160, "graphinfofilenam": 160, "use_dist": [160, 177], "gradient_width_dist": [160, 177], "gradient_width_frac": [160, 177], "bottom_temperatur": [160, 177], "surface_temperatur": [160, 177], "temperature_differ": [160, 177], "coriolis_paramet": [160, 177], "bottom_depth": [160, 166, 174, 177], "vert_level": [160, 166, 174, 177], "ones_lik": 160, "xcell": 160, "ycell": 160, "xmin": 160, "min": [160, 177], "xmax": 160, "ymin": 160, "ymax": 160, "ymid": 160, "xperturbmin": 160, "xperturbmax": 160, "perturbationwidth": 160, "yoffset": 160, "sin": [160, 177], "pi": [160, 174, 178], "temp_vert": 160, "frac": [160, 174], "logical_and": 160, "transpos": 160, "3rd": 160, "crest": 160, "wave": [160, 177], "expand_dim": 160, "dim": 160, "axi": 160, "broadcast": 160, "zeros_lik": 160, "xedg": 160, "nedg": 160, "dtype": 160, "xvertex": 160, "commandlin": 160, "best": [160, 162], "harm": 160, "likewis": 160, "subsequ": [160, 164, 182], "arisen": 160, "omit": [160, 180], "problemat": 160, "easier": [160, 161, 162, 166, 180, 182], "broken": [160, 161], "open_dataset": 160, "isn": [160, 161, 177], "forwardstep": 160, "mesh_path": 160, "mesh_step": 160, "initial_state_target": 160, "forcing_data": 160, "entha_analy_result": 160, "mat": 160, "enthalpy_benchmark": 160, "ourselv": 160, "reduc": 160, "firewal": 160, "reus": [160, 161, 166, 180], "bedmachineantarctica_v2_and_gebco_2022_0": 160, "05_degree_20220729": 160, "slate": 160, "icepresent_qu60km_polar": 160, "practic": [160, 161, 162], "nearli": [160, 164, 165], "u": [160, 171, 172], "straightforward": 160, "commonli": [160, 164], "expens": 160, "workflow": [160, 162], "mechan": 160, "notat": 160, "That": [160, 161, 164, 180], "word": 160, "clariti": 160, "ff": 160, "quwisc240": [160, 161, 180, 182], "90c": 160, "91c": 160, "92": [160, 174], "91": 160, "sowisc12to60": [160, 180, 182], "performance_test": [160, 182], "effici": 160, "transfer": 160, "definit": 160, "yml": 160, "themselv": [160, 161, 165], "never": [160, 164], "hierarch": 160, "run_mod": 160, "config_ocean_run_mod": 160, "time_manag": 160, "0024_00": 160, "ale_vertical_grid": 160, "config_vert_coord_mov": 160, "impermeable_interfac": 160, "config_block_decomp_file_prefix": 160, "time_integr": 160, "config_time_integr": 160, "rk4": [160, 161, 182], "filename_templ": 160, "output_interv": 160, "0030_00": 160, "clobber_mod": 160, "truncat": 160, "reference_tim": 160, "0001": 160, "01": 160, "01_00": 160, "xtime": 160, "reflayerthick": 160, "kineticenergycel": 160, "relativevorticitycel": 160, "cosine_bel": 160, "substitut": 160, "config_write_output_on_startup": 160, "0000_00": 160, "config_use_mom_del2": 160, "config_implicit_bottom_drag_coeff": 160, "0e": 160, "config_use_cvmix_background": 160, "config_cvmix_background_diffus": 160, "config_cvmix_background_viscos": 160, "worri": 160, "togeth": [160, 164, 182], "seem": [160, 168, 172], "overkil": 160, "hmix": 160, "beforehand": 160, "update_namelist_at_runtim": 160, "update_yaml_at_runtim": 160, "pio_num_iotask": 160, "pio_strid": 160, "out_nam": 160, "bit": [160, 161, 164, 177, 180], "sophist": 160, "immutable_stream": 160, "var_struct": 160, "var_arrai": 160, "tag": [160, 165], "past": 160, "featur": [160, 161, 162, 164, 166, 177], "synchron": [160, 165], "equival": [160, 162, 167], "treat": [160, 161], "rst": 160, "d_": 160, "restart_interv": 160, "stream_replac": 160, "dynamic_adjust": [160, 166], "qu240dynamicadjust": 160, "interv": 160, "spin": 160, "update_streams_at_runtim": 160, "hour": [160, 168, 172, 180], "datetim": 160, "timedelta": 160, "3600": 160, "planar_converg": 160, "delta": [160, 174], "03d": 160, "02d": 160, "forgotten": 160, "detect": [160, 166, 167, 169, 170, 171, 180], "philosophi": [160, 161], "context": 160, "namesak": 160, "256": [160, 168, 172], "128": [160, 168, 169, 172], "quicker": 160, "32": [160, 180], "exce": 160, "limit": [160, 162], "offer": 160, "benefit": [160, 165], "catch": 160, "bug": 160, "covereag": 160, "timestep": 160, "exhaust": 160, "recent": [160, 175], "merg": 160, "reach": 160, "steadi": 160, "encount": [160, 163], "wet": 160, "initial_condit": 161, "dig": [161, 166], "infrastructur": 161, "background": [161, 178], "behind": 161, "adher": 161, "strictli": 161, "pep8": [161, 162], "bot": [161, 174], "violat": 161, "pleas": [161, 162, 180], "consid": 161, "editor": 161, "pycharm": [161, 162], "spyder": 161, "linter": 161, "flake8": [161, 162], "discourag": 161, "reformat": 161, "autopep8": 161, "undesir": 161, "util": 161, "lint": 161, "standard": [161, 162, 168, 180], "wildcard": 161, "vim": 161, "plugin": 161, "id": [161, 162], "commit": [161, 162], "why": 161, "sound": 161, "subpackag": 161, "understand": [161, 166], "releas": [161, 165, 171, 175, 180], "our": [161, 180], "downstream": 161, "tutori": [161, 162], "clu": 161, "intro": 161, "docstr": [161, 165], "strip": 161, "mpas_ocean": 161, "hidden": 161, "shortcut": [161, 180], "referenc": 161, "ll": [161, 172], "mention": 161, "dot": 161, "charact": 161, "unix": [161, 165], "distinct": 161, "mayb": 161, "machine_config": 161, "endswith": 161, "splitext": 161, "exactli": [161, 162, 174], "renam": 161, "visa": 161, "versa": 161, "comfort": 161, "inherit": 161, "orient": 161, "program": [161, 166], "led": 161, "felt": 161, "contribut": 161, "hesit": 161, "predecessor": [161, 164, 165], "harder": 161, "outcom": 161, "augment": 161, "hope": 161, "dens": 161, "learn": 161, "curv": 161, "worth": 161, "skill": 161, "broadli": 161, "applic": [161, 162], "endeavor": 161, "readabl": 161, "manipul": 161, "get_available_cores_and_nod": 161, "theoret": 161, "dozen": 161, "split": 161, "theori": 161, "biogeochemistri": 161, "bash": [162, 163, 180], "ksh": 162, "mac": [162, 165], "csh": 162, "tcsh": 162, "temporarili": 162, "switch": [162, 166], "bin": [162, 172, 180], "obtain": [162, 168], "recogn": [162, 166, 180], "mambaforg": [162, 171, 180], "permiss": 162, "miniconda3": 162, "unifi": [162, 172], "anyon": 162, "caus": [162, 168, 172, 174], "person": [162, 163], "base_path_to_install_or_update_conda": 162, "with_albani": 162, "with_netlib_lapack": 162, "with_petsc": 162, "flavor": 162, "login": [162, 168, 172], "troubl": 162, "recognit": 162, "trilino": 162, "downsid": 162, "unneed": 162, "laptop": [162, 166], "workstat": 162, "deploy": 162, "shallow": 162, "hpc": [162, 168, 171], "touch": 162, "update_spack": 162, "reinstal": 162, "scorpio": [162, 171, 180], "esmf": [162, 180], "caution": 162, "deploi": [162, 167, 168, 169, 170, 171, 172], "load_": 162, "encod": 162, "load_dev_polaris_": 162, "present": 162, "env_nam": 162, "dev_polaris_": [162, 163], "safest": 162, "rerun": 162, "load_dev_polari": 162, "echo": 162, "rememb": 162, "recreat": [162, 163], "incorrect": 162, "unus": 162, "session": 162, "With": 162, "pip": 162, "substanti": 162, "risk": 162, "rare": 162, "correct": 162, "extra": 162, "wih": 162, "env_onli": 162, "mpas_make_target": [162, 180], "scientif": [162, 180], "_albani": 162, "column": [162, 180], "instruct": 162, "proce": 162, "workdir": [162, 180], "es3m": 162, "compli": 162, "convent": 162, "memor": 162, "guidelin": 162, "stai": 162, "complianc": 162, "checker": 162, "pre": 162, "isort": 162, "mypi": 162, "77": 162, "e302": 162, "blank": 162, "resolv": 162, "simpler": 162, "mkdir": 162, "mark": 162, "fetch": 162, "new_branch_nam": 162, "put": 162, "elsewher": 162, "disk": [162, 166, 168, 172], "respons": 162, "simplest": 162, "your_new_branch": 162, "checkout": 162, "suggest": 163, "geo": 163, "cartopi": 163, "14": 163, "np110py27_4": 163, "calledprocesserror": 163, "deploy_tmp": 163, "spec": [163, 172], "vpn": 163, "occur": 163, "site": 163, "shell": [163, 165], "honor": 163, "wide": 163, "coupl": [163, 165], "profil": 163, "spawn": 163, "usernam": [163, 168, 172], "proxy_en": 163, "export": 163, "all_proxi": 163, "proxyout": 163, "8080": 163, "no_proxi": 163, "localhost": [163, 166, 171, 172, 180], "127": 163, "proxy_dis": 163, "unset": 163, "anytim": 163, "fatal": 163, "mpi_init": 163, "stack": 163, "mpir_init_thread": 163, "159": 163, "mpid_init": 163, "164": 163, "mpidi_ch3_init": 163, "95": 163, "mpid_nem_init": 163, "314": 163, "mpid_nem_tcp_init": 163, "173": 163, "mpid_nem_tcp_get_business_card": 163, "395": 163, "getsockinterfaceaddr": 163, "369": 163, "pn2034311": 163, "errno": 163, "host": [163, 166, 171, 180], "mpirun": [163, 166, 167, 168, 169, 170, 171, 172, 180], "srun": [163, 166, 167, 168, 169, 170, 171, 172, 180], "parallel_execut": [163, 166, 167, 168, 169, 170, 171, 172, 180], "unexpect": 164, "plu": 164, "autom": 165, "exascal": 165, "earth": 165, "kept": 165, "sens": 165, "observ": 165, "region": [165, 166], "boundari": [165, 177, 181], "expert": 165, "team": 165, "launch": 165, "uncoupl": 165, "evolv": [165, 174], "quick": [165, 175, 182], "queue": 165, "beginn": 165, "worktre": 165, "advanc": 165, "mpas_to_yaml": 165, "organ": 165, "troubleshoot": 165, "proxi": 165, "lanl": [165, 166, 168], "gethostbynam": 165, "extens": 166, "single_nod": [166, 167, 168, 169, 170, 171, 172, 180], "multinod": [166, 180], "cores_per_nod": [166, 167, 168, 169, 170, 171, 172, 180], "hopefulli": 166, "explanatori": 166, "my_machin": 166, "fit": 166, "extend": 166, "interpol": 166, "gitconfig": 166, "enter": 166, "author": 166, "asai": 166, "davi": 166, "email": 166, "pull_request": 166, "28": 166, "address": 166, "metadata": 166, "customize_config_pars": 166, "server_base_url": 166, "inej": 166, "check_siz": 166, "ssl": 166, "certif": 166, "core_path": 166, "partition_execut": 166, "dask": 166, "netcdf4": 166, "netcdf4_class": 166, "netcdf3_64bit": 166, "netcdf3_class": 166, "engin": 166, "scipi": 166, "mesh_databas": 166, "initial_condition_databas": 166, "ocean_database_root": 166, "landice_database_root": 166, "mesh_cor": 166, "18": [166, 168], "mesh_min_cor": 166, "usag": [166, 168, 172], "mesh_max_memori": 166, "1000": [166, 174, 177], "mesh_max_disk": 166, "init_cor": 166, "init_min_cor": 166, "init_max_memori": 166, "init_max_disk": 166, "init_thread": 166, "forward_cor": 166, "forward_min_cor": 166, "forward_thread": 166, "forward_max_memori": 166, "forward_max_disk": 166, "add_metadata": 166, "ec": 166, "wc": 166, "mesh_descript": 166, "autodetect": 166, "bathy_descript": 166, "gebco": 166, "2022": 166, "bedmachin": 166, "antarctica": 166, "init_descript": 166, "e3sm_vers": 166, "increment": 166, "mesh_revis": 166, "finest": [166, 178], "min_r": 166, "coarsest": 166, "max_r": 166, "max_depth": 166, "creation_d": 166, "peopl": 166, "contact": 166, "creation": 166, "temperaturemax": 166, "statist": 166, "temperature_max": 166, "33": [166, 180], "diagnost": [166, 167, 168, 170, 171, 172, 180], "enable_ocean_initial_condit": 166, "enable_ocean_graph_partit": 166, "enable_seaice_initial_condit": 166, "scrip": 166, "enable_scrip": 166, "transect": 166, "onlin": 166, "member": 166, "offlin": 166, "enable_diagnostics_fil": 166, "coarser": [166, 178], "finer": 166, "comparisonlatresolut": 166, "comparisonlonresolut": 166, "antarct": 166, "polar": [166, 167, 169, 174], "stereograph": 166, "comparisonantarcticstereowidth": 166, "6000": [166, 174], "comparisonantarcticstereoresolut": 166, "arctic": 166, "comparisonarcticstereowidth": 166, "comparisonarcticstereoresolut": 166, "grid_typ": [166, 174, 177], "tanh_dz": 166, "3000": [166, 178], "min_layer_thick": [166, 174], "max_layer_thick": [166, 174], "retain": 166, "ecosystem": 167, "gain": 167, "confluenc": 167, "public_html": [167, 169, 171], "polaris_env": [167, 168, 169, 170, 171, 172], "soft": [167, 169, 171, 180], "mpi_intel": [167, 169, 170, 171], "mpi_gnu": [167, 168, 169, 170, 171, 172], "hdf5": [167, 168, 169, 170, 171, 172], "fortran": [167, 168, 169, 170, 171, 172], "pnetcdf": [167, 168, 169, 170, 171, 172], "use_e3sm_hdf5_netcdf": [167, 168, 169, 170, 171, 172], "cobalt": [167, 168, 169, 170, 171, 172], "account": [167, 168, 170, 171, 172, 180], "condo": [167, 180], "acm": [167, 180], "medium": 167, "qualiti": [167, 168, 170, 171, 172, 180], "servic": [167, 168, 170, 171, 172, 180], "qo": [167, 168, 170, 171, 172, 180], "acme_high": 167, "load_latest_polaris_intel_impi": [167, 170], "load_latest_polaris_gnu_openmpi": [167, 169, 180], "dst": 168, "calendar": 168, "network": 168, "introduct": 168, "platform": 168, "wtrw": 168, "ch": 168, "lustr": 168, "scratch4": 168, "scratch5": 168, "sacctmgr": 168, "assoc": 168, "cluster": 168, "45": 168, "my": 168, "sshare": 168, "grep": [168, 180], "sreport": 168, "accountutilizationbyus": 168, "2019": 168, "02": 168, "prioriti": 168, "yellow": 168, "chkhome": 168, "petabyt": 168, "df": 168, "bp": 168, "archiv": [168, 172], "hpss": [168, 172], "front": 168, "tn": 168, "storag": 168, "project_nam": 168, "salloc": [168, 171, 172], "account_nam": 168, "gpu": [168, 172], "hyperthread": [168, 172], "hang": [168, 172], "threads_per_cor": [168, 172], "modules_befor": [168, 172], "modules_aft": [168, 172], "shared_clim": [168, 180], "load_latest_polaris_gnu_mpich": [168, 172], "high": [169, 171], "load_latest_polaris_intel_openmpi": 169, "compyf": 170, "app": [170, 180], "pmi2": 170, "conda_env": [170, 180], "sai": 171, "submit": 171, "workload": 171, "sbatch": [171, 180], "squeue": 171, "my_usernam": [171, 172], "scancel": 171, "jobid": 171, "cancel": 171, "emtpi": 171, "probabl": 171, "three": 171, "mpi_mpich": [171, 180], "mpi_openmpi": [171, 180], "nompi": [171, 180], "p1": 172, "nersc": 172, "iri": 172, "filesystem": 172, "myquota": 172, "prjquota": 172, "projectid": 172, "m1795": 172, "hsi": 172, "htar": 172, "zstash": 172, "cf": [172, 180], "cdir": [172, 180], "constraint": [172, 180], "premium": 172, "cray_compil": 172, "8844": 172, "monik": 172, "browser": 172, "port": 172, "realli": 172, "nice": 172, "grab": 172, "logon": 172, "kernel": 172, "connect": 172, "myenv": 172, "ipykernel": 172, "kernelspec": 172, "u1": 172, "Be": 172, "interpret": 172, "argv": 172, "env": 172, "ipykernel_launch": 172, "connection_fil": 172, "display_nam": 172, "languag": 172, "100": 174, "2500": 174, "coord_typ": [174, 177], "partial_cell_typ": [174, 177], "min_pc_fract": [174, 177], "deepest": 174, "stewart": 174, "2017": 174, "z_2": 174, "z_1": 174, "mathrm": 174, "tanh": 174, "rightarrow": 174, "infti": 174, "z_k": 174, "z_0": 174, "z_": 174, "k": 174, "finder": 174, "n_z": 174, "h_": 174, "64": 174, "210": [174, 178], "scienc": 174, "hydrograph": 174, "climatologi": 174, "250": 174, "5500": 174, "renorm": 174, "51": 174, "221": 174, "63": 174, "floor": 174, "adjac": [174, 177], "flat": 174, "collaps": 174, "adcroft": 174, "campin": 174, "2004": 174, "absenc": 174, "squash": 174, "proport": [174, 177, 178], "watercolumn": 174, "press": 174, "depress": 174, "batymetri": 174, "repres": [174, 178], "stair": 174, "still": [175, 180], "month": 175, "year": 175, "websit": 175, "release_6": 175, "ilicak": 177, "2012": 177, "zonal": 177, "northern": 177, "southern": 177, "throughout": 177, "35": [177, 178, 180], "psu": 177, "cooler": 177, "half": 177, "north": 177, "gradient": 177, "halv": 177, "sinusoid": 177, "perturb": [177, 178], "meridion": 177, "warmer": 177, "distinguish": 177, "distanc": 177, "aim": [177, 178], "btr_dt_per_km": 177, "logic": 177, "linear": 177, "08": 177, "500km": 177, "40e3": 177, "water": 177, "corioli": 177, "2e": 177, "hard": 177, "decompos": 177, "goal": 177, "break": 177, "mk": 177, "celsiu": 177, "spuriou": 177, "dissip": 177, "pop": 177, "mom": 177, "mitgcm": 177, "williamson": 178, "1992": 178, "sec": 178, "3a": 178, "skamarock": 178, "gassmann": 178, "flow": 178, "bodi": 178, "rotat": 178, "transport": 178, "psi": 178, "psi_0": 178, "co": 178, "ge": 178, "radiu": 178, "equatori": 178, "u_0": 178, "300": 178, "central": 178, "rad": 178, "lat_cent": 178, "lon_cent": 178, "14159265": 178, "2123666": 178, "6667": 178, "hill": 178, "psi0": 178, "transit": 178, "equat": 178, "vel_pd": 178, "qu_conv_thresh": 178, "warn": 178, "qu_conv_max": 178, "icos_conv_thresh": 178, "icos_conv_max": 178, "480": 178, "150": 178, "nearest": 178, "multipli": 178, "roughli": 178, "alloc": 178, "load_latest_polari": 180, "minu": 180, "create_polaris_load_script": 180, "load_polaris_1": 180, "0_mpich": 180, "wiki": 180, "circular_shelf": 180, "sia_smoke_test": 180, "sia_decomposition_test": 180, "sia_restart_test": 180, "fo_smoke_test": 180, "fo_decomposition_test": 180, "fo_restart_test": 180, "decomp_test": [180, 182], "37": 180, "38": 180, "17": 180, "210131_test_new_branch": 180, "fall": 180, "my_config": 180, "smaller": 180, "previous_workdir": 180, "paper": 180, "recompil": 180, "live": 180, "safer": 180, "preserv": 180, "test_subdir": 180, "whatev": 180, "job_script": 180, "wall": 180, "clock": 180, "accord": 180, "j": 180, "exclus": 180, "job_nam": 180, "wall_tim": 180, "fo_integr": [180, 182], "full_integr": [180, 182], "sia_integr": [180, 182], "cosine_bell_cached_init": [180, 182], "ec30to60": [180, 182], "ecwisc30to60": [180, 182], "qu240_for_e3sm": [180, 182], "quwisc240_for_e3sm": [180, 182], "wc14": [180, 182], "suitenam": 180, "radial": 181, "analyt": 181, "form": 181, "identifi": 181, "analysis_test": 182, "5km": 182, "20km": 182, "with_frazil": 182, "prohibit": 182}, "objects": {"polaris": [[7, 0, 1, "", "Component"], [9, 0, 1, "", "ModelStep"], [22, 0, 1, "", "Step"], [30, 0, 1, "", "TestCase"], [34, 0, 1, "", "TestGroup"]], "polaris.Component": [[7, 1, 1, "", "__init__"], [8, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[9, 1, 1, "", "__init__"], [10, 1, 1, "", "add_model_config_options"], [11, 1, 1, "", "add_namelist_file"], [12, 1, 1, "", "add_streams_file"], [13, 1, 1, "", "add_yaml_file"], [14, 1, 1, "", "dynamic_model_config"], [15, 1, 1, "", "map_yaml_to_namelist"], [16, 1, 1, "", "partition"], [17, 1, 1, "", "process_inputs_and_outputs"], [18, 1, 1, "", "runtime_setup"], [19, 1, 1, "", "set_model_resources"], [20, 1, 1, "", "setup"], [21, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[22, 1, 1, "", "__init__"], [23, 1, 1, "", "add_input_file"], [24, 1, 1, "", "add_output_file"], [25, 1, 1, "", "constrain_resources"], [26, 1, 1, "", "run"], [27, 1, 1, "", "runtime_setup"], [28, 1, 1, "", "set_resources"], [29, 1, 1, "", "setup"]], "polaris.TestCase": [[30, 1, 1, "", "__init__"], [31, 1, 1, "", "add_step"], [32, 1, 1, "", "configure"], [33, 1, 1, "", "validate"]], "polaris.TestGroup": [[34, 1, 1, "", "__init__"], [35, 1, 1, "", "add_test_case"]], "polaris.__main__": [[36, 2, 1, "", "main"]], "polaris.cache": [[37, 2, 1, "", "update_cache"]], "polaris.components": [[38, 2, 1, "", "get_components"]], "polaris.config": [[39, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[39, 1, 1, "", "__init__"]], "polaris.io": [[40, 2, 1, "", "download"], [41, 3, 0, "-", "imp_res"], [42, 2, 1, "", "symlink"]], "polaris.list": [[43, 2, 1, "", "list_cases"], [44, 2, 1, "", "list_machines"], [45, 2, 1, "", "list_suites"]], "polaris.logging": [[46, 2, 1, "", "log_method_call"]], "polaris.mesh": [[47, 0, 1, "", "IcosahedralMeshStep"], [54, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[47, 1, 1, "", "__init__"], [48, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [49, 1, 1, "", "get_cell_width"], [50, 1, 1, "", "get_subdivisions"], [51, 1, 1, "", "make_jigsaw_mesh"], [52, 1, 1, "", "run"], [53, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[54, 1, 1, "", "__init__"], [55, 1, 1, "", "build_cell_width_lat_lon"], [56, 1, 1, "", "make_jigsaw_mesh"], [57, 1, 1, "", "run"], [58, 1, 1, "", "setup"]], "polaris.mesh.spherical": [[59, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[59, 1, 1, "", "__init__"], [60, 1, 1, "", "run"], [61, 1, 1, "", "save_and_plot_cell_width"], [62, 1, 1, "", "setup"]], "polaris.model_step": [[63, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[64, 2, 1, "", "ingest"], [65, 2, 1, "", "parse_replacements"], [66, 2, 1, "", "replace"], [67, 2, 1, "", "write"]], "polaris.ocean": [[99, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[99, 1, 1, "", "__init__"]], "polaris.ocean.model": [[100, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[100, 1, 1, "", "__init__"], [101, 1, 1, "", "compute_cell_count"], [102, 1, 1, "", "constrain_resources"], [103, 1, 1, "", "map_yaml_to_namelist"], [104, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[105, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[106, 0, 1, "", "BaroclinicChannel"], [107, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[106, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[107, 1, 1, "", "__init__"], [108, 1, 1, "", "configure"], [109, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[110, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[110, 1, 1, "", "__init__"], [111, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[112, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[112, 1, 1, "", "__init__"], [113, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[114, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[114, 1, 1, "", "__init__"], [115, 1, 1, "", "compute_cell_count"], [116, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[117, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[117, 1, 1, "", "__init__"], [118, 1, 1, "", "run"], [119, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[120, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[120, 1, 1, "", "__init__"], [121, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[122, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[122, 1, 1, "", "__init__"], [123, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[124, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "configure"], [126, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[127, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "run"], [129, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[130, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[130, 1, 1, "", "__init__"], [131, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence": [[132, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[132, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[133, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[133, 1, 1, "", "__init__"], [134, 1, 1, "", "configure"], [135, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[136, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[136, 1, 1, "", "__init__"], [137, 1, 1, "", "rmse"], [138, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[139, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "compute_cell_count"], [141, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[142, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[144, 2, 1, "", "generate_1d_grid"], [145, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[146, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[147, 2, 1, "", "alter_bottom_depth"], [148, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[149, 2, 1, "", "compute_min_max_level_cell"], [150, 2, 1, "", "compute_z_level_layer_thickness"], [151, 2, 1, "", "compute_z_level_resting_thickness"], [152, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[153, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[68, 2, 1, "", "check_parallel_system"], [69, 2, 1, "", "get_available_cores_and_nodes"], [70, 2, 1, "", "run_command"], [71, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[72, 2, 1, "", "write"]], "polaris.run.serial": [[73, 2, 1, "", "run_single_step"], [74, 2, 1, "", "run_tests"]], "polaris.setup": [[75, 2, 1, "", "setup_case"], [76, 2, 1, "", "setup_cases"]], "polaris.streams": [[77, 2, 1, "", "read"], [78, 2, 1, "", "update_defaults"], [79, 2, 1, "", "update_tree"], [80, 2, 1, "", "write"]], "polaris.suite": [[81, 2, 1, "", "setup_suite"]], "polaris.validate": [[82, 2, 1, "", "compare_timers"], [83, 2, 1, "", "compare_variables"]], "polaris.yaml": [[84, 0, 1, "", "PolarisYaml"], [88, 2, 1, "", "main_mpas_to_yaml"], [89, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [90, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[84, 1, 1, "", "__init__"], [85, 1, 1, "", "read"], [86, 1, 1, "", "update"], [87, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5], "templat": [1, 160], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 6, 98, 160, 162, 167, 168, 169, 170, 171, 172, 177, 178], "same": 1, "implement": 1, "test": [1, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 166, 176, 179, 180, 181, 182], "valid": [1, 2, 6, 33, 82, 83, 109, 111, 113, 121, 126, 131, 135, 160, 180], "api": 2, "refer": [2, 97, 98], "compon": [2, 6, 7, 8, 38, 98, 154, 160, 161, 162, 175, 180], "polari": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 162, 165, 180], "framework": [2, 6, 97, 98, 157, 161, 173], "command": [2, 4], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 43, 44, 45], "setup": [2, 4, 6, 20, 29, 53, 58, 62, 75, 76, 104, 119, 129, 160], "suit": [2, 4, 6, 81, 160, 176, 180, 182], "run": [2, 6, 26, 52, 57, 60, 73, 74, 98, 118, 128, 138, 143, 160, 162, 180], "cach": [2, 4, 6, 37, 160], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 161], "testgroup": [2, 34, 35], "testcas": [2, 30, 31, 32, 33, 160], "step": [2, 22, 23, 24, 25, 26, 27, 28, 29, 160, 178], "modelstep": [2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "config": [2, 6, 39, 98, 160, 166, 167, 168, 169, 170, 171, 172, 177, 178], "io": [2, 6, 40, 41, 42], "log": [2, 6, 46], "mesh": [2, 6, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 158], "model_step": [2, 63], "namelist": [2, 6, 64, 65, 66, 67, 98, 160], "parallel": [2, 68, 69, 70, 71], "proven": [2, 6, 72], "stream": [2, 77, 78, 79, 80, 98, 160], "build": [3, 162, 180], "serial": [4, 6, 73, 74], "docstr": 5, "modul": [6, 161, 162], "clean": 6, "file": [6, 98, 160, 166], "comment": 6, "symlink": [6, 42, 160], "download": [6, 40, 160], "spheric": [6, 59, 60, 61, 62], "model": [6, 98, 100, 101, 102, 103, 104, 155, 160, 180], "an": [6, 98, 160], "e3sm": [6, 98, 160, 162, 180], "partit": [6, 16], "updat": [6, 86, 160, 162], "pio": 6, "make": 6, "graph": 6, "variabl": 6, "norm": 6, "timer": 6, "add_test_group": 8, "add_model_config_opt": 10, "add_namelist_fil": 11, "add_streams_fil": 12, "add_yaml_fil": 13, "dynamic_model_config": [14, 116, 123, 141], "map_yaml_to_namelist": [15, 103], "process_inputs_and_output": 17, "runtime_setup": [18, 27, 160], "set_model_resourc": 19, "update_namelist_pio": 21, "add_input_fil": 23, "add_output_fil": 24, "constrain_resourc": [25, 102, 160], "set_resourc": 28, "add_step": 31, "configur": [32, 108, 125, 134, 160, 163], "add_test_cas": 35, "__main__": 36, "main": 36, "update_cach": 37, "get_compon": 38, "polarisconfigpars": 39, "imp_r": 41, "list_cas": 43, "list_machin": 44, "list_suit": 45, "log_method_cal": 46, "icosahedralmeshstep": [47, 48, 49, 50, 51, 52, 53], "build_subdivisions_cell_width_lat_lon": 48, "get_cell_width": 49, "get_subdivis": 50, "make_jigsaw_mesh": [51, 56], "quasiuniformsphericalmeshstep": [54, 55, 56, 57, 58], "build_cell_width_lat_lon": 55, "sphericalbasestep": [59, 60, 61, 62], "save_and_plot_cell_width": 61, "make_graph_fil": 63, "ingest": 64, "parse_replac": 65, "replac": 66, "write": [67, 72, 80, 87], "check_parallel_system": 68, "get_available_cores_and_nod": 69, "run_command": 70, "set_cores_per_nod": 71, "run_single_step": 73, "run_test": 74, "setup_cas": [75, 76], "read": [77, 85], "update_default": 78, "update_tre": 79, "setup_suit": 81, "compare_tim": 82, "compare_vari": 83, "yaml": [84, 85, 86, 87, 88, 89, 90, 98, 160], "polarisyaml": [84, 85, 86, 87], "main_mpas_to_yaml": 88, "mpas_namelist_and_streams_to_yaml": 89, "yaml_to_mpas_stream": 90, "anvil": [91, 167], "intel": [91, 93, 94, 167, 169, 170], "gnu": [91, 92, 93, 94, 96, 167, 168, 169, 172], "chicoma": [92, 168], "cpu": [92, 96, 168, 172], "chrysali": [93, 169], "compymcnodefac": [94, 170], "machin": [95, 162, 171, 180], "support": [95, 155, 162, 171, 180], "other": [95, 171, 180], "perlmutt": [96, 172], "pm": 96, "ocean": [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 175], "group": [97, 159, 160, 161, 179], "baroclinic_channel": [97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 157, 177], "global_converg": [97, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 158, 178], "cosine_bel": [97, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 158, 176, 178], "oceanmodelstep": [97, 100, 101, 102, 103, 104], "potenti": [97, 98], "energi": [97, 98], "rpe": [97, 98, 105], "vertic": [97, 98, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 174], "coordin": [97, 98, 174], "v": 98, "map": 98, "from": [98, 160, 162, 171], "omega": 98, "mpa": [98, 156], "set": [98, 162, 180], "mpi": [98, 171], "resourc": 98, "rest": 98, "compute_cell_count": [101, 115, 140], "compute_rp": 105, "baroclinicchannel": 106, "baroclinicchanneltestcas": [107, 108, 109], "decomp_test": [110, 111, 157, 177], "decomptest": [110, 111], "default": [112, 113, 157, 177], "forward": [114, 115, 116, 139, 140, 141, 157, 158], "initial_st": [117, 118, 119, 157], "initialst": [117, 118, 119], "restart_test": [120, 121, 122, 123, 157, 177], "restarttest": [120, 121], "restart_step": [122, 123], "restartstep": [122, 123], "rpe_test": [124, 125, 126, 127, 128, 129, 157, 177], "rpetest": [124, 125, 126], "analysi": [127, 128, 129, 136, 137, 138, 158], "threads_test": [130, 131, 157], "threadstest": [130, 131], "globalconverg": 132, "cosinebel": [133, 134, 135], "rmse": 137, "init": [142, 143, 158], "grid_1d": [144, 145], "generate_1d_grid": 144, "write_1d_grid": 145, "init_vertical_coord": 146, "partial_cel": [147, 148], "alter_bottom_depth": 147, "alter_ssh": 148, "zlevel": [149, 150, 151, 152], "compute_min_max_level_cel": 149, "compute_z_level_layer_thick": 150, "compute_z_level_resting_thick": 151, "init_z_level_vertical_coord": 152, "zstar": 153, "init_z_star_vertical_coord": 153, "initi": 156, "condit": 156, "boundari": 156, "forc": 156, "baroclinic_channel_test_cas": 157, "type": [158, 174], "organ": 160, "directori": 160, "structur": 160, "case": [160, 161, 166, 180, 181], "attribut": 160, "constructor": 160, "input": 160, "output": 160, "copi": 160, "ad": 160, "runtim": 160, "pull": 160, "request": 160, "pr": 160, "nightli": 160, "overview": 161, "code": [161, 162], "style": [161, 162], "packag": 161, "share": 161, "within": 161, "quick": [162, 180], "start": [162, 180], "develop": [162, 165], "unix": 162, "shell": 162, "up": [162, 180], "repositori": 162, "beginn": 162, "conda": [162, 163, 171, 180], "environ": [162, 163, 180], "spack": [162, 180], "compil": 162, "system": 162, "albani": 162, "petsc": 162, "netlib": 162, "lapack": 162, "unknown": 162, "what": 162, "script": [162, 180], "doe": 162, "flag": 162, "activ": 162, "troubleshoot": [162, 163], "creat": 162, "onli": 162, "repo": 162, "worktre": 162, "advanc": 162, "user": [162, 165, 166, 180], "solver": 163, "error": 163, "when": 163, "proxi": 163, "lanl": 163, "mac": 163, "gethostbynam": 163, "fail": 163, "glossari": [164, 165], "": 165, "guid": 165, "compass": 165, "A": 166, "slurm": 171, "job": [171, 180], "queue": 171, "mpich": 171, "openmpi": 171, "No": 171, "forg": 171, "jupyt": 172, "notebook": 172, "remot": 172, "data": 172, "1d": 174, "grid": 174, "uniform": 174, "tanh_dz": 174, "60layerphc": 174, "100layere3smv1": 174, "3d": 174, "z": 174, "star": 174, "level": 174, "cosine_bell_cached_init": 176, "thread_test": 177, "resolut": 178, "time": 178, "core": 178, "i": 180, "yet": 180, "load": 180, "standalon": 180}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [160, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [158, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "streams": [[2, "streams"]], "validate": [[2, "validate"], [2, "id2"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"]], "Docstrings": [[5, "docstrings"]], "Framework": [[6, "framework"], [173, "framework"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[6, "config-files"]], "Comments in config files": [[6, "comments-in-config-files"]], "Logging": [[6, "logging"]], "IO": [[6, "io"]], "Symlinks": [[6, "symlinks"]], "Download": [[6, "download"]], "Mesh": [[6, "mesh"]], "Spherical Meshes": [[6, "spherical-meshes"]], "Model": [[6, "model"], [98, "model"]], "Running an E3SM component": [[6, "running-an-e3sm-component"], [98, "running-an-e3sm-component"]], "Partitioning the mesh": [[6, "partitioning-the-mesh"]], "Updating PIO namelist options": [[6, "updating-pio-namelist-options"]], "Making a graph file": [[6, "making-a-graph-file"]], "Validation": [[6, "validation"]], "Validating variables": [[6, "validating-variables"]], "Norms": [[6, "norms"]], "Validating timers": [[6, "validating-timers"]], "Provenance": [[6, "provenance"]], "polaris.Component": [[7, "polaris-component"]], "polaris.Component.add_test_group": [[8, "polaris-component-add-test-group"]], "polaris.ModelStep": [[9, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[10, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[11, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[12, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[13, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[14, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[15, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[16, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[17, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[18, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[19, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[20, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[21, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[22, "polaris-step"]], "polaris.Step.add_input_file": [[23, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[24, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[25, "polaris-step-constrain-resources"]], "polaris.Step.run": [[26, "polaris-step-run"]], "polaris.Step.runtime_setup": [[27, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[28, "polaris-step-set-resources"]], "polaris.Step.setup": [[29, "polaris-step-setup"]], "polaris.TestCase": [[30, "polaris-testcase"]], "polaris.TestCase.add_step": [[31, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[32, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[33, "polaris-testcase-validate"]], "polaris.TestGroup": [[34, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[35, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[36, "polaris-main-main"]], "polaris.cache.update_cache": [[37, "polaris-cache-update-cache"]], "polaris.components.get_components": [[38, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[39, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[40, "polaris-io-download"]], "polaris.io.imp_res": [[41, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[42, "polaris-io-symlink"]], "polaris.list.list_cases": [[43, "polaris-list-list-cases"]], "polaris.list.list_machines": [[44, "polaris-list-list-machines"]], "polaris.list.list_suites": [[45, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[46, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[47, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[48, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[49, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[50, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[51, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[52, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[53, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[54, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[55, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[56, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[57, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[58, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.spherical.SphericalBaseStep": [[59, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[60, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[61, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[62, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[63, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[64, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[65, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[66, "polaris-namelist-replace"]], "polaris.namelist.write": [[67, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[68, "polaris-parallel-check-parallel-system"]], "polaris.parallel.get_available_cores_and_nodes": [[69, "polaris-parallel-get-available-cores-and-nodes"]], "polaris.parallel.run_command": [[70, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[71, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[72, "polaris-provenance-write"]], "polaris.run.serial.run_single_step": [[73, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[74, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[75, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[76, "polaris-setup-setup-cases"]], "polaris.streams.read": [[77, "polaris-streams-read"]], "polaris.streams.update_defaults": [[78, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[79, "polaris-streams-update-tree"]], "polaris.streams.write": [[80, "polaris-streams-write"]], "polaris.suite.setup_suite": [[81, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[82, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[83, "polaris-validate-compare-variables"]], "polaris.yaml.PolarisYaml": [[84, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[85, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[86, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[87, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[88, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[89, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[90, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[91, "anvil"], [167, "anvil"]], "intel": [[91, "intel"], [93, "intel"], [94, "intel"]], "gnu": [[91, "gnu"], [93, "gnu"], [94, "gnu"]], "Chicoma": [[92, "chicoma"], [168, "chicoma"]], "chicoma-cpu, gnu": [[92, "chicoma-cpu-gnu"]], "Chrysalis": [[93, "chrysalis"], [169, "chrysalis"]], "CompyMcNodeFace": [[94, "compymcnodeface"], [170, "compymcnodeface"]], "Machines": [[95, "machines"], [171, "machines"]], "Supported Machines": [[95, "supported-machines"], [171, "supported-machines"]], "Other Machines": [[95, "other-machines"], [171, "other-machines"]], "Perlmutter": [[96, "perlmutter"], [172, "perlmutter"]], "pm-cpu, gnu": [[96, "pm-cpu-gnu"]], "ocean": [[97, "ocean"]], "Test Groups": [[97, "test-groups"], [160, "test-groups"]], "baroclinic_channel": [[97, "baroclinic-channel"], [157, "baroclinic-channel"], [177, "baroclinic-channel"]], "global_convergence": [[97, "global-convergence"], [158, "global-convergence"], [178, "global-convergence"]], "cosine_bell": [[97, "cosine-bell"], [158, "cosine-bell"], [178, "cosine-bell"]], "Ocean Framework": [[97, "ocean-framework"]], "OceanModelStep": [[97, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[97, "reference-potential-energy-rpe"]], "Vertical coordinates": [[97, "vertical-coordinates"]], "Ocean framework": [[98, "ocean-framework"]], "YAML files vs. namelists and streams": [[98, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[98, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[98, "setting-mpi-resources"]], "Model config options and streams": [[98, "model-config-options-and-streams"]], "Vertical coordinate": [[98, "vertical-coordinate"], [174, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[98, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[99, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[100, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[101, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[102, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[103, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[104, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[105, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[106, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[107, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure": [[108, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-configure"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[109, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[110, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[111, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[112, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[113, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[114, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[115, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[116, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[117, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[118, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[119, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[120, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[121, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[122, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[123, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[124, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[125, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[126, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[127, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[128, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[129, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[130, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[131, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[132, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[133, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[134, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[135, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[136, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[137, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[138, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[139, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[140, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[141, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[142, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[143, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[144, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[145, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[146, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[147, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[148, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[149, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[150, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[151, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[152, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[153, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[154, "ocean-component"], [175, "ocean-component"]], "Models": [[155, "models"]], "Supported Models": [[155, "supported-models"]], "MPAS-Ocean": [[156, "mpas-ocean"]], "Initial conditions": [[156, "initial-conditions"]], "Boundary conditions": [[156, "boundary-conditions"]], "Forcing": [[156, "forcing"]], "framework": [[157, "framework"]], "baroclinic_channel_test_case": [[157, "baroclinic-channel-test-case"]], "initial_state": [[157, "initial-state"]], "forward": [[157, "forward"], [158, "forward"]], "default": [[157, "default"], [177, "default"]], "decomp_test": [[157, "decomp-test"], [177, "decomp-test"]], "restart_test": [[157, "restart-test"], [177, "restart-test"]], "threads_test": [[157, "threads-test"]], "rpe_test": [[157, "rpe-test"], [177, "rpe-test"]], "mesh types": [[158, "mesh-types"]], "init": [[158, "init"]], "analysis": [[158, "analysis"]], "Test groups": [[159, "test-groups"], [179, "test-groups"]], "Organization of Tests": [[160, "organization-of-tests"]], "Directory structure": [[160, "directory-structure"]], "Test cases": [[160, "test-cases"]], "TestCase attributes": [[160, "testcase-attributes"]], "constructor": [[160, "constructor"], [160, "dev-step-init"]], "configure()": [[160, "configure"]], "run()": [[160, "run"], [160, "dev-step-run"]], "validate()": [[160, "validate"]], "Steps": [[160, "steps"]], "Step attributes": [[160, "step-attributes"]], "constrain_resources()": [[160, "constrain-resources"]], "setup()": [[160, "setup"]], "runtime_setup()": [[160, "runtime-setup"]], "inputs and outputs": [[160, "inputs-and-outputs"]], "Input files": [[160, "input-files"]], "Symlinks to input files": [[160, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[160, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[160, "downloading-and-symlinking-input-files"]], "Copying input files": [[160, "copying-input-files"]], "Output files": [[160, "output-files"]], "Cached output files": [[160, "cached-output-files"]], "Adding yaml, namelist and streams files": [[160, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[160, "adding-a-yaml-file"]], "Adding a namelist file": [[160, "adding-a-namelist-file"]], "Adding model config options": [[160, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[160, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[160, "adding-a-streams-file"]], "Adding a template streams file": [[160, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[160, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[160, "adding-e3sm-component-as-an-input"]], "Test Suites": [[160, "test-suites"], [180, "test-suites"], [182, "test-suites"]], "Pull-Request (PR) suite": [[160, "pull-request-pr-suite"]], "Nightly suite": [[160, "nightly-suite"]], "Overview": [[161, "overview"]], "Code Style": [[161, "code-style"]], "Packages and Modules": [[161, "packages-and-modules"]], "Packages": [[161, "packages"]], "Modules": [[161, "modules"]], "Classes": [[161, "classes"]], "Code sharing": [[161, "code-sharing"]], "\u2026in the polaris framework": [[161, "in-the-polaris-framework"]], "\u2026within a component": [[161, "within-a-component"]], "\u2026within a test group": [[161, "within-a-test-group"]], "\u2026within a test case": [[161, "within-a-test-case"]], "Quick Start for Developers": [[162, "quick-start-for-developers"]], "Unix Shell": [[162, "unix-shell"]], "Set up a polaris repository: for beginners": [[162, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[162, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[162, "supported-machines"]], "Environments with Albany": [[162, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[162, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[162, "unknown-machines"]], "What the script does": [[162, "what-the-script-does"]], "Optional flags": [[162, "optional-flags"]], "Activating the environment": [[162, "activating-the-environment"]], "Troubleshooting": [[162, "troubleshooting"], [163, "troubleshooting"]], "Creating/updating only the polaris environment": [[162, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[162, "building-e3sm-components"]], "Running polaris from the repo": [[162, "running-polaris-from-the-repo"]], "Code style for polaris": [[162, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[162, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[163, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[163, "proxy-on-lanl-macs"]], "gethostbyname failed": [[163, "gethostbyname-failed"]], "Glossary": [[164, "glossary"], [165, null]], "Polaris": [[165, "polaris"]], "User's guide": [[165, null]], "Developer's guide": [[165, null]], "Compass": [[165, "compass"]], "Config Files": [[166, "config-files"]], "A \u201cuser\u201d config file": [[166, "a-user-config-file"]], "Test-case config files": [[166, "test-case-config-files"]], "config options": [[167, "config-options"], [168, "config-options"], [169, "config-options"], [170, "config-options"], [171, "config-options"], [172, "config-options"], [177, "config-options"], [178, "config-options"]], "Intel on Anvil": [[167, "intel-on-anvil"]], "Gnu on Anvil": [[167, "gnu-on-anvil"]], "Chicoma-CPU": [[168, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[168, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[169, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[169, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[170, "intel-on-compymcnodeface"]], "Slurm job queueing": [[171, "slurm-job-queueing"]], "MPICH": [[171, "mpich"]], "OpenMPI": [[171, "openmpi"]], "No MPI from conda-forge": [[171, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[172, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[172, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[172, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[174, "d-grid-type"]], "uniform": [[174, "uniform"]], "tanh_dz": [[174, "tanh-dz"]], "60layerPHC": [[174, "layerphc"]], "100layerE3SMv1": [[174, "layere3smv1"]], "3D vertical coordinates": [[174, "d-vertical-coordinates"]], "z-star": [[174, "z-star"]], "z-level": [[174, "z-level"]], "Test suites": [[176, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[176, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "thread_test": [[177, "thread-test"]], "resolutions": [[178, "resolutions"]], "time step": [[178, "time-step"]], "cores": [[178, "cores"]], "Quick Start for Users": [[180, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[180, null]], "Loading polaris conda and spack environments": [[180, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[180, "e3sm-supported-machines"]], "Other machines": [[180, "other-machines"]], "Building supported E3SM components as standalone models": [[180, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[180, "setting-up-test-cases"]], "Running a test case": [[180, "running-a-test-case"]], "Running with a job script": [[180, "running-with-a-job-script"]], "Test Cases": [[181, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[7, "polaris.Component"]], "__init__() (polaris.component method)": [[7, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[8, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[9, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[9, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[10, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[11, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[12, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[13, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[14, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[15, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[16, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[17, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[18, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[19, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[20, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[21, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[22, "polaris.Step"]], "__init__() (polaris.step method)": [[22, "polaris.Step.__init__"]], "add_input_file() (polaris.step method)": [[23, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[24, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[25, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[26, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[27, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[28, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[29, "polaris.Step.setup"]], "testcase (class in polaris)": [[30, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[30, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[31, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[32, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[33, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[34, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[34, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[35, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[36, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[37, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[38, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[39, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[39, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[40, "polaris.io.download"]], "module": [[41, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[41, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[42, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[43, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[44, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[45, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[46, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[47, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[47, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[48, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[49, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[50, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[51, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[52, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[53, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[54, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[54, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[55, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[56, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[57, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[58, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[59, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[59, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[60, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[61, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[62, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[63, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[64, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[65, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[66, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[67, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[68, "polaris.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module polaris.parallel)": [[69, "polaris.parallel.get_available_cores_and_nodes"]], "run_command() (in module polaris.parallel)": [[70, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[71, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[72, "polaris.provenance.write"]], "run_single_step() (in module polaris.run.serial)": [[73, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[74, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[75, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[76, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[77, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[78, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[79, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[80, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[81, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[82, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[83, "polaris.validate.compare_variables"]], "polarisyaml (class in polaris.yaml)": [[84, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[84, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[85, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[86, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[87, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[88, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[89, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[90, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[99, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[99, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[100, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[100, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[101, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[102, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[103, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[104, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[105, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[106, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[106, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[107, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[107, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[108, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[109, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[110, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[110, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[111, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[112, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[112, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[113, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[114, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[114, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[115, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[116, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[117, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[117, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[118, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[119, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[120, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[120, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[121, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[122, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[122, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[123, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[124, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[124, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[125, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[126, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[127, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[127, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[128, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[129, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[130, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[130, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[131, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[132, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[132, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[133, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[133, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[134, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[135, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[136, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[136, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[137, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[138, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[139, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[139, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[140, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[141, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[142, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[142, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[143, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[144, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[145, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[146, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[147, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[148, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[149, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[150, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[151, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[152, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[153, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})