Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.check_parallel_system", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/organization/components", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/troubleshooting", "glossary", "index", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/quick_start", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.check_parallel_system.rst", "developers_guide/generated/polaris.parallel.get_available_cores_and_nodes.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/organization/components.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/quick_start.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.check_parallel_system", "polaris.parallel.get_available_cores_and_nodes", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest", "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run", "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest", "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure", "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest", "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "Components", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "Troubleshooting", "Glossary", "Polaris", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "Quick Start for Users", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 21, 22, 23, 86, 95, 99, 126, 133, 182, 183], "date": [1, 4, 46, 166, 179, 183], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 31, 32, 33, 34, 36, 38, 39, 40, 43, 44, 46, 48, 49, 51, 52, 55, 56, 57, 58, 59, 60, 63, 64, 68, 72, 74, 78, 79, 81, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 99, 100, 105, 108, 109, 110, 111, 117, 120, 122, 124, 125, 127, 129, 130, 132, 134, 137, 139, 140, 142, 145, 148, 149, 151, 152, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198], "purpos": [1, 43, 177, 178, 181, 198], "thi": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 18, 23, 24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 55, 56, 57, 60, 61, 63, 64, 65, 66, 68, 69, 77, 79, 81, 83, 91, 92, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 116, 117, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 189, 191, 194, 195, 197, 199], "section": [1, 2, 4, 5, 7, 10, 12, 18, 24, 64, 96, 108, 110, 113, 156, 158, 164, 165, 166, 172, 174, 175, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 191, 195, 197], "i": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 18, 23, 28, 31, 32, 36, 37, 39, 46, 49, 51, 63, 64, 68, 79, 82, 83, 84, 86, 88, 91, 92, 93, 95, 100, 101, 103, 104, 105, 108, 110, 111, 124, 125, 126, 133, 152, 153, 158, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 198, 199], "summar": 1, "what": [1, 9, 105, 178, 189, 197], "capabl": [1, 105, 174, 178, 188, 197], "ad": [1, 4, 5, 7, 8, 9, 14, 32, 38, 41, 48, 92, 117, 129, 139, 158, 164, 165, 174, 176, 177, 179, 182, 184, 185, 186, 187, 189, 197], "polari": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 101, 103, 104, 105, 108, 166, 167, 169, 170, 172, 173, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 198, 199], "through": [1, 85, 178], "process": [1, 6, 12, 26, 79, 100, 174, 178, 179, 181, 182], "It": [1, 4, 12, 31, 36, 169, 174, 175, 176, 177, 178, 179, 181, 183, 188], "should": [1, 4, 5, 7, 10, 12, 14, 19, 24, 32, 38, 39, 41, 49, 64, 84, 85, 92, 93, 101, 102, 103, 104, 105, 106, 108, 113, 129, 139, 166, 172, 174, 175, 176, 177, 179, 180, 183, 194, 197], "clear": [1, 178], "new": [1, 4, 12, 16, 19, 31, 39, 43, 48, 51, 56, 63, 68, 87, 88, 124, 132, 151, 158, 164, 165, 174, 178, 179, 180, 181, 182, 197], "code": [1, 4, 5, 7, 10, 12, 31, 108, 166, 172, 174, 175, 176, 181, 182, 183, 190, 194, 197], "do": [1, 4, 7, 9, 12, 14, 95, 174, 176, 179, 180, 181, 188, 197], "current": [1, 4, 6, 9, 18, 28, 31, 37, 91, 92, 105, 110, 166, 170, 172, 174, 178, 179, 181, 182, 183, 188, 191, 194, 195, 197, 198, 199], "doe": [1, 7, 10, 12, 174, 182, 188], "primari": [1, 4, 7, 199], "challeng": 1, "respect": [1, 6, 7, 12, 108, 174, 178], "softwar": [1, 72, 189, 197], "also": [1, 4, 5, 7, 11, 12, 14, 15, 26, 36, 48, 91, 92, 108, 158, 164, 165, 166, 172, 173, 174, 176, 177, 178, 179, 183, 188, 189, 191, 194, 197, 198], "appropri": [1, 4, 12, 19, 77, 105, 166, 169, 172, 174, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 197], "final": [1, 5, 169, 173, 174, 176], "statement": [1, 10, 174, 181], "contain": [1, 4, 5, 6, 7, 16, 20, 21, 22, 47, 50, 74, 86, 93, 94, 108, 115, 158, 164, 165, 172, 173, 178, 179, 181, 183, 188, 192, 197], "gener": [1, 2, 3, 5, 6, 10, 12, 14, 15, 19, 20, 21, 22, 26, 38, 63, 92, 108, 129, 139, 156, 166, 168, 169, 170, 172, 174, 179, 183, 188, 195, 197], "regard": 1, "success": [1, 49, 166, 172, 183], "last": [1, 175, 179, 195, 197], "modifi": [1, 6, 7, 11, 12, 18, 30, 41, 86, 88, 110, 118, 135, 169, 174, 176, 177, 179, 182, 183, 194, 197], "add": [1, 4, 5, 7, 11, 12, 17, 19, 20, 21, 22, 23, 32, 33, 40, 41, 44, 62, 67, 71, 86, 87, 88, 95, 96, 99, 100, 126, 133, 169, 172, 174, 176, 177, 178, 179, 181, 183, 189, 195], "your": [1, 3, 4, 9, 105, 166, 178, 179, 180, 183, 184, 185, 188, 189, 195, 197], "list": [1, 5, 7, 12, 14, 18, 31, 39, 40, 46, 47, 79, 83, 84, 85, 90, 91, 92, 115, 137, 142, 145, 148, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 188, 189, 195, 197, 198, 199], "appear": [1, 105, 174], "each": [1, 4, 5, 6, 10, 11, 12, 14, 36, 39, 52, 58, 59, 85, 100, 105, 108, 121, 131, 141, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 188, 191, 194, 195, 197, 199], "under": [1, 91, 105, 108, 168, 175, 179, 182, 191, 198], "head": [1, 168, 185], "one": [1, 4, 5, 8, 12, 14, 18, 30, 32, 39, 46, 51, 84, 85, 90, 92, 108, 110, 119, 121, 123, 130, 131, 136, 141, 166, 169, 174, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 191, 195, 197, 198, 199], "correspond": [1, 5, 14, 91, 92, 108, 166, 174, 179], "between": [1, 4, 6, 10, 11, 12, 14, 18, 30, 32, 57, 64, 65, 70, 91, 92, 110, 130, 158, 164, 165, 170, 172, 174, 177, 178, 179, 188, 191, 194], "propos": 1, "discuss": [1, 108, 174, 176, 177, 178, 195], "technic": [1, 5], "issu": [1, 174, 175, 179, 195], "rather": [1, 6, 7, 9, 11, 12, 31, 32, 48, 105, 169, 174, 176, 177, 179, 180, 191], "focu": 1, "model": [1, 4, 8, 18, 19, 23, 24, 26, 31, 32, 84, 85, 90, 94, 99, 101, 102, 103, 104, 105, 106, 120, 124, 126, 130, 132, 133, 134, 140, 153, 166, 169, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194], "To": [1, 4, 10, 14, 92, 105, 108, 166, 174, 178, 179, 184, 185, 186, 187, 188, 189, 191, 195, 197], "extent": [1, 11], "possibl": [1, 6, 9, 59, 108, 168, 174, 175, 178, 191], "rel": [1, 4, 7, 14, 32, 33, 46, 48, 84, 85, 90, 91, 92, 166, 172, 174, 178, 179, 181, 194, 197, 198], "independ": [1, 4, 175, 181], "other": [1, 4, 5, 6, 7, 8, 11, 15, 31, 33, 48, 101, 121, 131, 141, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 198], "thu": [1, 5, 12], "allow": [1, 6, 14, 18, 28, 31, 37, 48, 92, 108, 110, 174, 177, 181, 183, 188, 191, 194, 195, 198], "clean": [1, 174, 176, 179], "plan": [1, 11, 166, 174, 181, 198], "For": [1, 2, 4, 5, 10, 12, 77, 85, 101, 168, 169, 174, 178, 179, 181, 183, 184, 192, 195, 197, 198], "you": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 101, 102, 103, 104, 105, 106, 166, 172, 174, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 194, 195, 197, 198, 199], "can": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 28, 31, 32, 37, 39, 42, 60, 63, 65, 84, 85, 90, 92, 101, 102, 103, 104, 105, 106, 108, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 197, 198, 199], "provid": [1, 2, 4, 6, 7, 12, 14, 15, 32, 91, 92, 95, 108, 119, 121, 123, 131, 136, 141, 166, 169, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 192, 197], "an": [1, 2, 4, 5, 7, 9, 11, 14, 15, 18, 26, 31, 32, 33, 51, 56, 58, 59, 77, 86, 88, 91, 92, 99, 105, 110, 154, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 188, 191, 197, 198, 199], "intend": [1, 6, 7, 175, 183, 198], "meet": 1, "includ": [1, 4, 5, 6, 7, 11, 12, 14, 15, 32, 38, 39, 49, 83, 105, 108, 117, 129, 139, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 193, 194, 195, 197, 198, 199], "detail": [1, 2, 4, 5, 7, 9, 10, 11, 52, 92, 168, 170, 173, 174, 176, 178, 179, 180, 197], "pde": 1, "solver": [1, 176, 179, 182, 197], "similar": [1, 4, 6, 7, 10, 11, 12, 14, 102, 105, 106, 173, 176, 177, 178, 179, 197], "well": [1, 6, 7, 10, 11, 108, 161, 169, 174, 179, 181, 183, 197, 198], "perform": [1, 4, 6, 12, 14, 35, 36, 38, 42, 56, 91, 92, 122, 124, 129, 134, 139, 144, 151, 166, 169, 170, 174, 175, 176, 181, 182, 183, 188, 194, 199], "In": [1, 5, 6, 7, 9, 12, 14, 31, 108, 170, 173, 174, 175, 176, 177, 178, 179, 182, 183, 188, 191, 197, 198, 199], "steer": 1, "awai": 1, "from": [1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 24, 31, 32, 39, 41, 46, 49, 51, 72, 74, 79, 83, 85, 86, 87, 88, 91, 92, 93, 95, 96, 99, 100, 105, 110, 113, 119, 124, 148, 153, 162, 166, 168, 169, 170, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 197, 198, 199], "low": [1, 93], "level": [1, 9, 10, 11, 14, 15, 108, 158, 159, 160, 161, 162, 163, 164, 165, 169, 173, 174, 176, 177, 183, 194, 199], "variabl": [1, 4, 11, 15, 16, 18, 31, 39, 42, 43, 56, 63, 68, 72, 77, 91, 92, 93, 94, 95, 100, 105, 108, 110, 117, 124, 127, 137, 142, 145, 147, 148, 151, 158, 164, 165, 168, 176, 178, 179, 180, 184, 185, 186, 187, 188, 189, 192, 194, 197], "declar": [1, 5], "interfac": [1, 8, 156, 157, 158, 164, 165, 174, 178, 179, 182, 191], "sequenc": [1, 4, 12, 173, 174, 178, 181, 197, 198, 199], "If": [1, 4, 5, 6, 7, 10, 12, 14, 18, 28, 31, 32, 37, 40, 41, 51, 77, 79, 80, 84, 91, 92, 93, 101, 102, 103, 104, 105, 106, 110, 124, 169, 174, 176, 177, 178, 179, 180, 181, 183, 188, 189, 191, 194, 195, 197], "want": [1, 4, 9, 12, 14, 41, 108, 174, 177, 179, 180, 183, 188, 189, 197, 198], "math": 1, "syntax": 1, "almost": [1, 7], "ident": [1, 4, 14, 120, 130, 140, 169, 175, 178, 194], "latex": 1, "b": [1, 4, 179, 181, 197], "2": [1, 11, 12, 14, 140, 168, 169, 173, 175, 179, 183, 185, 188, 191, 194, 195, 197], "2ab": 1, "imag": [1, 5, 15, 93, 177], "keep": [1, 4, 7, 12, 18, 48, 174, 176, 179], "mind": [1, 4], "quit": [1, 173, 174, 176], "small": [1, 7, 36, 174, 177, 184, 185, 190, 191, 197], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 27, 28, 31, 32, 36, 37, 39, 43, 48, 77, 79, 83, 85, 92, 96, 105, 108, 110, 124, 158, 161, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 194, 195, 197, 198, 199], "prefer": [1, 174, 175, 183], "png": [1, 11, 15, 170], "okai": [1, 174], "size": [1, 11, 58, 59, 108, 112, 114, 115, 169, 177, 183, 195], "repo": [1, 4, 166, 182], "exampl": [1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 191, 197, 198, 199], "centric": 1, "pseudo": 1, "link": [1, 5, 9, 12, 32, 51, 105, 174, 177, 179, 188, 192, 197], "actual": [1, 4, 10, 174, 176, 179], "sourc": [1, 5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 179, 183, 184, 185, 186, 187, 188, 189, 197], "project": [1, 4, 5, 55, 166, 178, 179, 183, 184, 185, 188, 197], "manag": [1, 180, 188], "item": 1, "git": [1, 13, 81, 166, 179, 183, 197], "branch": [1, 4, 105, 166, 172, 174, 179, 197], "timelin": 1, "staf": 1, "via": [1, 4, 12, 174, 188], "block": [1, 176], "like": [1, 4, 5, 6, 7, 8, 9, 12, 14, 108, 173, 174, 177, 178, 179, 180, 182, 183, 188, 194, 195, 197, 198], "def": [1, 5, 7, 9, 10, 172, 174, 176, 177, 178], "example_funct": 1, "foo": [1, 178], "return": [1, 5, 24, 47, 49, 57, 58, 59, 64, 74, 78, 85, 86, 88, 95, 99, 100, 108, 111, 113, 115, 125, 149, 152, 156, 159, 160, 161, 162, 163, 178, 195], "0": [1, 4, 5, 11, 12, 14, 58, 92, 101, 102, 103, 104, 105, 106, 108, 158, 163, 164, 165, 168, 174, 177, 178, 180, 183, 185, 188, 191, 192, 194, 195, 197], "how": [1, 4, 10, 12, 63, 108, 173, 174, 176, 178, 183, 188, 189, 194, 195], "show": [1, 5, 11, 174, 188, 189, 194, 195], "we": [1, 4, 5, 7, 9, 11, 12, 14, 77, 104, 105, 108, 114, 169, 173, 174, 176, 177, 178, 179, 183, 185, 187, 188, 189, 191, 197, 199], "have": [1, 3, 4, 5, 7, 9, 10, 12, 14, 24, 77, 84, 85, 90, 104, 105, 108, 113, 148, 166, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199], "met": 1, "which": [1, 4, 5, 6, 7, 11, 12, 14, 15, 21, 22, 24, 32, 43, 47, 84, 85, 86, 90, 92, 93, 95, 108, 113, 120, 130, 140, 166, 168, 172, 173, 174, 176, 177, 178, 179, 183, 185, 188, 191, 194, 195, 197, 198, 199], "regress": [1, 144, 169, 175, 181, 182, 194, 197, 199], "suit": [1, 5, 10, 14, 31, 39, 52, 82, 83, 85, 105, 169, 173, 174, 176, 179, 181, 182, 183, 184, 185, 186, 187, 189, 192], "would": [1, 4, 7, 12, 14, 18, 28, 31, 37, 40, 79, 92, 108, 110, 124, 169, 173, 174, 176, 177, 178, 179, 180, 188, 191, 197], "thei": [1, 4, 5, 6, 10, 11, 12, 14, 32, 41, 48, 63, 83, 96, 108, 166, 169, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 188, 191, 194, 195, 197, 199], "need": [1, 3, 4, 5, 9, 10, 11, 12, 23, 40, 48, 64, 77, 108, 126, 133, 166, 172, 174, 176, 178, 179, 180, 182, 183, 184, 188, 189, 191, 195, 197, 199], "configur": [1, 4, 5, 7, 9, 12, 28, 31, 37, 39, 49, 77, 78, 79, 80, 81, 84, 85, 90, 105, 108, 156, 158, 159, 160, 164, 165, 169, 174, 177, 178, 182, 183, 185, 188, 189, 191, 197, 198], "work": [1, 4, 6, 9, 10, 12, 13, 31, 32, 33, 35, 38, 39, 46, 81, 82, 84, 85, 90, 104, 105, 129, 139, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 188, 195, 197, 198], "properli": [1, 101, 103, 104, 183, 197], "addit": [1, 5, 7, 31, 172, 173, 174, 176, 177, 178, 179], "modif": [1, 5, 174], "nightli": [1, 179, 197, 199], "anoth": [1, 5, 7, 8, 11, 14, 32, 91, 92, 166, 174, 176, 177, 178, 179, 181, 183, 194, 197, 198, 199], "might": [1, 9, 12, 174, 177, 179, 183, 188, 197], "made": [1, 4, 31, 33, 39, 92, 174, 176, 178, 181, 198], "ensur": [1, 7, 12, 48, 169, 178, 179], "continu": [1, 174], "expect": [1, 10, 172, 174, 179], "page": [2, 5, 184], "auto": 2, "summari": [2, 185], "more": [2, 4, 7, 9, 10, 11, 12, 14, 39, 46, 64, 84, 85, 108, 168, 169, 170, 173, 174, 175, 176, 178, 179, 181, 188, 192, 194, 197, 198], "relev": [2, 5, 7, 108, 184, 185, 186, 187, 188, 189, 197], "main": [2, 5, 7, 12, 35, 105, 172, 177, 178, 179, 198], "part": [2, 4, 5, 10, 12, 14, 15, 31, 39, 124, 151, 169, 174, 175, 178, 179, 182, 191], "document": [2, 7, 12, 174, 178, 182, 183, 197], "ocean": [2, 4, 5, 7, 8, 9, 11, 12, 14, 16, 24, 32, 43, 90, 167, 169, 170, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 188, 190, 191, 193, 194, 197, 198, 199], "As": [3, 4, 11, 14, 58, 108, 174, 175, 176, 177, 178, 179, 183, 191, 199], "long": [3, 18, 28, 31, 37, 79, 110, 124, 174, 197], "follow": [3, 4, 5, 11, 12, 15, 55, 105, 158, 164, 165, 166, 168, 169, 174, 175, 176, 179, 180, 183, 188, 189, 191, 193, 195, 197], "procedur": [3, 105, 179, 189], "conda": [3, 4, 13, 81, 101, 103, 104, 105, 166, 172, 178, 182, 183, 184, 185, 186, 187, 189], "environ": [3, 4, 77, 101, 103, 104, 105, 166, 172, 178, 182, 183, 184, 185, 186, 187, 188, 189], "spack": [3, 4, 101, 103, 104, 105, 180, 182, 184, 185, 186, 187, 188, 189], "compil": [3, 4, 12, 101, 102, 103, 104, 105, 106, 180, 182, 184, 185, 186, 187, 188, 189, 197], "system": [3, 4, 18, 28, 31, 37, 77, 79, 80, 101, 103, 104, 105, 110, 124, 174, 180, 182, 183, 184, 185, 186, 187, 188, 189, 197], "modul": [3, 4, 7, 8, 10, 12, 13, 20, 21, 22, 55, 74, 86, 101, 103, 104, 105, 108, 172, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197], "set": [3, 4, 5, 6, 7, 8, 9, 12, 14, 19, 20, 21, 22, 23, 31, 32, 38, 64, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 101, 102, 103, 104, 105, 106, 124, 126, 129, 133, 139, 144, 146, 153, 158, 164, 165, 166, 168, 169, 170, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 199], "up": [3, 4, 5, 6, 8, 9, 12, 14, 19, 20, 21, 22, 31, 38, 39, 69, 81, 84, 85, 90, 91, 92, 101, 102, 103, 104, 105, 106, 108, 129, 139, 144, 166, 169, 170, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 195, 198], "alreadi": [3, 9, 12, 41, 51, 108, 124, 176, 178, 179, 183, 188, 191, 195, 197], "packag": [3, 4, 5, 7, 8, 11, 12, 13, 20, 21, 22, 32, 41, 50, 74, 81, 86, 90, 95, 105, 172, 173, 174, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 197], "avail": [3, 4, 9, 12, 14, 18, 28, 31, 33, 34, 37, 47, 52, 78, 79, 110, 124, 174, 176, 178, 179, 184, 185, 186, 187, 189, 194, 195, 197, 199], "Then": [3, 5, 9, 101, 102, 103, 104, 105, 106, 108, 166, 169, 172, 174, 176, 177, 179, 188, 194, 197], "run": [3, 4, 5, 8, 10, 14, 18, 23, 28, 31, 33, 36, 37, 39, 40, 46, 55, 78, 79, 84, 85, 90, 92, 104, 105, 110, 111, 122, 124, 125, 126, 130, 133, 137, 142, 148, 151, 152, 153, 166, 169, 170, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 198, 199], "script": [3, 4, 10, 15, 45, 102, 105, 106, 178, 181, 182, 185, 188], "doc": [3, 5, 176, 189], "cd": [3, 166, 179, 185, 197], "rm": 3, "rf": 3, "developers_guid": 3, "_build": 3, "make": [3, 4, 9, 10, 14, 18, 27, 32, 48, 57, 58, 60, 72, 92, 101, 102, 103, 104, 105, 106, 110, 114, 120, 130, 140, 158, 164, 165, 166, 169, 174, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 194, 195, 197, 199], "html": [3, 192], "view": [3, 179], "open": [3, 179], "index": [3, 14, 158, 159, 160, 161, 162, 163, 164, 165, 176, 177], "act": [4, 178, 191], "essenti": [4, 12], "4": [4, 5, 11, 12, 14, 120, 122, 169, 174, 176, 183, 188, 194, 195, 197], "These": [4, 6, 12, 14, 16, 31, 108, 166, 168, 172, 174, 176, 178, 179, 182, 183, 188, 197, 198, 199], "user": [4, 5, 6, 7, 9, 12, 14, 31, 39, 40, 48, 81, 92, 105, 108, 169, 174, 175, 176, 177, 180, 181, 185, 188, 189, 192, 194, 195], "describ": [4, 5, 12, 81, 86, 88, 91, 92, 100, 105, 108, 169, 170, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 191, 195, 197], "below": [4, 12, 18, 28, 31, 37, 79, 105, 110, 124, 166, 173, 174, 176, 177, 179, 183, 188, 191, 195, 197], "when": [4, 10, 12, 14, 19, 20, 21, 22, 24, 36, 39, 40, 48, 49, 51, 52, 82, 91, 92, 105, 108, 113, 163, 169, 174, 176, 177, 178, 179, 182, 184, 185, 186, 187, 189, 191, 197, 198], "instal": [4, 179, 188, 189, 197], "abov": [4, 5, 12, 14, 173, 174, 175, 176, 177, 178, 179, 183, 195, 197, 199], "develop": [4, 5, 6, 10, 11, 15, 105, 108, 166, 168, 172, 174, 175, 178, 180, 183, 188, 192, 197], "local": [4, 6, 9, 31, 32, 39, 166, 173, 174, 176, 179, 180, 183, 188, 189, 191], "off": [4, 179, 180], "http": [4, 5, 9, 51, 174, 178, 180, 182, 183, 189, 192, 197], "github": [4, 5, 178, 179, 182, 183, 192, 197], "com": [4, 5, 51, 178, 179, 182, 183, 197], "e3sm": [4, 5, 8, 9, 31, 94, 166, 172, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192], "creat": [4, 6, 9, 10, 11, 12, 13, 16, 18, 31, 32, 36, 39, 43, 51, 56, 57, 63, 64, 68, 84, 85, 90, 94, 105, 108, 117, 120, 122, 124, 127, 130, 132, 134, 137, 140, 142, 145, 148, 151, 154, 158, 164, 165, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 197], "see": [4, 5, 6, 7, 10, 11, 12, 14, 101, 103, 104, 169, 170, 174, 176, 179, 180, 183, 188, 192, 193, 195, 197, 198, 199], "mode": [4, 12, 172, 179, 181, 182, 197], "mean": [4, 14, 77, 149, 170, 179, 191, 194, 199], "chang": [4, 6, 12, 14, 63, 166, 172, 174, 175, 176, 178, 179, 181, 183, 185, 189, 191, 194, 197, 199], "reflect": [4, 179], "call": [4, 6, 8, 9, 10, 11, 12, 14, 15, 18, 26, 31, 36, 39, 40, 41, 55, 82, 105, 108, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 197], "tool": [4, 7, 10, 12, 166, 172, 174, 179, 182, 183], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 23, 24, 28, 31, 32, 36, 37, 39, 46, 49, 64, 72, 75, 77, 79, 82, 92, 93, 94, 95, 100, 101, 105, 108, 110, 111, 112, 113, 114, 124, 125, 126, 133, 145, 148, 152, 156, 158, 159, 160, 164, 165, 166, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199], "test": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 55, 56, 61, 63, 66, 68, 78, 79, 81, 82, 83, 84, 85, 90, 91, 92, 105, 108, 109, 110, 156, 166, 168, 169, 170, 172, 174, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 28, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 52, 56, 61, 63, 66, 68, 78, 79, 81, 82, 83, 84, 85, 86, 90, 91, 92, 105, 108, 109, 110, 116, 117, 118, 120, 122, 124, 127, 128, 129, 130, 132, 134, 135, 137, 138, 139, 140, 142, 143, 145, 146, 148, 150, 151, 154, 156, 166, 168, 169, 170, 172, 173, 174, 175, 177, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 199], "support": [4, 6, 11, 31, 108, 158, 164, 165, 168, 170, 174, 176, 177, 178, 182, 183, 185, 189, 191, 194, 198], "machin": [4, 6, 31, 32, 39, 81, 84, 85, 90, 166, 174, 176, 178, 182, 183, 184, 185, 186, 187, 189], "option": [4, 5, 7, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 37, 39, 40, 41, 46, 48, 49, 51, 52, 56, 62, 63, 64, 67, 68, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 105, 110, 113, 118, 124, 126, 133, 135, 146, 153, 156, 158, 159, 160, 164, 165, 166, 169, 170, 172, 174, 175, 176, 177, 178, 180, 182, 183, 191, 193, 197, 198], "h": [4, 12], "t": [4, 5, 7, 9, 10, 12, 100, 108, 124, 174, 176, 178, 179, 180, 183, 185, 187, 188, 193, 194, 195, 197, 198, 199], "n": [4, 57, 64, 65, 70, 174, 185, 188, 189, 197], "number": [4, 6, 11, 12, 18, 25, 28, 30, 31, 34, 36, 37, 52, 56, 57, 58, 59, 60, 78, 79, 85, 108, 110, 111, 112, 114, 124, 125, 149, 152, 166, 169, 174, 175, 176, 177, 178, 181, 183, 188, 191, 193, 194, 195, 197], "v": [4, 179, 199], "By": [4, 12, 14, 32, 108, 166, 172, 176, 183, 194, 195], "default": [4, 5, 7, 12, 14, 15, 18, 31, 32, 39, 46, 64, 68, 73, 81, 83, 84, 85, 87, 90, 101, 103, 104, 108, 110, 124, 166, 170, 172, 174, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 195, 197, 198, 199], "all": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 31, 37, 39, 47, 79, 81, 84, 85, 108, 109, 110, 117, 124, 158, 164, 165, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 188, 191, 192, 194, 197, 198], "testcas": [4, 6, 9, 14, 18, 31, 44, 56, 63, 68, 84, 85, 91, 92, 110, 124, 127, 132, 137, 142, 155, 174, 178, 183, 194, 197], "example_compact": [4, 166, 172, 183], "1km": [4, 176, 177, 194, 197], "test1": 4, "1": [4, 5, 11, 12, 14, 31, 58, 101, 102, 103, 104, 105, 106, 108, 120, 124, 140, 158, 164, 165, 169, 173, 174, 176, 179, 180, 183, 185, 188, 189, 191, 194, 195, 197], "test2": 4, "displai": [4, 6, 189], "path": [4, 7, 9, 12, 14, 31, 32, 33, 39, 46, 48, 49, 51, 52, 55, 81, 84, 85, 90, 91, 92, 93, 166, 172, 174, 176, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 197, 198], "directori": [4, 6, 9, 10, 12, 13, 14, 15, 31, 32, 33, 38, 39, 46, 51, 81, 82, 84, 85, 90, 91, 92, 105, 129, 139, 166, 169, 172, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 197, 198], "help": [4, 11, 173, 174, 179, 182, 188, 192], "messag": [4, 6, 14, 176, 180, 189], "test_expr": [4, 52], "flag": [4, 174, 178, 180, 181, 183, 192, 194, 197], "suppli": [4, 5, 14, 100, 174, 179], "substr": 4, "regular": [4, 52, 57, 64, 145, 148, 184, 187, 188, 189, 197], "express": [4, 52], "subset": 4, "think": 4, "search": [4, 52, 185], "within": [4, 5, 6, 7, 8, 9, 10, 12, 14, 28, 31, 32, 33, 37, 39, 50, 90, 91, 92, 169, 172, 173, 174, 175, 176, 177, 179, 181, 183, 185, 188], "name": [4, 5, 6, 7, 11, 12, 15, 16, 18, 20, 21, 22, 24, 25, 31, 32, 39, 41, 43, 49, 51, 52, 56, 63, 68, 72, 74, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 99, 108, 110, 113, 115, 117, 124, 132, 149, 151, 154, 157, 172, 174, 176, 177, 178, 179, 181, 183, 189, 194, 197, 199], "singl": [4, 6, 15, 93, 174, 176, 178, 181, 188, 195], "given": [4, 5, 6, 11, 12, 14, 16, 18, 49, 58, 74, 77, 79, 83, 86, 88, 91, 92, 95, 108, 110, 134, 149, 161, 169, 174, 176, 180, 182, 183, 194, 197, 199], "instead": [4, 10, 12, 18, 83, 101, 105, 174, 176, 178, 179, 184, 197, 199], "pass": [4, 6, 10, 11, 12, 14, 39, 92, 172, 174, 176, 177, 178, 179, 181, 197], "similarli": [4, 6, 166, 174, 179, 188, 197], "compon": [4, 5, 6, 7, 8, 11, 18, 31, 32, 39, 43, 54, 81, 90, 94, 110, 116, 124, 144, 151, 173, 174, 175, 176, 177, 181, 182, 183, 188, 190, 193, 198], "result": [4, 11, 14, 49, 59, 91, 92, 105, 108, 120, 130, 137, 140, 142, 169, 170, 174, 175, 178, 179, 181, 183, 194, 195, 199], "verbos": [4, 52, 54, 174, 199], "about": [4, 5, 6, 10, 12, 14, 31, 94, 108, 174, 176, 177, 178, 179, 183, 185, 194], "its": [4, 5, 6, 10, 15, 31, 41, 87, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 195, 197, 198], "descript": [4, 5, 183, 192], "short": [4, 122, 174, 175, 176, 178, 194], "core": [4, 6, 12, 18, 28, 30, 31, 32, 34, 36, 37, 39, 78, 79, 90, 108, 109, 110, 120, 122, 169, 172, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 194, 197, 199], "subdirectori": [4, 6, 11, 18, 31, 32, 39, 52, 56, 63, 68, 110, 124, 169, 173, 174, 176, 178, 197, 198], "step": [4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 28, 39, 40, 46, 56, 61, 63, 66, 68, 69, 78, 79, 81, 82, 83, 84, 85, 92, 108, 110, 111, 115, 117, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 148, 150, 151, 152, 153, 154, 155, 168, 169, 170, 172, 173, 176, 177, 178, 181, 183, 189, 191, 194, 198, 199], "tempat": 4, "subdir": [4, 18, 31, 39, 56, 63, 68, 110, 124, 174, 176], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 5, 7, 10, 11, 12, 14, 39, 82, 92, 166, 172, 174, 176, 177, 181, 182, 192], "must": [4, 5, 9, 12, 14, 18, 21, 22, 31, 33, 35, 90, 93, 108, 110, 168, 174, 176, 177, 179, 191, 198], "built": [4, 12, 84, 85, 90, 166, 172, 179, 182, 183, 188, 197], "execut": [4, 6, 12, 14, 18, 84, 85, 90, 110, 166, 172, 174, 179, 183, 184, 185, 186, 187, 188, 189, 197], "standalon": [4, 12, 104, 172, 179, 181, 182, 188], "mpa": [4, 7, 9, 10, 11, 12, 14, 18, 24, 31, 32, 55, 72, 86, 88, 90, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 113, 144, 145, 157, 166, 167, 169, 170, 172, 173, 174, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 197, 198, 199], "befor": [4, 6, 12, 36, 174, 177, 178, 179, 180, 185, 189, 191, 195, 197], "w": [4, 179, 181, 197], "num": 4, "f": [4, 7, 9, 12, 176, 178, 179, 183, 189, 197], "file": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 36, 38, 39, 41, 46, 49, 51, 55, 71, 72, 73, 74, 81, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 97, 99, 100, 105, 110, 114, 115, 126, 129, 133, 139, 157, 166, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 191, 194, 195, 197, 198], "m": [4, 12, 57, 64, 65, 70, 169, 177, 179, 184, 185, 186, 187, 189, 191, 194, 195, 197], "mach": [4, 31, 184, 185, 186, 187, 188, 189, 197], "p": [4, 179, 183, 197], "suite_nam": [4, 6, 83, 85, 90, 197], "specifi": [4, 12, 14, 15, 32, 168, 174, 179, 183, 189, 195, 197], "either": [4, 5, 6, 10, 11, 12, 58, 108, 166, 174, 179, 181, 183, 191, 197], "onli": [4, 5, 6, 12, 14, 39, 105, 166, 168, 170, 172, 174, 176, 178, 182, 183, 185, 188, 189, 191, 193, 194, 195, 197], "time": [4, 5, 6, 12, 14, 15, 31, 39, 93, 108, 115, 124, 134, 153, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 189, 194, 197, 199], "wai": [4, 5, 11, 12, 31, 60, 65, 105, 108, 174, 176, 177, 178, 179, 180, 182, 188, 191], "altern": [4, 11, 197], "ani": [4, 5, 6, 7, 11, 12, 14, 27, 38, 84, 85, 129, 139, 172, 173, 174, 175, 176, 177, 178, 179, 183, 188, 194, 197], "case_numb": 4, "multipl": [4, 5, 12, 14, 167, 175, 178, 188, 194, 197], "separ": [4, 5, 7, 12, 14, 174, 175, 181, 195, 197], "space": [4, 5, 7, 11, 174, 179, 185, 188, 197], "requir": [4, 6, 12, 18, 28, 31, 37, 110, 124, 166, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 188, 191, 192, 197, 198], "few": [4, 11, 12, 18, 28, 31, 37, 79, 105, 110, 169, 174, 178, 183, 188, 194, 195], "basic": [4, 5, 183, 185, 188, 197], "piec": [4, 172], "inform": [4, 5, 6, 31, 92, 100, 174, 176, 179, 183, 185, 192, 197], "abl": [4, 101, 102, 103, 104, 106, 108, 174, 175, 177, 179, 188, 197], "place": [4, 12, 14, 174, 176, 188, 195], "download": [4, 6, 8, 31, 32, 38, 129, 139, 176, 178, 179, 183, 197, 199], "some": [4, 6, 7, 8, 9, 11, 12, 14, 39, 168, 169, 173, 174, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 191, 192, 197, 198, 199], "data": [4, 8, 11, 14, 19, 32, 86, 88, 89, 93, 94, 100, 105, 158, 164, 165, 174, 179, 182, 183, 184, 185, 186, 187, 188, 197, 198, 199], "locat": [4, 12, 14, 39, 84, 85, 90, 166, 174, 179, 181, 183, 185, 188, 191, 194, 195, 197], "where": [4, 5, 12, 14, 31, 32, 39, 49, 81, 84, 85, 90, 108, 158, 161, 164, 165, 166, 172, 173, 174, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 195, 197, 199], "There": [4, 11, 158, 164, 165, 173, 174, 178, 179, 180, 183, 197], "r": [4, 189, 195], "tell": [4, 179], "re": [4, 174, 178, 179, 181, 183, 188, 189, 195], "leav": [4, 176, 183], "unknown": [4, 105, 178, 188], "component_path": [4, 84, 85, 90, 166, 172, 183, 197], "absolut": [4, 7, 31, 32, 48, 84, 85, 90, 166, 172, 174, 179, 197], "landic": [4, 8, 10, 16, 32, 55, 90, 172, 173, 174, 176, 177, 179, 181, 182, 183, 197, 198, 199], "e3sm_submodul": [4, 166, 172, 179], "mali": [4, 105, 172, 174, 179, 181, 183, 197, 198], "dev": [4, 5, 172, 173, 174, 177, 178, 179, 182, 192, 197], "albani": [4, 101, 103, 104, 105, 172, 183, 184, 185, 186, 189, 197], "depend": [4, 6, 12, 38, 129, 139, 170, 174, 176, 179, 181, 183, 188, 189, 191, 195, 197, 198], "whether": [4, 6, 11, 14, 15, 18, 23, 31, 32, 39, 40, 46, 49, 51, 52, 77, 82, 83, 84, 85, 90, 92, 93, 96, 108, 110, 111, 124, 125, 126, 133, 145, 148, 152, 153, 174, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 191, 194, 197], "omega": [4, 24, 94, 110, 113, 166, 172, 178, 179, 181, 192, 197], "config": [4, 5, 6, 8, 9, 10, 11, 14, 15, 18, 19, 22, 23, 24, 31, 32, 39, 41, 49, 62, 64, 67, 77, 78, 79, 80, 81, 84, 85, 90, 92, 94, 95, 96, 97, 99, 100, 105, 110, 113, 126, 133, 146, 153, 156, 158, 159, 160, 164, 165, 166, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 191, 197, 198], "point": [4, 45, 51, 166, 168, 172, 176, 177, 178, 179, 183, 188, 197], "much": [4, 12, 174], "config_fil": [4, 84, 85, 90], "work_dir": [4, 9, 14, 31, 39, 81, 84, 85, 90, 91, 92, 174, 176], "base": [4, 6, 11, 12, 13, 14, 16, 31, 32, 34, 39, 43, 46, 62, 67, 68, 84, 85, 90, 105, 112, 114, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 191, 198], "": [4, 5, 6, 9, 10, 12, 14, 31, 32, 33, 39, 41, 46, 69, 82, 87, 90, 92, 108, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 197], "recommend": [4, 5, 9, 174, 175, 178, 179, 188, 194], "itself": [4, 5, 7, 31, 172, 173, 176, 177, 179, 197], "temp": 4, "scratch": [4, 179, 185, 189, 197], "avoid": [4, 174], "confus": [4, 12, 178, 179], "output": [4, 5, 6, 8, 10, 11, 12, 14, 16, 18, 31, 33, 38, 39, 46, 71, 72, 79, 83, 92, 108, 110, 115, 129, 139, 148, 157, 169, 176, 181, 183, 189, 197, 199], "compar": [4, 8, 14, 39, 84, 85, 90, 91, 92, 119, 121, 123, 131, 136, 141, 170, 175, 178, 181, 193, 194, 197, 199], "previou": [4, 14, 174, 193, 197, 199], "same": [4, 5, 7, 12, 14, 32, 39, 91, 92, 108, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 197, 198, 199], "baseline_dir": [4, 39, 84, 85, 90], "mani": [4, 6, 7, 108, 173, 174, 176, 178, 179, 181, 182, 194, 195], "valid": [4, 5, 6, 8, 39, 158, 159, 160, 161, 162, 163, 164, 165, 169, 178, 179, 182, 191, 194], "sure": [4, 10, 14, 92, 105, 120, 130, 140, 166, 169, 174, 178, 179, 181, 183, 188, 189, 194, 195], "timer": [4, 39, 42, 91, 175, 176, 178], "ha": [4, 7, 12, 14, 18, 28, 31, 33, 37, 39, 41, 80, 92, 101, 103, 104, 110, 124, 166, 169, 172, 173, 174, 175, 176, 178, 179, 180, 181, 183, 191, 194, 195, 197], "both": [4, 5, 6, 11, 12, 14, 23, 92, 108, 126, 133, 169, 173, 174, 177, 179, 182, 183, 193], "custom": [4, 6, 11, 48, 49, 84, 85, 90, 166, 172, 183, 189, 197], "order": [4, 6, 11, 12, 108, 172, 174, 175, 179, 197], "give": [4, 12, 14, 174, 178, 179, 183, 197], "predefin": 4, "so": [4, 5, 7, 10, 11, 12, 14, 18, 30, 105, 108, 110, 158, 164, 165, 166, 169, 172, 174, 176, 178, 179, 181, 183, 188, 189, 191, 194, 195, 197, 199], "after": [4, 5, 12, 31, 32, 33, 69, 105, 159, 160, 166, 172, 174, 176, 179, 183, 185, 189, 197], "c": [4, 85, 105, 174, 179, 184, 185, 186, 187, 188, 189, 193, 197, 199], "argument": [4, 5, 7, 10, 12, 14, 29, 31, 79, 169, 174, 176, 178, 179, 199], "resid": [4, 32], "test_suit": [4, 174], "build": [4, 8, 11, 12, 60, 65, 101, 102, 103, 104, 105, 106, 166, 170, 172, 176, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189], "mpas_model": [4, 183], "overrid": [4, 11, 12, 35, 36, 38, 41, 42, 48, 60, 63, 64, 65, 108, 129, 139, 174, 176, 178, 183, 189, 194, 197], "mai": [4, 5, 6, 10, 11, 12, 14, 33, 36, 105, 108, 166, 168, 174, 175, 176, 177, 179, 180, 181, 183, 189, 197, 198], "baselin": [4, 6, 8, 14, 39, 84, 85, 90, 91, 92, 119, 121, 123, 131, 136, 141, 147, 169, 175, 178, 181, 193, 197], "comparison": [4, 14, 39, 91, 92, 176, 183], "against": [4, 6, 8, 14, 92, 147, 169, 174, 193], "oppos": [4, 23, 111, 125, 126, 133, 145, 148, 152, 153], "task": [4, 6, 8, 9, 12, 18, 25, 28, 30, 31, 36, 37, 79, 108, 110, 112, 114, 124, 169, 174, 178, 181, 182, 184, 185, 186, 187, 188, 189, 194], "parallel": [4, 18, 28, 31, 36, 37, 110, 174, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 197, 198], "been": [4, 12, 14, 31, 39, 41, 84, 85, 90, 101, 103, 104, 108, 148, 166, 172, 174, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 197], "no_step": 4, "wherea": [4, 10, 174, 193, 198], "typic": [4, 5, 7, 11, 12, 14, 31, 83, 108, 172, 173, 174, 177, 179, 181, 183, 188, 191, 197, 198], "clone": [4, 166, 173, 179, 197], "than": [4, 6, 7, 9, 11, 12, 31, 32, 37, 48, 105, 124, 169, 174, 175, 178, 179, 180, 191, 194, 199], "just": [4, 12, 18, 28, 31, 37, 52, 105, 110, 174, 178, 179, 181, 185, 189], "pickl": [4, 6, 197], "latter": [4, 39, 105], "conveni": [4, 158, 164, 165, 174, 181, 183, 197], "tab": [4, 197], "complet": [4, 6, 20, 21, 22, 197], "explicitli": [4, 5, 14, 108, 169, 174, 183, 197], "select": [4, 6, 93, 174, 179], "two": [4, 8, 130, 169, 170, 172, 174, 175, 177, 178, 179, 194, 198], "edit": [4, 5, 92, 179, 197], "steps_to_run": [4, 14, 39, 83, 92, 174, 176, 183], "test_cas": [4, 6, 7, 18, 31, 43, 44, 56, 63, 68, 81, 84, 85, 91, 92, 110, 124, 127, 132, 137, 142, 148, 151, 154, 174, 176, 183, 197], "initial_st": [4, 5, 15, 117, 168, 170, 174, 176, 178, 183, 194], "full_run": [4, 131, 194], "restart_run": [4, 131, 194], "Or": [4, 183], "accomplish": [4, 178], "thing": [4, 101, 102, 103, 104, 105, 106, 108, 174, 178, 182], "skip": [4, 6, 14, 92, 176, 199], "take": [4, 5, 9, 12, 14, 48, 174, 175, 177, 179, 199], "preced": [4, 48], "over": [4, 7, 12, 48, 174, 178, 182, 191, 194, 197], "special": [4, 181], "databas": [4, 6, 9, 16, 18, 31, 32, 110, 174, 188], "polaris_cach": [4, 6, 16, 174], "symlink": [4, 6, 12, 31, 32, 176, 178, 179], "input": [4, 6, 8, 9, 26, 31, 32, 33, 38, 72, 129, 139, 169], "structur": [4, 11, 24, 113, 176, 182], "without": [4, 14, 32, 174, 178, 179, 183, 187, 188, 197], "redund": [4, 158, 164, 165, 169], "stamp": 4, "revis": [4, 183], "remov": [4, 12, 14, 83, 169], "older": 4, "ones": [4, 158, 164, 165, 178], "version": [4, 13, 26, 48, 81, 91, 92, 166, 169, 172, 173, 174, 177, 178, 179, 182, 183, 188, 189, 192, 194, 197], "A": [4, 5, 6, 9, 11, 12, 16, 19, 21, 22, 24, 31, 32, 39, 43, 47, 48, 52, 56, 57, 60, 63, 64, 65, 68, 74, 79, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 113, 116, 120, 124, 127, 130, 132, 137, 140, 142, 144, 145, 148, 151, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 169, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 194, 195, 197], "aid": 4, "updat": [4, 5, 6, 18, 20, 22, 27, 28, 36, 37, 87, 104, 112, 124, 166, 169, 174, 180, 182, 197], "cached_fil": [4, 16, 174], "json": [4, 6, 16, 46, 174, 189], "anvil": [4, 105, 174, 183, 188, 197], "chrysali": [4, 105, 174, 183, 188, 197], "sinc": [4, 12, 14, 100, 108, 169, 174, 176, 178, 179, 194, 195], "copi": [4, 6, 32, 46, 84, 85, 90, 185, 197], "onto": [4, 179], "lcrc": [4, 6, 9, 46, 174, 178, 183, 184, 186, 188, 197], "server": [4, 6, 32, 46, 174, 178, 183, 189], "whose": [4, 174], "global_ocean": [4, 7, 9, 12, 172, 174, 176, 178, 179, 183, 197, 199], "qu240": [4, 12, 174, 178, 179, 183, 197, 199], "mesh": [4, 8, 18, 31, 72, 93, 108, 110, 111, 112, 114, 122, 125, 127, 145, 148, 149, 151, 152, 154, 158, 164, 165, 168, 169, 173, 174, 176, 177, 178, 179, 181, 182, 183, 191, 193, 194, 195, 197, 199], "phc": [4, 174, 191, 199], "init": [4, 12, 28, 37, 166, 172, 174, 176, 178, 179, 183, 197, 199], "ocean_cached_fil": 4, "pr": [4, 197, 199], "look": [4, 5, 9, 14, 177, 178, 183], "someth": [4, 5, 179], "culled_mesh": [4, 174], "nc": [4, 9, 10, 11, 12, 14, 174, 176, 178], "210803": 4, "culled_graph": [4, 174], "info": [4, 10, 12, 18, 25, 72, 110, 174], "critical_passages_mask_fin": 4, "init_mode_forcing_data": [4, 174], "date_str": [4, 46], "let": [4, 174, 179, 181, 183, 189], "string": [4, 7, 12, 32], "choos": [4, 174, 178, 184, 185, 186, 187, 189, 198], "todai": [4, 46], "dry_run": [4, 46], "saniti": 4, "check": [4, 14, 77, 92, 179, 181, 183, 185, 189, 197, 199], "print": [4, 10, 14, 52, 92, 96, 174, 178, 199], "stdout": [4, 10, 31, 39, 174], "translat": [4, 24, 108, 113], "compass": [4, 55, 166, 174, 178, 181], "convert": [4, 7, 11, 12, 108, 174], "namelist": [4, 5, 6, 8, 18, 19, 20, 23, 24, 26, 27, 30, 38, 84, 85, 90, 99, 100, 110, 113, 114, 126, 129, 133, 139, 166, 169, 170, 172, 174, 176, 177, 178, 182, 183], "stream": [4, 5, 6, 8, 18, 21, 23, 26, 38, 94, 99, 100, 114, 126, 129, 133, 139, 166, 168, 169, 172, 174, 176, 177, 178, 183], "yaml": [4, 8, 18, 19, 22, 23, 24, 110, 113, 114, 126, 133, 169, 174, 182, 185, 189], "e": [4, 5, 9, 12, 24, 31, 41, 43, 55, 94, 105, 108, 113, 166, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 189, 191, 194, 197, 198, 199], "g": [4, 5, 9, 12, 24, 31, 41, 43, 55, 94, 105, 108, 113, 166, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 191, 194, 197, 199], "forward": [4, 5, 12, 14, 31, 115, 122, 123, 132, 134, 136, 166, 172, 174, 176, 178, 183, 194, 195], "becaus": [4, 5, 9, 10, 11, 12, 14, 168, 174, 176, 178, 179, 185, 187, 189, 197], "don": [4, 5, 12, 108, 174, 176, 178, 179, 187, 197, 198], "format": [4, 5, 9, 11, 12, 94, 100, 174, 175, 176, 177, 179, 183, 185], "note": [4, 5, 14, 189], "keyword": [4, 5, 12, 14, 174, 176], "top": [4, 15, 158, 159, 160, 161, 162, 163, 164, 165, 168, 173, 191], "ignor": 4, "get": [4, 5, 7, 9, 10, 12, 18, 19, 20, 21, 22, 31, 39, 40, 47, 58, 78, 82, 105, 108, 110, 173, 174, 176, 177, 178, 179, 181, 183, 191, 197], "pars": [4, 7, 12, 19, 20, 21, 22, 74, 86, 88], "valu": [4, 5, 7, 12, 14, 15, 19, 24, 92, 93, 96, 113, 134, 169, 172, 174, 176, 177, 178, 182, 183, 191, 194], "doesn": [4, 7, 100, 174, 176, 183, 188, 197], "matter": 4, "usabl": 4, "sphinx": 5, "written": [5, 6, 31, 39, 93, 174, 176], "myst": 5, "tip": [5, 179], "easi": [5, 32, 178], "start": [5, 6, 12, 87, 168, 169, 175, 177, 178, 182, 185, 188, 189, 192], "exist": [5, 7, 24, 31, 33, 51, 86, 88, 90, 113, 169, 174, 178, 179, 180, 188, 199], "tree": [5, 86, 88, 100], "group": [5, 7, 12, 16, 17, 31, 39, 43, 44, 47, 116, 117, 120, 122, 124, 130, 134, 137, 140, 142, 144, 145, 166, 169, 170, 172, 173, 174, 176, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199], "pull": [5, 178, 179, 183], "request": [5, 12, 18, 25, 27, 110, 159, 160, 174, 178, 179, 180, 183, 195], "guid": [5, 108, 169, 175, 178, 185, 188, 192], "baroclinic_channel": [5, 12, 14, 166, 171, 172, 174, 176, 177, 178, 181, 192, 196, 197, 198, 199], "label": [5, 188, 197], "prepend": 5, "them": [5, 6, 12, 14, 18, 30, 105, 110, 170, 172, 174, 176, 177, 178, 179, 181, 187, 188, 193, 197, 198], "baroclin": [5, 43, 116, 117, 120, 122, 124, 127, 130, 134, 137, 140, 142, 169, 174, 176, 177, 194], "channel": [5, 43, 116, 117, 120, 122, 124, 127, 130, 134, 137, 140, 142, 169, 174, 176, 180, 194], "And": [5, 12, 179], "becom": [5, 174, 176], "who": [5, 179, 183, 189], "citat": 5, "defin": [5, 6, 7, 11, 12, 13, 31, 39, 63, 84, 85, 90, 105, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 188, 191, 194, 195, 198, 199], "brief": 5, "overview": [5, 182, 185, 189], "comment": [5, 175, 183], "appli": [5, 11, 12, 52, 168, 177], "common": [5, 7, 10, 36, 39, 43, 169, 174, 175, 176, 177, 178, 180, 181, 183, 188, 189, 197, 198, 199], "refer": [5, 12, 31, 115, 134, 158, 161, 164, 165, 174, 176, 178, 179, 181, 182, 191, 194, 197], "awar": [5, 105, 172, 188], "wish": [5, 12, 174, 179, 197, 199], "specif": [5, 7, 12, 41, 105, 166, 172, 173, 177, 182, 183, 185, 188, 197, 199], "share": [5, 15, 108, 117, 166, 169, 172, 173, 174, 176, 177, 179, 182, 184, 185, 186, 187, 188, 189, 190, 194, 197], "function": [5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 38, 57, 64, 105, 108, 117, 129, 139, 174, 176, 177, 178, 182, 195, 198], "public": [5, 9, 174, 183], "api": [5, 10, 182], "underscor": 5, "md": 5, "eval": 5, "rst": [5, 12], "currentmodul": 5, "autosummari": 5, "toctre": 5, "baroclinicchannel": [5, 117, 120, 122, 130, 134, 140, 169, 172, 176], "baroclinicchanneltestcas": [5, 169], "compute_cell_count": [5, 108, 169], "dynamic_model_config": [5, 169], "initialst": [5, 169, 174, 176], "setup": [5, 7, 9, 12, 14, 23, 28, 31, 37, 39, 108, 111, 125, 126, 133, 152, 153, 169, 176, 178, 179, 181, 182, 183, 195, 197, 198], "across": [5, 12, 15, 169, 174, 175, 176, 177, 178, 181, 190, 194], "ot": 5, "automat": [5, 7, 10, 12, 15, 108, 176, 178, 179, 183, 184, 186, 187, 188, 189, 197], "python": [5, 6, 7, 19, 36, 41, 173, 174, 176, 177, 178, 179, 181, 182, 183, 188, 189, 197], "begin": [5, 14, 169, 174, 179, 182, 188, 195], "numpydoc": 5, "text": [5, 6, 195], "restructuredtext": 5, "compute_land_ice_pressure_and_draft": 5, "ssh": [5, 108, 158, 160, 161, 162, 163, 164, 165, 166, 176, 183, 185, 189], "modifysshmask": 5, "ref_dens": 5, "comput": [5, 11, 77, 105, 108, 110, 111, 115, 125, 149, 152, 161, 162, 163, 169, 170, 174, 179, 185, 186, 188, 189, 197], "pressur": [5, 166, 183], "overli": 5, "ic": [5, 108, 166, 178, 179, 182, 183, 185, 191, 198], "shelf": [5, 108, 177, 178, 183, 191], "draft": [5, 191], "paramet": [5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 37, 39, 40, 43, 44, 46, 49, 51, 52, 55, 56, 58, 59, 60, 63, 68, 70, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 108, 110, 111, 113, 115, 117, 120, 122, 124, 125, 126, 127, 130, 132, 133, 134, 137, 140, 142, 145, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 176, 177, 194], "xarrai": [5, 93, 158, 159, 160, 161, 162, 163, 164, 165, 174], "dataarrai": [5, 159, 160, 161, 162, 163, 174], "sea": [5, 108, 160, 161, 162, 163, 166, 183, 191], "surfac": [5, 108, 160, 161, 162, 163, 166, 168, 183, 191, 194], "height": [5, 108, 160, 161, 162, 163, 166, 183, 191], "mask": [5, 158, 161, 164, 165, 174, 183, 191], "landicepressur": [5, 176], "deviat": 5, "float": [5, 7, 12, 19, 56, 58, 59, 63, 92, 93, 117, 120, 122, 124, 127, 130, 134, 137, 140, 149, 174, 176], "densiti": [5, 11, 108], "seawat": 5, "displac": 5, "land": [5, 108, 166, 182, 183, 191, 198], "landicedraft": 5, "equal": [5, 178], "initi": [5, 6, 31, 115, 119, 122, 127, 144, 154, 169, 170, 174, 176, 177, 178, 180, 181, 182, 183, 191, 193, 194, 195, 198], "entri": [5, 45, 75, 84, 85], "alwai": [5, 7, 10, 14, 48, 108, 166, 172, 178, 179, 183], "own": [5, 6, 9, 10, 15, 31, 174, 176, 178, 179, 181, 183, 195, 197, 198], "line": [5, 8, 29, 31, 79, 174, 175, 178, 179, 182, 197], "type": [5, 12, 19, 100, 174, 176, 177, 178, 179, 180, 181, 183, 194, 195, 199], "side": 5, "colon": 5, "doubl": [5, 108, 174, 175], "back": [5, 185, 197], "quot": 5, "interfer": 5, "abil": 5, "find": [5, 49, 59, 80, 166, 178, 179, 180, 183, 197], "arg": [5, 10, 31, 79, 174], "indic": [5, 6, 12, 14, 85, 92, 93, 161, 173, 174, 180, 183, 191, 194], "On": [5, 11, 179, 188], "next": [5, 177, 191, 197], "indent": [5, 174], "obviou": [5, 12], "none": [5, 12, 14, 18, 21, 22, 28, 31, 32, 37, 39, 46, 49, 52, 54, 56, 63, 68, 72, 81, 83, 85, 86, 90, 91, 92, 93, 95, 99, 110, 111, 124, 125, 152, 174, 191, 194], "replac": [5, 7, 12, 19, 20, 21, 22, 23, 24, 39, 51, 74, 86, 95, 96, 113, 126, 133, 176, 178, 183, 197], "els": [5, 6, 174], "true": [5, 7, 11, 12, 14, 15, 18, 40, 49, 51, 92, 93, 96, 101, 102, 103, 104, 106, 108, 110, 168, 174, 176, 177, 179, 183, 184, 185, 186, 187, 188, 189, 197, 198], "further": [5, 176, 177, 189], "necessari": [5, 11, 172], "rais": [5, 7, 14, 31, 33, 49, 51, 77, 92, 108, 174, 176, 177, 178], "list_cas": 6, "list_machin": [6, 178], "list_suit": 6, "anywher": [6, 10, 179], "setup_cas": [6, 7], "object": [6, 10, 20, 21, 22, 74, 86, 91, 92, 94, 95, 99, 100, 172, 176, 177, 178], "later": [6, 14, 18, 28, 31, 37, 48, 92, 110, 174, 183], "contrast": 6, "read": [6, 16, 20, 21, 22, 31, 39, 50, 73, 74, 94, 108, 168, 174, 176], "properti": [6, 12, 168, 174, 188, 195], "clean_cas": 6, "delet": [6, 178, 179, 180, 197], "constant": [6, 56, 63, 64, 108, 168, 194, 195], "setup_suit": 6, "clean_suit": 6, "write": [6, 10, 11, 13, 15, 94, 157, 174, 176, 179], "out": [6, 11, 76, 80, 93, 173, 174, 178, 179, 183, 191, 197], "proven": [6, 8, 48, 182, 183], "save": [6, 15, 49, 70, 169, 174, 176, 177, 188, 193, 194], "dictionari": [6, 7, 12, 16, 19, 21, 22, 24, 39, 43, 48, 74, 81, 85, 86, 92, 94, 95, 96, 113, 174, 176, 177, 178], "target": [6, 9, 18, 32, 51, 105, 108, 110, 169, 174, 176], "minimum": [6, 93, 108, 110, 169, 174, 183, 191, 194, 195], "determin": [6, 11, 12, 32, 36, 39, 77, 100, 108, 114, 169, 170, 174, 177, 191, 194, 195, 197], "maximum": [6, 14, 92, 93, 183, 191, 194, 195], "product": 6, "ntask": [6, 12, 18, 28, 31, 34, 37, 79, 108, 110, 124, 174, 176], "cpus_per_task": [6, 12, 31, 34, 37, 79, 174], "attribut": [6, 10, 11, 12, 14, 36, 177], "quickli": 6, "caveat": 6, "sit": 6, "idl": 6, "fraction": [6, 191, 194], "runtim": [6, 23, 36, 108, 111, 125, 126, 133, 152, 153, 174, 176], "min_task": [6, 12, 18, 28, 31, 37, 79, 108, 110, 124, 174, 176], "min_cpus_per_task": [6, 12, 31, 37, 79, 174], "fewest": 6, "least": [6, 11, 14, 172, 179], "fail": [6, 12, 14, 18, 28, 31, 37, 39, 49, 92, 110, 124, 174, 182, 183, 194, 195], "run_test": [6, 174, 176], "run_single_step": 6, "oper": [6, 38, 129, 139, 174, 176, 199], "log": [6, 8, 14, 31, 39, 79, 92, 93, 174, 176, 179, 182, 197], "figur": [6, 173, 174, 177, 183], "cpu": [6, 12, 105, 174, 197], "per": [6, 12, 18, 28, 30, 31, 37, 79, 108, 110, 174, 183, 184, 185, 186, 187, 188, 189, 194, 195], "method": [6, 7, 11, 12, 16, 18, 23, 24, 31, 35, 36, 39, 40, 41, 42, 43, 48, 55, 56, 60, 63, 64, 65, 68, 69, 94, 108, 109, 110, 111, 113, 116, 117, 120, 122, 124, 125, 126, 127, 130, 132, 133, 134, 137, 140, 142, 144, 145, 148, 151, 152, 153, 154, 169, 172, 174, 176, 178], "wa": [6, 14, 49, 91, 92, 105, 119, 121, 123, 131, 136, 141, 174, 176, 178, 179, 180, 183, 191, 197], "retriev": [6, 180], "store": [6, 14, 41, 108, 174, 176, 197], "dure": [6, 9, 12, 23, 31, 39, 108, 111, 125, 126, 133, 152, 153, 174, 176, 178, 183, 197, 198, 199], "txt": [6, 90, 175, 180], "case_output": [6, 10], "individu": [6, 7, 15, 92, 176, 178, 188, 189, 197, 198], "involv": [6, 12, 14, 92, 174, 176, 181], "implement": [6, 7, 169, 170, 178, 194, 195], "termin": [6, 14, 174, 179], "window": 6, "update_cach": 6, "_cached_fil": [6, 174], "map": [6, 16, 24, 63, 64, 93, 113, 179, 183], "origin": [6, 46, 179, 197], "enabl": [6, 174, 180, 183, 189], "consum": [6, 174, 176, 199], "faster": [6, 179], "debug": [6, 101, 102, 103, 104, 106, 184, 185, 186, 187, 189], "parser": [7, 48], "here": [7, 10, 12, 14, 169, 173, 174, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 197, 199], "mpas_tool": [7, 10, 11, 169, 174], "mpasconfigpars": 7, "polarisconfigpars": [7, 31, 39, 49, 77, 78, 80, 81, 156, 158, 159, 160, 164, 165], "certain": [7, 14, 48, 174, 179, 183], "add_from_packag": [7, 178], "content": [7, 12, 86, 88, 100, 173, 174, 178, 197], "found": [7, 12, 95, 178, 179, 182, 184, 185, 186, 187, 188, 189], "make_diagnostics_fil": 7, "makediagnosticsfil": 7, "self": [7, 9, 10, 12, 41, 70, 108, 172, 174, 176, 177, 178, 183], "cfg": [7, 41, 172, 176, 177, 178, 183, 197], "except": [7, 14, 31, 33, 49, 92, 174, 178], "first": [7, 12, 84, 85, 169, 174, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 195, 197], "second": [7, 11, 12, 124, 174, 178, 194], "know": [7, 9, 11, 108, 174, 178, 179], "behavior": [7, 12, 83, 174, 175, 176], "noth": [7, 180, 195], "being": [7, 23, 31, 39, 82, 85, 92, 111, 125, 126, 133, 152, 153, 174, 176, 177, 178, 179, 191], "test_group": [7, 16, 17, 31, 39, 117, 120, 122, 130, 134, 140, 145, 174, 176, 177], "fals": [7, 11, 12, 14, 18, 31, 32, 40, 46, 52, 54, 82, 83, 85, 90, 92, 93, 108, 110, 168, 174, 176, 177, 183, 185, 187, 189, 194], "happen": [7, 10, 12, 92, 174, 176, 195], "class": [7, 9, 11, 12, 16, 18, 26, 31, 35, 39, 43, 48, 55, 56, 63, 68, 94, 108, 109, 110, 116, 117, 120, 122, 124, 127, 130, 132, 134, 137, 140, 142, 144, 145, 148, 151, 154, 166, 169, 170, 172, 174, 176, 177], "larg": [7, 14, 174, 176, 184], "those": [7, 12, 14, 39, 91, 92, 105, 176, 177, 178, 179, 182, 195, 199], "configpars": [7, 79, 177], "getinteg": 7, "getfloat": [7, 10, 12, 174], "getboolean": [7, 174], "getlist": 7, "comma": [7, 195], "integ": [7, 11], "boolean": [7, 93, 161], "etc": [7, 12, 87, 90, 172, 174, 176, 194], "getexpress": 7, "tupl": 7, "rang": [7, 93], "numpi": [7, 11, 57, 64, 65, 70, 108, 115, 156, 157, 174], "linspac": 7, "arang": 7, "arrai": [7, 57, 64, 65, 70, 108, 156, 157, 159, 160, 161, 162], "One": [7, 11, 197, 199], "advantag": [7, 12, 105, 178, 188], "track": [7, 18, 174, 176, 179], "associ": [7, 11, 12, 15, 158, 164, 165, 169, 176, 177, 181], "belong": [8, 10, 12, 18, 28, 31, 37, 39, 43, 56, 63, 68, 110, 116, 117, 120, 122, 124, 127, 130, 132, 134, 137, 140, 142, 144, 145, 148, 151, 154, 172, 174, 176, 177, 178, 199], "command": [8, 13, 29, 31, 36, 79, 81, 174, 178, 179, 181, 182, 185, 188, 189, 197], "while": [8, 15, 168, 169, 174, 177, 180, 181, 194], "meant": [8, 178, 183], "simplifi": 8, "verifi": [8, 175, 183], "io": [8, 174, 176, 178, 182, 183, 192], "visual": [8, 11, 148, 174, 176, 177, 181, 182], "lot": [9, 108, 174, 178], "o": [9, 10, 86, 88, 100, 178, 179, 183, 197], "relat": [9, 11, 12, 108, 166, 169, 174, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 197], "handl": [9, 10, 176, 188, 195], "intern": [9, 18, 39, 174, 179, 180], "lower": [9, 176, 194], "directli": [9, 11, 12, 31, 173, 174, 178, 181, 182, 185], "aren": [9, 174, 178, 179, 194, 195, 199], "readm": [9, 176], "importlib": [9, 176], "resourc": [9, 12, 28, 37, 50, 79, 111, 124, 125, 152, 169, 174, 176, 194], "import": [9, 10, 11, 12, 172, 174, 176, 177, 178, 179, 181], "files_for_e3sm": [9, 176, 183], "str": [9, 12, 16, 18, 19, 20, 21, 22, 25, 31, 32, 33, 39, 43, 46, 49, 51, 52, 56, 63, 68, 72, 74, 79, 81, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 99, 100, 110, 115, 117, 124, 132, 149, 151, 154, 157, 174, 176, 177], "did": [9, 14, 92], "add_input_fil": [9, 174, 176], "collect": [9, 43, 109, 172, 173, 181], "though": [9, 31, 176, 178], "whenev": [9, 174], "flexibl": [9, 170, 176, 179], "care": [9, 174, 177, 179], "No": [9, 182], "step_dir": 9, "database_root": [9, 174, 183, 184, 185, 186, 187, 188, 189, 197], "download_path": 9, "join": 9, "bathymetry_databas": [9, 174, 183], "remote_filenam": 9, "bedmachineantarctica_and_gebco_2019_0": 9, "05_degre": 9, "200128": 9, "local_filenam": 9, "topographi": [9, 161, 174, 177, 191, 194, 198], "url": [9, 32, 49, 174, 180, 183], "web": [9, 174, 183], "anl": [9, 174, 183], "gov": [9, 174, 180, 183, 185, 189], "mpas_standalonedata": [9, 183, 188], "dest_path": [9, 49], "remot": [9, 32, 179], "bathymetri": [9, 174, 183], "strategi": 10, "stderr": [10, 31, 39, 174], "loggingcontext": 10, "check_cal": [10, 174], "most": [10, 36, 105, 166, 172, 174, 177, 178, 179, 181, 183, 188, 189, 191, 192, 198], "won": [10, 178, 183], "logger": [10, 31, 39, 55, 79, 174, 176], "full": [10, 31, 83, 159, 160, 169, 170, 174, 176, 179, 182, 188, 191, 193, 194, 195, 197], "although": 10, "captur": 10, "insid": [10, 174, 178], "good": [10, 31, 174, 179], "idea": 10, "explicit": [10, 178], "go": [10, 174, 176, 177, 178, 179, 189], "even": [10, 11, 12, 14, 32, 48, 105, 174, 178, 179, 183, 188, 197], "subprocess": [10, 31, 79, 82, 174, 178, 180], "produc": [10, 12, 15, 31, 33, 46, 108, 120, 130, 140, 169, 170, 174, 178, 179, 197], "otherwis": [10, 14, 174, 176, 184, 185, 186, 187, 188, 189], "intent": 10, "desir": [10, 11, 12, 14, 15, 92, 108, 174, 175, 183, 197], "trick": [10, 174], "direct": [10, 11, 12, 169, 176, 189, 194], "snippet": 10, "dome": [10, 55, 174, 176, 177, 181, 197, 198], "setup_mesh": [10, 174], "setupmesh": [10, 174, 176], "create_landice_grid_from_generic_mpas_grid": 10, "py": [10, 12, 55, 105, 172, 177, 178, 179, 181, 183], "mpas_grid": [10, 174], "landice_grid": [10, 174], "l": [10, 92, 189], "sever": [10, 174, 176, 177, 178, 179, 181, 182, 197, 199], "global": [11, 43, 144, 145, 170, 174, 175, 177, 178, 181, 182, 183, 189, 197, 198], "quasiuniformsphericalmeshstep": [11, 170], "icosahedralmeshstep": [11, 170], "jigsaw": [11, 56, 60, 62, 63, 65, 67, 68, 145, 148, 174], "complex": [11, 14, 64, 176, 178], "build_cell_width_lat_lon": [11, 63], "opt": [11, 68], "make_jigsaw_mesh": [11, 63], "icosahedr": [11, 56, 58, 145, 148, 195], "significantli": [11, 191], "smooth": 11, "cell": [11, 12, 15, 56, 57, 58, 59, 63, 64, 65, 70, 108, 110, 111, 125, 149, 152, 158, 159, 160, 161, 164, 165, 169, 174, 176, 177, 191, 194, 195], "quasi": [11, 63, 183], "hand": [11, 178], "restrict": 11, "resolut": [11, 12, 56, 59, 63, 64, 117, 120, 122, 124, 127, 130, 132, 134, 137, 140, 145, 148, 149, 151, 169, 170, 173, 174, 176, 177, 183, 194, 198], "subdivis": [11, 56, 57, 58, 59, 60], "icosahedron": [11, 57, 58, 59, 60], "tabl": [11, 179, 188, 197], "approxim": [11, 56, 58, 59, 63, 108, 111, 125, 152, 179, 194, 195], "width": [11, 56, 57, 58, 63, 64, 65, 70, 194], "km": [11, 56, 57, 58, 59, 63, 64, 65, 70, 117, 120, 122, 124, 127, 130, 132, 134, 137, 140, 151, 169, 170, 183, 194, 195, 198], "5": [11, 58, 108, 134, 169, 174, 175, 176, 178, 180, 183, 194, 197], "240": [11, 58, 170, 183, 195], "6": [11, 58, 174, 192, 197], "120": [11, 58, 175, 195], "7": [11, 58, 189, 195, 197], "60": [11, 12, 58, 170, 191, 195], "8": [11, 58, 169, 176, 179, 183, 194, 195, 197], "30": [11, 58, 177, 189, 194, 195], "9": [11, 58, 197], "15": [11, 12, 58, 169, 194, 195, 197], "10": [11, 14, 58, 166, 169, 176, 177, 183, 188, 191, 194, 198], "11": [11, 58, 197], "3": [11, 58, 169, 174, 175, 177, 179, 180, 183, 188, 189, 191, 194, 195, 197], "12": [11, 58, 185], "13": [11, 58, 194], "94": [11, 58], "spherical_mesh": [11, 64], "cell_width": [11, 56, 57, 58, 59, 63, 64, 65, 70], "icosahedral_method": 11, "jigsaw_mesh_filenam": 11, "msh": 11, "jigsaw_geom_filenam": 11, "geom": 11, "jigsaw_jcfg_filenam": 11, "jig": 11, "jigsaw_hfun_filenam": 11, "spac": 11, "triangles_filenam": 11, "mesh_triangl": 11, "mpas_mesh_filenam": 11, "base_mesh": [11, 56, 63, 174], "plot": [11, 70, 93, 108, 137, 142, 169, 170, 195, 198], "plot_cell_width": 11, "cell_width_filenam": [11, 70], "cellwidthvslatlon": 11, "cell_width_image_filenam": 11, "cellwidthglob": 11, "cell_width_colormap": 11, "3wbgy5": 11, "add_mesh_dens": 11, "vtk": 11, "convert_to_vtk": 11, "vtk_dir": 11, "base_mesh_vtk": 11, "extract": 11, "lat": [11, 57, 63, 64, 65, 70, 183], "lon": [11, 57, 63, 64, 65, 70, 183], "sphere": [11, 170, 195], "vtk_lat_lon": 11, "far": [11, 158, 164, 165, 178], "But": [11, 105, 174, 177, 178, 183, 188], "hexagon": 11, "planar_hex": [11, 169, 174], "make_planar_hex_mesh": [11, 169, 174], "x": [11, 15, 57, 64, 65, 70, 93, 115, 174, 176, 194], "y": [11, 12, 15, 93, 169, 174, 176, 189, 194], "nx": [11, 174, 177, 194], "ny": [11, 174, 177, 194], "dc": [11, 174, 177, 194], "distanc": [11, 194], "adjac": [11, 191, 194], "center": [11, 15, 177, 191, 194], "admittedli": 11, "oddli": 11, "period": [11, 168, 169, 174, 194], "nonperiodic_x": [11, 174], "nonperiodic_i": [11, 174], "consider": [11, 158, 164, 165, 168], "grid": [11, 57, 64, 70, 108, 156, 157, 158, 159, 160, 161, 164, 165, 169, 174, 183, 194, 195], "behav": 11, "stagger": 11, "strictli": [11, 178], "physic": 11, "lx": 11, "howev": [11, 174, 175, 176], "ly": 11, "np": 11, "sqrt": 11, "domain": [11, 18, 25, 93, 108, 110, 115, 168, 177, 194, 195, 198], "extra": [11, 179], "factor": 11, "500e3": 11, "160e3": 11, "1e3": [11, 177], "max": [11, 108, 174, 195], "int": [11, 12, 18, 19, 28, 31, 34, 37, 52, 56, 57, 58, 59, 60, 78, 79, 93, 110, 111, 124, 125, 145, 148, 149, 151, 152, 174], "ds_mesh": [11, 15, 93], "creation": [11, 183], "build_mesh": 11, "build_planar_mesh": 11, "too": [11, 12, 18, 28, 31, 37, 79, 110, 174, 177, 178, 194, 195], "distant": 11, "futur": [11, 36, 174, 178, 181, 182, 183, 197, 198], "descend": [12, 108, 172, 174, 176, 177, 178], "modelstep": [12, 108, 174, 176], "update_pio": [12, 18, 110], "librari": [12, 101, 105, 179, 184, 185, 186, 187, 188, 189, 197], "make_graph": [12, 18, 110], "mpi": [12, 101, 104, 105, 110, 112, 114, 169, 174, 179, 180, 182, 184, 185, 186, 187, 189, 194, 197], "construct": [12, 109, 156, 158, 159, 160, 164, 165, 168, 172, 176, 177], "non": [12, 14, 168, 197], "At": [12, 31, 39, 173], "set_model_resourc": 12, "thread": [12, 18, 28, 31, 36, 37, 39, 79, 110, 124, 140, 169, 174, 175, 181, 183, 185, 189, 194], "openmp_thread": [12, 18, 28, 31, 37, 79, 110, 124, 174, 176], "definit": 12, "prefix": [12, 32, 179, 183], "end": [12, 169, 174, 176, 178, 179, 181, 185, 195], "yml": 12, "reason": [12, 36, 174, 178, 199], "add_namelist_fil": [12, 18, 108, 174, 176], "add_yaml_fil": [12, 18, 174, 176], "add_model_config_opt": [12, 18, 174, 176], "add_streams_fil": [12, 18, 108, 174, 176], "themselv": [12, 178, 182], "question": [12, 174, 183], "constructor": [12, 169, 172, 177], "simpli": [12, 48, 122, 172, 174, 176, 177, 179, 191, 197, 199], "safe": [12, 14, 174, 179, 194], "never": [12, 181], "hierarch": 12, "run_mod": 12, "config_ocean_run_mod": 12, "time_manag": 12, "config_run_dur": [12, 176], "0024_00": 12, "00": [12, 14, 176, 189, 197], "ale_vertical_grid": 12, "config_vert_coord_mov": 12, "impermeable_interfac": 12, "decomposit": [12, 39, 120, 181, 194], "config_block_decomp_file_prefix": 12, "time_integr": 12, "config_time_integr": 12, "rk4": [12, 178, 199], "filename_templ": 12, "restart": [12, 39, 130, 132, 169, 175, 178, 181, 194], "output_interv": 12, "0030_00": 12, "clobber_mod": 12, "truncat": 12, "reference_tim": 12, "0001": 12, "01": 12, "01_00": 12, "tracer": [12, 169, 170, 195], "xtime": 12, "normalveloc": [12, 14, 15, 121, 123, 131, 136, 141, 168, 169, 174], "layerthick": [12, 14, 108, 119, 121, 123, 131, 136, 141, 158, 162, 163, 164, 165, 169, 174, 176], "refzmid": [12, 158, 164, 165, 174], "reflayerthick": 12, "kineticenergycel": 12, "relativevorticitycel": 12, "unlik": [12, 14], "clariti": [12, 174], "guarante": [12, 166, 179], "uniqu": [12, 176], "global_converg": [12, 166, 171, 192, 193, 196], "cosine_bel": 12, "substitut": 12, "config_write_output_on_startup": 12, "0000_00": 12, "config_use_mom_del2": 12, "config_implicit_bottom_drag_coeff": 12, "0e": 12, "config_use_cvmix_background": 12, "config_cvmix_background_diffus": 12, "config_cvmix_background_viscos": 12, "worri": 12, "sometim": [12, 158, 164, 165, 174, 176, 181], "easier": [12, 174, 178, 179, 183, 197, 199], "togeth": [12, 181, 199], "seem": [12, 185, 189], "overkil": 12, "reli": [12, 174], "differ": [12, 14, 48, 60, 65, 92, 105, 108, 124, 134, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 189, 194, 195], "along": [12, 169, 174, 176, 182], "could": [12, 174, 175, 176, 178, 179], "nu": [12, 124, 137, 142, 169, 174, 176], "viscos": [12, 124, 134, 137, 142, 169, 174, 176, 178, 194], "hmix": 12, "config_mom_del2": [12, 169, 174], "bool": [12, 18, 19, 23, 31, 32, 39, 40, 46, 49, 51, 52, 82, 83, 84, 85, 90, 92, 96, 110, 111, 124, 125, 126, 133, 145, 148, 152, 153], "cannot": [12, 14], "known": [12, 170, 174], "beforehand": 12, "particularli": [12, 180], "openmp": [12, 18, 28, 31, 37, 79, 101, 103, 104, 110, 124, 174, 184, 185, 186, 187, 189], "update_namelist_at_runtim": 12, "update_yaml_at_runtim": 12, "config_pio_num_iotask": 12, "pio_num_iotask": 12, "config_pio_strid": 12, "pio_strid": 12, "out_nam": 12, "bit": [12, 178, 181, 194, 197], "complic": [12, 177, 178, 179], "xml": [12, 86, 88, 89, 100, 181], "slightli": [12, 14], "sophist": 12, "immutable_stream": 12, "var_struct": 12, "var": [12, 87], "var_arrai": 12, "tag": [12, 182], "taken": [12, 18, 110, 170, 174, 189, 197], "past": 12, "experi": [12, 105, 178, 191], "shown": [12, 173, 176], "featur": [12, 178, 179, 181, 183, 194], "difficult": [12, 105, 188], "synchron": [12, 182], "equival": [12, 179, 184], "try": [12, 51, 178, 179, 180, 183, 185, 189, 197], "template_replac": [12, 21, 22], "treat": [12, 175, 178], "jinja2": [12, 21, 22, 86], "render": [12, 21, 22, 86], "d_": 12, "restart_interv": 12, "stream_replac": 12, "dynamic_adjust": [12, 183], "qu240dynamicadjust": 12, "seri": [12, 108, 137, 142, 170, 193], "dynam": [12, 110, 144, 166, 183], "adjust": [12, 108, 144, 166, 183], "durat": [12, 169, 175], "interv": 12, "spin": 12, "reus": [12, 174, 178, 183, 197], "qualit": [12, 14], "affect": [12, 14, 174, 179], "update_streams_at_runtim": 12, "fairli": [12, 176, 178, 179], "hour": [12, 175, 185, 189, 197], "turn": [12, 31, 47, 174, 180], "datetim": 12, "timedelta": 12, "3600": 12, "planar_converg": 12, "delta": [12, 191], "minut": [12, 169, 175, 194, 199], "dai": [12, 134, 169, 170, 176, 194, 195], "03d": 12, "_": [12, 174, 176, 179], "02d": 12, "forgotten": 12, "broken": [12, 174, 178], "immedi": [12, 55, 179], "miss": [12, 14, 174, 183], "detect": [12, 15, 183, 184, 186, 187, 188, 197], "gpmeti": [12, 183], "divid": [12, 191], "partition_graph": [12, 18, 110], "circumst": [12, 14], "wast": 12, "manual": [12, 14, 39, 40, 174, 176, 198], "update_namelist_pio": 12, "node": [12, 18, 30, 31, 37, 77, 78, 79, 105, 110, 175, 178, 179, 183, 184, 185, 186, 187, 188, 189, 197], "v1": [12, 191], "better": [12, 105, 197], "v2": [12, 183, 191], "littl": [12, 178, 179, 182], "feel": [12, 174], "runtime_setup": [12, 28, 37, 176], "onc": [12, 169, 179, 183, 195, 197], "yourself": [12, 188], "fact": [12, 31], "culler": 12, "cull": [12, 169, 174], "model_step": [12, 174], "make_graph_fil": [12, 174], "field": [12, 14, 15, 70, 72, 93, 158, 164, 165, 168, 169, 194, 195], "weight": [12, 72, 158, 164, 165, 191], "weight_field": [12, 72], "critic": 14, "compare_vari": [14, 176], "filename1": [14, 92, 176], "filename2": [14, 92], "simpl": [14, 178, 197], "temperatur": [14, 119, 121, 123, 131, 136, 141, 168, 169, 174, 176, 194, 195], "salin": [14, 119, 121, 123, 131, 136, 141, 168, 169, 174, 176, 194, 195], "prognost": [14, 194], "4proc": [14, 121, 194], "8proc": [14, 121, 194], "alter": [14, 159, 160, 174, 176, 182, 191, 194, 195], "skip_if_step_not_run": [14, 92, 176], "forc": [14, 198], "possibli": [14, 174, 179], "failur": 14, "valueerror": [14, 77, 176, 177, 178], "quiet": [14, 83, 92, 96], "report": 14, "threshold": [14, 195], "l1": [14, 92], "00000000000000e": 14, "l2": [14, 92], "l_infin": 14, "linf": [14, 92], "home": [14, 179, 183, 185, 188, 189], "xylar": [14, 183, 188], "test_nightly_latest": 14, "10km": [14, 169, 176, 177, 194, 197, 198, 199], "threads_test": [14, 197, 199], "1thread": [14, 141, 169, 194], "2thread": [14, 141, 194], "test_20210616": 14, "further_valid": 14, "add_output_fil": [14, 174, 176], "disabl": [14, 168, 198], "check_output": [14, 92], "zero": [14, 159, 160, 161, 162, 163, 168, 169], "l1_norm": [14, 92], "l2_norm": [14, 92], "linf_norm": [14, 92], "nonzero": [14, 92], "easiest": [14, 179], "solut": [14, 104, 170, 175, 180], "clobber": 14, "error": [14, 31, 39, 108, 149, 170, 174, 179, 182], "judgment": 14, "enough": [14, 169, 174, 178, 194, 195], "problem": [14, 174, 179, 180], "compare_tim": 14, "integr": [14, 134, 169, 176, 178, 194, 195], "rundir1": [14, 91], "92264": 14, "82317": 14, "percent": 14, "781019682649793": 14, "speedup": 14, "1208377370409515": 14, "aspect": 15, "often": [15, 31, 174, 175, 176, 177, 178, 181, 183, 198, 199], "analysi": [15, 108, 169, 176, 178, 181, 182, 183, 195, 198], "routin": 15, "viz": 15, "plot_horiz_field": 15, "patch": [15, 93], "style": [15, 108, 182], "vertic": [15, 168, 169, 174, 183, 190, 192, 194], "edg": [15, 93, 168], "polygon": 15, "character": 15, "accordingli": [15, 80], "d": [15, 93, 158, 164, 165, 168, 174], "final_normalveloc": 15, "t_index": [15, 93], "vmin": [15, 93], "max_veloc": 15, "vmax": [15, 93], "cmap": [15, 93], "cmo": 15, "balanc": 15, "show_patch_edg": [15, 93], "hous": 16, "seaic": [16, 32, 174, 197], "dict": [16, 19, 21, 22, 24, 31, 39, 43, 74, 75, 81, 85, 86, 94, 95, 96, 113, 176], "kei": [16, 39, 43, 85, 176], "cach": [16, 18, 31, 32, 84, 85, 110, 182, 183, 188, 193, 197, 199], "__init__": [16, 18, 31, 39, 43, 48, 55, 56, 63, 68, 94, 109, 110, 116, 117, 120, 122, 124, 127, 130, 132, 134, 137, 140, 142, 144, 145, 148, 151, 154, 172, 174, 176, 177, 178, 181], "testgroup": [17, 31, 39, 177, 178], "max_memori": [18, 28, 31, 37, 110], "mesh_filenam": [18, 72, 110], "graph_filenam": [18, 72, 110], "graph": [18, 25, 27, 36, 72, 110, 169, 174, 183], "make_yaml": 18, "pio": [18, 27, 30, 110, 169], "stride": [18, 30, 110], "consist": [18, 30, 110, 166, 179, 183, 194], "partit": [18, 27, 36, 72, 110, 169, 174, 183, 184, 185, 186, 187, 189, 197], "model_config_data": 18, "streams_data": 18, "ideal": [18, 28, 31, 37, 79, 108, 110, 124, 174, 177, 178, 182, 183, 198], "accommod": [18, 28, 31, 37, 79, 110], "fewer": [18, 28, 31, 37, 79, 110, 124, 174, 194, 197], "amount": [18, 28, 31, 37, 110, 174, 190], "memori": [18, 28, 31, 37, 110, 174, 183], "mb": [18, 28, 31, 37, 110, 183], "placehold": [18, 28, 31, 37, 110, 174, 197], "at_setup": [23, 108, 111, 125, 126, 133, 152, 153], "overridden": [24, 113, 174, 176], "situat": [24, 113, 197], "diverg": [24, 113], "counterpart": [24, 108, 113], "nest": [24, 94, 96, 113], "graph_fil": 25, "parent": [26, 172, 177], "done": [28, 37, 174, 197], "run_as_subprocess": [31, 174], "condit": [31, 119, 122, 127, 144, 154, 169, 170, 174, 175, 176, 177, 178, 181, 182, 183, 193, 194, 198], "smallest": [31, 174, 181, 191, 198], "unit": [31, 174, 181, 194, 198], "term": [31, 181], "necessarili": [31, 32, 181], "input_data": 31, "combin": [31, 32, 39, 48, 81, 94, 174, 175, 176, 180, 183, 197], "machine_info": 31, "machineinfo": 31, "config_filenam": [31, 39, 174, 176], "base_work_dir": [31, 39, 174, 176], "log_filenam": [31, 39, 174], "redirect": [31, 174], "extern": [31, 166, 172, 174, 192], "filenam": [32, 33, 76, 92, 95, 97, 174, 179], "database_compon": [32, 174], "work_dir_target": [32, 174], "come": [32, 174, 179, 184, 185, 186, 187, 188, 189, 192], "root": [32, 149, 166, 170, 172, 174, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 191, 197], "suffix": [32, 85, 174], "_database_root": 32, "append": 32, "perhap": [33, 177], "available_cor": [34, 112], "constrain": [34, 111, 125, 152, 169], "total": [34, 78, 174, 175, 178, 183, 185, 197], "everi": [35, 169, 174, 176, 178, 180, 181, 194], "child": [35, 172, 174, 176, 178], "serial": [36, 174, 176, 182, 197], "subtask": 37, "stdout_logg": 39, "goe": [39, 174], "regardless": 39, "new_step_log_fil": 39, "whole": [39, 115, 176, 178, 197], "statu": 39, "run_by_default": [40, 176], "assum": [41, 86, 95, 176, 189, 194], "prior": [41, 174, 176], "greenland": [43, 177, 181, 182, 198], "eismint2": 43, "step_path": 46, "variant": [46, 169, 175, 177, 178, 179, 188, 191, 194, 195], "uncach": 46, "datestamp": 46, "yymmdd": [46, 183], "dry": [46, 175], "meta": 48, "empti": [48, 174, 178, 179, 181], "link_nam": 51, "overwrit": 51, "stackoverflow": 51, "55742015": 51, "7728169": 51, "symbol": [51, 174], "fileexistserror": 51, "unless": [51, 83, 179], "isadirectoryerror": 51, "decomposition_test": [55, 177, 197], "decompositiontest": [55, 177], "noqa": [55, 148, 151, 154], "e501": [55, 148, 151, 154], "turquois": [55, 185], "usr": [55, 185, 197], "climat": [55, 184, 185, 186, 188, 197], "mhoffman": 55, "latitud": [57, 64, 195], "longitud": [57, 64, 65, 70, 195], "ndarrai": [57, 64, 65, 70, 115, 156, 157], "degre": [57, 64, 65, 70, 183, 194], "length": [57, 64, 65, 70], "180": [57, 64, 65, 70, 195], "90": [57, 64, 65, 70, 174, 195], "static": [58, 59], "rule": 58, "thumb": 58, "achiev": [59, 175], "close": [59, 182, 195], "subclass": [60, 63, 64, 65, 69, 108], "uniform": [63, 151, 169, 170, 177, 183, 194], "jigsawpi": [68, 174], "jigsaw_jig_t": 68, "finish": 69, "meti": 72, "defaults_filenam": 73, "state": [77, 115, 168, 169, 170, 175], "queu": 77, "slurm": [77, 80, 182, 183, 184, 185, 186, 187, 189, 197], "interact": [77, 185, 188, 189, 197], "batch": [77, 185], "job": [77, 105, 179, 182, 184, 185, 186, 187, 189], "slurm_job_id": 77, "substep": 79, "cpus_per_nod": 80, "step_is_subprocess": 82, "is_test_cas": 83, "steps_not_to_run": 83, "progress": 83, "cached_step": 84, "copy_execut": [84, 85, 90, 197], "serv": [84, 85, 90, 177], "_all": [84, 85], "streams_filenam": 86, "lxml": [86, 88, 100], "etre": [86, 88, 100], "new_child": 87, "children": 87, "sub": 87, "new_tre": 88, "out_filenam": [89, 157], "rundir2": 91, "norm": 92, "infin": 92, "toler": 92, "exclud": [92, 197], "field_nam": 93, "out_file_nam": 93, "titl": 93, "z_index": 93, "cmap_set_und": 93, "cmap_scal": 93, "linear": [93, 194], "horizont": [93, 108, 168, 169, 194], "planar": [93, 108, 168], "coordin": [93, 158, 164, 165, 190, 192, 194], "depth": [93, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 183, 191, 194], "slice": 93, "dataset": [93, 158, 164, 165, 174], "fieldnam": 93, "present": [93, 179], "colorbar": 93, "visibl": 93, "nvertlevel": [93, 158, 164, 165, 174, 191], "ax": 93, "colormap": 93, "color": 93, "logarithm": 93, "classmethod": 95, "jinja": 95, "namelist_templ": 99, "polarisyaml": [99, 100], "processed_registry_filenam": 100, "registri": [100, 168], "steam": 100, "load_dev_polaris_0": [101, 102, 103, 104, 105, 106], "alpha": [101, 102, 103, 104, 105, 106], "1_anvil_intel_impi": [101, 105], "sh": [101, 102, 103, 104, 105, 106, 179, 180, 184, 185, 186, 187, 189, 197], "openmpi": [101, 105, 179, 182, 184, 186, 187, 197], "mvapich": [101, 105, 184], "impi": [101, 105, 184, 187], "ifort": [101, 103, 105, 184, 186], "ve": [101, 102, 103, 104, 106, 174, 179], "1_anvil_gnu_openmpi": 101, "gfortran": [101, 103, 104, 105, 179, 184, 186], "load": [102, 105, 106, 179, 182, 183, 184, 185, 186, 187, 188, 189], "1_chicoma": 102, "cpu_gnu_mpich": [102, 106], "crai": [102, 105, 106, 185, 189], "1_chrysalis_intel_openmpi": 103, "1_chrysalis_gnu_openmpi": 103, "yet": [104, 108, 174, 178], "again": [104, 166, 174, 179, 180, 197], "soon": [104, 197], "1_compy_intel_impi": 104, "1_compy_gnu_openmpi": 104, "attempt": [105, 182, 188], "particular": [105, 177, 179, 182, 185, 188, 197], "activ": [105, 188, 189, 197], "load_polaris_env": [105, 179, 197], "were": [105, 124, 174, 178, 181, 183, 187, 191], "right": [105, 108, 176, 179, 183, 191, 195, 197], "therefor": [105, 174, 181, 195], "gnu": [105, 179, 187, 188, 197], "lib": 105, "intel": [105, 188], "chicoma": [105, 188, 197], "mpich": [105, 179, 182, 185, 189, 197], "compi": [105, 187, 197], "pm": [105, 189, 197], "compymcnodefac": [105, 188], "perlmutt": [105, 185, 188, 197], "pretti": [105, 174, 178, 183], "forg": [105, 182, 197], "linux": [105, 179, 188], "configure_polaris_env": [105, 179, 180], "conda_path": [105, 179], "osx": [105, 188], "clang": [105, 179], "had": 105, "1_": 105, "1_pm": 106, "ever": [108, 178], "expand": [108, 191], "oceanmodelstep": 108, "decid": 108, "veri": [108, 172, 174, 178, 179], "earli": [108, 192, 197], "stage": [108, 168, 174, 176, 179, 192, 197], "map_yaml_to_namelist": 108, "count": [108, 175], "heurist": 108, "exact": [108, 170, 178], "algorithm": [108, 124, 169, 174], "200": [108, 176, 194], "round": [108, 195], "cell_count": [108, 111, 125, 152], "goal_cells_per_cor": [108, 194, 195], "pinch": 108, "2000": [108, 177, 194], "max_cells_per_cor": [108, 194, 195], "seciton": 108, "control": [108, 174, 183, 194, 195, 197], "scale": [108, 197], "tri": [108, 178], "apport": 108, "precis": [108, 174], "caviti": [108, 178, 183, 191], "frazil": 108, "flux": [108, 168], "grid_1d": 108, "1d": [108, 156, 157, 158, 159, 160, 161, 162, 164, 165], "generate_1d_grid": 108, "vertical_grid": [108, 156, 158, 164, 165, 177, 183, 191, 194], "z": [108, 159, 160, 161, 162, 163, 164, 165, 194, 199], "star": [108, 163, 165, 194, 199], "init_vertical_coord": 108, "minlevelcel": [108, 158, 160, 161, 162, 163, 164, 165], "maxlevelcel": [108, 158, 159, 160, 161, 162, 163, 164, 165, 174], "cellmask": [108, 158, 161, 164, 165], "zmid": [108, 158, 164, 165], "restingthick": [108, 158, 163, 164, 165, 174], "bottomdepth": [108, 158, 159, 161, 162, 163, 164, 165, 174], "entir": [108, 194, 199], "petersen": [108, 179, 194], "et": [108, 191, 194, 195], "al": [108, 191, 194, 195], "2015": [108, 194], "int_": 108, "rho": 108, "left": [108, 191, 195], "dv": 108, "sort": [108, 173, 178, 179], "increas": [108, 178], "compute_rp": 108, "csv": 108, "dynamic_ntask": 110, "estim": [112, 114], "initial_state_file_nam": 115, "output_fil": [115, 174], "rest": [115, 163, 191], "potenti": [115, 134, 174, 176, 194], "energi": [115, 134, 176, 182, 194], "netcdf": [115, 183, 184, 185, 186, 187, 188, 189], "len": [115, 174], "superclass": [117, 169, 174], "run_time_step": 124, "resources_fix": 124, "shouldn": 124, "dt": [124, 194, 195], "btr_dt": [124, 194], "barotrop": [124, 194], "longer": [130, 169, 175, 194, 195, 199], "shorter": [130, 175], "rpe": [134, 137, 142, 176, 194], "20": [134, 169, 175, 176, 194], "less": [145, 148, 174, 191], "globalocean": [145, 172], "cosin": [148, 151, 154, 170, 195], "bell": [148, 151, 154, 170, 195], "cosinebel": [148, 151, 154, 170], "mesh_nam": [149, 151, 154], "rmsevalu": 149, "squar": [149, 170], "ncell": [149, 174], "posit": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 191], "layer": [156, 157, 158, 162, 163, 164, 165, 168, 169, 183, 191, 194], "meter": [156, 157], "bottom": [158, 159, 160, 161, 162, 163, 164, 165, 168, 183, 191, 194], "thick": [158, 162, 163, 164, 165, 169, 183, 191, 194], "stretch": [158, 164, 165, 191], "elev": [158, 164, 165, 191], "midpoint": [158, 164, 165], "reftopdepth": [158, 161, 162, 164, 165], "down": [158, 159, 160, 161, 162, 163, 164, 165, 191], "ref": [158, 164, 165], "middl": [158, 164, 165], "refbottomdepth": [158, 159, 160, 161, 162, 164, 165, 174], "refinterfac": [158, 164, 165], "element": [158, 164, 165], "vertcoordmovementweight": [158, 164, 165, 174], "movement": [158, 164, 165], "partial": [159, 160, 191, 194], "seafloor": [159, 161, 162, 163, 191], "unstretch": 163, "shelv": [166, 183, 191], "ssh_adjust": [166, 174, 176, 183], "iter": [166, 183], "compass_branch": 166, "default_input": [166, 172, 183], "ocean_model": [166, 179, 183], "submodul": [166, 172, 179, 197], "latest": [166, 179, 182, 192, 197], "master": 166, "frequent": 166, "compat": [166, 179, 180, 182], "verison": 166, "maintain": [166, 197], "recurs": [166, 178, 179, 197], "whichev": [166, 191], "design": [167, 174, 176, 178, 182, 188], "minim": 168, "fcell": [168, 174], "fedg": [168, 174], "fvertex": [168, 174], "free": [168, 183], "slip": 168, "solid": [168, 194, 195], "tangenti": 168, "enforc": [168, 179], "nonperiod": 168, "drag": 168, "mass": 168, "momentum": [168, 169], "scalar": 168, "rigid": 168, "veloc": [168, 169, 176, 179, 195, 197], "normal": [168, 174, 175, 179, 188], "solv": [168, 180, 191], "mid": 168, "vari": [168, 170, 174, 180, 188, 191, 195], "consult": 168, "tidal_forc": 168, "eddi": [169, 194], "addition": [169, 184, 185, 186, 187, 189], "diffus": 169, "50": [169, 177, 194], "prescrib": 169, "runtime_steup": 169, "decomptest": 169, "restarttest": [169, 177], "frequenc": 169, "threadstest": 169, "thread_test": 169, "rpetest": [169, 176], "intens": 169, "globalconverg": [170, 178], "converg": [170, 173, 175, 182, 195], "studi": [170, 195], "globe": [170, 195], "advect": [170, 195], "qu": [170, 183, 193, 195], "ico": [170, 193, 195], "fix": [170, 177], "spheric": [170, 195], "24": [170, 195], "shape": [170, 195], "blob": 170, "around": [170, 183, 194, 195], "rate": [170, 195], "distribut": 170, "dt_per_km": [170, 194, 195], "rmse": 170, "encompass": 172, "perspect": 172, "four": 172, "major": [172, 174], "add_test_group": [172, 178], "variou": [172, 174, 179], "univers": 172, "mix": [172, 177], "super": [172, 174, 176, 177, 178], "ice_shelf_2d": [172, 199], "iceshelf2d": 172, "ziso": [172, 191, 198, 199], "landice_model": [172, 179], "green": 173, "blue": [173, 184, 197], "orang": 173, "red": 173, "repositori": [173, 182, 197], "laid": 173, "fig": 173, "among": [173, 177, 179], "organiz": 173, "concept": [173, 178, 181, 198], "simul": [174, 181, 193, 194, 197], "multiprocess": [174, 178, 183], "outsid": 174, "emploi": 174, "prevent": 174, "unwant": 174, "outer": 174, "inner": 174, "until": [174, 176, 197], "mesh_typ": [174, 176, 177], "variable_resolut": [174, 177, 197], "dome_varres_grid": 174, "calcul": [174, 176], "signific": [174, 175, 176], "neglig": 174, "meshstep": 174, "getint": 174, "mesh_cpus_per_task": 174, "mesh_min_cpus_per_task": 174, "previous": 174, "processor": [174, 194, 195], "readi": [174, 189], "write_netcdf": 174, "convers": 174, "generate_grid": 174, "dsmesh": 174, "graphinfofilenam": 174, "use_dist": [174, 194], "gradient_width_dist": [174, 194], "gradient_width_frac": [174, 194], "bottom_temperatur": [174, 194], "surface_temperatur": [174, 194], "temperature_differ": [174, 194], "coriolis_paramet": [174, 194], "bottom_depth": [174, 183, 191, 194], "vert_level": [174, 183, 191, 194], "ones_lik": 174, "xcell": 174, "ycell": 174, "xmin": 174, "min": [174, 194], "xmax": 174, "ymin": 174, "ymax": 174, "ymid": 174, "xperturbmin": 174, "xperturbmax": 174, "perturbationwidth": 174, "yoffset": 174, "sin": [174, 194], "pi": [174, 191, 195], "temp_vert": 174, "frac": [174, 191], "logical_and": 174, "transpos": 174, "3rd": 174, "crest": 174, "wave": [174, 194], "expand_dim": 174, "dim": 174, "axi": 174, "broadcast": 174, "zeros_lik": 174, "xedg": 174, "nedg": 174, "dtype": 174, "xvertex": 174, "commandlin": 174, "best": [174, 179], "explor": [174, 177, 191], "harm": 174, "likewis": 174, "subsequ": [174, 181, 199], "arisen": 174, "now": [174, 179, 183, 188], "omit": [174, 197], "problemat": 174, "usual": [174, 176, 179, 197], "open_dataset": 174, "isn": [174, 178, 194], "forwardstep": 174, "mesh_path": 174, "mesh_step": 174, "with_ice_shelf_cav": [174, 176], "initial_state_target": 174, "adjusted_init": [174, 176], "forcing_data": 174, "entha_analy_result": 174, "mat": 174, "enthalpy_benchmark": 174, "ourselv": 174, "reduc": 174, "firewal": 174, "bedmachineantarctica_v2_and_gebco_2022_0": 174, "05_degree_20220729": 174, "slate": 174, "icepresent_qu60km_polar": 174, "practic": [174, 178, 179], "nearli": [174, 181, 182], "u": [174, 188, 189], "straightforward": 174, "commonli": [174, 181], "expens": [174, 175], "workflow": [174, 179], "mechan": 174, "notat": 174, "That": [174, 178, 181, 197], "word": 174, "ff": 174, "quwisc240": [174, 178, 197, 199], "90c": 174, "91c": 174, "92": [174, 191], "91": 174, "sowisc12to60": [174, 197, 199], "performance_test": [174, 199], "approach": [174, 177, 178, 179, 180, 191], "effici": 174, "transfer": 174, "organ": [175, 177, 182], "philosophi": [175, 178], "context": 175, "namesak": 175, "256": [175, 185, 189], "128": [175, 185, 186, 189], "quicker": 175, "32": [175, 197], "exce": 175, "limit": [175, 179], "offer": 175, "benefit": [175, 182], "catch": 175, "bug": 175, "covereag": 175, "timestep": 175, "exhaust": 175, "recent": [175, 192], "merg": 175, "reach": 175, "steadi": 175, "encount": [175, 180], "wet": 175, "fundament": 176, "incorpor": 176, "deprec": 176, "constrain_resourc": 176, "access": [176, 178, 179, 184, 188, 189], "smoke_test": [176, 177], "smoketest": [176, 177], "velo_solv": 176, "sia": [176, 179], "fo": 176, "add_step": 176, "runmodel": 176, "run_step": 176, "0200": 176, "00_00": 176, "fine": 176, "recip": 176, "rpe_test": [176, 178, 197], "res_param": [176, 177], "144": 176, "36": [176, 184, 188, 197], "4km": [176, 177, 194, 197], "unsupport": [176, 177], "param": [176, 177], "enumer": 176, "rpe_test_": 176, "_nu_": 176, "deliber": 176, "chosen": 176, "demonstr": 176, "clumsi": [176, 178], "rpe_test_1_nu_1": [176, 194], "rpe_test_2_nu_5": [176, 194], "filesfore3sm": 176, "configure_global_ocean": 176, "with_bgc": 176, "po4": 176, "no3": 176, "sio3": 176, "nh4": 176, "fe": [176, 185], "o2": 176, "dic": 176, "dic_alt_co2": 176, "alk": 176, "dofe": 176, "dop": 176, "dopr": 176, "donr": 176, "zooc": 176, "spchl": 176, "spc": 176, "spfe": 176, "spcaco3": 176, "diatchl": 176, "diatc": 176, "diatf": 176, "diatsi": 176, "diazchl": 176, "diazc": 176, "diazf": 176, "phaeochl": 176, "phaeoc": 176, "phaeof": 176, "dm": 176, "dmsp": 176, "prot": 176, "poli": 176, "lip": 176, "conceptu": [177, 178], "realist": [177, 182, 198], "2000m": [177, 197], "34": [177, 197], "halfar": 177, "cism": 177, "dome_typ": 177, "closest": 177, "put_origin_on_a_cel": 177, "hydrologi": 177, "hydro": [177, 198], "dome_viz": 177, "time_slic": 177, "save_imag": 177, "hide": 177, "hide_fig": 177, "add_test_cas": 177, "restart_test": [177, 197, 199], "talk": 177, "16": [177, 183, 197], "10e3": 177, "40": [177, 187], "126": 177, "4e3": 177, "160": 177, "500": [177, 183, 191], "held": 177, "initial_condit": 178, "dig": [178, 183], "infrastructur": 178, "background": [178, 195], "behind": 178, "adher": 178, "pep8": [178, 179], "bot": [178, 191], "violat": 178, "pleas": [178, 179, 197], "consid": 178, "editor": 178, "pycharm": [178, 179], "spyder": 178, "linter": 178, "flake8": [178, 179], "discourag": 178, "reformat": 178, "autopep8": 178, "undesir": 178, "util": 178, "lint": 178, "standard": [178, 179, 185, 197], "wildcard": 178, "vim": 178, "plugin": 178, "id": [178, 179], "commit": [178, 179], "why": 178, "sound": 178, "subpackag": 178, "understand": [178, 183], "releas": [178, 182, 188, 192, 197], "our": [178, 197], "downstream": 178, "tutori": [178, 179], "clu": 178, "intro": 178, "docstr": [178, 182], "strip": 178, "mpas_ocean": 178, "hidden": 178, "shortcut": [178, 197], "referenc": 178, "ll": [178, 189], "mention": 178, "dot": 178, "charact": 178, "unix": [178, 182], "distinct": 178, "mayb": 178, "machine_config": 178, "endswith": 178, "splitext": 178, "exactli": [178, 179, 191], "move": 178, "renam": 178, "visa": 178, "versa": 178, "comfort": 178, "inherit": 178, "orient": 178, "program": [178, 183], "led": 178, "felt": 178, "contribut": 178, "hesit": 178, "predecessor": [178, 181, 182], "harder": 178, "outcom": 178, "augment": 178, "explain": 178, "hope": 178, "dens": 178, "learn": 178, "curv": 178, "worth": 178, "skill": 178, "broadli": 178, "applic": [178, 179], "endeavor": 178, "readabl": 178, "manipul": 178, "get_available_cores_and_nod": 178, "theoret": 178, "dozen": 178, "split": 178, "theori": 178, "biogeochemistri": 178, "bash": [179, 180, 197], "ksh": 179, "mac": [179, 182], "csh": 179, "tcsh": 179, "temporarili": 179, "switch": [179, 183], "bin": [179, 189, 197], "obtain": [179, 185], "recogn": [179, 183, 197], "mambaforg": [179, 188, 197], "permiss": 179, "miniconda3": 179, "unifi": [179, 189], "anyon": 179, "caus": [179, 185, 189, 191], "person": [179, 180], "base_path_to_install_or_update_conda": 179, "with_albani": 179, "with_netlib_lapack": 179, "with_petsc": 179, "flavor": 179, "login": [179, 185, 189], "troubl": 179, "recognit": 179, "trilino": 179, "downsid": 179, "unneed": 179, "laptop": [179, 183], "workstat": 179, "deploy": 179, "shallow": 179, "hpc": [179, 185, 188], "touch": 179, "update_spack": 179, "reinstal": 179, "scorpio": [179, 188, 197], "esmf": [179, 197], "caution": 179, "deploi": [179, 184, 185, 186, 187, 188, 189], "load_": 179, "encod": 179, "load_dev_polaris_": 179, "env_nam": 179, "dev_polaris_": [179, 180], "safest": 179, "rerun": 179, "load_dev_polari": 179, "echo": 179, "rememb": 179, "recreat": [179, 180], "incorrect": 179, "unus": 179, "session": 179, "With": 179, "pip": 179, "substanti": 179, "risk": 179, "rare": 179, "correct": 179, "wih": 179, "env_onli": 179, "mpas_make_target": [179, 197], "scientif": [179, 197], "_albani": 179, "column": [179, 197], "instruct": 179, "proce": 179, "workdir": [179, 197], "es3m": 179, "compli": 179, "convent": 179, "memor": 179, "guidelin": 179, "stai": 179, "complianc": 179, "checker": 179, "pre": 179, "isort": 179, "mypi": 179, "77": 179, "e302": 179, "blank": 179, "resolv": 179, "simpler": 179, "mkdir": 179, "mark": 179, "fetch": 179, "new_branch_nam": 179, "put": 179, "elsewher": 179, "disk": [179, 183, 185, 189], "respons": 179, "simplest": 179, "your_new_branch": 179, "checkout": 179, "suggest": 180, "geo": 180, "cartopi": 180, "14": 180, "np110py27_4": 180, "calledprocesserror": 180, "deploy_tmp": 180, "spec": [180, 189], "vpn": 180, "occur": 180, "site": 180, "shell": [180, 182], "honor": 180, "wide": 180, "coupl": [180, 182], "profil": 180, "spawn": 180, "usernam": [180, 185, 189], "proxy_en": 180, "export": 180, "all_proxi": 180, "proxyout": 180, "8080": 180, "no_proxi": 180, "localhost": [180, 183, 188, 189, 197], "127": 180, "proxy_dis": 180, "unset": 180, "anytim": 180, "fatal": 180, "mpi_init": 180, "stack": 180, "mpir_init_thread": 180, "159": 180, "mpid_init": 180, "164": 180, "mpidi_ch3_init": 180, "95": 180, "mpid_nem_init": 180, "314": 180, "mpid_nem_tcp_init": 180, "173": 180, "mpid_nem_tcp_get_business_card": 180, "395": 180, "getsockinterfaceaddr": 180, "369": 180, "pn2034311": 180, "errno": 180, "host": [180, 183, 188, 197], "mpirun": [180, 183, 184, 185, 186, 187, 188, 189, 197], "srun": [180, 183, 184, 185, 186, 187, 188, 189, 197], "parallel_execut": [180, 183, 184, 185, 186, 187, 188, 189, 197], "unexpect": 181, "plu": 181, "autom": 182, "exascal": 182, "earth": 182, "kept": 182, "sens": 182, "observ": 182, "region": [182, 183], "boundari": [182, 194, 198], "expert": 182, "team": 182, "launch": 182, "uncoupl": 182, "evolv": [182, 191], "quick": [182, 192, 199], "queue": 182, "beginn": 182, "worktre": 182, "advanc": 182, "mpas_to_yaml": 182, "troubleshoot": 182, "proxi": 182, "lanl": [182, 183, 185], "gethostbynam": 182, "extens": 183, "single_nod": [183, 184, 185, 186, 187, 188, 189, 197], "multinod": [183, 197], "cores_per_nod": [183, 184, 185, 186, 187, 188, 189, 197], "hopefulli": 183, "explanatori": 183, "my_machin": 183, "fit": 183, "extend": 183, "interpol": 183, "gitconfig": 183, "enter": 183, "author": 183, "asai": 183, "davi": 183, "email": 183, "pull_request": 183, "28": 183, "address": 183, "metadata": 183, "customize_config_pars": 183, "server_base_url": 183, "inej": 183, "check_siz": 183, "ssl": 183, "certif": 183, "core_path": 183, "partition_execut": 183, "dask": 183, "netcdf4": 183, "netcdf4_class": 183, "netcdf3_64bit": 183, "netcdf3_class": 183, "engin": 183, "scipi": 183, "mesh_databas": 183, "initial_condition_databas": 183, "ocean_database_root": 183, "landice_database_root": 183, "mesh_cor": 183, "18": [183, 185], "mesh_min_cor": 183, "usag": [183, 185, 189], "mesh_max_memori": 183, "1000": [183, 191, 194], "mesh_max_disk": 183, "init_cor": 183, "init_min_cor": 183, "init_max_memori": 183, "init_max_disk": 183, "init_thread": 183, "forward_cor": 183, "forward_min_cor": 183, "forward_thread": 183, "forward_max_memori": 183, "forward_max_disk": 183, "add_metadata": 183, "ec": 183, "wc": 183, "mesh_descript": 183, "autodetect": 183, "bathy_descript": 183, "gebco": 183, "2022": 183, "bedmachin": 183, "antarctica": 183, "init_descript": 183, "e3sm_vers": 183, "increment": 183, "mesh_revis": 183, "finest": [183, 195], "min_r": 183, "coarsest": 183, "max_r": 183, "max_depth": 183, "creation_d": 183, "peopl": 183, "contact": 183, "temperaturemax": 183, "statist": 183, "temperature_max": 183, "33": [183, 197], "diagnost": [183, 184, 185, 187, 188, 189, 197], "enable_ocean_initial_condit": 183, "enable_ocean_graph_partit": 183, "enable_seaice_initial_condit": 183, "scrip": 183, "enable_scrip": 183, "transect": 183, "onlin": 183, "member": 183, "offlin": 183, "enable_diagnostics_fil": 183, "coarser": [183, 195], "finer": 183, "comparisonlatresolut": 183, "comparisonlonresolut": 183, "antarct": 183, "polar": [183, 184, 186, 191], "stereograph": 183, "comparisonantarcticstereowidth": 183, "6000": [183, 191], "comparisonantarcticstereoresolut": 183, "arctic": 183, "comparisonarcticstereowidth": 183, "comparisonarcticstereoresolut": 183, "grid_typ": [183, 191, 194], "tanh_dz": 183, "3000": [183, 195], "min_layer_thick": [183, 191], "max_layer_thick": [183, 191], "retain": 183, "ecosystem": 184, "gain": 184, "confluenc": 184, "public_html": [184, 186, 188], "polaris_env": [184, 185, 186, 187, 188, 189], "soft": [184, 186, 188, 197], "mpi_intel": [184, 186, 187, 188], "mpi_gnu": [184, 185, 186, 187, 188, 189], "hdf5": [184, 185, 186, 187, 188, 189], "fortran": [184, 185, 186, 187, 188, 189], "pnetcdf": [184, 185, 186, 187, 188, 189], "use_e3sm_hdf5_netcdf": [184, 185, 186, 187, 188, 189], "cobalt": [184, 185, 186, 187, 188, 189], "account": [184, 185, 187, 188, 189, 197], "condo": [184, 197], "acm": [184, 197], "medium": 184, "qualiti": [184, 185, 187, 188, 189, 197], "servic": [184, 185, 187, 188, 189, 197], "qo": [184, 185, 187, 188, 189, 197], "acme_high": 184, "load_latest_polaris_intel_impi": [184, 187], "load_latest_polaris_gnu_openmpi": [184, 186, 197], "dst": 185, "calendar": 185, "network": 185, "introduct": 185, "platform": 185, "wtrw": 185, "ch": 185, "lustr": 185, "scratch4": 185, "scratch5": 185, "sacctmgr": 185, "assoc": 185, "cluster": 185, "45": 185, "my": 185, "sshare": 185, "grep": [185, 197], "sreport": 185, "accountutilizationbyus": 185, "2019": 185, "02": 185, "prioriti": 185, "yellow": 185, "chkhome": 185, "petabyt": 185, "df": 185, "bp": 185, "archiv": [185, 189], "hpss": [185, 189], "front": 185, "tn": 185, "storag": 185, "project_nam": 185, "salloc": [185, 188, 189], "account_nam": 185, "gpu": [185, 189], "hyperthread": [185, 189], "hang": [185, 189], "threads_per_cor": [185, 189], "modules_befor": [185, 189], "modules_aft": [185, 189], "shared_clim": [185, 197], "load_latest_polaris_gnu_mpich": [185, 189], "high": [186, 188], "load_latest_polaris_intel_openmpi": 186, "compyf": 187, "app": [187, 197], "pmi2": 187, "conda_env": [187, 197], "sai": 188, "submit": 188, "workload": 188, "sbatch": [188, 197], "squeue": 188, "my_usernam": [188, 189], "scancel": 188, "jobid": 188, "cancel": 188, "emtpi": 188, "probabl": 188, "three": 188, "mpi_mpich": [188, 197], "mpi_openmpi": [188, 197], "nompi": [188, 197], "p1": 189, "nersc": 189, "iri": 189, "filesystem": 189, "myquota": 189, "prjquota": 189, "projectid": 189, "m1795": 189, "hsi": 189, "htar": 189, "zstash": 189, "cf": [189, 197], "cdir": [189, 197], "constraint": [189, 197], "premium": 189, "cray_compil": 189, "8844": 189, "monik": 189, "browser": 189, "port": 189, "realli": 189, "nice": 189, "grab": 189, "logon": 189, "kernel": 189, "connect": 189, "myenv": 189, "ipykernel": 189, "kernelspec": 189, "u1": 189, "Be": 189, "interpret": 189, "argv": 189, "env": 189, "ipykernel_launch": 189, "connection_fil": 189, "display_nam": 189, "languag": 189, "100": 191, "2500": 191, "coord_typ": [191, 194], "partial_cell_typ": [191, 194], "min_pc_fract": [191, 194], "deepest": 191, "stewart": 191, "2017": 191, "z_2": 191, "z_1": 191, "mathrm": 191, "tanh": 191, "rightarrow": 191, "infti": 191, "z_k": 191, "z_0": 191, "z_": 191, "k": 191, "finder": 191, "n_z": 191, "h_": 191, "64": 191, "210": [191, 195], "scienc": 191, "hydrograph": 191, "climatologi": 191, "250": 191, "5500": 191, "renorm": 191, "51": 191, "221": 191, "63": 191, "floor": 191, "flat": 191, "collaps": 191, "adcroft": 191, "campin": 191, "2004": 191, "absenc": 191, "squash": 191, "proport": [191, 194, 195], "watercolumn": 191, "press": 191, "depress": 191, "batymetri": 191, "repres": [191, 195], "stair": 191, "still": [192, 197], "month": 192, "year": 192, "websit": 192, "release_6": 192, "ilicak": 194, "2012": 194, "zonal": 194, "northern": 194, "southern": 194, "throughout": 194, "35": [194, 195, 197], "psu": 194, "cooler": 194, "half": 194, "north": 194, "gradient": 194, "halv": 194, "sinusoid": 194, "perturb": [194, 195], "meridion": 194, "warmer": 194, "distinguish": 194, "aim": [194, 195], "btr_dt_per_km": 194, "logic": 194, "08": 194, "500km": 194, "40e3": 194, "water": 194, "corioli": 194, "2e": 194, "hard": 194, "decompos": 194, "goal": 194, "break": 194, "mk": 194, "celsiu": 194, "spuriou": 194, "dissip": 194, "pop": 194, "mom": 194, "mitgcm": 194, "williamson": 195, "1992": 195, "sec": 195, "3a": 195, "skamarock": 195, "gassmann": 195, "flow": 195, "bodi": 195, "rotat": 195, "transport": 195, "psi": 195, "psi_0": 195, "co": 195, "ge": 195, "radiu": 195, "equatori": 195, "u_0": 195, "300": 195, "central": 195, "rad": 195, "lat_cent": 195, "lon_cent": 195, "14159265": 195, "2123666": 195, "6667": 195, "hill": 195, "psi0": 195, "transit": 195, "equat": 195, "vel_pd": 195, "qu_conv_thresh": 195, "warn": 195, "qu_conv_max": 195, "icos_conv_thresh": 195, "icos_conv_max": 195, "480": 195, "150": 195, "nearest": 195, "multipli": 195, "roughli": 195, "alloc": 195, "load_latest_polari": 197, "minu": 197, "create_polaris_load_script": 197, "load_polaris_1": 197, "0_mpich": 197, "wiki": 197, "circular_shelf": 197, "sia_smoke_test": 197, "sia_decomposition_test": 197, "sia_restart_test": 197, "fo_smoke_test": 197, "fo_decomposition_test": 197, "fo_restart_test": 197, "decomp_test": [197, 199], "37": 197, "38": 197, "17": 197, "210131_test_new_branch": 197, "fall": 197, "my_config": 197, "smaller": 197, "previous_workdir": 197, "paper": 197, "recompil": 197, "live": 197, "safer": 197, "preserv": 197, "test_subdir": 197, "whatev": 197, "job_script": 197, "wall": 197, "clock": 197, "accord": 197, "j": 197, "exclus": 197, "job_nam": 197, "wall_tim": 197, "fo_integr": [197, 199], "full_integr": [197, 199], "sia_integr": [197, 199], "cosine_bell_cached_init": [197, 199], "ec30to60": [197, 199], "ecwisc30to60": [197, 199], "qu240_for_e3sm": [197, 199], "quwisc240_for_e3sm": [197, 199], "wc14": [197, 199], "suitenam": 197, "radial": 198, "analyt": 198, "form": 198, "identifi": 198, "analysis_test": 199, "5km": 199, "20km": 199, "with_frazil": 199, "prohibit": 199}, "objects": {"polaris": [[16, 0, 1, "", "Component"], [18, 0, 1, "", "ModelStep"], [31, 0, 1, "", "Step"], [39, 0, 1, "", "TestCase"], [43, 0, 1, "", "TestGroup"]], "polaris.Component": [[16, 1, 1, "", "__init__"], [17, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[18, 1, 1, "", "__init__"], [19, 1, 1, "", "add_model_config_options"], [20, 1, 1, "", "add_namelist_file"], [21, 1, 1, "", "add_streams_file"], [22, 1, 1, "", "add_yaml_file"], [23, 1, 1, "", "dynamic_model_config"], [24, 1, 1, "", "map_yaml_to_namelist"], [25, 1, 1, "", "partition"], [26, 1, 1, "", "process_inputs_and_outputs"], [27, 1, 1, "", "runtime_setup"], [28, 1, 1, "", "set_model_resources"], [29, 1, 1, "", "setup"], [30, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[31, 1, 1, "", "__init__"], [32, 1, 1, "", "add_input_file"], [33, 1, 1, "", "add_output_file"], [34, 1, 1, "", "constrain_resources"], [35, 1, 1, "", "run"], [36, 1, 1, "", "runtime_setup"], [37, 1, 1, "", "set_resources"], [38, 1, 1, "", "setup"]], "polaris.TestCase": [[39, 1, 1, "", "__init__"], [40, 1, 1, "", "add_step"], [41, 1, 1, "", "configure"], [42, 1, 1, "", "validate"]], "polaris.TestGroup": [[43, 1, 1, "", "__init__"], [44, 1, 1, "", "add_test_case"]], "polaris.__main__": [[45, 2, 1, "", "main"]], "polaris.cache": [[46, 2, 1, "", "update_cache"]], "polaris.components": [[47, 2, 1, "", "get_components"]], "polaris.config": [[48, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[48, 1, 1, "", "__init__"]], "polaris.io": [[49, 2, 1, "", "download"], [50, 3, 0, "-", "imp_res"], [51, 2, 1, "", "symlink"]], "polaris.list": [[52, 2, 1, "", "list_cases"], [53, 2, 1, "", "list_machines"], [54, 2, 1, "", "list_suites"]], "polaris.logging": [[55, 2, 1, "", "log_method_call"]], "polaris.mesh": [[56, 0, 1, "", "IcosahedralMeshStep"], [63, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[56, 1, 1, "", "__init__"], [57, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [58, 1, 1, "", "get_cell_width"], [59, 1, 1, "", "get_subdivisions"], [60, 1, 1, "", "make_jigsaw_mesh"], [61, 1, 1, "", "run"], [62, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[63, 1, 1, "", "__init__"], [64, 1, 1, "", "build_cell_width_lat_lon"], [65, 1, 1, "", "make_jigsaw_mesh"], [66, 1, 1, "", "run"], [67, 1, 1, "", "setup"]], "polaris.mesh.spherical": [[68, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "run"], [70, 1, 1, "", "save_and_plot_cell_width"], [71, 1, 1, "", "setup"]], "polaris.model_step": [[72, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[73, 2, 1, "", "ingest"], [74, 2, 1, "", "parse_replacements"], [75, 2, 1, "", "replace"], [76, 2, 1, "", "write"]], "polaris.ocean": [[109, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[109, 1, 1, "", "__init__"]], "polaris.ocean.model": [[110, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[110, 1, 1, "", "__init__"], [111, 1, 1, "", "compute_cell_count"], [112, 1, 1, "", "constrain_resources"], [113, 1, 1, "", "map_yaml_to_namelist"], [114, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[115, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[116, 0, 1, "", "BaroclinicChannel"], [117, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[116, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[117, 1, 1, "", "__init__"], [118, 1, 1, "", "configure"], [119, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test": [[120, 0, 1, "", "DecompTest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[120, 1, 1, "", "__init__"], [121, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[122, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[122, 1, 1, "", "__init__"], [123, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[124, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[124, 1, 1, "", "__init__"], [125, 1, 1, "", "compute_cell_count"], [126, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.initial_state": [[127, 0, 1, "", "InitialState"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[127, 1, 1, "", "__init__"], [128, 1, 1, "", "run"], [129, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test": [[130, 0, 1, "", "RestartTest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[130, 1, 1, "", "__init__"], [131, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step": [[132, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test": [[134, 0, 1, "", "RpeTest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[134, 1, 1, "", "__init__"], [135, 1, 1, "", "configure"], [136, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis": [[137, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[137, 1, 1, "", "__init__"], [138, 1, 1, "", "run"], [139, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test": [[140, 0, 1, "", "ThreadsTest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[140, 1, 1, "", "__init__"], [141, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[142, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[144, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[144, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[145, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "configure"], [147, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[148, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "rmse"], [150, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[151, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "compute_cell_count"], [153, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[154, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[154, 1, 1, "", "__init__"], [155, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[156, 2, 1, "", "generate_1d_grid"], [157, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[158, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[159, 2, 1, "", "alter_bottom_depth"], [160, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[161, 2, 1, "", "compute_min_max_level_cell"], [162, 2, 1, "", "compute_z_level_layer_thickness"], [163, 2, 1, "", "compute_z_level_resting_thickness"], [164, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[165, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[77, 2, 1, "", "check_parallel_system"], [78, 2, 1, "", "get_available_cores_and_nodes"], [79, 2, 1, "", "run_command"], [80, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[81, 2, 1, "", "write"]], "polaris.run.serial": [[82, 2, 1, "", "run_single_step"], [83, 2, 1, "", "run_tests"]], "polaris.setup": [[84, 2, 1, "", "setup_case"], [85, 2, 1, "", "setup_cases"]], "polaris.streams": [[86, 2, 1, "", "read"], [87, 2, 1, "", "update_defaults"], [88, 2, 1, "", "update_tree"], [89, 2, 1, "", "write"]], "polaris.suite": [[90, 2, 1, "", "setup_suite"]], "polaris.validate": [[91, 2, 1, "", "compare_timers"], [92, 2, 1, "", "compare_variables"]], "polaris.viz": [[93, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[94, 0, 1, "", "PolarisYaml"], [98, 2, 1, "", "main_mpas_to_yaml"], [99, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [100, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[94, 1, 1, "", "__init__"], [95, 1, 1, "", "read"], [96, 1, 1, "", "update"], [97, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 5], "templat": [1, 12], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 12, 108, 179, 184, 185, 186, 187, 188, 189, 194, 195], "same": 1, "implement": 1, "test": [1, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 171, 173, 175, 176, 177, 178, 183, 193, 196, 197, 198, 199], "valid": [1, 2, 14, 42, 91, 92, 119, 121, 123, 131, 136, 141, 147, 176, 197], "api": 2, "refer": [2, 107, 108], "compon": [2, 12, 16, 17, 47, 108, 166, 172, 178, 179, 192, 197], "polari": [2, 4, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 178, 179, 182, 197], "framework": [2, 8, 107, 108, 169, 178, 190], "command": [2, 4, 6], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 6, 52, 53, 54], "setup": [2, 4, 6, 29, 38, 62, 67, 71, 84, 85, 114, 129, 139, 174], "suit": [2, 4, 6, 90, 175, 193, 197, 199], "run": [2, 6, 12, 35, 61, 66, 69, 82, 83, 108, 128, 138, 143, 150, 155, 174, 179, 197], "cach": [2, 4, 6, 46, 174], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 178], "testgroup": [2, 43, 44], "testcas": [2, 39, 40, 41, 42, 176], "step": [2, 31, 32, 33, 34, 35, 36, 37, 38, 174, 195], "modelstep": [2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "config": [2, 7, 12, 48, 108, 183, 184, 185, 186, 187, 188, 189, 194, 195], "io": [2, 9, 49, 50, 51], "log": [2, 10, 55], "mesh": [2, 11, 12, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 170], "model_step": [2, 72], "namelist": [2, 12, 73, 74, 75, 76, 108], "parallel": [2, 77, 78, 79, 80], "proven": [2, 13, 81], "stream": [2, 12, 86, 87, 88, 89, 108], "viz": [2, 93, 142, 143], "yaml": [2, 12, 94, 95, 96, 97, 98, 99, 100, 108], "build": [3, 179, 197], "serial": [4, 6, 82, 83], "docstr": 5, "modul": [6, 178, 179], "clean": 6, "file": [7, 12, 108, 174, 183], "comment": 7, "symlink": [9, 51, 174], "download": [9, 49, 174], "spheric": [11, 68, 69, 70, 71], "planar": 11, "uniform": [11, 191], "gener": 11, "model": [12, 108, 110, 111, 112, 113, 114, 167, 197], "an": [12, 108], "e3sm": [12, 108, 179, 197], "ad": 12, "updat": [12, 96, 179], "runtim": 12, "input": [12, 174], "partit": [12, 25], "pio": 12, "make": 12, "graph": 12, "variabl": 14, "norm": 14, "timer": 14, "visual": 15, "add_test_group": 17, "add_model_config_opt": 19, "add_namelist_fil": 20, "add_streams_fil": 21, "add_yaml_fil": 22, "dynamic_model_config": [23, 126, 133, 153], "map_yaml_to_namelist": [24, 113], "process_inputs_and_output": 26, "runtime_setup": [27, 36, 174], "set_model_resourc": 28, "update_namelist_pio": 30, "add_input_fil": 32, "add_output_fil": 33, "constrain_resourc": [34, 112, 174], "set_resourc": 37, "add_step": 40, "configur": [41, 118, 135, 146, 176, 180], "add_test_cas": 44, "__main__": 45, "main": 45, "update_cach": 46, "get_compon": 47, "polarisconfigpars": 48, "imp_r": 50, "list_cas": 52, "list_machin": 53, "list_suit": 54, "log_method_cal": 55, "icosahedralmeshstep": [56, 57, 58, 59, 60, 61, 62], "build_subdivisions_cell_width_lat_lon": 57, "get_cell_width": 58, "get_subdivis": 59, "make_jigsaw_mesh": [60, 65], "quasiuniformsphericalmeshstep": [63, 64, 65, 66, 67], "build_cell_width_lat_lon": 64, "sphericalbasestep": [68, 69, 70, 71], "save_and_plot_cell_width": 70, "make_graph_fil": 72, "ingest": 73, "parse_replac": 74, "replac": 75, "write": [76, 81, 89, 97], "check_parallel_system": 77, "get_available_cores_and_nod": 78, "run_command": 79, "set_cores_per_nod": 80, "run_single_step": 82, "run_test": 83, "setup_cas": [84, 85], "read": [86, 95], "update_default": 87, "update_tre": 88, "setup_suit": 90, "compare_tim": 91, "compare_vari": 92, "plot_horiz_field": 93, "polarisyaml": [94, 95, 96, 97], "main_mpas_to_yaml": 98, "mpas_namelist_and_streams_to_yaml": 99, "yaml_to_mpas_stream": 100, "anvil": [101, 184], "intel": [101, 103, 104, 184, 186, 187], "gnu": [101, 102, 103, 104, 106, 184, 185, 186, 189], "chicoma": [102, 185], "cpu": [102, 106, 185, 189], "chrysali": [103, 186], "compymcnodefac": [104, 187], "machin": [105, 179, 188, 197], "support": [105, 167, 179, 188, 197], "other": [105, 188, 197], "perlmutt": [106, 189], "pm": 106, "ocean": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 192], "group": [107, 171, 177, 178, 196], "baroclinic_channel": [107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 169, 194], "global_converg": [107, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 170, 195], "cosine_bel": [107, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 170, 193, 195], "oceanmodelstep": [107, 110, 111, 112, 113, 114], "potenti": [107, 108], "energi": [107, 108], "rpe": [107, 108, 115], "vertic": [107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 191], "coordin": [107, 108, 191], "v": 108, "map": 108, "from": [108, 174, 179, 188], "omega": 108, "mpa": [108, 168], "set": [108, 179, 197], "mpi": [108, 188], "resourc": 108, "rest": 108, "compute_cell_count": [111, 125, 152], "compute_rp": 115, "baroclinicchannel": 116, "baroclinicchanneltestcas": [117, 118, 119], "decomp_test": [120, 121, 169, 194], "decomptest": [120, 121], "default": [122, 123, 169, 194], "forward": [124, 125, 126, 151, 152, 153, 169, 170], "initial_st": [127, 128, 129, 169], "initialst": [127, 128, 129], "restart_test": [130, 131, 132, 133, 169, 194], "restarttest": [130, 131], "restart_step": [132, 133], "restartstep": [132, 133], "rpe_test": [134, 135, 136, 137, 138, 139, 169, 194], "rpetest": [134, 135, 136], "analysi": [137, 138, 139, 148, 149, 150, 170], "threads_test": [140, 141, 169], "threadstest": [140, 141], "globalconverg": 144, "cosinebel": [145, 146, 147], "rmse": 149, "init": [154, 155, 170], "grid_1d": [156, 157], "generate_1d_grid": 156, "write_1d_grid": 157, "init_vertical_coord": 158, "partial_cel": [159, 160], "alter_bottom_depth": 159, "alter_ssh": 160, "zlevel": [161, 162, 163, 164], "compute_min_max_level_cel": 161, "compute_z_level_layer_thick": 162, "compute_z_level_resting_thick": 163, "init_z_level_vertical_coord": 164, "zstar": 165, "init_z_star_vertical_coord": 165, "initi": 168, "condit": 168, "boundari": 168, "forc": 168, "baroclinic_channel_test_cas": 169, "type": [170, 191], "organ": 173, "directori": 173, "structur": 173, "attribut": [174, 176], "constructor": [174, 176], "output": 174, "copi": 174, "pull": 175, "request": 175, "pr": 175, "nightli": 175, "case": [176, 178, 183, 197, 198], "overview": 178, "code": [178, 179], "style": [178, 179], "packag": 178, "share": 178, "within": 178, "quick": [179, 197], "start": [179, 197], "develop": [179, 182], "unix": 179, "shell": 179, "up": [179, 197], "repositori": 179, "beginn": 179, "conda": [179, 180, 188, 197], "environ": [179, 180, 197], "spack": [179, 197], "compil": 179, "system": 179, "albani": 179, "petsc": 179, "netlib": 179, "lapack": 179, "unknown": 179, "what": 179, "script": [179, 197], "doe": 179, "flag": 179, "activ": 179, "troubleshoot": [179, 180], "creat": 179, "onli": 179, "repo": 179, "worktre": 179, "advanc": 179, "user": [179, 182, 183, 197], "solver": 180, "error": 180, "when": 180, "proxi": 180, "lanl": 180, "mac": 180, "gethostbynam": 180, "fail": 180, "glossari": [181, 182], "": 182, "guid": 182, "compass": 182, "A": 183, "slurm": 188, "job": [188, 197], "queue": 188, "mpich": 188, "openmpi": 188, "No": 188, "forg": 188, "jupyt": 189, "notebook": 189, "remot": 189, "data": 189, "1d": 191, "grid": 191, "tanh_dz": 191, "60layerphc": 191, "100layere3smv1": 191, "3d": 191, "z": 191, "star": 191, "level": 191, "cosine_bell_cached_init": 193, "thread_test": 194, "resolut": 195, "time": 195, "core": 195, "i": 197, "yet": 197, "load": 197, "standalon": 197}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [172, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [170, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Documentation": [[5, "documentation"]], "Docstrings": [[5, "docstrings"]], "Modules for polaris commands": [[6, "modules-for-polaris-commands"]], "list module": [[6, "list-module"]], "setup module": [[6, "setup-module"]], "clean module": [[6, "clean-module"]], "suite module": [[6, "suite-module"]], "run.serial module": [[6, "run-serial-module"]], "cache module": [[6, "cache-module"]], "Config files": [[7, "config-files"]], "Comments in config files": [[7, "comments-in-config-files"]], "Framework": [[8, "framework"], [190, "framework"]], "IO": [[9, "io"]], "Symlinks": [[9, "symlinks"]], "Download": [[9, "download"]], "Logging": [[10, "logging"]], "Mesh": [[11, "mesh"]], "Spherical Meshes": [[11, "spherical-meshes"]], "Planar Meshes": [[11, "planar-meshes"]], "Uniform planar meshes": [[11, "uniform-planar-meshes"]], "General planar meshes": [[11, "general-planar-meshes"]], "Model": [[12, "model"], [108, "model"]], "Running an E3SM component": [[12, "running-an-e3sm-component"], [108, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[12, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[12, "adding-a-yaml-file"]], "Adding a namelist file": [[12, "adding-a-namelist-file"]], "Adding model config options": [[12, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[12, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[12, "adding-a-streams-file"]], "Adding a template streams file": [[12, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[12, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[12, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[12, "partitioning-the-mesh"]], "Updating PIO namelist options": [[12, "updating-pio-namelist-options"]], "Making a graph file": [[12, "making-a-graph-file"]], "Provenance": [[13, "provenance"]], "Validation": [[14, "validation"]], "Validating variables": [[14, "validating-variables"]], "Norms": [[14, "norms"]], "Validating timers": [[14, "validating-timers"]], "Visualization": [[15, "visualization"]], "polaris.Component": [[16, "polaris-component"]], "polaris.Component.add_test_group": [[17, "polaris-component-add-test-group"]], "polaris.ModelStep": [[18, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[19, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[20, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[21, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[22, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[23, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[24, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[25, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[26, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[27, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[28, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[29, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[30, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[31, "polaris-step"]], "polaris.Step.add_input_file": [[32, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[33, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[34, "polaris-step-constrain-resources"]], "polaris.Step.run": [[35, "polaris-step-run"]], "polaris.Step.runtime_setup": [[36, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[37, "polaris-step-set-resources"]], "polaris.Step.setup": [[38, "polaris-step-setup"]], "polaris.TestCase": [[39, "polaris-testcase"]], "polaris.TestCase.add_step": [[40, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[41, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[42, "polaris-testcase-validate"]], "polaris.TestGroup": [[43, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[44, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[45, "polaris-main-main"]], "polaris.cache.update_cache": [[46, "polaris-cache-update-cache"]], "polaris.components.get_components": [[47, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[48, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[49, "polaris-io-download"]], "polaris.io.imp_res": [[50, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[51, "polaris-io-symlink"]], "polaris.list.list_cases": [[52, "polaris-list-list-cases"]], "polaris.list.list_machines": [[53, "polaris-list-list-machines"]], "polaris.list.list_suites": [[54, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[55, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[56, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[57, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[58, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[59, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[60, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[61, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[62, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[63, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[64, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[65, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[66, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[67, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.spherical.SphericalBaseStep": [[68, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[69, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[70, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[71, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[72, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[73, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[74, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[75, "polaris-namelist-replace"]], "polaris.namelist.write": [[76, "polaris-namelist-write"]], "polaris.parallel.check_parallel_system": [[77, "polaris-parallel-check-parallel-system"]], "polaris.parallel.get_available_cores_and_nodes": [[78, "polaris-parallel-get-available-cores-and-nodes"]], "polaris.parallel.run_command": [[79, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[80, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[81, "polaris-provenance-write"]], "polaris.run.serial.run_single_step": [[82, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[83, "polaris-run-serial-run-tests"]], "polaris.setup.setup_case": [[84, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[85, "polaris-setup-setup-cases"]], "polaris.streams.read": [[86, "polaris-streams-read"]], "polaris.streams.update_defaults": [[87, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[88, "polaris-streams-update-tree"]], "polaris.streams.write": [[89, "polaris-streams-write"]], "polaris.suite.setup_suite": [[90, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[91, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[92, "polaris-validate-compare-variables"]], "polaris.viz.plot_horiz_field": [[93, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[94, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[95, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[96, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[97, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[98, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[99, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[100, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[101, "anvil"], [184, "anvil"]], "intel": [[101, "intel"], [103, "intel"], [104, "intel"]], "gnu": [[101, "gnu"], [103, "gnu"], [104, "gnu"]], "Chicoma": [[102, "chicoma"], [185, "chicoma"]], "chicoma-cpu, gnu": [[102, "chicoma-cpu-gnu"]], "Chrysalis": [[103, "chrysalis"], [186, "chrysalis"]], "CompyMcNodeFace": [[104, "compymcnodeface"], [187, "compymcnodeface"]], "Machines": [[105, "machines"], [188, "machines"]], "Supported Machines": [[105, "supported-machines"], [188, "supported-machines"]], "Other Machines": [[105, "other-machines"], [188, "other-machines"]], "Perlmutter": [[106, "perlmutter"], [189, "perlmutter"]], "pm-cpu, gnu": [[106, "pm-cpu-gnu"]], "ocean": [[107, "ocean"]], "Test Groups": [[107, "test-groups"], [177, "test-groups"]], "baroclinic_channel": [[107, "baroclinic-channel"], [169, "baroclinic-channel"], [194, "baroclinic-channel"]], "global_convergence": [[107, "global-convergence"], [170, "global-convergence"], [195, "global-convergence"]], "cosine_bell": [[107, "cosine-bell"], [170, "cosine-bell"], [195, "cosine-bell"]], "Ocean Framework": [[107, "ocean-framework"]], "OceanModelStep": [[107, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[107, "reference-potential-energy-rpe"]], "Vertical coordinates": [[107, "vertical-coordinates"]], "Ocean framework": [[108, "ocean-framework"]], "YAML files vs. namelists and streams": [[108, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[108, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[108, "setting-mpi-resources"]], "Model config options and streams": [[108, "model-config-options-and-streams"]], "Vertical coordinate": [[108, "vertical-coordinate"], [191, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[108, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[109, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[110, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[111, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[112, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[113, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[114, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[115, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[116, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[117, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure": [[118, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-configure"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[119, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest": [[120, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest"]], "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate": [[121, "polaris-ocean-tests-baroclinic-channel-decomp-test-decomptest-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[122, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[123, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[124, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[125, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[126, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState": [[127, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run": [[128, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-run"]], "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup": [[129, "polaris-ocean-tests-baroclinic-channel-initial-state-initialstate-setup"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest": [[130, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest"]], "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate": [[131, "polaris-ocean-tests-baroclinic-channel-restart-test-restarttest-validate"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep": [[132, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config": [[133, "polaris-ocean-tests-baroclinic-channel-restart-test-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest": [[134, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure": [[135, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate": [[136, "polaris-ocean-tests-baroclinic-channel-rpe-test-rpetest-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis": [[137, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run": [[138, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup": [[139, "polaris-ocean-tests-baroclinic-channel-rpe-test-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest": [[140, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest"]], "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate": [[141, "polaris-ocean-tests-baroclinic-channel-threads-test-threadstest-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[142, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[143, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[144, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[145, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[146, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[147, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[148, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[149, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[150, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[151, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[152, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[153, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[154, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[155, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[156, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[157, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[158, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[159, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[160, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[161, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[162, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[163, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[164, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[165, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[166, "ocean-component"], [192, "ocean-component"]], "Models": [[167, "models"]], "Supported Models": [[167, "supported-models"]], "MPAS-Ocean": [[168, "mpas-ocean"]], "Initial conditions": [[168, "initial-conditions"]], "Boundary conditions": [[168, "boundary-conditions"]], "Forcing": [[168, "forcing"]], "framework": [[169, "framework"]], "baroclinic_channel_test_case": [[169, "baroclinic-channel-test-case"]], "initial_state": [[169, "initial-state"]], "forward": [[169, "forward"], [170, "forward"]], "default": [[169, "default"], [194, "default"]], "decomp_test": [[169, "decomp-test"], [194, "decomp-test"]], "restart_test": [[169, "restart-test"], [194, "restart-test"]], "threads_test": [[169, "threads-test"]], "rpe_test": [[169, "rpe-test"], [194, "rpe-test"]], "mesh types": [[170, "mesh-types"]], "init": [[170, "init"]], "analysis": [[170, "analysis"]], "Test groups": [[171, "test-groups"], [196, "test-groups"]], "Organization of Tests": [[173, "organization-of-tests"]], "Directory structure": [[173, "directory-structure"]], "Steps": [[174, "steps"]], "Step attributes": [[174, "step-attributes"]], "constructor": [[174, "constructor"], [176, "constructor"]], "constrain_resources()": [[174, "constrain-resources"]], "setup()": [[174, "setup"]], "runtime_setup()": [[174, "runtime-setup"]], "run()": [[174, "run"]], "inputs and outputs": [[174, "inputs-and-outputs"]], "Input files": [[174, "input-files"]], "Symlinks to input files": [[174, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[174, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[174, "downloading-and-symlinking-input-files"]], "Copying input files": [[174, "copying-input-files"]], "Output files": [[174, "output-files"]], "Cached output files": [[174, "cached-output-files"]], "Test Suites": [[175, "test-suites"], [197, "test-suites"], [199, "test-suites"]], "Pull-Request (PR) suite": [[175, "pull-request-pr-suite"]], "Nightly suite": [[175, "nightly-suite"]], "Test cases": [[176, "test-cases"]], "TestCase attributes": [[176, "testcase-attributes"]], "configure()": [[176, "configure"]], "validate()": [[176, "validate"]], "Overview": [[178, "overview"]], "Code Style": [[178, "code-style"]], "Packages and Modules": [[178, "packages-and-modules"]], "Packages": [[178, "packages"]], "Modules": [[178, "modules"]], "Classes": [[178, "classes"]], "Code sharing": [[178, "code-sharing"]], "\u2026in the polaris framework": [[178, "in-the-polaris-framework"]], "\u2026within a component": [[178, "within-a-component"]], "\u2026within a test group": [[178, "within-a-test-group"]], "\u2026within a test case": [[178, "within-a-test-case"]], "Quick Start for Developers": [[179, "quick-start-for-developers"]], "Unix Shell": [[179, "unix-shell"]], "Set up a polaris repository: for beginners": [[179, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[179, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[179, "supported-machines"]], "Environments with Albany": [[179, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[179, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[179, "unknown-machines"]], "What the script does": [[179, "what-the-script-does"]], "Optional flags": [[179, "optional-flags"]], "Activating the environment": [[179, "activating-the-environment"]], "Troubleshooting": [[179, "troubleshooting"], [180, "troubleshooting"]], "Creating/updating only the polaris environment": [[179, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[179, "building-e3sm-components"]], "Running polaris from the repo": [[179, "running-polaris-from-the-repo"]], "Code style for polaris": [[179, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[179, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "Solver errors when configuring conda environment": [[180, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[180, "proxy-on-lanl-macs"]], "gethostbyname failed": [[180, "gethostbyname-failed"]], "Glossary": [[181, "glossary"], [182, null]], "Polaris": [[182, "polaris"]], "User's guide": [[182, null]], "Developer's guide": [[182, null]], "Compass": [[182, "compass"]], "Config Files": [[183, "config-files"]], "A \u201cuser\u201d config file": [[183, "a-user-config-file"]], "Test-case config files": [[183, "test-case-config-files"]], "config options": [[184, "config-options"], [185, "config-options"], [186, "config-options"], [187, "config-options"], [188, "config-options"], [189, "config-options"], [194, "config-options"], [195, "config-options"]], "Intel on Anvil": [[184, "intel-on-anvil"]], "Gnu on Anvil": [[184, "gnu-on-anvil"]], "Chicoma-CPU": [[185, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[185, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[186, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[186, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[187, "intel-on-compymcnodeface"]], "Slurm job queueing": [[188, "slurm-job-queueing"]], "MPICH": [[188, "mpich"]], "OpenMPI": [[188, "openmpi"]], "No MPI from conda-forge": [[188, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[189, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[189, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[189, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[191, "d-grid-type"]], "uniform": [[191, "uniform"]], "tanh_dz": [[191, "tanh-dz"]], "60layerPHC": [[191, "layerphc"]], "100layerE3SMv1": [[191, "layere3smv1"]], "3D vertical coordinates": [[191, "d-vertical-coordinates"]], "z-star": [[191, "z-star"]], "z-level": [[191, "z-level"]], "Test suites": [[193, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[193, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "thread_test": [[194, "thread-test"]], "resolutions": [[195, "resolutions"]], "time step": [[195, "time-step"]], "cores": [[195, "cores"]], "Quick Start for Users": [[197, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[197, null]], "Loading polaris conda and spack environments": [[197, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[197, "e3sm-supported-machines"]], "Other machines": [[197, "other-machines"]], "Building supported E3SM components as standalone models": [[197, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[197, "setting-up-test-cases"]], "Running a test case": [[197, "running-a-test-case"]], "Running with a job script": [[197, "running-with-a-job-script"]], "Test Cases": [[198, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[16, "polaris.Component"]], "__init__() (polaris.component method)": [[16, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[17, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[18, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[18, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[19, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[20, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[23, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[24, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[25, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[26, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[27, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[28, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[29, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[30, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[31, "polaris.Step"]], "__init__() (polaris.step method)": [[31, "polaris.Step.__init__"]], "add_input_file() (polaris.step method)": [[32, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[33, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[34, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[35, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[36, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[37, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[38, "polaris.Step.setup"]], "testcase (class in polaris)": [[39, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[39, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[40, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[41, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[42, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[43, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[43, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[44, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[45, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[46, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[47, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[48, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[48, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[49, "polaris.io.download"]], "module": [[50, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[50, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[51, "polaris.io.symlink"]], "list_cases() (in module polaris.list)": [[52, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[53, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[54, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[55, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[56, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[56, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[57, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[58, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[59, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[60, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[63, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[63, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[64, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[65, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[66, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[67, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[68, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[68, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[69, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[70, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[71, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[72, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[73, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[74, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[75, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[76, "polaris.namelist.write"]], "check_parallel_system() (in module polaris.parallel)": [[77, "polaris.parallel.check_parallel_system"]], "get_available_cores_and_nodes() (in module polaris.parallel)": [[78, "polaris.parallel.get_available_cores_and_nodes"]], "run_command() (in module polaris.parallel)": [[79, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[80, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[81, "polaris.provenance.write"]], "run_single_step() (in module polaris.run.serial)": [[82, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[83, "polaris.run.serial.run_tests"]], "setup_case() (in module polaris.setup)": [[84, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[85, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[86, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[87, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[88, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[89, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[90, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[91, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[92, "polaris.validate.compare_variables"]], "plot_horiz_field() (in module polaris.viz)": [[93, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[94, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[94, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[95, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[96, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[97, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[98, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[99, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[100, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[109, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[109, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[110, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[110, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[111, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[112, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[113, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[114, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[115, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[116, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[116, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[117, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[117, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[118, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[119, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomptest (class in polaris.ocean.tests.baroclinic_channel.decomp_test)": [[120, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[120, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp_test.decomptest method)": [[121, "polaris.ocean.tests.baroclinic_channel.decomp_test.DecompTest.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[122, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[122, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[123, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[124, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[124, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[125, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[126, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "initialstate (class in polaris.ocean.tests.baroclinic_channel.initial_state)": [[127, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState"]], "__init__() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[127, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[128, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.initial_state.initialstate method)": [[129, "polaris.ocean.tests.baroclinic_channel.initial_state.InitialState.setup"]], "restarttest (class in polaris.ocean.tests.baroclinic_channel.restart_test)": [[130, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[130, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart_test.restarttest method)": [[131, "polaris.ocean.tests.baroclinic_channel.restart_test.RestartTest.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart_test.restart_step)": [[132, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[132, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.restartstep method)": [[133, "polaris.ocean.tests.baroclinic_channel.restart_test.restart_step.RestartStep.dynamic_model_config"]], "rpetest (class in polaris.ocean.tests.baroclinic_channel.rpe_test)": [[134, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[134, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[135, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe_test.rpetest method)": [[136, "polaris.ocean.tests.baroclinic_channel.rpe_test.RpeTest.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe_test.analysis)": [[137, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[137, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[138, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.analysis method)": [[139, "polaris.ocean.tests.baroclinic_channel.rpe_test.analysis.Analysis.setup"]], "threadstest (class in polaris.ocean.tests.baroclinic_channel.threads_test)": [[140, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[140, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads_test.threadstest method)": [[141, "polaris.ocean.tests.baroclinic_channel.threads_test.ThreadsTest.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[142, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[142, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[143, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[144, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[144, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[145, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[145, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[146, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[147, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[148, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[148, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[149, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[150, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[151, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[151, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[152, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[153, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[154, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[154, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[155, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[156, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[157, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[158, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[159, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[160, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[161, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[162, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[163, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[164, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[165, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]]}})