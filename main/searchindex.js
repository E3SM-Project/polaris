Search.setIndex({"docnames": ["design_docs/index", "design_docs/shared_steps", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/mpas", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_config", "developers_guide/generated/polaris.Component.add_step", "developers_guide/generated/polaris.Component.add_task", "developers_guide/generated/polaris.Component.remove_step", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.set_shared_config", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.Step.validate_baselines", "developers_guide/generated/polaris.Task", "developers_guide/generated/polaris.Task.add_step", "developers_guide/generated/polaris.Task.configure", "developers_guide/generated/polaris.Task.remove_step", "developers_guide/generated/polaris.Task.set_shared_config", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.config.PolarisConfigParser.setup", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.mpas.area_for_field", "developers_guide/generated/polaris.mpas.time_index_from_xtime", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.complete_step_run", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tasks", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_task", "developers_guide/generated/polaris.setup.setup_tasks", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field", "developers_guide/generated/polaris.viz.plot_global_mpas_field", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.viz.use_mplstyle", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/tasks/baroclinic_channel", "developers_guide/ocean/tasks/correlated_tracers_2d", "developers_guide/ocean/tasks/cosine_bell", "developers_guide/ocean/tasks/divergent_2d", "developers_guide/ocean/tasks/geostrophic", "developers_guide/ocean/tasks/index", "developers_guide/ocean/tasks/inertial_gravity_wave", "developers_guide/ocean/tasks/manufactured_solution", "developers_guide/ocean/tasks/nondivergent_2d", "developers_guide/ocean/tasks/rotation_2d", "developers_guide/ocean/tasks/single_column", "developers_guide/organization/categories_of_tasks", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/tasks", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/mpas_seaice", "developers_guide/seaice/tasks/index", "developers_guide/seaice/tasks/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/tasks/baroclinic_channel", "users_guide/ocean/tasks/correlated_tracers_2d", "users_guide/ocean/tasks/cosine_bell", "users_guide/ocean/tasks/divergent_2d", "users_guide/ocean/tasks/geostrophic", "users_guide/ocean/tasks/index", "users_guide/ocean/tasks/inertial_gravity_wave", "users_guide/ocean/tasks/manufactured_solution", "users_guide/ocean/tasks/nondivergent_2d", "users_guide/ocean/tasks/rotation_2d", "users_guide/ocean/tasks/single_column", "users_guide/ocean/tasks/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/tasks/index", "users_guide/seaice/tasks/single_column", "users_guide/seaice/tasks/template", "users_guide/suites", "users_guide/tasks"], "filenames": ["design_docs/index.md", "design_docs/shared_steps.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/mpas.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_config.rst", "developers_guide/generated/polaris.Component.add_step.rst", "developers_guide/generated/polaris.Component.add_task.rst", "developers_guide/generated/polaris.Component.remove_step.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.set_shared_config.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.Step.validate_baselines.rst", "developers_guide/generated/polaris.Task.rst", "developers_guide/generated/polaris.Task.add_step.rst", "developers_guide/generated/polaris.Task.configure.rst", "developers_guide/generated/polaris.Task.remove_step.rst", "developers_guide/generated/polaris.Task.set_shared_config.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.setup.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.mpas.area_for_field.rst", "developers_guide/generated/polaris.mpas.time_index_from_xtime.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.complete_step_run.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tasks.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_task.rst", "developers_guide/generated/polaris.setup.setup_tasks.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.plot_global_lat_lon_field.rst", "developers_guide/generated/polaris.viz.plot_global_mpas_field.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.viz.use_mplstyle.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.compute_error.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceAnalysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.ConvergenceForward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.rst", "developers_guide/ocean/generated/polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.mesh.spherical.add_spherical_base_mesh_step.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.model.get_time_interval_string.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.validate.Validate.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.init.cosine_bell.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.Geostrophic.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.add_geostrophic_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.geostrophic.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.add_single_column_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.SphereTransport.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tasks.sphere_transport.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/tasks/baroclinic_channel.md", "developers_guide/ocean/tasks/correlated_tracers_2d.md", "developers_guide/ocean/tasks/cosine_bell.md", "developers_guide/ocean/tasks/divergent_2d.md", "developers_guide/ocean/tasks/geostrophic.md", "developers_guide/ocean/tasks/index.md", "developers_guide/ocean/tasks/inertial_gravity_wave.md", "developers_guide/ocean/tasks/manufactured_solution.md", "developers_guide/ocean/tasks/nondivergent_2d.md", "developers_guide/ocean/tasks/rotation_2d.md", "developers_guide/ocean/tasks/single_column.md", "developers_guide/organization/categories_of_tasks.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/tasks.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.add_single_column_tasks.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/mpas_seaice.md", "developers_guide/seaice/tasks/index.md", "developers_guide/seaice/tasks/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/tasks/baroclinic_channel.md", "users_guide/ocean/tasks/correlated_tracers_2d.md", "users_guide/ocean/tasks/cosine_bell.md", "users_guide/ocean/tasks/divergent_2d.md", "users_guide/ocean/tasks/geostrophic.md", "users_guide/ocean/tasks/index.md", "users_guide/ocean/tasks/inertial_gravity_wave.md", "users_guide/ocean/tasks/manufactured_solution.md", "users_guide/ocean/tasks/nondivergent_2d.md", "users_guide/ocean/tasks/rotation_2d.md", "users_guide/ocean/tasks/single_column.md", "users_guide/ocean/tasks/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/tasks/index.md", "users_guide/seaice/tasks/single_column.md", "users_guide/seaice/tasks/template.md", "users_guide/suites.md", "users_guide/tasks.md"], "titles": ["Design Documents", "Shared steps", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "MPAS", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_config", "polaris.Component.add_step", "polaris.Component.add_task", "polaris.Component.remove_step", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.set_shared_config", "polaris.Step.setup", "polaris.Step.validate_baselines", "polaris.Task", "polaris.Task.add_step", "polaris.Task.configure", "polaris.Task.remove_step", "polaris.Task.set_shared_config", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.config.PolarisConfigParser.setup", "polaris.io.download", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.mpas.area_for_field", "polaris.mpas.time_index_from_xtime", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.complete_step_run", "polaris.run.load_dependencies", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tasks", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_task", "polaris.setup.setup_tasks", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_variables", "polaris.viz.plot_global_lat_lon_field", "polaris.viz.plot_global_mpas_field", "polaris.viz.plot_horiz_field", "polaris.viz.use_mplstyle", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.convergence.ConvergenceAnalysis", "polaris.ocean.convergence.ConvergenceAnalysis.compute_error", "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters", "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution", "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field", "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence", "polaris.ocean.convergence.ConvergenceAnalysis.run", "polaris.ocean.convergence.ConvergenceAnalysis.setup", "polaris.ocean.convergence.ConvergenceForward", "polaris.ocean.convergence.ConvergenceForward.compute_cell_count", "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config", "polaris.ocean.convergence.spherical.SphericalConvergenceForward", "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count", "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.model.get_time_interval_string", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks", "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp", "polaris.ocean.tasks.baroclinic_channel.default.Default", "polaris.ocean.tasks.baroclinic_channel.forward.Forward", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.init.Init", "polaris.ocean.tasks.baroclinic_channel.init.Init.run", "polaris.ocean.tasks.baroclinic_channel.init.Init.setup", "polaris.ocean.tasks.baroclinic_channel.restart.Restart", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe", "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tasks.baroclinic_channel.threads.Threads", "polaris.ocean.tasks.baroclinic_channel.validate.Validate", "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run", "polaris.ocean.tasks.baroclinic_channel.viz.Viz", "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run", "polaris.ocean.tasks.cosine_bell.CosineBell", "polaris.ocean.tasks.cosine_bell.CosineBell.configure", "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks", "polaris.ocean.tasks.cosine_bell.analysis.Analysis", "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution", "polaris.ocean.tasks.cosine_bell.forward.Forward", "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tasks.cosine_bell.init.Init", "polaris.ocean.tasks.cosine_bell.init.Init.run", "polaris.ocean.tasks.cosine_bell.init.cosine_bell", "polaris.ocean.tasks.cosine_bell.viz.Viz", "polaris.ocean.tasks.cosine_bell.viz.Viz.run", "polaris.ocean.tasks.geostrophic.Geostrophic", "polaris.ocean.tasks.geostrophic.Geostrophic.configure", "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks", "polaris.ocean.tasks.geostrophic.analysis.Analysis", "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution", "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field", "polaris.ocean.tasks.geostrophic.forward.Forward", "polaris.ocean.tasks.geostrophic.init.Init", "polaris.ocean.tasks.geostrophic.init.Init.run", "polaris.ocean.tasks.geostrophic.viz.Viz", "polaris.ocean.tasks.geostrophic.viz.Viz.run", "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward", "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tasks.inertial_gravity_wave.init.Init", "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz", "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution", "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis", "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tasks.manufactured_solution.forward.Forward", "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tasks.manufactured_solution.init.Init", "polaris.ocean.tasks.manufactured_solution.init.Init.run", "polaris.ocean.tasks.manufactured_solution.viz.Viz", "polaris.ocean.tasks.manufactured_solution.viz.Viz.run", "polaris.ocean.tasks.single_column.add_single_column_tasks", "polaris.ocean.tasks.single_column.cvmix.CVMix", "polaris.ocean.tasks.single_column.forward.Forward", "polaris.ocean.tasks.single_column.ideal_age.IdealAge", "polaris.ocean.tasks.single_column.init.Init", "polaris.ocean.tasks.single_column.init.Init.run", "polaris.ocean.tasks.single_column.viz.Viz", "polaris.ocean.tasks.single_column.viz.Viz.run", "polaris.ocean.tasks.sphere_transport.SphereTransport", "polaris.ocean.tasks.sphere_transport.SphereTransport.configure", "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks", "polaris.ocean.tasks.sphere_transport.analysis.Analysis", "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis", "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run", "polaris.ocean.tasks.sphere_transport.forward.Forward", "polaris.ocean.tasks.sphere_transport.init.Init", "polaris.ocean.tasks.sphere_transport.init.Init.run", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis", "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run", "polaris.ocean.tasks.sphere_transport.viz.Viz", "polaris.ocean.tasks.sphere_transport.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "correlated_tracers_2d", "cosine_bell", "divergent_2d", "geostrophic", "Tasks", "inertial_gravity_wave", "manufactured_solution", "nondivergent_2d", "rotation_2d", "single_column", "Categories of tasks", "Components", "Directory structure", "Organization of Tasks", "Steps", "Suites", "Tasks", "Overview", "Quick Start for Developers", "seaice", "SeaIce framework", "polaris.seaice.SeaIce", "polaris.seaice.tasks.single_column.add_single_column_tasks", "polaris.seaice.tasks.single_column.exact_restart.ExactRestart", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate", "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run", "polaris.seaice.tasks.single_column.forward.Forward", "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz", "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run", "SeaIce component", "Supported Model: MPAS-Seaice", "Tasks", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Suites", "baroclinic channel", "correlated tracers 2-d", "cosine bell", "divergent 2-d", "geostrophic", "Tasks", "inertial gravity wave", "manufactured solution", "nondivergent 2-d", "rotation 2-d", "single column", "<Category of task>", "Quick Start for Users", "Sea ice component", "Tasks", "single column", "<Category of task>", "Suites", "Tasks"], "terms": {"share": [0, 7, 19, 21, 38, 46, 49, 50, 53, 136, 139, 154, 163, 164, 171, 174, 179, 184, 197, 242, 266, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 284, 286, 288, 290, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 319, 320, 321, 322, 327, 328, 329, 330, 331, 335, 337], "step": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 35, 49, 50, 52, 55, 67, 72, 74, 77, 80, 81, 91, 93, 95, 96, 102, 107, 108, 109, 110, 113, 114, 136, 139, 141, 147, 149, 151, 152, 154, 155, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 191, 192, 193, 195, 196, 197, 200, 203, 204, 205, 206, 207, 210, 215, 217, 218, 219, 220, 223, 228, 230, 231, 232, 233, 236, 238, 239, 240, 241, 242, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 294, 295, 296, 298, 299, 303, 305, 306, 308, 314, 316, 336, 337], "templat": [0, 5, 6, 7, 28, 29, 30, 115, 126, 130, 136, 139, 149, 152, 167, 173, 270, 271, 272, 277, 278, 306, 307, 308], "date": [1, 2, 5, 55, 266, 282, 288, 300, 308], "2023": [1, 17, 325, 326], "08": [1, 307, 319], "18": [1, 6, 308, 310], "contributor": [1, 2], "carolyn": 1, "begeman": 1, "xylar": [1, 6, 18, 136, 307, 308, 313], "asai": [1, 308], "davi": [1, 308], "capabl": [1, 2, 6, 17, 136, 284, 287, 307, 313, 331], "design": [1, 136, 267, 284, 286, 287, 306, 313, 319], "here": [1, 6, 9, 12, 14, 17, 18, 136, 139, 269, 279, 280, 283, 284, 286, 287, 288, 303, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 327, 328, 329, 330, 331, 335, 336], "abil": [1, 7, 320, 327], "across": [1, 6, 7, 9, 14, 19, 139, 269, 280, 284, 285, 286, 287, 288, 305, 307, 315, 319, 320, 321, 322, 327, 328], "In": [1, 2, 6, 7, 8, 9, 11, 14, 17, 18, 38, 136, 139, 280, 282, 284, 285, 286, 287, 288, 306, 307, 308, 313, 316, 321, 323, 330, 331, 335, 336, 337], "thi": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 24, 25, 30, 31, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 62, 66, 68, 71, 72, 75, 76, 77, 81, 92, 93, 95, 96, 102, 107, 110, 120, 132, 133, 134, 135, 136, 137, 139, 141, 147, 151, 155, 158, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 177, 178, 179, 183, 184, 187, 191, 193, 196, 197, 200, 205, 207, 208, 210, 218, 220, 221, 223, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 251, 252, 253, 255, 266, 269, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 299, 300, 304, 305, 306, 307, 308, 310, 313, 314, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 335, 336], "document": [1, 3, 9, 14, 284, 287, 306, 308, 331], "refer": [1, 7, 14, 38, 161, 174, 258, 261, 264, 265, 284, 287, 288, 305, 306, 307, 316, 319, 323, 331], "ani": [1, 5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 34, 47, 107, 113, 114, 170, 178, 280, 281, 282, 284, 285, 286, 287, 288, 290, 307, 308, 313, 319, 321, 329, 330, 331, 334, 335], "which": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 25, 28, 29, 31, 38, 40, 49, 56, 85, 96, 98, 105, 113, 114, 115, 119, 123, 126, 136, 139, 141, 142, 143, 144, 145, 146, 148, 155, 158, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 188, 201, 202, 211, 213, 214, 215, 224, 226, 227, 228, 236, 242, 246, 266, 268, 270, 272, 277, 278, 280, 281, 283, 284, 286, 288, 293, 294, 296, 298, 307, 308, 310, 313, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331], "avail": [1, 4, 5, 7, 11, 14, 19, 25, 35, 38, 41, 42, 45, 56, 63, 91, 92, 93, 136, 139, 155, 165, 236, 269, 270, 271, 272, 273, 277, 278, 284, 286, 287, 288, 307, 309, 310, 311, 312, 314, 319, 331, 336], "polari": [1, 2, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 132, 134, 135, 136, 139, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 300, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 332, 336, 337], "main": [1, 3, 6, 7, 9, 14, 43, 136, 280, 281, 286, 287, 288, 307, 337], "motiv": 1, "behind": [1, 287], "comput": [1, 7, 13, 14, 15, 79, 136, 139, 142, 143, 146, 150, 153, 155, 156, 161, 166, 190, 194, 212, 216, 225, 229, 261, 262, 263, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 288, 310, 311, 313, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 331], "expens": [1, 284, 285], "could": [1, 14, 17, 19, 136, 284, 285, 286, 287, 288, 307, 321], "time": [1, 5, 6, 7, 8, 14, 18, 19, 38, 49, 61, 86, 123, 136, 144, 145, 151, 160, 161, 165, 174, 188, 191, 201, 202, 211, 213, 214, 224, 226, 227, 236, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 303, 304, 305, 308, 310, 314, 331, 336], "order": [1, 5, 8, 13, 14, 139, 270, 271, 272, 273, 277, 278, 281, 284, 285, 288, 307, 320, 321, 322, 323, 326, 327, 328, 329, 331], "reflect": [1, 5, 288], "fact": [1, 14, 38, 136], "we": [1, 2, 5, 7, 9, 11, 13, 14, 17, 18, 19, 135, 136, 139, 143, 144, 145, 159, 188, 201, 202, 211, 224, 246, 269, 279, 280, 283, 284, 286, 287, 288, 303, 306, 307, 308, 310, 312, 313, 314, 316, 321, 323, 331, 336], "present": [1, 50, 123, 288, 307], "new": [1, 2, 5, 20, 26, 38, 49, 57, 60, 67, 74, 80, 96, 116, 117, 139, 149, 152, 165, 172, 189, 203, 212, 215, 225, 228, 236, 249, 258, 264, 265, 284, 286, 287, 288, 301, 304, 305, 306, 331], "success": [1, 2, 8, 48, 59, 266, 281, 300, 307, 308], "insofar": 1, "guarante": [1, 14, 136, 266, 288, 300], "per": [1, 8, 14, 25, 35, 37, 38, 45, 92, 93, 122, 136, 139, 155, 284, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335], "slurm": [1, 61, 94, 136, 284, 306, 308, 309, 310, 311, 312, 314, 331], "job": [1, 6, 136, 288, 306, 307, 309, 310, 311, 312, 314], "role": 1, "clear": [1, 2, 287, 307], "should": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 26, 31, 38, 39, 40, 47, 49, 51, 59, 62, 75, 113, 114, 121, 123, 132, 133, 134, 135, 136, 137, 139, 141, 146, 158, 170, 178, 238, 240, 266, 280, 281, 282, 284, 285, 286, 288, 300, 301, 304, 305, 307, 308, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 335], "invoc": 1, "serial": [1, 44, 284, 286, 306, 307, 331], "A": [1, 6, 7, 8, 11, 13, 14, 17, 19, 20, 26, 28, 29, 31, 38, 39, 40, 41, 42, 46, 49, 50, 53, 56, 57, 58, 63, 67, 68, 71, 74, 75, 76, 80, 88, 91, 93, 95, 96, 97, 98, 99, 100, 104, 105, 106, 110, 113, 114, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 139, 141, 149, 152, 158, 160, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 210, 215, 217, 219, 223, 228, 230, 232, 236, 238, 240, 242, 245, 247, 249, 250, 252, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 269, 275, 276, 279, 281, 284, 285, 286, 287, 288, 293, 294, 296, 298, 305, 306, 307, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 334, 335], "": [1, 5, 6, 7, 8, 9, 11, 12, 14, 17, 38, 40, 41, 46, 49, 50, 51, 53, 55, 57, 81, 109, 111, 116, 119, 136, 139, 195, 206, 254, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 300, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 335], "class": [1, 9, 11, 13, 14, 17, 18, 19, 20, 25, 33, 38, 43, 49, 57, 66, 67, 74, 80, 96, 125, 139, 140, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 208, 210, 212, 215, 217, 219, 221, 223, 225, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 282, 284, 286, 291, 293, 294, 296, 297, 298, 300, 303, 307], "attribut": [1, 8, 9, 12, 13, 14, 44, 46, 53, 100, 106, 107, 141, 275, 276, 307], "includ": [1, 2, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 40, 47, 49, 59, 109, 110, 121, 122, 136, 139, 170, 178, 184, 197, 238, 240, 242, 269, 270, 271, 272, 273, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 304, 305, 306, 307, 308, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337], "relat": [1, 6, 7, 11, 13, 14, 136, 139, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 288, 304, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332], "inform": [1, 5, 7, 8, 38, 96, 120, 131, 212, 225, 284, 286, 288, 308, 310, 317, 331, 332], "belong": [1, 10, 12, 14, 25, 35, 38, 45, 49, 67, 74, 80, 96, 111, 139, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 208, 210, 215, 217, 219, 221, 223, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 280, 281, 284, 286, 287, 293, 294, 296, 297, 298, 307, 336], "locat": [1, 5, 6, 9, 14, 19, 38, 50, 113, 114, 119, 139, 266, 284, 286, 288, 300, 305, 307, 308, 310, 313, 316, 319, 321, 331], "highest": 1, "level": [1, 2, 11, 12, 13, 18, 19, 123, 139, 144, 145, 188, 201, 202, 211, 224, 258, 259, 260, 261, 262, 263, 264, 265, 269, 280, 282, 283, 284, 286, 307, 308, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 335], "where": [1, 5, 7, 9, 14, 18, 38, 40, 49, 57, 59, 62, 95, 111, 114, 119, 121, 123, 136, 139, 258, 261, 264, 265, 266, 281, 283, 284, 286, 288, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 322, 323, 327, 329, 330, 331, 335, 336], "all": [1, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 20, 25, 38, 45, 49, 56, 92, 93, 95, 114, 120, 136, 139, 140, 143, 144, 155, 165, 188, 201, 211, 224, 236, 246, 258, 264, 265, 266, 269, 280, 281, 282, 284, 285, 286, 287, 288, 291, 300, 305, 306, 307, 308, 313, 316, 317, 319, 320, 321, 322, 323, 327, 328, 330, 331, 332, 335, 337], "below": [1, 5, 6, 14, 19, 25, 35, 38, 45, 92, 93, 136, 139, 155, 165, 236, 266, 280, 282, 284, 286, 288, 307, 308, 313, 316, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331], "There": [1, 5, 6, 13, 258, 264, 265, 279, 280, 282, 284, 287, 288, 304, 307, 308, 331], "wai": [1, 5, 7, 13, 14, 38, 71, 76, 136, 139, 284, 286, 287, 288, 304, 306, 307, 313, 316, 323, 329], "list": [1, 2, 6, 7, 9, 14, 18, 25, 38, 41, 49, 50, 55, 56, 57, 86, 92, 93, 110, 113, 114, 119, 120, 123, 139, 141, 149, 152, 161, 176, 180, 184, 187, 197, 200, 210, 219, 221, 223, 232, 236, 242, 245, 247, 252, 284, 285, 286, 287, 288, 294, 305, 306, 307, 308, 310, 313, 314, 320, 321, 322, 327, 328, 331, 336, 337], "within": [1, 5, 7, 9, 10, 11, 12, 14, 20, 35, 38, 40, 41, 45, 49, 50, 57, 111, 119, 120, 136, 139, 269, 275, 276, 280, 281, 282, 284, 285, 286, 288, 301, 305, 307, 308, 310, 313, 329, 330, 335], "each": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 38, 44, 49, 63, 69, 70, 79, 108, 114, 131, 136, 139, 141, 146, 180, 181, 184, 197, 242, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 294, 295, 303, 305, 307, 308, 313, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 335, 336], "also": [1, 2, 5, 6, 7, 9, 13, 14, 19, 33, 44, 57, 120, 121, 136, 139, 258, 264, 265, 266, 275, 276, 279, 280, 281, 282, 284, 286, 287, 288, 307, 308, 313, 314, 316, 321, 323, 325, 326, 330, 331, 335, 337], "find": [1, 6, 7, 15, 59, 70, 94, 136, 266, 286, 287, 288, 304, 307, 308, 331], "onli": [1, 5, 6, 7, 8, 14, 17, 18, 49, 123, 136, 139, 266, 268, 270, 271, 272, 273, 277, 278, 279, 281, 284, 286, 287, 300, 303, 306, 307, 308, 310, 313, 314, 316, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 331, 334], "its": [1, 5, 6, 7, 8, 9, 12, 17, 19, 38, 51, 102, 107, 108, 116, 136, 139, 280, 281, 282, 284, 285, 286, 287, 288, 305, 307, 308, 309, 321, 331, 337], "would": [1, 2, 5, 9, 14, 18, 19, 25, 35, 38, 45, 50, 92, 93, 96, 136, 139, 155, 165, 236, 269, 282, 284, 286, 287, 288, 304, 307, 313, 316, 331], "ident": [1, 2, 5, 18, 163, 171, 179, 269, 284, 285, 287, 293, 307, 319], "self": [1, 9, 11, 12, 14, 17, 18, 19, 51, 82, 139, 281, 284, 286, 287, 307, 308], "contain": [1, 2, 5, 6, 7, 8, 9, 17, 19, 20, 27, 28, 29, 42, 56, 88, 91, 97, 98, 99, 100, 104, 105, 106, 115, 122, 123, 125, 139, 141, 149, 152, 161, 258, 264, 265, 281, 282, 283, 284, 287, 288, 290, 300, 301, 305, 307, 308, 313, 317, 330, 331, 332, 335], "either": [1, 5, 6, 7, 8, 9, 12, 13, 14, 17, 69, 136, 139, 266, 284, 288, 305, 307, 308, 316, 323, 329, 331], "thei": [1, 2, 5, 6, 7, 8, 12, 13, 14, 19, 38, 39, 40, 51, 57, 74, 110, 127, 136, 139, 160, 266, 269, 280, 283, 284, 286, 287, 288, 301, 305, 306, 307, 308, 313, 316, 319, 320, 321, 322, 323, 327, 328, 331], "As": [1, 4, 5, 6, 9, 13, 18, 69, 139, 280, 284, 285, 286, 287, 288, 307, 308, 316, 320, 321, 322, 323, 327, 328, 329, 336], "setup": [1, 6, 7, 9, 11, 14, 18, 30, 35, 38, 39, 45, 49, 136, 139, 151, 167, 173, 191, 269, 275, 276, 279, 286, 287, 288, 305, 306, 307, 308, 320, 321, 322, 323, 327, 328, 331, 337], "suit": [1, 2, 6, 7, 12, 18, 38, 49, 62, 63, 109, 110, 111, 112, 114, 136, 269, 283, 284, 286, 288, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 319], "proce": [1, 288], "iter": [1, 266, 308], "through": [1, 2, 114, 287, 288, 301, 307], "an": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17, 18, 19, 25, 33, 38, 39, 40, 41, 60, 67, 69, 70, 98, 105, 115, 117, 121, 130, 136, 141, 146, 155, 192, 204, 250, 269, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 304, 305, 306, 308, 310, 313, 316, 323, 325, 328, 331, 336, 337], "setup_complet": 1, "ha": [1, 5, 6, 9, 14, 15, 25, 35, 38, 39, 41, 45, 50, 51, 94, 102, 107, 123, 132, 134, 135, 136, 154, 155, 165, 236, 266, 270, 271, 272, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 304, 305, 307, 308, 316, 319, 321, 325, 329, 331], "been": [1, 5, 6, 38, 41, 46, 50, 51, 53, 102, 114, 119, 132, 134, 135, 136, 139, 141, 148, 154, 187, 200, 210, 219, 223, 232, 245, 247, 252, 266, 281, 284, 286, 287, 288, 300, 304, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 331], "ad": [1, 2, 5, 6, 7, 9, 10, 11, 17, 18, 24, 39, 40, 47, 50, 51, 52, 57, 139, 154, 160, 162, 170, 178, 186, 199, 209, 222, 234, 244, 258, 264, 265, 280, 281, 286, 288, 292, 301, 306, 309, 310, 311, 312, 314, 331], "initi": [1, 7, 8, 38, 123, 139, 144, 161, 163, 164, 168, 171, 174, 179, 188, 192, 201, 204, 211, 215, 217, 224, 228, 230, 235, 237, 238, 240, 250, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 286, 287, 297, 304, 305, 306, 308, 316, 318, 336, 337], "fals": [1, 9, 13, 14, 18, 19, 25, 38, 40, 50, 55, 63, 65, 109, 110, 114, 119, 120, 123, 136, 139, 155, 238, 240, 268, 280, 284, 286, 301, 307, 308, 310, 312, 314, 319], "setup_task": [1, 8, 9], "function": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 47, 68, 75, 136, 139, 170, 178, 194, 280, 281, 284, 286, 287, 305, 306, 307, 316, 320, 321, 322, 323, 327, 328, 337], "skip": [1, 5, 8, 120, 336], "true": [1, 6, 7, 9, 13, 14, 18, 19, 25, 50, 59, 60, 120, 121, 122, 123, 127, 132, 133, 134, 135, 136, 137, 139, 155, 237, 268, 280, 284, 288, 307, 308, 309, 310, 311, 312, 313, 314, 319, 331, 337], "when": [1, 5, 6, 12, 14, 17, 18, 26, 27, 28, 29, 31, 38, 39, 44, 49, 50, 57, 59, 60, 63, 109, 120, 136, 139, 158, 263, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 286, 287, 288, 306, 307, 309, 310, 311, 312, 314, 316, 319, 321, 323, 329, 331, 337], "complet": [1, 5, 8, 27, 28, 29, 107, 307, 331], "alreadi": [1, 4, 5, 6, 11, 14, 50, 51, 60, 136, 139, 154, 236, 284, 286, 287, 288, 307, 308, 313, 316, 320, 321, 322, 327, 328, 331], "satisfi": 1, "part": [1, 3, 5, 6, 7, 9, 12, 14, 18, 19, 38, 49, 139, 149, 152, 165, 189, 203, 215, 228, 236, 249, 269, 275, 276, 284, 285, 286, 287, 288, 306, 307, 316], "parallel": [1, 5, 17, 25, 35, 38, 44, 45, 136, 155, 284, 287, 288, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 331, 337], "make": [1, 4, 5, 6, 7, 9, 11, 12, 17, 18, 19, 25, 34, 40, 57, 68, 69, 71, 84, 123, 132, 133, 134, 135, 136, 137, 139, 155, 159, 163, 171, 179, 258, 264, 265, 266, 269, 280, 284, 286, 287, 288, 293, 300, 305, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 327, 328, 331, 336], "file": [1, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 59, 60, 66, 83, 84, 87, 88, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 141, 144, 145, 146, 148, 149, 152, 155, 159, 161, 167, 170, 173, 178, 188, 201, 202, 211, 224, 257, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 294, 300, 301, 303, 304, 305, 306, 310, 313, 314, 316, 319, 320, 321, 322, 323, 327, 328, 330, 331, 334, 335, 337], "mode": [1, 5, 14, 281, 288, 305, 306, 307, 331], "sure": [1, 5, 6, 7, 12, 14, 17, 18, 136, 139, 163, 171, 179, 266, 269, 284, 287, 288, 293, 300, 305, 307, 308, 313, 314, 319, 320, 321, 322, 327, 328], "dictionari": [1, 8, 9, 14, 19, 20, 26, 28, 29, 31, 38, 39, 42, 49, 57, 88, 91, 95, 114, 115, 125, 126, 127, 139, 149, 152, 158, 284, 286, 287, 307, 321], "them": [1, 7, 8, 9, 14, 17, 18, 19, 25, 37, 136, 139, 155, 270, 271, 272, 273, 277, 278, 281, 282, 284, 286, 287, 288, 305, 307, 312, 313, 318, 331, 337], "constructor": [1, 9, 14, 139, 269, 275, 276, 280, 307], "argument": [1, 5, 7, 9, 12, 14, 18, 19, 36, 38, 92, 93, 103, 121, 269, 281, 284, 286, 287, 288, 307, 330, 335, 336], "replac": [1, 5, 7, 9, 14, 26, 27, 28, 29, 30, 31, 46, 49, 53, 60, 88, 115, 126, 127, 136, 139, 149, 152, 158, 167, 173, 286, 287, 307, 308, 331], "compon": [1, 5, 6, 7, 8, 9, 10, 13, 15, 17, 25, 38, 40, 49, 50, 52, 57, 62, 65, 67, 74, 80, 95, 96, 111, 113, 119, 125, 136, 141, 149, 152, 154, 155, 162, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 186, 187, 189, 192, 195, 197, 199, 200, 203, 204, 206, 208, 209, 210, 215, 217, 219, 221, 222, 223, 228, 230, 232, 234, 235, 236, 237, 238, 240, 242, 244, 245, 247, 249, 250, 252, 254, 280, 282, 283, 284, 285, 286, 290, 291, 292, 293, 294, 296, 297, 298, 301, 305, 306, 307, 308, 313, 315, 318, 336, 337], "subdir": [1, 5, 9, 17, 25, 38, 49, 50, 67, 74, 80, 96, 139, 141, 149, 152, 155, 165, 187, 189, 192, 195, 200, 203, 204, 206, 210, 215, 223, 228, 236, 245, 247, 249, 250, 252, 254, 284, 286, 294, 307], "now": [1, 6, 136, 284, 288, 307, 308, 313], "rel": [1, 2, 5, 9, 17, 18, 40, 41, 50, 55, 57, 113, 114, 119, 120, 266, 281, 284, 286, 287, 288, 294, 300, 305, 307, 319, 323, 331, 337], "rather": [1, 2, 5, 6, 8, 9, 11, 13, 14, 38, 40, 57, 136, 139, 269, 284, 288, 304, 307, 316], "than": [1, 5, 6, 8, 9, 11, 13, 14, 38, 40, 45, 57, 136, 165, 236, 269, 284, 285, 287, 288, 304, 307, 316, 319], "parent": [1, 33, 139, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 284], "resid": [1, 5, 9, 40, 139, 141, 187, 200, 210, 223, 245, 247, 252, 282, 284, 286], "insid": [1, 12, 282, 284, 287, 320, 321, 322, 327, 328], "situat": [1, 17, 31, 158, 307, 331], "anoth": [1, 2, 6, 7, 9, 10, 13, 17, 18, 19, 38, 39, 40, 120, 266, 269, 280, 282, 284, 286, 287, 288, 305, 307, 308, 319, 331, 336, 337], "li": 1, "moment": 1, "cosine_bel": [1, 5, 14, 139, 246, 266, 274, 281, 286, 307, 321, 328, 330, 335, 336], "with_viz": [1, 270, 271, 272, 273, 277, 278, 286, 320, 321, 322, 323, 327, 328], "base": [1, 5, 8, 13, 14, 16, 18, 20, 38, 40, 42, 49, 55, 73, 78, 80, 111, 113, 114, 119, 123, 136, 139, 148, 154, 157, 159, 189, 192, 195, 203, 204, 206, 249, 250, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 283, 284, 286, 287, 288, 300, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 322, 323, 327, 328, 337], "mesh": [1, 5, 7, 10, 17, 25, 38, 84, 85, 98, 105, 122, 123, 141, 142, 144, 145, 149, 150, 152, 153, 155, 156, 157, 159, 161, 164, 166, 168, 184, 187, 188, 189, 190, 192, 195, 197, 200, 201, 202, 203, 204, 206, 210, 211, 212, 215, 216, 217, 219, 223, 224, 225, 228, 229, 230, 232, 235, 237, 238, 242, 245, 247, 249, 250, 252, 254, 258, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 284, 286, 287, 288, 296, 297, 305, 306, 308, 316, 318, 331, 336], "init": [1, 5, 6, 7, 9, 14, 18, 19, 35, 45, 139, 141, 149, 152, 163, 164, 171, 174, 179, 189, 195, 203, 206, 215, 228, 249, 254, 266, 268, 281, 284, 286, 287, 288, 300, 308, 319, 321, 325, 326, 331], "forward": [1, 5, 7, 9, 14, 38, 139, 141, 149, 152, 161, 164, 172, 174, 195, 206, 235, 237, 254, 266, 281, 284, 286, 287, 297, 300, 308, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335], "resolut": [1, 9, 13, 14, 17, 67, 70, 74, 75, 79, 97, 101, 104, 139, 141, 142, 146, 148, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 184, 187, 189, 197, 200, 203, 210, 215, 217, 219, 221, 223, 228, 230, 232, 242, 245, 247, 249, 252, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 308, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 335, 337], "singl": [1, 5, 8, 9, 19, 123, 136, 234, 235, 237, 238, 240, 279, 284, 286, 287, 292, 293, 294, 296, 297, 298, 300, 301, 305, 307, 313, 317, 320, 321, 322, 324, 325, 326, 327, 328, 332, 333], "analysi": [1, 6, 9, 19, 139, 269, 286, 287, 305, 306, 308, 320, 321, 322, 325, 326, 327, 328, 337], "add": [1, 2, 5, 6, 7, 9, 13, 14, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 39, 40, 41, 50, 51, 52, 58, 73, 78, 83, 115, 116, 117, 126, 127, 130, 131, 136, 139, 148, 154, 162, 167, 173, 186, 199, 209, 222, 234, 244, 280, 281, 284, 286, 287, 288, 292, 305, 307, 308, 314, 320, 321, 322, 327, 328], "remap": [1, 10, 19, 306, 321, 323, 330, 335], "visual": [1, 10, 13, 17, 219, 232, 270, 271, 272, 273, 275, 276, 277, 278, 280, 284, 286, 305, 306, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335], "ocean": [1, 3, 5, 7, 9, 10, 11, 13, 14, 18, 19, 20, 31, 40, 119, 136, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 305, 306, 307, 308, 313, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 336, 337], "spheric": [1, 5, 149, 270, 271, 272, 273, 277, 278, 286, 320, 321, 322, 327, 328, 336], "qu": [1, 5, 139, 286, 307, 308, 318, 320, 321, 322, 323, 327, 328, 336], "base_mesh": [1, 5, 13, 67, 74, 141, 154, 192, 195, 204, 206, 249, 250, 254, 284, 286, 307, 320, 321, 322, 327, 328], "60km": [1, 5, 286, 320, 321, 322, 327, 328], "90km": [1, 5], "120km": [1, 5, 286], "150km": 1, "180km": 1, "210km": [1, 5], "240km": [1, 5, 154, 286], "map": [1, 8, 17, 20, 31, 74, 75, 96, 121, 122, 123, 158, 286, 288, 308], "viz": [1, 5, 19, 184, 197, 242, 284, 286, 320, 322, 327, 328], "two": [1, 5, 10, 18, 120, 139, 171, 181, 269, 270, 279, 280, 281, 284, 285, 287, 288, 293, 295, 307, 319, 320, 321, 322, 325, 326, 327, 328, 334], "first": [1, 6, 9, 14, 15, 86, 114, 136, 139, 269, 275, 276, 279, 284, 286, 287, 288, 304, 307, 309, 310, 311, 312, 313, 314, 319, 321, 323, 329, 331], "verbos": [1, 5, 6, 63, 65, 136, 284, 307, 336], "10": [1, 9, 13, 69, 136, 266, 269, 275, 276, 280, 281, 307, 308, 313, 316, 319, 320, 322, 323, 325, 326, 327, 329, 337], "name": [1, 5, 7, 8, 9, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 31, 32, 38, 39, 40, 41, 49, 51, 59, 60, 61, 62, 63, 67, 74, 80, 84, 88, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 130, 136, 139, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 158, 161, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 188, 189, 192, 195, 201, 202, 203, 204, 206, 211, 215, 224, 228, 236, 242, 245, 246, 247, 249, 250, 252, 254, 257, 280, 281, 284, 286, 287, 288, 294, 296, 298, 305, 307, 308, 314, 319, 331, 336], "qu_base_mesh_60km": 1, "qu_init_60km": 1, "qu_forward_60km": 1, "qu_map_60km": 1, "qu_viz_60km": 1, "qu_base_mesh_90km": 1, "qu_init_90km": 1, "qu_forward_90km": 1, "qu_map_90km": 1, "qu_viz_90km": 1, "qu_base_mesh_120km": 1, "qu_init_120km": 1, "qu_forward_120km": 1, "qu_map_120km": 1, "qu_viz_120km": 1, "qu_base_mesh_150km": 1, "qu_init_150km": 1, "qu_forward_150km": 1, "qu_map_150km": 1, "qu_viz_150km": 1, "qu_base_mesh_180km": 1, "qu_init_180km": 1, "qu_forward_180km": 1, "qu_map_180km": 1, "qu_viz_180km": 1, "qu_base_mesh_210km": 1, "qu_init_210km": 1, "qu_forward_210km": 1, "qu_map_210km": 1, "qu_viz_210km": 1, "qu_base_mesh_240km": 1, "qu_init_240km": 1, "qu_forward_240km": 1, "qu_map_240km": 1, "qu_viz_240km": 1, "second": [1, 9, 13, 14, 15, 86, 139, 144, 145, 160, 165, 188, 201, 202, 211, 224, 236, 279, 284, 287, 319, 320, 322, 327, 329, 334], "symlink": [1, 5, 8, 9, 14, 18, 38, 40, 49, 50, 57, 286, 287, 288, 320, 321, 322, 327, 328], "what": [1, 2, 6, 11, 13, 17, 136, 242, 286, 287, 307, 314, 330, 331, 335], "follow": [1, 4, 5, 7, 9, 13, 14, 19, 66, 136, 141, 258, 264, 265, 266, 268, 284, 285, 286, 288, 300, 301, 304, 307, 308, 313, 314, 316, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 334], "subdirectori": [1, 5, 7, 8, 13, 20, 24, 25, 38, 40, 49, 50, 52, 63, 67, 74, 80, 96, 113, 139, 141, 149, 152, 155, 165, 187, 189, 192, 195, 200, 203, 204, 206, 210, 215, 217, 219, 223, 228, 230, 232, 236, 238, 240, 245, 247, 249, 250, 252, 254, 280, 282, 284, 286, 287, 307, 330, 331, 335, 337], "bold": [1, 286], "elsewher": [1, 288], "tree": [1, 7, 115, 117, 131, 286, 332], "thu": [1, 2, 7, 14, 307, 320, 321, 322, 327, 328], "similar": [1, 2, 5, 9, 12, 13, 14, 133, 136, 137, 139, 280, 282, 287, 288, 307, 308, 316, 320, 322, 327, 328, 331], "had": [1, 136], "maintain": [1, 266, 320, 331], "local": [1, 5, 6, 8, 9, 11, 18, 40, 266, 282, 284, 288, 300, 304, 307, 308, 313, 314, 316], "debug": [1, 8, 132, 133, 134, 135, 136, 137, 307, 309, 310, 311, 312, 314, 320, 327], "easier": [1, 14, 284, 286, 287, 288, 308, 331, 336], "symbol": [1, 60, 284], "link": [1, 2, 7, 9, 11, 14, 40, 46, 53, 60, 136, 280, 284, 286, 288, 307, 313, 317, 331, 332], "were": [1, 48, 136, 236, 284, 287, 305, 307, 308, 312, 316], "even": [1, 6, 12, 13, 14, 40, 57, 136, 284, 287, 288, 307, 308, 313, 331], "compass": [1, 5, 266, 284, 286, 287, 305, 307], "though": [1, 11, 38, 286, 287, 307], "global": [1, 13, 17, 100, 101, 106, 242, 270, 271, 272, 273, 277, 278, 280, 284, 285, 287, 305, 306, 307, 308, 314, 320, 321, 322, 323, 327, 328, 330, 331, 335, 337], "dynamic_adjust": [1, 14, 308], "allow": [1, 2, 8, 17, 18, 25, 35, 38, 45, 57, 120, 136, 139, 155, 284, 305, 307, 308, 313, 316, 320, 321, 322, 327, 328, 329, 337], "one": [1, 2, 5, 6, 7, 10, 14, 17, 18, 19, 25, 37, 38, 40, 41, 48, 49, 55, 60, 113, 114, 119, 136, 139, 154, 155, 171, 236, 266, 269, 270, 272, 275, 276, 277, 278, 279, 280, 282, 284, 286, 287, 288, 293, 303, 304, 305, 306, 308, 313, 314, 316, 319, 320, 321, 322, 326, 327, 328, 330, 331, 334, 335, 336, 337], "input": [1, 5, 8, 10, 11, 17, 33, 38, 39, 40, 41, 47, 84, 139, 148, 170, 178, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 307, 329], "port": [1, 307, 314], "instead": [1, 5, 6, 12, 14, 15, 25, 110, 132, 136, 284, 287, 288, 305, 307, 309, 320, 321, 322, 327, 328, 331, 336], "seri": [1, 14, 139, 176, 182, 271, 273, 275, 303, 307, 318], "indic": [1, 7, 8, 14, 17, 18, 19, 38, 39, 107, 114, 123, 136, 139, 261, 282, 284, 304, 307, 308, 316, 329], "becaus": [1, 5, 6, 7, 11, 12, 13, 14, 38, 39, 268, 284, 286, 287, 288, 307, 310, 312, 314, 331], "ran": [1, 108], "ico": [1, 5, 139, 286, 307, 318, 320, 321, 322, 327, 328, 336], "icos_base_mesh_60km": 1, "execut": [1, 5, 8, 14, 25, 114, 119, 136, 155, 266, 281, 284, 288, 300, 307, 308, 309, 310, 311, 312, 313, 314, 331], "runtim": [1, 8, 14, 30, 44, 139, 151, 167, 173, 191, 284, 307], "0": [1, 2, 5, 6, 7, 13, 14, 17, 18, 19, 69, 97, 101, 104, 120, 122, 123, 132, 133, 134, 135, 136, 137, 139, 258, 263, 264, 265, 268, 270, 271, 272, 277, 278, 280, 284, 287, 301, 304, 307, 308, 310, 313, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 335], "01": [1, 14, 139, 301, 307, 329, 334], "00": [1, 14, 18, 139, 286, 301, 307, 314, 331], "icos_init_60km": 1, "icos_forward_60km": 1, "38": [1, 331], "02": [1, 310], "59": 1, "icos_map_60km": 1, "20": [1, 174, 269, 285, 307, 319, 329], "icos_viz_60km": 1, "06": 1, "03": 1, "23": 1, "ensur": [1, 2, 9, 14, 57, 136, 269, 287, 288, 320, 321, 322, 327, 328, 329], "mechan": [1, 284], "prevent": [1, 284], "expect": [1, 2, 12, 17, 136, 139, 281, 284, 288, 307], "affect": [1, 6, 270, 272, 277, 278, 284, 288, 307, 323], "howev": [1, 13, 284, 285, 286, 288, 307], "perform": [1, 2, 5, 8, 14, 17, 18, 38, 43, 44, 47, 48, 67, 120, 136, 139, 149, 152, 164, 165, 170, 174, 178, 189, 203, 215, 228, 235, 236, 237, 249, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 285, 286, 297, 305, 306, 307, 308, 313, 319, 336], "successfulli": [1, 48, 307], "after": [1, 5, 6, 7, 9, 17, 18, 19, 38, 40, 41, 81, 102, 107, 136, 259, 260, 266, 270, 272, 273, 277, 278, 281, 284, 286, 288, 300, 307, 308, 310, 314, 321, 323, 331, 334], "have": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 17, 31, 38, 39, 46, 53, 108, 114, 119, 123, 135, 136, 139, 141, 146, 148, 158, 187, 200, 210, 219, 223, 232, 245, 247, 252, 266, 269, 275, 276, 280, 282, 284, 285, 286, 287, 288, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 327, 328, 331, 336, 337], "remov": [1, 5, 14, 24, 52, 110, 269, 275, 276, 286, 288, 307], "longer": [1, 171, 269, 285, 293, 307, 319, 320, 321, 322, 323, 327, 328], "about": [1, 5, 6, 7, 8, 12, 14, 38, 96, 125, 139, 280, 284, 286, 287, 288, 307, 308, 310, 323, 328], "formerli": 1, "need": [1, 2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 30, 50, 57, 75, 136, 139, 167, 173, 266, 270, 271, 272, 273, 277, 278, 281, 284, 286, 287, 288, 300, 301, 304, 306, 307, 308, 309, 313, 314, 316, 319, 320, 321, 322, 327, 328, 331, 336], "develop": [1, 5, 6, 7, 8, 9, 12, 13, 19, 136, 139, 266, 268, 281, 284, 285, 286, 287, 301, 304, 308, 313, 317, 331], "enforc": [1, 268, 288], "framework": [1, 5, 7, 9, 12, 13, 14, 109, 266, 280, 281, 284, 286, 300, 305, 306, 307, 317, 329, 330, 332, 335, 337], "propos": [1, 2], "close": [1, 6, 70, 136, 306, 320, 321, 322, 327, 328], "root": [1, 40, 136, 266, 281, 284, 287, 288, 300, 305, 308, 309, 310, 311, 312, 313, 314, 316, 331], "live": [1, 50, 286, 331], "deem": 1, "between": [1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 25, 37, 40, 48, 68, 75, 76, 79, 82, 96, 102, 120, 139, 155, 171, 180, 212, 225, 258, 264, 265, 270, 271, 272, 273, 277, 278, 281, 282, 284, 286, 287, 293, 294, 313, 316, 319, 320, 323, 325, 326], "think": [1, 5, 307], "condit": [1, 7, 38, 139, 144, 164, 168, 188, 192, 201, 204, 211, 215, 217, 224, 228, 230, 235, 237, 238, 240, 250, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 297, 303, 305, 306, 308, 318, 336, 337], "shown": [1, 14, 19, 136, 282, 329], "can": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 35, 38, 39, 40, 41, 45, 49, 58, 71, 74, 76, 97, 101, 102, 104, 113, 114, 119, 123, 132, 133, 134, 135, 136, 137, 139, 266, 269, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 323, 326, 327, 328, 331, 336, 337], "simpli": [1, 14, 18, 57, 136, 164, 281, 284, 286, 288, 307, 316, 331, 336], "prefer": [1, 2, 136, 284, 285, 307, 308], "convent": [1, 284, 288, 307], "futur": [1, 13, 44, 123, 284, 287, 305, 306, 307, 308, 323, 329, 331, 337], "current": [1, 2, 5, 6, 8, 11, 25, 35, 38, 45, 120, 136, 155, 266, 279, 281, 284, 287, 288, 290, 300, 301, 305, 306, 307, 308, 313, 316, 319, 326, 329, 331, 336, 337], "independ": [1, 2, 5, 285, 305], "yyyi": 2, "mm": [2, 139, 160], "dd": 2, "The": [2, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 47, 49, 50, 52, 55, 57, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 80, 84, 85, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 130, 131, 136, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 156, 160, 163, 164, 165, 166, 168, 170, 171, 172, 174, 176, 178, 179, 180, 182, 184, 187, 188, 189, 190, 192, 195, 197, 200, 201, 202, 203, 204, 206, 208, 210, 211, 215, 216, 217, 219, 221, 223, 224, 228, 229, 230, 232, 235, 236, 237, 238, 240, 242, 245, 246, 247, 249, 250, 252, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 294, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337], "purpos": [2, 280, 287, 307, 337], "section": [2, 3, 5, 6, 7, 9, 12, 14, 17, 25, 31, 75, 121, 122, 127, 136, 139, 155, 158, 256, 258, 264, 265, 266, 270, 271, 272, 273, 277, 278, 279, 280, 281, 284, 285, 287, 288, 300, 304, 307, 308, 309, 310, 311, 312, 313, 314, 316, 320, 321, 322, 323, 327, 328, 329, 330, 331, 335], "i": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 35, 38, 39, 40, 41, 44, 45, 49, 50, 55, 59, 60, 74, 75, 80, 86, 92, 93, 96, 100, 106, 107, 109, 110, 115, 117, 120, 123, 126, 131, 132, 134, 135, 136, 139, 144, 145, 149, 151, 152, 154, 155, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 188, 191, 201, 202, 211, 224, 236, 258, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 294, 296, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335, 336, 337], "summar": 2, "process": [2, 6, 8, 14, 33, 92, 93, 131, 284, 287, 288, 300, 305, 306, 307], "It": [2, 5, 6, 9, 14, 17, 38, 44, 121, 139, 270, 271, 272, 273, 275, 276, 277, 278, 280, 284, 285, 286, 287, 288, 305, 307, 308, 313, 321, 325, 326, 327, 328], "code": [2, 5, 7, 9, 12, 14, 38, 139, 266, 280, 281, 284, 285, 286, 290, 300, 305, 306, 308, 315, 319, 329, 331], "do": [2, 5, 9, 11, 14, 17, 18, 126, 136, 139, 280, 284, 286, 288, 304, 305, 306, 307, 313, 320, 321, 322, 323, 327, 328, 331], "doe": [2, 6, 9, 12, 14, 284, 290, 306, 307, 313], "primari": [2, 5, 9, 307, 336], "challeng": 2, "respect": [2, 8, 9, 14, 19, 139, 142, 284, 287, 320, 321, 322, 327, 328, 330, 335], "softwar": [2, 84, 314, 331], "appropri": [2, 5, 6, 14, 15, 26, 79, 85, 136, 139, 266, 269, 275, 276, 279, 281, 282, 284, 288, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 330, 331, 335], "final": [2, 5, 6, 7, 8, 136, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 286, 303, 307, 321, 327], "statement": [2, 12, 284, 305], "gener": [2, 3, 5, 7, 8, 12, 14, 19, 26, 27, 28, 29, 33, 47, 74, 120, 139, 170, 178, 215, 228, 256, 266, 268, 269, 275, 276, 279, 281, 284, 288, 300, 307, 308, 313, 320, 321, 322, 323, 325, 326, 327, 328, 331], "regard": 2, "last": [2, 285, 288, 319, 331], "modifi": [2, 8, 9, 13, 14, 25, 37, 51, 115, 117, 139, 155, 175, 269, 275, 276, 284, 286, 288, 306, 307, 308, 319, 331], "your": [2, 4, 5, 6, 11, 136, 266, 287, 288, 300, 304, 307, 308, 309, 310, 313, 314, 320, 321, 322, 327, 328, 331], "appear": [2, 136, 284, 307], "under": [2, 17, 38, 39, 136, 139, 268, 284, 285, 288, 306, 316, 337], "head": [2, 268, 310], "correspond": [2, 6, 7, 120, 136, 139, 141, 266, 284, 288, 300, 319], "discuss": [2, 6, 139, 270, 271, 272, 273, 277, 278, 284, 287, 307, 319], "technic": [2, 7], "issu": [2, 6, 284, 285, 288], "focu": [2, 307], "model": [2, 5, 10, 25, 26, 30, 31, 33, 38, 40, 114, 119, 125, 130, 132, 133, 134, 135, 136, 137, 145, 149, 151, 152, 163, 165, 167, 171, 172, 173, 174, 179, 191, 202, 236, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 284, 285, 287, 288, 293, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 319, 325, 326, 330], "To": [2, 5, 6, 12, 17, 18, 120, 136, 139, 266, 284, 287, 288, 300, 301, 307, 309, 310, 311, 312, 313, 314, 316, 320, 321, 322, 327, 328, 331], "extent": [2, 13, 17, 307, 319], "possibl": [2, 8, 11, 70, 139, 268, 270, 271, 272, 273, 277, 278, 284, 285, 286, 287, 307, 316, 323], "other": [2, 5, 6, 7, 8, 9, 10, 13, 15, 17, 19, 38, 39, 41, 49, 57, 107, 123, 132, 181, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 286, 287, 288, 295, 304, 305, 306, 308, 309, 319, 320, 321, 322, 327, 328, 337], "clean": [2, 4, 5, 6, 114, 119, 284, 286, 288], "plan": [2, 13, 139, 266, 275, 276, 284, 300, 305, 325, 326, 337], "For": [2, 3, 5, 6, 7, 9, 12, 14, 17, 19, 114, 132, 136, 139, 143, 144, 188, 201, 211, 224, 246, 268, 269, 275, 276, 279, 284, 287, 288, 307, 308, 309, 317, 320, 321, 322, 323, 325, 326, 327, 328, 331, 332, 337], "you": [2, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 18, 19, 132, 133, 134, 135, 136, 137, 139, 266, 281, 284, 286, 287, 288, 300, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 327, 328, 331, 336, 337], "provid": [2, 3, 5, 8, 9, 14, 17, 18, 19, 25, 38, 40, 41, 46, 48, 49, 53, 96, 100, 106, 120, 126, 136, 139, 155, 160, 165, 236, 266, 269, 275, 276, 279, 280, 281, 282, 284, 285, 286, 287, 288, 300, 303, 304, 305, 306, 307, 308, 313, 317, 321, 327, 330, 331], "intend": [2, 6, 8, 9, 285, 308, 326, 337], "meet": 2, "detail": [2, 3, 5, 7, 9, 11, 12, 13, 63, 120, 268, 270, 271, 272, 273, 277, 278, 282, 284, 287, 288, 304, 307, 323, 331], "pde": 2, "solver": [2, 286, 288, 306, 331], "well": [2, 6, 9, 12, 13, 136, 139, 261, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 288, 305, 307, 308, 321, 331, 337], "steer": 2, "awai": 2, "from": [2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 24, 25, 27, 28, 31, 38, 39, 40, 48, 49, 51, 52, 55, 59, 60, 84, 88, 93, 97, 98, 99, 100, 101, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 120, 123, 126, 127, 130, 131, 136, 141, 144, 145, 151, 155, 158, 165, 187, 191, 194, 195, 200, 202, 206, 210, 211, 219, 223, 224, 232, 245, 247, 252, 254, 262, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 286, 287, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 334, 335, 336, 337], "low": [2, 123, 323], "variabl": [2, 5, 13, 19, 20, 25, 38, 41, 48, 49, 57, 67, 74, 80, 84, 96, 97, 101, 104, 120, 123, 125, 126, 131, 136, 139, 141, 142, 143, 144, 145, 146, 149, 152, 155, 161, 165, 168, 174, 176, 180, 184, 188, 195, 197, 201, 202, 206, 210, 211, 212, 215, 217, 219, 221, 223, 224, 225, 228, 230, 232, 236, 242, 245, 246, 247, 252, 254, 258, 264, 265, 268, 279, 284, 287, 288, 294, 295, 300, 304, 307, 309, 310, 311, 312, 313, 314, 317, 319, 330, 331, 332, 335], "declar": [2, 7], "interfac": [2, 10, 256, 257, 258, 264, 265, 287, 288, 306, 307, 316], "sequenc": [2, 5, 14, 270, 271, 272, 273, 277, 278, 283, 284, 287, 305, 307, 331, 336, 337], "If": [2, 5, 6, 7, 8, 9, 12, 14, 18, 19, 25, 35, 38, 40, 45, 46, 49, 50, 51, 53, 60, 92, 93, 94, 96, 107, 120, 123, 132, 133, 134, 135, 136, 137, 139, 155, 160, 165, 236, 269, 284, 286, 287, 288, 301, 304, 305, 307, 308, 313, 314, 316, 320, 321, 322, 323, 327, 328, 330, 331, 335], "want": [2, 5, 6, 11, 14, 17, 18, 51, 136, 139, 284, 286, 288, 304, 307, 308, 313, 314, 329, 331, 337], "math": 2, "syntax": [2, 139, 307], "almost": [2, 9], "latex": 2, "b": [2, 5, 6, 288, 305, 307, 331], "2": [2, 6, 13, 14, 15, 18, 39, 136, 139, 179, 268, 269, 272, 277, 278, 282, 285, 288, 294, 301, 307, 308, 310, 313, 316, 317, 319, 321, 323, 324, 325, 326, 331], "2ab": 2, "imag": [2, 7, 19, 121, 122, 123, 280, 307, 330, 335], "keep": [2, 5, 6, 9, 14, 25, 57, 270, 271, 272, 273, 277, 278, 280, 281, 284, 286, 288, 307, 330, 335], "mind": [2, 5, 307], "quit": [2, 282, 284, 286, 307], "small": [2, 9, 44, 136, 280, 284, 307, 309, 310, 315, 316, 327, 329, 331], "jpeg": 2, "ar": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 25, 34, 35, 38, 40, 44, 45, 49, 57, 79, 92, 93, 96, 109, 110, 111, 114, 123, 127, 136, 139, 141, 155, 160, 165, 236, 258, 261, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337], "png": [2, 13, 19, 270, 271, 272, 273, 277, 278, 284, 307], "okai": [2, 6, 284, 307], "size": [2, 13, 19, 69, 70, 79, 122, 139, 157, 159, 161, 280, 307, 308, 319, 321, 323, 325, 326, 329, 330, 335], "repo": [2, 5, 6, 136, 266, 300, 306, 307, 332], "exampl": [2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 136, 139, 280, 281, 282, 284, 285, 286, 287, 288, 304, 305, 307, 308, 310, 316, 330, 331, 336, 337], "centric": 2, "pseudo": 2, "actual": [2, 5, 6, 12, 284, 286, 288, 307], "sourc": [2, 6, 7, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 284, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 307, 308, 309, 310, 311, 312, 313, 314, 331], "project": [2, 5, 6, 7, 66, 100, 106, 266, 287, 288, 300, 301, 307, 308, 309, 310, 313, 331, 332], "manag": [2, 304, 313], "item": [2, 307], "git": [2, 6, 16, 95, 266, 288, 300, 307, 308, 331], "branch": [2, 5, 136, 266, 281, 284, 288, 300, 306, 307, 331], "timelin": 2, "staf": 2, "via": [2, 5, 6, 14, 284, 288, 313], "block": [2, 286], "like": [2, 5, 6, 7, 8, 9, 10, 11, 14, 18, 97, 101, 104, 136, 139, 280, 282, 284, 286, 287, 288, 304, 306, 307, 308, 313, 319, 320, 321, 322, 323, 327, 328, 331, 337], "def": [2, 7, 9, 11, 12, 14, 15, 17, 18, 19, 139, 280, 281, 284, 286, 287, 307], "example_funct": 2, "foo": [2, 287], "return": [2, 7, 15, 31, 48, 56, 59, 61, 68, 69, 70, 75, 79, 85, 86, 88, 91, 92, 102, 111, 112, 114, 115, 117, 120, 123, 126, 130, 131, 139, 142, 143, 144, 145, 150, 153, 154, 156, 158, 160, 161, 166, 188, 190, 194, 201, 202, 211, 213, 214, 216, 224, 226, 227, 229, 246, 256, 259, 260, 261, 262, 263, 286, 287, 307, 321], "how": [2, 5, 6, 12, 14, 74, 139, 283, 284, 286, 287, 288, 308, 313, 314], "show": [2, 7, 13, 284, 307, 313, 314, 319, 320, 321, 322, 323, 327, 328, 330, 335], "met": 2, "regress": [2, 269, 270, 271, 272, 273, 277, 278, 285, 305, 306, 307, 319, 321, 331, 336], "configur": [2, 5, 6, 11, 14, 17, 35, 38, 45, 49, 59, 62, 91, 92, 93, 94, 95, 114, 119, 136, 139, 197, 242, 256, 258, 259, 260, 264, 265, 284, 287, 306, 307, 308, 310, 313, 314, 316, 325, 326, 330, 331, 335, 337], "work": [2, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 40, 41, 43, 46, 47, 49, 50, 53, 55, 57, 62, 95, 109, 111, 114, 119, 135, 136, 170, 178, 195, 206, 254, 282, 283, 284, 285, 286, 287, 288, 304, 305, 307, 308, 313, 320, 321, 322, 323, 327, 328, 329, 331, 337], "properli": [2, 132, 134, 135, 307, 308, 331], "addit": [2, 7, 9, 18, 38, 139, 279, 280, 281, 282, 284, 286, 287, 288, 307, 323], "modif": [2, 7, 284, 301], "nightli": [2, 288, 331, 336], "might": [2, 6, 11, 14, 17, 19, 136, 139, 280, 284, 288, 307, 308, 313, 331], "made": [2, 5, 17, 38, 41, 49, 120, 284, 286, 287, 301, 303, 305, 307, 337], "continu": [2, 6, 284, 307], "page": [3, 7, 136, 309], "auto": 3, "summari": [3, 310], "more": [3, 5, 6, 9, 11, 12, 13, 14, 17, 19, 38, 49, 55, 75, 113, 114, 136, 139, 268, 269, 270, 271, 272, 273, 277, 278, 280, 282, 284, 285, 286, 287, 288, 305, 313, 317, 319, 323, 330, 331, 332, 335, 337], "relev": [3, 7, 9, 139, 270, 271, 272, 273, 275, 276, 277, 278, 307, 309, 310, 311, 312, 313, 314, 330, 331, 335], "seaic": [3, 10, 20, 40, 281, 284, 303, 305, 306, 331, 332, 335, 337], "long": [4, 25, 35, 38, 45, 92, 93, 155, 165, 236, 284, 307, 319, 331], "procedur": [4, 136, 288, 307, 314], "conda": [4, 5, 16, 95, 132, 134, 135, 136, 266, 281, 287, 300, 306, 307, 308, 309, 310, 311, 312, 314], "environ": [4, 5, 132, 134, 135, 266, 281, 287, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314], "spack": [4, 5, 132, 134, 135, 304, 306, 307, 309, 310, 311, 312, 313, 314], "compil": [4, 5, 6, 14, 132, 133, 134, 135, 136, 137, 304, 306, 307, 309, 310, 311, 312, 313, 314, 331], "system": [4, 5, 6, 25, 35, 38, 45, 92, 93, 94, 132, 134, 135, 136, 155, 165, 236, 284, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 331], "modul": [4, 5, 9, 10, 12, 14, 15, 16, 27, 28, 29, 66, 88, 115, 132, 134, 135, 136, 139, 149, 152, 280, 281, 282, 284, 286, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 331], "set": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 26, 27, 28, 29, 30, 38, 40, 46, 47, 53, 57, 75, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 111, 113, 114, 115, 117, 119, 120, 121, 122, 123, 132, 133, 134, 135, 136, 137, 151, 167, 170, 173, 178, 185, 191, 198, 236, 243, 258, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 286, 287, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 335, 336], "up": [4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 26, 27, 28, 29, 38, 47, 49, 81, 95, 107, 108, 111, 113, 114, 119, 120, 132, 133, 134, 135, 136, 137, 139, 170, 178, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 283, 284, 286, 287, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 320, 321, 322, 327, 328, 330, 335, 336, 337], "packag": [4, 5, 6, 7, 9, 10, 13, 14, 16, 27, 28, 29, 40, 51, 88, 95, 115, 119, 126, 136, 139, 149, 152, 280, 281, 282, 283, 284, 286, 288, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 331], "Then": [4, 6, 7, 11, 14, 132, 133, 134, 135, 136, 137, 266, 269, 275, 276, 279, 281, 284, 286, 288, 300, 307, 313, 319, 323, 331], "run": [4, 5, 6, 7, 10, 12, 17, 18, 19, 25, 30, 35, 38, 39, 41, 44, 45, 48, 49, 50, 55, 66, 91, 92, 93, 102, 114, 119, 135, 136, 141, 149, 151, 152, 155, 164, 165, 167, 171, 173, 176, 180, 182, 187, 189, 191, 200, 203, 210, 215, 219, 223, 228, 232, 235, 236, 237, 245, 247, 249, 252, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 282, 283, 285, 286, 287, 293, 294, 297, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 336, 337], "script": [4, 5, 6, 12, 19, 54, 62, 133, 136, 137, 287, 305, 306, 307, 310, 313], "doc": [4, 7, 307, 314], "cd": [4, 6, 266, 288, 300, 307, 310, 331], "html": [4, 317], "view": [4, 275, 276, 288, 325, 326], "open": [4, 6, 288, 307], "_build": 4, "index": [4, 15, 18, 86, 139, 141, 142, 144, 145, 146, 188, 201, 202, 211, 224, 258, 259, 260, 261, 262, 263, 264, 265, 280, 307, 316], "act": [5, 287, 316], "essenti": [5, 14], "4": [5, 7, 9, 13, 14, 122, 136, 163, 164, 269, 275, 276, 279, 281, 284, 286, 307, 308, 313, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331], "These": [5, 6, 8, 9, 14, 20, 38, 136, 139, 266, 268, 281, 284, 286, 287, 288, 300, 301, 306, 307, 308, 313, 319, 323, 326, 327, 331, 336, 337], "user": [5, 6, 7, 8, 9, 11, 14, 17, 38, 49, 50, 57, 62, 95, 136, 139, 148, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 285, 286, 304, 305, 307, 310, 313, 314, 317, 319, 320, 321, 322, 323, 327, 328, 332], "describ": [5, 7, 14, 17, 19, 95, 115, 117, 131, 139, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 316, 320, 321, 322, 323, 327, 331], "instal": [5, 6, 136, 288, 307, 313, 314, 331], "abov": [5, 7, 14, 18, 19, 136, 280, 282, 284, 285, 286, 287, 288, 307, 308, 320, 321, 322, 323, 327, 329, 331, 336], "off": [5, 6, 288, 304], "http": [5, 7, 11, 14, 60, 284, 287, 304, 306, 307, 308, 314, 317, 331, 332], "github": [5, 6, 7, 287, 288, 306, 307, 308, 317, 331, 332], "com": [5, 6, 7, 14, 60, 287, 288, 306, 307, 308, 331, 332], "e3sm": [5, 7, 10, 11, 38, 125, 136, 266, 281, 284, 285, 287, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 332], "creat": [5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 38, 40, 44, 49, 57, 60, 67, 68, 74, 75, 80, 96, 103, 113, 114, 119, 125, 136, 139, 141, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 208, 210, 212, 215, 217, 219, 221, 223, 225, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 258, 264, 265, 270, 271, 272, 273, 277, 278, 279, 280, 284, 285, 286, 287, 293, 294, 296, 297, 298, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 327, 328, 331, 336], "see": [5, 6, 7, 8, 9, 12, 13, 14, 17, 18, 132, 134, 135, 136, 269, 270, 271, 272, 273, 276, 277, 278, 284, 288, 304, 307, 308, 313, 317, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 334, 336, 337], "mean": [5, 288, 307, 316, 319, 320, 321, 322, 323, 327, 328, 336], "chang": [5, 6, 8, 17, 74, 107, 108, 139, 148, 266, 281, 284, 285, 286, 287, 288, 300, 305, 307, 308, 310, 314, 316, 319, 320, 321, 322, 327, 328, 331, 336], "call": [5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 25, 33, 38, 44, 49, 50, 51, 66, 102, 109, 123, 136, 139, 269, 275, 276, 279, 281, 284, 285, 286, 287, 288, 304, 305, 306, 307, 308, 313, 314, 331], "tool": [5, 6, 9, 12, 14, 17, 266, 281, 284, 288, 300, 306, 307, 308], "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 25, 30, 31, 35, 38, 39, 40, 44, 45, 49, 50, 55, 57, 59, 62, 75, 84, 89, 92, 93, 96, 102, 109, 120, 121, 122, 123, 124, 125, 126, 131, 132, 136, 139, 141, 142, 143, 144, 146, 150, 153, 155, 156, 157, 158, 159, 160, 165, 166, 167, 173, 180, 184, 188, 190, 197, 201, 211, 216, 221, 222, 224, 229, 236, 242, 246, 247, 252, 256, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 294, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 334, 336, 337], "task": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 32, 35, 37, 38, 41, 42, 44, 45, 47, 56, 57, 63, 66, 72, 77, 91, 92, 93, 95, 96, 109, 110, 111, 113, 114, 119, 136, 139, 155, 157, 159, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 282, 284, 285, 288, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 332, 336], "support": [5, 6, 8, 13, 17, 38, 139, 258, 264, 265, 268, 284, 287, 300, 305, 306, 307, 308, 310, 314, 316, 319, 329, 337], "machin": [5, 8, 9, 38, 40, 61, 62, 95, 113, 114, 119, 266, 284, 287, 300, 306, 307, 308, 309, 310, 311, 312, 314], "option": [5, 7, 9, 13, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 45, 46, 49, 50, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 67, 73, 74, 75, 78, 80, 84, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 110, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 142, 144, 145, 148, 149, 151, 152, 155, 158, 160, 165, 167, 173, 175, 185, 188, 191, 198, 201, 202, 211, 212, 224, 225, 236, 238, 240, 243, 256, 258, 259, 260, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 296, 300, 301, 304, 306, 308, 316, 318, 331, 337], "help": [5, 6, 13, 136, 280, 281, 282, 284, 288, 306, 307, 313, 317, 332], "usag": [5, 15, 19, 286, 308, 310, 314], "h": [5, 14, 307, 323], "t": [5, 6, 7, 9, 11, 12, 14, 15, 38, 39, 131, 136, 139, 141, 146, 213, 214, 226, 227, 236, 270, 271, 272, 273, 277, 278, 284, 286, 287, 288, 304, 307, 308, 310, 312, 313, 318, 319, 320, 322, 325, 326, 327, 331, 336, 337], "n": [5, 6, 68, 75, 76, 82, 284, 307, 310, 313, 314, 319, 321, 323, 325, 326, 330, 331, 335], "number": [5, 6, 8, 13, 14, 25, 32, 35, 37, 38, 42, 44, 45, 61, 62, 63, 67, 68, 69, 70, 71, 79, 91, 92, 93, 96, 114, 136, 139, 150, 153, 155, 156, 157, 159, 165, 166, 180, 190, 212, 216, 225, 229, 236, 266, 269, 275, 276, 280, 284, 285, 286, 287, 294, 305, 307, 308, 313, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 335], "v": [5, 288, 307, 320, 322, 323, 325, 326, 327, 336], "By": [5, 14, 18, 39, 40, 139, 266, 281, 284, 286, 300, 307, 308, 319, 321, 329], "default": [5, 7, 9, 14, 15, 18, 19, 25, 39, 40, 49, 55, 62, 75, 80, 86, 87, 95, 96, 97, 101, 104, 110, 114, 116, 119, 123, 132, 134, 135, 136, 139, 143, 144, 165, 188, 201, 211, 224, 266, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 286, 288, 300, 301, 306, 308, 309, 310, 311, 312, 313, 314, 316, 320, 321, 322, 327, 328, 329, 330, 331, 335, 337], "planar": [5, 9, 123, 139, 268, 281, 284, 307, 325, 326, 329, 330, 335, 336, 337], "baroclinic_channel": [5, 7, 9, 14, 18, 266, 274, 280, 281, 284, 287, 307, 319, 331, 336, 337], "10km": [5, 18, 269, 307, 319, 331, 336, 337], "1": [5, 7, 9, 13, 14, 17, 18, 19, 38, 69, 132, 133, 134, 135, 136, 137, 139, 163, 165, 179, 235, 236, 237, 258, 264, 265, 269, 270, 271, 272, 275, 276, 277, 278, 279, 281, 282, 284, 286, 288, 301, 304, 307, 308, 310, 313, 314, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331], "decomp": [5, 281, 307, 331, 336], "displai": [5, 8, 314], "path": [5, 6, 9, 11, 14, 18, 38, 40, 41, 49, 50, 55, 57, 59, 60, 63, 66, 95, 111, 113, 114, 119, 120, 123, 136, 141, 266, 281, 284, 286, 287, 288, 294, 300, 305, 307, 308, 309, 310, 311, 312, 313, 314, 331, 337], "directori": [5, 6, 8, 9, 11, 12, 14, 16, 19, 25, 38, 40, 41, 46, 47, 49, 50, 53, 55, 57, 60, 62, 95, 96, 109, 111, 113, 114, 119, 120, 136, 155, 163, 164, 165, 168, 170, 171, 172, 174, 176, 178, 179, 180, 182, 195, 206, 236, 254, 266, 269, 281, 283, 284, 285, 286, 287, 288, 294, 296, 298, 300, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 320, 321, 322, 323, 327, 328, 331, 337], "messag": [5, 8, 136, 284, 304, 314], "task_expr": [5, 63], "flag": [5, 6, 136, 284, 287, 304, 305, 307, 308, 317, 319, 331, 332], "suppli": [5, 6, 7, 15, 18, 123, 131, 136, 284, 288, 307], "substr": [5, 136], "regular": [5, 19, 63, 68, 75, 184, 197, 242, 247, 252, 307, 309, 312, 313, 314, 323, 331], "express": [5, 63], "subset": 5, "search": [5, 63, 310], "given": [5, 7, 8, 13, 14, 15, 17, 18, 20, 24, 25, 52, 59, 69, 79, 85, 88, 92, 93, 110, 115, 117, 120, 126, 139, 141, 142, 145, 146, 154, 155, 174, 202, 261, 269, 279, 284, 286, 304, 306, 307, 308, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 335, 336], "pass": [5, 8, 9, 12, 13, 14, 18, 79, 120, 121, 139, 280, 281, 284, 286, 287, 288, 305, 331], "similarli": [5, 8, 123, 266, 284, 286, 288, 313, 331], "result": [5, 13, 18, 59, 70, 79, 136, 139, 163, 171, 176, 179, 182, 240, 269, 270, 271, 272, 273, 277, 278, 284, 285, 287, 288, 293, 298, 305, 307, 308, 319, 320, 321, 322, 323, 327, 328, 330, 335, 336], "descript": [5, 7, 307, 308, 317, 332], "short": [5, 164, 235, 237, 284, 285, 286, 287, 297, 307, 319], "core": [5, 7, 8, 14, 25, 35, 37, 38, 40, 42, 44, 45, 62, 91, 92, 93, 119, 136, 139, 140, 155, 163, 164, 235, 237, 269, 279, 280, 281, 284, 285, 286, 287, 301, 305, 307, 308, 309, 310, 311, 312, 313, 314, 331, 336], "underli": 5, "must": [5, 7, 11, 14, 19, 25, 28, 29, 38, 41, 43, 46, 53, 119, 121, 122, 123, 136, 139, 141, 155, 268, 284, 286, 288, 307, 316, 323, 337], "built": [5, 14, 114, 119, 136, 266, 281, 288, 300, 306, 308, 313, 331], "standalon": [5, 14, 135, 136, 281, 288, 305, 306, 313, 332], "mpa": [5, 9, 10, 11, 12, 13, 14, 17, 18, 25, 31, 38, 40, 66, 84, 98, 105, 115, 117, 119, 122, 130, 131, 132, 133, 134, 135, 136, 137, 140, 155, 158, 161, 212, 225, 242, 257, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 284, 287, 288, 291, 300, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 323, 325, 329, 330, 331, 332, 335, 336, 337], "befor": [5, 6, 8, 9, 14, 17, 19, 44, 114, 119, 136, 284, 286, 287, 288, 304, 307, 310, 314, 316, 320, 321, 322, 323, 327, 328, 331], "num": 5, "f": [5, 9, 11, 18, 139, 194, 281, 284, 286, 287, 288, 307, 308, 314, 319, 323, 325, 331], "m": [5, 6, 14, 68, 75, 76, 82, 269, 279, 280, 288, 307, 309, 310, 311, 312, 314, 316, 319, 321, 322, 323, 327, 329, 331], "mach": [5, 9, 38, 136, 306, 309, 310, 311, 312, 313, 314, 331], "w": [5, 6, 288, 305, 307, 331], "p": [5, 6, 288, 307, 308, 331], "suite_nam": [5, 8, 110, 112, 114, 119, 331], "copy_execut": [5, 114, 119, 331], "specifi": [5, 6, 14, 17, 18, 19, 40, 136, 139, 268, 284, 288, 303, 307, 308, 314, 319, 320, 321, 322, 327, 328, 330, 331, 335], "altern": [5, 13, 284, 301, 331], "task_numb": 5, "multipl": [5, 9, 14, 136, 267, 285, 286, 287, 288, 307, 313, 319, 331], "test": [5, 7, 8, 9, 19, 49, 50, 55, 62, 91, 92, 93, 112, 120, 136, 140, 141, 147, 149, 152, 162, 164, 165, 171, 172, 174, 175, 176, 177, 179, 184, 185, 186, 187, 189, 192, 195, 196, 197, 198, 199, 200, 203, 204, 206, 207, 208, 209, 210, 212, 215, 217, 218, 219, 220, 221, 222, 223, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 291, 292, 293, 296, 297, 298, 299, 300, 303, 305, 306, 312, 313, 314, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336], "separ": [5, 7, 9, 14, 17, 18, 19, 141, 284, 285, 305, 307, 320, 321, 322, 327, 328, 331], "space": [5, 6, 7, 9, 13, 136, 275, 276, 284, 288, 307, 310, 313, 316, 323, 331], "requir": [5, 6, 8, 14, 25, 35, 38, 39, 45, 96, 139, 155, 165, 236, 266, 280, 281, 284, 285, 286, 287, 288, 300, 301, 304, 306, 307, 308, 313, 316, 317, 330, 331, 332, 335, 337], "few": [5, 13, 14, 25, 35, 38, 45, 92, 93, 136, 155, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 287, 307, 308, 313], "basic": [5, 7, 308, 310, 313, 323, 331], "piec": [5, 280, 281, 307], "abl": [5, 132, 133, 134, 135, 137, 139, 284, 285, 288, 307, 313, 331], "place": [5, 6, 14, 121, 136, 280, 284, 286, 301, 307, 313], "download": [5, 6, 8, 10, 38, 40, 47, 136, 170, 178, 286, 287, 288, 308, 331, 336], "some": [5, 6, 8, 9, 10, 11, 13, 14, 15, 49, 136, 139, 268, 270, 271, 272, 273, 277, 278, 280, 282, 284, 286, 287, 288, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 319, 331, 332, 336, 337], "data": [5, 10, 13, 17, 18, 19, 26, 38, 39, 40, 102, 115, 117, 118, 121, 122, 123, 125, 131, 136, 258, 264, 265, 284, 288, 306, 308, 309, 310, 311, 312, 313, 331, 336, 337], "r": [5, 194, 314, 320, 321, 322, 327], "tell": [5, 6, 136, 288], "re": [5, 6, 9, 286, 287, 288, 305, 307, 308, 313, 314, 320, 321, 322, 327, 328], "leav": [5, 19, 308, 321], "unknown": [5, 136, 287, 313], "component_path": [5, 9, 114, 119, 266, 281, 300, 308, 331], "absolut": [5, 9, 38, 40, 57, 114, 119, 266, 281, 284, 288, 300, 331], "landic": [5, 6, 12, 20, 40, 66, 119, 280, 281, 283, 284, 286, 288, 305, 306, 307, 308, 331, 337], "e3sm_submodul": [5, 266, 281, 288, 300, 301, 307], "mali": [5, 136, 281, 284, 288, 305, 307, 308, 331, 337], "dev": [5, 6, 7, 270, 272, 273, 277, 278, 280, 281, 283, 284, 287, 288, 306, 307, 317, 331, 332], "albani": [5, 132, 134, 135, 136, 281, 308, 309, 310, 311, 314, 331], "depend": [5, 14, 17, 19, 38, 39, 47, 107, 108, 136, 139, 141, 170, 178, 187, 200, 210, 223, 245, 247, 252, 286, 288, 305, 306, 307, 308, 313, 314, 316, 320, 321, 322, 327, 328, 331, 337], "whether": [5, 8, 13, 14, 19, 25, 30, 38, 40, 48, 49, 50, 55, 59, 60, 63, 109, 110, 114, 119, 120, 121, 122, 123, 127, 136, 139, 151, 154, 155, 167, 173, 184, 191, 197, 236, 238, 240, 242, 247, 252, 275, 276, 280, 284, 286, 288, 304, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 335], "omega": [5, 31, 125, 155, 158, 212, 225, 266, 281, 287, 288, 305, 307, 317, 323, 325, 326, 331], "config": [5, 7, 8, 10, 11, 12, 13, 17, 19, 21, 25, 26, 29, 30, 31, 38, 39, 40, 46, 49, 51, 53, 59, 61, 62, 73, 75, 78, 91, 92, 93, 94, 95, 111, 113, 114, 119, 121, 122, 125, 126, 127, 128, 130, 131, 148, 149, 151, 152, 155, 158, 160, 167, 173, 174, 184, 185, 191, 197, 198, 212, 225, 242, 243, 256, 258, 259, 260, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 288, 300, 301, 304, 306, 316, 331, 337], "point": [5, 6, 9, 54, 60, 99, 136, 266, 268, 280, 281, 286, 287, 288, 300, 307, 308, 313, 327, 331], "much": [5, 6, 14, 284, 307], "config_fil": [5, 9, 114, 119], "work_dir": [5, 11, 38, 49, 62, 95, 113, 114, 119, 120, 284, 286, 307], "recommend": [5, 7, 11, 19, 136, 284, 285, 287, 288, 307, 313], "itself": [5, 6, 7, 9, 38, 46, 53, 280, 281, 283, 284, 286, 288, 307, 331], "temp": 5, "scratch": [5, 6, 288, 307, 310, 314, 331], "avoid": [5, 284, 307], "confus": [5, 14, 287, 288, 307], "output": [5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 25, 38, 39, 41, 47, 48, 49, 55, 83, 84, 93, 96, 109, 110, 120, 122, 139, 141, 145, 146, 149, 152, 155, 161, 170, 178, 180, 181, 187, 195, 200, 202, 206, 210, 219, 223, 232, 245, 247, 252, 254, 257, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 286, 294, 295, 303, 305, 308, 314, 320, 321, 322, 323, 327, 328, 331, 336], "compar": [5, 10, 18, 38, 41, 48, 113, 114, 119, 120, 139, 180, 181, 236, 270, 271, 272, 273, 277, 278, 279, 284, 285, 286, 287, 288, 294, 295, 303, 305, 307, 318, 319, 331, 334, 336], "previou": [5, 123, 181, 284, 288, 295, 307, 318, 331, 336], "same": [5, 7, 9, 14, 18, 38, 39, 40, 48, 120, 122, 136, 139, 143, 144, 188, 201, 211, 224, 246, 269, 279, 280, 282, 284, 285, 286, 287, 288, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 331, 336, 337], "baseline_dir": [5, 38, 113, 114, 119, 284], "mani": [5, 6, 8, 9, 139, 280, 282, 284, 286, 287, 288, 306, 307, 319, 330, 335], "valid": [5, 10, 19, 38, 41, 48, 123, 139, 149, 152, 258, 259, 260, 261, 262, 263, 264, 265, 275, 276, 279, 284, 287, 288, 306, 316, 319], "timer": [5, 18, 38, 284, 285, 287], "both": [5, 6, 7, 8, 13, 14, 30, 123, 136, 139, 160, 167, 173, 269, 280, 281, 283, 284, 288, 306, 307, 308, 318, 321, 325, 326, 329], "custom": [5, 6, 8, 13, 17, 19, 57, 59, 114, 119, 266, 281, 288, 300, 308, 314, 331], "give": [5, 14, 18, 136, 284, 287, 288, 307, 308, 331], "predefin": 5, "so": [5, 6, 7, 9, 12, 13, 14, 18, 19, 25, 37, 107, 136, 139, 155, 258, 264, 265, 266, 269, 275, 276, 280, 281, 284, 286, 287, 288, 300, 305, 307, 308, 313, 314, 316, 319, 320, 321, 322, 323, 327, 328, 329, 331, 336], "case": [5, 6, 7, 8, 9, 14, 19, 28, 29, 49, 50, 55, 62, 91, 92, 93, 115, 120, 136, 139, 140, 147, 164, 171, 172, 174, 175, 176, 177, 179, 185, 186, 187, 189, 192, 195, 196, 198, 200, 203, 204, 206, 207, 208, 210, 212, 215, 217, 218, 219, 220, 221, 223, 225, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 288, 291, 293, 296, 297, 299, 305, 306, 307, 313, 314, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 335, 336], "pre": [5, 136, 288], "copi": [5, 6, 8, 40, 55, 114, 119, 307, 310, 331], "just": [5, 14, 25, 35, 38, 45, 63, 136, 155, 284, 287, 288, 305, 307, 310, 314], "wish": [5, 7, 14, 50, 284, 288, 307, 331], "again": [5, 14, 135, 139, 266, 284, 286, 288, 304, 331], "later": [5, 8, 18, 25, 35, 38, 45, 57, 136, 155, 284, 307, 308], "anticip": [5, 307], "mai": [5, 6, 7, 8, 9, 12, 13, 14, 18, 39, 41, 44, 108, 121, 136, 148, 266, 268, 280, 284, 285, 286, 288, 300, 301, 304, 305, 307, 308, 314, 320, 321, 322, 323, 327, 328, 329, 330, 331, 335, 337], "delet": [5, 114, 119, 287, 288, 304, 331], "fresh": [5, 6, 286, 307], "sinc": [5, 14, 86, 108, 131, 139, 269, 284, 286, 287, 288, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335], "rerun": [5, 288], "c": [5, 6, 114, 136, 284, 288, 309, 310, 311, 312, 313, 314, 318, 320, 322, 327, 328, 331, 336], "test_suit": [5, 112, 284], "build": [5, 6, 10, 13, 14, 71, 76, 132, 133, 134, 135, 137, 266, 281, 286, 287, 300, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314], "mpas_model": [5, 308], "overrid": [5, 13, 14, 43, 44, 47, 51, 57, 71, 74, 75, 76, 139, 170, 178, 284, 286, 287, 307, 308, 314, 331], "baselin": [5, 6, 8, 10, 38, 41, 48, 113, 114, 119, 120, 139, 149, 152, 236, 269, 275, 276, 279, 284, 285, 287, 303, 305, 307, 318, 331], "comparison": [5, 8, 18, 38, 48, 120, 284, 307, 308, 327], "against": [5, 10, 41, 48, 120, 139, 149, 152, 269, 275, 276, 279, 284, 303, 307, 318], "oppos": [5, 14, 30, 151, 154, 167, 173, 184, 191, 197, 242, 247, 252, 307], "skip_step": 5, "q": 5, "step_is_subprocess": [5, 109], "wherea": [5, 12, 284, 305, 307, 318, 337], "typic": [5, 7, 9, 13, 14, 17, 18, 19, 38, 50, 110, 136, 139, 280, 281, 282, 284, 286, 288, 305, 307, 308, 313, 316, 329, 331, 337], "clone": [5, 6, 136, 266, 282, 288, 300, 307, 331], "pickl": [5, 8, 107, 108, 284, 307, 331], "latter": [5, 49, 136], "conveni": [5, 9, 17, 258, 264, 265, 280, 284, 307, 308, 320, 321, 322, 327, 328, 331, 337], "tab": [5, 331], "explicitli": [5, 7, 139, 269, 275, 276, 284, 288, 307, 308, 331], "select": [5, 8, 123, 284, 288, 307], "edit": [5, 7, 288, 307, 331], "steps_to_run": [5, 49, 110, 284, 286, 307, 308], "full_run": [5, 18, 303, 319, 334], "restart_run": [5, 18, 303, 319, 334], "Or": [5, 284, 308], "accomplish": [5, 284, 287], "thing": [5, 132, 133, 134, 135, 136, 137, 139, 280, 284, 287, 306, 336], "take": [5, 6, 7, 11, 13, 14, 57, 136, 139, 145, 202, 280, 284, 285, 286, 288, 307, 320, 321, 322, 327, 336], "preced": [5, 57, 139], "over": [5, 9, 14, 57, 121, 122, 284, 287, 306, 307, 316, 319, 329, 331], "intern": [5, 11, 25, 284, 288, 304], "shouldn": [5, 136, 236, 307], "special": [5, 305, 330], "databas": [5, 6, 8, 11, 17, 20, 25, 38, 40, 155, 284, 313], "polaris_cach": [5, 8, 20, 284], "structur": [5, 13, 31, 158, 283, 286, 306, 307], "without": [5, 40, 284, 287, 288, 307, 308, 312, 313, 325, 326, 330, 331], "redund": [5, 258, 264, 265, 269, 280, 307], "stamp": 5, "revis": [5, 308], "older": 5, "ones": [5, 258, 264, 265, 287, 307], "version": [5, 6, 16, 33, 57, 95, 120, 136, 266, 269, 280, 281, 282, 284, 286, 287, 288, 300, 306, 307, 308, 313, 314, 317, 319, 321, 331, 332], "updat": [5, 7, 8, 25, 27, 29, 34, 35, 44, 45, 116, 135, 136, 157, 236, 266, 269, 270, 271, 272, 275, 276, 277, 278, 284, 300, 304, 306, 307, 331], "cached_fil": [5, 20, 284], "json": [5, 8, 20, 55, 284, 314], "anvil": [5, 6, 136, 284, 308, 313, 331], "chrysali": [5, 6, 136, 284, 307, 308, 313, 331], "onto": [5, 288], "lcrc": [5, 6, 8, 11, 55, 284, 287, 308, 309, 311, 313, 331], "server": [5, 8, 40, 55, 284, 287, 308, 314], "d": [5, 19, 123, 212, 225, 258, 264, 265, 268, 272, 277, 278, 284, 307, 317, 324, 329], "whose": [5, 46, 53, 85, 284], "ocean_cached_fil": 5, "pr": [5, 6, 331, 336], "look": [5, 6, 7, 11, 18, 286, 287, 307, 308], "someth": [5, 7, 97, 101, 104, 136, 288, 307], "msh": [5, 13], "230914": 5, "nc": [5, 11, 12, 13, 14, 17, 18, 19, 96, 139, 141, 149, 152, 269, 284, 287, 307], "cellwidthvslatlon": [5, 13], "graph": [5, 25, 32, 34, 44, 84, 149, 152, 155, 269, 275, 276, 284, 307, 308], "info": [5, 12, 14, 25, 32, 84, 136, 149, 152, 155, 284, 307], "initial_st": [5, 18, 19, 141, 269, 284, 307], "date_str": [5, 55], "let": [5, 284, 288, 305, 307, 308, 314], "string": [5, 9, 15, 40, 100, 106, 136, 139, 160, 242, 288], "choos": [5, 284, 287, 288, 307, 309, 310, 311, 312, 314, 337], "todai": [5, 55], "dry_run": [5, 55], "saniti": [5, 307], "check": [5, 6, 18, 120, 284, 288, 307, 308, 310, 314, 331, 336], "print": [5, 12, 18, 63, 120, 127, 284, 287, 336], "stdout": [5, 12, 38, 49, 284, 286], "translat": [5, 31, 139, 158], "convert": [5, 9, 13, 14, 139, 160, 284, 307], "namelist": [5, 7, 8, 10, 25, 26, 27, 30, 31, 33, 34, 37, 47, 114, 119, 130, 131, 155, 158, 159, 167, 170, 173, 178, 266, 269, 275, 276, 280, 281, 284, 286, 287, 300, 301, 303, 306, 307, 308, 329], "stream": [5, 7, 8, 10, 25, 28, 30, 33, 47, 125, 130, 131, 159, 167, 170, 173, 178, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 286, 287, 300, 303, 308, 330, 335], "yaml": [5, 9, 10, 25, 26, 29, 30, 31, 136, 149, 152, 155, 158, 159, 167, 173, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 286, 306, 307, 310, 314], "e": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 66, 125, 136, 139, 154, 158, 266, 280, 282, 284, 285, 287, 288, 300, 304, 305, 306, 307, 308, 314, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 335, 337], "g": [5, 6, 7, 9, 11, 14, 15, 31, 38, 39, 51, 66, 125, 136, 139, 154, 158, 266, 280, 282, 284, 285, 287, 288, 300, 304, 305, 306, 307, 308, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 335], "don": [5, 6, 7, 14, 136, 139, 141, 146, 284, 286, 287, 288, 307, 312, 331, 337], "format": [5, 7, 11, 13, 14, 125, 131, 160, 285, 286, 288, 307, 308, 310], "note": [5, 7, 17, 18, 307, 314], "keyword": [5, 7, 14, 18, 19, 284, 321], "top": [5, 19, 123, 258, 259, 260, 261, 262, 263, 264, 265, 268, 282, 307, 316], "ignor": [5, 100, 106], "get": [5, 6, 7, 9, 11, 12, 14, 15, 17, 25, 26, 27, 28, 29, 38, 49, 50, 56, 61, 69, 85, 91, 102, 109, 136, 139, 143, 144, 145, 155, 188, 201, 202, 211, 224, 246, 280, 283, 284, 286, 287, 288, 305, 308, 316, 331], "pars": [5, 9, 14, 26, 27, 28, 29, 88, 115, 117], "valu": [5, 7, 9, 14, 15, 18, 19, 26, 31, 86, 120, 121, 122, 123, 127, 139, 141, 149, 152, 158, 174, 194, 269, 277, 281, 284, 286, 287, 306, 307, 308, 316, 319, 320, 321, 322, 323, 327, 328, 329], "doesn": [5, 6, 131, 136, 284, 286, 307, 308, 313, 331], "matter": [5, 307], "usabl": 5, "try": [6, 14, 60, 136, 287, 288, 304, 307, 308, 310, 314, 331], "stai": [6, 288], "sync": 6, "mpi": [6, 14, 17, 96, 132, 135, 136, 155, 157, 159, 269, 275, 276, 284, 288, 304, 306, 307, 309, 310, 311, 312, 314, 331], "librari": [6, 14, 132, 136, 288, 307, 309, 310, 311, 312, 313, 314, 331], "netcdf": [6, 136, 141, 146, 161, 279, 308, 309, 310, 311, 312, 313, 314], "fortran": [6, 136, 309, 310, 311, 312, 313, 314], "pnetcdf": [6, 136, 309, 310, 311, 312, 313, 314], "mkl": [6, 136], "linear": [6, 19, 121, 122, 123, 270, 271, 272, 275, 277, 278, 307, 319, 320, 321, 322, 323, 325, 327, 328], "algebra": 6, "lib": [6, 136], "esmf": [6, 288, 331], "scorpio": [6, 288, 313, 331], "forg": [6, 136, 306, 331], "python": [6, 7, 8, 9, 26, 44, 51, 139, 280, 282, 284, 286, 287, 288, 305, 306, 307, 308, 313, 314, 331], "aren": [6, 11, 38, 39, 136, 284, 287, 288, 307, 336], "brief": [6, 7, 307], "tour": 6, "login": [6, 136, 288, 310, 314], "node": [6, 14, 25, 37, 38, 42, 45, 61, 91, 92, 93, 136, 155, 284, 285, 287, 288, 307, 308, 309, 310, 311, 312, 313, 314, 331], "bootstrap": 6, "rest": [6, 161, 263, 316, 321], "u": [6, 284, 307, 313, 314, 320, 322, 323, 325, 326, 327], "unifi": [6, 136, 288, 314], "diagnost": [6, 277, 308, 309, 310, 312, 313, 314, 320, 331], "e3sm_diag": 6, "zppy": 6, "know": [6, 9, 11, 13, 139, 284, 286, 287, 288, 307], "cach": [6, 20, 25, 38, 40, 113, 114, 155, 306, 308, 313, 318, 331, 336], "own": [6, 7, 8, 9, 11, 12, 19, 38, 136, 139, 284, 286, 287, 288, 305, 307, 308, 320, 321, 322, 327, 328, 331, 337], "config_machin": 6, "xml": [6, 14, 115, 117, 118, 131, 300], "ey": 6, "master": [6, 266, 300, 332], "happen": [6, 9, 12, 17, 108, 284, 307, 320, 321, 322, 327, 328], "me": [6, 307], "dev_quick_start": 6, "fork": [6, 307], "haven": [6, 307], "mkdir": [6, 288], "involv": [6, 14, 284, 305, 307], "coupl": [6, 304, 306], "alpha": [6, 132, 133, 134, 135, 136, 137, 307, 323], "beta": 6, "rc": 6, "simplify_local_mach": 6, "often": [6, 9, 18, 19, 38, 139, 280, 282, 284, 285, 286, 287, 288, 307, 308, 336, 337], "stand": 6, "omit": [6, 284, 331], "suffix": [6, 40, 114, 284], "onc": [6, 14, 41, 269, 288, 307, 308, 320, 321, 322, 327, 328, 331], "releas": [6, 136, 287, 306, 313, 317, 331], "spack_for_mache_1": 6, "12": [6, 13, 69, 270, 272, 277, 278, 303, 307, 310, 320, 322, 323, 327, 328, 334], "worktre": [6, 306, 307], "my": [6, 136, 310], "fetch": [6, 288, 307], "out": [6, 8, 9, 13, 57, 90, 94, 123, 136, 149, 152, 282, 284, 287, 288, 308, 316, 331], "checkout": [6, 288, 307], "mambaforg": [6, 288, 307, 313, 331], "manual": [6, 14, 49, 50, 284, 286, 337], "linux": [6, 136, 288, 313], "x86_64": [6, 136], "our": [6, 136, 287, 307, 331], "found": [6, 9, 14, 126, 136, 287, 288, 306, 307, 309, 310, 311, 312, 313, 314], "exist": [6, 7, 9, 31, 38, 41, 60, 115, 117, 119, 136, 158, 269, 284, 286, 287, 288, 304, 307, 313, 336], "miniconda3": [6, 288], "alwai": [6, 7, 9, 12, 57, 136, 139, 144, 188, 201, 211, 224, 266, 281, 284, 286, 287, 288, 300, 305, 307, 308], "pleas": [6, 136, 281, 287, 288, 307, 331], "start": [6, 7, 8, 14, 15, 86, 116, 136, 268, 269, 273, 280, 285, 286, 287, 306, 310, 313, 314, 317, 332, 334], "definit": [6, 14, 307], "defin": [6, 7, 8, 9, 13, 14, 16, 19, 38, 49, 74, 100, 106, 113, 114, 119, 136, 139, 186, 199, 209, 222, 244, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 292, 300, 301, 303, 305, 306, 308, 313, 316, 319, 321, 328, 329, 336, 337], "export": [6, 304], "conda_bas": 6, "home": [6, 18, 136, 288, 307, 308, 310, 313, 314], "readi": [6, 307, 314], "configure_polaris_env": [6, 136, 288, 304, 307], "py": [6, 12, 14, 18, 66, 136, 280, 281, 287, 288, 305, 307, 308], "mache_fork": 6, "mache_branch": 6, "update_spack": [6, 136, 288], "tmpdir": [6, 136], "group": [6, 7, 280, 306, 309, 311, 313, 314, 330, 331, 337], "spack_temp": 6, "spack_test": 6, "intel": [6, 136, 313], "gnu": [6, 136, 288, 312, 313, 331], "openmpi": [6, 132, 136, 288, 306, 309, 311, 312, 331], "impi": [6, 132, 136, 309, 312], "recreat": [6, 286, 288, 304], "request": [6, 7, 14, 15, 25, 32, 34, 136, 139, 149, 152, 155, 259, 260, 284, 286, 287, 288, 304, 307, 308, 320, 321, 322, 327, 328], "twice": [6, 307], "deploy": [6, 288], "prebootstrap": 6, "load": [6, 19, 108, 133, 136, 137, 284, 288, 306, 307, 308, 309, 310, 311, 312, 313, 314], "activ": [6, 19, 136, 313, 314, 331], "differ": [6, 14, 15, 17, 18, 57, 71, 76, 120, 136, 139, 162, 165, 174, 266, 269, 280, 281, 282, 284, 285, 286, 287, 300, 305, 307, 308, 310, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335], "On": [6, 7, 13, 136, 288, 313], "tmp": [6, 136], "safe": [6, 14, 284, 288, 319], "strictli": [6, 13, 287, 307], "necessari": [6, 7, 13, 136, 307], "good": [6, 12, 38, 284, 288, 307], "idea": [6, 12, 307], "Be": [6, 314], "awar": [6, 7, 136, 307, 313], "with_petsc": [6, 288], "wa": [6, 8, 48, 59, 120, 136, 284, 286, 287, 288, 304, 305, 307, 308, 316, 331], "limit": [6, 19, 270, 271, 272, 277, 278, 285, 288, 319, 320, 322, 323, 327, 328], "amount": [6, 25, 35, 38, 45, 155, 284, 315, 329], "team": [6, 136, 306], "petsc_support": 6, "txt": [6, 8, 119, 285, 304], "with_albani": [6, 288], "albany_support": 6, "encount": [6, 285, 304], "error": [6, 8, 15, 38, 49, 136, 139, 142, 143, 146, 270, 271, 272, 273, 275, 276, 277, 278, 284, 286, 288, 306, 307, 320, 321, 322, 323, 327, 328], "dev_polaris_0_2_0_gnu_mpich": 6, "armpl": 6, "dure": [6, 8, 11, 14, 18, 30, 38, 49, 58, 151, 167, 173, 191, 284, 286, 287, 288, 307, 308, 331, 336, 337], "attempt": [6, 136, 306, 313], "sh": [6, 132, 133, 134, 135, 136, 137, 288, 304, 307, 309, 310, 311, 312, 314, 331], "build_": 6, "command": [6, 10, 16, 36, 38, 44, 92, 93, 95, 103, 136, 284, 287, 288, 305, 306, 307, 310, 313, 314, 331], "pscratch": 6, "suggest": [6, 136, 304], "correctli": 6, "seem": [6, 14, 307, 310, 314], "switch": [6, 307, 308], "v0": 6, "19": 6, "submodul": [6, 266, 281, 288, 300, 307, 331], "serv": [6, 113, 114, 119, 139, 280, 307], "kind": [6, 307], "whichev": [6, 266, 300, 316], "load_dev_polaris_0": [6, 132, 133, 134, 135, 136, 137, 307], "0_chrysalis_intel_openmpi": 6, "recurs": [6, 266, 287, 288, 300, 307, 331], "pio": [6, 25, 34, 37, 155, 269, 275, 276], "openmp": [6, 25, 35, 38, 45, 93, 132, 134, 135, 155, 165, 236, 284, 307, 309, 310, 311, 312, 314], "ifort": [6, 132, 134, 136, 307, 309, 311], "ac": [6, 307], "test_20230202": 6, "ocean_pr_chrys_intel_openmpi": 6, "sbatch": [6, 307, 313, 331], "job_script": [6, 307, 331], "bash": [6, 288, 304, 307, 331], "termin": [6, 8, 136, 284, 288, 307], "isn": [6, 9, 15, 270, 271, 272, 273, 277, 278, 284, 287, 307], "ll": [6, 19, 136, 287, 307, 314, 321], "warn": 6, "0_chrysalis_gnu_openmpi": 6, "e3sm_chrys_gnu_openmpi": 6, "gfortran": [6, 132, 134, 135, 136, 288, 309, 311], "ocean_pr_chrys_gnu_openmpi": 6, "explor": [6, 280, 284, 307, 316, 327], "util": [6, 287, 326], "matrix": 6, "sever": [6, 12, 136, 139, 280, 284, 286, 287, 288, 306, 307, 330, 331, 336], "automat": [6, 7, 9, 12, 14, 19, 136, 139, 284, 287, 288, 307, 308, 309, 311, 312, 313, 314, 331], "0_chrysalis_gnu_openmpi_albani": 6, "full_integr": [6, 331], "landice_full_chrys_gnu_openmpi": 6, "nonhydrostat": 6, "yet": [6, 135, 136, 139, 284, 287, 307], "integr": [6, 15, 139, 174, 269, 287, 307, 319, 320, 321, 322, 323, 327, 328, 330, 335], "sara": 6, "calandrini": 6, "nonhydro": 6, "0_chrysalis_intel_openmpi_petsc": 6, "scalandr": 6, "nonhydro_chrys_intel_openmpi": 6, "grep": [6, 310, 331], "245": 6, "246": 6, "non": [6, 14, 18, 268, 284, 307, 320, 327, 331], "care": [6, 11, 13, 139, 280, 284, 288, 307], "temporari": [6, 136], "begin": [6, 7, 18, 269, 284, 288, 301, 306, 307, 313, 319, 321, 329], "anymor": 6, "best": [6, 17, 136, 284, 288], "hard": [6, 284, 307, 319, 329], "reset": 6, "sphinx": 7, "written": [7, 8, 9, 38, 49, 57, 62, 121, 122, 123, 149, 152, 284, 286, 307, 334], "myst": [7, 307], "tip": [7, 288], "easi": [7, 9, 40, 287, 307], "pull": [7, 136, 287, 288, 307, 308], "guid": [7, 139, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 285, 287, 307, 310, 313, 317, 332], "baroclin": [7, 9, 14, 162, 163, 164, 165, 168, 171, 174, 176, 179, 180, 182, 236, 269, 281, 284, 307, 317, 324, 337], "channel": [7, 9, 14, 162, 163, 164, 165, 168, 171, 174, 176, 179, 180, 182, 236, 269, 281, 284, 304, 307, 317, 324, 337], "label": [7, 121, 122, 313, 323, 331], "prepend": 7, "categori": [7, 281, 282, 283, 306, 337], "uniqu": [7, 14, 136, 286, 307], "And": [7, 14, 288, 307], "becom": [7, 284, 286, 307], "who": [7, 288, 307, 308, 314], "citat": 7, "basi": [7, 307], "overview": [7, 306, 310, 314], "common": [7, 12, 14, 44, 49, 136, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 304, 305, 307, 308, 313, 314, 330, 331, 335, 336, 337], "characterist": [7, 316, 330, 335], "comment": [7, 285, 308], "appli": [7, 13, 14, 63, 268, 280, 307, 319, 329, 330, 335], "vertic": [7, 15, 19, 85, 123, 144, 145, 188, 201, 202, 211, 224, 235, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 308, 315, 317], "grid": [7, 13, 17, 68, 75, 79, 82, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 139, 256, 257, 258, 259, 260, 261, 264, 265, 269, 275, 276, 279, 284, 301, 307, 308], "forc": [7, 279, 303, 307, 337], "specif": [7, 9, 14, 19, 51, 136, 139, 266, 280, 281, 282, 284, 300, 301, 306, 307, 308, 310, 313, 319, 330, 331, 335, 336], "public": [7, 11, 284, 307, 308], "api": [7, 12, 306, 307], "underscor": [7, 307], "md": [7, 307], "eval": 7, "rst": [7, 14, 307], "currentmodul": 7, "autosummari": 7, "toctre": 7, "add_baroclinic_channel_task": [7, 9, 281, 287], "compute_cell_count": [7, 139, 269, 275, 276, 307], "dynamic_model_config": [7, 14, 269, 307], "ot": [7, 307], "numpydoc": [7, 307], "text": [7, 8, 319, 321, 323, 329], "restructuredtext": 7, "compute_land_ice_pressure_and_draft": 7, "ssh": [7, 19, 139, 258, 260, 261, 262, 263, 264, 265, 266, 275, 276, 284, 307, 308, 310, 314, 316, 323, 325, 326], "modifysshmask": 7, "ref_dens": 7, "pressur": [7, 266, 308, 325, 326], "overli": [7, 307], "ic": [7, 139, 266, 286, 287, 288, 301, 303, 306, 307, 308, 310, 316, 334, 337], "shelf": [7, 139, 280, 287, 307, 308, 316], "draft": [7, 316], "paramet": [7, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 45, 46, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 74, 79, 80, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 149, 151, 152, 154, 155, 158, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 184, 187, 188, 189, 191, 192, 194, 195, 197, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 224, 225, 226, 227, 228, 230, 232, 236, 238, 240, 242, 245, 246, 247, 249, 250, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 275, 276, 280, 284, 286, 292, 293, 294, 296, 297, 298, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329], "xarrai": [7, 15, 17, 19, 85, 122, 123, 144, 145, 188, 201, 202, 211, 224, 258, 259, 260, 261, 262, 263, 264, 265, 284, 307], "dataarrai": [7, 85, 122, 144, 145, 188, 201, 202, 211, 212, 213, 214, 224, 225, 226, 227, 259, 260, 261, 262, 263], "sea": [7, 139, 212, 214, 225, 227, 260, 261, 262, 263, 266, 301, 303, 306, 307, 308, 316, 325, 326, 334, 337], "surfac": [7, 139, 212, 214, 225, 227, 260, 261, 262, 263, 266, 268, 279, 303, 307, 308, 316, 319, 325, 326, 329], "height": [7, 123, 139, 212, 214, 225, 227, 260, 261, 262, 263, 266, 307, 308, 316, 325, 326], "mask": [7, 123, 258, 261, 264, 265, 284, 307, 308, 316], "landicepressur": 7, "deviat": 7, "float": [7, 9, 14, 26, 67, 69, 70, 74, 79, 86, 101, 120, 122, 123, 139, 141, 142, 143, 144, 145, 149, 152, 154, 160, 163, 164, 165, 168, 171, 174, 176, 179, 184, 187, 188, 189, 194, 197, 200, 201, 202, 203, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 224, 225, 226, 227, 228, 230, 232, 236, 242, 245, 246, 247, 249, 252, 284, 286, 307], "densiti": [7, 13, 139, 307], "seawat": 7, "displac": 7, "land": [7, 139, 266, 286, 306, 307, 308, 316], "landicedraft": 7, "equal": [7, 279, 284, 287, 329], "entri": [7, 54, 86, 89, 114, 123], "line": [7, 10, 36, 38, 92, 93, 103, 136, 284, 285, 287, 288, 306, 331], "type": [7, 14, 17, 18, 19, 26, 98, 105, 131, 136, 139, 142, 194, 235, 237, 270, 271, 272, 277, 278, 280, 284, 286, 287, 288, 300, 304, 305, 307, 308, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 336], "side": 7, "colon": 7, "doubl": [7, 14, 139, 284, 285, 307], "back": [7, 307, 310, 331], "quot": 7, "interfer": 7, "arg": [7, 12, 38, 92, 93, 284], "next": [7, 136, 269, 307, 316, 331], "indent": [7, 284], "obviou": [7, 14, 307], "none": [7, 9, 14, 18, 25, 28, 29, 35, 38, 39, 40, 41, 45, 46, 49, 50, 53, 55, 57, 59, 62, 63, 65, 67, 74, 80, 84, 86, 95, 96, 97, 100, 101, 104, 106, 110, 114, 115, 119, 120, 121, 122, 123, 126, 130, 139, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 155, 156, 160, 165, 166, 188, 190, 201, 202, 211, 216, 224, 225, 229, 236, 246, 284, 286, 296, 307, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 334], "els": [7, 8, 136, 284, 286, 307], "further": [7, 280, 286, 314, 330, 335], "rais": [7, 9, 18, 38, 41, 59, 60, 139, 284, 287, 307, 323], "list_cas": 8, "list_machin": [8, 287], "list_suit": 8, "anywher": [8, 12, 136, 288], "object": [8, 12, 17, 24, 27, 28, 29, 50, 52, 88, 107, 108, 111, 115, 125, 126, 130, 131, 149, 152, 212, 225, 281, 286, 287, 307], "contrast": 8, "read": [8, 20, 27, 28, 29, 38, 39, 49, 87, 88, 125, 139, 268, 284, 286, 307], "properti": [8, 242, 268, 284, 313, 320, 321, 322, 327, 328], "setup_suit": 8, "write": [8, 12, 13, 16, 19, 107, 125, 257, 284, 286, 288, 303, 307], "proven": [8, 10, 57, 306, 308], "save": [8, 19, 59, 82, 136, 269, 270, 271, 272, 273, 277, 278, 280, 284, 286, 307, 313, 318, 319], "target": [8, 11, 17, 18, 25, 40, 60, 62, 86, 96, 136, 139, 155, 269, 275, 276, 284, 286, 307, 320, 321, 322, 327, 328], "minimum": [8, 62, 122, 123, 139, 143, 155, 246, 269, 275, 276, 284, 307, 308, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 335], "determin": [8, 9, 13, 14, 15, 19, 40, 44, 85, 86, 123, 131, 136, 139, 159, 242, 269, 270, 271, 272, 273, 275, 276, 277, 278, 284, 307, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 335], "maximum": [8, 18, 120, 122, 123, 194, 246, 307, 308, 316], "product": 8, "ntask": [8, 9, 14, 17, 25, 35, 38, 42, 45, 92, 93, 96, 139, 155, 165, 236, 284, 286, 307], "cpus_per_task": [8, 14, 38, 42, 45, 92, 93, 284], "quickli": 8, "caveat": 8, "sit": 8, "idl": 8, "fraction": [8, 307, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "min_task": [8, 9, 14, 17, 25, 35, 38, 45, 92, 93, 96, 139, 155, 165, 236, 284, 307], "min_cpus_per_task": [8, 14, 38, 45, 92, 93, 284], "fewest": 8, "least": [8, 13, 281, 288, 319, 323], "fail": [8, 14, 18, 25, 35, 38, 45, 59, 136, 139, 155, 165, 236, 284, 306, 307, 308, 320, 321, 322, 323, 325, 326, 327, 328], "run_task": [8, 284, 286], "run_single_step": 8, "oper": [8, 47, 136, 170, 178, 284, 286, 336], "log": [8, 10, 19, 38, 49, 93, 120, 121, 122, 123, 284, 286, 288, 306, 331], "figur": [8, 19, 122, 123, 275, 276, 279, 280, 282, 284, 308, 320, 322, 327, 328], "cpu": [8, 136, 284, 307, 331], "method": [8, 9, 13, 14, 17, 18, 20, 25, 30, 31, 38, 39, 43, 44, 49, 50, 51, 57, 58, 66, 67, 71, 74, 75, 76, 80, 81, 96, 102, 125, 139, 140, 141, 143, 144, 149, 151, 152, 155, 158, 163, 164, 165, 167, 168, 171, 172, 173, 174, 176, 179, 180, 182, 184, 187, 188, 189, 191, 192, 195, 197, 200, 201, 203, 204, 206, 208, 210, 211, 212, 215, 217, 219, 221, 222, 223, 224, 225, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 275, 276, 281, 284, 286, 287, 291, 293, 294, 296, 297, 298, 307, 321, 330, 335], "retriev": [8, 304], "store": [8, 19, 51, 136, 139, 275, 276, 284, 307, 320, 322, 327, 328, 331], "case_output": [8, 12], "individu": [8, 9, 19, 281, 286, 287, 307, 313, 314, 319, 331, 337], "overal": 8, "whole": [8, 49, 161, 280, 286, 287, 307, 331], "window": 8, "update_cach": 8, "_cached_fil": [8, 284], "origin": [8, 55, 288, 307, 316, 331], "enabl": [8, 19, 279, 284, 304, 308, 314, 325, 326], "consum": [8, 284, 286, 307, 336], "faster": [8, 288], "parser": [9, 46, 53, 57, 174, 184, 197, 242], "mpas_tool": [9, 12, 13, 79, 269, 275, 276, 279, 284, 286, 307], "mpasconfigpars": [9, 284, 286], "polarisconfigpars": [9, 21, 38, 46, 49, 53, 59, 61, 62, 91, 94, 95, 111, 121, 122, 139, 174, 184, 197, 212, 225, 242, 256, 258, 259, 260, 264, 265, 307], "certain": [9, 18, 57, 136, 284, 288, 308, 330, 335], "filepath": [9, 46, 53, 57, 139], "overridden": [9, 31, 58, 139, 158, 307], "algorithm": [9, 14, 139, 236, 269, 275, 276, 284, 307], "featur": [9, 14, 287, 288, 305, 307, 308, 319, 329], "accommod": [9, 25, 35, 38, 45, 92, 93, 155], "add_from_packag": [9, 139, 284, 286, 287, 307], "content": [9, 14, 114, 115, 117, 119, 131, 139, 280, 282, 284, 287, 303, 307, 331, 334], "inertial_gravity_wav": [9, 266, 274, 276, 281, 286, 325, 336], "inertialgravitywav": [9, 275, 286], "import": [9, 11, 12, 13, 15, 17, 18, 19, 139, 280, 281, 284, 286, 287, 288, 305, 307], "__init__": [9, 17, 18, 20, 25, 38, 49, 57, 66, 67, 74, 80, 96, 125, 139, 140, 141, 149, 152, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 184, 187, 189, 192, 195, 197, 200, 203, 204, 206, 208, 210, 212, 215, 217, 219, 221, 223, 225, 228, 230, 232, 235, 236, 237, 238, 240, 242, 245, 247, 249, 250, 252, 254, 280, 281, 284, 286, 287, 291, 293, 294, 296, 297, 298, 305, 307], "super": [9, 14, 17, 18, 139, 281, 284, 286, 287, 307], "cfg": [9, 51, 139, 281, 286, 287, 307, 308, 320, 322, 327, 328, 331], "except": [9, 38, 41, 59, 284, 287, 307, 328], "behavior": [9, 14, 110, 139, 284, 285, 288, 307], "noth": [9, 136, 304, 320, 321, 322, 327, 328], "particular": [9, 136, 280, 288, 306, 310, 313, 331], "fine": [9, 286, 307, 329], "_get_basic_config": 9, "larg": [9, 284, 286, 307, 309, 327], "those": [9, 14, 49, 120, 136, 139, 269, 286, 287, 288, 306, 307, 320, 321, 322, 323, 327, 328, 330, 335, 336], "configpars": [9, 92, 93], "getinteg": 9, "getfloat": [9, 12, 14, 17, 139, 284, 307], "getboolean": [9, 284, 307], "implement": [9, 281, 284, 287, 319, 320, 321, 322, 323, 325, 326, 327, 328], "getlist": [9, 286, 307], "comma": [9, 320, 321, 322, 327, 328], "integ": [9, 13], "boolean": [9, 123, 261], "etc": [9, 14, 116, 119, 281, 284, 319], "getexpress": 9, "tupl": [9, 122, 123], "rang": [9, 19, 123, 307], "numpi": [9, 13, 15, 68, 75, 76, 82, 86, 121, 123, 139, 161, 256, 257, 284, 307], "linspac": [9, 19, 321], "arang": 9, "arrai": [9, 15, 68, 75, 76, 82, 121, 139, 256, 257, 259, 260, 261, 262, 307], "sens": [9, 306, 307], "set_shared_config": [9, 286], "intuit": 9, "resolution_to_subdir": [9, 281], "rpe": [9, 182, 281, 287, 307, 331], "resdir": [9, 281], "config_filenam": [9, 38, 49, 284, 286], "indir": [9, 25, 38, 49, 96, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 236, 238, 240, 281, 284, 294, 296, 298], "add_task": [9, 280, 281], "most": [9, 12, 44, 136, 266, 280, 281, 284, 287, 288, 300, 307, 308, 313, 314, 316, 317, 332, 337], "construct": [9, 14, 140, 256, 258, 259, 260, 264, 265, 268, 279, 281, 286, 291, 307, 319, 323], "bring": [9, 139, 307], "add_step": [9, 286, 307], "_add_rpe_and_analysis_step": 9, "nu": [9, 14, 165, 176, 269, 284, 307], "baroclinic_channel_rp": 9, "viscos": [9, 14, 165, 174, 176, 269, 284, 287, 307, 319], "dtype": [9, 286, 307], "nu_": 9, "openmp_thread": [9, 14, 25, 35, 38, 45, 93, 155, 165, 236, 284, 286, 307], "add_yaml_fil": [9, 14, 25, 139, 284, 286, 307], "One": [9, 13, 307, 331, 336], "advantag": [9, 14, 136, 286, 287, 307, 313], "track": [9, 25, 284, 286, 288], "associ": [9, 13, 14, 15, 19, 139, 258, 264, 265, 269, 270, 272, 277, 278, 284, 286, 288, 305], "while": [10, 17, 19, 268, 269, 284, 304, 307], "meant": [10, 287, 308], "simplifi": 10, "verifi": [10, 285, 308], "io": [10, 284, 286, 287, 306, 307, 308, 317, 332], "lot": [11, 139, 284, 287, 307], "o": [11, 12, 115, 117, 131, 136, 287, 288, 307, 308, 331], "handl": [11, 12, 288, 307, 313, 323], "lower": [11, 19, 286, 307, 319], "directli": [11, 13, 14, 17, 38, 139, 282, 284, 287, 305, 306, 307, 310], "readm": [11, 286], "importlib": 11, "resourc": [11, 14, 35, 42, 45, 91, 92, 93, 150, 153, 156, 166, 190, 216, 229, 236, 269, 275, 276, 284, 286, 307], "global_ocean": [11, 14, 284, 286, 287, 288, 308, 331], "files_for_e3sm": [11, 284, 286, 308], "str": [11, 14, 20, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 46, 49, 50, 53, 55, 57, 59, 60, 61, 62, 63, 67, 74, 80, 84, 86, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 139, 141, 142, 143, 144, 145, 146, 149, 152, 154, 155, 160, 161, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 187, 188, 189, 192, 195, 200, 201, 202, 203, 204, 206, 210, 211, 215, 217, 219, 223, 224, 228, 230, 232, 236, 238, 240, 245, 246, 247, 249, 250, 252, 254, 257, 284, 286, 294, 296, 298, 307], "did": [11, 305, 307], "add_input_fil": [11, 17, 18, 39, 284, 286, 307], "collect": [11, 99, 140, 281, 283, 291, 305, 307], "whenev": [11, 284, 307], "flexibl": [11, 139, 284, 286, 288, 307], "No": [11, 306, 325, 326], "step_dir": 11, "database_root": [11, 136, 284, 308, 309, 310, 311, 312, 313, 314, 331], "download_path": 11, "join": [11, 307], "bathymetry_databas": [11, 284, 308], "remote_filenam": 11, "bedmachineantarctica_and_gebco_2019_0": 11, "05_degre": 11, "200128": 11, "local_filenam": 11, "topographi": [11, 261, 280, 284, 307, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 337], "url": [11, 40, 59, 284, 304, 308], "web": [11, 284, 308], "anl": [11, 284, 308], "gov": [11, 284, 304, 308, 310, 314], "mpas_standalonedata": [11, 136, 308, 313], "dest_path": [11, 59], "remot": [11, 40, 288, 306], "bathymetri": [11, 284, 308], "strategi": 12, "stderr": [12, 38, 49, 284, 286], "loggingcontext": 12, "check_cal": [12, 284], "won": [12, 287, 307, 308], "logger": [12, 18, 38, 49, 66, 93, 120, 284, 286, 307], "full": [12, 38, 92, 110, 259, 260, 269, 284, 286, 288, 303, 306, 307, 313, 316, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331], "although": [12, 139], "captur": 12, "explicit": [12, 287], "go": [12, 46, 53, 238, 240, 280, 284, 286, 287, 288, 307, 314], "subprocess": [12, 38, 92, 93, 109, 284, 287, 304], "produc": [12, 14, 17, 19, 38, 39, 41, 55, 139, 146, 163, 171, 179, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 287, 288, 293, 303, 307, 320, 322, 325, 326, 327, 328, 331, 334], "otherwis": [12, 19, 136, 284, 286, 307, 309, 310, 311, 312, 313, 314, 319], "intent": 12, "desir": [12, 13, 14, 18, 19, 120, 139, 284, 285, 286, 307, 308, 331], "trick": [12, 284], "direct": [12, 13, 14, 79, 212, 225, 269, 275, 276, 307, 314, 319, 325, 326], "snippet": [12, 307], "dome": [12, 66, 280, 284, 286, 331, 337], "setup_mesh": [12, 284], "setupmesh": [12, 284, 286], "create_landice_grid_from_generic_mpas_grid": 12, "mpas_grid": [12, 284], "landice_grid": [12, 284, 307], "l": [12, 120, 139, 307, 314], "quasiuniformsphericalmeshstep": [13, 139, 286], "icosahedralmeshstep": [13, 139, 286], "jigsaw": [13, 67, 71, 73, 74, 76, 78, 80, 184, 197, 242, 247, 252, 284], "complex": [13, 75, 286, 287, 307], "build_cell_width_lat_lon": [13, 74], "opt": [13, 80], "make_jigsaw_mesh": [13, 74], "icosahedr": [13, 67, 69, 154, 184, 197, 242, 247, 252, 270, 271, 272, 273, 277, 278, 286, 320, 321, 322, 323, 327, 328], "significantli": [13, 316, 323], "smooth": 13, "cell": [13, 14, 15, 19, 67, 68, 69, 70, 74, 75, 76, 79, 82, 85, 98, 105, 123, 139, 150, 153, 155, 156, 166, 190, 212, 214, 216, 225, 227, 229, 258, 259, 260, 261, 264, 265, 269, 275, 276, 280, 301, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 334], "quasi": [13, 74, 270, 271, 272, 273, 277, 278, 286, 308, 320, 321, 322, 323, 327, 328, 330, 335], "hand": [13, 101, 287], "restrict": [13, 307, 330], "subdivis": [13, 67, 68, 69, 70, 71], "icosahedron": [13, 68, 69, 70, 71], "tabl": [13, 288, 313, 331], "approxim": [13, 67, 69, 70, 74, 139, 150, 153, 156, 166, 190, 216, 229, 269, 275, 276, 288, 307], "width": [13, 67, 68, 69, 74, 75, 76, 82, 123, 307, 319], "km": [13, 14, 67, 68, 69, 70, 74, 75, 76, 79, 82, 139, 149, 152, 154, 163, 164, 165, 168, 171, 172, 174, 176, 179, 189, 203, 215, 217, 221, 228, 230, 249, 269, 270, 271, 272, 273, 275, 276, 277, 278, 284, 307, 308, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 335, 337], "5": [13, 14, 69, 122, 136, 139, 174, 269, 273, 284, 285, 287, 304, 307, 308, 319, 320, 321, 322, 323, 327, 328, 330, 331, 335], "240": [13, 69, 139, 270, 271, 272, 273, 277, 278, 308, 320, 321, 322, 327, 328], "6": [13, 69, 284, 307, 317, 319, 320, 327, 329, 331, 332], "120": [13, 69, 139, 285, 320, 321, 322, 323, 327, 328], "7": [13, 69, 136, 307, 314, 320, 321, 328, 331], "60": [13, 69, 139, 270, 271, 272, 273, 277, 278, 316, 320, 321, 322, 327, 328], "8": [13, 69, 122, 136, 269, 288, 307, 308, 319, 321, 325, 326, 328, 331], "30": [13, 14, 69, 139, 280, 307, 314, 319, 329, 330, 335], "9": [13, 19, 69, 136, 307, 320, 321, 322, 327, 328, 331], "15": [13, 14, 69, 269, 307, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 335], "11": [13, 69, 136, 307, 331], "3": [13, 69, 136, 139, 269, 284, 285, 288, 304, 307, 308, 313, 314, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331], "13": [13, 69, 307, 319], "94": [13, 69, 323], "spherical_mesh": [13, 75], "cell_width": [13, 67, 68, 69, 70, 74, 75, 76, 82], "icosahedral_method": 13, "jigsaw_mesh_filenam": 13, "jigsaw_geom_filenam": 13, "geom": 13, "jigsaw_jcfg_filenam": 13, "jig": 13, "jigsaw_hfun_filenam": 13, "spac": 13, "triangles_filenam": 13, "mesh_triangl": 13, "mpas_mesh_filenam": 13, "plot": [13, 82, 121, 122, 123, 139, 141, 146, 176, 182, 195, 206, 240, 254, 269, 270, 271, 272, 273, 277, 278, 298, 320, 321, 322, 323, 325, 326, 327, 328, 334, 337], "plot_cell_width": 13, "cell_width_filenam": [13, 82], "cell_width_image_filenam": 13, "cellwidthglob": 13, "cell_width_colormap": 13, "3wbgy5": 13, "add_mesh_dens": 13, "vtk": 13, "convert_to_vtk": 13, "vtk_dir": 13, "base_mesh_vtk": 13, "extract": [13, 15], "lat": [13, 17, 68, 74, 75, 76, 82, 97, 99, 101, 104, 121, 270, 271, 272, 273, 277, 278, 308, 321], "lon": [13, 17, 68, 74, 75, 76, 82, 97, 99, 101, 104, 121, 270, 271, 272, 273, 277, 278, 308, 321], "sphere": [13, 244, 245, 247, 249, 252, 270, 271, 272, 273, 277, 278, 320, 321, 322, 327, 328], "vtk_lat_lon": 13, "far": [13, 136, 258, 264, 265, 287, 307], "But": [13, 136, 280, 284, 287, 288, 307, 308, 313], "hexagon": [13, 79, 307, 325, 326], "planar_hex": [13, 79, 269, 275, 276, 279, 284, 307], "make_planar_hex_mesh": [13, 79, 269, 275, 276, 279, 284, 307], "x": [13, 19, 68, 75, 76, 79, 82, 100, 106, 123, 161, 212, 225, 284, 307, 319, 325, 326, 329], "y": [13, 14, 19, 79, 100, 106, 123, 212, 225, 269, 275, 276, 284, 307, 314, 319, 325, 326], "nx": [13, 79, 280, 284, 307, 329], "ny": [13, 79, 280, 284, 307, 329], "dc": [13, 280, 284, 307], "distanc": [13, 79, 194, 307, 319], "adjac": [13, 316], "center": [13, 19, 79, 122, 194, 212, 225, 280, 307, 316, 319], "admittedli": 13, "oddli": 13, "period": [13, 268, 269, 270, 272, 275, 276, 277, 278, 284, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328], "nonperiodic_x": [13, 284, 307], "nonperiodic_i": [13, 284, 307], "consider": [13, 258, 264, 265, 268, 301], "compute_planar_hex_nx_ni": [13, 284, 307], "lx": [13, 79, 284, 307, 319, 325, 326, 329], "ly": [13, 79, 284, 307, 319, 329], "explan": 13, "subtleti": 13, "account": [13, 79, 288, 307, 309, 310, 312, 313, 314, 331], "behav": 13, "stagger": [13, 79], "physic": [13, 79, 297, 303, 307, 316], "np": [13, 15, 19, 194, 284, 307, 321], "sqrt": [13, 15, 325], "domain": [13, 25, 32, 79, 123, 139, 155, 161, 268, 280, 301, 307, 319, 321, 323, 325, 326, 329, 330, 335, 337], "extra": [13, 288], "factor": 13, "500e3": 13, "160e3": 13, "1e3": [13, 284, 307], "max": [13, 139, 284, 307, 316, 319, 321], "int": [13, 14, 25, 26, 35, 38, 45, 61, 62, 63, 67, 68, 69, 70, 71, 79, 86, 92, 93, 96, 122, 123, 141, 142, 144, 145, 146, 150, 153, 155, 156, 165, 166, 188, 190, 201, 202, 211, 216, 224, 229, 236, 284, 307, 329], "ds_mesh": [13, 15, 19, 85, 123, 284, 307], "creation": [13, 284, 308], "build_mesh": 13, "build_planar_mesh": 13, "too": [13, 14, 25, 35, 38, 45, 92, 93, 155, 280, 284, 287, 307], "distant": 13, "descend": [14, 17, 139, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 284, 286, 287, 307], "modelstep": [14, 139, 284, 286, 307], "update_pio": [14, 25, 155], "make_graph": [14, 25, 155], "At": [14, 38, 49, 282, 283, 286, 307, 323], "set_model_resourc": 14, "thread": [14, 25, 35, 38, 44, 45, 49, 93, 155, 165, 236, 281, 284, 285, 305, 307, 308, 310, 314, 331, 336], "prefix": [14, 40, 136, 139, 144, 145, 188, 201, 202, 211, 224, 286, 288, 308], "end": [14, 149, 152, 284, 286, 287, 288, 303, 305, 307, 310, 319, 320, 321, 325, 326, 329, 334], "yml": 14, "reason": [14, 17, 44, 136, 284, 287, 307, 336], "add_namelist_fil": [14, 25, 139, 284, 286], "add_model_config_opt": [14, 25, 139, 284, 286, 307], "add_streams_fil": [14, 25, 139, 284, 286], "themselv": [14, 287, 306], "question": [14, 284, 308], "never": [14, 136, 305], "hierarch": 14, "run_mod": 14, "config_ocean_run_mod": 14, "time_manag": [14, 139, 307], "config_run_dur": [14, 139, 286, 307], "0024_00": 14, "ale_vertical_grid": 14, "config_vert_coord_mov": 14, "impermeable_interfac": 14, "decomposit": [14, 49, 163, 305, 307], "config_block_decomp_file_prefix": [14, 307], "time_integr": [14, 139, 307, 320, 321, 322, 323, 327, 328], "config_time_integr": [14, 139], "rk4": [14, 139, 287, 320, 321, 322, 323, 327, 328], "filename_templ": [14, 139, 307], "restart": [14, 18, 49, 139, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 285, 287, 293, 294, 303, 305, 307, 331, 336], "output_interv": [14, 139, 307, 320, 321, 322, 323, 327, 328], "0030_00": 14, "clobber_mod": [14, 139, 307], "truncat": [14, 139, 307], "reference_tim": [14, 139], "0001": [14, 139, 307], "01_00": [14, 139, 301, 307], "tracer": [14, 19, 184, 194, 237, 238, 240, 242, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 307, 317, 321, 322, 324, 325, 326, 327, 328, 329], "xtime": [14, 15, 86, 139, 307], "normalveloc": [14, 18, 19, 139, 181, 226, 268, 269, 275, 276, 279, 284, 307, 329], "layerthick": [14, 18, 139, 181, 258, 262, 263, 264, 265, 269, 275, 276, 279, 284, 307], "refzmid": [14, 258, 264, 265, 284, 307], "reflayerthick": 14, "kineticenergycel": 14, "relativevorticitycel": 14, "unlik": [14, 307], "clariti": [14, 284], "global_converg": [14, 286, 307, 318], "substitut": 14, "config_write_output_on_startup": [14, 307], "0000_00": [14, 307], "config_use_mom_del2": [14, 307], "config_implicit_bottom_drag_coeff": [14, 307], "0e": [14, 326, 329], "config_use_cvmix_background": 14, "config_cvmix_background_diffus": [14, 307], "config_cvmix_background_viscos": [14, 307], "worri": 14, "sometim": [14, 258, 264, 265, 280, 282, 284, 286, 305, 307, 336], "togeth": [14, 18, 136, 280, 305, 307, 336], "overkil": 14, "reli": [14, 284, 286, 307], "along": [14, 19, 136, 269, 284, 306, 307], "dict": [14, 20, 26, 28, 29, 31, 38, 42, 49, 88, 89, 91, 95, 96, 112, 114, 115, 121, 125, 126, 127, 139, 141, 149, 152, 158, 187, 200, 210, 223, 245, 247, 252, 284, 286, 307], "config_mom_del2": [14, 269, 284, 307], "precis": [14, 139, 284, 307], "bool": [14, 25, 26, 30, 38, 40, 48, 49, 50, 55, 59, 60, 63, 109, 110, 114, 119, 120, 121, 122, 123, 127, 151, 154, 155, 167, 173, 184, 191, 197, 236, 238, 240, 242, 247, 252, 307], "possibli": [14, 38, 49, 281, 284, 286, 288, 307], "at_setup": [14, 30, 151, 167, 173, 191, 307], "being": [14, 30, 38, 49, 109, 111, 114, 120, 136, 139, 151, 167, 173, 191, 284, 286, 287, 288, 307, 316], "dt": [14, 139, 165, 236, 284, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335], "proport": [14, 139, 307, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335], "dt_per_km": [14, 139, 270, 271, 272, 273, 277, 278, 307, 319, 325, 326, 330, 335], "stackoverflow": [14, 60, 307], "1384565": [14, 307], "7728169": [14, 60, 307], "config_dt": [14, 139, 307], "strftime": [14, 307], "gmtime": [14, 307], "run_time_step": [14, 165, 284, 307], "durat": [14, 139, 269, 275, 276, 279, 285, 307], "run_second": [14, 307], "btr_dt": [14, 139, 165, 236, 284, 307, 319], "btr_dt_per_km": [14, 139, 307, 319], "config_btr_dt": [14, 139, 307], "bit": [14, 136, 287, 305, 307, 319, 331], "complic": [14, 287, 288, 307], "slightli": [14, 288], "sophist": 14, "immutable_stream": [14, 307], "var_struct": [14, 300], "var": [14, 116, 300, 307], "var_arrai": [14, 300], "tag": [14, 306], "taken": [14, 25, 155, 270, 271, 272, 273, 277, 278, 284, 307, 314, 331], "past": 14, "experi": [14, 136, 287, 316], "difficult": [14, 136, 313], "synchron": [14, 306], "out_nam": 14, "equival": [14, 288, 307, 309], "template_replac": [14, 28, 29, 139], "treat": [14, 285, 287], "jinja2": [14, 28, 29, 115, 149, 152], "render": [14, 28, 29, 115], "d_": 14, "restart_interv": 14, "stream_replac": 14, "qu240": [14, 284, 287, 288, 308, 331], "qu240dynamicadjust": 14, "adjust": [14, 136, 139, 266, 308], "interv": [14, 15, 160, 320, 321, 322, 323, 327, 328], "spin": 14, "reus": [14, 19, 123, 284, 287, 288, 307, 308, 331], "qualit": 14, "forgotten": 14, "broken": [14, 284, 287], "immedi": [14, 66, 288, 307], "miss": [14, 284, 307, 308], "detect": [14, 19, 308, 309, 311, 312, 313, 323, 331], "gpmeti": [14, 308], "divid": [14, 19, 316], "partition_graph": [14, 25, 155], "circumst": [14, 18, 38, 39, 284, 307], "wast": 14, "update_namelist_pio": 14, "config_pio_num_iotask": 14, "config_pio_strid": 14, "particularli": [14, 304, 307, 330, 335], "v1": [14, 316], "better": [14, 17, 136, 331], "v2": [14, 308, 316], "littl": [14, 287, 288, 306, 307], "feel": [14, 136, 284, 307], "runtime_setup": [14, 17, 35, 45, 269, 275, 276, 286], "yourself": [14, 307, 313], "culler": 14, "cull": [14, 269, 275, 276, 284, 307], "model_step": 14, "make_graph_fil": 14, "field": [14, 15, 18, 82, 84, 85, 122, 123, 139, 142, 143, 144, 145, 188, 195, 201, 202, 206, 211, 224, 246, 254, 258, 264, 265, 268, 269, 273, 275, 276, 279, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328], "weight": [14, 15, 17, 84, 258, 264, 265, 307, 316], "weight_field": [14, 84], "helper": [15, 280, 281], "handi": 15, "area_for_field": 15, "right": [15, 136, 139, 286, 288, 307, 308, 316, 319, 321, 331], "edg": [15, 19, 85, 98, 101, 105, 122, 123, 212, 213, 225, 226, 268, 307], "dimens": [15, 19, 85, 123, 141, 146, 188, 201, 279, 319], "statist": [15, 308], "calcul": [15, 275, 284, 286], "xr": [15, 19, 212, 213, 214, 225, 226, 227, 284, 307], "compute_error": 15, "field_exact": 15, "field_mpa": [15, 145, 202], "mesh_filenam": [15, 19, 25, 84, 122, 155, 161], "open_dataset": [15, 19, 284, 307], "diff": 15, "total_area": 15, "sum": 15, "den_l2": 15, "num_l2": 15, "time_index_from_xtim": 15, "closest": [15, 86, 139, 280], "get_output_field": [15, 139], "field_nam": [15, 19, 123, 143, 144, 145, 188, 201, 202, 211, 224, 246], "output_filenam": [15, 139, 149, 152, 161], "ds_out": 15, "time_index": [15, 86], "isel": [15, 19], "frequent": [17, 266, 300], "observ": [17, 306], "dataset": [17, 85, 86, 123, 212, 225, 258, 264, 265, 284, 307], "region": [17, 19, 306, 308], "pyremap": [17, 102], "interpol": [17, 96, 308], "hood": 17, "esmf_regridweightgen": 17, "mappingfilestep": [17, 19], "woa": 17, "mytestcas": 17, "__int__": 17, "make_map": 17, "64": [17, 316], "bilinear": [17, 96, 321, 330, 335], "filenam": [17, 18, 38, 40, 41, 49, 90, 97, 98, 99, 100, 104, 105, 106, 120, 122, 126, 128, 284, 286, 288, 307], "woa23_decav_0": 17, "25_extrap": 17, "20230414": 17, "initial_condition_databas": [17, 308], "destin": [17, 96, 97, 98, 99, 100, 101, 102], "src_from_lon_lat": 17, "lon_var": [17, 97, 99, 104], "lat_var": [17, 97, 99, 104], "dst_from_mpa": 17, "mesh_nam": [17, 97, 98, 99, 100, 101, 104, 105, 106, 142, 144, 145, 154, 188, 195, 201, 202, 206, 211, 224, 254, 286], "qu60": 17, "subclass": [17, 71, 74, 75, 76, 81, 139, 307], "src_": 17, "dst_": 17, "pick": [17, 107, 108], "vizmap": [17, 184, 197, 242, 286], "128": [17, 285, 310, 311, 314], "cosine_bell_viz": [17, 19, 271, 321, 330, 335], "dlon": [17, 101, 321, 330, 335], "dlat": [17, 101, 321, 330, 335], "remap_method": [17, 321, 330, 335], "src_from_mpa": 17, "dst_global_lon_lat": 17, "lon_min": [17, 101], "With": [17, 288], "approach": [17, 284, 287, 288, 304, 307, 316], "perhap": [17, 19, 41, 280, 282], "cover": [17, 301, 307], "nearli": [17, 284, 286, 305, 306, 307], "workflow": [17, 284, 288], "critic": [18, 307], "easiest": [18, 136, 288], "validate_var": [18, 38, 41, 139, 149, 152, 236, 284], "meth": 18, "add_output_fil": [18, 39, 284, 286, 307], "temperatur": [18, 181, 268, 269, 276, 279, 284, 303, 307, 319, 320, 321, 322, 323, 327, 328, 329, 330, 335], "salin": [18, 181, 268, 269, 279, 284, 307, 319, 320, 321, 322, 323, 327, 328, 329, 330, 335], "done": [18, 35, 45, 284, 286, 288, 307, 331], "compare_vari": [18, 307], "filename1": [18, 120, 307], "filename2": [18, 120, 307], "compact": [18, 307], "output_full_run": 18, "output_restart_run": 18, "all_pass": [18, 120], "valueerror": [18, 287], "quiet": [18, 109, 110, 120, 127], "report": 18, "threshold": [18, 139, 277, 320, 321, 322, 323, 325, 326, 327, 328], "l1": [18, 120], "00000000000000e": 18, "l2": [18, 120, 139, 142, 143, 270, 271, 272, 273, 277, 278, 320, 321, 322, 323, 325, 326, 327, 328], "l_infin": 18, "linf": [18, 120], "test_nightly_latest": 18, "threads_test": 18, "1thread": [18, 269, 319], "2thread": [18, 319], "test_20210616": 18, "further_valid": 18, "zero": [18, 259, 260, 261, 262, 263, 268, 269, 279, 307, 320, 321, 322, 327, 328, 329], "l1_norm": [18, 120], "l2_norm": [18, 120], "linf_norm": [18, 120], "nonzero": [18, 120], "solut": [18, 135, 142, 144, 145, 188, 201, 202, 211, 212, 213, 214, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 271, 273, 275, 276, 285, 304, 307, 317, 323, 324, 325], "aspect": [19, 123, 307], "routin": 19, "use_mplstyl": 19, "sheet": 19, "font": 19, "consist": [19, 25, 37, 136, 155, 266, 288, 307, 308, 319], "plot_horiz_field": [19, 284, 307], "patch": [19, 122, 123, 307], "polygon": 19, "character": [19, 320, 322, 327, 328], "accordingli": [19, 94], "cell_mask": [19, 123], "ds_init": [19, 307], "maxlevelcel": [19, 139, 258, 259, 260, 261, 262, 263, 264, 265, 307], "final_normalveloc": [19, 307], "t_index": [19, 123, 307], "vmin": [19, 123, 307, 321], "max_veloc": [19, 307], "vmax": [19, 123, 307, 321], "cmap": [19, 123, 284, 307], "cmo": [19, 284, 307, 320, 322, 323, 327, 328], "balanc": [19, 197, 273, 284, 307, 320, 322, 323, 327, 328], "show_patch_edg": [19, 123, 284, 307], "water": [19, 273, 275, 307, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330], "column": [19, 234, 235, 237, 238, 240, 273, 279, 288, 292, 293, 294, 296, 297, 298, 300, 301, 303, 316, 317, 323, 324, 331, 332, 333], "increas": [19, 139, 287], "effici": [19, 284, 307], "patch_mask": [19, 123], "subsequ": [19, 284, 336], "ncell": [19, 188, 201, 284, 307], "nedg": [19, 284, 307], "cell_patch": 19, "cell_patch_mask": 19, "out_file_nam": [19, 123], "720": 19, "figsiz": [19, 122, 123], "bottomdepth": [19, 139, 258, 259, 261, 262, 263, 264, 265, 284, 307, 316, 323], "edge_patch": 19, "edge_patch_mask": 19, "plot_global_mpas_field": 19, "cmocean": [19, 284, 307], "noqa": [19, 66, 284, 307], "f401": [19, 284, 307], "da": [19, 122], "tracer1": [19, 139, 320, 322, 327, 328], "nvertlevel": [19, 123, 141, 146, 258, 264, 265, 284, 307, 316], "out_filenam": [19, 118, 121, 122, 257], "colormap_sect": [19, 121, 122], "titl": [19, 121, 122, 123, 139, 141, 146], "plot_land": [19, 121, 122], "central_longitud": [19, 122], "180": [19, 68, 75, 76, 82, 101, 139, 320, 321, 322, 327, 328], "disabl": [19, 268, 321, 337], "contin": [19, 121, 122], "overlain": 19, "degre": [19, 68, 75, 76, 82, 101, 308, 319], "quantiti": 19, "antimeridian": 19, "colormap": [19, 121, 122, 123, 270, 271, 272, 273, 277, 278, 307, 320, 321, 322, 323, 327, 328], "cosin": [19, 139, 184, 186, 187, 189, 192, 194, 195, 203, 206, 250, 254, 271, 286, 307, 317, 318, 320, 322, 323, 324, 327, 328, 330, 335], "bell": [19, 139, 184, 186, 187, 189, 192, 194, 195, 203, 206, 250, 254, 271, 286, 307, 317, 318, 320, 322, 323, 324, 327, 328, 330, 335], "converg": [19, 184, 188, 197, 201, 202, 208, 209, 211, 221, 222, 224, 246, 270, 271, 272, 273, 275, 276, 277, 278, 282, 285, 306, 307, 320, 321, 322, 323, 325, 327, 328, 330, 335], "colormap_nam": [19, 121, 122, 270, 271, 272, 277, 278, 320, 321, 322, 323, 327, 328], "viridi": [19, 270, 271, 272, 277, 278, 307, 320, 321, 322, 327, 328], "norm": [19, 120, 121, 122, 139, 143, 146, 270, 271, 272, 273, 277, 278, 320, 321, 322, 323, 325, 326, 327, 328], "norm_typ": [19, 121, 122, 270, 271, 272, 277, 278, 320, 321, 322, 323, 327, 328], "colorbar": [19, 121, 122, 123, 270, 271, 272, 277, 278, 320, 321, 322, 323, 327, 328], "colorbar_limit": [19, 122, 270, 271, 272, 277, 278, 320, 322, 323, 327, 328], "standard": [19, 287, 288, 297, 307, 310, 331], "logarithm": [19, 123], "upper": [19, 123], "bound": [19, 275, 276], "plot_global_lat_lon_field": 19, "norm_arg": [19, 121, 321], "tick": [19, 121, 321], "mark": [19, 288, 321], "colorbar_tick": [19, 121, 321], "symlog": [19, 121], "symmetr": 19, "central": [19, 321], "color": [19, 122, 123], "normal": [19, 212, 213, 225, 226, 268, 273, 284, 285, 288, 307, 313, 323], "symlognorm": 19, "lognorm": 19, "hous": [20, 320, 321, 322, 327, 328], "kei": [20, 49, 114, 139, 141, 286], "max_memori": [25, 35, 38, 45, 155, 284], "graph_filenam": [25, 84, 149, 152, 155], "make_yaml": 25, "stride": [25, 37, 155], "partit": [25, 34, 44, 61, 84, 155, 269, 275, 276, 284, 308, 309, 310, 311, 312, 314, 331], "model_config_data": 25, "streams_data": 25, "neither": [25, 38, 49, 96, 155, 165, 236, 284], "nor": [25, 38, 49, 96, 155, 165, 236, 284, 307], "append": [25, 38, 40, 49, 96, 155, 163, 164, 165, 168, 171, 172, 174, 176, 179, 180, 182, 236, 284, 294, 296, 298], "ideal": [25, 35, 38, 45, 92, 93, 96, 139, 155, 165, 236, 237, 238, 240, 280, 284, 287, 306, 307, 308, 337], "fewer": [25, 35, 38, 45, 92, 93, 155, 165, 236, 284, 307, 331], "memori": [25, 35, 38, 45, 155, 284, 308], "mb": [25, 35, 38, 45, 155, 284, 308], "placehold": [25, 35, 38, 45, 155, 284, 331], "diverg": [31, 158, 272, 317, 320, 323, 324, 327], "counterpart": [31, 139, 158], "nest": [31, 125, 127, 158], "graph_fil": 32, "run_as_subprocess": [38, 284], "smallest": [38, 284, 305, 316, 337], "unit": [38, 97, 101, 104, 284, 305, 319, 337], "term": [38, 305, 307, 325, 326], "necessarili": [38, 40], "input_data": 38, "until": [38, 39, 284, 286, 331], "finish": [38, 39, 81, 284, 307], "known": [38, 39, 136, 271, 284, 307], "suffici": [38, 284], "establish": [38, 39, 284], "is_depend": [38, 284], "machine_info": [38, 284], "machineinfo": 38, "combin": [38, 40, 49, 57, 62, 95, 125, 284, 285, 286, 304, 307, 308, 331], "base_work_dir": [38, 49, 111, 284, 286], "log_filenam": [38, 49, 284, 286], "redirect": [38, 284], "extern": [38, 136, 266, 281, 284, 286, 300, 317, 332], "turn": [38, 56, 281, 284, 304, 307, 329], "access": [39, 286, 287, 288, 307, 309, 313, 314], "database_compon": [40, 284], "work_dir_target": [40, 284], "come": [40, 136, 284, 288, 307, 309, 310, 311, 312, 313, 314, 317], "_database_root": 40, "available_resourc": [42, 91], "constrain": [42, 150, 153, 156, 166, 190, 216, 229, 269, 275, 276, 284, 307], "cores_per_nod": [42, 91, 94, 136, 308, 309, 310, 311, 312, 313, 314, 331], "everi": [43, 269, 284, 286, 287, 303, 304, 305, 307, 319, 329], "child": [43, 139, 281, 284, 286, 287], "subtask": 45, "step_symlink": [49, 286], "outsid": [49, 50, 280, 282, 284, 286, 288], "stdout_logg": [49, 286], "goe": [49, 284, 286, 307], "regardless": [49, 286], "new_step_log_fil": [49, 286], "run_by_default": [50, 286], "assum": [51, 115, 126, 136, 288, 307, 314, 319], "prior": [51, 284], "step_path": 55, "variant": [55, 186, 199, 242, 244, 269, 280, 285, 287, 288, 307, 313, 316, 319, 320, 321, 322, 327, 328], "uncach": 55, "datestamp": 55, "yymmdd": [55, 308], "dry": [55, 285], "meta": 57, "empti": [57, 284, 287, 288, 305, 307], "link_nam": 60, "overwrit": 60, "55742015": 60, "fileexistserror": 60, "unless": [60, 110, 288], "isadirectoryerror": 60, "qo": [61, 309, 310, 312, 313, 314, 331], "qualiti": [61, 309, 310, 312, 313, 314, 331], "servic": [61, 309, 310, 312, 313, 314, 331], "constraint": [61, 314, 331], "wall_tim": [61, 331], "wall": [61, 331], "target_cor": 62, "min_cor": 62, "decomposition_test": [66, 280, 331], "decompositiontest": [66, 280], "e501": [66, 307], "turquois": [66, 310], "usr": [66, 136, 310, 331], "climat": [66, 309, 310, 311, 313, 331], "mhoffman": 66, "constant": [67, 74, 75, 139, 268, 278, 307, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 335], "latitud": [68, 75, 97, 99, 101, 104, 121, 122, 320, 321, 322, 323, 327, 330, 335], "longitud": [68, 75, 76, 82, 97, 99, 101, 104, 121, 122, 320, 321, 322, 323, 327, 330, 335], "ndarrai": [68, 75, 76, 82, 86, 121, 123, 161, 194, 256, 257, 307], "length": [68, 75, 76, 82], "90": [68, 75, 76, 82, 139, 284, 320, 321, 322, 327, 328], "static": [69, 70], "rule": 69, "thumb": 69, "achiev": [70, 285], "uniform": [74, 79, 149, 152, 189, 203, 249, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 286, 307, 308, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 335], "natur": 79, "jigsawpi": [80, 284], "jigsaw_jig_t": 80, "meti": 84, "area": [85, 307], "dt_target": 86, "start_xtim": 86, "char": 86, "defaults_filenam": 87, "total": [91, 284, 285, 287, 307, 308, 310, 331], "substep": [92, 93], "command_line_arg": 92, "cpus_per_nod": 94, "map_filenam": 96, "src_grid_info": 96, "dst_grid_info": 96, "neareststod": [96, 321, 330, 335], "conserv": [96, 321, 330, 335], "map_": 96, "source_typ": 96, "_": [96, 136, 284, 286, 288, 307, 329], "dest_typ": 96, "1d": [97, 101, 104, 121, 139, 256, 257, 258, 259, 260, 261, 262, 264, 265], "2d": [97, 101, 104, 121, 270], "5x0": [97, 101, 104], "5degre": [97, 101, 104], "coordin": [97, 99, 100, 104, 106, 121, 123, 212, 225, 258, 264, 265, 315, 317, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 334], "mesh_typ": [98, 105, 280, 284, 286], "vertex": [98, 105], "x_var": [100, 106], "y_var": [100, 106], "proj_attr": [100, 106], "proj_str": [100, 106], "proj": [100, 106], "left": [101, 139, 307, 316, 319, 321], "remapp": [102, 103], "remap_fil": 102, "progress": [109, 110], "is_task": 110, "steps_to_skip": 110, "component_nam": 111, "config_filepath": 111, "unpickl": [112, 284], "cached_step": 113, "identifi": [113, 136, 281, 300, 337], "task_list": 114, "_all": 114, "streams_filenam": 115, "lxml": [115, 117, 131], "etre": [115, 117, 131], "new_child": 116, "children": 116, "sub": [116, 307], "new_tre": 117, "infin": [120, 320, 322, 327, 328], "toler": 120, "data_arrai": 121, "colorbar_label": [121, 122], "subtitl": [121, 122], "dpi": 122, "200": [122, 139, 275, 276, 307, 319, 325, 326, 329], "patch_edge_color": 122, "horizont": [122, 123, 139, 161, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 319, 320, 322, 325, 326, 327, 328, 329], "inch": [122, 123], "dot": [122, 287], "face": 122, "ax": 123, "z_index": 123, "cmap_set_und": 123, "cmap_set_ov": 123, "cmap_scal": 123, "cmap_titl": 123, "vert_dim": 123, "depth": [123, 139, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 307, 308, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330], "slice": [123, 142], "fieldnam": 123, "matplotlib": [123, 124, 307], "multi": 123, "panel": 123, "visibl": 123, "bar": 123, "ratio": 123, "Not": 123, "style": [124, 139, 306, 307], "classmethod": 126, "jinja": [126, 139, 270, 271, 272, 277, 278], "namelist_templ": 130, "polarisyaml": [130, 131], "processed_registry_filenam": 131, "registri": [131, 268, 300], "steam": 131, "1_anvil_intel_impi": [132, 136], "mvapich": [132, 136, 309], "ve": [132, 133, 134, 135, 137, 288, 307], "1_anvil_gnu_openmpi": 132, "1_chicoma": 133, "cpu_gnu_mpich": [133, 137], "crai": [133, 136, 137, 310, 314], "1_chrysalis_intel_openmpi": 134, "1_chrysalis_gnu_openmpi": 134, "soon": [135, 136, 307, 331], "1_compy_intel_impi": 135, "1_compy_gnu_openmpi": 135, "load_polaris_env": [136, 288, 307, 331], "therefor": [136, 284, 305, 307], "chicoma": [136, 313, 331], "mpich": [136, 288, 306, 310, 314, 331], "compi": [136, 312, 331], "pm": [136, 314, 331], "compymcnodefac": [136, 313], "perlmutt": [136, 310, 313, 331], "pretti": [136, 284, 287, 307, 308], "conda_path": [136, 288], "osx": [136, 313], "clang": [136, 288], "1_": 136, "morpheu": 136, "cobalt": [136, 309, 310, 311, 312, 313, 314], "single_nod": [136, 308, 309, 310, 311, 312, 313, 314, 331], "mpirun": [136, 304, 308, 309, 310, 311, 312, 313, 314, 331], "srun": [136, 284, 304, 307, 308, 309, 310, 311, 312, 313, 314, 331], "parallel_execut": [136, 304, 308, 309, 310, 311, 312, 313, 314, 331], "modules_befor": [136, 310, 314], "modules_aft": [136, 310, 314], "polaris_env": [136, 309, 310, 311, 312, 313, 314], "deploi": [136, 288, 306, 309, 310, 311, 312, 313, 314], "mpi_gnu": [136, 309, 310, 311, 312, 313, 314], "hdf5": [136, 309, 310, 311, 312, 313, 314], "use_e3sm_hdf5_netcdf": [136, 309, 310, 311, 312, 313, 314], "discoveri": 136, "hostnam": 136, "hostname_contain": 136, "queu": 136, "laptop": [136, 288, 307, 308], "workstat": [136, 288], "high": [136, 284, 311, 313], "hpc": [136, 288, 310, 313], "safest": [136, 288], "mpi_": 136, "simpl": [136, 139, 287, 300, 307, 331], "compiler_gnu": 136, "compiler_intel": 136, "hopefulli": [136, 308], "parlanc": 136, "concret": 136, "ubuntu": 136, "spec": [136, 304, 314], "gcc": 136, "curl": 136, "81": 136, "buildabl": 136, "install_missing_compil": 136, "cc": 136, "bin": [136, 288, 314, 331], "cxx": 136, "f77": 136, "fc": 136, "operating_system": 136, "ubuntu22": 136, "04": 136, "extra_rpath": 136, "luck": 136, "catch": [136, 285], "22": 136, "guess": [136, 307], "correct": [136, 288], "potenti": [136, 161, 174, 284, 307, 319], "purg": 136, "perl": 136, "32": [136, 285, 331], "bsnc6lt": 136, "ugetvbp": 136, "sxfyy4k": 136, "2020": 136, "304": 136, "n3b5fye": 136, "j3zxncu": 136, "7ohuiwq": 136, "k2zu3y5": 136, "mirrcz7": 136, "variou": [136, 234, 284, 288, 292], "ask": 136, "gb": 136, "minut": [136, 269, 285, 319, 336], "hour": [136, 139, 275, 276, 285, 303, 310, 314, 320, 321, 322, 323, 325, 326, 327, 328, 331, 334], "zlib": 136, "incompat": 136, "ubuntu20": 136, "readlin": 136, "pkgconf": 136, "spackdir": 136, "env": [136, 314], "arch": 136, "repositori": [136, 282, 306, 307, 331], "x86_64_v4": 136, "free": [136, 268, 307, 308], "touch": [136, 288], "everyth": 136, "1_pm": 137, "ever": [139, 287], "expand": [139, 316], "oceanmodelstep": [139, 284, 307], "decid": [139, 307], "veri": [139, 281, 284, 287, 288, 300, 307, 323, 329], "earli": [139, 317, 331], "stage": [139, 268, 284, 286, 288, 296, 303, 317, 331], "map_yaml_to_namelist": 139, "heurist": 139, "round": [139, 320, 321, 322, 327, 328], "cell_count": [139, 150, 153, 156, 166, 190, 216, 229, 307], "goal_cells_per_cor": [139, 307, 320, 321, 322, 325, 326, 327, 328, 330, 335], "pinch": 139, "2000": [139, 280, 301, 303, 307, 334], "max_cells_per_cor": [139, 307, 320, 321, 322, 325, 326, 327, 328, 330, 335], "seciton": 139, "control": [139, 270, 271, 272, 273, 277, 278, 284, 308, 319, 320, 321, 322, 327, 328, 329, 331], "scale": [139, 319, 327, 331], "tri": [139, 287], "apport": 139, "dai": [139, 160, 174, 269, 270, 271, 272, 273, 277, 278, 279, 303, 307, 319, 320, 321, 322, 323, 327, 328, 329, 334], "form": [139, 337], "dddd_hh": [139, 160], "ss": [139, 160], "get_time_interval_str": 139, "run_dur": [139, 320, 321, 322, 323, 327, 328], "fill": 139, "dt_str": 139, "run_duration_str": 139, "output_interval_str": 139, "yaml_filenam": [139, 149, 152], "caviti": [139, 287, 307, 308, 316], "frazil": 139, "flux": [139, 268, 329], "fix": [139, 307], "add_spherical_base_mesh_step": [139, 286], "spherical_converg": [139, 273, 286, 320, 321, 322, 327, 328], "icos_resolut": [139, 320, 321, 322, 327, 328], "480": [139, 320, 321, 322, 327, 328], "qu_resolut": [139, 320, 321, 322, 327, 328], "150": [139, 320, 321, 322, 327, 328], "210": [139, 316, 320, 321, 322, 327, 328], "evalu": [139, 142, 143, 144, 145, 188, 201, 202, 211, 213, 214, 224, 226, 227, 246, 270, 272, 277, 278, 320, 321, 322, 323, 327, 328], "convergence_eval_tim": [139, 320, 321, 322, 323, 327, 328], "24": [139, 271, 321, 334], "convergence_thresh": [139, 321], "error_typ": [139, 142, 143, 320, 321, 322, 323, 327, 328], "convergence_forward": [139, 270, 271, 272, 277, 278, 321, 323], "split_explicit": [139, 320, 321, 322, 323, 327, 328], "rk4_dt_per_km": [139, 320, 321, 322, 323, 327, 328], "split": [139, 287], "split_dt_per_km": 139, "barotrop": [139, 165, 236, 284, 307, 319, 329], "simul": [139, 275, 276, 284, 305, 307, 318, 319, 320, 323, 325, 326, 330, 331, 335], "numer": [139, 270, 272, 277, 278, 320, 322, 325, 326, 327, 328], "infti": [139, 316], "inf": [139, 142, 143, 323], "infrastructur": [139, 287, 307], "add_cosine_bell_task": [139, 281], "sphericalconvergenceforward": [139, 270, 271, 272, 273, 277, 278], "invok": 139, "analyz": [139, 141, 187, 200, 245, 247, 252, 307, 320, 321, 322, 327, 328], "split_explicit_t": [139, 307], "convergenceforward": [139, 275, 276], "convergenceanalysi": [139, 270, 271, 272, 273, 275, 276, 277, 278], "convergence_var": [139, 141], "zidx": [139, 141, 142, 144, 145, 146, 188, 201, 202, 211, 224], "exact_solut": 139, "state": [139, 144, 161, 163, 164, 171, 174, 179, 188, 201, 211, 224, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 285, 307, 321, 323], "put": [139, 288, 307], "grid_1d": 139, "generate_1d_grid": 139, "vertical_grid": [139, 256, 258, 264, 265, 280, 284, 307, 308, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "z": [139, 141, 142, 144, 145, 146, 188, 201, 202, 211, 224, 259, 260, 261, 262, 263, 264, 265, 307, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "star": [139, 263, 265, 307, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "init_vertical_coord": [139, 284, 307], "minlevelcel": [139, 258, 260, 261, 262, 263, 264, 265, 307], "cellmask": [139, 258, 261, 264, 265, 307], "zmid": [139, 258, 264, 265, 307], "restingthick": [139, 258, 263, 264, 265, 307], "entir": [139, 307, 319, 336], "petersen": [139, 288, 307, 319], "et": [139, 307, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328], "al": [139, 307, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328], "2015": [139, 307, 319], "int_": 139, "rho": 139, "dv": 139, "sort": [139, 281, 282, 287, 288], "compute_rp": [139, 307], "csv": [139, 270, 271, 272, 273, 277, 278, 307], "dependencies_dict": 141, "rate": [141, 143, 144, 188, 201, 211, 224, 246, 270, 271, 272, 273, 275, 276, 277, 278, 307, 320, 321, 322, 323, 325, 326, 327, 328, 329], "variable_nam": [142, 146], "exact": [142, 144, 145, 188, 201, 202, 211, 212, 213, 214, 224, 225, 226, 227, 271, 273, 275, 276, 287, 325, 326], "conv_thresh": [143, 246, 325, 326], "deriv": [144, 211, 224], "subdivid": [154, 286], "dynamic_ntask": 155, "dynam": [155, 266, 279, 308, 319, 320, 321, 322, 323, 327, 328, 329, 330], "available_cor": 157, "estim": [157, 159, 307], "time_str": 160, "initial_state_filenam": 161, "energi": [161, 174, 306, 307, 319], "len": [161, 307], "output_fil": [161, 284, 307], "shorter": [171, 285, 293], "step_subdir": [180, 294], "processor": [180, 284, 294, 319], "include_viz": [184, 197, 242, 286], "advect": [184, 242, 270, 271, 272, 273, 277, 278, 320, 321, 322, 325, 326, 327, 328, 329], "less": [184, 197, 242, 247, 252, 284, 316], "max_valu": 194, "ri": 194, "accord": [194, 323, 325, 326, 331], "meter": [194, 256, 257, 320, 322, 327], "radiu": [194, 320, 321, 322, 327, 328], "testcas": [205, 307, 308, 319, 329, 331], "inerti": [208, 209, 210, 212, 215, 217, 219, 275, 286, 317, 324], "graviti": [208, 209, 210, 212, 215, 217, 219, 275, 286, 317, 324], "wave": [208, 209, 210, 212, 215, 217, 219, 225, 275, 284, 286, 307, 317, 319, 324, 326], "analys": [210, 223], "angleedg": [212, 225], "angl": [212, 225, 323], "posit": [212, 225, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 307, 316, 329], "xcell": [212, 225, 284, 307], "ycell": [212, 225, 284, 307], "xedg": [212, 225, 284, 307], "yedg": [212, 225], "f0": 212, "corioli": [212, 275, 276, 307, 319, 320, 321, 322, 323, 326, 327, 328, 329], "eta0": [212, 225], "amplitid": [212, 225], "kx": [212, 225], "ky": [212, 225], "angular": [212, 225], "frequenc": [212, 225, 269], "veloc": [213, 226, 268, 269, 273, 275, 276, 286, 288, 307, 320, 321, 322, 323, 327, 328, 329, 331], "norm_vel": 213, "eta": [214, 227, 325, 326], "taskdir": [217, 219, 230, 232], "manufactur": [221, 222, 223, 225, 228, 230, 232, 276, 317, 324], "mix": [235, 280, 281, 320, 325, 326, 329], "param": [235, 237], "resources_fix": 236, "ag": [237, 238, 240], "evolv": [237, 306, 316, 320, 321, 322, 327, 328, 329], "ideal_ag": [238, 240], "case_nam": [242, 245, 247, 249, 250, 252], "transport": [244, 245, 247, 249, 252, 270, 272, 277, 278, 320, 321, 322, 327, 328], "nondivergent_2d": [244, 266, 274, 327], "divergent_2d": [244, 266, 274, 322], "correlated_tracers_2d": [244, 266, 274, 320], "rotation_2d": [244, 266, 274, 328], "layer": [256, 257, 258, 262, 263, 264, 265, 268, 269, 270, 272, 275, 276, 277, 278, 279, 307, 308, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "bottom": [258, 259, 260, 261, 262, 263, 264, 265, 268, 307, 308, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330], "thick": [258, 262, 263, 264, 265, 269, 270, 272, 273, 277, 278, 279, 301, 307, 308, 316, 319, 320, 322, 323, 325, 327, 328, 334], "stretch": [258, 264, 265, 307, 316], "elev": [258, 264, 265, 307, 316], "midpoint": [258, 264, 265, 307], "reftopdepth": [258, 261, 262, 264, 265, 307], "down": [258, 259, 260, 261, 262, 263, 264, 265, 307, 316, 321], "ref": [258, 264, 265, 307], "middl": [258, 264, 265, 307], "refbottomdepth": [258, 259, 260, 261, 262, 264, 265, 284, 307], "refinterfac": [258, 264, 265, 307], "element": [258, 264, 265, 307], "vertcoordmovementweight": [258, 264, 265, 307], "movement": [258, 264, 265, 307], "alter": [259, 260, 284, 286, 306, 307, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330], "partial": [259, 260, 307, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "seafloor": [259, 261, 262, 263, 316], "unstretch": 263, "shelv": [266, 308, 316], "ssh_adjust": [266, 284, 308], "compass_branch": 266, "example_compact": [266, 281, 300, 308], "default_input": [266, 281, 300, 307, 308], "ocean_model": [266, 288, 308], "latest": [266, 288, 300, 306, 317, 331], "compat": [266, 288, 300, 304, 306], "verison": 266, "geostroph": [266, 274, 317, 324], "manufactured_solut": [266, 274, 281, 326], "single_column": [266, 274, 281, 300, 302, 329], "minim": 268, "fcell": [268, 284, 307, 320, 321, 322, 327, 328], "fedg": [268, 284, 307, 320, 321, 322, 327, 328], "fvertex": [268, 284, 307, 320, 321, 322, 327, 328], "slip": 268, "solid": [268, 301, 319, 321], "tangenti": 268, "nonperiod": 268, "drag": [268, 270, 271, 272, 273, 277, 278], "mass": 268, "momentum": [268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 325, 326], "scalar": 268, "rigid": [268, 328], "solv": [268, 304, 316], "mid": [268, 319, 327], "vari": [268, 270, 271, 272, 273, 277, 278, 284, 304, 313, 316, 321, 323], "consult": [268, 307], "tidal_forc": 268, "eddi": [269, 319], "addition": [269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 284, 309, 310, 311, 312, 314], "diffus": [269, 270, 271, 272, 273, 275, 276, 277, 278, 279], "50": [269, 275, 276, 307, 319, 325, 326, 329], "prescrib": [269, 275, 276, 323], "intens": 269, "enough": [269, 284, 287, 307], "sphere_transport": [270, 272, 277, 278, 320, 322, 327, 328], "spheretransport": [270, 272, 277, 278], "deform": [270, 277, 327], "flow": [270, 272, 277, 278, 319, 320, 321, 322, 323, 327, 328], "distribut": [270, 271, 272, 277, 278, 320, 322, 327, 328], "scheme": [270, 272, 277, 278, 320, 327, 329], "correlated_trac": 270, "differenti": [270, 272, 277, 278], "convergence_": [270, 272, 277, 278], "mixinganalysi": 270, "relationship": [270, 320], "correl": [270, 317, 324], "triplot": 270, "fast": [270, 271, 272, 273, 277, 278, 307], "sphere_transport_viz_": [270, 272, 277, 278], "cosinebel": [271, 286], "shape": [271, 321], "blob": 271, "around": [271, 307, 308, 319, 320, 321, 322, 327, 328], "convergence_tracer1": 271, "convergence_h": 273, "convergence_normalveloc": 273, "shallow": [275, 288, 320, 321, 322, 323, 325, 326, 327, 328, 330], "100": [275, 276, 279, 316, 325, 326, 329], "25": [275, 276, 320, 322, 325, 326, 327, 328, 329], "exactsolut": [275, 276], "obtain": [275, 276, 288, 310], "normal_veloc": [275, 276, 284, 307], "assign": [275, 276, 321], "fall": [275, 276, 331], "accept": [275, 276], "manufacturedsolut": 276, "nondiverg": [277, 317, 324], "filamentanalysi": 277, "filament": [277, 327], "rotat": [278, 317, 320, 321, 322, 324, 325, 326, 327], "exercis": [279, 303, 320, 321, 322, 323, 327, 328, 329], "kpp_test": 279, "mixedlayerdepthsoutput": 279, "idealagetrac": [279, 329], "single_column_forc": [279, 329], "profil": [279, 304, 329], "throughout": [279, 319, 329], "idealag": 279, "enabel": 279, "formal": 280, "organ": [280, 282, 285, 306], "conceptu": [280, 287], "broadli": [280, 281, 287], "realist": [280, 306, 337], "greenland": [280, 306, 337], "2000m": [280, 331], "34": [280, 331], "halfar": 280, "cism": 280, "dome_typ": 280, "put_origin_on_a_cel": 280, "hydrologi": 280, "hydro": [280, 337], "dome_viz": 280, "time_slic": 280, "save_imag": 280, "hide": [280, 307], "hide_fig": 280, "clutter": 280, "smoke_test": [280, 286], "smoketest": [280, 286], "restart_test": 280, "restarttest": 280, "add_dome_task": 280, "variable_resolut": [280, 284, 331], "talk": 280, "reduc": [280, 284], "among": [280, 282, 288, 307], "encompass": 281, "perspect": 281, "four": 281, "major": [281, 284], "broader": 281, "univers": 281, "add_inertial_gravity_wave_task": 281, "add_manufactured_solution_task": 281, "add_single_column_task": 281, "alphabet": [281, 307], "landice_model": [281, 288], "diagram": 282, "green": 282, "blue": [282, 309, 331], "orang": 282, "red": 282, "laid": 282, "fig": 282, "organiz": 282, "concept": [282, 287, 307, 337], "somewher": 284, "multiprocess": [284, 287, 308], "aspir": 284, "emploi": 284, "unwant": 284, "outer": 284, "inner": 284, "dome_varres_grid": 284, "signific": [284, 285, 286], "neglig": 284, "culled_graph": [284, 307], "meshstep": 284, "getint": 284, "mesh_cpus_per_task": 284, "mesh_min_cpus_per_task": 284, "fit": [284, 308], "applic": [284, 287, 288, 330, 335], "launch": [284, 306], "write_netcdf": [284, 307], "convers": [284, 307], "greater": [284, 307], "graphinfofilenam": [284, 307], "culled_mesh": [284, 307], "use_dist": [284, 307, 319], "gradient_width_dist": [284, 307, 319], "gradient_width_frac": [284, 307, 319], "bottom_temperatur": [284, 307, 319], "surface_temperatur": [284, 307, 319, 329], "temperature_differ": [284, 307, 319], "coriolis_paramet": [284, 307, 319, 325, 326, 329], "x_cell": [284, 307], "y_cell": [284, 307], "bottom_depth": [284, 307, 308, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330], "ones_lik": [284, 307], "zeros_lik": [284, 307], "x_min": [284, 307], "min": [284, 307, 316, 319, 329], "x_max": [284, 307], "y_min": [284, 307], "y_max": [284, 307], "y_mid": [284, 307], "x_perturb_min": [284, 307], "x_perturb_max": [284, 307], "perturb_width": [284, 307, 319], "y_offset": [284, 307], "sin": [284, 307, 319, 320, 322, 323, 325, 326, 327], "pi": [284, 307, 316, 319, 320, 321, 322, 323, 327], "temp_vert": [284, 307], "frac": [284, 307, 316, 319, 320, 322, 325, 327], "logical_and": [284, 307], "transpos": [284, 307], "3rd": [284, 307], "crest": [284, 307, 319], "expand_dim": [284, 307], "dim": [284, 307], "axi": [284, 307, 328], "broadcast": [284, 307], "xvertex": [284, 307], "attr": [284, 307], "initial_temperatur": [284, 307], "initial_normal_veloc": [284, 307], "superclass": 284, "commandlin": 284, "harm": 284, "likewis": [284, 307], "arisen": 284, "problemat": 284, "add_depend": 284, "usual": [284, 286, 288, 307, 331], "forwardstep": 284, "mesh_path": 284, "mesh_step": 284, "with_ice_shelf_cav": 284, "initial_state_target": 284, "adjusted_init": 284, "forcing_data": 284, "init_mode_forcing_data": 284, "entha_analy_result": 284, "mat": 284, "enthalpy_benchmark": 284, "ourselv": 284, "problem": [284, 288, 304, 307], "firewal": 284, "bedmachineantarctica_v2_and_gebco_2022_0": 284, "05_degree_20220729": 284, "slate": 284, "icepresent_qu60km_polar": 284, "practic": [284, 287, 288], "straightforward": 284, "commonli": [284, 305], "notat": [284, 330, 335], "phc": [284, 316], "That": [284, 287, 305, 307, 331], "word": 284, "ff": 284, "quwisc240": [284, 287, 331], "90c": 284, "91c": 284, "92": [284, 316], "91": 284, "sowisc12to60": [284, 331], "performance_test": 284, "transfer": 284, "feasibl": 284, "overhead": 284, "philosophi": [285, 287, 307], "context": [285, 307], "namesak": 285, "256": [285, 310, 314], "count": [285, 305], "quicker": 285, "exce": 285, "offer": 285, "benefit": [285, 306], "bug": 285, "coverag": 285, "exhaust": 285, "recent": [285, 317, 332], "merg": 285, "reach": 285, "steadi": [285, 323], "wet": 285, "fundament": 286, "incorpor": 286, "velo_solv": 286, "sia": [286, 288], "fo": 286, "runmodel": 286, "run_step": 286, "0200": 286, "00_00": [286, 301, 307], "recip": 286, "demonstr": [286, 307], "fairli": [286, 287, 288, 307], "_cosine_bel": 286, "_with_viz": 286, "_setup_step": [286, 307], "_resolut": 286, "remove_step": 286, "analysis_depend": 286, "base_mesh_step": 286, "cos_bell_dir": 286, "_init_": 286, "init_step": 286, "_forward_": 286, "forward_step": 286, "with_viz_dir": 286, "_map_": 286, "viz_map": 286, "_viz_": 286, "rare": [286, 288], "480km": 286, "closer": 286, "imp_r": 286, "joinpath": 286, "initial_condit": 287, "dig": [287, 308], "background": [287, 320, 322, 327, 328], "adher": [287, 307], "pep8": [287, 288], "bot": [287, 316], "violat": 287, "consid": 287, "editor": 287, "pycharm": [287, 288, 307], "spyder": 287, "linter": 287, "flake8": [287, 288], "discourag": [287, 305], "reformat": 287, "autopep8": 287, "undesir": 287, "lint": 287, "wildcard": 287, "vim": [287, 307], "plugin": 287, "id": [287, 288], "commit": [287, 288], "why": 287, "sound": 287, "subpackag": 287, "understand": [287, 308], "downstream": 287, "tutori": [287, 288], "clu": 287, "intro": 287, "docstr": [287, 306, 307], "strip": 287, "mpas_ocean": 287, "hidden": 287, "shortcut": [287, 331], "referenc": [287, 307], "mention": 287, "charact": 287, "unix": [287, 306], "distinct": 287, "mayb": [287, 307], "machine_config": 287, "endswith": 287, "splitext": 287, "exactli": [287, 288, 307, 316], "move": [287, 288, 307, 330, 335], "renam": 287, "visa": 287, "versa": 287, "comfort": [287, 307], "inherit": [287, 307], "orient": [287, 323], "program": [287, 308], "led": 287, "felt": 287, "contribut": 287, "hesit": 287, "predecessor": [287, 305, 306], "clumsi": 287, "harder": 287, "outcom": 287, "augment": 287, "explain": 287, "hope": 287, "dens": 287, "learn": [287, 307], "curv": 287, "worth": [287, 307], "skill": 287, "endeavor": 287, "readabl": 287, "manipul": 287, "get_available_cores_and_nod": 287, "theoret": 287, "dozen": 287, "theori": 287, "biogeochemistri": 287, "ksh": 288, "mac": [288, 306], "csh": 288, "tcsh": 288, "temporarili": 288, "recogn": [288, 308, 331], "permiss": 288, "anyon": 288, "caus": [288, 310, 314, 316], "person": [288, 304], "base_path_to_install_or_update_conda": 288, "with_netlib_lapack": 288, "flavor": [288, 307], "troubl": [288, 307], "recognit": 288, "trilino": 288, "downsid": 288, "unneed": 288, "reinstal": 288, "caution": 288, "load_": 288, "encod": 288, "load_dev_polaris_": [288, 307], "env_nam": 288, "dev_polaris_": [288, 304], "workdir": [288, 331], "unexpect": [288, 305, 307], "occur": [288, 304, 316], "echo": 288, "proceed": 288, "notic": 288, "conda_env": [288, 312, 331], "rememb": 288, "incorrect": 288, "unus": 288, "session": [288, 307], "pip": 288, "substanti": 288, "risk": [288, 307], "unsupport": 288, "env_onli": 288, "mpas_make_target": [288, 331], "scientif": [288, 331], "_albani": 288, "instruct": [288, 307], "es3m": 288, "compli": 288, "memor": 288, "guidelin": 288, "complianc": 288, "checker": 288, "isort": 288, "flynt": 288, "mypi": 288, "77": 288, "e302": 288, "blank": 288, "resolv": 288, "simpler": [288, 307], "new_branch_nam": 288, "disk": [288, 308, 310, 314], "respons": 288, "simplest": 288, "your_new_branch": 288, "restart_filenam": 294, "polaris_branch": 300, "post": 300, "src": 300, "registry_process": 300, "seaice_model": 300, "1m": [301, 334], "disc": [301, 334], "config_initial_ice_area": 301, "config_initial_ice_volum": 301, "config_atmospheric_forcing_typ": 301, "config_forcing_start_tim": 301, "config_forcing_cycle_start": 301, "config_forcing_cycle_dur": 301, "config_forcing_precipitation_unit": 301, "mm_per_sec": 301, "config_forcing_sst_typ": 301, "ncar": 301, "config_update_ocean_flux": 301, "config_include_pond_freshwater_feedback": 301, "standard_phys": 303, "standardphys": 303, "year": [303, 317, 334], "volum": 303, "snow": 303, "exact_restart": 303, "exactrestart": 303, "geo": 304, "cartopi": 304, "14": 304, "np110py27_4": 304, "calledprocesserror": 304, "deploy_tmp": 304, "vpn": 304, "site": 304, "shell": [304, 306], "honor": 304, "wide": 304, "spawn": 304, "usernam": [304, 307, 310, 314], "proxy_en": 304, "all_proxi": 304, "proxyout": 304, "8080": 304, "no_proxi": 304, "localhost": [304, 308, 313, 314, 331], "127": 304, "proxy_dis": 304, "unset": 304, "anytim": 304, "fatal": 304, "mpi_init": 304, "stack": 304, "mpir_init_thread": 304, "159": 304, "mpid_init": 304, "164": 304, "mpidi_ch3_init": 304, "95": 304, "mpid_nem_init": 304, "314": 304, "mpid_nem_tcp_init": 304, "173": 304, "mpid_nem_tcp_get_business_card": 304, "395": 304, "getsockinterfaceaddr": 304, "369": 304, "pn2034311": 304, "errno": 304, "host": [304, 308, 313, 331], "focus": 305, "plu": 305, "autom": 306, "exascal": 306, "earth": 306, "kept": 306, "boundari": [306, 319, 337], "expert": 306, "uncoupl": 306, "quick": [306, 307, 317, 332], "queue": 306, "beginn": [306, 307], "advanc": [306, 307], "mpas_to_yaml": 306, "troubleshoot": 306, "proxi": 306, "lanl": [306, 308, 310], "gethostbynam": 306, "glossari": 307, "stick": 307, "miniconda": 307, "3_chrysalis_intel_openmpi": 307, "strict": 307, "push": 307, "lowercas": 307, "hyphen": 307, "settl": 307, "desktop": 307, "realli": [307, 314], "nice": [307, 314], "supercomput": 307, "yet_another_channel": 307, "testgroup": 307, "vi": 307, "polaris_head": 307, "yetanotherchannel": 307, "instanc": 307, "repres": [307, 316, 321, 327], "highli": 307, "camelcas": 307, "capit": 307, "letter": 307, "cap": 307, "awkward": 307, "encourag": 307, "enclos": 307, "briefli": 307, "baroclinicchannel": 307, "globalconverg": 307, "add_test_group": 307, "interest": 307, "test_group": 307, "add_test_cas": 307, "anyth": 307, "probabl": [307, 313, 323], "suppos": 307, "easili": 307, "tide": 307, "sai": [307, 313], "res_str": 307, "1000": [307, 308, 316, 319, 323, 325, 326], "still": [307, 317, 330, 331, 335], "ti": 307, "loop": 307, "1km": [307, 319, 331], "4km": [307, 319, 331], "coarsest": [307, 308], "especi": 307, "promot": 307, "pattern": 307, "familiar": 307, "seen": 307, "brows": 307, "row": 307, "disadvantag": 307, "foremost": 307, "magic": 307, "effect": [307, 330], "pain": 307, "160": [307, 319], "500": [307, 308, 316, 319], "path_to_mpas_ocean": 307, "path_to_working_dir": 307, "cat": 307, "slurm_jobid": 307, "_run_test": 307, "gpf": 307, "fs1": 307, "cbegeman": 307, "grid_typ": [307, 308, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "vert_level": [307, 308, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "coord_typ": [307, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "partial_cell_typ": [307, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "min_pc_fract": [307, 316, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330], "everywher": 307, "depress": [307, 316], "mostli": 307, "logic": [307, 319], "northern": [307, 319], "half": [307, 319], "southern": [307, 319], "halv": [307, 319], "gradient": [307, 319, 325, 326, 329], "500km": [307, 319], "40e3": [307, 319], "35": [307, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 335], "2e": [307, 319], "connect": [307, 314], "match": 307, "light": 307, "e3sm_compon": 307, "interact": [307, 310, 313, 314, 331], "interrupt": 307, "pty": 307, "navig": 307, "newli": 307, "bunch": 307, "didn": 307, "mistak": 307, "finger": 307, "cross": 307, "initial_normalveloc": 307, "initial_salin": 307, "obvious": 307, "stress": [307, 329], "landicemodelstep": 307, "huge": 307, "cp": 307, "05": [307, 323], "hmix_del2": 307, "bottom_drag": 307, "cvmix": 307, "0002": 307, "filename_interv": 307, "0100": 307, "input_interv": 307, "initial_onli": 307, "basicmesh": 307, "dayssincestart": 307, "surfacespe": 307, "lowersurfac": 307, "uppersurfac": 307, "ureconstructx": 307, "ureconstructi": 307, "great": 307, "remain": [307, 321, 323, 329], "load_dataset": 307, "final_temperatur": 307, "ab": 307, "proc": 307, "4proc": [307, 319], "8proc": [307, 319], "markdown": 307, "developers_guid": 307, "users_guid": 307, "daunt": 307, "flesh": 307, "bonu": 307, "improv": 307, "introduc": 307, "techniqu": 307, "cannot": 307, "aim": 307, "constrain_resourc": 307, "becam": 307, "mainten": 307, "counter": 307, "thought": 307, "yet_another_channel_test_cas": 307, "yetanotherchanneltestcas": 307, "choic": [307, 320, 321, 322, 323, 327, 328], "spuriou": [307, 319], "dissip": [307, 319], "pop": [307, 319], "mom": [307, 319], "mitgcm": [307, 319], "higher": 307, "heavi": 307, "analogi": 307, "tet": 307, "bear": 307, "late": 307, "_add_step": 307, "startswith": 307, "enumer": 307, "rpe_": 307, "_nu_": 307, "privat": 307, "break": [307, 319], "unusu": 307, "rpe_1_nu_1": [307, 319], "rpe_2_nu_5": [307, 319], "rpe_3_nu_10": 307, "rpe_4_nu_20": 307, "rpe_5_nu_200": 307, "20_00": 307, "0000": 307, "dayssincestartofsim": 307, "relativevort": 307, "pyplot": 307, "plt": 307, "output_": 307, "sections_yet_another_channel_": 307, "rpe_t": 307, "init_filenam": 307, "initial_state_file_nam": 307, "_plot": 307, "dirti": 307, "adopt": 307, "lesson": 307, "tricki": 307, "commun": 307, "nuanc": 307, "fake": 307, "wasn": 307, "fold": 307, "proper": 307, "third": 307, "previous": 307, "extens": 308, "multinod": [308, 331], "explanatori": 308, "my_machin": 308, "extend": 308, "gitconfig": 308, "enter": 308, "author": 308, "email": 308, "pull_request": 308, "28": [308, 316, 320], "address": [308, 320, 327], "metadata": 308, "customize_config_pars": 308, "server_base_url": 308, "inej": 308, "check_siz": 308, "ssl": 308, "certif": 308, "core_path": 308, "partition_execut": 308, "dask": 308, "netcdf4": 308, "netcdf4_class": 308, "netcdf3_64bit": 308, "netcdf3_class": 308, "engin": 308, "scipi": 308, "mesh_databas": 308, "ocean_database_root": 308, "landice_database_root": 308, "mesh_cor": 308, "mesh_min_cor": 308, "mesh_max_memori": 308, "mesh_max_disk": 308, "init_cor": 308, "init_min_cor": 308, "init_max_memori": 308, "init_max_disk": 308, "init_thread": 308, "forward_cor": 308, "forward_min_cor": 308, "forward_thread": 308, "forward_max_memori": 308, "forward_max_disk": 308, "add_metadata": 308, "ec": 308, "wc": 308, "mesh_descript": 308, "autodetect": 308, "bathy_descript": 308, "gebco": 308, "2022": 308, "bedmachin": 308, "antarctica": 308, "init_descript": 308, "e3sm_vers": 308, "increment": 308, "mesh_revis": 308, "finest": 308, "min_r": 308, "max_r": 308, "max_depth": 308, "creation_d": 308, "peopl": 308, "contact": 308, "temperaturemax": 308, "temperature_max": 308, "33": [308, 331], "enable_ocean_initial_condit": 308, "enable_ocean_graph_partit": 308, "enable_seaice_initial_condit": 308, "scrip": 308, "enable_scrip": 308, "transect": 308, "onlin": 308, "member": 308, "offlin": 308, "enable_diagnostics_fil": 308, "coarser": [308, 316, 320, 321, 322, 323, 327, 328], "finer": [308, 316], "comparisonlatresolut": 308, "comparisonlonresolut": 308, "antarct": 308, "polar": [308, 309, 311, 316], "stereograph": 308, "comparisonantarcticstereowidth": 308, "6000": [308, 316], "comparisonantarcticstereoresolut": 308, "arctic": [308, 334], "comparisonarcticstereowidth": 308, "comparisonarcticstereoresolut": 308, "tanh_dz": 308, "16": [308, 329, 331], "3000": [308, 323], "min_layer_thick": [308, 316], "max_layer_thick": [308, 316], "retain": 308, "ecosystem": 309, "gain": 309, "confluenc": 309, "public_html": [309, 311, 313], "soft": [309, 311, 313, 331], "mpi_intel": [309, 311, 312, 313], "36": [309, 313, 329, 331], "condo": [309, 331], "acm": [309, 331], "medium": 309, "acme_high": 309, "load_latest_polaris_intel_impi": [309, 312], "load_latest_polaris_gnu_openmpi": [309, 311, 331], "dst": 310, "calendar": 310, "network": 310, "introduct": 310, "platform": 310, "batch": 310, "wtrw": 310, "ch": 310, "fe": 310, "lustr": 310, "scratch4": 310, "scratch5": 310, "sacctmgr": 310, "assoc": 310, "cluster": 310, "45": 310, "sshare": 310, "sreport": 310, "accountutilizationbyus": 310, "2019": 310, "prioriti": 310, "yellow": 310, "chkhome": 310, "petabyt": 310, "df": 310, "bp": 310, "archiv": [310, 314], "hpss": [310, 314], "front": 310, "tn": 310, "storag": 310, "project_nam": 310, "salloc": [310, 313, 314], "account_nam": 310, "gpu": [310, 314], "hyperthread": [310, 314], "hang": [310, 314], "threads_per_cor": [310, 314], "shared_clim": [310, 331], "load_latest_polaris_gnu_mpich": [310, 314], "load_latest_polaris_intel_openmpi": 311, "compyf": 312, "app": [312, 331], "pmi2": 312, "40": [312, 323], "submit": 313, "workload": 313, "squeue": 313, "my_usernam": [313, 314], "scancel": 313, "jobid": 313, "cancel": 313, "emtpi": 313, "three": [313, 320, 322, 323, 327, 328, 337], "mpi_mpich": [313, 331], "mpi_openmpi": [313, 331], "nompi": [313, 331], "p1": 314, "nersc": 314, "iri": 314, "filesystem": 314, "myquota": 314, "prjquota": 314, "projectid": 314, "m1795": 314, "hsi": 314, "htar": 314, "zstash": 314, "cf": [314, 331], "cdir": [314, 331], "premium": 314, "cray_compil": 314, "8844": 314, "monik": 314, "browser": 314, "grab": 314, "logon": 314, "kernel": 314, "myenv": 314, "ipykernel": 314, "kernelspec": 314, "u1": 314, "interpret": 314, "argv": 314, "ipykernel_launch": 314, "connection_fil": 314, "display_nam": 314, "languag": 314, "2500": 316, "transit": [316, 320, 321, 322, 327, 328], "transition_level": 316, "deepest": 316, "stewart": 316, "2017": 316, "delta": [316, 319, 323, 329], "z_2": 316, "z_1": 316, "mathrm": 316, "tanh": 316, "rightarrow": 316, "z_k": 316, "z_0": 316, "z_": [316, 329], "k": 316, "finder": 316, "n_z": 316, "h_": 316, "hyperbol": 316, "tangent": 316, "k_0": 316, "v3": 316, "5500": 316, "250": 316, "scienc": 316, "hydrograph": 316, "climatologi": 316, "renorm": 316, "arrm10to60": 316, "80": 316, "146": 316, "5550": 316, "51": 316, "221": 316, "ziso": [316, 337], "63": 316, "floor": 316, "flat": [316, 319, 323], "collaps": 316, "adcroft": 316, "campin": 316, "2004": 316, "absenc": 316, "squash": 316, "press": 316, "batymetri": 316, "stair": 316, "terrain": 316, "month": 317, "websit": [317, 332], "release_6": 317, "ilicak": 319, "2012": [319, 320, 322, 327, 328], "variat": [319, 323], "distinguish": 319, "zonal": [319, 323, 329], "meridion": [319, 329], "psu": [319, 329], "cooler": 319, "north": 319, "sinusoid": 319, "perturb": [319, 321, 326], "t_0": 319, "t_b": 319, "t_": 319, "z_b": 319, "y_": 319, "l_x": 319, "warmer": 319, "ge": [319, 321], "gradient_width_fract": 319, "l_y": 319, "le": [319, 329], "stationari": [319, 329], "literatur": 319, "mk": 319, "celsiu": 319, "prognost": 319, "lauritzen": [320, 322, 327, 328], "nonlinear": [320, 323, 325, 326], "mixing_analysi": 320, "icosohydr": [320, 321, 322, 327, 328], "nearest": [320, 321, 322, 327, 328], "insensit": [320, 321, 322, 323, 327, 328, 329], "300": [320, 321, 322, 327, 328, 330], "debugtrac": [320, 322, 327, 328], "tracer2": [320, 322, 327, 328], "pair": [320, 322, 327, 328, 334], "tracer3": [320, 322, 327, 328], "nonlinearli": 320, "tau": [320, 321, 322, 327], "lambda": [320, 322, 323, 327], "theta": [320, 322, 323, 327], "co": [320, 321, 322, 323, 325, 326, 327], "equat": [320, 321, 322, 323, 325, 326, 327, 328, 329], "vel_pd": [320, 321, 322, 327, 328], "rung": [320, 321, 322, 323, 327, 328], "kutta": [320, 321, 322, 323, 327, 328], "4th": [320, 321, 322, 323, 327, 328], "multipli": [320, 321, 322, 323, 327, 328], "spherical_convergence_forward": [320, 322, 327, 328], "globe": [320, 321, 322, 327, 328], "correlated_tracer_2d": 320, "288": [320, 322, 327, 328], "cosine_bells_radiu": [320, 322, 327, 328], "cosine_bells_background": [320, 322, 327, 328], "amplitud": [320, 322, 325, 326, 327, 328], "cosine_bells_amplitud": [320, 322, 327, 328], "slot": [320, 322, 327, 328], "cylind": [320, 322, 327, 328], "slotted_cylinders_radiu": [320, 322, 327, 328], "slotted_cylinders_background": [320, 322, 327, 328], "slotted_cylinders_amplitud": [320, 322, 327, 328], "sphere_transport_viz_trac": [320, 322, 327, 328], "sphere_transport_viz_tracer_diff": [320, 322, 327, 328], "sphere_transport_viz_h": [320, 322, 327, 328], "99": [320, 322, 327, 328], "101": [320, 322, 327, 328], "sphere_transport_viz_h_diff": [320, 322, 327, 328], "vel_amp": [320, 322, 327], "convergence_thresh_tracer1": [320, 322, 327, 328], "convergence_thresh_tracer2": [320, 322, 327, 328], "66": 320, "convergence_thresh_tracer3": [320, 322, 327, 328], "mixing_evaluation_tim": 320, "sphere_transport_viz": [320, 322, 327, 328], "roughli": [320, 321, 322, 327, 328], "studi": [320, 321, 322, 323, 327, 328], "williamson": [321, 323], "1992": [321, 323], "sec": 321, "3a": 321, "skamarock": 321, "gassmann": 321, "bodi": 321, "psi": 321, "proportion": [321, 323], "slow": 321, "passiv": 321, "psi_0": 321, "debug_tracers_1": 321, "equatori": 321, "u_0": [321, 322, 323, 327], "tendenc": [321, 326], "rad": 321, "lat_cent": 321, "lon_cent": 321, "14159265": 321, "2123666": 321, "6667": 321, "hill": 321, "psi0": 321, "576": 321, "circul": 321, "discontinu": [322, 327, 328], "48": 322, "86": 322, "chosen": [323, 329], "h_0": 323, "textrm": 323, "sensit": 323, "wind": [323, 329], "l_1": 323, "l_2": 323, "l_": 323, "examin": [323, 329], "vel_period": 323, "gh_0": 323, "94e4": 323, "william": 323, "paper": [323, 331], "arbitrari": 323, "evolut": 323, "unexpectedli": 323, "convergence_thresh_h": 323, "convergence_thresh_normalveloc": 323, "necessit": 323, "geostropnic_viz": 323, "geostrophic_viz_h": 323, "deep": 323, "geostrophic_viz_vel": 323, "geostrophic_viz_diff_h": 323, "geostrophic_viz_diff_vel": 323, "propag": [325, 326], "doubli": [325, 326], "assess": [325, 326], "accuraci": [325, 326], "discret": [325, 326], "bishnu": [325, 326], "friction": [325, 326], "neglect": [325, 326], "analyt": [325, 337], "k_x": [325, 326], "k_y": [325, 326], "availi": [325, 326], "10000": [325, 326], "coriloi": 325, "1e": 325, "ssh_amplitud": [325, 326], "wavelength": [325, 326], "n_wavelengths_x": [325, 326], "n_wavelengths_i": [325, 326], "embed": 326, "eta_0": 326, "preserv": [327, 331], "rough": 327, "revers": 327, "filament_analysi": 327, "thhe": 327, "filament_evaluation_tim": 327, "offset": 328, "vector": 328, "rotation_vector": 328, "cartesian": 328, "span": 329, "arbitrarili": 329, "virtu": 329, "400": 329, "phi": 329, "phi_0": 329, "dz": 329, "ml": 329, "mld": 329, "surface_x": 329, "x_gradient_mixed_lay": 329, "mixed_layer_depth_x": 329, "x_difference_across_mixed_lay": 329, "x_gradient_interior": 329, "spatial": 329, "4x4": 329, "960": 329, "degc": 329, "temperature_gradient_mixed_lay": 329, "temperature_difference_across_mixed_lay": 329, "temperature_gradient_interior": 329, "mixed_layer_depth_temperatur": 329, "surface_salin": 329, "salinity_gradient_mixed_lay": 329, "salinity_difference_across_mixed_lay": 329, "salinity_gradient_interior": 329, "mixed_layer_depth_salin": 329, "dictat": 329, "kpp": 329, "restor": 329, "piston": 329, "toward": 329, "temperature_surface_restoring_valu": 329, "temperature_piston_veloc": 329, "salinity_surface_restoring_valu": 329, "salinity_piston_veloc": 329, "temperature_interior_restoring_r": 329, "salinity_interior_restoring_r": 329, "net": 329, "latent": 329, "heat": 329, "bulk": 329, "latent_heat_flux": 329, "sensibl": 329, "sensible_heat_flux": 329, "solar": 329, "shortwav": 329, "shortwave_heat_flux": 329, "evapor": 329, "evaporation_flux": 329, "5e": 329, "rain": 329, "rain_flux": 329, "wind_stress_zon": 329, "wind_stress_meridion": 329, "welcom": [330, 335], "icosohedr": [330, 335], "pertain": [330, 335], "inher": 330, "warrant": 330, "investig": 330, "load_latest_polari": 331, "minu": 331, "create_polaris_load_script": 331, "load_polaris_1": 331, "0_mpich": 331, "exclud": 331, "wiki": 331, "circular_shelf": 331, "sia_smoke_test": 331, "sia_decomposition_test": 331, "sia_restart_test": 331, "fo_smoke_test": 331, "fo_decomposition_test": 331, "fo_restart_test": 331, "37": 331, "17": 331, "210131_test_new_branch": 331, "my_config": 331, "smaller": 331, "previous_workdir": 331, "recompil": 331, "safer": 331, "test_subdir": 331, "whatev": 331, "clock": 331, "j": 331, "exclus": 331, "job_nam": 331, "fo_integr": 331, "sia_integr": 331, "cosine_bell_cached_init": [331, 336], "ec30to60": 331, "ecwisc30to60": 331, "qu240_for_e3sm": 331, "quwisc240_for_e3sm": 331, "wc14": 331, "suitenam": 331, "seaice_standalone_framework": 332, "71": 334, "35n": 334, "156": 334, "5w": 334, "atmospher": 334, "timeseri": 334, "prohibit": 336, "speed": 336, "radial": 337}, "objects": {"polaris": [[20, 0, 1, "", "Component"], [25, 0, 1, "", "ModelStep"], [38, 0, 1, "", "Step"], [49, 0, 1, "", "Task"]], "polaris.Component": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_config"], [22, 1, 1, "", "add_step"], [23, 1, 1, "", "add_task"], [24, 1, 1, "", "remove_step"]], "polaris.ModelStep": [[25, 1, 1, "", "__init__"], [26, 1, 1, "", "add_model_config_options"], [27, 1, 1, "", "add_namelist_file"], [28, 1, 1, "", "add_streams_file"], [29, 1, 1, "", "add_yaml_file"], [30, 1, 1, "", "dynamic_model_config"], [31, 1, 1, "", "map_yaml_to_namelist"], [32, 1, 1, "", "partition"], [33, 1, 1, "", "process_inputs_and_outputs"], [34, 1, 1, "", "runtime_setup"], [35, 1, 1, "", "set_model_resources"], [36, 1, 1, "", "setup"], [37, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[38, 1, 1, "", "__init__"], [39, 1, 1, "", "add_dependency"], [40, 1, 1, "", "add_input_file"], [41, 1, 1, "", "add_output_file"], [42, 1, 1, "", "constrain_resources"], [43, 1, 1, "", "run"], [44, 1, 1, "", "runtime_setup"], [45, 1, 1, "", "set_resources"], [46, 1, 1, "", "set_shared_config"], [47, 1, 1, "", "setup"], [48, 1, 1, "", "validate_baselines"]], "polaris.Task": [[49, 1, 1, "", "__init__"], [50, 1, 1, "", "add_step"], [51, 1, 1, "", "configure"], [52, 1, 1, "", "remove_step"], [53, 1, 1, "", "set_shared_config"]], "polaris.__main__": [[54, 2, 1, "", "main"]], "polaris.cache": [[55, 2, 1, "", "update_cache"]], "polaris.components": [[56, 2, 1, "", "get_components"]], "polaris.config": [[57, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[57, 1, 1, "", "__init__"], [58, 1, 1, "", "setup"]], "polaris.io": [[59, 2, 1, "", "download"], [60, 2, 1, "", "symlink"]], "polaris.job": [[61, 2, 1, "", "get_slurm_options"], [62, 2, 1, "", "write_job_script"]], "polaris.list": [[63, 2, 1, "", "list_cases"], [64, 2, 1, "", "list_machines"], [65, 2, 1, "", "list_suites"]], "polaris.logging": [[66, 2, 1, "", "log_method_call"]], "polaris.mesh": [[67, 0, 1, "", "IcosahedralMeshStep"], [74, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[67, 1, 1, "", "__init__"], [68, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [69, 1, 1, "", "get_cell_width"], [70, 1, 1, "", "get_subdivisions"], [71, 1, 1, "", "make_jigsaw_mesh"], [72, 1, 1, "", "run"], [73, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "build_cell_width_lat_lon"], [76, 1, 1, "", "make_jigsaw_mesh"], [77, 1, 1, "", "run"], [78, 1, 1, "", "setup"]], "polaris.mesh.planar": [[79, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[80, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, 1, 1, "", "__init__"], [81, 1, 1, "", "run"], [82, 1, 1, "", "save_and_plot_cell_width"], [83, 1, 1, "", "setup"]], "polaris.model_step": [[84, 2, 1, "", "make_graph_file"]], "polaris.mpas": [[85, 2, 1, "", "area_for_field"], [86, 2, 1, "", "time_index_from_xtime"]], "polaris.namelist": [[87, 2, 1, "", "ingest"], [88, 2, 1, "", "parse_replacements"], [89, 2, 1, "", "replace"], [90, 2, 1, "", "write"]], "polaris.ocean": [[140, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[140, 1, 1, "", "__init__"]], "polaris.ocean.convergence": [[141, 0, 1, "", "ConvergenceAnalysis"], [149, 0, 1, "", "ConvergenceForward"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "compute_error"], [143, 1, 1, "", "convergence_parameters"], [144, 1, 1, "", "exact_solution"], [145, 1, 1, "", "get_output_field"], [146, 1, 1, "", "plot_convergence"], [147, 1, 1, "", "run"], [148, 1, 1, "", "setup"]], "polaris.ocean.convergence.ConvergenceForward": [[149, 1, 1, "", "__init__"], [150, 1, 1, "", "compute_cell_count"], [151, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.convergence.spherical": [[152, 0, 1, "", "SphericalConvergenceForward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[152, 1, 1, "", "__init__"], [153, 1, 1, "", "compute_cell_count"]], "polaris.ocean.mesh.spherical": [[154, 2, 1, "", "add_spherical_base_mesh_step"]], "polaris.ocean.model": [[155, 0, 1, "", "OceanModelStep"], [160, 2, 1, "", "get_time_interval_string"]], "polaris.ocean.model.OceanModelStep": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "compute_cell_count"], [157, 1, 1, "", "constrain_resources"], [158, 1, 1, "", "map_yaml_to_namelist"], [159, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[161, 2, 1, "", "compute_rpe"]], "polaris.ocean.tasks.baroclinic_channel": [[162, 2, 1, "", "add_baroclinic_channel_tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp": [[163, 0, 1, "", "Decomp"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[163, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.default": [[164, 0, 1, "", "Default"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[164, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.forward": [[165, 0, 1, "", "Forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[165, 1, 1, "", "__init__"], [166, 1, 1, "", "compute_cell_count"], [167, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.init": [[168, 0, 1, "", "Init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[168, 1, 1, "", "__init__"], [169, 1, 1, "", "run"], [170, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.restart": [[171, 0, 1, "", "Restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[171, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step": [[172, 0, 1, "", "RestartStep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.baroclinic_channel.rpe": [[174, 0, 1, "", "Rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[174, 1, 1, "", "__init__"], [175, 1, 1, "", "configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis": [[176, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[176, 1, 1, "", "__init__"], [177, 1, 1, "", "run"], [178, 1, 1, "", "setup"]], "polaris.ocean.tasks.baroclinic_channel.threads": [[179, 0, 1, "", "Threads"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[179, 1, 1, "", "__init__"]], "polaris.ocean.tasks.baroclinic_channel.validate": [[180, 0, 1, "", "Validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[180, 1, 1, "", "__init__"], [181, 1, 1, "", "run"]], "polaris.ocean.tasks.baroclinic_channel.viz": [[182, 0, 1, "", "Viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell": [[184, 0, 1, "", "CosineBell"], [186, 2, 1, "", "add_cosine_bell_tasks"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "configure"]], "polaris.ocean.tasks.cosine_bell.analysis": [[187, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[187, 1, 1, "", "__init__"], [188, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.cosine_bell.forward": [[189, 0, 1, "", "Forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "compute_cell_count"], [191, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tasks.cosine_bell.init": [[192, 0, 1, "", "Init"], [194, 2, 1, "", "cosine_bell"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tasks.cosine_bell.viz": [[195, 0, 1, "", "Viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[195, 1, 1, "", "__init__"], [196, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic": [[197, 0, 1, "", "Geostrophic"], [199, 2, 1, "", "add_geostrophic_tasks"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "configure"]], "polaris.ocean.tasks.geostrophic.analysis": [[200, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[200, 1, 1, "", "__init__"], [201, 1, 1, "", "exact_solution"], [202, 1, 1, "", "get_output_field"]], "polaris.ocean.tasks.geostrophic.forward": [[203, 0, 1, "", "Forward"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[203, 1, 1, "", "__init__"]], "polaris.ocean.tasks.geostrophic.init": [[204, 0, 1, "", "Init"]], "polaris.ocean.tasks.geostrophic.init.Init": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "run"]], "polaris.ocean.tasks.geostrophic.viz": [[206, 0, 1, "", "Viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[206, 1, 1, "", "__init__"], [207, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave": [[208, 0, 1, "", "InertialGravityWave"], [209, 2, 1, "", "add_inertial_gravity_wave_tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[208, 1, 1, "", "__init__"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis": [[210, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[210, 1, 1, "", "__init__"], [211, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution": [[212, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "normal_velocity"], [214, 1, 1, "", "ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward": [[215, 0, 1, "", "Forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.inertial_gravity_wave.init": [[217, 0, 1, "", "Init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[217, 1, 1, "", "__init__"], [218, 1, 1, "", "run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz": [[219, 0, 1, "", "Viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution": [[221, 0, 1, "", "ManufacturedSolution"], [222, 2, 1, "", "add_manufactured_solution_tasks"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[221, 1, 1, "", "__init__"]], "polaris.ocean.tasks.manufactured_solution.analysis": [[223, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[223, 1, 1, "", "__init__"], [224, 1, 1, "", "exact_solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution": [[225, 0, 1, "", "ExactSolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[225, 1, 1, "", "__init__"], [226, 1, 1, "", "normal_velocity"], [227, 1, 1, "", "ssh"]], "polaris.ocean.tasks.manufactured_solution.forward": [[228, 0, 1, "", "Forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[228, 1, 1, "", "__init__"], [229, 1, 1, "", "compute_cell_count"]], "polaris.ocean.tasks.manufactured_solution.init": [[230, 0, 1, "", "Init"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "run"]], "polaris.ocean.tasks.manufactured_solution.viz": [[232, 0, 1, "", "Viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[232, 1, 1, "", "__init__"], [233, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column": [[234, 2, 1, "", "add_single_column_tasks"]], "polaris.ocean.tasks.single_column.cvmix": [[235, 0, 1, "", "CVMix"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[235, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.forward": [[236, 0, 1, "", "Forward"]], "polaris.ocean.tasks.single_column.forward.Forward": [[236, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.ideal_age": [[237, 0, 1, "", "IdealAge"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[237, 1, 1, "", "__init__"]], "polaris.ocean.tasks.single_column.init": [[238, 0, 1, "", "Init"]], "polaris.ocean.tasks.single_column.init.Init": [[238, 1, 1, "", "__init__"], [239, 1, 1, "", "run"]], "polaris.ocean.tasks.single_column.viz": [[240, 0, 1, "", "Viz"]], "polaris.ocean.tasks.single_column.viz.Viz": [[240, 1, 1, "", "__init__"], [241, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport": [[242, 0, 1, "", "SphereTransport"], [244, 2, 1, "", "add_sphere_transport_tasks"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[242, 1, 1, "", "__init__"], [243, 1, 1, "", "configure"]], "polaris.ocean.tasks.sphere_transport.analysis": [[245, 0, 1, "", "Analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[245, 1, 1, "", "__init__"], [246, 1, 1, "", "convergence_parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis": [[247, 0, 1, "", "FilamentAnalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[247, 1, 1, "", "__init__"], [248, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.forward": [[249, 0, 1, "", "Forward"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[249, 1, 1, "", "__init__"]], "polaris.ocean.tasks.sphere_transport.init": [[250, 0, 1, "", "Init"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[250, 1, 1, "", "__init__"], [251, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis": [[252, 0, 1, "", "MixingAnalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[252, 1, 1, "", "__init__"], [253, 1, 1, "", "run"]], "polaris.ocean.tasks.sphere_transport.viz": [[254, 0, 1, "", "Viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[256, 2, 1, "", "generate_1d_grid"], [257, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[258, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[259, 2, 1, "", "alter_bottom_depth"], [260, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[261, 2, 1, "", "compute_min_max_level_cell"], [262, 2, 1, "", "compute_z_level_layer_thickness"], [263, 2, 1, "", "compute_z_level_resting_thickness"], [264, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[265, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[91, 2, 1, "", "get_available_parallel_resources"], [92, 2, 1, "", "get_parallel_command"], [93, 2, 1, "", "run_command"], [94, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[95, 2, 1, "", "write"]], "polaris.remap": [[96, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[96, 1, 1, "", "__init__"], [97, 1, 1, "", "dst_from_lon_lat"], [98, 1, 1, "", "dst_from_mpas"], [99, 1, 1, "", "dst_from_points"], [100, 1, 1, "", "dst_from_proj"], [101, 1, 1, "", "dst_global_lon_lat"], [102, 1, 1, "", "get_remapper"], [103, 1, 1, "", "runtime_setup"], [104, 1, 1, "", "src_from_lon_lat"], [105, 1, 1, "", "src_from_mpas"], [106, 1, 1, "", "src_from_proj"]], "polaris.run": [[107, 2, 1, "", "complete_step_run"], [108, 2, 1, "", "load_dependencies"], [111, 2, 1, "", "setup_config"], [112, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[109, 2, 1, "", "run_single_step"], [110, 2, 1, "", "run_tasks"]], "polaris.seaice": [[291, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[291, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column": [[292, 2, 1, "", "add_single_column_tasks"]], "polaris.seaice.tasks.single_column.exact_restart": [[293, 0, 1, "", "ExactRestart"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[293, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.exact_restart.validate": [[294, 0, 1, "", "Validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[294, 1, 1, "", "__init__"], [295, 1, 1, "", "run"]], "polaris.seaice.tasks.single_column.forward": [[296, 0, 1, "", "Forward"]], "polaris.seaice.tasks.single_column.forward.Forward": [[296, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics": [[297, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[297, 1, 1, "", "__init__"]], "polaris.seaice.tasks.single_column.standard_physics.viz": [[298, 0, 1, "", "Viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[298, 1, 1, "", "__init__"], [299, 1, 1, "", "run"]], "polaris.setup": [[113, 2, 1, "", "setup_task"], [114, 2, 1, "", "setup_tasks"]], "polaris.streams": [[115, 2, 1, "", "read"], [116, 2, 1, "", "update_defaults"], [117, 2, 1, "", "update_tree"], [118, 2, 1, "", "write"]], "polaris.suite": [[119, 2, 1, "", "setup_suite"]], "polaris.validate": [[120, 2, 1, "", "compare_variables"]], "polaris.viz": [[121, 2, 1, "", "plot_global_lat_lon_field"], [122, 2, 1, "", "plot_global_mpas_field"], [123, 2, 1, "", "plot_horiz_field"], [124, 2, 1, "", "use_mplstyle"]], "polaris.yaml": [[125, 0, 1, "", "PolarisYaml"], [129, 2, 1, "", "main_mpas_to_yaml"], [130, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [131, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "read"], [127, 1, 1, "", "update"], [128, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"design": [0, 2], "document": [0, 4, 7, 307], "share": [1, 6, 9, 287, 307], "step": [1, 3, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 138, 284, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 335], "summari": [1, 2], "requir": [1, 2], "ar": 1, "run": [1, 3, 8, 14, 43, 72, 77, 81, 107, 108, 109, 110, 111, 112, 139, 147, 169, 177, 181, 183, 193, 196, 205, 207, 218, 220, 231, 233, 239, 241, 248, 251, 253, 255, 284, 288, 295, 299, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 334, 335], "onc": 1, "befor": 1, "depend": [1, 6, 284], "output": [1, 284, 307], "daughter": 1, "task": [1, 3, 49, 50, 51, 52, 53, 138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 274, 280, 283, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 302, 307, 324, 330, 331, 333, 335, 337], "work": 1, "directori": [1, 282], "structur": [1, 282], "i": [1, 331], "intuit": 1, "path": 1, "easili": 1, "discover": 1, "user": [1, 288, 306, 308, 331], "The": 1, "mai": 1, "us": 1, "multipl": 1, "do": [1, 6], "reli": 1, "from": [1, 6, 19, 139, 284, 288, 313], "other": [1, 136, 284, 307, 313, 331], "implement": [1, 2], "set": [1, 139, 288, 331], "up": [1, 288, 331], "test": [1, 2, 6, 138, 139, 307, 308, 334], "And": 1, "valid": [1, 2, 3, 18, 120, 180, 181, 269, 294, 295, 307, 331], "templat": [2, 14], "name": 2, "topic": 2, "here": 2, "algorithm": 2, "option": [2, 6, 14, 139, 288, 307, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "same": 2, "api": 3, "refer": [3, 138, 139], "compon": [3, 14, 20, 21, 22, 23, 24, 56, 139, 266, 281, 287, 288, 300, 317, 331, 332], "polari": [3, 5, 6, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 284, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 306, 331], "framework": [3, 10, 138, 139, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 287, 290, 303, 315], "command": [3, 5, 8], "line": [3, 5], "interfac": [3, 5], "list": [3, 5, 8, 63, 64, 65], "setup": [3, 5, 8, 36, 47, 58, 73, 78, 83, 113, 114, 148, 159, 170, 178, 284], "suit": [3, 5, 8, 119, 285, 318, 331, 336], "cach": [3, 5, 8, 55, 284], "mpas_to_yaml": [3, 5], "base": [3, 138], "class": [3, 287], "modelstep": [3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "config": [3, 6, 9, 14, 57, 58, 136, 139, 281, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "io": [3, 11, 59, 60], "job": [3, 61, 62, 313, 331], "log": [3, 12, 66], "mesh": [3, 13, 14, 19, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 138, 139, 154, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "model_step": [3, 84], "mpa": [3, 6, 15, 19, 85, 86, 139, 268, 301], "namelist": [3, 14, 87, 88, 89, 90, 139], "parallel": [3, 91, 92, 93, 94], "proven": [3, 16, 95], "remap": [3, 17, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "stream": [3, 14, 115, 116, 117, 118, 139, 307], "viz": [3, 121, 122, 123, 124, 182, 183, 195, 196, 206, 207, 219, 220, 232, 233, 240, 241, 254, 255, 270, 271, 272, 273, 275, 276, 277, 278, 279, 298, 299, 303, 307], "yaml": [3, 14, 125, 126, 127, 128, 129, 130, 131, 139], "build": [4, 136, 288, 331], "serial": [5, 8, 109, 110], "deploi": 6, "new": [6, 136, 307], "spack": [6, 136, 288, 331], "environ": [6, 136, 288, 304, 331], "where": 6, "we": 6, "updat": [6, 14, 127, 288], "mach": 6, "conda": [6, 288, 304, 313, 331], "identifi": 6, "e3sm": [6, 14, 139, 288, 331], "machin": [6, 136, 288, 313, 331], "describ": [6, 136], "modul": [6, 8, 287, 288], "env": 6, "variabl": [6, 18], "etc": 6, "creat": [6, 288, 307], "remot": [6, 314], "branch": 6, "petsc": [6, 288], "netlib": [6, 288], "lapack": [6, 288], "albani": [6, 288], "troubleshoot": [6, 288, 304], "ocean": [6, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 317], "without": 6, "mali": 6, "docstr": 7, "file": [9, 14, 136, 139, 281, 284, 307, 308], "comment": 9, "symlink": [11, 60, 284], "download": [11, 59, 284], "spheric": [13, 19, 80, 81, 82, 83, 138, 139, 152, 153, 154], "planar": [13, 19, 79], "uniform": [13, 139, 316], "gener": 13, "model": [14, 138, 139, 155, 156, 157, 158, 159, 160, 267, 301, 307, 331], "an": [14, 139, 307], "ad": [14, 136, 284, 307], "dynam": [14, 307], "input": [14, 284], "partit": [14, 32], "pio": 14, "make": [14, 307], "graph": 14, "area": 15, "time": [15, 139, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 335], "against": 18, "baselin": 18, "norm": 18, "visual": [19, 307, 334], "common": 19, "matplotlib": 19, "style": [19, 287, 288], "horizont": [19, 307], "field": 19, "global": 19, "lat": 19, "lon": 19, "plot": [19, 307], "grid": [19, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330], "add_config": 21, "add_step": [22, 50], "add_task": 23, "remove_step": [24, 52], "add_model_config_opt": 26, "add_namelist_fil": 27, "add_streams_fil": 28, "add_yaml_fil": 29, "dynamic_model_config": [30, 151, 167, 173, 191], "map_yaml_to_namelist": [31, 158], "process_inputs_and_output": 33, "runtime_setup": [34, 44, 103, 284], "set_model_resourc": 35, "update_namelist_pio": 37, "add_depend": 39, "add_input_fil": 40, "add_output_fil": 41, "constrain_resourc": [42, 157, 284], "set_resourc": 45, "set_shared_config": [46, 53], "validate_baselin": 48, "configur": [51, 175, 185, 198, 243, 286, 304], "__main__": 54, "main": 54, "update_cach": 55, "get_compon": 56, "polarisconfigpars": [57, 58], "get_slurm_opt": 61, "write_job_script": 62, "list_cas": 63, "list_machin": 64, "list_suit": 65, "log_method_cal": 66, "icosahedralmeshstep": [67, 68, 69, 70, 71, 72, 73], "build_subdivisions_cell_width_lat_lon": 68, "get_cell_width": 69, "get_subdivis": 70, "make_jigsaw_mesh": [71, 76], "quasiuniformsphericalmeshstep": [74, 75, 76, 77, 78], "build_cell_width_lat_lon": 75, "compute_planar_hex_nx_ni": 79, "sphericalbasestep": [80, 81, 82, 83], "save_and_plot_cell_width": 82, "make_graph_fil": 84, "area_for_field": 85, "time_index_from_xtim": 86, "ingest": 87, "parse_replac": 88, "replac": 89, "write": [90, 95, 118, 128], "get_available_parallel_resourc": 91, "get_parallel_command": 92, "run_command": 93, "set_cores_per_nod": 94, "mappingfilestep": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "dst_from_lon_lat": 97, "dst_from_mpa": 98, "dst_from_point": 99, "dst_from_proj": 100, "dst_global_lon_lat": 101, "get_remapp": 102, "src_from_lon_lat": 104, "src_from_mpa": 105, "src_from_proj": 106, "complete_step_run": 107, "load_depend": 108, "run_single_step": 109, "run_task": 110, "setup_config": 111, "unpickle_suit": 112, "setup_task": [113, 114], "read": [115, 126], "update_default": 116, "update_tre": 117, "setup_suit": 119, "compare_vari": 120, "plot_global_lat_lon_field": 121, "plot_global_mpas_field": 122, "plot_horiz_field": 123, "use_mplstyl": 124, "polarisyaml": [125, 126, 127, 128], "main_mpas_to_yaml": 129, "mpas_namelist_and_streams_to_yaml": 130, "yaml_to_mpas_stream": 131, "anvil": [132, 309], "intel": [132, 134, 135, 309, 311, 312], "gnu": [132, 133, 134, 135, 137, 309, 310, 311, 314], "chicoma": [133, 310], "cpu": [133, 137, 310, 314], "chrysali": [134, 311], "compymcnodefac": [135, 312], "support": [136, 267, 288, 301, 313, 331], "perlmutt": [137, 314], "pm": 137, "baroclinic_channel": [138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 269], "cosine_bel": [138, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 271, 318], "geostroph": [138, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 323], "inertial_gravity_wav": [138, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 275], "manufactured_solut": [138, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 276], "single_column": [138, 234, 235, 236, 237, 238, 239, 240, 241, 279, 289, 292, 293, 294, 295, 296, 297, 298, 299, 303], "sphere_transport": [138, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "converg": [138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 326], "potenti": [138, 139], "energi": [138, 139], "rpe": [138, 139, 161, 174, 175, 176, 177, 178, 269, 319], "vertic": [138, 139, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 307, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330], "coordin": [138, 139, 307, 316], "v": 139, "map": 139, "omega": 139, "mpi": [139, 313], "resourc": 139, "interv": 139, "quasi": 139, "icosahedr": 139, "rest": 139, "convergenceanalysi": [141, 142, 143, 144, 145, 146, 147, 148], "compute_error": 142, "convergence_paramet": [143, 246], "exact_solut": [144, 188, 201, 211, 212, 213, 214, 224, 225, 226, 227, 275, 276], "get_output_field": [145, 202], "plot_converg": 146, "convergenceforward": [149, 150, 151], "compute_cell_count": [150, 153, 156, 166, 190, 216, 229], "sphericalconvergenceforward": [152, 153], "add_spherical_base_mesh_step": 154, "oceanmodelstep": [155, 156, 157, 158, 159], "get_time_interval_str": 160, "compute_rp": 161, "add_baroclinic_channel_task": 162, "decomp": [163, 269, 319], "default": [164, 269, 307, 319], "forward": [165, 166, 167, 189, 190, 191, 203, 215, 216, 228, 229, 236, 249, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 296, 303, 307], "init": [168, 169, 170, 192, 193, 194, 204, 205, 217, 218, 230, 231, 238, 239, 250, 251, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 307], "restart": [171, 172, 173, 269, 319, 334], "restart_step": [172, 173], "restartstep": [172, 173], "analysi": [176, 177, 178, 187, 188, 200, 201, 202, 210, 211, 223, 224, 245, 246, 270, 271, 272, 273, 275, 276, 277, 278, 307, 323], "thread": [179, 269, 319], "cosinebel": [184, 185], "add_cosine_bell_task": 186, "add_geostrophic_task": 199, "inertialgravitywav": 208, "add_inertial_gravity_wave_task": 209, "exactsolut": [212, 213, 214, 225, 226, 227], "normal_veloc": [213, 226], "ssh": [214, 227], "manufacturedsolut": 221, "add_manufactured_solution_task": 222, "add_single_column_task": [234, 292], "cvmix": [235, 279, 329], "ideal_ag": 237, "idealag": 237, "spheretransport": [242, 243], "add_sphere_transport_task": 244, "filament_analysi": [247, 248, 277], "filamentanalysi": [247, 248], "mixing_analysi": [252, 253, 270], "mixinganalysi": [252, 253], "grid_1d": [256, 257], "generate_1d_grid": 256, "write_1d_grid": 257, "init_vertical_coord": 258, "partial_cel": [259, 260], "alter_bottom_depth": 259, "alter_ssh": 260, "zlevel": [261, 262, 263, 264], "compute_min_max_level_cel": 261, "compute_z_level_layer_thick": 262, "compute_z_level_resting_thick": 263, "init_z_level_vertical_coord": 264, "zstar": 265, "init_z_star_vertical_coord": 265, "initi": [268, 301, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "condit": [268, 301, 307, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "boundari": 268, "forc": [268, 301, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "correlated_tracers_2d": 270, "base_mesh": [270, 271, 272, 273, 277, 278], "divergent_2d": 272, "nondivergent_2d": 277, "rotation_2d": 278, "ideal": [279, 329], "ag": [279, 329], "categori": [280, 330, 335], "constructor": [281, 284, 286], "organ": 283, "attribut": [284, 286], "copi": 284, "pull": 285, "request": 285, "pr": 285, "nightli": 285, "overview": 287, "code": [287, 288, 307], "packag": 287, "within": 287, "group": [287, 307], "relat": 287, "quick": [288, 331], "start": [288, 307, 331], "develop": [288, 306, 307], "unix": 288, "shell": 288, "repositori": 288, "beginn": 288, "compil": 288, "system": 288, "unknown": 288, "what": 288, "script": [288, 331], "doe": 288, "flag": 288, "activ": 288, "switch": 288, "between": [288, 307], "differ": 288, "onli": 288, "repo": 288, "worktre": 288, "advanc": 288, "seaic": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "exact_restart": [293, 294, 295], "exactrestart": 293, "standard_phys": [297, 298, 299], "standardphys": 297, "standard_physics_test": 303, "exact_restart_test": 303, "solver": 304, "error": 304, "when": 304, "proxi": 304, "lanl": 304, "mac": 304, "gethostbynam": 304, "fail": 304, "glossari": [305, 306], "": 306, "guid": 306, "tutori": [306, 307], "compass": 306, "get": 307, "vari": 307, "resolut": 307, "paramet": 307, "thing": 307, "out": 307, "defin": 307, "more": 307, "again": 307, "one": 307, "second": 307, "enhanc": 307, "comput": 307, "cell": 307, "count": 307, "superclass": 307, "studi": 307, "how": 307, "pass": 307, "data": [307, 314], "A": 308, "case": 308, "slurm": 313, "queue": 313, "mpich": 313, "openmpi": 313, "No": 313, "forg": 313, "jupyt": 314, "notebook": 314, "1d": 316, "type": 316, "tanh_dz": 316, "index_tanh_dz": 316, "60layerphc": 316, "80layere3smv1": 316, "100layere3smv1": 316, "3d": 316, "z": 316, "star": 316, "level": 316, "sigma": 316, "cosine_bell_cached_init": 318, "baroclin": 319, "channel": 319, "descript": [319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "durat": [319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "core": [319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 334, 335], "correl": 320, "tracer": 320, "2": [320, 322, 327, 328], "d": [320, 322, 327, 328], "cosin": 321, "bell": 321, "diverg": 322, "inerti": 325, "graviti": 325, "wave": 325, "manufactur": 326, "solut": 326, "nondiverg": 327, "rotat": 328, "singl": [329, 334], "column": [329, 334], "task_nam": [330, 335], "yet": 331, "load": 331, "standalon": 331, "sea": 332, "ic": 332, "standard": 334, "physic": 334, "timestep": 334, "exact": 334}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Shared steps": [[1, "shared-steps"]], "Summary": [[1, "summary"], [2, "summary"]], "Requirements": [[1, "requirements"], [2, "requirements"]], "Requirement: Shared steps are run once.": [[1, "requirement-shared-steps-are-run-once"]], "Requirement: Shared steps are run before steps that depend on their output.": [[1, "requirement-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Requirement: Shared steps are not daughters of a task": [[1, "requirement-shared-steps-are-not-daughters-of-a-task"]], "Requirement: Working directory structure is intuitive.": [[1, "requirement-working-directory-structure-is-intuitive"]], "Requirement: Working directory step paths are easily discoverable by users.": [[1, "requirement-working-directory-step-paths-are-easily-discoverable-by-users"]], "Requirement: The output of shared steps may be used by multiple tasks.": [[1, "requirement-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Requirement: tasks do not rely on outputs from steps in other tasks": [[1, "requirement-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Implementation": [[1, "implementation"], [2, "implementation"]], "Implementation: Shared steps are set up once.": [[1, "implementation-shared-steps-are-set-up-once"]], "Implementation: Shared steps are run before steps that depend on their output.": [[1, "implementation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Implementation: Shared steps are not daughters of a task": [[1, "implementation-shared-steps-are-not-daughters-of-a-task"]], "Implementation: Working directory structure is intuitive.": [[1, "implementation-working-directory-structure-is-intuitive"]], "Implementation: Working directory step paths are easily discoverable by users.": [[1, "implementation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Implementation: The output of shared steps may be used by multiple tasks.": [[1, "implementation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Implementation: tasks do not rely on outputs from steps in other tasks": [[1, "implementation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Testing": [[1, "testing"], [2, "testing"]], "Testing And Validation: Shared steps are run once.": [[1, "testing-and-validation-shared-steps-are-run-once"]], "Testing And Validation: Shared steps are run before steps that depend on their output.": [[1, "testing-and-validation-shared-steps-are-run-before-steps-that-depend-on-their-output"]], "Testing And Validation: Shared steps are not daughters of a task": [[1, "testing-and-validation-shared-steps-are-not-daughters-of-a-task"]], "Testing And Validation: Working directory structure is intuitive.": [[1, "testing-and-validation-working-directory-structure-is-intuitive"]], "Testing And Validation: Working directory step paths are easily discoverable by users.": [[1, "testing-and-validation-working-directory-step-paths-are-easily-discoverable-by-users"]], "Testing And Validation: The output of shared steps may be used by multiple tasks.": [[1, "testing-and-validation-the-output-of-shared-steps-may-be-used-by-multiple-tasks"]], "Testing And Validation: tasks do not rely on outputs from steps in other tasks": [[1, "testing-and-validation-tasks-do-not-rely-on-outputs-from-steps-in-other-tasks"]], "Template": [[2, "template"]], "Requirement: name-of-topic-here": [[2, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[2, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[2, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation: name-of-topic-here (same as Requirement)": [[2, "implementation-name-of-topic-here-same-as-requirement"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[2, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[3, "api-reference"]], "Components": [[3, "components"], [281, "components"]], "polaris framework": [[3, "polaris-framework"]], "Command-line interface": [[3, "command-line-interface"], [5, "command-line-interface"]], "list": [[3, "list"]], "setup": [[3, "setup"]], "suite": [[3, "suite"]], "run": [[3, "run"]], "cache": [[3, "cache"]], "mpas_to_yaml": [[3, "mpas-to-yaml"], [5, "mpas-to-yaml"]], "Base Classes": [[3, "base-classes"]], "Component": [[3, "component"]], "Task": [[3, "task"]], "Step": [[3, "step"]], "ModelStep": [[3, "modelstep"]], "components": [[3, "id1"]], "config": [[3, "config"]], "io": [[3, "io"]], "job": [[3, "job"]], "logging": [[3, "logging"]], "mesh": [[3, "mesh"], [319, "mesh"], [319, "id2"], [319, "id9"], [319, "id17"], [319, "id25"], [319, "id32"], [320, "mesh"], [321, "mesh"], [322, "mesh"], [323, "mesh"], [325, "mesh"], [326, "mesh"], [327, "mesh"], [328, "mesh"], [329, "mesh"], [329, "id3"], [329, "id8"], [330, "mesh"], [334, "mesh"], [334, "id1"], [334, "id6"], [335, "mesh"]], "model_step": [[3, "model-step"]], "mpas": [[3, "mpas"]], "namelist": [[3, "namelist"]], "parallel": [[3, "parallel"]], "provenance": [[3, "provenance"]], "remap": [[3, "remap"]], "streams": [[3, "streams"]], "validate": [[3, "validate"], [269, "validate"]], "viz": [[3, "viz"], [270, "viz"], [271, "viz"], [272, "viz"], [273, "viz"], [275, "viz"], [276, "viz"], [277, "viz"], [278, "viz"], [279, "viz"], [303, "viz"]], "yaml": [[3, "yaml"]], "Building the Documentation": [[4, "building-the-documentation"]], "polaris list": [[5, "polaris-list"]], "polaris setup": [[5, "polaris-setup"]], "polaris suite": [[5, "polaris-suite"]], "polaris serial": [[5, "polaris-serial"]], "polaris cache": [[5, "polaris-cache"]], "Deploying a new spack environment": [[6, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[6, "where-do-we-update-polaris-dependencies"]], "Mache": [[6, "mache"], [6, "id1"]], "Spack": [[6, "spack"]], "Conda": [[6, "conda"]], "Identifying E3SM machines": [[6, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[6, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[6, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[6, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[6, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[6, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[6, "testing-spack-with-albany"]], "Troubleshooting spack": [[6, "troubleshooting-spack"]], "Testing polaris": [[6, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[6, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[6, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[6, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[6, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[6, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[6, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[6, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[7, "documentation"], [307, "documentation"]], "Docstrings": [[7, "docstrings"]], "Modules for polaris commands": [[8, "modules-for-polaris-commands"]], "list module": [[8, "list-module"]], "setup module": [[8, "setup-module"]], "suite module": [[8, "suite-module"]], "run.serial module": [[8, "run-serial-module"]], "cache module": [[8, "cache-module"]], "Config files": [[9, "config-files"]], "Shared config files": [[9, "shared-config-files"]], "Comments in config files": [[9, "comments-in-config-files"]], "Framework": [[10, "framework"], [315, "framework"]], "IO": [[11, "io"]], "Symlinks": [[11, "symlinks"]], "Download": [[11, "download"]], "Logging": [[12, "logging"]], "Mesh": [[13, "mesh"]], "Spherical Meshes": [[13, "spherical-meshes"]], "Planar Meshes": [[13, "planar-meshes"]], "Uniform planar meshes": [[13, "uniform-planar-meshes"]], "General planar meshes": [[13, "general-planar-meshes"]], "Model": [[14, "model"], [139, "model"]], "Running an E3SM component": [[14, "running-an-e3sm-component"], [139, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[14, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[14, "adding-a-yaml-file"]], "Adding a namelist file": [[14, "adding-a-namelist-file"]], "Adding model config options": [[14, "adding-model-config-options"]], "Dynamic model config options": [[14, "dynamic-model-config-options"]], "Adding a streams file": [[14, "adding-a-streams-file"]], "Adding a template streams file": [[14, "adding-a-template-streams-file"]], "Adding E3SM component as an input": [[14, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[14, "partitioning-the-mesh"]], "Updating PIO namelist options": [[14, "updating-pio-namelist-options"]], "Making a graph file": [[14, "making-a-graph-file"]], "MPAS": [[15, "mpas"]], "Area": [[15, "area"]], "Time": [[15, "time"]], "Provenance": [[16, "provenance"]], "Remapping": [[17, "remapping"]], "Validation": [[18, "validation"]], "Validating variables against a baseline": [[18, "validating-variables-against-a-baseline"]], "Validating variables": [[18, "validating-variables"]], "Norms": [[18, "norms"]], "Visualization": [[19, "visualization"]], "common matplotlib style": [[19, "common-matplotlib-style"]], "horizontal fields from planar meshes": [[19, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots": [[19, "global-lat-lon-plots"]], "plotting from spherical MPAS meshes": [[19, "plotting-from-spherical-mpas-meshes"]], "plotting from lat/lon grids": [[19, "plotting-from-lat-lon-grids"]], "polaris.Component": [[20, "polaris-component"]], "polaris.Component.add_config": [[21, "polaris-component-add-config"]], "polaris.Component.add_step": [[22, "polaris-component-add-step"]], "polaris.Component.add_task": [[23, "polaris-component-add-task"]], "polaris.Component.remove_step": [[24, "polaris-component-remove-step"]], "polaris.ModelStep": [[25, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[26, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[27, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[28, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[29, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[30, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[31, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[32, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[33, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[34, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[35, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[36, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[37, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[38, "polaris-step"]], "polaris.Step.add_dependency": [[39, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[40, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[41, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[42, "polaris-step-constrain-resources"]], "polaris.Step.run": [[43, "polaris-step-run"]], "polaris.Step.runtime_setup": [[44, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[45, "polaris-step-set-resources"]], "polaris.Step.set_shared_config": [[46, "polaris-step-set-shared-config"]], "polaris.Step.setup": [[47, "polaris-step-setup"]], "polaris.Step.validate_baselines": [[48, "polaris-step-validate-baselines"]], "polaris.Task": [[49, "polaris-task"]], "polaris.Task.add_step": [[50, "polaris-task-add-step"]], "polaris.Task.configure": [[51, "polaris-task-configure"]], "polaris.Task.remove_step": [[52, "polaris-task-remove-step"]], "polaris.Task.set_shared_config": [[53, "polaris-task-set-shared-config"]], "polaris.__main__.main": [[54, "polaris-main-main"]], "polaris.cache.update_cache": [[55, "polaris-cache-update-cache"]], "polaris.components.get_components": [[56, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[57, "polaris-config-polarisconfigparser"]], "polaris.config.PolarisConfigParser.setup": [[58, "polaris-config-polarisconfigparser-setup"]], "polaris.io.download": [[59, "polaris-io-download"]], "polaris.io.symlink": [[60, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[61, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[62, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[63, "polaris-list-list-cases"]], "polaris.list.list_machines": [[64, "polaris-list-list-machines"]], "polaris.list.list_suites": [[65, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[66, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[67, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[68, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[69, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[70, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[71, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[72, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[73, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[74, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[75, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[76, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[77, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[78, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[79, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[80, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[81, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[82, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[83, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[84, "polaris-model-step-make-graph-file"]], "polaris.mpas.area_for_field": [[85, "polaris-mpas-area-for-field"]], "polaris.mpas.time_index_from_xtime": [[86, "polaris-mpas-time-index-from-xtime"]], "polaris.namelist.ingest": [[87, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[88, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[89, "polaris-namelist-replace"]], "polaris.namelist.write": [[90, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[91, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[92, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[93, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[94, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[95, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[96, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[97, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[98, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[99, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[100, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[101, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[102, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[103, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[104, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[105, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[106, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.complete_step_run": [[107, "polaris-run-complete-step-run"]], "polaris.run.load_dependencies": [[108, "polaris-run-load-dependencies"]], "polaris.run.serial.run_single_step": [[109, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tasks": [[110, "polaris-run-serial-run-tasks"]], "polaris.run.setup_config": [[111, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[112, "polaris-run-unpickle-suite"]], "polaris.setup.setup_task": [[113, "polaris-setup-setup-task"]], "polaris.setup.setup_tasks": [[114, "polaris-setup-setup-tasks"]], "polaris.streams.read": [[115, "polaris-streams-read"]], "polaris.streams.update_defaults": [[116, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[117, "polaris-streams-update-tree"]], "polaris.streams.write": [[118, "polaris-streams-write"]], "polaris.suite.setup_suite": [[119, "polaris-suite-setup-suite"]], "polaris.validate.compare_variables": [[120, "polaris-validate-compare-variables"]], "polaris.viz.plot_global_lat_lon_field": [[121, "polaris-viz-plot-global-lat-lon-field"]], "polaris.viz.plot_global_mpas_field": [[122, "polaris-viz-plot-global-mpas-field"]], "polaris.viz.plot_horiz_field": [[123, "polaris-viz-plot-horiz-field"]], "polaris.viz.use_mplstyle": [[124, "polaris-viz-use-mplstyle"]], "polaris.yaml.PolarisYaml": [[125, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[126, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[127, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[128, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[129, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[130, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[131, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[132, "anvil"], [309, "anvil"]], "intel": [[132, "intel"], [134, "intel"], [135, "intel"]], "gnu": [[132, "gnu"], [134, "gnu"], [135, "gnu"]], "Chicoma": [[133, "chicoma"], [310, "chicoma"]], "chicoma-cpu, gnu": [[133, "chicoma-cpu-gnu"]], "Chrysalis": [[134, "chrysalis"], [311, "chrysalis"]], "CompyMcNodeFace": [[135, "compymcnodeface"], [312, "compymcnodeface"]], "Machines": [[136, "machines"], [313, "machines"]], "Supported Machines": [[136, "supported-machines"], [313, "supported-machines"]], "Other Machines": [[136, "other-machines"], [313, "other-machines"]], "Adding a New Supported Machine": [[136, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[136, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[136, "describing-a-spack-environment"]], "Building the Spack Environment": [[136, "building-the-spack-environment"]], "Perlmutter": [[137, "perlmutter"], [314, "perlmutter"]], "pm-cpu, gnu": [[137, "pm-cpu-gnu"]], "ocean": [[138, "ocean"]], "Tasks": [[138, "tasks"], [274, "tasks"], [286, "tasks"], [289, "tasks"], [302, "tasks"], [324, "tasks"], [333, "tasks"], [337, "tasks"]], "baroclinic_channel": [[138, "baroclinic-channel"], [269, "baroclinic-channel"]], "cosine_bell": [[138, "cosine-bell"], [271, "cosine-bell"]], "geostrophic": [[138, "geostrophic"], [273, "geostrophic"], [323, "geostrophic"]], "inertial_gravity_wave": [[138, "inertial-gravity-wave"], [275, "inertial-gravity-wave"]], "manufactured_solution": [[138, "manufactured-solution"], [276, "manufactured-solution"]], "single_column": [[138, "single-column"], [279, "single-column"], [289, "single-column"], [303, "single-column"]], "sphere_transport": [[138, "sphere-transport"]], "Ocean Framework": [[138, "ocean-framework"]], "Convergence Tests": [[138, "convergence-tests"], [139, "convergence-tests"]], "Spherical Convergence Tests": [[138, "spherical-convergence-tests"]], "Ocean Model": [[138, "ocean-model"]], "Spherical Base Mesh Step": [[138, "spherical-base-mesh-step"]], "Reference Potential Energy (RPE)": [[138, "reference-potential-energy-rpe"]], "Vertical coordinates": [[138, "vertical-coordinates"]], "Ocean framework": [[139, "ocean-framework"]], "YAML files vs. namelists and streams": [[139, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[139, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[139, "setting-mpi-resources"]], "Setting time intervals in model config options": [[139, "setting-time-intervals-in-model-config-options"]], "Model config options and streams": [[139, "model-config-options-and-streams"]], "Quasi-uniform and Icosahedral Spherical Meshes": [[139, "quasi-uniform-and-icosahedral-spherical-meshes"]], "Vertical coordinate": [[139, "vertical-coordinate"], [316, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[139, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[140, "polaris-ocean-ocean"]], "polaris.ocean.convergence.ConvergenceAnalysis": [[141, "polaris-ocean-convergence-convergenceanalysis"]], "polaris.ocean.convergence.ConvergenceAnalysis.compute_error": [[142, "polaris-ocean-convergence-convergenceanalysis-compute-error"]], "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters": [[143, "polaris-ocean-convergence-convergenceanalysis-convergence-parameters"]], "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution": [[144, "polaris-ocean-convergence-convergenceanalysis-exact-solution"]], "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field": [[145, "polaris-ocean-convergence-convergenceanalysis-get-output-field"]], "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence": [[146, "polaris-ocean-convergence-convergenceanalysis-plot-convergence"]], "polaris.ocean.convergence.ConvergenceAnalysis.run": [[147, "polaris-ocean-convergence-convergenceanalysis-run"]], "polaris.ocean.convergence.ConvergenceAnalysis.setup": [[148, "polaris-ocean-convergence-convergenceanalysis-setup"]], "polaris.ocean.convergence.ConvergenceForward": [[149, "polaris-ocean-convergence-convergenceforward"]], "polaris.ocean.convergence.ConvergenceForward.compute_cell_count": [[150, "polaris-ocean-convergence-convergenceforward-compute-cell-count"]], "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config": [[151, "polaris-ocean-convergence-convergenceforward-dynamic-model-config"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward": [[152, "polaris-ocean-convergence-spherical-sphericalconvergenceforward"]], "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count": [[153, "polaris-ocean-convergence-spherical-sphericalconvergenceforward-compute-cell-count"]], "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step": [[154, "polaris-ocean-mesh-spherical-add-spherical-base-mesh-step"]], "polaris.ocean.model.OceanModelStep": [[155, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[156, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[157, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[158, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[159, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.model.get_time_interval_string": [[160, "polaris-ocean-model-get-time-interval-string"]], "polaris.ocean.rpe.compute_rpe": [[161, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks": [[162, "polaris-ocean-tasks-baroclinic-channel-add-baroclinic-channel-tasks"]], "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp": [[163, "polaris-ocean-tasks-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tasks.baroclinic_channel.default.Default": [[164, "polaris-ocean-tasks-baroclinic-channel-default-default"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward": [[165, "polaris-ocean-tasks-baroclinic-channel-forward-forward"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count": [[166, "polaris-ocean-tasks-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config": [[167, "polaris-ocean-tasks-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.init.Init": [[168, "polaris-ocean-tasks-baroclinic-channel-init-init"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.run": [[169, "polaris-ocean-tasks-baroclinic-channel-init-init-run"]], "polaris.ocean.tasks.baroclinic_channel.init.Init.setup": [[170, "polaris-ocean-tasks-baroclinic-channel-init-init-setup"]], "polaris.ocean.tasks.baroclinic_channel.restart.Restart": [[171, "polaris-ocean-tasks-baroclinic-channel-restart-restart"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep": [[172, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[173, "polaris-ocean-tasks-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe": [[174, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure": [[175, "polaris-ocean-tasks-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis": [[176, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run": [[177, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup": [[178, "polaris-ocean-tasks-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tasks.baroclinic_channel.threads.Threads": [[179, "polaris-ocean-tasks-baroclinic-channel-threads-threads"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate": [[180, "polaris-ocean-tasks-baroclinic-channel-validate-validate"]], "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run": [[181, "polaris-ocean-tasks-baroclinic-channel-validate-validate-run"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz": [[182, "polaris-ocean-tasks-baroclinic-channel-viz-viz"]], "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run": [[183, "polaris-ocean-tasks-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tasks.cosine_bell.CosineBell": [[184, "polaris-ocean-tasks-cosine-bell-cosinebell"]], "polaris.ocean.tasks.cosine_bell.CosineBell.configure": [[185, "polaris-ocean-tasks-cosine-bell-cosinebell-configure"]], "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks": [[186, "polaris-ocean-tasks-cosine-bell-add-cosine-bell-tasks"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis": [[187, "polaris-ocean-tasks-cosine-bell-analysis-analysis"]], "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution": [[188, "polaris-ocean-tasks-cosine-bell-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.cosine_bell.forward.Forward": [[189, "polaris-ocean-tasks-cosine-bell-forward-forward"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count": [[190, "polaris-ocean-tasks-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config": [[191, "polaris-ocean-tasks-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tasks.cosine_bell.init.Init": [[192, "polaris-ocean-tasks-cosine-bell-init-init"]], "polaris.ocean.tasks.cosine_bell.init.Init.run": [[193, "polaris-ocean-tasks-cosine-bell-init-init-run"]], "polaris.ocean.tasks.cosine_bell.init.cosine_bell": [[194, "polaris-ocean-tasks-cosine-bell-init-cosine-bell"]], "polaris.ocean.tasks.cosine_bell.viz.Viz": [[195, "polaris-ocean-tasks-cosine-bell-viz-viz"]], "polaris.ocean.tasks.cosine_bell.viz.Viz.run": [[196, "polaris-ocean-tasks-cosine-bell-viz-viz-run"]], "polaris.ocean.tasks.geostrophic.Geostrophic": [[197, "polaris-ocean-tasks-geostrophic-geostrophic"]], "polaris.ocean.tasks.geostrophic.Geostrophic.configure": [[198, "polaris-ocean-tasks-geostrophic-geostrophic-configure"]], "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks": [[199, "polaris-ocean-tasks-geostrophic-add-geostrophic-tasks"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis": [[200, "polaris-ocean-tasks-geostrophic-analysis-analysis"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution": [[201, "polaris-ocean-tasks-geostrophic-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field": [[202, "polaris-ocean-tasks-geostrophic-analysis-analysis-get-output-field"]], "polaris.ocean.tasks.geostrophic.forward.Forward": [[203, "polaris-ocean-tasks-geostrophic-forward-forward"]], "polaris.ocean.tasks.geostrophic.init.Init": [[204, "polaris-ocean-tasks-geostrophic-init-init"]], "polaris.ocean.tasks.geostrophic.init.Init.run": [[205, "polaris-ocean-tasks-geostrophic-init-init-run"]], "polaris.ocean.tasks.geostrophic.viz.Viz": [[206, "polaris-ocean-tasks-geostrophic-viz-viz"]], "polaris.ocean.tasks.geostrophic.viz.Viz.run": [[207, "polaris-ocean-tasks-geostrophic-viz-viz-run"]], "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave": [[208, "polaris-ocean-tasks-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks": [[209, "polaris-ocean-tasks-inertial-gravity-wave-add-inertial-gravity-wave-tasks"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis": [[210, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution": [[211, "polaris-ocean-tasks-inertial-gravity-wave-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution": [[212, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[213, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[214, "polaris-ocean-tasks-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward": [[215, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count": [[216, "polaris-ocean-tasks-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init": [[217, "polaris-ocean-tasks-inertial-gravity-wave-init-init"]], "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run": [[218, "polaris-ocean-tasks-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz": [[219, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run": [[220, "polaris-ocean-tasks-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution": [[221, "polaris-ocean-tasks-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks": [[222, "polaris-ocean-tasks-manufactured-solution-add-manufactured-solution-tasks"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis": [[223, "polaris-ocean-tasks-manufactured-solution-analysis-analysis"]], "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution": [[224, "polaris-ocean-tasks-manufactured-solution-analysis-analysis-exact-solution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution": [[225, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[226, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh": [[227, "polaris-ocean-tasks-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward": [[228, "polaris-ocean-tasks-manufactured-solution-forward-forward"]], "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count": [[229, "polaris-ocean-tasks-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tasks.manufactured_solution.init.Init": [[230, "polaris-ocean-tasks-manufactured-solution-init-init"]], "polaris.ocean.tasks.manufactured_solution.init.Init.run": [[231, "polaris-ocean-tasks-manufactured-solution-init-init-run"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz": [[232, "polaris-ocean-tasks-manufactured-solution-viz-viz"]], "polaris.ocean.tasks.manufactured_solution.viz.Viz.run": [[233, "polaris-ocean-tasks-manufactured-solution-viz-viz-run"]], "polaris.ocean.tasks.single_column.add_single_column_tasks": [[234, "polaris-ocean-tasks-single-column-add-single-column-tasks"]], "polaris.ocean.tasks.single_column.cvmix.CVMix": [[235, "polaris-ocean-tasks-single-column-cvmix-cvmix"]], "polaris.ocean.tasks.single_column.forward.Forward": [[236, "polaris-ocean-tasks-single-column-forward-forward"]], "polaris.ocean.tasks.single_column.ideal_age.IdealAge": [[237, "polaris-ocean-tasks-single-column-ideal-age-idealage"]], "polaris.ocean.tasks.single_column.init.Init": [[238, "polaris-ocean-tasks-single-column-init-init"]], "polaris.ocean.tasks.single_column.init.Init.run": [[239, "polaris-ocean-tasks-single-column-init-init-run"]], "polaris.ocean.tasks.single_column.viz.Viz": [[240, "polaris-ocean-tasks-single-column-viz-viz"]], "polaris.ocean.tasks.single_column.viz.Viz.run": [[241, "polaris-ocean-tasks-single-column-viz-viz-run"]], "polaris.ocean.tasks.sphere_transport.SphereTransport": [[242, "polaris-ocean-tasks-sphere-transport-spheretransport"]], "polaris.ocean.tasks.sphere_transport.SphereTransport.configure": [[243, "polaris-ocean-tasks-sphere-transport-spheretransport-configure"]], "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks": [[244, "polaris-ocean-tasks-sphere-transport-add-sphere-transport-tasks"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis": [[245, "polaris-ocean-tasks-sphere-transport-analysis-analysis"]], "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters": [[246, "polaris-ocean-tasks-sphere-transport-analysis-analysis-convergence-parameters"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis": [[247, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis"]], "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run": [[248, "polaris-ocean-tasks-sphere-transport-filament-analysis-filamentanalysis-run"]], "polaris.ocean.tasks.sphere_transport.forward.Forward": [[249, "polaris-ocean-tasks-sphere-transport-forward-forward"]], "polaris.ocean.tasks.sphere_transport.init.Init": [[250, "polaris-ocean-tasks-sphere-transport-init-init"]], "polaris.ocean.tasks.sphere_transport.init.Init.run": [[251, "polaris-ocean-tasks-sphere-transport-init-init-run"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis": [[252, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis"]], "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run": [[253, "polaris-ocean-tasks-sphere-transport-mixing-analysis-mixinganalysis-run"]], "polaris.ocean.tasks.sphere_transport.viz.Viz": [[254, "polaris-ocean-tasks-sphere-transport-viz-viz"]], "polaris.ocean.tasks.sphere_transport.viz.Viz.run": [[255, "polaris-ocean-tasks-sphere-transport-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[256, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[257, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[258, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[259, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[260, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[261, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[262, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[263, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[264, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[265, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[266, "ocean-component"], [317, "ocean-component"]], "Models": [[267, "models"]], "Supported Models": [[267, "supported-models"]], "MPAS-Ocean": [[268, "mpas-ocean"]], "Initial conditions": [[268, "initial-conditions"], [301, "initial-conditions"]], "Boundary conditions": [[268, "boundary-conditions"]], "Forcing": [[268, "forcing"], [301, "forcing"]], "framework": [[269, "framework"], [270, "framework"], [271, "framework"], [272, "framework"], [273, "framework"], [275, "framework"], [276, "framework"], [277, "framework"], [278, "framework"], [279, "framework"], [303, "framework"]], "init": [[269, "init"], [270, "init"], [271, "init"], [272, "init"], [273, "init"], [275, "init"], [276, "init"], [277, "init"], [278, "init"], [279, "init"]], "forward": [[269, "forward"], [270, "forward"], [271, "forward"], [272, "forward"], [273, "forward"], [275, "forward"], [276, "forward"], [277, "forward"], [278, "forward"], [279, "forward"], [303, "forward"]], "default": [[269, "default"], [319, "default"]], "decomp": [[269, "decomp"], [319, "decomp"]], "restart": [[269, "restart"], [319, "restart"]], "threads": [[269, "threads"]], "rpe": [[269, "rpe"], [319, "rpe"]], "correlated_tracers_2d": [[270, "correlated-tracers-2d"]], "base_mesh": [[270, "base-mesh"], [271, "base-mesh"], [272, "base-mesh"], [273, "base-mesh"], [277, "base-mesh"], [278, "base-mesh"]], "analysis": [[270, "analysis"], [271, "analysis"], [272, "analysis"], [273, "analysis"], [275, "analysis"], [276, "analysis"], [277, "analysis"], [278, "analysis"], [323, "analysis"]], "mixing_analysis": [[270, "mixing-analysis"]], "divergent_2d": [[272, "divergent-2d"]], "exact_solution": [[275, "exact-solution"], [276, "exact-solution"]], "nondivergent_2d": [[277, "nondivergent-2d"]], "filament_analysis": [[277, "filament-analysis"]], "rotation_2d": [[278, "rotation-2d"]], "cvmix": [[279, "cvmix"], [329, "cvmix"]], "ideal age": [[279, "ideal-age"], [329, "ocean-single-column-ideal-age"]], "Categories of tasks": [[280, "categories-of-tasks"]], "Constructor": [[281, "constructor"]], "Config file": [[281, "config-file"]], "Directory structure": [[282, "directory-structure"]], "Organization of Tasks": [[283, "organization-of-tasks"]], "Steps": [[284, "steps"]], "Step attributes": [[284, "step-attributes"]], "constructor": [[284, "constructor"], [286, "constructor"]], "setup()": [[284, "setup"]], "constrain_resources()": [[284, "constrain-resources"]], "runtime_setup()": [[284, "runtime-setup"]], "run()": [[284, "run"]], "inputs and outputs": [[284, "inputs-and-outputs"]], "Input files": [[284, "input-files"]], "Symlinks to input files": [[284, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[284, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[284, "downloading-and-symlinking-input-files"]], "Copying input files": [[284, "copying-input-files"]], "Output files": [[284, "output-files"]], "Cached output files": [[284, "cached-output-files"]], "Adding other steps as dependencies": [[284, "adding-other-steps-as-dependencies"]], "Suites": [[285, "suites"], [318, "suites"], [331, "suites"], [336, "suites"]], "Pull-Request (PR) suite": [[285, "pull-request-pr-suite"]], "Nightly suite": [[285, "nightly-suite"]], "Task attributes": [[286, "task-attributes"]], "configure()": [[286, "configure"]], "Overview": [[287, "overview"]], "Code Style": [[287, "code-style"]], "Packages and Modules": [[287, "packages-and-modules"]], "Packages": [[287, "packages"]], "Modules": [[287, "modules"]], "Classes": [[287, "classes"]], "Code sharing": [[287, "code-sharing"]], "\u2026in the polaris framework": [[287, "in-the-polaris-framework"]], "\u2026within a component": [[287, "within-a-component"]], "\u2026within a group of related tasks": [[287, "within-a-group-of-related-tasks"]], "\u2026within a task": [[287, "within-a-task"]], "Quick Start for Developers": [[288, "quick-start-for-developers"]], "Unix Shell": [[288, "unix-shell"]], "Set up a polaris repository: for beginners": [[288, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[288, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[288, "supported-machines"]], "Environments with Albany": [[288, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[288, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[288, "unknown-machines"]], "What the script does": [[288, "what-the-script-does"]], "Optional flags": [[288, "optional-flags"]], "Activating the environment": [[288, "activating-the-environment"]], "Switching between different polaris environments": [[288, "switching-between-different-polaris-environments"]], "Troubleshooting": [[288, "troubleshooting"], [304, "troubleshooting"]], "Creating/updating only the polaris environment": [[288, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[288, "building-e3sm-components"]], "Running polaris from the repo": [[288, "running-polaris-from-the-repo"]], "Code style for polaris": [[288, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[288, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[289, "seaice"]], "SeaIce framework": [[290, "seaice-framework"]], "polaris.seaice.SeaIce": [[291, "polaris-seaice-seaice"]], "polaris.seaice.tasks.single_column.add_single_column_tasks": [[292, "polaris-seaice-tasks-single-column-add-single-column-tasks"]], "polaris.seaice.tasks.single_column.exact_restart.ExactRestart": [[293, "polaris-seaice-tasks-single-column-exact-restart-exactrestart"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate": [[294, "polaris-seaice-tasks-single-column-exact-restart-validate-validate"]], "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run": [[295, "polaris-seaice-tasks-single-column-exact-restart-validate-validate-run"]], "polaris.seaice.tasks.single_column.forward.Forward": [[296, "polaris-seaice-tasks-single-column-forward-forward"]], "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics": [[297, "polaris-seaice-tasks-single-column-standard-physics-standardphysics"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz": [[298, "polaris-seaice-tasks-single-column-standard-physics-viz-viz"]], "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run": [[299, "polaris-seaice-tasks-single-column-standard-physics-viz-viz-run"]], "SeaIce component": [[300, "seaice-component"]], "Supported Model: MPAS-Seaice": [[301, "supported-model-mpas-seaice"]], "standard_physics_test": [[303, "standard-physics-test"]], "exact_restart_test": [[303, "exact-restart-test"]], "Solver errors when configuring conda environment": [[304, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[304, "proxy-on-lanl-macs"]], "gethostbyname failed": [[304, "gethostbyname-failed"]], "Glossary": [[305, "glossary"], [306, null]], "Polaris": [[306, "polaris"]], "User's guide": [[306, null]], "Developer's guide": [[306, null]], "Tutorials": [[306, null]], "Compass": [[306, "compass"]], "Developer Tutorial: Adding a new test group": [[307, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[307, "getting-started"]], "Making a new test group": [[307, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d task": [[307, "adding-a-default-task"]], "Varying resolution and other parameters": [[307, "varying-resolution-and-other-parameters"]], "Adding the init step": [[307, "adding-the-init-step"]], "Creating a horizontal mesh": [[307, "creating-a-horizontal-mesh"]], "Adding a config file": [[307, "adding-a-config-file"]], "Adding the step to the task": [[307, "adding-the-step-to-the-task"]], "Creating a vertical coordinate": [[307, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[307, "creating-an-initial-condition"]], "Adding plots": [[307, "adding-plots"]], "Adding step outputs": [[307, "adding-step-outputs"]], "Adding validation": [[307, "adding-validation"], [307, "id1"]], "Test things out!": [[307, "test-things-out"]], "Adding the forward step": [[307, "adding-the-forward-step"]], "Defining model config options and streams": [[307, "defining-model-config-options-and-streams"]], "Adding the forward step to the task": [[307, "adding-the-forward-step-to-the-task"]], "Adding more validation": [[307, "adding-more-validation"]], "Test the task again!": [[307, "test-the-task-again"]], "Adding a visualization step": [[307, "adding-a-visualization-step"]], "Adding the viz step to the task": [[307, "adding-the-viz-step-to-the-task"]], "Test the task one more time!": [[307, "test-the-task-one-more-time"]], "Adding a second task": [[307, "adding-a-second-task"]], "Enhancements": [[307, "enhancements"]], "Adding model config options in code": [[307, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[307, "adding-dynamic-model-config-options"]], "Computing the cell count": [[307, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for tasks": [[307, "adding-a-shared-superclass-for-tasks"]], "Adding a parameter study": [[307, "adding-a-parameter-study"]], "Adding the steps to the task": [[307, "adding-the-steps-to-the-task"]], "Adding the analysis step": [[307, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[307, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[308, "config-files"]], "A \u201cuser\u201d config file": [[308, "a-user-config-file"]], "Test-case config files": [[308, "test-case-config-files"]], "config options": [[309, "config-options"], [310, "config-options"], [311, "config-options"], [312, "config-options"], [313, "config-options"], [314, "config-options"], [319, "config-options"], [319, "id7"], [319, "id14"], [319, "id22"], [319, "id30"], [319, "id37"], [320, "config-options"], [321, "config-options"], [322, "config-options"], [323, "config-options"], [325, "config-options"], [326, "config-options"], [327, "config-options"], [328, "config-options"], [329, "config-options"], [329, "id1"], [329, "id6"], [329, "id13"], [330, "config-options"], [334, "config-options"], [334, "id5"], [334, "id10"], [335, "config-options"]], "Intel on Anvil": [[309, "intel-on-anvil"]], "Gnu on Anvil": [[309, "gnu-on-anvil"]], "Chicoma-CPU": [[310, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[310, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[311, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[311, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[312, "intel-on-compymcnodeface"]], "Slurm job queueing": [[313, "slurm-job-queueing"]], "MPICH": [[313, "mpich"]], "OpenMPI": [[313, "openmpi"]], "No MPI from conda-forge": [[313, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[314, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[314, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[314, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[316, "d-grid-type"]], "uniform": [[316, "uniform"]], "tanh_dz": [[316, "tanh-dz"]], "index_tanh_dz": [[316, "index-tanh-dz"]], "60layerPHC": [[316, "layerphc"]], "80layerE3SMv1": [[316, "layere3smv1"]], "100layerE3SMv1": [[316, "id1"]], "3D vertical coordinates": [[316, "d-vertical-coordinates"]], "z-star": [[316, "z-star"]], "z-level": [[316, "z-level"]], "sigma": [[316, "sigma"]], "cosine_bell and cosine_bell_cached_init suite": [[318, "cosine-bell-and-cosine-bell-cached-init-suite"]], "baroclinic channel": [[319, "baroclinic-channel"]], "description": [[319, "description"], [319, "id1"], [319, "id8"], [319, "id16"], [319, "id24"], [320, "description"], [321, "description"], [322, "description"], [323, "description"], [325, "description"], [326, "description"], [327, "description"], [328, "description"], [329, "description"], [329, "id2"], [329, "id7"], [330, "description"], [334, "description"], [335, "description"]], "vertical grid": [[319, "vertical-grid"], [319, "id3"], [319, "id10"], [319, "id18"], [319, "id26"], [319, "id33"], [320, "vertical-grid"], [321, "vertical-grid"], [322, "vertical-grid"], [323, "vertical-grid"], [325, "vertical-grid"], [326, "vertical-grid"], [327, "vertical-grid"], [328, "vertical-grid"], [329, "vertical-grid"], [329, "id4"], [329, "id9"], [330, "vertical-grid"]], "initial conditions": [[319, "initial-conditions"], [319, "id4"], [319, "id11"], [319, "id19"], [319, "id27"], [319, "id34"], [320, "initial-conditions"], [321, "initial-conditions"], [322, "initial-conditions"], [323, "initial-conditions"], [325, "initial-conditions"], [326, "initial-conditions"], [327, "initial-conditions"], [328, "initial-conditions"], [329, "initial-conditions"], [329, "id5"], [329, "id10"], [330, "initial-conditions"], [334, "initial-conditions"], [334, "id2"], [334, "id7"], [335, "initial-conditions"]], "forcing": [[319, "forcing"], [319, "id5"], [319, "id12"], [319, "id20"], [319, "id28"], [319, "id35"], [320, "forcing"], [321, "forcing"], [322, "forcing"], [323, "forcing"], [325, "forcing"], [326, "forcing"], [327, "forcing"], [328, "forcing"], [329, "forcing"], [329, "id11"], [330, "forcing"], [334, "forcing"], [334, "id3"], [334, "id8"], [335, "forcing"]], "time step and run duration": [[319, "time-step-and-run-duration"], [319, "id6"], [319, "id13"], [319, "id21"], [319, "id29"], [319, "id36"], [320, "time-step-and-run-duration"], [321, "time-step-and-run-duration"], [322, "time-step-and-run-duration"], [323, "time-step-and-run-duration"], [325, "time-step-and-run-duration"], [326, "time-step-and-run-duration"], [327, "time-step-and-run-duration"], [328, "time-step-and-run-duration"], [329, "time-step-and-run-duration"], [329, "id12"], [330, "time-step-and-run-duration"], [335, "time-step-and-run-duration"]], "cores": [[319, "cores"], [319, "id15"], [319, "id23"], [319, "id31"], [319, "id38"], [320, "cores"], [321, "cores"], [322, "cores"], [323, "cores"], [325, "cores"], [326, "cores"], [327, "cores"], [328, "cores"], [329, "cores"], [329, "id14"], [330, "cores"], [334, "cores"], [334, "id4"], [334, "id9"], [335, "cores"]], "thread": [[319, "thread"]], "correlated tracers 2-d": [[320, "correlated-tracers-2-d"]], "cosine bell": [[321, "cosine-bell"]], "divergent 2-d": [[322, "divergent-2-d"]], "inertial gravity wave": [[325, "inertial-gravity-wave"]], "manufactured solution": [[326, "manufactured-solution"]], "convergence": [[326, "convergence"]], "nondivergent 2-d": [[327, "nondivergent-2-d"]], "rotation 2-d": [[328, "rotation-2-d"]], "single column": [[329, "single-column"], [334, "single-column"]], "<Category of task>": [[330, "ocean-category-of-task"], [335, "seaice-category-of-task"]], "task_name": [[330, "task-name"], [335, "task-name"]], "Quick Start for Users": [[331, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[331, null]], "Loading polaris conda and spack environments": [[331, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[331, "e3sm-supported-machines"]], "Other machines": [[331, "other-machines"]], "Building supported E3SM components as standalone models": [[331, "building-supported-e3sm-components-as-standalone-models"]], "Setting up tasks": [[331, "setting-up-tasks"]], "Running a task": [[331, "running-a-task"]], "Running with a job script": [[331, "running-with-a-job-script"]], "Sea ice component": [[332, "sea-ice-component"]], "standard physics test": [[334, "standard-physics-test"]], "timestep and run duration": [[334, "timestep-and-run-duration"], [334, "id11"]], "visualization": [[334, "visualization"]], "exact restart test": [[334, "exact-restart-test"]]}, "indexentries": {"component (class in polaris)": [[20, "polaris.Component"]], "__init__() (polaris.component method)": [[20, "polaris.Component.__init__"]], "add_config() (polaris.component method)": [[21, "polaris.Component.add_config"]], "add_step() (polaris.component method)": [[22, "polaris.Component.add_step"]], "add_task() (polaris.component method)": [[23, "polaris.Component.add_task"]], "remove_step() (polaris.component method)": [[24, "polaris.Component.remove_step"]], "modelstep (class in polaris)": [[25, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[25, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[26, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[27, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[28, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[29, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[30, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[31, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[32, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[33, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[34, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[35, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[36, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[37, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[38, "polaris.Step"]], "__init__() (polaris.step method)": [[38, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[39, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[40, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[41, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[42, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[43, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[44, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[45, "polaris.Step.set_resources"]], "set_shared_config() (polaris.step method)": [[46, "polaris.Step.set_shared_config"]], "setup() (polaris.step method)": [[47, "polaris.Step.setup"]], "validate_baselines() (polaris.step method)": [[48, "polaris.Step.validate_baselines"]], "task (class in polaris)": [[49, "polaris.Task"]], "__init__() (polaris.task method)": [[49, "polaris.Task.__init__"]], "add_step() (polaris.task method)": [[50, "polaris.Task.add_step"]], "configure() (polaris.task method)": [[51, "polaris.Task.configure"]], "remove_step() (polaris.task method)": [[52, "polaris.Task.remove_step"]], "set_shared_config() (polaris.task method)": [[53, "polaris.Task.set_shared_config"]], "main() (in module polaris.__main__)": [[54, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[55, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[56, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[57, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[57, "polaris.config.PolarisConfigParser.__init__"]], "setup() (polaris.config.polarisconfigparser method)": [[58, "polaris.config.PolarisConfigParser.setup"]], "download() (in module polaris.io)": [[59, "polaris.io.download"]], "symlink() (in module polaris.io)": [[60, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[61, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[62, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[63, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[64, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[65, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[66, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[67, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[68, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[69, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[70, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[71, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[72, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[73, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[74, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[75, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[76, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[77, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[78, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[79, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[80, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[80, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[81, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[82, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[83, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[84, "polaris.model_step.make_graph_file"]], "area_for_field() (in module polaris.mpas)": [[85, "polaris.mpas.area_for_field"]], "time_index_from_xtime() (in module polaris.mpas)": [[86, "polaris.mpas.time_index_from_xtime"]], "ingest() (in module polaris.namelist)": [[87, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[88, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[89, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[90, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[91, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[92, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[93, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[94, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[95, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[96, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[99, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[100, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[101, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[102, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[103, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[104, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[105, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[106, "polaris.remap.MappingFileStep.src_from_proj"]], "complete_step_run() (in module polaris.run)": [[107, "polaris.run.complete_step_run"]], "load_dependencies() (in module polaris.run)": [[108, "polaris.run.load_dependencies"]], "run_single_step() (in module polaris.run.serial)": [[109, "polaris.run.serial.run_single_step"]], "run_tasks() (in module polaris.run.serial)": [[110, "polaris.run.serial.run_tasks"]], "setup_config() (in module polaris.run)": [[111, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[112, "polaris.run.unpickle_suite"]], "setup_task() (in module polaris.setup)": [[113, "polaris.setup.setup_task"]], "setup_tasks() (in module polaris.setup)": [[114, "polaris.setup.setup_tasks"]], "read() (in module polaris.streams)": [[115, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[116, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[117, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[118, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[119, "polaris.suite.setup_suite"]], "compare_variables() (in module polaris.validate)": [[120, "polaris.validate.compare_variables"]], "plot_global_lat_lon_field() (in module polaris.viz)": [[121, "polaris.viz.plot_global_lat_lon_field"]], "plot_global_mpas_field() (in module polaris.viz)": [[122, "polaris.viz.plot_global_mpas_field"]], "plot_horiz_field() (in module polaris.viz)": [[123, "polaris.viz.plot_horiz_field"]], "use_mplstyle() (in module polaris.viz)": [[124, "polaris.viz.use_mplstyle"]], "polarisyaml (class in polaris.yaml)": [[125, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[125, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[126, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[127, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[128, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[129, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[130, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[131, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[140, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[140, "polaris.ocean.Ocean.__init__"]], "convergenceanalysis (class in polaris.ocean.convergence)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis"]], "__init__() (polaris.ocean.convergence.convergenceanalysis method)": [[141, "polaris.ocean.convergence.ConvergenceAnalysis.__init__"]], "compute_error() (polaris.ocean.convergence.convergenceanalysis method)": [[142, "polaris.ocean.convergence.ConvergenceAnalysis.compute_error"]], "convergence_parameters() (polaris.ocean.convergence.convergenceanalysis method)": [[143, "polaris.ocean.convergence.ConvergenceAnalysis.convergence_parameters"]], "exact_solution() (polaris.ocean.convergence.convergenceanalysis method)": [[144, "polaris.ocean.convergence.ConvergenceAnalysis.exact_solution"]], "get_output_field() (polaris.ocean.convergence.convergenceanalysis method)": [[145, "polaris.ocean.convergence.ConvergenceAnalysis.get_output_field"]], "plot_convergence() (polaris.ocean.convergence.convergenceanalysis method)": [[146, "polaris.ocean.convergence.ConvergenceAnalysis.plot_convergence"]], "run() (polaris.ocean.convergence.convergenceanalysis method)": [[147, "polaris.ocean.convergence.ConvergenceAnalysis.run"]], "setup() (polaris.ocean.convergence.convergenceanalysis method)": [[148, "polaris.ocean.convergence.ConvergenceAnalysis.setup"]], "convergenceforward (class in polaris.ocean.convergence)": [[149, "polaris.ocean.convergence.ConvergenceForward"]], "__init__() (polaris.ocean.convergence.convergenceforward method)": [[149, "polaris.ocean.convergence.ConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.convergenceforward method)": [[150, "polaris.ocean.convergence.ConvergenceForward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.convergence.convergenceforward method)": [[151, "polaris.ocean.convergence.ConvergenceForward.dynamic_model_config"]], "sphericalconvergenceforward (class in polaris.ocean.convergence.spherical)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward"]], "__init__() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[152, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.__init__"]], "compute_cell_count() (polaris.ocean.convergence.spherical.sphericalconvergenceforward method)": [[153, "polaris.ocean.convergence.spherical.SphericalConvergenceForward.compute_cell_count"]], "add_spherical_base_mesh_step() (in module polaris.ocean.mesh.spherical)": [[154, "polaris.ocean.mesh.spherical.add_spherical_base_mesh_step"]], "oceanmodelstep (class in polaris.ocean.model)": [[155, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[155, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[156, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[157, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[158, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[159, "polaris.ocean.model.OceanModelStep.setup"]], "get_time_interval_string() (in module polaris.ocean.model)": [[160, "polaris.ocean.model.get_time_interval_string"]], "compute_rpe() (in module polaris.ocean.rpe)": [[161, "polaris.ocean.rpe.compute_rpe"]], "add_baroclinic_channel_tasks() (in module polaris.ocean.tasks.baroclinic_channel)": [[162, "polaris.ocean.tasks.baroclinic_channel.add_baroclinic_channel_tasks"]], "decomp (class in polaris.ocean.tasks.baroclinic_channel.decomp)": [[163, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.decomp.decomp method)": [[163, "polaris.ocean.tasks.baroclinic_channel.decomp.Decomp.__init__"]], "default (class in polaris.ocean.tasks.baroclinic_channel.default)": [[164, "polaris.ocean.tasks.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.default.default method)": [[164, "polaris.ocean.tasks.baroclinic_channel.default.Default.__init__"]], "forward (class in polaris.ocean.tasks.baroclinic_channel.forward)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[165, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[166, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.forward.forward method)": [[167, "polaris.ocean.tasks.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.baroclinic_channel.init)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[168, "polaris.ocean.tasks.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[169, "polaris.ocean.tasks.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.init.init method)": [[170, "polaris.ocean.tasks.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tasks.baroclinic_channel.restart)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart method)": [[171, "polaris.ocean.tasks.baroclinic_channel.restart.Restart.__init__"]], "restartstep (class in polaris.ocean.tasks.baroclinic_channel.restart.restart_step)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[172, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tasks.baroclinic_channel.restart.restart_step.restartstep method)": [[173, "polaris.ocean.tasks.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tasks.baroclinic_channel.rpe)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[174, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tasks.baroclinic_channel.rpe.rpe method)": [[175, "polaris.ocean.tasks.baroclinic_channel.rpe.Rpe.configure"]], "analysis (class in polaris.ocean.tasks.baroclinic_channel.rpe.analysis)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[176, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[177, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tasks.baroclinic_channel.rpe.analysis.analysis method)": [[178, "polaris.ocean.tasks.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tasks.baroclinic_channel.threads)": [[179, "polaris.ocean.tasks.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.threads.threads method)": [[179, "polaris.ocean.tasks.baroclinic_channel.threads.Threads.__init__"]], "validate (class in polaris.ocean.tasks.baroclinic_channel.validate)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[180, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.validate.validate method)": [[181, "polaris.ocean.tasks.baroclinic_channel.validate.Validate.run"]], "viz (class in polaris.ocean.tasks.baroclinic_channel.viz)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[182, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.baroclinic_channel.viz.viz method)": [[183, "polaris.ocean.tasks.baroclinic_channel.viz.Viz.run"]], "cosinebell (class in polaris.ocean.tasks.cosine_bell)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[184, "polaris.ocean.tasks.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tasks.cosine_bell.cosinebell method)": [[185, "polaris.ocean.tasks.cosine_bell.CosineBell.configure"]], "add_cosine_bell_tasks() (in module polaris.ocean.tasks.cosine_bell)": [[186, "polaris.ocean.tasks.cosine_bell.add_cosine_bell_tasks"]], "analysis (class in polaris.ocean.tasks.cosine_bell.analysis)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[187, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.cosine_bell.analysis.analysis method)": [[188, "polaris.ocean.tasks.cosine_bell.analysis.Analysis.exact_solution"]], "forward (class in polaris.ocean.tasks.cosine_bell.forward)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[189, "polaris.ocean.tasks.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[190, "polaris.ocean.tasks.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tasks.cosine_bell.forward.forward method)": [[191, "polaris.ocean.tasks.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tasks.cosine_bell.init)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tasks.cosine_bell.init.init method)": [[192, "polaris.ocean.tasks.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.init.init method)": [[193, "polaris.ocean.tasks.cosine_bell.init.Init.run"]], "cosine_bell() (in module polaris.ocean.tasks.cosine_bell.init)": [[194, "polaris.ocean.tasks.cosine_bell.init.cosine_bell"]], "viz (class in polaris.ocean.tasks.cosine_bell.viz)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[195, "polaris.ocean.tasks.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.cosine_bell.viz.viz method)": [[196, "polaris.ocean.tasks.cosine_bell.viz.Viz.run"]], "geostrophic (class in polaris.ocean.tasks.geostrophic)": [[197, "polaris.ocean.tasks.geostrophic.Geostrophic"]], "__init__() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[197, "polaris.ocean.tasks.geostrophic.Geostrophic.__init__"]], "configure() (polaris.ocean.tasks.geostrophic.geostrophic method)": [[198, "polaris.ocean.tasks.geostrophic.Geostrophic.configure"]], "add_geostrophic_tasks() (in module polaris.ocean.tasks.geostrophic)": [[199, "polaris.ocean.tasks.geostrophic.add_geostrophic_tasks"]], "analysis (class in polaris.ocean.tasks.geostrophic.analysis)": [[200, "polaris.ocean.tasks.geostrophic.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[200, "polaris.ocean.tasks.geostrophic.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[201, "polaris.ocean.tasks.geostrophic.analysis.Analysis.exact_solution"]], "get_output_field() (polaris.ocean.tasks.geostrophic.analysis.analysis method)": [[202, "polaris.ocean.tasks.geostrophic.analysis.Analysis.get_output_field"]], "forward (class in polaris.ocean.tasks.geostrophic.forward)": [[203, "polaris.ocean.tasks.geostrophic.forward.Forward"]], "__init__() (polaris.ocean.tasks.geostrophic.forward.forward method)": [[203, "polaris.ocean.tasks.geostrophic.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.geostrophic.init)": [[204, "polaris.ocean.tasks.geostrophic.init.Init"]], "__init__() (polaris.ocean.tasks.geostrophic.init.init method)": [[204, "polaris.ocean.tasks.geostrophic.init.Init.__init__"]], "run() (polaris.ocean.tasks.geostrophic.init.init method)": [[205, "polaris.ocean.tasks.geostrophic.init.Init.run"]], "viz (class in polaris.ocean.tasks.geostrophic.viz)": [[206, "polaris.ocean.tasks.geostrophic.viz.Viz"]], "__init__() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[206, "polaris.ocean.tasks.geostrophic.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.geostrophic.viz.viz method)": [[207, "polaris.ocean.tasks.geostrophic.viz.Viz.run"]], "inertialgravitywave (class in polaris.ocean.tasks.inertial_gravity_wave)": [[208, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.inertialgravitywave method)": [[208, "polaris.ocean.tasks.inertial_gravity_wave.InertialGravityWave.__init__"]], "add_inertial_gravity_wave_tasks() (in module polaris.ocean.tasks.inertial_gravity_wave)": [[209, "polaris.ocean.tasks.inertial_gravity_wave.add_inertial_gravity_wave_tasks"]], "analysis (class in polaris.ocean.tasks.inertial_gravity_wave.analysis)": [[210, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[210, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.inertial_gravity_wave.analysis.analysis method)": [[211, "polaris.ocean.tasks.inertial_gravity_wave.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.inertial_gravity_wave.exact_solution)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[212, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[213, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.inertial_gravity_wave.exact_solution.exactsolution method)": [[214, "polaris.ocean.tasks.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.inertial_gravity_wave.forward)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[215, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.inertial_gravity_wave.forward.forward method)": [[216, "polaris.ocean.tasks.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.inertial_gravity_wave.init)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[217, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.init.init method)": [[218, "polaris.ocean.tasks.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tasks.inertial_gravity_wave.viz)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[219, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.inertial_gravity_wave.viz.viz method)": [[220, "polaris.ocean.tasks.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tasks.manufactured_solution)": [[221, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.manufacturedsolution method)": [[221, "polaris.ocean.tasks.manufactured_solution.ManufacturedSolution.__init__"]], "add_manufactured_solution_tasks() (in module polaris.ocean.tasks.manufactured_solution)": [[222, "polaris.ocean.tasks.manufactured_solution.add_manufactured_solution_tasks"]], "analysis (class in polaris.ocean.tasks.manufactured_solution.analysis)": [[223, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[223, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.__init__"]], "exact_solution() (polaris.ocean.tasks.manufactured_solution.analysis.analysis method)": [[224, "polaris.ocean.tasks.manufactured_solution.analysis.Analysis.exact_solution"]], "exactsolution (class in polaris.ocean.tasks.manufactured_solution.exact_solution)": [[225, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[225, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[226, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tasks.manufactured_solution.exact_solution.exactsolution method)": [[227, "polaris.ocean.tasks.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tasks.manufactured_solution.forward)": [[228, "polaris.ocean.tasks.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[228, "polaris.ocean.tasks.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tasks.manufactured_solution.forward.forward method)": [[229, "polaris.ocean.tasks.manufactured_solution.forward.Forward.compute_cell_count"]], "init (class in polaris.ocean.tasks.manufactured_solution.init)": [[230, "polaris.ocean.tasks.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[230, "polaris.ocean.tasks.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.init.init method)": [[231, "polaris.ocean.tasks.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tasks.manufactured_solution.viz)": [[232, "polaris.ocean.tasks.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[232, "polaris.ocean.tasks.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.manufactured_solution.viz.viz method)": [[233, "polaris.ocean.tasks.manufactured_solution.viz.Viz.run"]], "add_single_column_tasks() (in module polaris.ocean.tasks.single_column)": [[234, "polaris.ocean.tasks.single_column.add_single_column_tasks"]], "cvmix (class in polaris.ocean.tasks.single_column.cvmix)": [[235, "polaris.ocean.tasks.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tasks.single_column.cvmix.cvmix method)": [[235, "polaris.ocean.tasks.single_column.cvmix.CVMix.__init__"]], "forward (class in polaris.ocean.tasks.single_column.forward)": [[236, "polaris.ocean.tasks.single_column.forward.Forward"]], "__init__() (polaris.ocean.tasks.single_column.forward.forward method)": [[236, "polaris.ocean.tasks.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tasks.single_column.ideal_age)": [[237, "polaris.ocean.tasks.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tasks.single_column.ideal_age.idealage method)": [[237, "polaris.ocean.tasks.single_column.ideal_age.IdealAge.__init__"]], "init (class in polaris.ocean.tasks.single_column.init)": [[238, "polaris.ocean.tasks.single_column.init.Init"]], "__init__() (polaris.ocean.tasks.single_column.init.init method)": [[238, "polaris.ocean.tasks.single_column.init.Init.__init__"]], "run() (polaris.ocean.tasks.single_column.init.init method)": [[239, "polaris.ocean.tasks.single_column.init.Init.run"]], "viz (class in polaris.ocean.tasks.single_column.viz)": [[240, "polaris.ocean.tasks.single_column.viz.Viz"]], "__init__() (polaris.ocean.tasks.single_column.viz.viz method)": [[240, "polaris.ocean.tasks.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.single_column.viz.viz method)": [[241, "polaris.ocean.tasks.single_column.viz.Viz.run"]], "spheretransport (class in polaris.ocean.tasks.sphere_transport)": [[242, "polaris.ocean.tasks.sphere_transport.SphereTransport"]], "__init__() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[242, "polaris.ocean.tasks.sphere_transport.SphereTransport.__init__"]], "configure() (polaris.ocean.tasks.sphere_transport.spheretransport method)": [[243, "polaris.ocean.tasks.sphere_transport.SphereTransport.configure"]], "add_sphere_transport_tasks() (in module polaris.ocean.tasks.sphere_transport)": [[244, "polaris.ocean.tasks.sphere_transport.add_sphere_transport_tasks"]], "analysis (class in polaris.ocean.tasks.sphere_transport.analysis)": [[245, "polaris.ocean.tasks.sphere_transport.analysis.Analysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[245, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.__init__"]], "convergence_parameters() (polaris.ocean.tasks.sphere_transport.analysis.analysis method)": [[246, "polaris.ocean.tasks.sphere_transport.analysis.Analysis.convergence_parameters"]], "filamentanalysis (class in polaris.ocean.tasks.sphere_transport.filament_analysis)": [[247, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[247, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.filament_analysis.filamentanalysis method)": [[248, "polaris.ocean.tasks.sphere_transport.filament_analysis.FilamentAnalysis.run"]], "forward (class in polaris.ocean.tasks.sphere_transport.forward)": [[249, "polaris.ocean.tasks.sphere_transport.forward.Forward"]], "__init__() (polaris.ocean.tasks.sphere_transport.forward.forward method)": [[249, "polaris.ocean.tasks.sphere_transport.forward.Forward.__init__"]], "init (class in polaris.ocean.tasks.sphere_transport.init)": [[250, "polaris.ocean.tasks.sphere_transport.init.Init"]], "__init__() (polaris.ocean.tasks.sphere_transport.init.init method)": [[250, "polaris.ocean.tasks.sphere_transport.init.Init.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.init.init method)": [[251, "polaris.ocean.tasks.sphere_transport.init.Init.run"]], "mixinganalysis (class in polaris.ocean.tasks.sphere_transport.mixing_analysis)": [[252, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis"]], "__init__() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[252, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.mixing_analysis.mixinganalysis method)": [[253, "polaris.ocean.tasks.sphere_transport.mixing_analysis.MixingAnalysis.run"]], "viz (class in polaris.ocean.tasks.sphere_transport.viz)": [[254, "polaris.ocean.tasks.sphere_transport.viz.Viz"]], "__init__() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[254, "polaris.ocean.tasks.sphere_transport.viz.Viz.__init__"]], "run() (polaris.ocean.tasks.sphere_transport.viz.viz method)": [[255, "polaris.ocean.tasks.sphere_transport.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[256, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[257, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[258, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[259, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[260, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[261, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[262, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[263, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[264, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[265, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[291, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[291, "polaris.seaice.SeaIce.__init__"]], "add_single_column_tasks() (in module polaris.seaice.tasks.single_column)": [[292, "polaris.seaice.tasks.single_column.add_single_column_tasks"]], "exactrestart (class in polaris.seaice.tasks.single_column.exact_restart)": [[293, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.exactrestart method)": [[293, "polaris.seaice.tasks.single_column.exact_restart.ExactRestart.__init__"]], "validate (class in polaris.seaice.tasks.single_column.exact_restart.validate)": [[294, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate"]], "__init__() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[294, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.__init__"]], "run() (polaris.seaice.tasks.single_column.exact_restart.validate.validate method)": [[295, "polaris.seaice.tasks.single_column.exact_restart.validate.Validate.run"]], "forward (class in polaris.seaice.tasks.single_column.forward)": [[296, "polaris.seaice.tasks.single_column.forward.Forward"]], "__init__() (polaris.seaice.tasks.single_column.forward.forward method)": [[296, "polaris.seaice.tasks.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tasks.single_column.standard_physics)": [[297, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.standardphysics method)": [[297, "polaris.seaice.tasks.single_column.standard_physics.StandardPhysics.__init__"]], "viz (class in polaris.seaice.tasks.single_column.standard_physics.viz)": [[298, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[298, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tasks.single_column.standard_physics.viz.viz method)": [[299, "polaris.seaice.tasks.single_column.standard_physics.viz.Viz.run"]]}})