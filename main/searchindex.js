Search.setIndex({"docnames": ["design_docs/index", "design_docs/template", "developers_guide/api", "developers_guide/building_docs", "developers_guide/command_line", "developers_guide/deploying_spack", "developers_guide/docs", "developers_guide/framework/commands", "developers_guide/framework/config", "developers_guide/framework/index", "developers_guide/framework/io", "developers_guide/framework/logging", "developers_guide/framework/mesh", "developers_guide/framework/model", "developers_guide/framework/provenance", "developers_guide/framework/remapping", "developers_guide/framework/validation", "developers_guide/framework/visualization", "developers_guide/generated/polaris.Component", "developers_guide/generated/polaris.Component.add_test_group", "developers_guide/generated/polaris.ModelStep", "developers_guide/generated/polaris.ModelStep.add_model_config_options", "developers_guide/generated/polaris.ModelStep.add_namelist_file", "developers_guide/generated/polaris.ModelStep.add_streams_file", "developers_guide/generated/polaris.ModelStep.add_yaml_file", "developers_guide/generated/polaris.ModelStep.dynamic_model_config", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist", "developers_guide/generated/polaris.ModelStep.partition", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs", "developers_guide/generated/polaris.ModelStep.runtime_setup", "developers_guide/generated/polaris.ModelStep.set_model_resources", "developers_guide/generated/polaris.ModelStep.setup", "developers_guide/generated/polaris.ModelStep.update_namelist_pio", "developers_guide/generated/polaris.Step", "developers_guide/generated/polaris.Step.add_dependency", "developers_guide/generated/polaris.Step.add_input_file", "developers_guide/generated/polaris.Step.add_output_file", "developers_guide/generated/polaris.Step.constrain_resources", "developers_guide/generated/polaris.Step.run", "developers_guide/generated/polaris.Step.runtime_setup", "developers_guide/generated/polaris.Step.set_resources", "developers_guide/generated/polaris.Step.setup", "developers_guide/generated/polaris.TestCase", "developers_guide/generated/polaris.TestCase.add_step", "developers_guide/generated/polaris.TestCase.configure", "developers_guide/generated/polaris.TestCase.validate", "developers_guide/generated/polaris.TestGroup", "developers_guide/generated/polaris.TestGroup.add_test_case", "developers_guide/generated/polaris.__main__.main", "developers_guide/generated/polaris.cache.update_cache", "developers_guide/generated/polaris.components.get_components", "developers_guide/generated/polaris.config.PolarisConfigParser", "developers_guide/generated/polaris.io.download", "developers_guide/generated/polaris.io.imp_res", "developers_guide/generated/polaris.io.symlink", "developers_guide/generated/polaris.job.get_slurm_options", "developers_guide/generated/polaris.job.write_job_script", "developers_guide/generated/polaris.list.list_cases", "developers_guide/generated/polaris.list.list_machines", "developers_guide/generated/polaris.list.list_suites", "developers_guide/generated/polaris.logging.log_method_call", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup", "developers_guide/generated/polaris.model_step.make_graph_file", "developers_guide/generated/polaris.namelist.ingest", "developers_guide/generated/polaris.namelist.parse_replacements", "developers_guide/generated/polaris.namelist.replace", "developers_guide/generated/polaris.namelist.write", "developers_guide/generated/polaris.parallel.get_available_parallel_resources", "developers_guide/generated/polaris.parallel.get_parallel_command", "developers_guide/generated/polaris.parallel.run_command", "developers_guide/generated/polaris.parallel.set_cores_per_node", "developers_guide/generated/polaris.provenance.write", "developers_guide/generated/polaris.remap.MappingFileStep", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj", "developers_guide/generated/polaris.run.load_dependencies", "developers_guide/generated/polaris.run.pickle_step_after_run", "developers_guide/generated/polaris.run.serial.run_single_step", "developers_guide/generated/polaris.run.serial.run_tests", "developers_guide/generated/polaris.run.setup_config", "developers_guide/generated/polaris.run.unpickle_suite", "developers_guide/generated/polaris.setup.setup_case", "developers_guide/generated/polaris.setup.setup_cases", "developers_guide/generated/polaris.streams.read", "developers_guide/generated/polaris.streams.update_defaults", "developers_guide/generated/polaris.streams.update_tree", "developers_guide/generated/polaris.streams.write", "developers_guide/generated/polaris.suite.setup_suite", "developers_guide/generated/polaris.validate.compare_timers", "developers_guide/generated/polaris.validate.compare_variables", "developers_guide/generated/polaris.viz.globe.plot_global", "developers_guide/generated/polaris.viz.plot_horiz_field", "developers_guide/generated/polaris.yaml.PolarisYaml", "developers_guide/generated/polaris.yaml.PolarisYaml.read", "developers_guide/generated/polaris.yaml.PolarisYaml.update", "developers_guide/generated/polaris.yaml.PolarisYaml.write", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams", "developers_guide/machines/anvil", "developers_guide/machines/chicoma", "developers_guide/machines/chrysalis", "developers_guide/machines/compy", "developers_guide/machines/index", "developers_guide/machines/perlmutter", "developers_guide/ocean/api", "developers_guide/ocean/framework", "developers_guide/ocean/generated/polaris.ocean.Ocean", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp.Decomp", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.Restart", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.Restart.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads.Threads", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads.Threads.validate", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.ManufacturedSolution", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.init.Init", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.init.Init.run", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "developers_guide/ocean/index", "developers_guide/ocean/models/index", "developers_guide/ocean/models/mpas_ocean", "developers_guide/ocean/test_groups/baroclinic_channel", "developers_guide/ocean/test_groups/global_convergence", "developers_guide/ocean/test_groups/index", "developers_guide/ocean/test_groups/inertial_gravity_wave", "developers_guide/ocean/test_groups/manufactured_solution", "developers_guide/ocean/test_groups/single_column", "developers_guide/organization/components", "developers_guide/organization/directories", "developers_guide/organization/index", "developers_guide/organization/steps", "developers_guide/organization/suites", "developers_guide/organization/test_cases", "developers_guide/organization/test_groups", "developers_guide/overview", "developers_guide/quick_start", "developers_guide/seaice/api", "developers_guide/seaice/framework", "developers_guide/seaice/generated/polaris.seaice.SeaIce", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.SingleColumn", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.exact_restart.ExactRestart", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.forward.Forward", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.StandardPhysics", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.viz.Viz", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.viz.Viz.run", "developers_guide/seaice/index", "developers_guide/seaice/models/index", "developers_guide/seaice/models/mpas_seaice", "developers_guide/seaice/test_groups/index", "developers_guide/seaice/test_groups/single_column", "developers_guide/troubleshooting", "glossary", "index", "tutorials/dev_add_test_group", "users_guide/config_files", "users_guide/machines/anvil", "users_guide/machines/chicoma", "users_guide/machines/chrysalis", "users_guide/machines/compy", "users_guide/machines/index", "users_guide/machines/perlmutter", "users_guide/ocean/framework/index", "users_guide/ocean/framework/vertical", "users_guide/ocean/index", "users_guide/ocean/suites", "users_guide/ocean/test_groups/baroclinic_channel", "users_guide/ocean/test_groups/global_convergence", "users_guide/ocean/test_groups/index", "users_guide/ocean/test_groups/inertial_gravity_wave", "users_guide/ocean/test_groups/manufactured_solution", "users_guide/ocean/test_groups/single_column", "users_guide/ocean/test_groups/template", "users_guide/quick_start", "users_guide/seaice/index", "users_guide/seaice/test_groups/index", "users_guide/seaice/test_groups/single_column", "users_guide/seaice/test_groups/template", "users_guide/test_cases", "users_guide/test_suites"], "filenames": ["design_docs/index.md", "design_docs/template.md", "developers_guide/api.md", "developers_guide/building_docs.md", "developers_guide/command_line.md", "developers_guide/deploying_spack.md", "developers_guide/docs.md", "developers_guide/framework/commands.md", "developers_guide/framework/config.md", "developers_guide/framework/index.md", "developers_guide/framework/io.md", "developers_guide/framework/logging.md", "developers_guide/framework/mesh.md", "developers_guide/framework/model.md", "developers_guide/framework/provenance.md", "developers_guide/framework/remapping.md", "developers_guide/framework/validation.md", "developers_guide/framework/visualization.md", "developers_guide/generated/polaris.Component.rst", "developers_guide/generated/polaris.Component.add_test_group.rst", "developers_guide/generated/polaris.ModelStep.rst", "developers_guide/generated/polaris.ModelStep.add_model_config_options.rst", "developers_guide/generated/polaris.ModelStep.add_namelist_file.rst", "developers_guide/generated/polaris.ModelStep.add_streams_file.rst", "developers_guide/generated/polaris.ModelStep.add_yaml_file.rst", "developers_guide/generated/polaris.ModelStep.dynamic_model_config.rst", "developers_guide/generated/polaris.ModelStep.map_yaml_to_namelist.rst", "developers_guide/generated/polaris.ModelStep.partition.rst", "developers_guide/generated/polaris.ModelStep.process_inputs_and_outputs.rst", "developers_guide/generated/polaris.ModelStep.runtime_setup.rst", "developers_guide/generated/polaris.ModelStep.set_model_resources.rst", "developers_guide/generated/polaris.ModelStep.setup.rst", "developers_guide/generated/polaris.ModelStep.update_namelist_pio.rst", "developers_guide/generated/polaris.Step.rst", "developers_guide/generated/polaris.Step.add_dependency.rst", "developers_guide/generated/polaris.Step.add_input_file.rst", "developers_guide/generated/polaris.Step.add_output_file.rst", "developers_guide/generated/polaris.Step.constrain_resources.rst", "developers_guide/generated/polaris.Step.run.rst", "developers_guide/generated/polaris.Step.runtime_setup.rst", "developers_guide/generated/polaris.Step.set_resources.rst", "developers_guide/generated/polaris.Step.setup.rst", "developers_guide/generated/polaris.TestCase.rst", "developers_guide/generated/polaris.TestCase.add_step.rst", "developers_guide/generated/polaris.TestCase.configure.rst", "developers_guide/generated/polaris.TestCase.validate.rst", "developers_guide/generated/polaris.TestGroup.rst", "developers_guide/generated/polaris.TestGroup.add_test_case.rst", "developers_guide/generated/polaris.__main__.main.rst", "developers_guide/generated/polaris.cache.update_cache.rst", "developers_guide/generated/polaris.components.get_components.rst", "developers_guide/generated/polaris.config.PolarisConfigParser.rst", "developers_guide/generated/polaris.io.download.rst", "developers_guide/generated/polaris.io.imp_res.rst", "developers_guide/generated/polaris.io.symlink.rst", "developers_guide/generated/polaris.job.get_slurm_options.rst", "developers_guide/generated/polaris.job.write_job_script.rst", "developers_guide/generated/polaris.list.list_cases.rst", "developers_guide/generated/polaris.list.list_machines.rst", "developers_guide/generated/polaris.list.list_suites.rst", "developers_guide/generated/polaris.logging.log_method_call.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_cell_width.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.get_subdivisions.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.run.rst", "developers_guide/generated/polaris.mesh.IcosahedralMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.run.rst", "developers_guide/generated/polaris.mesh.QuasiUniformSphericalMeshStep.setup.rst", "developers_guide/generated/polaris.mesh.planar.compute_planar_hex_nx_ny.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.run.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width.rst", "developers_guide/generated/polaris.mesh.spherical.SphericalBaseStep.setup.rst", "developers_guide/generated/polaris.model_step.make_graph_file.rst", "developers_guide/generated/polaris.namelist.ingest.rst", "developers_guide/generated/polaris.namelist.parse_replacements.rst", "developers_guide/generated/polaris.namelist.replace.rst", "developers_guide/generated/polaris.namelist.write.rst", "developers_guide/generated/polaris.parallel.get_available_parallel_resources.rst", "developers_guide/generated/polaris.parallel.get_parallel_command.rst", "developers_guide/generated/polaris.parallel.run_command.rst", "developers_guide/generated/polaris.parallel.set_cores_per_node.rst", "developers_guide/generated/polaris.provenance.write.rst", "developers_guide/generated/polaris.remap.MappingFileStep.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_points.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_from_proj.rst", "developers_guide/generated/polaris.remap.MappingFileStep.dst_global_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.get_remapper.rst", "developers_guide/generated/polaris.remap.MappingFileStep.runtime_setup.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_lon_lat.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_mpas.rst", "developers_guide/generated/polaris.remap.MappingFileStep.src_from_proj.rst", "developers_guide/generated/polaris.run.load_dependencies.rst", "developers_guide/generated/polaris.run.pickle_step_after_run.rst", "developers_guide/generated/polaris.run.serial.run_single_step.rst", "developers_guide/generated/polaris.run.serial.run_tests.rst", "developers_guide/generated/polaris.run.setup_config.rst", "developers_guide/generated/polaris.run.unpickle_suite.rst", "developers_guide/generated/polaris.setup.setup_case.rst", "developers_guide/generated/polaris.setup.setup_cases.rst", "developers_guide/generated/polaris.streams.read.rst", "developers_guide/generated/polaris.streams.update_defaults.rst", "developers_guide/generated/polaris.streams.update_tree.rst", "developers_guide/generated/polaris.streams.write.rst", "developers_guide/generated/polaris.suite.setup_suite.rst", "developers_guide/generated/polaris.validate.compare_timers.rst", "developers_guide/generated/polaris.validate.compare_variables.rst", "developers_guide/generated/polaris.viz.globe.plot_global.rst", "developers_guide/generated/polaris.viz.plot_horiz_field.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.read.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.update.rst", "developers_guide/generated/polaris.yaml.PolarisYaml.write.rst", "developers_guide/generated/polaris.yaml.main_mpas_to_yaml.rst", "developers_guide/generated/polaris.yaml.mpas_namelist_and_streams_to_yaml.rst", "developers_guide/generated/polaris.yaml.yaml_to_mpas_streams.rst", "developers_guide/machines/anvil.md", "developers_guide/machines/chicoma.md", "developers_guide/machines/chrysalis.md", "developers_guide/machines/compy.md", "developers_guide/machines/index.md", "developers_guide/machines/perlmutter.md", "developers_guide/ocean/api.md", "developers_guide/ocean/framework.md", "developers_guide/ocean/generated/polaris.ocean.Ocean.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.constrain_resources.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.map_yaml_to_namelist.rst", "developers_guide/ocean/generated/polaris.ocean.model.OceanModelStep.setup.rst", "developers_guide/ocean/generated/polaris.ocean.rpe.compute_rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp.Decomp.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.default.Default.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.init.Init.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.Restart.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.Restart.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads.Threads.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.threads.Threads.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.baroclinic_channel.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.GlobalConvergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.rst", "developers_guide/ocean/generated/polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.ManufacturedSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.analysis.Analysis.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.manufactured_solution.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.SingleColumn.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.cvmix.CVMix.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.forward.Forward.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.ideal_age.IdealAge.validate.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.init.Init.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.init.Init.run.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.rst", "developers_guide/ocean/generated/polaris.ocean.tests.single_column.viz.Viz.run.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.generate_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.grid_1d.write_1d_grid.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.init_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_bottom_depth.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.partial_cells.alter_ssh.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_min_max_level_cell.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zlevel.init_z_level_vertical_coord.rst", "developers_guide/ocean/generated/polaris.ocean.vertical.zstar.init_z_star_vertical_coord.rst", "developers_guide/ocean/index.md", "developers_guide/ocean/models/index.md", "developers_guide/ocean/models/mpas_ocean.md", "developers_guide/ocean/test_groups/baroclinic_channel.md", "developers_guide/ocean/test_groups/global_convergence.md", "developers_guide/ocean/test_groups/index.md", "developers_guide/ocean/test_groups/inertial_gravity_wave.md", "developers_guide/ocean/test_groups/manufactured_solution.md", "developers_guide/ocean/test_groups/single_column.md", "developers_guide/organization/components.md", "developers_guide/organization/directories.md", "developers_guide/organization/index.md", "developers_guide/organization/steps.md", "developers_guide/organization/suites.md", "developers_guide/organization/test_cases.md", "developers_guide/organization/test_groups.md", "developers_guide/overview.md", "developers_guide/quick_start.md", "developers_guide/seaice/api.md", "developers_guide/seaice/framework.md", "developers_guide/seaice/generated/polaris.seaice.SeaIce.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.SingleColumn.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.exact_restart.ExactRestart.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.forward.Forward.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.StandardPhysics.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.viz.Viz.rst", "developers_guide/seaice/generated/polaris.seaice.tests.single_column.standard_physics.viz.Viz.run.rst", "developers_guide/seaice/index.md", "developers_guide/seaice/models/index.md", "developers_guide/seaice/models/mpas_seaice.md", "developers_guide/seaice/test_groups/index.md", "developers_guide/seaice/test_groups/single_column.md", "developers_guide/troubleshooting.md", "glossary.md", "index.md", "tutorials/dev_add_test_group.md", "users_guide/config_files.md", "users_guide/machines/anvil.md", "users_guide/machines/chicoma.md", "users_guide/machines/chrysalis.md", "users_guide/machines/compy.md", "users_guide/machines/index.md", "users_guide/machines/perlmutter.md", "users_guide/ocean/framework/index.md", "users_guide/ocean/framework/vertical.md", "users_guide/ocean/index.md", "users_guide/ocean/suites.md", "users_guide/ocean/test_groups/baroclinic_channel.md", "users_guide/ocean/test_groups/global_convergence.md", "users_guide/ocean/test_groups/index.md", "users_guide/ocean/test_groups/inertial_gravity_wave.md", "users_guide/ocean/test_groups/manufactured_solution.md", "users_guide/ocean/test_groups/single_column.md", "users_guide/ocean/test_groups/template.md", "users_guide/quick_start.md", "users_guide/seaice/index.md", "users_guide/seaice/test_groups/index.md", "users_guide/seaice/test_groups/single_column.md", "users_guide/seaice/test_groups/template.md", "users_guide/test_cases.md", "users_guide/test_suites.md"], "titles": ["Design Documents", "Template", "API reference", "Building the Documentation", "Command-line interface", "Deploying a new spack environment", "Documentation", "Modules for polaris commands", "Config files", "Framework", "IO", "Logging", "Mesh", "Model", "Provenance", "Remapping", "Validation", "Visualization", "polaris.Component", "polaris.Component.add_test_group", "polaris.ModelStep", "polaris.ModelStep.add_model_config_options", "polaris.ModelStep.add_namelist_file", "polaris.ModelStep.add_streams_file", "polaris.ModelStep.add_yaml_file", "polaris.ModelStep.dynamic_model_config", "polaris.ModelStep.map_yaml_to_namelist", "polaris.ModelStep.partition", "polaris.ModelStep.process_inputs_and_outputs", "polaris.ModelStep.runtime_setup", "polaris.ModelStep.set_model_resources", "polaris.ModelStep.setup", "polaris.ModelStep.update_namelist_pio", "polaris.Step", "polaris.Step.add_dependency", "polaris.Step.add_input_file", "polaris.Step.add_output_file", "polaris.Step.constrain_resources", "polaris.Step.run", "polaris.Step.runtime_setup", "polaris.Step.set_resources", "polaris.Step.setup", "polaris.TestCase", "polaris.TestCase.add_step", "polaris.TestCase.configure", "polaris.TestCase.validate", "polaris.TestGroup", "polaris.TestGroup.add_test_case", "polaris.__main__.main", "polaris.cache.update_cache", "polaris.components.get_components", "polaris.config.PolarisConfigParser", "polaris.io.download", "polaris.io.imp_res", "polaris.io.symlink", "polaris.job.get_slurm_options", "polaris.job.write_job_script", "polaris.list.list_cases", "polaris.list.list_machines", "polaris.list.list_suites", "polaris.logging.log_method_call", "polaris.mesh.IcosahedralMeshStep", "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon", "polaris.mesh.IcosahedralMeshStep.get_cell_width", "polaris.mesh.IcosahedralMeshStep.get_subdivisions", "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh", "polaris.mesh.IcosahedralMeshStep.run", "polaris.mesh.IcosahedralMeshStep.setup", "polaris.mesh.QuasiUniformSphericalMeshStep", "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon", "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh", "polaris.mesh.QuasiUniformSphericalMeshStep.run", "polaris.mesh.QuasiUniformSphericalMeshStep.setup", "polaris.mesh.planar.compute_planar_hex_nx_ny", "polaris.mesh.spherical.SphericalBaseStep", "polaris.mesh.spherical.SphericalBaseStep.run", "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width", "polaris.mesh.spherical.SphericalBaseStep.setup", "polaris.model_step.make_graph_file", "polaris.namelist.ingest", "polaris.namelist.parse_replacements", "polaris.namelist.replace", "polaris.namelist.write", "polaris.parallel.get_available_parallel_resources", "polaris.parallel.get_parallel_command", "polaris.parallel.run_command", "polaris.parallel.set_cores_per_node", "polaris.provenance.write", "polaris.remap.MappingFileStep", "polaris.remap.MappingFileStep.dst_from_lon_lat", "polaris.remap.MappingFileStep.dst_from_mpas", "polaris.remap.MappingFileStep.dst_from_points", "polaris.remap.MappingFileStep.dst_from_proj", "polaris.remap.MappingFileStep.dst_global_lon_lat", "polaris.remap.MappingFileStep.get_remapper", "polaris.remap.MappingFileStep.runtime_setup", "polaris.remap.MappingFileStep.src_from_lon_lat", "polaris.remap.MappingFileStep.src_from_mpas", "polaris.remap.MappingFileStep.src_from_proj", "polaris.run.load_dependencies", "polaris.run.pickle_step_after_run", "polaris.run.serial.run_single_step", "polaris.run.serial.run_tests", "polaris.run.setup_config", "polaris.run.unpickle_suite", "polaris.setup.setup_case", "polaris.setup.setup_cases", "polaris.streams.read", "polaris.streams.update_defaults", "polaris.streams.update_tree", "polaris.streams.write", "polaris.suite.setup_suite", "polaris.validate.compare_timers", "polaris.validate.compare_variables", "polaris.viz.globe.plot_global", "polaris.viz.plot_horiz_field", "polaris.yaml.PolarisYaml", "polaris.yaml.PolarisYaml.read", "polaris.yaml.PolarisYaml.update", "polaris.yaml.PolarisYaml.write", "polaris.yaml.main_mpas_to_yaml", "polaris.yaml.mpas_namelist_and_streams_to_yaml", "polaris.yaml.yaml_to_mpas_streams", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "ocean", "Ocean framework", "polaris.ocean.Ocean", "polaris.ocean.model.OceanModelStep", "polaris.ocean.model.OceanModelStep.compute_cell_count", "polaris.ocean.model.OceanModelStep.constrain_resources", "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist", "polaris.ocean.model.OceanModelStep.setup", "polaris.ocean.rpe.compute_rpe", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase", "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate", "polaris.ocean.tests.baroclinic_channel.decomp.Decomp", "polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate", "polaris.ocean.tests.baroclinic_channel.default.Default", "polaris.ocean.tests.baroclinic_channel.default.Default.validate", "polaris.ocean.tests.baroclinic_channel.forward.Forward", "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count", "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.init.Init", "polaris.ocean.tests.baroclinic_channel.init.Init.run", "polaris.ocean.tests.baroclinic_channel.init.Init.setup", "polaris.ocean.tests.baroclinic_channel.restart.Restart", "polaris.ocean.tests.baroclinic_channel.restart.Restart.validate", "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep", "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config", "polaris.ocean.tests.baroclinic_channel.rpe.Rpe", "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure", "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate", "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis", "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run", "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup", "polaris.ocean.tests.baroclinic_channel.threads.Threads", "polaris.ocean.tests.baroclinic_channel.threads.Threads.validate", "polaris.ocean.tests.baroclinic_channel.viz.Viz", "polaris.ocean.tests.baroclinic_channel.viz.Viz.run", "polaris.ocean.tests.global_convergence.GlobalConvergence", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure", "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse", "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count", "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init", "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz", "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap", "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run", "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis", "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence", "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count", "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config", "polaris.ocean.tests.inertial_gravity_wave.init.Init", "polaris.ocean.tests.inertial_gravity_wave.init.Init.run", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz", "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run", "polaris.ocean.tests.manufactured_solution.ManufacturedSolution", "polaris.ocean.tests.manufactured_solution.analysis.Analysis", "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run", "polaris.ocean.tests.manufactured_solution.convergence.Convergence", "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate", "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution", "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity", "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh", "polaris.ocean.tests.manufactured_solution.forward.Forward", "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count", "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config", "polaris.ocean.tests.manufactured_solution.init.Init", "polaris.ocean.tests.manufactured_solution.init.Init.run", "polaris.ocean.tests.manufactured_solution.viz.Viz", "polaris.ocean.tests.manufactured_solution.viz.Viz.run", "polaris.ocean.tests.single_column.SingleColumn", "polaris.ocean.tests.single_column.cvmix.CVMix", "polaris.ocean.tests.single_column.cvmix.CVMix.validate", "polaris.ocean.tests.single_column.forward.Forward", "polaris.ocean.tests.single_column.ideal_age.IdealAge", "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate", "polaris.ocean.tests.single_column.init.Init", "polaris.ocean.tests.single_column.init.Init.run", "polaris.ocean.tests.single_column.viz.Viz", "polaris.ocean.tests.single_column.viz.Viz.run", "polaris.ocean.vertical.grid_1d.generate_1d_grid", "polaris.ocean.vertical.grid_1d.write_1d_grid", "polaris.ocean.vertical.init_vertical_coord", "polaris.ocean.vertical.partial_cells.alter_bottom_depth", "polaris.ocean.vertical.partial_cells.alter_ssh", "polaris.ocean.vertical.zlevel.compute_min_max_level_cell", "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness", "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness", "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord", "polaris.ocean.vertical.zstar.init_z_star_vertical_coord", "Ocean component", "Models", "MPAS-Ocean", "baroclinic_channel", "global_convergence", "Test groups", "inertial_gravity_wave", "manufactured_solution", "single_column", "Components", "Directory structure", "Organization of Tests", "Steps", "Test Suites", "Test cases", "Test Groups", "Overview", "Quick Start for Developers", "seaice", "Seaice framework", "polaris.seaice.SeaIce", "polaris.seaice.tests.single_column.SingleColumn", "polaris.seaice.tests.single_column.exact_restart.ExactRestart", "polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate", "polaris.seaice.tests.single_column.forward.Forward", "polaris.seaice.tests.single_column.standard_physics.StandardPhysics", "polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate", "polaris.seaice.tests.single_column.standard_physics.viz.Viz", "polaris.seaice.tests.single_column.standard_physics.viz.Viz.run", "Seaice component", "Models", "MPAS-Seaice", "Test groups", "single_column", "Troubleshooting", "Glossary", "Polaris", "Developer Tutorial: Adding a new test group", "Config Files", "Anvil", "Chicoma", "Chrysalis", "CompyMcNodeFace", "Machines", "Perlmutter", "Framework", "Vertical coordinate", "Ocean component", "Test suites", "baroclinic_channel", "global_convergence", "Test groups", "inertial gravity wave", "manufactured_solution", "single_column", "test_group_name", "Quick Start for Users", "Sea ice component", "Test groups", "single_column", "test_group_name", "Test Cases", "Test Suites"], "terms": {"templat": [0, 4, 5, 6, 23, 24, 25, 107, 117, 121, 127, 147, 154, 267, 268, 269], "date": [1, 4, 49, 231, 248, 260, 269], "yyyi": 1, "mm": 1, "dd": 1, "contributor": 1, "The": [1, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 39, 41, 42, 43, 46, 47, 49, 51, 52, 54, 56, 57, 60, 61, 62, 63, 64, 65, 68, 69, 73, 74, 78, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 121, 122, 127, 130, 131, 132, 133, 139, 141, 143, 145, 146, 148, 150, 151, 153, 155, 158, 160, 161, 163, 166, 169, 170, 172, 173, 175, 177, 179, 182, 184, 189, 190, 192, 194, 197, 199, 204, 205, 207, 209, 212, 214, 215, 217, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 253, 255, 256, 258, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292], "purpos": [1, 46, 246, 247, 266, 268, 292], "thi": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 20, 25, 26, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 56, 60, 61, 62, 65, 66, 68, 69, 70, 71, 74, 75, 84, 85, 87, 88, 94, 102, 112, 113, 123, 124, 125, 126, 127, 128, 130, 132, 135, 138, 139, 141, 143, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 231, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 252, 253, 255, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 274, 275, 277, 280, 281, 283, 284, 285, 286, 287, 291, 293], "section": [1, 2, 4, 5, 6, 8, 11, 13, 15, 20, 26, 69, 114, 118, 127, 130, 132, 135, 221, 223, 229, 230, 231, 239, 240, 243, 244, 246, 247, 248, 260, 265, 268, 269, 270, 271, 272, 273, 274, 275, 277, 281, 285, 286, 287, 291], "i": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 20, 25, 30, 33, 34, 35, 39, 40, 42, 49, 52, 54, 68, 69, 74, 84, 85, 88, 92, 98, 101, 102, 105, 107, 109, 112, 113, 115, 117, 122, 123, 125, 126, 127, 130, 132, 145, 147, 154, 174, 189, 191, 204, 206, 214, 223, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 290, 291, 292, 293], "summar": 1, "what": [1, 5, 10, 12, 15, 127, 247, 268, 275, 286, 287, 291], "capabl": [1, 5, 15, 127, 243, 247, 268, 274, 287], "ad": [1, 4, 5, 6, 8, 9, 10, 15, 16, 34, 35, 41, 44, 51, 113, 139, 150, 160, 223, 229, 230, 245, 246, 248, 262, 267, 270, 271, 272, 273, 275, 287], "polari": [1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 123, 125, 126, 127, 130, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 250, 260, 261, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 288, 292, 293], "through": [1, 106, 247, 248, 262, 268], "process": [1, 5, 7, 13, 28, 84, 85, 122, 243, 247, 248, 260, 266, 267, 268], "It": [1, 4, 5, 13, 15, 33, 39, 114, 234, 237, 238, 243, 244, 245, 246, 247, 248, 266, 268, 269, 274, 283, 284], "should": [1, 4, 5, 6, 8, 11, 13, 16, 21, 26, 34, 35, 41, 42, 44, 52, 56, 69, 105, 106, 113, 114, 115, 123, 124, 125, 126, 127, 128, 130, 135, 150, 160, 231, 240, 243, 244, 245, 246, 248, 250, 260, 262, 265, 268, 269, 280, 281, 285, 286, 287, 291], "clear": [1, 247, 268], "new": [1, 4, 13, 18, 21, 33, 42, 46, 51, 54, 61, 68, 74, 88, 108, 109, 145, 153, 172, 186, 189, 201, 204, 214, 223, 229, 230, 243, 247, 248, 262, 265, 266, 267, 287], "code": [1, 4, 6, 8, 11, 13, 33, 130, 231, 240, 243, 244, 245, 250, 260, 266, 267, 269, 276, 280, 285, 287], "do": [1, 4, 8, 10, 13, 15, 16, 117, 127, 243, 245, 248, 265, 266, 267, 268, 274, 281, 287], "current": [1, 4, 5, 7, 10, 20, 30, 33, 40, 112, 113, 127, 132, 214, 231, 235, 239, 240, 243, 247, 248, 250, 260, 262, 264, 266, 267, 268, 269, 274, 277, 280, 281, 283, 284, 285, 287, 292, 293], "doe": [1, 5, 8, 11, 13, 243, 267, 268, 274], "primari": [1, 4, 8, 268, 293], "challeng": 1, "respect": [1, 7, 8, 13, 17, 130, 243, 247, 281, 286, 291], "softwar": [1, 78, 275, 287], "also": [1, 4, 5, 6, 8, 12, 13, 16, 17, 28, 39, 51, 112, 113, 114, 127, 130, 177, 223, 229, 230, 231, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 268, 269, 274, 275, 277, 281, 283, 284, 286, 287, 291, 292], "appropri": [1, 4, 5, 13, 21, 73, 127, 231, 234, 237, 238, 239, 240, 243, 246, 248, 260, 267, 268, 269, 270, 271, 272, 273, 274, 275, 286, 287, 291], "final": [1, 5, 6, 127, 234, 235, 237, 238, 239, 241, 243, 245, 264, 268, 281], "statement": [1, 11, 243, 266], "contain": [1, 4, 5, 6, 7, 8, 15, 17, 18, 22, 23, 24, 37, 50, 53, 80, 83, 89, 90, 91, 92, 96, 97, 98, 107, 115, 116, 130, 137, 223, 229, 230, 240, 241, 242, 243, 247, 248, 250, 260, 262, 266, 268, 269, 274, 278, 283, 284, 286, 287, 288, 291], "gener": [1, 2, 3, 6, 7, 11, 13, 16, 17, 21, 22, 23, 24, 28, 41, 68, 113, 130, 150, 160, 221, 231, 233, 234, 235, 237, 238, 239, 240, 243, 248, 250, 260, 268, 269, 274, 281, 283, 284, 287], "regard": 1, "success": [1, 52, 231, 240, 260, 268, 269], "last": [1, 244, 248, 280, 287], "modifi": [1, 7, 8, 12, 13, 20, 32, 44, 107, 109, 132, 156, 234, 237, 238, 243, 245, 246, 248, 267, 268, 269, 280, 287], "add": [1, 4, 5, 6, 8, 12, 13, 19, 21, 22, 23, 24, 25, 34, 35, 36, 43, 44, 47, 67, 72, 77, 107, 108, 109, 117, 118, 121, 122, 127, 147, 154, 234, 240, 243, 245, 246, 247, 248, 266, 268, 269, 275, 281], "your": [1, 3, 4, 5, 10, 127, 231, 247, 248, 260, 265, 268, 269, 270, 271, 274, 275, 281, 287], "list": [1, 5, 6, 8, 13, 16, 20, 33, 42, 43, 49, 50, 84, 85, 102, 105, 106, 111, 112, 113, 137, 158, 166, 169, 182, 194, 197, 199, 209, 243, 244, 245, 246, 247, 248, 266, 267, 268, 269, 271, 274, 275, 281, 287, 292, 293], "appear": [1, 127, 243, 268], "each": [1, 4, 5, 6, 7, 11, 12, 13, 15, 16, 39, 42, 57, 63, 64, 73, 99, 106, 122, 127, 130, 142, 152, 162, 166, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 264, 266, 268, 269, 274, 277, 280, 281, 283, 284, 286, 287, 291, 293], "under": [1, 15, 33, 34, 112, 127, 130, 233, 243, 244, 248, 267, 277, 292], "head": [1, 233, 271], "one": [1, 4, 5, 6, 9, 13, 15, 16, 17, 20, 32, 33, 35, 42, 49, 54, 105, 106, 111, 113, 127, 130, 132, 140, 142, 144, 151, 152, 157, 162, 185, 200, 213, 216, 231, 234, 237, 238, 239, 243, 245, 246, 247, 248, 253, 257, 264, 265, 266, 267, 269, 274, 275, 277, 280, 281, 283, 284, 286, 287, 290, 291, 292, 293], "correspond": [1, 5, 6, 16, 112, 113, 127, 130, 231, 243, 248, 260, 280], "between": [1, 4, 5, 7, 11, 12, 13, 15, 16, 20, 32, 35, 62, 69, 70, 73, 76, 88, 94, 112, 113, 132, 151, 186, 201, 223, 229, 230, 235, 240, 243, 246, 247, 253, 274, 277, 280, 283, 284], "propos": 1, "discuss": [1, 5, 130, 243, 245, 246, 247, 268, 280, 281], "technic": [1, 6], "issu": [1, 5, 243, 244, 248, 281, 283, 284], "rather": [1, 5, 7, 8, 10, 12, 13, 33, 35, 51, 127, 234, 243, 245, 246, 248, 265, 268, 277], "focu": [1, 268], "model": [1, 4, 9, 20, 21, 25, 26, 28, 33, 35, 105, 106, 111, 116, 121, 123, 124, 125, 126, 127, 128, 141, 145, 147, 151, 153, 154, 155, 161, 174, 191, 206, 214, 231, 234, 237, 238, 239, 240, 244, 245, 247, 248, 253, 260, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 280, 283, 284, 286, 291], "To": [1, 4, 5, 11, 15, 16, 113, 127, 130, 231, 243, 247, 248, 260, 262, 268, 270, 271, 272, 273, 274, 275, 277, 281, 287], "extent": [1, 12, 15, 268, 280], "possibl": [1, 7, 10, 64, 130, 233, 243, 244, 247, 268, 277], "rel": [1, 4, 8, 15, 16, 35, 36, 49, 51, 105, 106, 111, 112, 113, 231, 240, 243, 247, 248, 260, 266, 268, 280, 287, 292], "independ": [1, 4, 244, 266], "other": [1, 4, 5, 6, 7, 8, 9, 12, 15, 17, 33, 34, 36, 51, 123, 142, 152, 162, 235, 239, 240, 241, 245, 246, 247, 248, 265, 266, 267, 269, 270, 280, 292], "thu": [1, 6, 13, 268], "allow": [1, 7, 15, 16, 20, 30, 33, 40, 51, 113, 127, 130, 132, 243, 246, 266, 268, 269, 274, 277, 281, 292], "clean": [1, 5, 243, 245, 248], "plan": [1, 12, 231, 237, 238, 243, 260, 266, 283, 284, 292], "For": [1, 2, 4, 5, 6, 11, 13, 15, 17, 106, 123, 127, 233, 234, 237, 238, 239, 243, 247, 248, 266, 268, 269, 270, 278, 281, 283, 284, 287, 288, 292], "you": [1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 123, 124, 125, 126, 127, 128, 231, 240, 243, 245, 247, 248, 260, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 281, 287, 292, 293], "can": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 30, 33, 34, 35, 40, 42, 45, 65, 68, 70, 89, 93, 94, 96, 105, 106, 111, 113, 123, 124, 125, 126, 127, 128, 130, 231, 234, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 283, 284, 287, 292, 293], "provid": [1, 2, 4, 7, 8, 13, 15, 16, 17, 35, 92, 98, 112, 113, 117, 127, 130, 140, 142, 144, 152, 157, 162, 185, 200, 213, 216, 231, 234, 235, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 257, 260, 264, 265, 266, 267, 268, 269, 274, 278, 281, 286, 287], "an": [1, 2, 4, 5, 6, 8, 10, 12, 15, 16, 17, 20, 28, 33, 34, 35, 36, 54, 61, 63, 64, 90, 97, 107, 109, 112, 113, 114, 121, 127, 132, 175, 234, 239, 240, 241, 243, 244, 245, 246, 247, 248, 265, 266, 267, 269, 271, 274, 277, 283, 287, 292, 293], "intend": [1, 5, 7, 8, 244, 269, 284, 292], "meet": 1, "includ": [1, 4, 5, 6, 7, 8, 12, 13, 16, 17, 35, 41, 42, 52, 102, 114, 127, 130, 139, 150, 160, 166, 234, 235, 239, 241, 243, 244, 245, 246, 247, 248, 250, 265, 266, 267, 268, 269, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 292, 293], "detail": [1, 2, 4, 6, 8, 10, 11, 12, 57, 113, 233, 235, 241, 243, 245, 247, 248, 265, 268, 281, 287], "pde": 1, "solver": [1, 245, 248, 267, 287], "similar": [1, 4, 7, 8, 11, 12, 13, 16, 124, 127, 128, 241, 245, 246, 247, 248, 268, 287], "well": [1, 5, 7, 8, 11, 12, 127, 130, 226, 234, 237, 238, 239, 243, 248, 266, 268, 269, 281, 287, 292], "perform": [1, 4, 7, 13, 15, 16, 38, 39, 41, 45, 61, 112, 113, 127, 143, 145, 150, 155, 160, 165, 172, 180, 189, 204, 212, 214, 215, 231, 234, 235, 237, 238, 239, 243, 244, 245, 256, 266, 267, 268, 269, 274, 280, 293], "In": [1, 5, 6, 7, 8, 10, 13, 15, 16, 33, 127, 130, 235, 241, 243, 244, 245, 246, 247, 248, 267, 268, 269, 274, 277, 281, 283, 286, 287, 291, 292, 293], "steer": 1, "awai": 1, "from": [1, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 20, 22, 23, 26, 33, 34, 35, 42, 44, 49, 52, 54, 78, 80, 85, 89, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 106, 107, 108, 109, 112, 113, 115, 117, 118, 121, 122, 127, 132, 135, 140, 145, 169, 174, 177, 182, 191, 194, 197, 206, 209, 227, 231, 233, 234, 235, 237, 238, 239, 240, 245, 246, 247, 250, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 283, 284, 286, 287, 290, 291, 292, 293], "low": [1, 115], "level": [1, 10, 11, 12, 16, 17, 130, 223, 224, 225, 226, 227, 228, 229, 230, 234, 241, 242, 243, 245, 246, 268, 269, 280, 281, 283, 284, 285, 286, 291], "variabl": [1, 4, 12, 17, 18, 20, 33, 42, 45, 46, 61, 68, 74, 78, 88, 89, 93, 96, 112, 113, 115, 116, 117, 122, 127, 130, 132, 139, 145, 148, 158, 166, 168, 169, 172, 177, 179, 182, 186, 189, 192, 194, 197, 199, 201, 204, 207, 209, 214, 215, 223, 229, 230, 233, 239, 245, 247, 248, 254, 257, 260, 265, 268, 270, 271, 272, 273, 274, 275, 278, 280, 286, 287, 288, 291], "declar": [1, 6], "interfac": [1, 9, 221, 222, 223, 229, 230, 243, 247, 248, 267, 268, 277], "sequenc": [1, 4, 13, 242, 243, 247, 266, 268, 287, 292, 293], "If": [1, 4, 5, 6, 7, 8, 11, 13, 16, 17, 20, 30, 33, 35, 40, 43, 44, 54, 84, 85, 86, 105, 112, 113, 115, 123, 124, 125, 126, 127, 128, 132, 145, 189, 204, 214, 234, 243, 245, 246, 247, 248, 262, 265, 266, 268, 269, 274, 275, 277, 281, 286, 287, 291], "want": [1, 4, 5, 10, 13, 15, 16, 44, 127, 130, 243, 246, 248, 265, 268, 269, 274, 275, 285, 287, 292], "math": 1, "syntax": [1, 268], "almost": [1, 8], "ident": [1, 4, 16, 141, 151, 161, 234, 244, 247, 253, 268, 280], "latex": 1, "b": [1, 4, 5, 248, 266, 268, 287], "2": [1, 5, 12, 13, 16, 34, 127, 161, 233, 234, 241, 244, 248, 262, 268, 269, 271, 274, 277, 280, 281, 283, 284, 287], "2ab": 1, "imag": [1, 6, 17, 114, 115, 246, 268, 286, 291], "keep": [1, 4, 5, 8, 13, 20, 51, 243, 245, 248, 268, 286, 291], "mind": [1, 4, 268], "quit": [1, 241, 243, 245, 268], "small": [1, 8, 39, 127, 243, 246, 268, 270, 271, 276, 277, 285, 287], "jpeg": 1, "ar": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 29, 30, 33, 35, 39, 40, 42, 46, 51, 73, 84, 85, 102, 106, 113, 118, 127, 130, 132, 145, 189, 204, 214, 223, 226, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 283, 284, 285, 286, 287, 290, 291, 292, 293], "prefer": [1, 127, 243, 244, 268, 269], "png": [1, 12, 17, 235, 268], "okai": [1, 5, 243, 268], "size": [1, 12, 63, 64, 73, 130, 134, 136, 137, 234, 246, 268, 269, 280, 281, 283, 284, 285, 286, 291], "repo": [1, 4, 5, 127, 231, 260, 267, 268, 288], "exampl": [1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 127, 240, 241, 243, 244, 245, 246, 247, 248, 265, 266, 268, 269, 271, 277, 286, 287, 292, 293], "centric": 1, "pseudo": 1, "link": [1, 6, 10, 13, 35, 54, 127, 243, 246, 248, 268, 274, 278, 287, 288], "actual": [1, 4, 5, 11, 243, 245, 248, 268], "sourc": [1, 5, 6, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 243, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268, 269, 270, 271, 272, 273, 274, 275, 287], "project": [1, 4, 5, 6, 60, 92, 98, 231, 247, 248, 260, 262, 268, 269, 270, 271, 274, 287, 288], "manag": [1, 265, 274], "item": [1, 268], "git": [1, 5, 14, 87, 231, 248, 260, 268, 269, 287], "branch": [1, 4, 127, 231, 240, 243, 248, 260, 267, 268, 287], "timelin": 1, "staf": 1, "via": [1, 4, 5, 13, 243, 248, 274], "block": [1, 245], "like": [1, 4, 5, 6, 7, 8, 9, 10, 13, 16, 89, 93, 96, 127, 130, 241, 243, 246, 247, 248, 265, 267, 268, 269, 274, 280, 281, 287, 292], "def": [1, 6, 8, 10, 11, 15, 17, 240, 243, 245, 246, 247, 268], "example_funct": 1, "foo": [1, 247], "return": [1, 6, 26, 50, 52, 55, 62, 63, 64, 69, 73, 80, 83, 84, 94, 103, 104, 106, 107, 109, 117, 121, 122, 130, 133, 135, 137, 146, 170, 173, 187, 188, 190, 202, 203, 205, 221, 224, 225, 226, 227, 228, 247, 268, 281], "0": [1, 4, 5, 6, 12, 13, 15, 16, 17, 63, 89, 93, 96, 113, 115, 123, 124, 125, 126, 127, 128, 130, 223, 228, 229, 230, 233, 235, 243, 246, 247, 262, 265, 268, 269, 271, 274, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 291], "how": [1, 4, 5, 11, 13, 68, 130, 242, 243, 245, 247, 248, 269, 274, 275], "show": [1, 6, 12, 243, 268, 274, 275, 280, 281, 286, 291], "we": [1, 4, 6, 8, 10, 12, 13, 15, 16, 17, 126, 127, 130, 136, 234, 235, 237, 238, 239, 242, 243, 245, 246, 247, 248, 264, 267, 268, 269, 271, 273, 274, 275, 277, 281, 285, 287, 293], "have": [1, 3, 4, 5, 6, 8, 10, 11, 13, 15, 16, 26, 33, 34, 99, 105, 106, 111, 126, 127, 130, 135, 169, 182, 194, 197, 209, 231, 234, 237, 238, 241, 243, 244, 245, 246, 247, 248, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 287, 292, 293], "met": 1, "which": [1, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 23, 24, 26, 35, 46, 50, 90, 97, 105, 106, 107, 111, 113, 115, 117, 127, 130, 135, 141, 151, 161, 187, 188, 202, 203, 231, 233, 240, 242, 243, 245, 246, 247, 248, 253, 268, 269, 271, 274, 277, 280, 281, 283, 284, 285, 286, 287, 292, 293], "regress": [1, 165, 234, 235, 244, 266, 267, 268, 280, 281, 287, 293], "suit": [1, 5, 6, 11, 16, 33, 42, 56, 57, 101, 102, 104, 106, 127, 234, 242, 243, 245, 248, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 280], "would": [1, 4, 8, 13, 16, 20, 30, 33, 40, 43, 84, 85, 88, 113, 127, 130, 132, 145, 189, 204, 214, 234, 241, 243, 245, 246, 247, 248, 265, 268, 274, 277, 287], "thei": [1, 4, 5, 6, 7, 11, 12, 13, 16, 17, 33, 34, 35, 44, 51, 68, 102, 118, 127, 130, 231, 234, 235, 240, 242, 243, 245, 246, 247, 248, 262, 266, 267, 268, 269, 274, 277, 280, 281, 287, 293], "need": [1, 3, 4, 5, 6, 10, 11, 12, 13, 15, 25, 43, 51, 69, 127, 130, 147, 154, 231, 240, 243, 245, 247, 248, 260, 262, 265, 267, 268, 269, 270, 274, 275, 277, 280, 281, 287, 293], "configur": [1, 4, 5, 6, 8, 10, 13, 15, 30, 33, 40, 42, 52, 56, 83, 84, 85, 86, 87, 105, 106, 111, 127, 130, 221, 223, 224, 225, 229, 230, 234, 243, 246, 247, 267, 268, 269, 271, 274, 275, 277, 283, 284, 286, 287, 291, 292], "work": [1, 4, 5, 7, 10, 11, 13, 14, 15, 33, 35, 36, 38, 41, 42, 49, 56, 87, 101, 105, 106, 111, 126, 127, 150, 160, 177, 179, 180, 240, 241, 242, 243, 244, 245, 247, 248, 265, 266, 268, 269, 274, 281, 285, 287, 292], "properli": [1, 123, 125, 126, 268, 269, 287], "addit": [1, 6, 8, 33, 239, 240, 241, 243, 245, 246, 247, 248, 268], "modif": [1, 6, 243, 262], "nightli": [1, 248, 287, 293], "anoth": [1, 5, 6, 8, 9, 12, 15, 16, 33, 34, 35, 112, 113, 231, 243, 245, 246, 247, 248, 266, 268, 269, 280, 287, 292, 293], "might": [1, 5, 10, 13, 15, 17, 127, 243, 246, 248, 268, 269, 274, 287], "made": [1, 4, 15, 33, 36, 42, 113, 243, 245, 247, 262, 266, 268, 292], "ensur": [1, 8, 13, 51, 127, 234, 247, 248, 281, 285], "continu": [1, 5, 243, 268], "expect": [1, 11, 15, 127, 240, 243, 248, 268, 281, 285], "page": [2, 6, 127, 270], "auto": 2, "summari": [2, 271], "more": [2, 4, 5, 8, 10, 11, 12, 13, 15, 16, 33, 42, 49, 69, 105, 106, 127, 130, 233, 234, 235, 241, 243, 244, 245, 247, 248, 250, 266, 274, 278, 280, 281, 286, 287, 288, 291, 292], "relev": [2, 6, 8, 130, 237, 238, 268, 270, 271, 272, 273, 274, 275, 286, 287, 291], "main": [2, 5, 6, 8, 13, 38, 127, 180, 240, 246, 247, 248, 268, 292], "part": [2, 4, 5, 6, 11, 13, 16, 17, 33, 42, 145, 172, 189, 204, 214, 234, 237, 238, 243, 244, 247, 248, 267, 268, 277], "document": [2, 8, 13, 243, 247, 267, 269, 287], "ocean": [2, 4, 6, 8, 9, 10, 12, 13, 16, 17, 18, 26, 35, 46, 111, 127, 232, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 266, 267, 268, 269, 274, 276, 277, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293], "seaic": [2, 18, 35, 243, 261, 264, 267, 287, 288, 291], "As": [3, 4, 5, 12, 16, 63, 130, 243, 244, 245, 246, 247, 248, 268, 269, 277, 281, 285, 293], "long": [3, 20, 30, 33, 40, 84, 85, 132, 145, 189, 204, 214, 243, 268, 280, 287], "follow": [3, 4, 6, 12, 13, 17, 60, 127, 223, 229, 230, 231, 233, 234, 243, 244, 245, 248, 260, 262, 265, 268, 269, 274, 275, 277, 279, 281, 283, 284, 285, 287, 290], "procedur": [3, 127, 248, 268, 275], "conda": [3, 4, 14, 87, 123, 125, 126, 127, 231, 240, 247, 260, 267, 268, 269, 270, 271, 272, 273, 275], "environ": [3, 4, 123, 125, 126, 231, 240, 247, 260, 267, 268, 269, 270, 271, 272, 273, 274, 275], "spack": [3, 4, 123, 125, 126, 265, 267, 268, 270, 271, 272, 273, 274, 275], "compil": [3, 4, 5, 13, 123, 124, 125, 126, 127, 128, 265, 267, 268, 270, 271, 272, 273, 274, 275, 287], "system": [3, 4, 5, 20, 30, 33, 40, 84, 85, 86, 123, 125, 126, 127, 132, 145, 189, 204, 214, 243, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 287], "modul": [3, 4, 8, 9, 11, 13, 14, 22, 23, 24, 60, 80, 107, 123, 125, 126, 127, 130, 240, 241, 243, 245, 246, 250, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 287], "set": [3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 21, 22, 23, 24, 25, 33, 35, 41, 69, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 103, 105, 106, 107, 109, 111, 112, 113, 114, 115, 123, 124, 125, 126, 127, 128, 145, 147, 150, 154, 160, 165, 167, 174, 191, 206, 214, 223, 229, 230, 231, 233, 234, 235, 237, 238, 239, 242, 243, 245, 246, 247, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 283, 284, 285, 286, 291, 293], "up": [3, 4, 5, 6, 7, 9, 10, 13, 15, 16, 21, 22, 23, 24, 33, 41, 42, 75, 87, 99, 100, 103, 105, 106, 111, 112, 113, 123, 124, 125, 126, 127, 128, 130, 150, 160, 165, 231, 234, 235, 237, 238, 239, 242, 243, 245, 247, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 281, 286, 291, 292], "alreadi": [3, 5, 10, 13, 44, 54, 127, 130, 145, 214, 245, 247, 248, 268, 269, 274, 277, 281, 287], "packag": [3, 4, 5, 6, 8, 9, 12, 13, 14, 22, 23, 24, 35, 44, 53, 80, 87, 107, 111, 117, 127, 240, 241, 242, 243, 245, 246, 248, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 287], "avail": [3, 4, 6, 10, 13, 16, 17, 20, 30, 33, 36, 37, 40, 50, 57, 83, 84, 85, 127, 132, 145, 189, 204, 214, 235, 243, 245, 247, 248, 268, 270, 271, 272, 273, 275, 280, 287, 293], "Then": [3, 5, 6, 10, 123, 124, 125, 126, 127, 128, 231, 234, 237, 238, 239, 240, 243, 245, 246, 248, 260, 268, 274, 280, 287], "run": [3, 4, 5, 6, 9, 11, 15, 16, 17, 20, 25, 30, 33, 34, 36, 39, 40, 42, 43, 49, 60, 83, 84, 85, 94, 105, 106, 111, 113, 126, 127, 132, 143, 145, 147, 151, 154, 158, 163, 169, 172, 174, 182, 189, 191, 194, 197, 204, 206, 209, 212, 214, 215, 219, 231, 234, 235, 237, 238, 239, 241, 242, 244, 245, 246, 247, 253, 254, 256, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 292, 293], "script": [3, 4, 5, 11, 17, 48, 56, 124, 127, 128, 247, 266, 267, 268, 271, 274], "doc": [3, 6, 245, 268, 275], "cd": [3, 5, 231, 248, 260, 268, 271, 287], "rm": 3, "rf": 3, "developers_guid": [3, 268], "_build": 3, "make": [3, 4, 5, 10, 11, 15, 16, 20, 29, 35, 51, 62, 63, 65, 78, 113, 123, 124, 125, 126, 127, 128, 132, 136, 141, 151, 161, 179, 223, 229, 230, 231, 234, 243, 245, 246, 247, 248, 253, 260, 266, 269, 270, 271, 272, 273, 274, 275, 280, 281, 287, 293], "html": [3, 278], "view": [3, 237, 238, 248, 283, 284], "open": [3, 5, 248, 268], "index": [3, 16, 115, 223, 224, 225, 226, 227, 228, 229, 230, 245, 246, 268], "act": [4, 247, 277], "essenti": [4, 13], "4": [4, 6, 12, 13, 16, 127, 141, 143, 212, 215, 234, 237, 238, 239, 243, 245, 268, 269, 274, 280, 283, 284, 285, 287], "These": [4, 5, 7, 13, 16, 18, 33, 127, 130, 231, 233, 240, 243, 245, 247, 248, 260, 262, 267, 268, 269, 274, 280, 287, 292, 293], "user": [4, 5, 6, 7, 8, 10, 13, 15, 16, 33, 42, 43, 51, 56, 87, 113, 127, 130, 234, 237, 238, 239, 243, 244, 245, 246, 264, 265, 266, 268, 271, 274, 275, 278, 280, 281, 288], "describ": [4, 6, 13, 15, 87, 107, 109, 112, 113, 122, 130, 234, 235, 237, 238, 239, 242, 243, 244, 245, 247, 248, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 277, 281, 287], "below": [4, 5, 13, 20, 30, 33, 40, 84, 85, 127, 132, 145, 189, 204, 214, 231, 241, 243, 245, 246, 248, 268, 269, 274, 277, 281, 283, 284, 285, 287], "when": [4, 5, 11, 13, 15, 16, 21, 22, 23, 24, 26, 33, 34, 39, 42, 43, 51, 52, 54, 57, 101, 112, 113, 127, 130, 135, 228, 234, 235, 237, 238, 239, 243, 245, 246, 247, 248, 267, 268, 270, 271, 272, 273, 275, 277, 280, 281, 285, 287, 292], "instal": [4, 5, 127, 248, 268, 274, 275, 287], "abov": [4, 6, 13, 16, 127, 241, 243, 244, 245, 246, 247, 248, 268, 269, 281, 283, 284, 285, 287, 293], "develop": [4, 5, 6, 7, 11, 12, 17, 127, 130, 231, 233, 240, 243, 244, 247, 262, 265, 269, 274, 278, 287], "local": [4, 5, 7, 10, 33, 35, 42, 231, 241, 243, 245, 248, 260, 265, 268, 269, 274, 275, 277], "off": [4, 5, 248, 265], "http": [4, 6, 10, 54, 243, 247, 265, 267, 268, 269, 275, 278, 287, 288], "github": [4, 5, 6, 247, 248, 267, 268, 269, 278, 287, 288], "com": [4, 5, 6, 54, 247, 248, 267, 268, 269, 287, 288], "e3sm": [4, 6, 9, 10, 33, 116, 127, 231, 240, 243, 244, 245, 247, 260, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 288], "creat": [4, 7, 10, 11, 12, 13, 14, 15, 18, 20, 33, 35, 39, 42, 46, 54, 61, 62, 68, 69, 74, 88, 95, 105, 106, 111, 116, 127, 130, 139, 141, 143, 145, 148, 151, 153, 155, 158, 161, 163, 166, 169, 172, 175, 177, 179, 182, 184, 186, 189, 192, 194, 197, 199, 201, 204, 207, 209, 212, 214, 215, 217, 219, 223, 229, 230, 235, 239, 240, 243, 244, 245, 246, 247, 253, 255, 256, 258, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 281, 287], "see": [4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 123, 125, 126, 127, 234, 235, 238, 243, 245, 248, 250, 265, 268, 269, 274, 278, 279, 280, 285, 286, 287, 288, 290, 291, 292, 293], "mode": [4, 13, 240, 248, 266, 267, 268, 287], "mean": [4, 16, 170, 235, 237, 238, 248, 268, 277, 280, 283, 284, 293], "chang": [4, 5, 7, 13, 15, 16, 68, 99, 100, 231, 240, 243, 244, 245, 247, 248, 250, 260, 266, 268, 269, 271, 275, 277, 280, 287, 293], "reflect": [4, 248], "call": [4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 28, 33, 39, 42, 43, 44, 60, 94, 101, 127, 130, 234, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 265, 266, 267, 268, 269, 274, 275, 287], "tool": [4, 5, 8, 11, 13, 15, 231, 240, 243, 248, 260, 267, 268, 269], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 25, 26, 30, 33, 34, 35, 39, 40, 42, 49, 52, 56, 69, 78, 81, 84, 85, 88, 94, 101, 113, 114, 115, 116, 117, 122, 123, 127, 130, 132, 133, 134, 135, 136, 145, 146, 147, 154, 166, 169, 173, 177, 189, 190, 204, 205, 214, 221, 223, 224, 225, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 283, 284, 285, 286, 287, 290, 292, 293], "test": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 33, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 56, 57, 60, 61, 66, 68, 71, 74, 83, 84, 85, 87, 88, 99, 100, 101, 102, 104, 105, 106, 111, 112, 113, 127, 130, 131, 132, 221, 231, 233, 234, 235, 237, 238, 239, 240, 241, 243, 248, 250, 251, 260, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 288, 291], "case": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 30, 33, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 56, 57, 61, 66, 68, 71, 74, 83, 84, 85, 87, 88, 99, 100, 101, 102, 105, 106, 107, 111, 112, 113, 127, 130, 131, 132, 138, 139, 141, 143, 145, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 163, 164, 166, 167, 169, 171, 172, 175, 177, 178, 179, 181, 182, 183, 184, 186, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 250, 251, 252, 253, 255, 256, 258, 259, 260, 262, 264, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 286, 288, 291, 293], "support": [4, 5, 7, 12, 15, 33, 130, 223, 229, 230, 233, 235, 243, 245, 246, 247, 267, 268, 269, 271, 275, 277, 280, 285, 292], "machin": [4, 7, 33, 35, 42, 55, 56, 87, 105, 106, 111, 231, 243, 245, 247, 260, 267, 268, 269, 270, 271, 272, 273, 275], "option": [4, 6, 8, 12, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 40, 42, 43, 44, 49, 51, 52, 54, 55, 56, 57, 61, 67, 68, 69, 72, 74, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 102, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 127, 132, 135, 145, 147, 154, 156, 167, 174, 186, 189, 191, 201, 204, 206, 214, 221, 223, 224, 225, 229, 230, 231, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 255, 260, 262, 265, 267, 269, 277, 279, 287, 292], "h": [4, 13, 268], "t": [4, 5, 6, 8, 10, 11, 13, 33, 34, 122, 127, 130, 145, 187, 188, 202, 203, 214, 237, 238, 243, 245, 247, 248, 265, 268, 269, 271, 273, 274, 279, 280, 283, 284, 287, 292, 293], "n": [4, 5, 62, 69, 70, 76, 243, 268, 271, 274, 275, 280, 281, 283, 284, 286, 287, 291], "number": [4, 5, 7, 12, 13, 20, 27, 30, 32, 33, 37, 39, 40, 55, 56, 57, 61, 62, 63, 64, 65, 73, 83, 84, 85, 88, 106, 127, 130, 132, 133, 134, 136, 145, 146, 170, 173, 186, 189, 190, 201, 204, 205, 214, 231, 234, 237, 238, 243, 244, 245, 246, 247, 266, 268, 269, 274, 277, 279, 280, 281, 283, 284, 285, 286, 287, 291], "v": [4, 248, 268, 283, 284, 293], "By": [4, 13, 16, 34, 35, 130, 231, 240, 245, 260, 268, 269, 280, 285], "default": [4, 6, 8, 13, 16, 17, 20, 33, 34, 35, 42, 49, 56, 69, 74, 79, 87, 88, 89, 93, 96, 102, 105, 106, 108, 111, 115, 123, 125, 126, 127, 130, 132, 145, 212, 214, 215, 231, 235, 237, 238, 239, 240, 243, 245, 246, 248, 260, 262, 267, 269, 270, 271, 272, 273, 274, 275, 277, 281, 285, 286, 287, 291, 292], "all": [4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 20, 33, 40, 42, 50, 84, 85, 87, 105, 106, 127, 130, 131, 132, 139, 145, 189, 204, 214, 223, 229, 230, 231, 234, 240, 241, 243, 244, 245, 246, 247, 248, 251, 260, 266, 267, 268, 269, 274, 277, 278, 280, 281, 286, 287, 288, 291, 292], "testcas": [4, 7, 10, 15, 16, 20, 33, 47, 61, 68, 74, 88, 99, 100, 105, 106, 112, 113, 132, 145, 148, 153, 158, 163, 176, 177, 179, 182, 189, 192, 197, 204, 207, 214, 217, 219, 243, 247, 255, 258, 268, 269, 280, 285, 287], "example_compact": [4, 231, 240, 260, 269], "1km": [4, 245, 246, 268, 280, 287], "test1": 4, "1": [4, 6, 12, 13, 15, 16, 17, 33, 63, 123, 124, 125, 126, 127, 128, 130, 141, 145, 161, 189, 204, 214, 223, 229, 230, 234, 235, 237, 238, 239, 241, 243, 245, 248, 262, 265, 268, 269, 271, 274, 275, 277, 280, 281, 283, 284, 285, 286, 287], "test2": 4, "displai": [4, 7, 275], "path": [4, 5, 8, 10, 13, 16, 33, 35, 36, 42, 49, 51, 52, 54, 57, 60, 87, 105, 106, 111, 112, 113, 115, 127, 231, 240, 243, 245, 247, 248, 260, 266, 268, 269, 270, 271, 272, 273, 274, 275, 287, 292], "directori": [4, 5, 7, 10, 11, 13, 14, 16, 17, 33, 35, 36, 41, 42, 49, 54, 56, 87, 101, 105, 106, 111, 112, 113, 127, 150, 160, 177, 179, 231, 234, 240, 242, 243, 244, 245, 247, 248, 260, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 287, 292], "help": [4, 5, 12, 127, 241, 243, 248, 267, 268, 274, 278, 288], "messag": [4, 7, 16, 127, 243, 245, 265, 275], "test_expr": [4, 57], "flag": [4, 5, 127, 243, 247, 265, 266, 268, 269, 278, 280, 287, 288], "suppli": [4, 5, 6, 16, 122, 127, 243, 248, 268], "substr": [4, 127], "regular": [4, 17, 57, 62, 69, 166, 169, 268, 270, 273, 274, 275, 287], "express": [4, 57], "subset": 4, "think": [4, 268], "search": [4, 57, 271], "within": [4, 6, 7, 8, 9, 10, 11, 13, 16, 30, 33, 35, 36, 40, 42, 53, 111, 112, 113, 127, 234, 237, 238, 240, 241, 243, 244, 245, 246, 248, 250, 262, 266, 268, 269, 271, 274, 281, 285, 286, 291], "name": [4, 6, 7, 8, 12, 13, 15, 17, 18, 20, 22, 23, 24, 26, 27, 33, 34, 35, 42, 44, 46, 52, 54, 55, 56, 57, 61, 68, 74, 78, 80, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 121, 127, 130, 132, 135, 137, 139, 145, 153, 170, 172, 175, 177, 179, 214, 222, 240, 243, 245, 246, 247, 248, 255, 266, 268, 269, 275, 280, 287, 293], "singl": [4, 7, 17, 115, 127, 211, 212, 215, 217, 239, 243, 245, 247, 250, 252, 253, 255, 256, 258, 260, 261, 262, 266, 268, 274, 281, 283, 284, 285, 290], "given": [4, 6, 7, 12, 13, 15, 16, 18, 20, 52, 63, 73, 80, 84, 85, 102, 107, 109, 112, 113, 117, 130, 132, 155, 170, 226, 234, 235, 239, 243, 245, 265, 267, 268, 269, 280, 281, 285, 286, 287, 291, 293], "instead": [4, 5, 11, 13, 20, 102, 123, 127, 243, 245, 247, 248, 268, 270, 287, 293], "pass": [4, 7, 11, 12, 13, 16, 42, 73, 113, 114, 240, 243, 245, 246, 247, 248, 266, 287], "similarli": [4, 7, 231, 243, 248, 274, 287], "compon": [4, 5, 6, 7, 8, 9, 12, 20, 33, 35, 42, 46, 56, 59, 87, 111, 116, 127, 132, 138, 145, 165, 172, 181, 189, 196, 204, 211, 214, 241, 242, 243, 244, 245, 246, 251, 252, 262, 266, 267, 268, 269, 274, 276, 279, 292], "result": [4, 12, 16, 52, 64, 73, 112, 113, 127, 130, 141, 151, 158, 161, 163, 219, 234, 235, 243, 244, 247, 248, 253, 258, 266, 268, 269, 280, 281, 286, 291, 293], "verbos": [4, 5, 57, 59, 127, 243, 268, 293], "about": [4, 5, 6, 7, 11, 13, 16, 33, 88, 116, 130, 243, 245, 246, 247, 248, 268, 269, 271], "its": [4, 5, 6, 7, 11, 15, 17, 33, 44, 94, 99, 100, 108, 127, 240, 241, 243, 244, 245, 246, 247, 248, 266, 268, 269, 270, 281, 287, 292], "descript": [4, 6, 268, 269, 278, 288], "short": [4, 143, 212, 215, 243, 244, 245, 247, 256, 268, 280], "core": [4, 6, 7, 13, 20, 30, 32, 33, 35, 37, 39, 40, 42, 56, 83, 84, 85, 111, 127, 130, 131, 132, 141, 143, 212, 215, 234, 239, 240, 241, 243, 244, 245, 246, 247, 262, 266, 268, 269, 270, 271, 272, 273, 274, 275, 287, 293], "subdirectori": [4, 7, 12, 20, 33, 35, 42, 57, 61, 68, 74, 88, 132, 145, 177, 179, 214, 234, 241, 243, 245, 247, 268, 287, 292], "step": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30, 42, 43, 49, 61, 66, 68, 71, 74, 75, 83, 85, 87, 88, 94, 99, 100, 101, 102, 105, 106, 113, 127, 130, 132, 137, 139, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 158, 159, 160, 162, 163, 164, 166, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 189, 191, 192, 193, 194, 195, 197, 198, 200, 204, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 220, 233, 234, 235, 237, 238, 239, 240, 241, 242, 245, 246, 247, 250, 255, 257, 258, 259, 264, 266, 267, 269, 275, 277, 292, 293], "tempat": 4, "subdir": [4, 15, 20, 33, 42, 61, 68, 74, 88, 132, 145, 177, 179, 214, 243, 245, 268], "step1": 4, "step2": 4, "underli": 4, "framework": [4, 6, 8, 11, 12, 13, 16, 42, 101, 113, 231, 240, 243, 245, 246, 260, 266, 267, 268, 278, 288], "must": [4, 6, 10, 13, 16, 17, 20, 23, 24, 33, 36, 38, 111, 114, 115, 127, 130, 132, 180, 233, 243, 245, 246, 248, 268, 277, 292], "built": [4, 13, 105, 106, 111, 127, 231, 240, 248, 260, 267, 269, 274, 287], "execut": [4, 7, 13, 16, 20, 105, 106, 111, 127, 132, 231, 240, 243, 248, 260, 268, 269, 270, 271, 272, 273, 274, 275, 287], "standalon": [4, 13, 126, 127, 240, 248, 266, 267, 274, 288], "mpa": [4, 8, 10, 11, 12, 13, 15, 16, 17, 20, 26, 33, 35, 60, 78, 90, 97, 107, 109, 111, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 165, 166, 177, 186, 201, 222, 231, 232, 234, 235, 237, 238, 239, 240, 241, 243, 247, 248, 250, 251, 260, 261, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 283, 285, 286, 287, 288, 291, 292, 293], "befor": [4, 5, 7, 13, 15, 39, 127, 243, 246, 247, 248, 265, 268, 271, 275, 277, 281, 287], "w": [4, 5, 248, 266, 268, 287], "num": 4, "f": [4, 8, 10, 13, 245, 247, 248, 268, 269, 275, 280, 283, 287], "file": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 33, 34, 35, 36, 39, 41, 42, 44, 49, 52, 54, 60, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 132, 136, 137, 147, 150, 154, 160, 177, 179, 222, 231, 234, 235, 237, 238, 239, 240, 244, 245, 246, 247, 248, 250, 254, 260, 262, 264, 265, 266, 267, 271, 274, 275, 277, 280, 281, 286, 287, 290, 291, 292], "m": [4, 5, 13, 62, 69, 70, 76, 234, 239, 246, 248, 268, 270, 271, 272, 273, 275, 277, 280, 281, 285, 287], "mach": [4, 33, 127, 267, 270, 271, 272, 273, 274, 275, 287], "p": [4, 5, 248, 268, 269, 287], "suite_nam": [4, 7, 102, 104, 106, 111, 287], "specifi": [4, 5, 13, 15, 16, 17, 35, 127, 233, 243, 248, 264, 268, 269, 275, 280, 281, 286, 287, 291], "either": [4, 5, 6, 7, 11, 12, 13, 15, 63, 127, 130, 231, 243, 248, 266, 268, 269, 277, 285, 287], "onli": [4, 5, 6, 7, 13, 15, 16, 42, 127, 231, 233, 235, 239, 240, 243, 245, 247, 250, 260, 264, 267, 268, 269, 271, 274, 275, 277, 279, 280, 281, 285, 287, 290], "time": [4, 5, 6, 7, 13, 16, 17, 33, 42, 55, 115, 127, 130, 137, 145, 155, 174, 187, 188, 191, 202, 203, 206, 214, 233, 234, 235, 237, 238, 243, 244, 245, 246, 247, 248, 264, 265, 266, 269, 271, 275, 287, 293], "wai": [4, 6, 12, 13, 33, 65, 70, 127, 243, 245, 246, 247, 248, 265, 267, 268, 274, 277, 285], "altern": [4, 12, 262, 287], "ani": [4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 29, 41, 105, 106, 150, 160, 240, 241, 243, 244, 245, 246, 247, 248, 268, 269, 274, 280, 281, 285, 286, 287, 290, 291], "case_numb": 4, "multipl": [4, 6, 13, 16, 127, 232, 244, 247, 248, 268, 274, 280, 287], "separ": [4, 6, 8, 13, 15, 16, 243, 244, 266, 268, 281, 287], "space": [4, 5, 6, 8, 12, 127, 237, 238, 243, 248, 268, 271, 274, 287], "requir": [4, 5, 7, 13, 20, 30, 33, 34, 40, 88, 132, 145, 189, 204, 214, 231, 240, 243, 244, 245, 246, 247, 248, 260, 262, 265, 267, 268, 269, 274, 277, 278, 286, 287, 288, 291, 292], "few": [4, 12, 13, 20, 30, 33, 40, 84, 85, 127, 132, 234, 237, 238, 239, 243, 247, 268, 269, 274], "basic": [4, 6, 269, 271, 274, 287], "piec": [4, 240, 268], "inform": [4, 6, 7, 33, 88, 113, 122, 186, 201, 243, 245, 248, 269, 271, 278, 287, 288], "abl": [4, 123, 124, 125, 126, 128, 130, 243, 244, 246, 248, 268, 274, 287], "place": [4, 5, 13, 16, 114, 127, 243, 245, 262, 268, 274], "download": [4, 5, 7, 9, 33, 35, 41, 127, 150, 160, 245, 247, 248, 269, 287, 293], "some": [4, 5, 7, 8, 9, 10, 12, 13, 16, 42, 127, 233, 234, 241, 243, 245, 246, 247, 248, 265, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 287, 288, 292, 293], "data": [4, 9, 12, 15, 16, 17, 21, 33, 34, 35, 94, 107, 109, 110, 114, 115, 116, 122, 127, 177, 223, 229, 230, 243, 248, 267, 269, 270, 271, 272, 273, 274, 287, 292, 293], "locat": [4, 5, 13, 16, 17, 42, 105, 106, 111, 231, 243, 248, 250, 260, 266, 268, 269, 271, 274, 277, 280, 281, 287], "where": [4, 6, 13, 16, 33, 35, 42, 52, 56, 87, 105, 106, 111, 114, 127, 130, 223, 226, 229, 230, 231, 240, 242, 243, 245, 248, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 285, 286, 287, 291, 293], "There": [4, 5, 12, 223, 229, 230, 239, 241, 243, 247, 248, 250, 264, 265, 268, 269, 287], "r": [4, 275, 281], "tell": [4, 5, 127, 248], "re": [4, 5, 243, 247, 248, 266, 268, 269, 274, 275, 281], "leav": [4, 17, 235, 245, 269, 281], "unknown": [4, 127, 247, 274], "component_path": [4, 105, 106, 111, 231, 240, 260, 269, 287], "absolut": [4, 8, 33, 35, 51, 105, 106, 111, 231, 240, 243, 248, 260, 287], "landic": [4, 5, 9, 11, 18, 35, 60, 111, 240, 242, 243, 245, 246, 248, 266, 267, 268, 269, 287, 292, 293], "e3sm_submodul": [4, 231, 240, 248, 260, 262, 268], "mali": [4, 127, 240, 243, 248, 266, 268, 269, 287, 292], "dev": [4, 5, 6, 240, 242, 243, 246, 247, 248, 267, 278, 287, 288], "albani": [4, 123, 125, 126, 127, 240, 269, 270, 271, 272, 275, 287], "depend": [4, 7, 13, 15, 17, 33, 34, 41, 99, 100, 127, 150, 160, 235, 245, 248, 266, 267, 268, 269, 274, 275, 277, 281, 287, 292], "whether": [4, 7, 12, 16, 17, 20, 25, 33, 35, 42, 43, 49, 52, 54, 57, 101, 102, 105, 106, 111, 113, 114, 115, 118, 127, 130, 132, 145, 147, 154, 166, 169, 174, 191, 206, 214, 237, 238, 243, 246, 248, 265, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 283, 284, 285, 286, 287, 291], "omega": [4, 26, 116, 132, 135, 186, 201, 231, 240, 247, 248, 266, 268, 278, 283, 284, 287], "config": [4, 6, 7, 9, 10, 11, 12, 15, 16, 17, 20, 21, 24, 25, 26, 33, 34, 35, 42, 44, 52, 55, 56, 67, 69, 72, 83, 84, 85, 86, 87, 103, 105, 106, 111, 113, 114, 116, 117, 118, 119, 121, 122, 132, 135, 147, 154, 167, 174, 186, 191, 201, 206, 221, 223, 224, 225, 229, 230, 231, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 260, 262, 265, 267, 277, 287, 292], "point": [4, 5, 48, 54, 91, 127, 231, 233, 240, 245, 246, 247, 248, 260, 268, 269, 274, 287], "much": [4, 5, 13, 243, 268], "config_fil": [4, 105, 106, 111], "work_dir": [4, 10, 16, 33, 42, 56, 87, 105, 106, 111, 112, 113, 243, 245, 268], "base": [4, 7, 12, 13, 14, 16, 18, 33, 35, 37, 42, 46, 49, 67, 72, 74, 105, 106, 111, 127, 134, 136, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 260, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 292], "": [4, 5, 6, 7, 10, 11, 13, 15, 16, 33, 35, 36, 42, 44, 49, 75, 101, 108, 111, 113, 127, 130, 177, 179, 231, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 260, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 281, 283, 284, 286, 287, 288, 291], "recommend": [4, 6, 10, 17, 127, 243, 244, 247, 248, 268, 274], "itself": [4, 5, 6, 8, 33, 240, 242, 243, 245, 246, 248, 268, 287], "temp": 4, "scratch": [4, 5, 248, 268, 271, 275, 287], "avoid": [4, 243, 268], "confus": [4, 13, 247, 248, 268], "output": [4, 6, 7, 9, 11, 12, 13, 16, 18, 20, 33, 34, 36, 41, 42, 49, 77, 78, 85, 88, 102, 113, 130, 132, 137, 150, 160, 169, 177, 182, 194, 197, 209, 222, 234, 237, 238, 239, 245, 257, 264, 266, 269, 275, 287, 293], "compar": [4, 9, 16, 42, 105, 106, 111, 112, 113, 140, 142, 144, 152, 157, 162, 185, 200, 213, 216, 235, 239, 244, 247, 248, 254, 257, 264, 266, 268, 279, 280, 287, 290, 293], "previou": [4, 16, 243, 248, 268, 279, 287, 293], "same": [4, 6, 8, 13, 16, 34, 35, 42, 112, 113, 127, 130, 239, 241, 243, 244, 245, 246, 247, 248, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 285, 287, 292, 293], "baseline_dir": [4, 42, 105, 106, 111], "mani": [4, 5, 7, 8, 130, 241, 243, 245, 247, 248, 266, 267, 268, 280, 286, 291], "valid": [4, 6, 7, 9, 42, 223, 224, 225, 226, 227, 228, 229, 230, 234, 237, 238, 239, 247, 248, 267, 277, 280], "sure": [4, 5, 11, 15, 16, 113, 127, 141, 151, 161, 231, 234, 243, 247, 248, 253, 260, 266, 268, 269, 274, 275, 280, 281], "timer": [4, 42, 45, 112, 244, 245, 247], "ha": [4, 5, 8, 13, 16, 20, 30, 33, 34, 36, 40, 42, 44, 86, 94, 100, 113, 123, 125, 126, 127, 132, 145, 189, 204, 214, 231, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 260, 262, 265, 266, 268, 269, 277, 280, 285, 287], "both": [4, 5, 6, 7, 12, 13, 16, 25, 113, 127, 130, 147, 154, 234, 242, 243, 246, 248, 267, 268, 269, 279, 283, 284, 285], "custom": [4, 5, 7, 12, 15, 51, 52, 105, 106, 111, 231, 240, 248, 260, 269, 275, 287], "order": [4, 7, 12, 13, 130, 235, 240, 243, 244, 248, 268, 281, 284, 285, 287], "give": [4, 13, 16, 127, 243, 247, 248, 268, 269, 287], "predefin": 4, "so": [4, 5, 6, 8, 11, 12, 13, 16, 17, 20, 32, 100, 127, 130, 132, 223, 229, 230, 231, 234, 237, 238, 240, 243, 245, 247, 248, 260, 266, 268, 269, 274, 275, 277, 280, 281, 285, 287, 293], "after": [4, 5, 6, 13, 15, 17, 33, 35, 36, 75, 94, 100, 127, 224, 225, 231, 240, 243, 245, 248, 260, 268, 269, 271, 275, 287, 290], "c": [4, 5, 106, 127, 243, 248, 270, 271, 272, 273, 274, 275, 279, 287, 293], "argument": [4, 6, 8, 11, 13, 16, 17, 31, 33, 84, 85, 95, 114, 234, 243, 245, 247, 248, 268, 286, 291, 293], "resid": [4, 35], "test_suit": [4, 104, 243], "build": [4, 5, 9, 12, 13, 65, 70, 123, 124, 125, 126, 128, 231, 235, 240, 245, 247, 260, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275], "mpas_model": [4, 269], "overrid": [4, 12, 13, 38, 39, 41, 44, 45, 51, 65, 68, 69, 70, 130, 150, 160, 180, 243, 245, 247, 268, 269, 275, 287], "mai": [4, 5, 6, 7, 11, 12, 13, 16, 34, 36, 39, 99, 114, 127, 231, 233, 243, 244, 245, 246, 248, 250, 260, 262, 265, 266, 268, 269, 275, 281, 285, 286, 287, 291, 292], "baselin": [4, 5, 7, 9, 16, 42, 105, 106, 111, 112, 113, 140, 142, 144, 152, 157, 162, 168, 185, 200, 213, 216, 234, 237, 238, 239, 244, 247, 257, 264, 266, 268, 279, 287], "comparison": [4, 16, 42, 112, 113, 245, 268, 269], "against": [4, 7, 9, 16, 113, 168, 234, 237, 238, 239, 243, 264, 268, 279], "oppos": [4, 25, 147, 154, 166, 169, 174, 191, 206, 268], "task": [4, 7, 9, 10, 13, 15, 20, 27, 30, 32, 33, 37, 39, 40, 83, 84, 85, 88, 127, 130, 132, 134, 136, 145, 189, 204, 214, 234, 237, 238, 243, 247, 266, 267, 268, 270, 271, 272, 273, 274, 275], "parallel": [4, 15, 20, 30, 33, 39, 40, 127, 132, 243, 247, 248, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 287, 292], "been": [4, 5, 13, 16, 33, 42, 44, 94, 105, 106, 111, 123, 125, 126, 127, 130, 169, 182, 194, 197, 209, 231, 240, 243, 245, 247, 248, 260, 265, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 287], "skip_step": 4, "wherea": [4, 11, 243, 268, 279, 292], "typic": [4, 6, 8, 12, 13, 15, 16, 17, 33, 102, 127, 240, 241, 243, 246, 248, 266, 268, 269, 274, 277, 285, 287, 292], "clone": [4, 5, 127, 231, 241, 248, 260, 268, 287], "than": [4, 5, 7, 8, 10, 12, 13, 33, 35, 40, 51, 127, 145, 189, 204, 214, 234, 243, 244, 247, 248, 265, 268, 277, 280, 285, 293], "just": [4, 13, 20, 30, 33, 40, 57, 127, 132, 243, 247, 248, 266, 268, 271, 275], "pickl": [4, 7, 99, 100, 243, 268, 287], "latter": [4, 42, 127], "conveni": [4, 15, 223, 229, 230, 243, 266, 268, 269, 287], "tab": [4, 287], "complet": [4, 7, 22, 23, 24, 268, 287], "explicitli": [4, 6, 16, 130, 234, 237, 238, 243, 248, 268, 269, 287], "select": [4, 7, 115, 243, 248, 268], "two": [4, 9, 151, 234, 235, 237, 238, 239, 240, 243, 244, 246, 247, 248, 253, 264, 268, 280, 281, 283, 284, 290, 292], "edit": [4, 6, 113, 248, 268, 287], "steps_to_run": [4, 16, 42, 102, 113, 243, 245, 268, 269], "test_cas": [4, 7, 8, 15, 20, 33, 46, 47, 61, 68, 74, 87, 88, 99, 100, 105, 106, 112, 113, 132, 145, 148, 153, 158, 163, 169, 172, 175, 177, 179, 182, 189, 192, 194, 197, 204, 207, 209, 214, 217, 219, 243, 245, 255, 258, 268, 269, 287], "init": [4, 5, 6, 13, 17, 30, 40, 139, 231, 233, 240, 243, 245, 247, 248, 260, 262, 269, 280, 281, 283, 284, 287, 293], "full_run": [4, 152, 264, 280, 290], "restart_run": [4, 152, 264, 280, 290], "Or": [4, 243, 269], "accomplish": [4, 243, 247], "thing": [4, 123, 124, 125, 126, 127, 128, 130, 243, 247, 267], "skip": [4, 7, 16, 113, 245, 293], "take": [4, 5, 6, 10, 12, 13, 16, 51, 127, 243, 244, 246, 248, 268, 281, 293], "preced": [4, 51], "over": [4, 8, 13, 51, 114, 243, 247, 267, 268, 277, 280, 285, 287], "special": [4, 266, 286], "databas": [4, 5, 7, 10, 15, 18, 20, 33, 35, 132, 243, 274], "polaris_cach": [4, 7, 18, 243], "symlink": [4, 7, 13, 33, 35, 245, 247, 248], "input": [4, 7, 9, 10, 15, 28, 33, 34, 35, 36, 41, 78, 150, 160, 234, 237, 238, 239, 268, 285], "structur": [4, 12, 26, 135, 242, 245, 267, 268], "without": [4, 16, 35, 243, 247, 248, 268, 269, 273, 274, 283, 284, 286, 287], "redund": [4, 223, 229, 230, 234, 268], "stamp": 4, "revis": [4, 269], "remov": [4, 13, 16, 102, 234, 237, 238, 248, 268], "older": 4, "ones": [4, 223, 229, 230, 247, 268], "version": [4, 5, 14, 28, 51, 87, 112, 113, 127, 231, 234, 240, 241, 243, 246, 247, 248, 260, 261, 267, 268, 269, 274, 275, 278, 280, 281, 287, 288], "A": [4, 5, 6, 7, 10, 12, 13, 15, 17, 18, 21, 23, 24, 26, 33, 34, 35, 37, 42, 46, 50, 51, 57, 61, 62, 65, 68, 69, 70, 74, 80, 83, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 127, 135, 138, 141, 145, 148, 151, 153, 158, 161, 163, 165, 166, 169, 172, 175, 177, 179, 181, 182, 189, 192, 194, 196, 197, 204, 207, 209, 211, 214, 217, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 252, 253, 255, 258, 266, 267, 268, 270, 271, 272, 273, 274, 275, 280, 281, 283, 284, 286, 287, 290, 291], "aid": 4, "updat": [4, 6, 7, 20, 22, 24, 29, 30, 39, 40, 108, 126, 127, 134, 145, 214, 231, 234, 237, 238, 243, 260, 265, 267, 268, 287], "cached_fil": [4, 18, 243], "json": [4, 7, 18, 49, 243, 275], "anvil": [4, 5, 127, 243, 269, 274, 287], "chrysali": [4, 5, 127, 243, 268, 269, 274, 287], "sinc": [4, 13, 16, 99, 122, 234, 243, 245, 247, 248, 268, 280, 281, 283, 284, 286, 291], "copi": [4, 5, 7, 35, 49, 105, 106, 111, 268, 271, 287], "onto": [4, 248], "lcrc": [4, 5, 7, 10, 49, 243, 247, 269, 270, 272, 274, 287], "server": [4, 7, 35, 49, 243, 247, 269, 275], "whose": [4, 243], "global_ocean": [4, 8, 10, 13, 240, 243, 245, 247, 248, 269, 287, 293], "qu240": [4, 13, 243, 247, 248, 269, 287], "mesh": [4, 6, 9, 15, 20, 33, 78, 90, 97, 115, 130, 132, 133, 134, 136, 143, 146, 148, 166, 169, 170, 172, 173, 175, 177, 179, 182, 186, 190, 192, 194, 197, 201, 205, 207, 209, 212, 215, 217, 223, 229, 230, 233, 234, 237, 238, 239, 241, 243, 245, 246, 247, 248, 255, 256, 266, 267, 269, 277, 279, 287, 293], "phc": [4, 243, 277, 293], "ocean_cached_fil": 4, "pr": [4, 5, 287, 293], "look": [4, 5, 6, 10, 16, 246, 247, 268, 269], "someth": [4, 6, 89, 93, 96, 127, 248, 268], "culled_mesh": [4, 243, 268], "nc": [4, 10, 11, 12, 13, 15, 16, 17, 88, 243, 245, 247, 268], "210803": 4, "culled_graph": [4, 243, 268], "info": [4, 11, 13, 20, 27, 78, 127, 132, 243, 268], "critical_passages_mask_fin": 4, "initial_st": [4, 17, 243, 245, 268], "init_mode_forcing_data": [4, 243], "date_str": [4, 49], "let": [4, 243, 248, 266, 268, 269, 275], "string": [4, 8, 13, 35, 92, 98, 127, 248], "choos": [4, 243, 247, 248, 268, 270, 271, 272, 273, 275, 292], "todai": [4, 49], "dry_run": [4, 49], "saniti": [4, 268], "check": [4, 5, 16, 113, 248, 266, 268, 269, 271, 275, 287, 293], "print": [4, 11, 16, 57, 113, 118, 243, 247, 293], "stdout": [4, 11, 33, 42, 243], "translat": [4, 26, 130, 135], "compass": [4, 88, 231, 243, 247, 266, 268], "convert": [4, 8, 12, 13, 130, 243, 268], "namelist": [4, 6, 7, 9, 20, 21, 22, 25, 26, 28, 29, 32, 41, 105, 106, 111, 121, 122, 132, 135, 136, 147, 150, 154, 160, 231, 234, 235, 237, 238, 240, 243, 245, 246, 247, 250, 260, 262, 264, 267, 268, 269, 285], "stream": [4, 6, 7, 9, 20, 23, 25, 28, 41, 116, 121, 122, 136, 147, 150, 154, 160, 231, 233, 234, 237, 238, 239, 240, 243, 245, 246, 247, 260, 264, 269, 286, 291], "yaml": [4, 9, 20, 21, 24, 25, 26, 127, 132, 135, 136, 147, 154, 234, 237, 238, 239, 243, 267, 268, 271, 275], "e": [4, 5, 6, 10, 13, 26, 33, 34, 44, 46, 60, 116, 127, 135, 231, 241, 243, 244, 246, 247, 248, 260, 265, 266, 267, 268, 269, 275, 277, 280, 281, 283, 284, 285, 286, 287, 291, 292, 293], "g": [4, 5, 6, 10, 13, 26, 33, 34, 44, 46, 60, 116, 127, 130, 135, 231, 241, 243, 244, 246, 247, 248, 260, 265, 266, 267, 268, 269, 277, 280, 281, 283, 284, 285, 286, 287, 291, 293], "forward": [4, 6, 13, 16, 33, 137, 143, 144, 153, 155, 157, 185, 200, 212, 213, 215, 216, 231, 240, 243, 245, 247, 256, 257, 260, 269, 280, 281, 283, 284, 286, 291], "becaus": [4, 5, 6, 10, 11, 12, 13, 16, 33, 34, 233, 243, 245, 247, 248, 268, 271, 273, 275, 287], "don": [4, 5, 6, 13, 127, 130, 243, 245, 247, 248, 268, 273, 287, 292], "format": [4, 6, 10, 12, 13, 116, 122, 243, 244, 245, 246, 248, 268, 269, 271], "note": [4, 6, 15, 16, 214, 268, 275], "keyword": [4, 6, 13, 16, 17, 235, 243, 245, 281], "top": [4, 17, 223, 224, 225, 226, 227, 228, 229, 230, 233, 241, 268, 277], "ignor": [4, 92, 98], "get": [4, 5, 6, 8, 10, 11, 13, 15, 20, 21, 22, 23, 24, 33, 42, 43, 50, 55, 63, 83, 94, 101, 127, 130, 132, 242, 243, 245, 246, 247, 248, 266, 269, 277, 287], "pars": [4, 8, 13, 21, 22, 23, 24, 80, 107, 109], "valu": [4, 6, 8, 13, 16, 17, 21, 26, 113, 114, 115, 118, 135, 155, 234, 240, 243, 245, 246, 247, 267, 268, 269, 277, 280, 281, 285], "doesn": [4, 5, 8, 122, 127, 243, 245, 268, 269, 274, 287], "matter": [4, 268], "usabl": 4, "try": [5, 13, 54, 127, 247, 248, 265, 268, 269, 271, 275, 287], "stai": [5, 248], "sync": 5, "mpi": [5, 13, 15, 88, 123, 126, 127, 132, 134, 136, 234, 237, 238, 243, 248, 265, 267, 268, 270, 271, 272, 273, 275, 287], "librari": [5, 13, 123, 127, 248, 268, 270, 271, 272, 273, 274, 275, 287], "netcdf": [5, 127, 137, 239, 269, 270, 271, 272, 273, 274, 275], "fortran": [5, 127, 270, 271, 272, 273, 274, 275], "pnetcdf": [5, 127, 270, 271, 272, 273, 274, 275], "mkl": [5, 127], "linear": [5, 17, 114, 115, 235, 237, 268, 280, 281, 283], "algebra": 5, "lib": [5, 127], "esmf": [5, 248, 287], "scorpio": [5, 248, 274, 287], "forg": [5, 127, 267, 287], "python": [5, 6, 7, 8, 21, 39, 44, 241, 243, 245, 246, 247, 248, 266, 267, 268, 269, 274, 275, 287], "relat": [5, 10, 12, 13, 127, 130, 231, 234, 237, 238, 239, 243, 246, 247, 248, 265, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 285, 286, 287, 288], "aren": [5, 10, 33, 34, 127, 243, 247, 248, 268, 293], "brief": [5, 6, 268], "tour": 5, "login": [5, 127, 248, 271, 275], "node": [5, 13, 20, 32, 33, 37, 40, 55, 83, 84, 85, 127, 132, 243, 244, 247, 248, 268, 269, 270, 271, 272, 273, 274, 275, 287], "bootstrap": 5, "rest": [5, 137, 228, 277, 281], "setup": [5, 6, 8, 10, 13, 16, 25, 30, 33, 34, 40, 42, 127, 147, 154, 174, 191, 206, 234, 237, 238, 239, 245, 247, 248, 250, 266, 267, 268, 269, 281, 287, 292], "u": [5, 243, 268, 274, 275, 283, 284], "unifi": [5, 127, 248, 275], "find": [5, 6, 52, 64, 86, 127, 231, 247, 248, 265, 268, 269, 287], "diagnost": [5, 269, 270, 271, 273, 274, 275, 287], "across": [5, 6, 13, 17, 234, 243, 244, 245, 246, 247, 248, 266, 268, 276, 280, 281], "analysi": [5, 17, 130, 234, 245, 247, 266, 267, 269, 281, 283, 284, 292], "e3sm_diag": 5, "zppy": 5, "know": [5, 8, 10, 12, 130, 243, 247, 248, 268], "job": [5, 127, 248, 267, 268, 270, 271, 272, 273, 275], "cach": [5, 18, 20, 33, 35, 105, 106, 132, 267, 269, 274, 279, 287, 293], "own": [5, 6, 7, 10, 11, 17, 33, 127, 243, 245, 247, 248, 266, 268, 269, 281, 287, 292], "config_machin": 5, "xml": [5, 13, 107, 109, 110, 122, 260, 266], "here": [5, 8, 11, 13, 15, 16, 127, 234, 237, 238, 239, 242, 243, 245, 246, 247, 248, 264, 268, 269, 270, 271, 272, 273, 274, 275, 285, 286, 287, 291, 293], "close": [5, 64, 127, 267, 281], "ey": 5, "master": [5, 231, 260, 288], "happen": [5, 8, 11, 13, 15, 99, 113, 243, 245, 268, 281], "me": [5, 268], "dev_quick_start": 5, "function": [5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 41, 62, 69, 127, 130, 139, 150, 160, 243, 245, 246, 247, 267, 268, 281, 292], "fork": [5, 268], "haven": [5, 268], "xylar": [5, 16, 127, 268, 269, 274], "mkdir": [5, 248], "now": [5, 127, 243, 248, 268, 269, 274], "involv": [5, 7, 13, 16, 113, 243, 245, 266, 268], "coupl": [5, 265, 267], "alpha": [5, 123, 124, 125, 126, 127, 128, 268], "beta": 5, "rc": 5, "simplify_local_mach": 5, "often": [5, 17, 33, 243, 244, 245, 246, 247, 248, 266, 268, 269, 292, 293], "stand": 5, "omit": [5, 243, 287], "suffix": [5, 35, 106, 243], "onc": [5, 13, 234, 248, 268, 269, 281, 287], "releas": [5, 127, 247, 267, 274, 278, 287], "spack_for_mache_1": 5, "12": [5, 12, 63, 264, 268, 271, 290], "worktre": [5, 267, 268], "my": [5, 127, 271], "fetch": [5, 248, 268], "out": [5, 7, 12, 82, 86, 115, 127, 241, 243, 247, 248, 269, 277, 287], "checkout": [5, 248, 268], "mambaforg": [5, 248, 268, 274, 287], "manual": [5, 13, 16, 42, 43, 243, 245, 292], "linux": [5, 127, 248, 274], "x86_64": [5, 127], "our": [5, 127, 247, 268, 287], "found": [5, 8, 13, 117, 127, 247, 248, 267, 268, 270, 271, 272, 273, 274, 275], "exist": [5, 6, 8, 26, 33, 36, 54, 107, 109, 111, 127, 135, 234, 243, 247, 248, 265, 268, 274, 293], "miniconda3": [5, 248], "alwai": [5, 6, 8, 11, 16, 51, 127, 130, 231, 240, 243, 247, 248, 260, 268, 269], "pleas": [5, 127, 247, 248, 268, 287], "start": [5, 6, 7, 13, 108, 127, 233, 234, 244, 246, 247, 267, 271, 274, 275, 278, 288, 290], "definit": [5, 13, 268], "defin": [5, 6, 7, 8, 12, 13, 14, 17, 33, 42, 68, 92, 98, 105, 106, 111, 127, 231, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 260, 262, 264, 266, 267, 269, 274, 277, 280, 281, 285, 292, 293], "export": [5, 265], "conda_bas": 5, "home": [5, 16, 127, 248, 268, 269, 271, 274, 275], "readi": [5, 243, 268, 275], "configure_polaris_env": [5, 127, 248, 265, 268], "py": [5, 11, 13, 60, 127, 240, 246, 247, 248, 266, 268, 269], "mache_fork": 5, "mache_branch": 5, "update_spack": [5, 127, 248], "tmpdir": [5, 127], "group": [5, 6, 8, 13, 18, 19, 33, 42, 46, 47, 50, 138, 139, 141, 143, 145, 151, 155, 158, 161, 163, 165, 166, 181, 184, 196, 199, 211, 212, 215, 219, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 250, 252, 253, 256, 260, 264, 266, 267, 269, 270, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293], "spack_temp": 5, "spack_test": 5, "intel": [5, 127, 274], "gnu": [5, 127, 248, 273, 274, 287], "openmpi": [5, 123, 127, 248, 267, 270, 272, 273, 287], "impi": [5, 123, 127, 270, 273], "recreat": [5, 248, 265], "request": [5, 6, 13, 20, 27, 29, 127, 132, 224, 225, 243, 247, 248, 265, 268, 269, 281], "twice": [5, 268], "deploy": [5, 248], "even": [5, 11, 12, 13, 16, 35, 51, 127, 243, 247, 248, 268, 269, 274, 287], "prebootstrap": 5, "load": [5, 99, 124, 127, 128, 248, 267, 268, 269, 270, 271, 272, 273, 274, 275], "activ": [5, 127, 274, 275, 287], "differ": [5, 13, 15, 16, 51, 65, 70, 113, 127, 130, 145, 155, 231, 234, 240, 241, 243, 244, 245, 246, 247, 260, 266, 268, 269, 271, 275, 280, 281, 283, 284, 286, 291], "On": [5, 6, 12, 127, 248, 274], "tmp": [5, 127], "safe": [5, 13, 16, 243, 248, 280], "strictli": [5, 12, 247, 268], "necessari": [5, 6, 12, 127, 240, 268], "good": [5, 11, 33, 243, 248, 268], "idea": [5, 11, 268], "fresh": [5, 268], "Be": [5, 275], "awar": [5, 6, 127, 240, 268, 274], "with_petsc": [5, 248], "wa": [5, 7, 16, 52, 112, 113, 127, 140, 142, 144, 152, 157, 162, 185, 200, 213, 216, 243, 245, 247, 248, 257, 265, 268, 269, 277, 287], "limit": [5, 244, 248, 280], "amount": [5, 20, 30, 33, 40, 132, 243, 276, 285], "team": [5, 127, 267], "petsc_support": 5, "txt": [5, 7, 111, 244, 265], "with_albani": [5, 248], "albany_support": 5, "encount": [5, 244, 265], "error": [5, 16, 33, 42, 127, 130, 170, 235, 237, 238, 243, 248, 267, 268, 283, 284], "dev_polaris_0_2_0_gnu_mpich": 5, "armpl": 5, "dure": [5, 7, 10, 13, 25, 33, 42, 147, 154, 174, 191, 206, 243, 245, 247, 248, 268, 269, 287, 292, 293], "attempt": [5, 127, 267, 274], "first": [5, 8, 13, 105, 106, 127, 234, 237, 238, 239, 243, 245, 246, 247, 248, 265, 268, 270, 271, 272, 273, 274, 275, 280, 281, 285, 287], "sh": [5, 123, 124, 125, 126, 127, 128, 248, 265, 268, 270, 271, 272, 273, 275, 287], "build_": 5, "command": [5, 9, 14, 31, 33, 39, 84, 85, 87, 95, 127, 243, 247, 248, 266, 267, 268, 271, 274, 275, 287], "pscratch": 5, "suggest": [5, 127, 265], "correctli": 5, "seem": [5, 13, 268, 271, 275], "switch": [5, 268, 269], "v0": 5, "18": [5, 269, 271], "19": 5, "submodul": [5, 231, 240, 248, 260, 268, 287], "serv": [5, 105, 106, 111, 246, 268], "kind": [5, 268], "whichev": [5, 231, 260, 277], "load_dev_polaris_0": [5, 123, 124, 125, 126, 127, 128, 268], "0_chrysalis_intel_openmpi": 5, "recurs": [5, 231, 247, 248, 260, 268, 287], "pio": [5, 20, 29, 32, 132, 234, 237, 238], "openmp": [5, 13, 20, 30, 33, 40, 85, 123, 125, 126, 132, 145, 189, 204, 214, 243, 268, 270, 271, 272, 273, 275], "ifort": [5, 123, 125, 127, 268, 270, 272], "ac": [5, 268], "test_20230202": 5, "ocean_pr_chrys_intel_openmpi": 5, "sbatch": [5, 268, 274, 287], "job_script": [5, 268, 287], "bash": [5, 248, 265, 268, 287], "termin": [5, 7, 16, 127, 243, 248, 268], "isn": [5, 243, 247, 268], "ll": [5, 17, 127, 235, 247, 268, 275, 281], "warn": [5, 281, 283, 284], "0_chrysalis_gnu_openmpi": 5, "e3sm_chrys_gnu_openmpi": 5, "gfortran": [5, 123, 125, 126, 127, 248, 270, 272], "ocean_pr_chrys_gnu_openmpi": 5, "explor": [5, 243, 246, 268, 277], "util": [5, 247, 284], "matrix": 5, "sever": [5, 11, 127, 243, 245, 246, 247, 248, 266, 267, 268, 286, 287, 293], "automat": [5, 6, 8, 11, 13, 17, 127, 130, 243, 245, 247, 248, 268, 269, 270, 272, 273, 274, 275, 287], "0_chrysalis_gnu_openmpi_albani": 5, "true": [5, 6, 8, 12, 13, 16, 17, 20, 43, 52, 54, 113, 114, 115, 118, 123, 124, 125, 126, 127, 128, 132, 215, 233, 243, 245, 246, 248, 268, 269, 270, 271, 272, 273, 274, 275, 280, 287, 292], "full_integr": [5, 287, 293], "landice_full_chrys_gnu_openmpi": 5, "nonhydrostat": 5, "yet": [5, 126, 127, 130, 243, 247, 268], "integr": [5, 16, 155, 234, 245, 247, 268, 280, 281, 286, 291], "sara": 5, "calandrini": 5, "nonhydro": 5, "0_chrysalis_intel_openmpi_petsc": 5, "scalandr": 5, "nonhydro_chrys_intel_openmpi": 5, "grep": [5, 271, 287], "245": 5, "246": 5, "non": [5, 13, 16, 233, 243, 268, 287], "care": [5, 10, 12, 243, 246, 248, 268], "affect": [5, 13, 16, 243, 248, 268], "temporari": [5, 127], "begin": [5, 6, 16, 234, 243, 248, 262, 267, 268, 274, 280, 281, 285], "anymor": 5, "best": [5, 15, 127, 243, 248], "hard": [5, 268, 280, 285], "reset": 5, "sphinx": 6, "written": [6, 7, 33, 42, 56, 114, 115, 243, 245, 268, 290], "myst": [6, 268], "tip": [6, 248], "easi": [6, 35, 247, 268], "tree": [6, 107, 109, 122, 288], "pull": [6, 127, 247, 248, 268, 269], "guid": [6, 130, 234, 237, 238, 239, 244, 247, 264, 268, 271, 274, 278, 288], "baroclinic_channel": [6, 13, 16, 231, 236, 240, 243, 245, 246, 247, 266, 268, 278, 282, 287, 292, 293], "label": [6, 114, 274, 287], "prepend": 6, "them": [6, 7, 13, 15, 16, 20, 32, 127, 132, 235, 240, 243, 245, 246, 247, 248, 266, 268, 273, 274, 279, 287, 292], "baroclin": [6, 46, 138, 139, 141, 143, 145, 148, 151, 155, 158, 161, 163, 214, 219, 234, 243, 245, 246, 268, 280], "channel": [6, 46, 138, 139, 141, 143, 145, 148, 151, 155, 158, 161, 163, 214, 219, 234, 243, 245, 265, 268, 280], "And": [6, 13, 248, 268], "becom": [6, 243, 245, 268], "who": [6, 248, 268, 269, 275], "citat": 6, "overview": [6, 267, 271, 275], "comment": [6, 244, 269], "appli": [6, 12, 13, 57, 233, 246, 268, 280, 285, 286, 291], "vertic": [6, 17, 233, 234, 237, 238, 239, 243, 269, 276, 278], "grid": [6, 12, 15, 62, 69, 73, 76, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 130, 177, 221, 222, 223, 224, 225, 226, 229, 230, 234, 235, 237, 238, 239, 243, 262, 268, 269], "initi": [6, 7, 33, 115, 137, 140, 143, 148, 165, 175, 192, 207, 212, 215, 217, 234, 235, 237, 238, 239, 243, 245, 246, 247, 256, 265, 266, 267, 269, 277, 279, 292], "condit": [6, 33, 140, 143, 148, 165, 175, 192, 207, 212, 215, 217, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 256, 264, 266, 267, 269, 279, 292], "forc": [6, 16, 239, 264, 268, 292], "common": [6, 8, 11, 39, 42, 46, 127, 234, 235, 237, 238, 239, 243, 244, 245, 246, 247, 265, 266, 268, 269, 274, 275, 287, 292, 293], "refer": [6, 13, 33, 137, 155, 223, 226, 229, 230, 243, 245, 247, 248, 266, 267, 268, 277, 280, 287], "wish": [6, 13, 243, 248, 268, 287, 293], "test_group_nam": 6, "specif": [6, 8, 13, 44, 127, 231, 240, 241, 246, 260, 262, 267, 268, 269, 271, 274, 280, 286, 287, 291, 293], "share": [6, 17, 127, 130, 139, 231, 234, 237, 238, 239, 240, 241, 243, 245, 246, 248, 250, 264, 267, 270, 271, 272, 273, 274, 275, 276, 280, 286, 287, 291], "public": [6, 10, 243, 268, 269], "api": [6, 11, 267, 268], "underscor": [6, 268], "md": [6, 268], "eval": 6, "rst": [6, 13, 268], "currentmodul": 6, "autosummari": 6, "toctre": 6, "baroclinicchannel": [6, 139, 141, 143, 151, 155, 161, 234, 240, 245, 268], "baroclinicchanneltestcas": [6, 234], "compute_cell_count": [6, 130, 234, 237, 238, 268], "dynamic_model_config": [6, 234, 237, 238, 268], "ot": [6, 268], "numpydoc": [6, 268], "text": [6, 7, 280, 281, 285], "restructuredtext": 6, "compute_land_ice_pressure_and_draft": 6, "ssh": [6, 130, 223, 225, 226, 227, 228, 229, 230, 231, 237, 238, 245, 268, 269, 271, 275, 283, 284], "modifysshmask": 6, "ref_dens": 6, "comput": [6, 12, 73, 127, 130, 132, 133, 137, 146, 170, 173, 186, 190, 201, 205, 226, 227, 228, 234, 235, 237, 238, 239, 243, 248, 271, 272, 274, 275, 280, 283, 284, 287], "pressur": [6, 231, 269, 283, 284], "overli": [6, 268], "ic": [6, 130, 231, 247, 248, 262, 264, 267, 268, 269, 271, 277, 290, 291, 292], "shelf": [6, 130, 246, 247, 268, 269, 277], "draft": [6, 277], "paramet": [6, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 40, 42, 43, 46, 47, 49, 52, 54, 55, 56, 57, 60, 61, 63, 64, 65, 68, 73, 74, 76, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 132, 135, 137, 139, 141, 143, 145, 147, 148, 151, 153, 154, 155, 158, 161, 163, 166, 169, 170, 172, 174, 175, 177, 179, 182, 184, 186, 187, 188, 189, 191, 192, 194, 197, 199, 201, 202, 203, 204, 206, 207, 209, 214, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 243, 245, 246, 253, 256, 258, 280, 281, 283, 284, 285], "xarrai": [6, 15, 17, 115, 223, 224, 225, 226, 227, 228, 229, 230, 243, 268], "dataarrai": [6, 186, 187, 188, 201, 202, 203, 224, 225, 226, 227, 228, 243], "sea": [6, 130, 186, 188, 201, 203, 225, 226, 227, 228, 231, 262, 264, 267, 268, 269, 277, 283, 284, 290], "surfac": [6, 130, 186, 188, 201, 203, 225, 226, 227, 228, 231, 233, 239, 264, 268, 269, 277, 280, 283, 284, 285], "height": [6, 130, 186, 188, 201, 203, 225, 226, 227, 228, 231, 268, 269, 277, 283, 284], "mask": [6, 223, 226, 229, 230, 243, 268, 269, 277], "landicepressur": [6, 245], "deviat": 6, "float": [6, 8, 13, 21, 61, 63, 64, 68, 73, 93, 113, 115, 139, 141, 143, 145, 148, 151, 155, 158, 161, 170, 186, 187, 188, 189, 192, 199, 201, 202, 203, 204, 207, 214, 215, 217, 243, 245, 268], "densiti": [6, 12, 130, 268], "seawat": 6, "displac": 6, "land": [6, 130, 231, 267, 268, 269, 277, 292], "landicedraft": 6, "equal": [6, 239, 243, 247, 285], "entri": [6, 48, 81, 105, 106], "line": [6, 9, 31, 33, 84, 85, 95, 127, 243, 244, 247, 248, 267, 287], "type": [6, 13, 15, 17, 21, 90, 97, 122, 127, 212, 215, 217, 243, 245, 246, 247, 248, 255, 260, 265, 266, 268, 269, 280, 281, 283, 284, 285, 286, 293], "side": 6, "colon": 6, "doubl": [6, 130, 243, 244, 268], "back": [6, 268, 271, 287], "quot": 6, "interfer": 6, "abil": 6, "arg": [6, 11, 33, 84, 85, 243], "indic": [6, 7, 13, 15, 16, 33, 34, 106, 113, 115, 127, 226, 241, 243, 265, 268, 269, 277, 285], "next": [6, 127, 246, 268, 277, 287], "indent": [6, 243], "obviou": [6, 13, 268], "none": [6, 13, 16, 20, 23, 24, 30, 33, 34, 35, 40, 42, 49, 52, 56, 57, 59, 61, 68, 74, 78, 87, 88, 89, 92, 93, 96, 98, 102, 106, 107, 111, 112, 113, 114, 115, 117, 121, 132, 133, 145, 146, 173, 189, 190, 201, 204, 205, 214, 243, 268, 277, 280, 281, 283, 284, 285, 286, 290], "replac": [6, 8, 13, 21, 22, 23, 24, 25, 26, 42, 54, 80, 107, 117, 118, 127, 135, 147, 154, 245, 247, 268, 269, 287, 291], "els": [6, 7, 127, 243, 268], "further": [6, 245, 246, 275, 286, 291], "rais": [6, 8, 16, 33, 36, 52, 54, 113, 130, 243, 245, 246, 247, 268], "list_cas": 7, "list_machin": [7, 247], "list_suit": 7, "anywher": [7, 11, 127, 248], "setup_cas": [7, 8], "object": [7, 11, 15, 22, 23, 24, 80, 99, 100, 103, 107, 112, 113, 116, 117, 121, 122, 186, 201, 240, 245, 246, 247, 268], "later": [7, 16, 20, 30, 33, 40, 51, 113, 127, 132, 243, 268, 269], "contrast": 7, "read": [7, 18, 22, 23, 24, 33, 34, 42, 53, 79, 80, 116, 233, 243, 245, 268], "properti": [7, 13, 233, 243, 274, 281], "clean_cas": 7, "delet": [7, 247, 248, 265, 287], "constant": [7, 61, 68, 69, 130, 233, 268, 280, 281, 283, 285, 286, 291], "setup_suit": 7, "clean_suit": 7, "write": [7, 11, 12, 14, 17, 116, 222, 243, 245, 248, 264, 268], "proven": [7, 9, 51, 267, 269], "save": [7, 17, 52, 76, 127, 234, 243, 245, 246, 268, 274, 279, 280], "dictionari": [7, 8, 13, 17, 18, 21, 23, 24, 26, 33, 34, 37, 42, 46, 51, 80, 83, 87, 106, 107, 113, 116, 117, 118, 135, 235, 243, 245, 246, 247, 268, 281], "target": [7, 10, 15, 20, 35, 54, 56, 88, 127, 130, 132, 234, 237, 238, 243, 245, 268, 281], "minimum": [7, 56, 115, 130, 132, 234, 237, 238, 243, 268, 269, 277, 280, 281, 283, 284, 285, 286, 291], "determin": [7, 12, 13, 17, 35, 39, 42, 122, 127, 130, 136, 234, 235, 237, 238, 243, 246, 268, 277, 280, 281, 283, 284, 286, 287, 291], "maximum": [7, 16, 113, 115, 268, 269, 277], "product": 7, "ntask": [7, 13, 15, 20, 30, 33, 37, 40, 84, 85, 88, 130, 132, 145, 189, 204, 214, 243, 245, 268], "cpus_per_task": [7, 13, 33, 37, 40, 84, 85, 243], "attribut": [7, 11, 12, 13, 16, 39, 92, 98, 237, 238, 246, 268], "quickli": 7, "caveat": 7, "sit": 7, "idl": 7, "fraction": [7, 268, 277, 280, 281, 283, 284, 285, 286], "runtim": [7, 25, 39, 147, 154, 174, 191, 206, 243, 245, 268], "min_task": [7, 13, 15, 20, 30, 33, 40, 84, 85, 88, 130, 132, 145, 189, 204, 214, 243, 245, 268], "min_cpus_per_task": [7, 13, 33, 40, 84, 85, 243], "fewest": 7, "least": [7, 12, 16, 240, 248], "fail": [7, 13, 16, 20, 30, 33, 40, 42, 52, 113, 127, 132, 145, 189, 204, 214, 243, 267, 268, 269, 281, 283, 284], "run_test": [7, 243, 245], "run_single_step": 7, "oper": [7, 41, 127, 150, 160, 243, 245, 293], "log": [7, 9, 16, 17, 33, 42, 85, 113, 114, 115, 243, 245, 248, 267, 287], "figur": [7, 239, 241, 243, 246, 269], "cpu": [7, 13, 127, 243, 268, 287], "per": [7, 13, 20, 30, 32, 33, 40, 84, 85, 127, 130, 132, 243, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 283, 284, 286, 291], "method": [7, 8, 12, 13, 15, 18, 20, 25, 26, 33, 34, 38, 39, 42, 43, 44, 45, 46, 51, 60, 61, 65, 68, 69, 70, 74, 75, 88, 94, 116, 130, 131, 132, 135, 138, 139, 141, 143, 145, 147, 148, 151, 153, 154, 155, 158, 161, 163, 165, 166, 169, 172, 174, 175, 177, 179, 180, 181, 182, 184, 186, 189, 191, 192, 194, 196, 197, 199, 201, 204, 206, 207, 209, 211, 212, 214, 215, 217, 219, 234, 235, 237, 238, 240, 243, 245, 247, 251, 252, 253, 255, 256, 258, 268, 281, 286, 291], "retriev": [7, 265], "store": [7, 16, 44, 127, 130, 237, 238, 243, 245, 268, 287], "case_output": [7, 11], "individu": [7, 8, 17, 113, 245, 247, 268, 274, 275, 280, 287, 292], "implement": [7, 8, 234, 235, 237, 238, 239, 247, 264, 280, 281, 283, 284], "window": 7, "update_cach": 7, "_cached_fil": [7, 243], "map": [7, 15, 18, 26, 68, 69, 88, 114, 115, 135, 177, 179, 235, 248, 269], "origin": [7, 49, 248, 268, 287], "enabl": [7, 17, 243, 265, 269, 275, 283, 284], "consum": [7, 243, 245, 268, 293], "faster": [7, 248], "debug": [7, 123, 124, 125, 126, 127, 128, 268, 270, 271, 272, 273, 275], "parser": [8, 51], "mpas_tool": [8, 11, 12, 73, 234, 237, 238, 239, 243, 268], "mpasconfigpars": 8, "polarisconfigpars": [8, 33, 42, 52, 55, 56, 83, 86, 87, 103, 114, 186, 201, 221, 223, 224, 225, 229, 230, 268], "certain": [8, 16, 51, 127, 243, 248, 269, 286, 291], "add_from_packag": [8, 247, 268], "content": [8, 13, 107, 109, 122, 241, 243, 247, 264, 268, 287, 290], "make_diagnostics_fil": 8, "makediagnosticsfil": 8, "self": [8, 10, 11, 13, 15, 17, 44, 76, 130, 240, 243, 245, 246, 247, 268, 269], "cfg": [8, 44, 240, 245, 246, 247, 268, 269, 287], "except": [8, 16, 33, 36, 52, 113, 243, 247, 268], "second": [8, 12, 13, 145, 214, 239, 243, 247, 280, 285, 290], "behavior": [8, 13, 102, 243, 244, 245, 248, 268], "noth": [8, 127, 265, 281], "being": [8, 25, 33, 42, 101, 106, 113, 127, 147, 154, 174, 191, 206, 243, 245, 246, 247, 248, 268, 277], "test_group": [8, 18, 19, 33, 42, 139, 141, 143, 151, 155, 161, 166, 184, 199, 212, 215, 243, 245, 246, 253, 256, 268], "fals": [8, 12, 13, 16, 17, 20, 33, 35, 43, 49, 57, 59, 101, 102, 106, 111, 113, 115, 127, 132, 217, 219, 233, 243, 245, 246, 262, 268, 269, 271, 273, 275, 280], "class": [8, 10, 12, 13, 15, 17, 18, 20, 28, 33, 38, 42, 46, 51, 60, 61, 68, 74, 88, 116, 130, 131, 132, 138, 139, 141, 143, 145, 148, 151, 153, 155, 158, 161, 163, 165, 166, 169, 172, 175, 177, 179, 180, 181, 182, 184, 186, 189, 192, 194, 196, 197, 199, 201, 204, 207, 209, 211, 212, 214, 215, 217, 219, 231, 234, 235, 237, 238, 239, 240, 243, 245, 246, 250, 251, 252, 253, 255, 256, 258, 260, 264, 268], "larg": [8, 16, 243, 245, 268, 270], "those": [8, 13, 16, 42, 112, 113, 127, 245, 246, 247, 248, 267, 268, 281, 286, 291, 293], "configpars": [8, 84, 85, 246], "getinteg": 8, "getfloat": [8, 11, 13, 15, 243, 268], "getboolean": [8, 243, 268], "getlist": [8, 268], "comma": [8, 281], "integ": [8, 12], "boolean": [8, 115, 226], "etc": [8, 13, 108, 111, 240, 243, 245, 280], "getexpress": 8, "tupl": 8, "rang": [8, 115, 268, 281], "numpi": [8, 12, 62, 69, 70, 76, 114, 130, 137, 221, 222, 243, 268], "linspac": [8, 17, 235, 281], "arang": 8, "arrai": [8, 62, 69, 70, 76, 114, 130, 221, 222, 224, 225, 226, 227, 268], "One": [8, 12, 268, 287, 293], "advantag": [8, 13, 127, 247, 268, 274], "track": [8, 20, 243, 245, 248], "associ": [8, 12, 13, 17, 223, 229, 230, 234, 245, 246, 248, 266], "belong": [9, 11, 13, 20, 30, 33, 40, 42, 46, 61, 68, 74, 88, 132, 138, 139, 141, 143, 145, 148, 151, 153, 155, 158, 161, 163, 165, 166, 169, 172, 175, 177, 179, 181, 182, 184, 189, 192, 194, 196, 197, 199, 204, 207, 209, 211, 212, 214, 215, 217, 219, 240, 243, 245, 246, 247, 252, 253, 255, 256, 258, 268, 293], "while": [9, 15, 17, 233, 234, 243, 246, 265, 266, 268], "meant": [9, 247, 269], "simplifi": 9, "verifi": [9, 244, 269], "io": [9, 243, 245, 247, 267, 268, 269, 278, 288], "remap": [9, 17, 177, 235, 267, 281, 286, 291], "visual": [9, 12, 15, 169, 194, 209, 235, 237, 238, 243, 245, 246, 266, 267, 281, 283, 284, 286, 291], "lot": [10, 130, 243, 247, 268], "o": [10, 11, 107, 109, 122, 127, 247, 248, 268, 269, 287], "handl": [10, 11, 245, 248, 268, 274], "intern": [10, 20, 42, 243, 248, 265], "lower": [10, 245, 268, 280], "directli": [10, 12, 13, 15, 33, 241, 243, 247, 266, 267, 268, 271], "readm": [10, 245], "importlib": [10, 245], "resourc": [10, 13, 30, 37, 40, 53, 83, 84, 85, 133, 145, 146, 173, 190, 205, 214, 234, 237, 238, 243, 245, 268], "import": [10, 11, 12, 13, 15, 17, 240, 243, 245, 246, 247, 248, 266, 268], "files_for_e3sm": [10, 245, 269], "str": [10, 13, 18, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 42, 46, 49, 52, 54, 55, 56, 57, 61, 68, 74, 78, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 132, 137, 139, 145, 153, 170, 172, 175, 177, 179, 214, 222, 243, 245, 246, 255, 268], "did": [10, 16, 113, 268], "add_input_fil": [10, 15, 34, 243, 245, 268], "collect": [10, 46, 91, 131, 240, 242, 251, 266, 268], "though": [10, 33, 245, 247, 268], "whenev": [10, 243, 268], "flexibl": [10, 235, 245, 248, 268], "No": [10, 267, 283, 284], "step_dir": 10, "database_root": [10, 127, 243, 269, 270, 271, 272, 273, 274, 275, 287], "download_path": 10, "join": [10, 268], "bathymetry_databas": [10, 243, 269], "remote_filenam": 10, "bedmachineantarctica_and_gebco_2019_0": 10, "05_degre": 10, "200128": 10, "local_filenam": 10, "topographi": [10, 226, 243, 246, 268, 277, 280, 281, 283, 284, 285, 286, 292], "url": [10, 35, 52, 243, 265, 269], "web": [10, 243, 269], "anl": [10, 243, 269], "gov": [10, 243, 265, 269, 271, 275], "mpas_standalonedata": [10, 127, 269, 274], "dest_path": [10, 52], "remot": [10, 35, 248, 267], "bathymetri": [10, 243, 269], "strategi": 11, "stderr": [11, 33, 42, 243], "loggingcontext": 11, "check_cal": [11, 243], "most": [11, 39, 127, 231, 240, 243, 246, 247, 248, 260, 266, 268, 269, 274, 275, 277, 278, 288, 292], "won": [11, 247, 268, 269], "logger": [11, 33, 42, 60, 85, 243, 245, 268], "full": [11, 33, 84, 102, 224, 225, 234, 235, 243, 245, 248, 264, 267, 268, 274, 277, 279, 280, 281, 283, 284, 285, 286, 287], "although": 11, "captur": 11, "insid": [11, 243, 247], "explicit": [11, 247], "go": [11, 243, 245, 246, 247, 248, 268, 275], "subprocess": [11, 33, 84, 85, 101, 243, 247, 265], "produc": [11, 13, 15, 17, 33, 34, 36, 49, 130, 141, 151, 161, 234, 235, 237, 238, 239, 243, 247, 248, 253, 264, 268, 283, 284, 287, 290], "otherwis": [11, 16, 127, 243, 245, 268, 270, 271, 272, 273, 274, 275, 280], "intent": 11, "desir": [11, 12, 13, 16, 17, 113, 130, 235, 243, 244, 268, 269, 287], "trick": [11, 243], "direct": [11, 12, 13, 73, 186, 201, 234, 237, 238, 245, 268, 275, 280, 283, 284], "snippet": [11, 268], "dome": [11, 60, 243, 245, 246, 266, 287, 292], "setup_mesh": [11, 243], "setupmesh": [11, 243, 245], "create_landice_grid_from_generic_mpas_grid": 11, "mpas_grid": [11, 243], "landice_grid": [11, 243, 268], "l": [11, 113, 268, 275], "global": [12, 15, 46, 92, 93, 98, 165, 166, 235, 243, 244, 246, 247, 266, 267, 268, 269, 275, 281, 286, 287, 291, 292], "quasiuniformsphericalmeshstep": [12, 235], "icosahedralmeshstep": [12, 235], "jigsaw": [12, 61, 65, 67, 68, 70, 72, 74, 166, 169, 243], "complex": [12, 16, 69, 245, 247, 268], "build_cell_width_lat_lon": [12, 68], "opt": [12, 74], "make_jigsaw_mesh": [12, 68], "icosahedr": [12, 61, 63, 166, 169, 281], "significantli": [12, 277], "smooth": 12, "cell": [12, 13, 17, 61, 62, 63, 64, 68, 69, 70, 73, 76, 90, 97, 130, 132, 133, 146, 170, 173, 186, 188, 190, 201, 203, 205, 223, 224, 225, 226, 229, 230, 234, 237, 238, 243, 245, 246, 262, 277, 280, 281, 283, 284, 285, 286, 290], "quasi": [12, 68, 269, 281, 286, 291], "hand": [12, 93, 247], "restrict": [12, 268, 286], "resolut": [12, 13, 15, 61, 64, 68, 69, 73, 89, 93, 96, 139, 141, 143, 145, 148, 151, 153, 155, 158, 161, 166, 169, 170, 172, 182, 189, 192, 194, 197, 199, 204, 207, 209, 212, 214, 215, 217, 234, 235, 237, 238, 239, 241, 243, 245, 246, 269, 280, 281, 283, 284, 285, 286, 291, 292], "subdivis": [12, 61, 62, 63, 64, 65], "icosahedron": [12, 62, 63, 64, 65], "tabl": [12, 248, 274, 287], "approxim": [12, 61, 63, 64, 68, 130, 133, 146, 173, 190, 205, 234, 237, 238, 248, 268], "width": [12, 61, 62, 63, 68, 69, 70, 76, 268, 280], "km": [12, 61, 62, 63, 64, 68, 69, 70, 73, 76, 139, 141, 143, 145, 148, 151, 153, 155, 158, 161, 172, 189, 192, 199, 204, 207, 214, 215, 217, 234, 235, 237, 238, 268, 269, 280, 281, 283, 284, 285, 286, 291, 292], "5": [12, 63, 127, 130, 155, 234, 235, 243, 244, 245, 247, 265, 268, 269, 280, 281, 286, 287, 291], "240": [12, 63, 235, 269, 281], "6": [12, 63, 243, 268, 278, 280, 285, 287, 288], "120": [12, 63, 244, 281], "7": [12, 63, 127, 268, 275, 281, 287], "60": [12, 13, 63, 235, 277, 281], "8": [12, 63, 127, 234, 245, 248, 268, 269, 280, 281, 283, 284, 287], "30": [12, 63, 246, 268, 275, 280, 281, 285, 286, 291], "9": [12, 17, 63, 127, 235, 268, 281, 287], "15": [12, 13, 63, 234, 268, 280, 281, 285, 286, 287, 291], "10": [12, 16, 63, 127, 231, 234, 237, 238, 245, 246, 268, 269, 274, 277, 280, 283, 284, 285, 292], "11": [12, 63, 127, 268, 287], "3": [12, 63, 127, 234, 243, 244, 246, 248, 265, 268, 269, 274, 275, 277, 280, 281, 283, 284, 286, 287], "13": [12, 63, 268, 280], "94": [12, 63], "spherical_mesh": [12, 69], "cell_width": [12, 61, 62, 63, 64, 68, 69, 70, 76], "icosahedral_method": 12, "jigsaw_mesh_filenam": 12, "msh": 12, "jigsaw_geom_filenam": 12, "geom": 12, "jigsaw_jcfg_filenam": 12, "jig": 12, "jigsaw_hfun_filenam": 12, "spac": 12, "triangles_filenam": 12, "mesh_triangl": 12, "mpas_mesh_filenam": 12, "base_mesh": [12, 61, 68, 243, 268], "plot": [12, 76, 114, 115, 130, 158, 163, 177, 219, 234, 235, 237, 238, 258, 281, 283, 284, 290, 292], "plot_cell_width": 12, "cell_width_filenam": [12, 76], "cellwidthvslatlon": 12, "cell_width_image_filenam": 12, "cellwidthglob": 12, "cell_width_colormap": 12, "3wbgy5": 12, "add_mesh_dens": 12, "vtk": 12, "convert_to_vtk": 12, "vtk_dir": 12, "base_mesh_vtk": 12, "extract": 12, "lat": [12, 15, 62, 68, 69, 70, 76, 89, 91, 93, 96, 114, 177, 235, 269, 281], "lon": [12, 15, 62, 68, 69, 70, 76, 89, 91, 93, 96, 114, 177, 235, 269, 281], "sphere": [12, 235, 281], "vtk_lat_lon": 12, "far": [12, 127, 223, 229, 230, 247, 268], "But": [12, 127, 243, 246, 247, 248, 268, 269, 274], "hexagon": [12, 73, 268, 283, 284], "planar_hex": [12, 73, 234, 237, 238, 239, 243, 268], "make_planar_hex_mesh": [12, 73, 234, 237, 238, 239, 243, 268], "x": [12, 17, 62, 69, 70, 73, 76, 92, 98, 115, 137, 186, 201, 243, 245, 268, 280, 283, 284, 285], "y": [12, 13, 17, 73, 92, 98, 115, 186, 201, 234, 237, 238, 243, 245, 268, 275, 280, 283, 284], "nx": [12, 73, 243, 246, 268], "ny": [12, 73, 243, 246, 268], "dc": [12, 243, 246, 268], "distanc": [12, 73, 268, 280], "adjac": [12, 277], "center": [12, 17, 73, 186, 201, 246, 268, 277, 280], "admittedli": 12, "oddli": 12, "period": [12, 233, 234, 237, 238, 243, 268, 280, 283, 284], "nonperiodic_x": [12, 243, 268], "nonperiodic_i": [12, 243, 268], "consider": [12, 223, 229, 230, 233, 262], "compute_planar_hex_nx_ni": [12, 268], "lx": [12, 73, 268, 280, 283, 284, 285], "ly": [12, 73, 268, 280, 285], "explan": 12, "subtleti": 12, "account": [12, 73, 248, 268, 270, 271, 273, 274, 275, 287], "behav": 12, "stagger": [12, 73], "physic": [12, 73, 256, 264, 268], "howev": [12, 243, 244, 245, 248, 268], "np": [12, 17, 235, 268, 281], "sqrt": [12, 283], "domain": [12, 20, 27, 73, 115, 130, 132, 137, 233, 246, 262, 268, 280, 281, 283, 284, 285, 286, 291, 292], "extra": [12, 248], "factor": 12, "500e3": 12, "160e3": 12, "1e3": [12, 246, 268], "max": [12, 130, 243, 268, 280, 281], "int": [12, 13, 20, 21, 30, 33, 40, 55, 56, 57, 61, 62, 63, 64, 65, 73, 84, 85, 88, 115, 132, 133, 145, 146, 166, 169, 170, 172, 173, 182, 189, 190, 194, 197, 204, 205, 209, 214, 243, 268, 285], "ds_mesh": [12, 17, 115, 268], "creation": [12, 243, 269], "build_mesh": 12, "build_planar_mesh": 12, "too": [12, 13, 20, 30, 33, 40, 84, 85, 132, 243, 246, 247, 268], "distant": 12, "futur": [12, 39, 243, 247, 266, 267, 268, 269, 285, 287, 292], "descend": [13, 15, 130, 240, 243, 245, 246, 247, 250, 268], "modelstep": [13, 130, 243, 245, 250, 268], "update_pio": [13, 20, 132], "make_graph": [13, 20, 132], "construct": [13, 131, 221, 223, 224, 225, 229, 230, 233, 239, 240, 245, 246, 251, 268, 280], "At": [13, 33, 42, 241, 242, 268], "set_model_resourc": 13, "thread": [13, 20, 30, 33, 39, 40, 42, 85, 132, 145, 189, 204, 214, 243, 244, 266, 268, 269, 271, 275, 287, 293], "openmp_thread": [13, 20, 30, 33, 40, 85, 132, 145, 189, 204, 214, 243, 245, 268], "prefix": [13, 35, 127, 248, 269], "end": [13, 234, 243, 245, 247, 248, 254, 264, 266, 268, 271, 280, 281, 283, 284, 285, 290], "yml": 13, "reason": [13, 15, 39, 127, 243, 247, 268, 293], "add_namelist_fil": [13, 20, 130, 243, 245], "add_yaml_fil": [13, 20, 243, 245, 268], "add_model_config_opt": [13, 20, 243, 245, 268], "add_streams_fil": [13, 20, 130, 243, 245], "themselv": [13, 247, 267], "question": [13, 243, 269], "constructor": [13, 234, 237, 238, 240, 246, 268], "simpli": [13, 51, 127, 143, 212, 215, 240, 243, 245, 246, 248, 268, 277, 287, 293], "never": [13, 127, 266], "hierarch": 13, "run_mod": 13, "config_ocean_run_mod": 13, "time_manag": [13, 268], "config_run_dur": [13, 245, 268], "0024_00": 13, "00": [13, 16, 245, 262, 268, 275, 287], "ale_vertical_grid": 13, "config_vert_coord_mov": 13, "impermeable_interfac": 13, "decomposit": [13, 42, 141, 266, 268], "config_block_decomp_file_prefix": [13, 268], "time_integr": [13, 268], "config_time_integr": 13, "rk4": [13, 247], "filename_templ": [13, 268], "restart": [13, 42, 237, 238, 239, 244, 247, 253, 254, 264, 266, 268, 287, 293], "output_interv": [13, 268], "0030_00": 13, "clobber_mod": [13, 268], "truncat": [13, 268], "reference_tim": 13, "0001": [13, 268], "01": [13, 262, 268, 285, 290], "01_00": [13, 262, 268], "tracer": [13, 17, 234, 235, 237, 238, 239, 268, 281, 283, 284, 285], "xtime": [13, 268], "normalveloc": [13, 16, 17, 142, 144, 152, 157, 162, 185, 200, 202, 213, 233, 234, 237, 238, 239, 243, 268, 285], "layerthick": [13, 16, 130, 140, 142, 144, 152, 157, 162, 185, 200, 213, 223, 227, 228, 229, 230, 234, 237, 238, 239, 243, 245, 268], "refzmid": [13, 223, 229, 230, 243, 268], "reflayerthick": 13, "kineticenergycel": 13, "relativevorticitycel": 13, "unlik": [13, 16, 268], "clariti": [13, 243], "guarante": [13, 127, 231, 248, 260], "uniqu": [13, 127, 245, 268], "global_converg": [13, 231, 236, 268, 278, 279, 282], "cosine_bel": [13, 268, 286, 291], "substitut": 13, "config_write_output_on_startup": [13, 268], "0000_00": [13, 268], "config_use_mom_del2": [13, 268], "config_implicit_bottom_drag_coeff": [13, 268], "0e": [13, 284, 285], "config_use_cvmix_background": 13, "config_cvmix_background_diffus": [13, 268], "config_cvmix_background_viscos": [13, 268], "worri": 13, "sometim": [13, 223, 229, 230, 243, 245, 266, 268], "easier": [13, 243, 247, 248, 269, 287, 293], "togeth": [13, 127, 266, 268, 293], "overkil": 13, "reli": [13, 243, 268], "along": [13, 17, 127, 234, 243, 245, 267, 268], "could": [13, 15, 17, 127, 235, 243, 244, 245, 247, 248, 268, 281], "nu": [13, 145, 158, 214, 234, 243, 245, 268], "viscos": [13, 145, 155, 158, 234, 243, 245, 247, 268, 280], "hmix": 13, "config_mom_del2": [13, 234, 243, 268], "bool": [13, 20, 21, 25, 33, 35, 42, 43, 49, 52, 54, 57, 101, 102, 105, 106, 111, 113, 114, 118, 132, 145, 147, 154, 166, 169, 174, 191, 206, 214, 268], "cannot": [13, 16, 268], "known": [13, 33, 34, 127, 235, 243, 268], "beforehand": 13, "particularli": [13, 265, 268, 286, 291], "update_namelist_at_runtim": 13, "update_yaml_at_runtim": 13, "config_pio_num_iotask": 13, "pio_num_iotask": 13, "config_pio_strid": 13, "pio_strid": 13, "out_nam": 13, "bit": [13, 127, 247, 266, 268, 280, 287], "complic": [13, 246, 247, 248, 250, 268], "slightli": [13, 16, 248], "sophist": 13, "immutable_stream": [13, 268], "var_struct": [13, 260], "var": [13, 108, 260, 268], "var_arrai": [13, 260], "tag": [13, 267], "taken": [13, 20, 132, 235, 243, 268, 275, 287], "past": 13, "experi": [13, 127, 247, 277], "shown": [13, 127, 241, 245, 285], "featur": [13, 247, 248, 266, 268, 269, 280, 285], "difficult": [13, 127, 274], "synchron": [13, 267], "equival": [13, 248, 268, 270], "template_replac": [13, 23, 24], "treat": [13, 244, 247], "jinja2": [13, 23, 24, 107], "render": [13, 23, 24, 107], "d_": 13, "restart_interv": 13, "stream_replac": 13, "dynamic_adjust": [13, 269], "qu240dynamicadjust": 13, "seri": [13, 130, 158, 163, 219, 235, 237, 264, 268, 279], "dynam": [13, 132, 165, 231, 239, 269, 280, 281, 285, 286], "adjust": [13, 127, 130, 165, 231, 269], "durat": [13, 234, 237, 238, 239, 244, 268], "interv": 13, "spin": 13, "reus": [13, 243, 247, 248, 268, 269, 287], "qualit": [13, 16], "update_streams_at_runtim": 13, "fairli": [13, 245, 247, 248, 268], "hour": [13, 127, 237, 238, 244, 264, 271, 275, 283, 284, 287, 290], "turn": [13, 33, 50, 243, 265, 268, 285], "datetim": 13, "timedelta": 13, "3600": 13, "planar_converg": 13, "delta": [13, 277, 280, 285], "minut": [13, 127, 234, 244, 280, 293], "dai": [13, 155, 234, 235, 239, 245, 264, 268, 280, 281, 285, 290], "03d": 13, "_": [13, 88, 127, 243, 245, 248, 268, 285], "02d": 13, "forgotten": 13, "broken": [13, 243, 247], "immedi": [13, 60, 248, 268], "miss": [13, 16, 243, 268, 269], "detect": [13, 17, 269, 270, 272, 273, 274, 287], "gpmeti": [13, 269], "divid": [13, 277], "partition_graph": [13, 20, 132], "circumst": [13, 16, 33, 34, 243, 268], "wast": 13, "update_namelist_pio": 13, "v1": [13, 277], "better": [13, 15, 127, 287], "v2": [13, 269, 277], "littl": [13, 247, 248, 267, 268], "feel": [13, 127, 243, 268], "runtime_setup": [13, 15, 30, 40, 234, 237, 238, 245], "yourself": [13, 268, 274], "fact": [13, 33, 127], "culler": 13, "cull": [13, 234, 237, 238, 243, 268], "model_step": [13, 243], "make_graph_fil": [13, 243], "field": [13, 16, 76, 78, 115, 177, 223, 229, 230, 233, 234, 237, 238, 239, 268, 280, 281, 283, 284], "weight": [13, 15, 78, 223, 229, 230, 268, 277], "weight_field": [13, 78], "frequent": [15, 231, 260], "observ": [15, 267], "dataset": [15, 115, 186, 201, 223, 229, 230, 243, 268], "region": [15, 17, 267, 269], "pyremap": [15, 94], "interpol": [15, 88, 235, 269], "hood": 15, "esmf_regridweightgen": 15, "mappingfilestep": [15, 17], "woa": 15, "2023": [15, 283, 284], "__init__": [15, 18, 20, 33, 42, 46, 51, 60, 61, 68, 74, 88, 116, 131, 132, 138, 139, 141, 143, 145, 148, 151, 153, 155, 158, 161, 163, 165, 166, 169, 172, 175, 177, 179, 181, 182, 184, 186, 189, 192, 194, 196, 197, 199, 201, 204, 207, 209, 211, 212, 214, 215, 217, 219, 240, 243, 245, 246, 247, 251, 252, 253, 255, 256, 258, 266, 268], "mytestcas": 15, "__int__": 15, "make_map": 15, "64": [15, 277], "bilinear": [15, 88, 235, 281, 286, 291], "filenam": [15, 35, 36, 82, 89, 90, 91, 92, 96, 97, 98, 103, 113, 117, 119, 243, 248, 268], "woa23_decav_0": 15, "25_extrap": 15, "20230414": 15, "initial_condition_databas": [15, 269], "destin": [15, 88, 89, 90, 91, 92, 93, 94], "src_from_lon_lat": 15, "lon_var": [15, 89, 91, 96], "lat_var": [15, 89, 91, 96], "dst_from_mpa": 15, "mesh_nam": [15, 89, 90, 91, 92, 93, 96, 97, 98, 170, 172, 175, 177, 179], "qu60": 15, "subclass": [15, 65, 68, 69, 70, 75, 130, 268], "src_": 15, "dst_": 15, "pick": [15, 99, 100], "vizmap": [15, 166, 177, 235], "super": [15, 240, 243, 245, 246, 247, 268], "128": [15, 244, 271, 272, 275], "cosine_bell_viz": [15, 17, 235, 281, 286, 291], "dlon": [15, 93, 235, 281, 286, 291], "dlat": [15, 93, 235, 281, 286, 291], "remap_method": [15, 235, 281, 286, 291], "src_from_mpa": 15, "dst_global_lon_lat": 15, "lon_min": [15, 93], "With": [15, 248], "approach": [15, 243, 246, 247, 248, 265, 268, 277], "perhap": [15, 17, 36, 246], "cover": [15, 262, 268], "nearli": [15, 243, 266, 267, 268], "situat": [15, 26, 135, 268, 287], "workflow": [15, 243, 248], "critic": [16, 268], "compare_vari": [16, 245, 268], "filename1": [16, 113, 245, 268], "filename2": [16, 113, 268], "simpl": [16, 127, 130, 247, 260, 268, 287], "temperatur": [16, 140, 142, 144, 152, 157, 162, 213, 216, 233, 234, 238, 239, 243, 245, 264, 268, 280, 281, 285, 286, 291], "salin": [16, 140, 142, 144, 152, 157, 162, 213, 216, 233, 234, 239, 243, 245, 268, 280, 281, 285, 286, 291], "prognost": [16, 280], "4proc": [16, 142, 268, 280], "8proc": [16, 142, 268, 280], "alter": [16, 224, 225, 243, 245, 267, 268, 277, 280, 281, 283, 284, 285, 286], "skip_if_step_not_run": [16, 113, 245], "possibli": [16, 243, 248, 268], "failur": 16, "valueerror": [16, 245, 246, 247], "quiet": [16, 102, 113, 118], "report": 16, "threshold": [16, 281, 283, 284], "l1": [16, 113], "00000000000000e": 16, "l2": [16, 113], "l_infin": 16, "linf": [16, 113], "test_nightly_latest": 16, "10km": [16, 234, 245, 246, 268, 280, 287, 292, 293], "threads_test": 16, "1thread": [16, 162, 234, 280], "2thread": [16, 162, 280], "test_20210616": 16, "further_valid": 16, "add_output_fil": [16, 34, 243, 245, 268], "disabl": [16, 17, 233, 281, 292], "check_output": [16, 113], "zero": [16, 224, 225, 226, 227, 228, 233, 234, 239, 268, 281, 285], "l1_norm": [16, 113], "l2_norm": [16, 113], "linf_norm": [16, 113], "nonzero": [16, 113], "easiest": [16, 127, 248], "solut": [16, 126, 186, 187, 188, 196, 197, 199, 201, 202, 203, 204, 207, 209, 235, 237, 238, 244, 265, 268, 283, 284], "clobber": 16, "judgment": 16, "enough": [16, 234, 243, 247, 268], "problem": [16, 243, 248, 265, 268], "compare_tim": 16, "rundir1": [16, 112], "92264": 16, "82317": 16, "percent": 16, "781019682649793": 16, "speedup": 16, "1208377370409515": 16, "aspect": [17, 268], "routin": 17, "viz": [17, 166], "plot_horiz_field": [17, 268], "patch": [17, 115, 268], "style": [17, 130, 267, 268], "edg": [17, 90, 93, 97, 115, 186, 187, 201, 202, 233, 268], "polygon": 17, "character": 17, "accordingli": [17, 86], "d": [17, 115, 186, 201, 223, 229, 230, 233, 243, 268, 285], "final_normalveloc": [17, 268], "t_index": [17, 115, 268], "vmin": [17, 115, 235, 268, 281], "max_veloc": [17, 268], "vmax": [17, 115, 235, 268, 281], "cmap": [17, 115, 268], "cmo": [17, 268], "balanc": [17, 268], "show_patch_edg": [17, 115, 268], "globe": [17, 235, 281], "plot_glob": 17, "plot_land": [17, 114], "contin": [17, 114], "overlain": 17, "usag": [17, 269, 271, 275], "cmocean": [17, 268], "noqa": [17, 60, 169, 172, 175, 194, 209, 268], "f401": [17, 268], "xr": [17, 186, 187, 188, 201, 202, 203, 268], "open_dataset": [17, 243, 268], "tracer1": 17, "isel": 17, "nvertlevel": [17, 115, 223, 229, 230, 243, 268, 277], "out_filenam": [17, 110, 114, 222], "colormap_sect": [17, 114], "titl": [17, 114, 115], "colormap": [17, 114, 115, 235, 268, 281], "cosin": [17, 169, 172, 175, 177, 179, 235, 281, 286, 291], "bell": [17, 169, 172, 175, 177, 179, 235, 281, 286, 291], "converg": [17, 194, 209, 235, 241, 244, 267, 268, 281, 286, 291, 293], "colormap_nam": [17, 114, 235, 281], "viridi": [17, 235, 268, 281], "norm": [17, 113, 114, 235, 281], "norm_typ": [17, 114, 235, 281], "norm_arg": [17, 114, 235, 281], "colorbar": [17, 114, 115, 235, 281], "tick": [17, 114, 235, 281], "mark": [17, 235, 248, 281], "colorbar_tick": [17, 114, 235, 281], "matplotlib": [17, 268], "standard": [17, 247, 248, 256, 268, 271, 287], "symlog": [17, 114], "symmetr": 17, "central": [17, 281], "logarithm": [17, 115], "color": [17, 115], "normal": [17, 186, 187, 201, 202, 233, 243, 244, 248, 268, 274], "symlognorm": 17, "lognorm": 17, "hous": 18, "dict": [18, 21, 23, 24, 26, 33, 37, 42, 46, 80, 81, 83, 87, 88, 104, 106, 107, 114, 116, 117, 118, 135, 245, 268], "kei": [18, 42, 46, 106, 245], "testgroup": [19, 33, 42, 246, 247, 268], "max_memori": [20, 30, 33, 40, 132], "mesh_filenam": [20, 78, 132], "graph_filenam": [20, 78, 132], "graph": [20, 27, 29, 39, 78, 132, 234, 237, 238, 243, 268, 269], "make_yaml": 20, "stride": [20, 32, 132], "consist": [20, 32, 127, 132, 231, 248, 268, 269, 280], "partit": [20, 29, 39, 55, 78, 132, 234, 237, 238, 243, 269, 270, 271, 272, 273, 275, 287], "model_config_data": 20, "streams_data": 20, "ideal": [20, 30, 33, 40, 84, 85, 88, 130, 132, 145, 189, 204, 214, 243, 246, 247, 267, 268, 269, 292], "accommod": [20, 30, 33, 40, 84, 85, 132], "fewer": [20, 30, 33, 40, 84, 85, 132, 145, 189, 204, 214, 243, 268, 287], "memori": [20, 30, 33, 40, 132, 243, 269], "mb": [20, 30, 33, 40, 132, 269], "placehold": [20, 30, 33, 40, 132, 243, 287], "at_setup": [25, 147, 154, 174, 191, 206, 268], "overridden": [26, 135, 243, 245, 268], "diverg": [26, 135], "counterpart": [26, 130, 135], "nest": [26, 116, 118, 135], "graph_fil": 27, "parent": [28, 240, 243, 246], "done": [30, 40, 243, 248, 268, 287], "run_as_subprocess": [33, 243], "smallest": [33, 243, 266, 277, 292], "unit": [33, 89, 93, 96, 243, 266, 280, 292], "term": [33, 266, 268, 283, 284], "necessarili": [33, 35, 266], "input_data": 33, "until": [33, 34, 243, 245, 287], "finish": [33, 34, 75, 268], "suffici": 33, "establish": [33, 34], "is_depend": 33, "combin": [33, 35, 42, 51, 56, 87, 116, 243, 244, 245, 265, 268, 269, 287], "machine_info": 33, "machineinfo": 33, "config_filenam": [33, 42, 103, 243, 245], "base_work_dir": [33, 42, 243, 245], "log_filenam": [33, 42, 243], "redirect": [33, 243], "extern": [33, 127, 231, 240, 243, 260, 278, 288], "access": [34, 245, 247, 248, 268, 270, 274, 275], "database_compon": [35, 243], "work_dir_target": [35, 243], "come": [35, 127, 243, 248, 268, 270, 271, 272, 273, 274, 275, 278], "root": [35, 127, 170, 231, 235, 237, 238, 240, 243, 247, 248, 260, 266, 269, 270, 271, 272, 273, 274, 275, 277, 283, 284, 287], "_database_root": 35, "append": 35, "available_resourc": [37, 83], "constrain": [37, 133, 146, 173, 190, 205, 234, 237, 238, 243, 268], "cores_per_nod": [37, 83, 86, 127, 269, 270, 271, 272, 273, 274, 275, 287], "everi": [38, 180, 234, 243, 245, 247, 264, 265, 266, 268, 280, 285], "child": [38, 180, 240, 243, 245, 247], "serial": [39, 243, 245, 267, 268, 287], "subtask": 40, "stdout_logg": 42, "goe": [42, 243, 268], "regardless": 42, "new_step_log_fil": 42, "whole": [42, 137, 245, 247, 268, 287], "statu": 42, "run_by_default": [43, 243, 245], "assum": [44, 107, 117, 127, 245, 248, 268, 275, 280], "prior": [44, 243, 245], "greenland": [46, 246, 266, 267, 292], "eismint2": 46, "step_path": 49, "variant": [49, 234, 244, 246, 247, 248, 268, 274, 277, 280, 281], "uncach": 49, "datestamp": 49, "yymmdd": [49, 269], "dry": [49, 244], "meta": 51, "empti": [51, 243, 247, 248, 266, 268], "link_nam": 54, "overwrit": 54, "stackoverflow": [54, 268], "55742015": 54, "7728169": [54, 268], "symbol": [54, 243], "fileexistserror": 54, "unless": [54, 102, 248], "isadirectoryerror": 54, "slurm": [55, 86, 127, 243, 267, 269, 270, 271, 272, 273, 275, 287], "qo": [55, 270, 271, 273, 274, 275, 287], "qualiti": [55, 270, 271, 273, 274, 275, 287], "servic": [55, 270, 271, 273, 274, 275, 287], "constraint": [55, 275, 287], "wall_tim": [55, 287], "wall": [55, 287], "target_cor": 56, "min_cor": 56, "decomposition_test": [60, 246, 287], "decompositiontest": [60, 246], "e501": [60, 169, 172, 175, 194, 209, 268], "turquois": [60, 271], "usr": [60, 127, 271, 287], "climat": [60, 270, 271, 272, 274, 287], "mhoffman": 60, "latitud": [62, 69, 89, 91, 93, 96, 114, 235, 281, 286, 291], "longitud": [62, 69, 70, 76, 89, 91, 93, 96, 114, 235, 281, 286, 291], "ndarrai": [62, 69, 70, 76, 114, 137, 221, 222, 268], "degre": [62, 69, 70, 76, 93, 269, 280], "length": [62, 69, 70, 76], "180": [62, 69, 70, 76, 93, 281], "90": [62, 69, 70, 76, 243, 281], "static": [63, 64], "rule": 63, "thumb": 63, "achiev": [64, 244], "uniform": [68, 73, 172, 234, 235, 237, 238, 246, 268, 269, 280, 281, 283, 284, 285, 286, 291], "natur": 73, "jigsawpi": [74, 243], "jigsaw_jig_t": 74, "meti": 78, "defaults_filenam": 79, "total": [83, 243, 244, 247, 268, 269, 271, 287], "substep": [84, 85], "command_line_arg": 84, "cpus_per_nod": 86, "map_filenam": 88, "src_grid_info": 88, "dst_grid_info": 88, "neareststod": [88, 235, 281, 286, 291], "conserv": [88, 235, 281, 286, 291], "map_": 88, "source_typ": 88, "dest_typ": 88, "1d": [89, 93, 96, 114, 130, 221, 222, 223, 224, 225, 226, 227, 229, 230], "2d": [89, 93, 96, 114], "5x0": [89, 93, 96], "5degre": [89, 93, 96], "coordin": [89, 91, 92, 96, 98, 114, 115, 186, 201, 223, 229, 230, 276, 278, 280, 281, 283, 284, 285, 286, 290], "mesh_typ": [90, 97, 243, 245, 246], "vertex": [90, 97], "x_var": [92, 98], "y_var": [92, 98], "proj_attr": [92, 98], "proj_str": [92, 98], "proj": [92, 98], "left": [93, 130, 268, 277, 280, 281], "remapp": [94, 95], "remap_fil": 94, "ran": 99, "step_is_subprocess": 101, "is_test_cas": 102, "steps_to_skip": 102, "progress": 102, "unpickl": [104, 243], "cached_step": 105, "copy_execut": [105, 106, 111, 287], "_all": [105, 106], "streams_filenam": 107, "lxml": [107, 109, 122], "etre": [107, 109, 122], "new_child": 108, "children": 108, "sub": [108, 268], "new_tre": 109, "rundir2": 112, "infin": 113, "toler": 113, "exclud": [113, 287], "data_arrai": 114, "colorbar_label": 114, "subtitl": 114, "field_nam": 115, "out_file_nam": 115, "ax": 115, "z_index": 115, "cmap_set_und": 115, "cmap_scal": 115, "cmap_titl": 115, "horizont": [115, 130, 215, 233, 234, 237, 238, 239, 280, 283, 284, 285], "planar": [115, 130, 233, 268, 283, 284, 285, 286, 291], "depth": [115, 130, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 268, 269, 277, 280, 281, 283, 284, 285, 286], "slice": 115, "fieldnam": 115, "present": [115, 248, 268], "visibl": 115, "bar": 115, "classmethod": 117, "jinja": 117, "namelist_templ": 121, "polarisyaml": [121, 122], "processed_registry_filenam": 122, "registri": [122, 233, 260], "steam": 122, "1_anvil_intel_impi": [123, 127], "mvapich": [123, 127, 270], "ve": [123, 124, 125, 126, 128, 243, 248, 268], "1_anvil_gnu_openmpi": 123, "1_chicoma": 124, "cpu_gnu_mpich": [124, 128], "crai": [124, 127, 128, 271, 275], "1_chrysalis_intel_openmpi": 125, "1_chrysalis_gnu_openmpi": 125, "again": [126, 231, 243, 248, 265, 287], "soon": [126, 127, 268, 287], "1_compy_intel_impi": 126, "1_compy_gnu_openmpi": 126, "particular": [127, 246, 248, 267, 271, 274, 287], "load_polaris_env": [127, 248, 268, 287], "were": [127, 145, 214, 243, 247, 266, 268, 269, 273, 277], "right": [127, 130, 245, 248, 268, 269, 277, 280, 281, 287], "therefor": [127, 243, 250, 266, 268], "chicoma": [127, 274, 287], "mpich": [127, 248, 267, 271, 275, 287], "compi": [127, 273, 287], "pm": [127, 275, 287], "compymcnodefac": [127, 274], "perlmutt": [127, 271, 274, 287], "pretti": [127, 243, 247, 268, 269], "conda_path": [127, 248], "osx": [127, 274], "clang": [127, 248], "had": 127, "1_": 127, "morpheu": 127, "cobalt": [127, 270, 271, 272, 273, 274, 275], "single_nod": [127, 269, 270, 271, 272, 273, 274, 275, 287], "mpirun": [127, 265, 269, 270, 271, 272, 273, 274, 275, 287], "srun": [127, 265, 268, 269, 270, 271, 272, 273, 274, 275, 287], "parallel_execut": [127, 265, 269, 270, 271, 272, 273, 274, 275, 287], "modules_befor": [127, 271, 275], "modules_aft": [127, 271, 275], "polaris_env": [127, 270, 271, 272, 273, 274, 275], "deploi": [127, 248, 267, 270, 271, 272, 273, 274, 275], "mpi_gnu": [127, 270, 271, 272, 273, 274, 275], "hdf5": [127, 270, 271, 272, 273, 274, 275], "use_e3sm_hdf5_netcdf": [127, 270, 271, 272, 273, 274, 275], "discoveri": 127, "identifi": [127, 260, 292], "hostnam": 127, "hostname_contain": 127, "queu": 127, "laptop": [127, 248, 268, 269], "workstat": [127, 248], "high": [127, 243, 272, 274], "hpc": [127, 248, 271, 274], "safest": [127, 248], "mpi_": 127, "compiler_gnu": 127, "compiler_intel": 127, "hopefulli": [127, 269], "pre": [127, 248], "parlanc": 127, "concret": 127, "ubuntu": 127, "spec": [127, 265, 275], "gcc": 127, "curl": 127, "81": 127, "buildabl": 127, "install_missing_compil": 127, "cc": 127, "bin": [127, 248, 275, 287], "cxx": 127, "f77": 127, "fc": 127, "operating_system": 127, "ubuntu22": 127, "04": 127, "extra_rpath": 127, "luck": 127, "catch": [127, 244], "22": 127, "design": [127, 232, 243, 245, 247, 261, 267, 274, 280], "guess": [127, 268], "correct": [127, 248], "potenti": [127, 137, 155, 243, 245, 268, 280], "purg": 127, "perl": 127, "32": [127, 244, 287], "bsnc6lt": 127, "ugetvbp": 127, "sxfyy4k": 127, "2020": 127, "304": 127, "n3b5fye": 127, "j3zxncu": 127, "7ohuiwq": 127, "k2zu3y5": 127, "mirrcz7": 127, "shouldn": [127, 145, 214, 268], "variou": [127, 240, 243, 248], "ask": 127, "gb": 127, "zlib": 127, "incompat": 127, "ubuntu20": 127, "readlin": 127, "pkgconf": 127, "spackdir": 127, "env": [127, 275], "arch": 127, "repositori": [127, 241, 267, 268, 287], "x86_64_v4": 127, "free": [127, 233, 268, 269], "touch": [127, 248], "everyth": 127, "1_pm": 128, "ever": [130, 247, 250], "expand": [130, 250, 277], "oceanmodelstep": [130, 268], "decid": [130, 268], "veri": [130, 240, 243, 247, 248, 260, 268, 285], "earli": [130, 278, 287], "stage": [130, 233, 243, 245, 248, 255, 264, 278, 287], "map_yaml_to_namelist": 130, "heurist": 130, "algorithm": [130, 145, 214, 234, 237, 238, 243, 268], "200": [130, 237, 238, 245, 268, 280, 283, 284, 285], "round": [130, 281], "cell_count": [130, 133, 146, 173, 190, 205, 268], "goal_cells_per_cor": [130, 268, 281, 283, 284, 286, 291], "pinch": 130, "2000": [130, 246, 262, 264, 268, 290], "max_cells_per_cor": [130, 268, 281, 283, 284, 286, 291], "seciton": 130, "control": [130, 235, 243, 269, 280, 281, 285, 287], "scale": [130, 280, 287], "tri": [130, 247], "apport": 130, "precis": [130, 243, 268], "caviti": [130, 247, 268, 269, 277], "frazil": 130, "flux": [130, 233, 285], "grid_1d": 130, "generate_1d_grid": 130, "vertical_grid": [130, 221, 223, 229, 230, 246, 268, 269, 277, 280, 281, 283, 284, 285, 286], "z": [130, 224, 225, 226, 227, 228, 229, 230, 268, 280, 281, 283, 284, 285, 286], "star": [130, 228, 230, 268, 280, 281, 283, 284, 285, 286], "init_vertical_coord": [130, 268], "minlevelcel": [130, 223, 225, 226, 227, 228, 229, 230, 268], "maxlevelcel": [130, 223, 224, 225, 226, 227, 228, 229, 230, 243, 268], "cellmask": [130, 223, 226, 229, 230, 268], "zmid": [130, 223, 229, 230, 268], "restingthick": [130, 223, 228, 229, 230, 243, 268], "bottomdepth": [130, 223, 224, 226, 227, 228, 229, 230, 243, 268], "entir": [130, 268, 280, 293], "petersen": [130, 248, 268, 280], "et": [130, 268, 277, 280, 281, 283, 284], "al": [130, 268, 277, 280, 281, 283, 284], "2015": [130, 268, 280], "int_": 130, "rho": 130, "dv": 130, "sort": [130, 241, 247, 248], "increas": [130, 247], "compute_rp": [130, 268], "csv": [130, 268], "dynamic_ntask": 132, "available_cor": 134, "estim": [134, 136, 268], "initial_state_file_nam": [137, 268], "output_fil": [137, 243, 268], "energi": [137, 155, 245, 267, 268, 280], "state": [137, 233, 234, 235, 237, 238, 239, 243, 244, 268, 281], "len": [137, 243, 268], "superclass": [139, 234, 243], "run_time_step": [145, 214, 268], "resources_fix": [145, 214], "dt": [145, 214, 268, 280, 281, 283, 284, 286, 291], "btr_dt": [145, 214, 268, 280], "barotrop": [145, 214, 268, 280, 285], "longer": [151, 234, 244, 253, 268, 280, 281, 293], "shorter": [151, 244, 253], "20": [155, 234, 244, 245, 268, 280, 285], "rpe": [163, 219, 245, 247, 268, 287], "include_viz": 166, "less": [166, 169, 243, 277, 285], "globalocean": [166, 240], "cosinebel": [169, 172, 175, 235], "rmsevalu": 170, "squar": [170, 235, 237, 238, 283, 284], "ncell": [170, 243, 268], "viz_map": 177, "inerti": [181, 182, 184, 186, 189, 192, 194, 237, 278, 282], "graviti": [181, 182, 184, 186, 189, 192, 194, 237, 278, 282], "wave": [181, 182, 184, 186, 189, 192, 194, 201, 237, 243, 268, 278, 280, 282, 284], "analys": [182, 197], "inertialgravitywav": [184, 237], "exact": [186, 187, 188, 201, 202, 203, 235, 237, 238, 247, 283, 284], "angleedg": [186, 201], "angl": [186, 201], "posit": [186, 201, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 268, 277, 285], "xcell": [186, 201, 243, 268], "ycell": [186, 201, 243, 268], "xedg": [186, 201, 243, 268], "yedg": [186, 201], "f0": 186, "corioli": [186, 237, 238, 268, 280, 281, 284, 285], "eta0": [186, 201], "amplitid": [186, 201], "kx": [186, 201], "ky": [186, 201], "angular": [186, 201], "frequenc": [186, 201, 234], "veloc": [187, 202, 233, 234, 237, 238, 245, 248, 268, 281, 285, 287], "evalu": [187, 188, 202, 203], "norm_vel": 187, "eta": [188, 203, 283, 284], "manufactur": [196, 197, 199, 201, 204, 207, 209, 238, 284], "manufacturedsolut": [199, 238], "column": [211, 212, 215, 217, 239, 248, 250, 252, 253, 255, 256, 258, 260, 261, 262, 264, 285, 287, 290], "param": [212, 215, 217, 245, 246, 255], "singlecolumn": [212, 215, 239, 253, 256, 264], "iag": 216, "ideal_ag": [217, 219], "ivar": 217, "layer": [221, 222, 223, 227, 228, 229, 230, 233, 234, 237, 238, 239, 268, 269, 277, 280, 281, 283, 284, 285, 286], "meter": [221, 222], "bottom": [223, 224, 225, 226, 227, 228, 229, 230, 233, 268, 269, 277, 280, 281, 283, 284, 285, 286], "thick": [223, 227, 228, 229, 230, 234, 239, 262, 268, 269, 277, 280, 283, 290], "stretch": [223, 229, 230, 268, 277], "elev": [223, 229, 230, 268, 277], "midpoint": [223, 229, 230, 268], "reftopdepth": [223, 226, 227, 229, 230, 268], "down": [223, 224, 225, 226, 227, 228, 229, 230, 235, 268, 277, 281], "ref": [223, 229, 230, 268], "middl": [223, 229, 230, 268], "refbottomdepth": [223, 224, 225, 226, 227, 229, 230, 243, 268], "refinterfac": [223, 229, 230, 268], "element": [223, 229, 230, 268], "vertcoordmovementweight": [223, 229, 230, 243, 268], "movement": [223, 229, 230, 268], "partial": [224, 225, 268, 277, 280, 281, 283, 284, 285, 286], "seafloor": [224, 226, 227, 228, 277], "unstretch": 228, "shelv": [231, 269, 277], "ssh_adjust": [231, 243, 245, 269], "iter": [231, 269], "compass_branch": 231, "default_input": [231, 240, 260, 268, 269], "ocean_model": [231, 248, 269], "latest": [231, 248, 260, 267, 278, 287], "compat": [231, 248, 260, 265, 267], "verison": 231, "maintain": [231, 287], "inertial_gravity_wav": [231, 236, 283, 293], "manufactured_solut": [231, 236, 278, 282], "single_column": [231, 236, 260, 263, 278, 282, 288, 289], "minim": 233, "fcell": [233, 243, 268, 281], "fedg": [233, 243, 268, 281], "fvertex": [233, 243, 268, 281], "slip": 233, "solid": [233, 262, 280, 281], "tangenti": 233, "enforc": [233, 248], "nonperiod": 233, "drag": 233, "mass": 233, "momentum": [233, 234, 237, 238, 283, 284], "scalar": 233, "rigid": 233, "solv": [233, 265, 277], "mid": [233, 280], "vari": [233, 235, 243, 265, 274, 277, 281], "consult": [233, 268], "tidal_forc": 233, "eddi": [234, 280], "addition": [234, 237, 238, 239, 270, 271, 272, 273, 275], "diffus": [234, 237, 238, 239], "50": [234, 237, 238, 246, 268, 280, 283, 284, 285], "prescrib": [234, 237, 238], "intens": 234, "globalconverg": [235, 247, 268], "studi": [235, 281], "advect": [235, 281, 283, 284, 285], "qu": [235, 268, 269, 279, 281], "ico": [235, 268, 279, 281], "fix": [235, 246, 268], "spheric": [235, 281], "24": [235, 281, 290], "shape": [235, 281], "blob": 235, "around": [235, 268, 269, 280, 281], "rate": [235, 237, 238, 268, 281, 283, 284, 285], "cosine_bell_with_viz": [235, 279], "distribut": 235, "dt_per_km": [235, 268, 280, 281, 283, 284, 286, 291], "rmse": [235, 237, 238, 283, 284], "slow": [235, 281], "shallow": [237, 248, 281, 283, 284, 286], "water": [237, 268, 280, 281, 283, 284, 285, 286], "100": [237, 238, 239, 277, 283, 284, 285], "25": [237, 238, 283, 284, 285], "exactsolut": [237, 238], "obtain": [237, 238, 248, 271], "assign": [237, 238, 281], "simul": [237, 238, 243, 266, 268, 279, 280, 283, 284, 286, 287, 291], "fall": [237, 238, 287], "accept": [237, 238], "bound": [237, 238], "calcul": [237, 243, 245], "accord": [238, 283, 284, 287], "exercis": [239, 264, 281, 285], "kpp_test": 239, "mixedlayerdepthsoutput": 239, "enabel": 239, "idealagetrac": [239, 285], "dimens": [239, 280, 285], "single_column_forc": [239, 285], "profil": [239, 265, 285], "throughout": [239, 280, 285], "idealag": 239, "encompass": 240, "perspect": 240, "four": 240, "major": [240, 243], "add_test_group": [240, 247, 268], "univers": 240, "mix": [240, 246, 283, 284, 285], "ice_shelf_2d": 240, "iceshelf2d": 240, "ziso": [240, 277, 292], "landice_model": [240, 248], "organ": [241, 244, 246, 267], "green": 241, "blue": [241, 270, 287], "orang": 241, "red": 241, "laid": 241, "fig": 241, "among": [241, 246, 248, 268], "organiz": 241, "concept": [241, 247, 266, 268, 292], "multiprocess": [243, 247, 269], "outsid": [243, 248], "emploi": 243, "prevent": 243, "unwant": 243, "outer": 243, "inner": 243, "variable_resolut": [243, 246, 287], "dome_varres_grid": 243, "signific": [243, 244, 245], "neglig": 243, "convent": [243, 248, 268], "fit": [243, 269], "applic": [243, 247, 248, 286, 291], "meshstep": 243, "getint": 243, "mesh_cpus_per_task": 243, "mesh_min_cpus_per_task": 243, "previous": [243, 268], "processor": [243, 280], "write_netcdf": [243, 268], "convers": [243, 268], "generate_grid": 243, "dsmesh": 243, "graphinfofilenam": [243, 268], "use_dist": [243, 268, 280], "gradient_width_dist": [243, 268, 280], "gradient_width_frac": [243, 268, 280], "bottom_temperatur": [243, 268, 280], "surface_temperatur": [243, 268, 280, 285], "temperature_differ": [243, 268, 280], "coriolis_paramet": [243, 268, 280, 283, 284, 285], "bottom_depth": [243, 268, 269, 277, 280, 281, 283, 284, 285, 286], "vert_level": [243, 268, 269, 277, 280, 281, 283, 284, 285, 286], "ones_lik": [243, 268], "xmin": 243, "min": [243, 268, 280, 285], "xmax": 243, "ymin": 243, "ymax": 243, "ymid": 243, "xperturbmin": 243, "xperturbmax": 243, "perturbationwidth": 243, "yoffset": 243, "sin": [243, 268, 280, 283, 284], "pi": [243, 268, 277, 280, 281], "temp_vert": [243, 268], "frac": [243, 268, 277, 280, 283], "logical_and": [243, 268], "transpos": [243, 268], "3rd": [243, 268], "crest": [243, 268, 280], "expand_dim": [243, 268], "dim": [243, 268], "axi": [243, 268], "broadcast": [243, 268], "zeros_lik": [243, 268], "nedg": [243, 268], "dtype": [243, 268], "xvertex": [243, 268], "commandlin": 243, "harm": 243, "likewis": [243, 268], "subsequ": [243, 266, 293], "arisen": 243, "problemat": 243, "usual": [243, 245, 248, 268, 287], "forwardstep": 243, "mesh_path": 243, "mesh_step": 243, "with_ice_shelf_cav": [243, 245], "initial_state_target": 243, "adjusted_init": [243, 245], "forcing_data": 243, "entha_analy_result": 243, "mat": 243, "enthalpy_benchmark": 243, "ourselv": 243, "reduc": 243, "firewal": 243, "bedmachineantarctica_v2_and_gebco_2022_0": 243, "05_degree_20220729": 243, "slate": 243, "icepresent_qu60km_polar": 243, "practic": [243, 247, 248], "straightforward": 243, "commonli": [243, 266], "expens": [243, 244], "mechan": 243, "notat": [243, 286, 291], "That": [243, 247, 266, 268, 287], "word": 243, "ff": 243, "quwisc240": [243, 247, 287, 293], "90c": 243, "91c": 243, "92": [243, 277], "91": 243, "sowisc12to60": [243, 287, 293], "performance_test": 243, "effici": [243, 268], "transfer": 243, "feasibl": 243, "nor": [243, 268], "add_depend": 243, "overhead": 243, "philosophi": [244, 247, 268], "context": [244, 268], "namesak": 244, "256": [244, 271, 275], "count": 244, "quicker": 244, "exce": 244, "offer": 244, "benefit": [244, 267], "bug": 244, "covereag": 244, "timestep": 244, "exhaust": 244, "recent": [244, 278, 288], "merg": 244, "reach": 244, "steadi": 244, "wet": 244, "fundament": 245, "incorpor": 245, "deprec": 245, "constrain_resourc": [245, 268], "smoke_test": [245, 246], "smoketest": [245, 246], "velo_solv": 245, "sia": [245, 248], "fo": 245, "add_step": [245, 268], "runmodel": 245, "run_step": 245, "0200": 245, "00_00": [245, 262, 268], "fine": [245, 268, 285], "recip": 245, "res_param": [245, 246], "144": 245, "36": [245, 270, 274, 285, 287], "4km": [245, 246, 268, 280, 287], "unsupport": [245, 246, 248], "enumer": [245, 268], "rpe_": [245, 268], "_nu_": [245, 268], "deliber": 245, "chosen": [245, 285], "demonstr": [245, 268], "clumsi": [245, 247], "rpe_1_nu_1": [245, 268, 280], "rpe_2_nu_5": [245, 268, 280], "filesfore3sm": 245, "configure_global_ocean": 245, "with_bgc": 245, "po4": 245, "no3": 245, "sio3": 245, "nh4": 245, "fe": [245, 271], "o2": 245, "dic": 245, "dic_alt_co2": 245, "alk": 245, "dofe": 245, "dop": 245, "dopr": 245, "donr": 245, "zooc": 245, "spchl": 245, "spc": 245, "spfe": 245, "spcaco3": 245, "diatchl": 245, "diatc": 245, "diatf": 245, "diatsi": 245, "diazchl": 245, "diazc": 245, "diazf": 245, "phaeochl": 245, "phaeoc": 245, "phaeof": 245, "dm": 245, "dmsp": 245, "prot": 245, "poli": 245, "lip": 245, "conceptu": [246, 247], "realist": [246, 267, 292], "2000m": [246, 287], "34": [246, 287], "halfar": 246, "cism": 246, "dome_typ": 246, "closest": 246, "put_origin_on_a_cel": 246, "hydrologi": 246, "hydro": [246, 292], "dome_viz": 246, "time_slic": 246, "save_imag": 246, "hide": [246, 268], "hide_fig": 246, "add_test_cas": [246, 268], "restart_test": 246, "restarttest": 246, "talk": 246, "16": [246, 269, 285, 287], "10e3": 246, "40": [246, 273], "126": 246, "4e3": 246, "160": [246, 268, 280], "500": [246, 268, 269, 277, 280], "held": 246, "initial_condit": 247, "dig": [247, 269], "infrastructur": [247, 268], "background": 247, "behind": 247, "adher": [247, 268], "pep8": [247, 248], "bot": [247, 277], "violat": 247, "consid": 247, "editor": 247, "pycharm": [247, 248, 268], "spyder": 247, "linter": 247, "flake8": [247, 248], "discourag": 247, "reformat": 247, "autopep8": 247, "undesir": 247, "lint": 247, "wildcard": 247, "vim": [247, 268], "plugin": 247, "id": [247, 248], "commit": [247, 248], "why": 247, "sound": 247, "subpackag": 247, "understand": [247, 269], "downstream": 247, "tutori": [247, 248], "clu": 247, "intro": 247, "docstr": [247, 267, 268], "strip": 247, "mpas_ocean": 247, "hidden": 247, "shortcut": [247, 287], "referenc": [247, 268], "mention": 247, "dot": 247, "charact": 247, "unix": [247, 267], "distinct": 247, "mayb": [247, 268], "machine_config": 247, "endswith": 247, "splitext": 247, "exactli": [247, 248, 268, 277], "move": [247, 248, 268, 286, 291], "renam": 247, "visa": 247, "versa": 247, "comfort": [247, 268], "inherit": [247, 268], "orient": 247, "program": [247, 269], "led": 247, "felt": 247, "contribut": 247, "hesit": 247, "predecessor": [247, 266, 267], "harder": 247, "outcom": 247, "augment": 247, "explain": 247, "hope": 247, "dens": 247, "learn": [247, 268], "curv": 247, "worth": [247, 268], "skill": 247, "broadli": 247, "endeavor": 247, "readabl": 247, "manipul": 247, "get_available_cores_and_nod": 247, "theoret": 247, "dozen": 247, "split": 247, "theori": 247, "biogeochemistri": 247, "ksh": 248, "mac": [248, 267], "csh": 248, "tcsh": 248, "temporarili": 248, "recogn": [248, 269, 287], "permiss": 248, "anyon": 248, "caus": [248, 271, 275, 277], "person": [248, 265], "base_path_to_install_or_update_conda": 248, "with_netlib_lapack": 248, "flavor": [248, 268], "troubl": [248, 268], "recognit": 248, "trilino": 248, "downsid": 248, "unneed": 248, "reinstal": 248, "caution": 248, "load_": 248, "encod": 248, "load_dev_polaris_": [248, 268], "env_nam": 248, "dev_polaris_": [248, 265], "workdir": [248, 287], "unexpect": [248, 266, 268], "occur": [248, 265], "rerun": 248, "echo": 248, "proceed": 248, "notic": 248, "conda_env": [248, 273, 287], "rememb": 248, "incorrect": 248, "unus": 248, "session": [248, 268], "pip": 248, "substanti": 248, "risk": [248, 268], "rare": 248, "env_onli": 248, "mpas_make_target": [248, 287], "scientif": [248, 287], "_albani": 248, "instruct": [248, 268], "proce": 248, "es3m": 248, "compli": 248, "memor": 248, "guidelin": 248, "complianc": 248, "checker": 248, "isort": 248, "flynt": 248, "mypi": 248, "77": 248, "e302": 248, "blank": 248, "resolv": 248, "simpler": [248, 268], "new_branch_nam": 248, "put": [248, 268], "elsewher": 248, "disk": [248, 269, 271, 275], "respons": 248, "simplest": 248, "your_new_branch": 248, "seaicemodelstep": 250, "concern": 250, "six": 257, "polaris_branch": 260, "post": 260, "src": 260, "registry_process": 260, "seaice_model": 260, "1m": [262, 290], "disc": [262, 290], "condidion": 262, "config_initial_ice_area": 262, "config_initial_ice_volum": 262, "config_atmospheric_forcing_typ": 262, "config_forcing_start_tim": 262, "config_forcing_cycle_start": 262, "config_forcing_cycle_dur": 262, "config_forcing_precipitation_unit": 262, "mm_per_sec": 262, "config_forcing_sst_typ": 262, "ncar": 262, "config_update_ocean_flux": 262, "config_include_pond_freshwater_feedback": 262, "standard_phys": 264, "standardphys": 264, "year": [264, 278, 290], "volum": 264, "snow": 264, "exact_restart": 264, "exactrestart": 264, "geo": 265, "cartopi": 265, "14": 265, "np110py27_4": 265, "calledprocesserror": 265, "deploy_tmp": 265, "vpn": 265, "site": 265, "shell": [265, 267], "honor": 265, "wide": 265, "spawn": 265, "usernam": [265, 268, 271, 275], "proxy_en": 265, "all_proxi": 265, "proxyout": 265, "8080": 265, "no_proxi": 265, "localhost": [265, 269, 274, 275, 287], "127": 265, "proxy_dis": 265, "unset": 265, "anytim": 265, "fatal": 265, "mpi_init": 265, "stack": 265, "mpir_init_thread": 265, "159": 265, "mpid_init": 265, "164": 265, "mpidi_ch3_init": 265, "95": 265, "mpid_nem_init": 265, "314": 265, "mpid_nem_tcp_init": 265, "173": 265, "mpid_nem_tcp_get_business_card": 265, "395": 265, "getsockinterfaceaddr": 265, "369": 265, "pn2034311": 265, "errno": 265, "host": [265, 269, 274, 287], "plu": 266, "autom": 267, "exascal": 267, "earth": 267, "kept": 267, "sens": [267, 268], "boundari": [267, 280, 292], "expert": 267, "launch": 267, "uncoupl": 267, "evolv": [267, 277, 281, 285], "quick": [267, 268, 278, 288, 293], "queue": 267, "beginn": [267, 268], "advanc": [267, 268], "mpas_to_yaml": 267, "troubleshoot": 267, "proxi": 267, "lanl": [267, 269, 271], "gethostbynam": 267, "glossari": 268, "port": [268, 275], "stick": 268, "miniconda": 268, "3_chrysalis_intel_openmpi": 268, "strict": 268, "push": 268, "lowercas": 268, "hyphen": 268, "settl": 268, "desktop": 268, "realli": [268, 275], "nice": [268, 275], "supercomput": 268, "yet_another_channel": 268, "vi": 268, "polaris_head": 268, "yetanotherchannel": 268, "instanc": 268, "repres": [268, 277, 281], "highli": 268, "camelcas": 268, "capit": 268, "letter": 268, "cap": 268, "awkward": 268, "encourag": 268, "enclos": 268, "briefli": 268, "alphabet": 268, "interest": 268, "anyth": 268, "probabl": [268, 274], "suppos": 268, "easili": 268, "tide": 268, "analyz": 268, "sai": [268, 274], "res_str": 268, "1000": [268, 269, 277, 280, 283, 284], "still": [268, 278, 286, 287, 291], "ti": 268, "loop": 268, "coarsest": [268, 269], "especi": 268, "anticip": 268, "promot": 268, "pattern": 268, "familiar": 268, "seen": 268, "brows": 268, "row": 268, "greater": 268, "disadvantag": 268, "foremost": 268, "magic": 268, "effect": [268, 286], "pain": 268, "path_to_mpas_ocean": 268, "path_to_working_dir": 268, "cat": 268, "slurm_jobid": 268, "_run_test": 268, "gpf": 268, "fs1": 268, "cbegeman": 268, "successfulli": 268, "x_cell": 268, "y_cell": 268, "grid_typ": [268, 269, 277, 280, 281, 283, 284, 285, 286], "coord_typ": [268, 277, 280, 281, 283, 284, 285, 286], "partial_cell_typ": [268, 277, 280, 281, 283, 284, 285, 286], "min_pc_fract": [268, 277, 280, 281, 283, 284, 285, 286], "everywher": 268, "depress": [268, 277], "x_min": 268, "x_max": 268, "y_min": 268, "y_max": 268, "y_mid": 268, "x_perturb_min": 268, "x_perturb_max": 268, "perturb_width": [268, 280], "y_offset": 268, "normal_veloc": 268, "attr": 268, "mostli": 268, "logic": [268, 280], "northern": [268, 280], "half": [268, 280], "southern": [268, 280], "halv": [268, 280], "gradient": [268, 280, 283, 284, 285], "08": [268, 280], "500km": [268, 280], "40e3": [268, 280], "35": [268, 280, 281, 285, 286, 287, 291], "2e": [268, 280], "initial_temperatur": 268, "initial_normal_veloc": 268, "connect": [268, 275], "match": 268, "decomp": [268, 287, 293], "light": 268, "fast": 268, "e3sm_compon": 268, "interact": [268, 271, 274, 275, 287], "interrupt": 268, "pty": 268, "navig": 268, "newli": 268, "bunch": 268, "didn": 268, "mistak": 268, "finger": 268, "cross": 268, "initial_normalveloc": 268, "initial_salin": 268, "btr_dt_per_km": [268, 280], "obvious": 268, "stress": [268, 285], "bring": 268, "landicemodelstep": 268, "huge": 268, "cp": 268, "config_dt": 268, "05": 268, "split_explicit_t": 268, "config_btr_dt": 268, "hmix_del2": 268, "bottom_drag": 268, "cvmix": 268, "0002": 268, "filename_interv": 268, "0100": 268, "input_interv": 268, "initial_onli": 268, "basicmesh": 268, "dayssincestart": 268, "surfacespe": 268, "lowersurfac": 268, "uppersurfac": 268, "ureconstructx": 268, "ureconstructi": 268, "great": 268, "remain": [268, 281, 285], "load_dataset": 268, "final_temperatur": 268, "ab": 268, "proc": 268, "area": 268, "markdown": 268, "users_guid": 268, "daunt": 268, "flesh": 268, "bonu": 268, "improv": 268, "introduc": 268, "techniqu": 268, "proport": [268, 277, 280, 281, 283, 284, 286, 291], "1384565": 268, "strftime": 268, "gmtime": 268, "run_second": 268, "basi": 268, "aim": 268, "becam": 268, "mainten": 268, "counter": 268, "thought": 268, "yet_another_channel_test_cas": 268, "yetanotherchanneltestcas": 268, "choic": [268, 281], "spuriou": [268, 280], "dissip": [268, 280], "pop": [268, 280], "mom": [268, 280], "mitgcm": [268, 280], "higher": 268, "heavi": 268, "analogi": 268, "tet": 268, "bear": 268, "late": 268, "_add_step": 268, "startswith": 268, "privat": 268, "break": [268, 280], "unusu": 268, "rpe_3_nu_10": 268, "rpe_4_nu_20": 268, "rpe_5_nu_200": 268, "_setup_step": 268, "20_00": 268, "0000": 268, "dayssincestartofsim": 268, "relativevort": 268, "pyplot": 268, "plt": 268, "output_": 268, "sections_yet_another_channel_": 268, "rpe_t": 268, "init_filenam": 268, "ds_init": 268, "_plot": 268, "compact": 268, "dirti": 268, "adopt": 268, "lesson": 268, "tricki": 268, "commun": 268, "nuanc": 268, "fake": 268, "wasn": 268, "fold": 268, "proper": 268, "third": 268, "extens": 269, "multinod": [269, 287], "explanatori": 269, "my_machin": 269, "extend": 269, "gitconfig": 269, "enter": 269, "author": 269, "asai": 269, "davi": 269, "email": 269, "pull_request": 269, "28": 269, "address": 269, "metadata": 269, "customize_config_pars": 269, "server_base_url": 269, "inej": 269, "check_siz": 269, "ssl": 269, "certif": 269, "core_path": 269, "partition_execut": 269, "dask": 269, "netcdf4": 269, "netcdf4_class": 269, "netcdf3_64bit": 269, "netcdf3_class": 269, "engin": 269, "scipi": 269, "mesh_databas": 269, "ocean_database_root": 269, "landice_database_root": 269, "mesh_cor": 269, "mesh_min_cor": 269, "mesh_max_memori": 269, "mesh_max_disk": 269, "init_cor": 269, "init_min_cor": 269, "init_max_memori": 269, "init_max_disk": 269, "init_thread": 269, "forward_cor": 269, "forward_min_cor": 269, "forward_thread": 269, "forward_max_memori": 269, "forward_max_disk": 269, "add_metadata": 269, "ec": 269, "wc": 269, "mesh_descript": 269, "autodetect": 269, "bathy_descript": 269, "gebco": 269, "2022": 269, "bedmachin": 269, "antarctica": 269, "init_descript": 269, "e3sm_vers": 269, "increment": 269, "mesh_revis": 269, "finest": 269, "min_r": 269, "max_r": 269, "max_depth": 269, "creation_d": 269, "peopl": 269, "contact": 269, "temperaturemax": 269, "statist": 269, "temperature_max": 269, "33": [269, 287], "enable_ocean_initial_condit": 269, "enable_ocean_graph_partit": 269, "enable_seaice_initial_condit": 269, "scrip": 269, "enable_scrip": 269, "transect": 269, "onlin": 269, "member": 269, "offlin": 269, "enable_diagnostics_fil": 269, "coarser": [269, 281], "finer": 269, "comparisonlatresolut": 269, "comparisonlonresolut": 269, "antarct": 269, "polar": [269, 270, 272, 277], "stereograph": 269, "comparisonantarcticstereowidth": 269, "6000": [269, 277], "comparisonantarcticstereoresolut": 269, "arctic": [269, 290], "comparisonarcticstereowidth": 269, "comparisonarcticstereoresolut": 269, "tanh_dz": 269, "3000": 269, "min_layer_thick": [269, 277], "max_layer_thick": [269, 277], "retain": 269, "ecosystem": 270, "gain": 270, "confluenc": 270, "public_html": [270, 272, 274], "soft": [270, 272, 274, 287], "mpi_intel": [270, 272, 273, 274], "condo": [270, 287], "acm": [270, 287], "medium": 270, "acme_high": 270, "load_latest_polaris_intel_impi": [270, 273], "load_latest_polaris_gnu_openmpi": [270, 272, 287], "dst": 271, "calendar": 271, "network": 271, "introduct": 271, "platform": 271, "batch": 271, "wtrw": 271, "ch": 271, "lustr": 271, "scratch4": 271, "scratch5": 271, "sacctmgr": 271, "assoc": 271, "cluster": 271, "45": 271, "sshare": 271, "sreport": 271, "accountutilizationbyus": 271, "2019": 271, "02": 271, "prioriti": 271, "yellow": 271, "chkhome": 271, "petabyt": 271, "df": 271, "bp": 271, "archiv": [271, 275], "hpss": [271, 275], "front": 271, "tn": 271, "storag": 271, "project_nam": 271, "salloc": [271, 274, 275], "account_nam": 271, "gpu": [271, 275], "hyperthread": [271, 275], "hang": [271, 275], "threads_per_cor": [271, 275], "shared_clim": [271, 287], "load_latest_polaris_gnu_mpich": [271, 275], "load_latest_polaris_intel_openmpi": 272, "compyf": 273, "app": [273, 287], "pmi2": 273, "submit": 274, "workload": 274, "squeue": 274, "my_usernam": [274, 275], "scancel": 274, "jobid": 274, "cancel": 274, "emtpi": 274, "three": 274, "mpi_mpich": [274, 287], "mpi_openmpi": [274, 287], "nompi": [274, 287], "p1": 275, "nersc": 275, "iri": 275, "filesystem": 275, "myquota": 275, "prjquota": 275, "projectid": 275, "m1795": 275, "hsi": 275, "htar": 275, "zstash": 275, "cf": [275, 287], "cdir": [275, 287], "premium": 275, "cray_compil": 275, "8844": 275, "monik": 275, "browser": 275, "grab": 275, "logon": 275, "kernel": 275, "myenv": 275, "ipykernel": 275, "kernelspec": 275, "u1": 275, "interpret": 275, "argv": 275, "ipykernel_launch": 275, "connection_fil": 275, "display_nam": 275, "languag": 275, "2500": 277, "deepest": 277, "stewart": 277, "2017": 277, "z_2": 277, "z_1": 277, "mathrm": 277, "tanh": 277, "rightarrow": 277, "infti": 277, "z_k": 277, "z_0": 277, "z_": [277, 285], "k": 277, "finder": 277, "n_z": 277, "h_": 277, "210": [277, 281], "scienc": 277, "hydrograph": 277, "climatologi": 277, "250": 277, "5500": 277, "renorm": 277, "51": 277, "221": 277, "63": 277, "floor": 277, "flat": [277, 280], "collaps": 277, "adcroft": 277, "campin": 277, "2004": 277, "absenc": 277, "squash": 277, "watercolumn": 277, "press": 277, "batymetri": 277, "stair": 277, "month": 278, "websit": [278, 288], "release_6": 278, "ilicak": 280, "2012": 280, "distinguish": 280, "zonal": [280, 285], "meridion": [280, 285], "psu": [280, 285], "cooler": 280, "north": 280, "sinusoid": 280, "perturb": [280, 281, 284], "t_0": 280, "t_b": 280, "t_": 280, "z_b": 280, "y_": 280, "l_x": 280, "warmer": 280, "ge": [280, 281], "gradient_width_fract": 280, "l_y": 280, "le": [280, 285], "flow": [280, 281], "stationari": [280, 285], "literatur": 280, "mk": 280, "celsiu": 280, "williamson": 281, "1992": 281, "sec": 281, "3a": 281, "skamarock": 281, "gassmann": 281, "bodi": 281, "rotat": [281, 283, 284], "transport": 281, "psi": 281, "proportion": 281, "icosohydr": 281, "480": 281, "150": 281, "nearest": 281, "insensit": [281, 285], "300": [281, 286], "passiv": 281, "psi_0": 281, "co": [281, 283, 284], "radiu": 281, "debug_tracers_1": 281, "equatori": 281, "u_0": 281, "tau": 281, "transit": 281, "equat": [281, 283, 284, 285], "vel_pd": 281, "tendenc": [281, 284], "multipli": 281, "rad": 281, "lat_cent": 281, "lon_cent": 281, "14159265": 281, "2123666": 281, "6667": 281, "hill": 281, "psi0": 281, "qu_conv_thresh": 281, "qu_conv_max": 281, "icos_conv_thresh": 281, "icos_conv_max": 281, "roughli": 281, "propag": [283, 284], "doubli": [283, 284], "assess": [283, 284], "numer": [283, 284], "accuraci": [283, 284], "discret": [283, 284], "implemen": 283, "bishnu": [283, 284], "friction": [283, 284], "neglect": [283, 284], "nonlinear": [283, 284], "analyt": [283, 292], "k_x": [283, 284], "k_y": [283, 284], "availi": [283, 284], "10000": [283, 284], "coriloi": 283, "1e": 283, "amplitud": [283, 284], "ssh_amplitud": [283, 284], "wavelength": [283, 284], "n_wavelengths_x": [283, 284], "n_wavelengths_i": [283, 284], "conv_thresh": [283, 284], "conv_max": [283, 284], "embed": 284, "eta_0": 284, "span": 285, "arbitrarili": 285, "virtu": 285, "examin": 285, "400": 285, "phi": 285, "phi_0": 285, "dz": 285, "ml": 285, "mld": 285, "surface_x": 285, "x_gradient_mixed_lay": 285, "mixed_layer_depth_x": 285, "x_difference_across_mixed_lay": 285, "x_gradient_interior": 285, "spatial": 285, "degc": 285, "temperature_gradient_mixed_lay": 285, "temperature_difference_across_mixed_lay": 285, "temperature_gradient_interior": 285, "mixed_layer_depth_temperatur": 285, "surface_salin": 285, "salinity_gradient_mixed_lay": 285, "salinity_difference_across_mixed_lay": 285, "salinity_gradient_interior": 285, "mixed_layer_depth_salin": 285, "scheme": 285, "dictat": 285, "kpp": 285, "restor": 285, "piston": 285, "toward": 285, "temperature_surface_restoring_valu": 285, "temperature_piston_veloc": 285, "salinity_surface_restoring_valu": 285, "salinity_piston_veloc": 285, "temperature_interior_restoring_r": 285, "salinity_interior_restoring_r": 285, "net": 285, "latent": 285, "heat": 285, "bulk": 285, "latent_heat_flux": 285, "sensibl": 285, "sensible_heat_flux": 285, "solar": 285, "shortwav": 285, "shortwave_heat_flux": 285, "evapor": 285, "evaporation_flux": 285, "5e": 285, "rain": 285, "rain_flux": 285, "wind": 285, "wind_stress_zon": 285, "wind_stress_meridion": 285, "characterist": [286, 291], "welcom": [286, 291], "icosohedr": [286, 291], "pertain": [286, 291], "inher": 286, "warrant": 286, "investig": 286, "load_latest_polari": 287, "minu": 287, "create_polaris_load_script": 287, "load_polaris_1": 287, "0_mpich": 287, "wiki": 287, "circular_shelf": 287, "sia_smoke_test": 287, "sia_decomposition_test": 287, "sia_restart_test": 287, "fo_smoke_test": 287, "fo_decomposition_test": 287, "fo_restart_test": 287, "37": 287, "38": 287, "17": 287, "210131_test_new_branch": 287, "my_config": 287, "smaller": 287, "previous_workdir": 287, "paper": 287, "recompil": 287, "live": 287, "safer": 287, "preserv": 287, "test_subdir": 287, "whatev": 287, "clock": 287, "j": 287, "exclus": 287, "job_nam": 287, "fo_integr": [287, 293], "sia_integr": [287, 293], "cosine_bell_cached_init": [287, 293], "ec30to60": [287, 293], "ecwisc30to60": [287, 293], "qu240_for_e3sm": [287, 293], "quwisc240_for_e3sm": [287, 293], "wc14": [287, 293], "suitenam": 287, "seaice_standalone_framework": 288, "71": 290, "35n": 290, "156": 290, "5w": 290, "atmospher": 290, "timeseri": 290, "pair": 290, "radial": 292, "form": 292, "prohibit": 293}, "objects": {"polaris": [[18, 0, 1, "", "Component"], [20, 0, 1, "", "ModelStep"], [33, 0, 1, "", "Step"], [42, 0, 1, "", "TestCase"], [46, 0, 1, "", "TestGroup"]], "polaris.Component": [[18, 1, 1, "", "__init__"], [19, 1, 1, "", "add_test_group"]], "polaris.ModelStep": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "add_model_config_options"], [22, 1, 1, "", "add_namelist_file"], [23, 1, 1, "", "add_streams_file"], [24, 1, 1, "", "add_yaml_file"], [25, 1, 1, "", "dynamic_model_config"], [26, 1, 1, "", "map_yaml_to_namelist"], [27, 1, 1, "", "partition"], [28, 1, 1, "", "process_inputs_and_outputs"], [29, 1, 1, "", "runtime_setup"], [30, 1, 1, "", "set_model_resources"], [31, 1, 1, "", "setup"], [32, 1, 1, "", "update_namelist_pio"]], "polaris.Step": [[33, 1, 1, "", "__init__"], [34, 1, 1, "", "add_dependency"], [35, 1, 1, "", "add_input_file"], [36, 1, 1, "", "add_output_file"], [37, 1, 1, "", "constrain_resources"], [38, 1, 1, "", "run"], [39, 1, 1, "", "runtime_setup"], [40, 1, 1, "", "set_resources"], [41, 1, 1, "", "setup"]], "polaris.TestCase": [[42, 1, 1, "", "__init__"], [43, 1, 1, "", "add_step"], [44, 1, 1, "", "configure"], [45, 1, 1, "", "validate"]], "polaris.TestGroup": [[46, 1, 1, "", "__init__"], [47, 1, 1, "", "add_test_case"]], "polaris.__main__": [[48, 2, 1, "", "main"]], "polaris.cache": [[49, 2, 1, "", "update_cache"]], "polaris.components": [[50, 2, 1, "", "get_components"]], "polaris.config": [[51, 0, 1, "", "PolarisConfigParser"]], "polaris.config.PolarisConfigParser": [[51, 1, 1, "", "__init__"]], "polaris.io": [[52, 2, 1, "", "download"], [53, 3, 0, "-", "imp_res"], [54, 2, 1, "", "symlink"]], "polaris.job": [[55, 2, 1, "", "get_slurm_options"], [56, 2, 1, "", "write_job_script"]], "polaris.list": [[57, 2, 1, "", "list_cases"], [58, 2, 1, "", "list_machines"], [59, 2, 1, "", "list_suites"]], "polaris.logging": [[60, 2, 1, "", "log_method_call"]], "polaris.mesh": [[61, 0, 1, "", "IcosahedralMeshStep"], [68, 0, 1, "", "QuasiUniformSphericalMeshStep"]], "polaris.mesh.IcosahedralMeshStep": [[61, 1, 1, "", "__init__"], [62, 1, 1, "", "build_subdivisions_cell_width_lat_lon"], [63, 1, 1, "", "get_cell_width"], [64, 1, 1, "", "get_subdivisions"], [65, 1, 1, "", "make_jigsaw_mesh"], [66, 1, 1, "", "run"], [67, 1, 1, "", "setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[68, 1, 1, "", "__init__"], [69, 1, 1, "", "build_cell_width_lat_lon"], [70, 1, 1, "", "make_jigsaw_mesh"], [71, 1, 1, "", "run"], [72, 1, 1, "", "setup"]], "polaris.mesh.planar": [[73, 2, 1, "", "compute_planar_hex_nx_ny"]], "polaris.mesh.spherical": [[74, 0, 1, "", "SphericalBaseStep"]], "polaris.mesh.spherical.SphericalBaseStep": [[74, 1, 1, "", "__init__"], [75, 1, 1, "", "run"], [76, 1, 1, "", "save_and_plot_cell_width"], [77, 1, 1, "", "setup"]], "polaris.model_step": [[78, 2, 1, "", "make_graph_file"]], "polaris.namelist": [[79, 2, 1, "", "ingest"], [80, 2, 1, "", "parse_replacements"], [81, 2, 1, "", "replace"], [82, 2, 1, "", "write"]], "polaris.ocean": [[131, 0, 1, "", "Ocean"]], "polaris.ocean.Ocean": [[131, 1, 1, "", "__init__"]], "polaris.ocean.model": [[132, 0, 1, "", "OceanModelStep"]], "polaris.ocean.model.OceanModelStep": [[132, 1, 1, "", "__init__"], [133, 1, 1, "", "compute_cell_count"], [134, 1, 1, "", "constrain_resources"], [135, 1, 1, "", "map_yaml_to_namelist"], [136, 1, 1, "", "setup"]], "polaris.ocean.rpe": [[137, 2, 1, "", "compute_rpe"]], "polaris.ocean.tests.baroclinic_channel": [[138, 0, 1, "", "BaroclinicChannel"], [139, 0, 1, "", "BaroclinicChannelTestCase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[138, 1, 1, "", "__init__"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[139, 1, 1, "", "__init__"], [140, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.decomp": [[141, 0, 1, "", "Decomp"]], "polaris.ocean.tests.baroclinic_channel.decomp.Decomp": [[141, 1, 1, "", "__init__"], [142, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.default": [[143, 0, 1, "", "Default"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[143, 1, 1, "", "__init__"], [144, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.forward": [[145, 0, 1, "", "Forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[145, 1, 1, "", "__init__"], [146, 1, 1, "", "compute_cell_count"], [147, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.init": [[148, 0, 1, "", "Init"]], "polaris.ocean.tests.baroclinic_channel.init.Init": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "run"], [150, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.restart": [[151, 0, 1, "", "Restart"]], "polaris.ocean.tests.baroclinic_channel.restart.Restart": [[151, 1, 1, "", "__init__"], [152, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.restart.restart_step": [[153, 0, 1, "", "RestartStep"]], "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep": [[153, 1, 1, "", "__init__"], [154, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.baroclinic_channel.rpe": [[155, 0, 1, "", "Rpe"]], "polaris.ocean.tests.baroclinic_channel.rpe.Rpe": [[155, 1, 1, "", "__init__"], [156, 1, 1, "", "configure"], [157, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis": [[158, 0, 1, "", "Analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis": [[158, 1, 1, "", "__init__"], [159, 1, 1, "", "run"], [160, 1, 1, "", "setup"]], "polaris.ocean.tests.baroclinic_channel.threads": [[161, 0, 1, "", "Threads"]], "polaris.ocean.tests.baroclinic_channel.threads.Threads": [[161, 1, 1, "", "__init__"], [162, 1, 1, "", "validate"]], "polaris.ocean.tests.baroclinic_channel.viz": [[163, 0, 1, "", "Viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[163, 1, 1, "", "__init__"], [164, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence": [[165, 0, 1, "", "GlobalConvergence"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[165, 1, 1, "", "__init__"]], "polaris.ocean.tests.global_convergence.cosine_bell": [[166, 0, 1, "", "CosineBell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[166, 1, 1, "", "__init__"], [167, 1, 1, "", "configure"], [168, 1, 1, "", "validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis": [[169, 0, 1, "", "Analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[169, 1, 1, "", "__init__"], [170, 1, 1, "", "rmse"], [171, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward": [[172, 0, 1, "", "Forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[172, 1, 1, "", "__init__"], [173, 1, 1, "", "compute_cell_count"], [174, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init": [[175, 0, 1, "", "Init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[175, 1, 1, "", "__init__"], [176, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz": [[177, 0, 1, "", "Viz"], [179, 0, 1, "", "VizMap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[177, 1, 1, "", "__init__"], [178, 1, 1, "", "run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[179, 1, 1, "", "__init__"], [180, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave": [[181, 0, 1, "", "InertialGravityWave"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[181, 1, 1, "", "__init__"]], "polaris.ocean.tests.inertial_gravity_wave.analysis": [[182, 0, 1, "", "Analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[182, 1, 1, "", "__init__"], [183, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence": [[184, 0, 1, "", "Convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[184, 1, 1, "", "__init__"], [185, 1, 1, "", "validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution": [[186, 0, 1, "", "ExactSolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[186, 1, 1, "", "__init__"], [187, 1, 1, "", "normal_velocity"], [188, 1, 1, "", "ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward": [[189, 0, 1, "", "Forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[189, 1, 1, "", "__init__"], [190, 1, 1, "", "compute_cell_count"], [191, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.inertial_gravity_wave.init": [[192, 0, 1, "", "Init"]], "polaris.ocean.tests.inertial_gravity_wave.init.Init": [[192, 1, 1, "", "__init__"], [193, 1, 1, "", "run"]], "polaris.ocean.tests.inertial_gravity_wave.viz": [[194, 0, 1, "", "Viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[194, 1, 1, "", "__init__"], [195, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution": [[196, 0, 1, "", "ManufacturedSolution"]], "polaris.ocean.tests.manufactured_solution.ManufacturedSolution": [[196, 1, 1, "", "__init__"]], "polaris.ocean.tests.manufactured_solution.analysis": [[197, 0, 1, "", "Analysis"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis": [[197, 1, 1, "", "__init__"], [198, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution.convergence": [[199, 0, 1, "", "Convergence"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence": [[199, 1, 1, "", "__init__"], [200, 1, 1, "", "validate"]], "polaris.ocean.tests.manufactured_solution.exact_solution": [[201, 0, 1, "", "ExactSolution"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution": [[201, 1, 1, "", "__init__"], [202, 1, 1, "", "normal_velocity"], [203, 1, 1, "", "ssh"]], "polaris.ocean.tests.manufactured_solution.forward": [[204, 0, 1, "", "Forward"]], "polaris.ocean.tests.manufactured_solution.forward.Forward": [[204, 1, 1, "", "__init__"], [205, 1, 1, "", "compute_cell_count"], [206, 1, 1, "", "dynamic_model_config"]], "polaris.ocean.tests.manufactured_solution.init": [[207, 0, 1, "", "Init"]], "polaris.ocean.tests.manufactured_solution.init.Init": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "run"]], "polaris.ocean.tests.manufactured_solution.viz": [[209, 0, 1, "", "Viz"]], "polaris.ocean.tests.manufactured_solution.viz.Viz": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "run"]], "polaris.ocean.tests.single_column": [[211, 0, 1, "", "SingleColumn"]], "polaris.ocean.tests.single_column.SingleColumn": [[211, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.cvmix": [[212, 0, 1, "", "CVMix"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[212, 1, 1, "", "__init__"], [213, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.forward": [[214, 0, 1, "", "Forward"]], "polaris.ocean.tests.single_column.forward.Forward": [[214, 1, 1, "", "__init__"]], "polaris.ocean.tests.single_column.ideal_age": [[215, 0, 1, "", "IdealAge"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[215, 1, 1, "", "__init__"], [216, 1, 1, "", "validate"]], "polaris.ocean.tests.single_column.init": [[217, 0, 1, "", "Init"]], "polaris.ocean.tests.single_column.init.Init": [[217, 1, 1, "", "__init__"], [218, 1, 1, "", "run"]], "polaris.ocean.tests.single_column.viz": [[219, 0, 1, "", "Viz"]], "polaris.ocean.tests.single_column.viz.Viz": [[219, 1, 1, "", "__init__"], [220, 1, 1, "", "run"]], "polaris.ocean.vertical.grid_1d": [[221, 2, 1, "", "generate_1d_grid"], [222, 2, 1, "", "write_1d_grid"]], "polaris.ocean.vertical": [[223, 2, 1, "", "init_vertical_coord"]], "polaris.ocean.vertical.partial_cells": [[224, 2, 1, "", "alter_bottom_depth"], [225, 2, 1, "", "alter_ssh"]], "polaris.ocean.vertical.zlevel": [[226, 2, 1, "", "compute_min_max_level_cell"], [227, 2, 1, "", "compute_z_level_layer_thickness"], [228, 2, 1, "", "compute_z_level_resting_thickness"], [229, 2, 1, "", "init_z_level_vertical_coord"]], "polaris.ocean.vertical.zstar": [[230, 2, 1, "", "init_z_star_vertical_coord"]], "polaris.parallel": [[83, 2, 1, "", "get_available_parallel_resources"], [84, 2, 1, "", "get_parallel_command"], [85, 2, 1, "", "run_command"], [86, 2, 1, "", "set_cores_per_node"]], "polaris.provenance": [[87, 2, 1, "", "write"]], "polaris.remap": [[88, 0, 1, "", "MappingFileStep"]], "polaris.remap.MappingFileStep": [[88, 1, 1, "", "__init__"], [89, 1, 1, "", "dst_from_lon_lat"], [90, 1, 1, "", "dst_from_mpas"], [91, 1, 1, "", "dst_from_points"], [92, 1, 1, "", "dst_from_proj"], [93, 1, 1, "", "dst_global_lon_lat"], [94, 1, 1, "", "get_remapper"], [95, 1, 1, "", "runtime_setup"], [96, 1, 1, "", "src_from_lon_lat"], [97, 1, 1, "", "src_from_mpas"], [98, 1, 1, "", "src_from_proj"]], "polaris.run": [[99, 2, 1, "", "load_dependencies"], [100, 2, 1, "", "pickle_step_after_run"], [103, 2, 1, "", "setup_config"], [104, 2, 1, "", "unpickle_suite"]], "polaris.run.serial": [[101, 2, 1, "", "run_single_step"], [102, 2, 1, "", "run_tests"]], "polaris.seaice": [[251, 0, 1, "", "SeaIce"]], "polaris.seaice.SeaIce": [[251, 1, 1, "", "__init__"]], "polaris.seaice.tests.single_column": [[252, 0, 1, "", "SingleColumn"]], "polaris.seaice.tests.single_column.SingleColumn": [[252, 1, 1, "", "__init__"]], "polaris.seaice.tests.single_column.exact_restart": [[253, 0, 1, "", "ExactRestart"]], "polaris.seaice.tests.single_column.exact_restart.ExactRestart": [[253, 1, 1, "", "__init__"], [254, 1, 1, "", "validate"]], "polaris.seaice.tests.single_column.forward": [[255, 0, 1, "", "Forward"]], "polaris.seaice.tests.single_column.forward.Forward": [[255, 1, 1, "", "__init__"]], "polaris.seaice.tests.single_column.standard_physics": [[256, 0, 1, "", "StandardPhysics"]], "polaris.seaice.tests.single_column.standard_physics.StandardPhysics": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "validate"]], "polaris.seaice.tests.single_column.standard_physics.viz": [[258, 0, 1, "", "Viz"]], "polaris.seaice.tests.single_column.standard_physics.viz.Viz": [[258, 1, 1, "", "__init__"], [259, 1, 1, "", "run"]], "polaris.setup": [[105, 2, 1, "", "setup_case"], [106, 2, 1, "", "setup_cases"]], "polaris.streams": [[107, 2, 1, "", "read"], [108, 2, 1, "", "update_defaults"], [109, 2, 1, "", "update_tree"], [110, 2, 1, "", "write"]], "polaris.suite": [[111, 2, 1, "", "setup_suite"]], "polaris.validate": [[112, 2, 1, "", "compare_timers"], [113, 2, 1, "", "compare_variables"]], "polaris.viz.globe": [[114, 2, 1, "", "plot_global"]], "polaris.viz": [[115, 2, 1, "", "plot_horiz_field"]], "polaris.yaml": [[116, 0, 1, "", "PolarisYaml"], [120, 2, 1, "", "main_mpas_to_yaml"], [121, 2, 1, "", "mpas_namelist_and_streams_to_yaml"], [122, 2, 1, "", "yaml_to_mpas_streams"]], "polaris.yaml.PolarisYaml": [[116, 1, 1, "", "__init__"], [117, 1, 1, "", "read"], [118, 1, 1, "", "update"], [119, 1, 1, "", "write"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "module", "Python module"]}, "titleterms": {"design": [0, 1], "document": [0, 3, 6, 268], "templat": [1, 13], "summari": 1, "requir": 1, "name": 1, "topic": 1, "here": 1, "algorithm": 1, "option": [1, 5, 13, 130, 248, 250, 268, 270, 271, 272, 273, 274, 275, 280, 281, 283, 284, 285, 286, 290, 291], "same": 1, "implement": 1, "test": [1, 5, 129, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 236, 242, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 263, 268, 269, 279, 282, 287, 289, 290, 292, 293], "valid": [1, 2, 16, 45, 112, 113, 140, 142, 144, 152, 157, 162, 168, 185, 200, 213, 216, 245, 254, 257, 268, 287], "api": 2, "refer": [2, 129, 130], "compon": [2, 13, 18, 19, 50, 130, 231, 240, 247, 248, 250, 260, 278, 287, 288], "polari": [2, 4, 5, 7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 243, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 287], "framework": [2, 9, 129, 130, 234, 237, 238, 239, 247, 250, 264, 276], "command": [2, 4, 7], "line": [2, 4], "interfac": [2, 4], "list": [2, 4, 7, 57, 58, 59], "setup": [2, 4, 7, 31, 41, 67, 72, 77, 105, 106, 136, 150, 160, 243], "suit": [2, 4, 7, 111, 244, 279, 287, 293], "run": [2, 7, 13, 38, 66, 71, 75, 99, 100, 101, 102, 103, 104, 130, 149, 159, 164, 171, 176, 178, 180, 183, 193, 195, 198, 208, 210, 218, 220, 243, 248, 250, 259, 280, 281, 283, 284, 285, 286, 287, 290, 291], "cach": [2, 4, 7, 49, 243], "mpas_to_yaml": [2, 4], "base": 2, "class": [2, 247], "testgroup": [2, 46, 47], "testcas": [2, 42, 43, 44, 45, 245], "step": [2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 243, 268, 280, 281, 283, 284, 285, 286, 291], "modelstep": [2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "config": [2, 5, 8, 13, 51, 127, 130, 250, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 283, 284, 285, 286, 290, 291], "io": [2, 10, 52, 53, 54], "job": [2, 55, 56, 274, 287], "log": [2, 11, 60], "mesh": [2, 12, 13, 17, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 235, 268, 280, 281, 283, 284, 285, 286, 290, 291], "model_step": [2, 78], "namelist": [2, 13, 79, 80, 81, 82, 130], "parallel": [2, 83, 84, 85, 86], "proven": [2, 14, 87], "remap": [2, 15, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "stream": [2, 13, 107, 108, 109, 110, 130, 250, 268], "viz": [2, 114, 115, 163, 164, 177, 178, 179, 180, 194, 195, 209, 210, 219, 220, 235, 237, 238, 239, 258, 259, 264, 268], "yaml": [2, 13, 116, 117, 118, 119, 120, 121, 122, 130], "build": [3, 127, 248, 287], "serial": [4, 7, 101, 102], "deploi": 5, "new": [5, 127, 268], "spack": [5, 127, 248, 287], "environ": [5, 127, 248, 265, 287], "where": 5, "do": 5, "we": 5, "updat": [5, 13, 118, 248], "depend": [5, 243], "mach": 5, "conda": [5, 248, 265, 274, 287], "identifi": 5, "e3sm": [5, 13, 130, 248, 250, 287], "machin": [5, 127, 248, 274, 287], "describ": [5, 127], "modul": [5, 7, 247, 248], "env": 5, "variabl": [5, 16], "etc": 5, "creat": [5, 248, 268], "from": [5, 17, 130, 243, 248, 274], "remot": [5, 275], "branch": 5, "petsc": [5, 248], "netlib": [5, 248], "lapack": [5, 248], "albani": [5, 248], "troubleshoot": [5, 248, 265], "mpa": [5, 130, 233, 262], "ocean": [5, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 278], "without": 5, "mali": 5, "share": [5, 247, 268], "docstr": 6, "clean": 7, "file": [8, 13, 127, 130, 243, 268, 269], "comment": 8, "symlink": [10, 54, 243], "download": [10, 52, 243], "spheric": [12, 17, 74, 75, 76, 77], "planar": [12, 17, 73], "uniform": [12, 277], "gener": 12, "model": [13, 130, 132, 133, 134, 135, 136, 232, 250, 261, 268, 287], "an": [13, 130, 250, 268], "ad": [13, 127, 243, 268], "runtim": 13, "input": [13, 243], "partit": [13, 27], "pio": 13, "make": [13, 268], "graph": 13, "norm": 16, "timer": 16, "visual": [17, 268, 290], "horizont": [17, 268], "field": 17, "global": 17, "lat": 17, "lon": 17, "plot": [17, 268], "add_test_group": 19, "add_model_config_opt": 21, "add_namelist_fil": 22, "add_streams_fil": 23, "add_yaml_fil": 24, "dynamic_model_config": [25, 147, 154, 174, 191, 206], "map_yaml_to_namelist": [26, 135], "process_inputs_and_output": 28, "runtime_setup": [29, 39, 95, 243], "set_model_resourc": 30, "update_namelist_pio": 32, "add_depend": 34, "add_input_fil": 35, "add_output_fil": 36, "constrain_resourc": [37, 134, 243], "set_resourc": 40, "add_step": 43, "configur": [44, 156, 167, 245, 265], "add_test_cas": 47, "__main__": 48, "main": 48, "update_cach": 49, "get_compon": 50, "polarisconfigpars": 51, "imp_r": 53, "get_slurm_opt": 55, "write_job_script": 56, "list_cas": 57, "list_machin": 58, "list_suit": 59, "log_method_cal": 60, "icosahedralmeshstep": [61, 62, 63, 64, 65, 66, 67], "build_subdivisions_cell_width_lat_lon": 62, "get_cell_width": 63, "get_subdivis": 64, "make_jigsaw_mesh": [65, 70], "quasiuniformsphericalmeshstep": [68, 69, 70, 71, 72], "build_cell_width_lat_lon": 69, "compute_planar_hex_nx_ni": 73, "sphericalbasestep": [74, 75, 76, 77], "save_and_plot_cell_width": 76, "make_graph_fil": 78, "ingest": 79, "parse_replac": 80, "replac": 81, "write": [82, 87, 110, 119], "get_available_parallel_resourc": 83, "get_parallel_command": 84, "run_command": 85, "set_cores_per_nod": 86, "mappingfilestep": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "dst_from_lon_lat": 89, "dst_from_mpa": 90, "dst_from_point": 91, "dst_from_proj": 92, "dst_global_lon_lat": 93, "get_remapp": 94, "src_from_lon_lat": 96, "src_from_mpa": 97, "src_from_proj": 98, "load_depend": 99, "pickle_step_after_run": 100, "run_single_step": 101, "run_test": 102, "setup_config": 103, "unpickle_suit": 104, "setup_cas": [105, 106], "read": [107, 117], "update_default": 108, "update_tre": 109, "setup_suit": 111, "compare_tim": 112, "compare_vari": 113, "globe": 114, "plot_glob": 114, "plot_horiz_field": 115, "polarisyaml": [116, 117, 118, 119], "main_mpas_to_yaml": 120, "mpas_namelist_and_streams_to_yaml": 121, "yaml_to_mpas_stream": 122, "anvil": [123, 270], "intel": [123, 125, 126, 270, 272, 273], "gnu": [123, 124, 125, 126, 128, 270, 271, 272, 275], "chicoma": [124, 271], "cpu": [124, 128, 271, 275], "chrysali": [125, 272], "compymcnodefac": [126, 273], "support": [127, 232, 248, 261, 274, 287], "other": [127, 243, 268, 274, 287], "perlmutt": [128, 275], "pm": 128, "group": [129, 236, 246, 247, 249, 263, 268, 282, 289], "baroclinic_channel": [129, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 234, 280], "inertial_gravity_wav": [129, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 237], "global_converg": [129, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 235, 281], "cosine_bel": [129, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 235, 279, 281], "manufactured_solut": [129, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 238, 284], "single_column": [129, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 239, 249, 252, 253, 254, 255, 256, 257, 258, 259, 264, 285, 290], "oceanmodelstep": [129, 132, 133, 134, 135, 136], "potenti": [129, 130], "energi": [129, 130], "rpe": [129, 130, 137, 155, 156, 157, 158, 159, 160, 234, 280], "vertic": [129, 130, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 268, 277, 280, 281, 283, 284, 285, 286], "coordin": [129, 130, 268, 277], "v": 130, "map": 130, "omega": 130, "set": [130, 248, 250, 287], "mpi": [130, 250, 274], "resourc": [130, 250], "rest": 130, "compute_cell_count": [133, 146, 173, 190, 205], "compute_rp": 137, "baroclinicchannel": 138, "baroclinicchanneltestcas": [139, 140], "decomp": [141, 142, 234, 280], "default": [143, 144, 234, 268, 280], "forward": [145, 146, 147, 172, 173, 174, 189, 190, 191, 204, 205, 206, 214, 234, 235, 237, 238, 239, 255, 264, 268], "init": [148, 149, 150, 175, 176, 192, 193, 207, 208, 217, 218, 234, 235, 237, 238, 239, 268], "restart": [151, 152, 153, 154, 234, 280, 290], "restart_step": [153, 154], "restartstep": [153, 154], "analysi": [158, 159, 160, 169, 170, 171, 182, 183, 197, 198, 235, 237, 238, 268], "thread": [161, 162, 234, 280], "globalconverg": 165, "cosinebel": [166, 167, 168], "rmse": 170, "vizmap": [179, 180], "inertialgravitywav": 181, "converg": [184, 185, 199, 200, 237, 238, 283, 284], "exact_solut": [186, 187, 188, 201, 202, 203, 237, 238], "exactsolut": [186, 187, 188, 201, 202, 203], "normal_veloc": [187, 202], "ssh": [188, 203], "manufacturedsolut": 196, "singlecolumn": [211, 252], "cvmix": [212, 213, 239, 285], "ideal_ag": [215, 216], "idealag": [215, 216], "grid_1d": [221, 222], "generate_1d_grid": 221, "write_1d_grid": 222, "init_vertical_coord": 223, "partial_cel": [224, 225], "alter_bottom_depth": 224, "alter_ssh": 225, "zlevel": [226, 227, 228, 229], "compute_min_max_level_cel": 226, "compute_z_level_layer_thick": 227, "compute_z_level_resting_thick": 228, "init_z_level_vertical_coord": 229, "zstar": 230, "init_z_star_vertical_coord": 230, "initi": [233, 262, 268, 280, 281, 283, 284, 285, 286, 290, 291], "condit": [233, 262, 268, 280, 281, 283, 284, 285, 286, 290, 291], "boundari": 233, "forc": [233, 262, 280, 281, 283, 284, 285, 286, 290, 291], "baroclinic_channel_test_cas": 234, "type": [235, 277], "ideal": [239, 285], "ag": [239, 285], "directori": 241, "structur": 241, "organ": 242, "attribut": [243, 245], "constructor": [243, 245], "output": [243, 268], "copi": 243, "pull": 244, "request": 244, "pr": 244, "nightli": 244, "case": [245, 247, 268, 269, 287, 292], "overview": 247, "code": [247, 248, 268], "style": [247, 248], "packag": 247, "within": 247, "quick": [248, 287], "start": [248, 268, 287], "develop": [248, 267, 268], "unix": 248, "shell": 248, "up": [248, 287], "repositori": 248, "beginn": 248, "compil": 248, "system": 248, "unknown": 248, "what": 248, "script": [248, 287], "doe": 248, "flag": 248, "activ": 248, "switch": 248, "between": [248, 268], "differ": 248, "onli": 248, "repo": 248, "worktre": 248, "advanc": 248, "user": [248, 267, 269, 287], "seaic": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262], "exact_restart": [253, 254], "exactrestart": [253, 254], "standard_phys": [256, 257, 258, 259], "standardphys": [256, 257], "standard_physics_test": 264, "exact_restart_test": 264, "solver": 265, "error": 265, "when": 265, "proxi": 265, "lanl": 265, "mac": 265, "gethostbynam": 265, "fail": 265, "glossari": [266, 267], "": 267, "guid": 267, "tutori": [267, 268], "compass": 267, "get": 268, "vari": 268, "resolut": 268, "paramet": 268, "thing": 268, "out": 268, "defin": 268, "more": 268, "again": 268, "one": 268, "time": [268, 280, 281, 283, 284, 285, 286, 291], "second": 268, "enhanc": 268, "dynam": 268, "comput": 268, "cell": 268, "count": 268, "superclass": 268, "studi": 268, "how": 268, "pass": 268, "data": [268, 275], "A": 269, "slurm": 274, "queue": 274, "mpich": 274, "openmpi": 274, "No": 274, "forg": 274, "jupyt": 275, "notebook": 275, "1d": 277, "grid": [277, 280, 281, 283, 284, 285, 286], "tanh_dz": 277, "60layerphc": 277, "100layere3smv1": 277, "3d": 277, "z": 277, "star": 277, "level": 277, "cosine_bell_cached_init": 279, "descript": [280, 281, 283, 284, 285, 286, 290, 291], "durat": [280, 281, 283, 284, 285, 286, 290, 291], "core": [280, 281, 283, 284, 285, 286, 290, 291], "cosine_bell_with_viz": 281, "inerti": 283, "graviti": 283, "wave": 283, "test_group_nam": [286, 291], "test_case_nam": [286, 291], "i": 287, "yet": 287, "load": 287, "standalon": 287, "sea": 288, "ic": 288, "standard": 290, "physic": 290, "timestep": 290, "exact": 290}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Design Documents": [[0, "design-documents"]], "Template": [[1, "template"]], "Summary": [[1, "summary"]], "Requirements": [[1, "requirements"]], "Requirement: name-of-topic-here": [[1, "requirement-name-of-topic-here"]], "Algorithm Design (optional)": [[1, "algorithm-design-optional"]], "Algorithm Design: name-of-topic-here (same as Requirement)": [[1, "algorithm-design-name-of-topic-here-same-as-requirement"]], "Implementation": [[1, "implementation"]], "Implementation: name-of-topic-here (same as Requirement)": [[1, "implementation-name-of-topic-here-same-as-requirement"]], "Testing": [[1, "testing"]], "Testing and Validation: name-of-topic-here (same as Requirement)": [[1, "testing-and-validation-name-of-topic-here-same-as-requirement"]], "API reference": [[2, "api-reference"]], "Components": [[2, "components"], [240, "components"]], "polaris framework": [[2, "polaris-framework"]], "Command-line interface": [[2, "command-line-interface"], [4, "command-line-interface"]], "list": [[2, "list"]], "setup": [[2, "setup"]], "suite": [[2, "suite"]], "run": [[2, "run"]], "cache": [[2, "cache"]], "mpas_to_yaml": [[2, "mpas-to-yaml"], [4, "mpas-to-yaml"]], "Base Classes": [[2, "base-classes"]], "Component": [[2, "component"]], "TestGroup": [[2, "testgroup"]], "TestCase": [[2, "testcase"]], "Step": [[2, "step"]], "ModelStep": [[2, "modelstep"]], "components": [[2, "id1"]], "config": [[2, "config"]], "io": [[2, "io"]], "job": [[2, "job"]], "logging": [[2, "logging"]], "mesh": [[2, "mesh"], [235, "mesh"], [280, "mesh"], [280, "id2"], [280, "id9"], [280, "id17"], [280, "id25"], [280, "id32"], [281, "mesh"], [283, "mesh"], [284, "mesh"], [285, "mesh"], [285, "id3"], [285, "id8"], [286, "mesh"], [290, "mesh"], [290, "id1"], [290, "id6"], [291, "mesh"]], "model_step": [[2, "model-step"]], "namelist": [[2, "namelist"]], "parallel": [[2, "parallel"]], "provenance": [[2, "provenance"]], "remap": [[2, "remap"]], "streams": [[2, "streams"]], "validate": [[2, "validate"]], "viz": [[2, "viz"], [235, "viz"], [237, "viz"], [238, "viz"], [239, "viz"], [264, "viz"]], "yaml": [[2, "yaml"]], "Building the Documentation": [[3, "building-the-documentation"]], "polaris list": [[4, "polaris-list"]], "polaris setup": [[4, "polaris-setup"]], "polaris suite": [[4, "polaris-suite"]], "polaris serial": [[4, "polaris-serial"]], "polaris cache": [[4, "polaris-cache"]], "Deploying a new spack environment": [[5, "deploying-a-new-spack-environment"]], "Where do we update polaris dependencies?": [[5, "where-do-we-update-polaris-dependencies"]], "Mache": [[5, "mache"], [5, "id1"]], "Spack": [[5, "spack"]], "Conda": [[5, "conda"]], "Identifying E3SM machines": [[5, "identifying-e3sm-machines"]], "Config options describing E3SM machines": [[5, "config-options-describing-e3sm-machines"]], "Modules, env. variables, etc. for  E3SM machines": [[5, "modules-env-variables-etc-for-e3sm-machines"]], "Creating spack environments": [[5, "creating-spack-environments"]], "Updating spack from polaris with mache from a remote branch": [[5, "updating-spack-from-polaris-with-mache-from-a-remote-branch"]], "Testing spack with PETSc (and Netlib LAPACK)": [[5, "testing-spack-with-petsc-and-netlib-lapack"]], "Testing spack with Albany": [[5, "testing-spack-with-albany"]], "Troubleshooting spack": [[5, "troubleshooting-spack"]], "Testing polaris": [[5, "testing-polaris"]], "Testing MPAS-Ocean without PETSc": [[5, "testing-mpas-ocean-without-petsc"]], "Testing MALI with Albany": [[5, "testing-mali-with-albany"]], "Testing MPAS-Ocean with PETSc": [[5, "testing-mpas-ocean-with-petsc"]], "Deploying shared spack environments": [[5, "deploying-shared-spack-environments"]], "Deploy spack for polaris without Albany or PETSc": [[5, "deploy-spack-for-polaris-without-albany-or-petsc"]], "Deploying spack with Albany": [[5, "deploying-spack-with-albany"]], "Deploying spack with PETSc (and Netlib LAPACK)": [[5, "deploying-spack-with-petsc-and-netlib-lapack"]], "Documentation": [[6, "documentation"], [268, "documentation"]], "Docstrings": [[6, "docstrings"]], "Modules for polaris commands": [[7, "modules-for-polaris-commands"]], "list module": [[7, "list-module"]], "setup module": [[7, "setup-module"]], "clean module": [[7, "clean-module"]], "suite module": [[7, "suite-module"]], "run.serial module": [[7, "run-serial-module"]], "cache module": [[7, "cache-module"]], "Config files": [[8, "config-files"]], "Comments in config files": [[8, "comments-in-config-files"]], "Framework": [[9, "framework"], [276, "framework"]], "IO": [[10, "io"]], "Symlinks": [[10, "symlinks"]], "Download": [[10, "download"]], "Logging": [[11, "logging"]], "Mesh": [[12, "mesh"]], "Spherical Meshes": [[12, "spherical-meshes"]], "Planar Meshes": [[12, "planar-meshes"]], "Uniform planar meshes": [[12, "uniform-planar-meshes"]], "General planar meshes": [[12, "general-planar-meshes"]], "Model": [[13, "model"], [130, "model"], [250, "model"]], "Running an E3SM component": [[13, "running-an-e3sm-component"], [130, "running-an-e3sm-component"], [250, "running-an-e3sm-component"]], "Adding yaml, namelist and streams files": [[13, "adding-yaml-namelist-and-streams-files"]], "Adding a yaml file": [[13, "adding-a-yaml-file"]], "Adding a namelist file": [[13, "adding-a-namelist-file"]], "Adding model config options": [[13, "adding-model-config-options"]], "Updating namelist or yaml options at runtime": [[13, "updating-namelist-or-yaml-options-at-runtime"]], "Adding a streams file": [[13, "adding-a-streams-file"]], "Adding a template streams file": [[13, "adding-a-template-streams-file"]], "Updating a streams file at runtime": [[13, "updating-a-streams-file-at-runtime"]], "Adding E3SM component as an input": [[13, "adding-e3sm-component-as-an-input"]], "Partitioning the mesh": [[13, "partitioning-the-mesh"]], "Updating PIO namelist options": [[13, "updating-pio-namelist-options"]], "Making a graph file": [[13, "making-a-graph-file"]], "Provenance": [[14, "provenance"]], "Remapping": [[15, "remapping"]], "Validation": [[16, "validation"]], "Validating variables": [[16, "validating-variables"]], "Norms": [[16, "norms"]], "Validating timers": [[16, "validating-timers"]], "Visualization": [[17, "visualization"]], "horizontal fields from planar meshes": [[17, "horizontal-fields-from-planar-meshes"]], "global lat/lon plots from spherical meshes": [[17, "global-lat-lon-plots-from-spherical-meshes"]], "polaris.Component": [[18, "polaris-component"]], "polaris.Component.add_test_group": [[19, "polaris-component-add-test-group"]], "polaris.ModelStep": [[20, "polaris-modelstep"]], "polaris.ModelStep.add_model_config_options": [[21, "polaris-modelstep-add-model-config-options"]], "polaris.ModelStep.add_namelist_file": [[22, "polaris-modelstep-add-namelist-file"]], "polaris.ModelStep.add_streams_file": [[23, "polaris-modelstep-add-streams-file"]], "polaris.ModelStep.add_yaml_file": [[24, "polaris-modelstep-add-yaml-file"]], "polaris.ModelStep.dynamic_model_config": [[25, "polaris-modelstep-dynamic-model-config"]], "polaris.ModelStep.map_yaml_to_namelist": [[26, "polaris-modelstep-map-yaml-to-namelist"]], "polaris.ModelStep.partition": [[27, "polaris-modelstep-partition"]], "polaris.ModelStep.process_inputs_and_outputs": [[28, "polaris-modelstep-process-inputs-and-outputs"]], "polaris.ModelStep.runtime_setup": [[29, "polaris-modelstep-runtime-setup"]], "polaris.ModelStep.set_model_resources": [[30, "polaris-modelstep-set-model-resources"]], "polaris.ModelStep.setup": [[31, "polaris-modelstep-setup"]], "polaris.ModelStep.update_namelist_pio": [[32, "polaris-modelstep-update-namelist-pio"]], "polaris.Step": [[33, "polaris-step"]], "polaris.Step.add_dependency": [[34, "polaris-step-add-dependency"]], "polaris.Step.add_input_file": [[35, "polaris-step-add-input-file"]], "polaris.Step.add_output_file": [[36, "polaris-step-add-output-file"]], "polaris.Step.constrain_resources": [[37, "polaris-step-constrain-resources"]], "polaris.Step.run": [[38, "polaris-step-run"]], "polaris.Step.runtime_setup": [[39, "polaris-step-runtime-setup"]], "polaris.Step.set_resources": [[40, "polaris-step-set-resources"]], "polaris.Step.setup": [[41, "polaris-step-setup"]], "polaris.TestCase": [[42, "polaris-testcase"]], "polaris.TestCase.add_step": [[43, "polaris-testcase-add-step"]], "polaris.TestCase.configure": [[44, "polaris-testcase-configure"]], "polaris.TestCase.validate": [[45, "polaris-testcase-validate"]], "polaris.TestGroup": [[46, "polaris-testgroup"]], "polaris.TestGroup.add_test_case": [[47, "polaris-testgroup-add-test-case"]], "polaris.__main__.main": [[48, "polaris-main-main"]], "polaris.cache.update_cache": [[49, "polaris-cache-update-cache"]], "polaris.components.get_components": [[50, "polaris-components-get-components"]], "polaris.config.PolarisConfigParser": [[51, "polaris-config-polarisconfigparser"]], "polaris.io.download": [[52, "polaris-io-download"]], "polaris.io.imp_res": [[53, "module-polaris.io.imp_res"]], "polaris.io.symlink": [[54, "polaris-io-symlink"]], "polaris.job.get_slurm_options": [[55, "polaris-job-get-slurm-options"]], "polaris.job.write_job_script": [[56, "polaris-job-write-job-script"]], "polaris.list.list_cases": [[57, "polaris-list-list-cases"]], "polaris.list.list_machines": [[58, "polaris-list-list-machines"]], "polaris.list.list_suites": [[59, "polaris-list-list-suites"]], "polaris.logging.log_method_call": [[60, "polaris-logging-log-method-call"]], "polaris.mesh.IcosahedralMeshStep": [[61, "polaris-mesh-icosahedralmeshstep"]], "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon": [[62, "polaris-mesh-icosahedralmeshstep-build-subdivisions-cell-width-lat-lon"]], "polaris.mesh.IcosahedralMeshStep.get_cell_width": [[63, "polaris-mesh-icosahedralmeshstep-get-cell-width"]], "polaris.mesh.IcosahedralMeshStep.get_subdivisions": [[64, "polaris-mesh-icosahedralmeshstep-get-subdivisions"]], "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh": [[65, "polaris-mesh-icosahedralmeshstep-make-jigsaw-mesh"]], "polaris.mesh.IcosahedralMeshStep.run": [[66, "polaris-mesh-icosahedralmeshstep-run"]], "polaris.mesh.IcosahedralMeshStep.setup": [[67, "polaris-mesh-icosahedralmeshstep-setup"]], "polaris.mesh.QuasiUniformSphericalMeshStep": [[68, "polaris-mesh-quasiuniformsphericalmeshstep"]], "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon": [[69, "polaris-mesh-quasiuniformsphericalmeshstep-build-cell-width-lat-lon"]], "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh": [[70, "polaris-mesh-quasiuniformsphericalmeshstep-make-jigsaw-mesh"]], "polaris.mesh.QuasiUniformSphericalMeshStep.run": [[71, "polaris-mesh-quasiuniformsphericalmeshstep-run"]], "polaris.mesh.QuasiUniformSphericalMeshStep.setup": [[72, "polaris-mesh-quasiuniformsphericalmeshstep-setup"]], "polaris.mesh.planar.compute_planar_hex_nx_ny": [[73, "polaris-mesh-planar-compute-planar-hex-nx-ny"]], "polaris.mesh.spherical.SphericalBaseStep": [[74, "polaris-mesh-spherical-sphericalbasestep"]], "polaris.mesh.spherical.SphericalBaseStep.run": [[75, "polaris-mesh-spherical-sphericalbasestep-run"]], "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width": [[76, "polaris-mesh-spherical-sphericalbasestep-save-and-plot-cell-width"]], "polaris.mesh.spherical.SphericalBaseStep.setup": [[77, "polaris-mesh-spherical-sphericalbasestep-setup"]], "polaris.model_step.make_graph_file": [[78, "polaris-model-step-make-graph-file"]], "polaris.namelist.ingest": [[79, "polaris-namelist-ingest"]], "polaris.namelist.parse_replacements": [[80, "polaris-namelist-parse-replacements"]], "polaris.namelist.replace": [[81, "polaris-namelist-replace"]], "polaris.namelist.write": [[82, "polaris-namelist-write"]], "polaris.parallel.get_available_parallel_resources": [[83, "polaris-parallel-get-available-parallel-resources"]], "polaris.parallel.get_parallel_command": [[84, "polaris-parallel-get-parallel-command"]], "polaris.parallel.run_command": [[85, "polaris-parallel-run-command"]], "polaris.parallel.set_cores_per_node": [[86, "polaris-parallel-set-cores-per-node"]], "polaris.provenance.write": [[87, "polaris-provenance-write"]], "polaris.remap.MappingFileStep": [[88, "polaris-remap-mappingfilestep"]], "polaris.remap.MappingFileStep.dst_from_lon_lat": [[89, "polaris-remap-mappingfilestep-dst-from-lon-lat"]], "polaris.remap.MappingFileStep.dst_from_mpas": [[90, "polaris-remap-mappingfilestep-dst-from-mpas"]], "polaris.remap.MappingFileStep.dst_from_points": [[91, "polaris-remap-mappingfilestep-dst-from-points"]], "polaris.remap.MappingFileStep.dst_from_proj": [[92, "polaris-remap-mappingfilestep-dst-from-proj"]], "polaris.remap.MappingFileStep.dst_global_lon_lat": [[93, "polaris-remap-mappingfilestep-dst-global-lon-lat"]], "polaris.remap.MappingFileStep.get_remapper": [[94, "polaris-remap-mappingfilestep-get-remapper"]], "polaris.remap.MappingFileStep.runtime_setup": [[95, "polaris-remap-mappingfilestep-runtime-setup"]], "polaris.remap.MappingFileStep.src_from_lon_lat": [[96, "polaris-remap-mappingfilestep-src-from-lon-lat"]], "polaris.remap.MappingFileStep.src_from_mpas": [[97, "polaris-remap-mappingfilestep-src-from-mpas"]], "polaris.remap.MappingFileStep.src_from_proj": [[98, "polaris-remap-mappingfilestep-src-from-proj"]], "polaris.run.load_dependencies": [[99, "polaris-run-load-dependencies"]], "polaris.run.pickle_step_after_run": [[100, "polaris-run-pickle-step-after-run"]], "polaris.run.serial.run_single_step": [[101, "polaris-run-serial-run-single-step"]], "polaris.run.serial.run_tests": [[102, "polaris-run-serial-run-tests"]], "polaris.run.setup_config": [[103, "polaris-run-setup-config"]], "polaris.run.unpickle_suite": [[104, "polaris-run-unpickle-suite"]], "polaris.setup.setup_case": [[105, "polaris-setup-setup-case"]], "polaris.setup.setup_cases": [[106, "polaris-setup-setup-cases"]], "polaris.streams.read": [[107, "polaris-streams-read"]], "polaris.streams.update_defaults": [[108, "polaris-streams-update-defaults"]], "polaris.streams.update_tree": [[109, "polaris-streams-update-tree"]], "polaris.streams.write": [[110, "polaris-streams-write"]], "polaris.suite.setup_suite": [[111, "polaris-suite-setup-suite"]], "polaris.validate.compare_timers": [[112, "polaris-validate-compare-timers"]], "polaris.validate.compare_variables": [[113, "polaris-validate-compare-variables"]], "polaris.viz.globe.plot_global": [[114, "polaris-viz-globe-plot-global"]], "polaris.viz.plot_horiz_field": [[115, "polaris-viz-plot-horiz-field"]], "polaris.yaml.PolarisYaml": [[116, "polaris-yaml-polarisyaml"]], "polaris.yaml.PolarisYaml.read": [[117, "polaris-yaml-polarisyaml-read"]], "polaris.yaml.PolarisYaml.update": [[118, "polaris-yaml-polarisyaml-update"]], "polaris.yaml.PolarisYaml.write": [[119, "polaris-yaml-polarisyaml-write"]], "polaris.yaml.main_mpas_to_yaml": [[120, "polaris-yaml-main-mpas-to-yaml"]], "polaris.yaml.mpas_namelist_and_streams_to_yaml": [[121, "polaris-yaml-mpas-namelist-and-streams-to-yaml"]], "polaris.yaml.yaml_to_mpas_streams": [[122, "polaris-yaml-yaml-to-mpas-streams"]], "Anvil": [[123, "anvil"], [270, "anvil"]], "intel": [[123, "intel"], [125, "intel"], [126, "intel"]], "gnu": [[123, "gnu"], [125, "gnu"], [126, "gnu"]], "Chicoma": [[124, "chicoma"], [271, "chicoma"]], "chicoma-cpu, gnu": [[124, "chicoma-cpu-gnu"]], "Chrysalis": [[125, "chrysalis"], [272, "chrysalis"]], "CompyMcNodeFace": [[126, "compymcnodeface"], [273, "compymcnodeface"]], "Machines": [[127, "machines"], [274, "machines"]], "Supported Machines": [[127, "supported-machines"], [274, "supported-machines"]], "Other Machines": [[127, "other-machines"], [274, "other-machines"]], "Adding a New Supported Machine": [[127, "adding-a-new-supported-machine"]], "Adding a Machine Config File": [[127, "adding-a-machine-config-file"]], "Describing a Spack Environment": [[127, "describing-a-spack-environment"]], "Building the Spack Environment": [[127, "building-the-spack-environment"]], "Perlmutter": [[128, "perlmutter"], [275, "perlmutter"]], "pm-cpu, gnu": [[128, "pm-cpu-gnu"]], "ocean": [[129, "ocean"]], "Test Groups": [[129, "test-groups"], [246, "test-groups"], [249, "test-groups"]], "baroclinic_channel": [[129, "baroclinic-channel"], [234, "baroclinic-channel"], [280, "baroclinic-channel"]], "inertial_gravity_wave": [[129, "inertial-gravity-wave"], [237, "inertial-gravity-wave"]], "global_convergence": [[129, "global-convergence"], [235, "global-convergence"], [281, "global-convergence"]], "cosine_bell": [[129, "cosine-bell"], [235, "cosine-bell"]], "manufactured_solution": [[129, "manufactured-solution"], [238, "manufactured-solution"], [284, "manufactured-solution"]], "single_column": [[129, "single-column"], [239, "single-column"], [249, "single-column"], [264, "single-column"], [285, "single-column"], [290, "single-column"]], "Ocean Framework": [[129, "ocean-framework"]], "OceanModelStep": [[129, "oceanmodelstep"]], "Reference Potential Energy (RPE)": [[129, "reference-potential-energy-rpe"]], "Vertical coordinates": [[129, "vertical-coordinates"]], "Ocean framework": [[130, "ocean-framework"]], "YAML files vs. namelists and streams": [[130, "yaml-files-vs-namelists-and-streams"]], "Mapping from Omega to MPAS-Ocean config options": [[130, "mapping-from-omega-to-mpas-ocean-config-options"]], "Setting MPI resources": [[130, "setting-mpi-resources"], [250, "setting-mpi-resources"]], "Model config options and streams": [[130, "model-config-options-and-streams"], [250, "model-config-options-and-streams"]], "Vertical coordinate": [[130, "vertical-coordinate"], [277, "vertical-coordinate"]], "reference (resting) potential energy (RPE)": [[130, "reference-resting-potential-energy-rpe"]], "polaris.ocean.Ocean": [[131, "polaris-ocean-ocean"]], "polaris.ocean.model.OceanModelStep": [[132, "polaris-ocean-model-oceanmodelstep"]], "polaris.ocean.model.OceanModelStep.compute_cell_count": [[133, "polaris-ocean-model-oceanmodelstep-compute-cell-count"]], "polaris.ocean.model.OceanModelStep.constrain_resources": [[134, "polaris-ocean-model-oceanmodelstep-constrain-resources"]], "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist": [[135, "polaris-ocean-model-oceanmodelstep-map-yaml-to-namelist"]], "polaris.ocean.model.OceanModelStep.setup": [[136, "polaris-ocean-model-oceanmodelstep-setup"]], "polaris.ocean.rpe.compute_rpe": [[137, "polaris-ocean-rpe-compute-rpe"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel": [[138, "polaris-ocean-tests-baroclinic-channel-baroclinicchannel"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase": [[139, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase"]], "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate": [[140, "polaris-ocean-tests-baroclinic-channel-baroclinicchanneltestcase-validate"]], "polaris.ocean.tests.baroclinic_channel.decomp.Decomp": [[141, "polaris-ocean-tests-baroclinic-channel-decomp-decomp"]], "polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate": [[142, "polaris-ocean-tests-baroclinic-channel-decomp-decomp-validate"]], "polaris.ocean.tests.baroclinic_channel.default.Default": [[143, "polaris-ocean-tests-baroclinic-channel-default-default"]], "polaris.ocean.tests.baroclinic_channel.default.Default.validate": [[144, "polaris-ocean-tests-baroclinic-channel-default-default-validate"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward": [[145, "polaris-ocean-tests-baroclinic-channel-forward-forward"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count": [[146, "polaris-ocean-tests-baroclinic-channel-forward-forward-compute-cell-count"]], "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config": [[147, "polaris-ocean-tests-baroclinic-channel-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.init.Init": [[148, "polaris-ocean-tests-baroclinic-channel-init-init"]], "polaris.ocean.tests.baroclinic_channel.init.Init.run": [[149, "polaris-ocean-tests-baroclinic-channel-init-init-run"]], "polaris.ocean.tests.baroclinic_channel.init.Init.setup": [[150, "polaris-ocean-tests-baroclinic-channel-init-init-setup"]], "polaris.ocean.tests.baroclinic_channel.restart.Restart": [[151, "polaris-ocean-tests-baroclinic-channel-restart-restart"]], "polaris.ocean.tests.baroclinic_channel.restart.Restart.validate": [[152, "polaris-ocean-tests-baroclinic-channel-restart-restart-validate"]], "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep": [[153, "polaris-ocean-tests-baroclinic-channel-restart-restart-step-restartstep"]], "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config": [[154, "polaris-ocean-tests-baroclinic-channel-restart-restart-step-restartstep-dynamic-model-config"]], "polaris.ocean.tests.baroclinic_channel.rpe.Rpe": [[155, "polaris-ocean-tests-baroclinic-channel-rpe-rpe"]], "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure": [[156, "polaris-ocean-tests-baroclinic-channel-rpe-rpe-configure"]], "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate": [[157, "polaris-ocean-tests-baroclinic-channel-rpe-rpe-validate"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis": [[158, "polaris-ocean-tests-baroclinic-channel-rpe-analysis-analysis"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run": [[159, "polaris-ocean-tests-baroclinic-channel-rpe-analysis-analysis-run"]], "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup": [[160, "polaris-ocean-tests-baroclinic-channel-rpe-analysis-analysis-setup"]], "polaris.ocean.tests.baroclinic_channel.threads.Threads": [[161, "polaris-ocean-tests-baroclinic-channel-threads-threads"]], "polaris.ocean.tests.baroclinic_channel.threads.Threads.validate": [[162, "polaris-ocean-tests-baroclinic-channel-threads-threads-validate"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz": [[163, "polaris-ocean-tests-baroclinic-channel-viz-viz"]], "polaris.ocean.tests.baroclinic_channel.viz.Viz.run": [[164, "polaris-ocean-tests-baroclinic-channel-viz-viz-run"]], "polaris.ocean.tests.global_convergence.GlobalConvergence": [[165, "polaris-ocean-tests-global-convergence-globalconvergence"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell": [[166, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure": [[167, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-configure"]], "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate": [[168, "polaris-ocean-tests-global-convergence-cosine-bell-cosinebell-validate"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis": [[169, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse": [[170, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-rmse"]], "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run": [[171, "polaris-ocean-tests-global-convergence-cosine-bell-analysis-analysis-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward": [[172, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count": [[173, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-compute-cell-count"]], "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config": [[174, "polaris-ocean-tests-global-convergence-cosine-bell-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init": [[175, "polaris-ocean-tests-global-convergence-cosine-bell-init-init"]], "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run": [[176, "polaris-ocean-tests-global-convergence-cosine-bell-init-init-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz": [[177, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run": [[178, "polaris-ocean-tests-global-convergence-cosine-bell-viz-viz-run"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap": [[179, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap"]], "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run": [[180, "polaris-ocean-tests-global-convergence-cosine-bell-viz-vizmap-run"]], "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave": [[181, "polaris-ocean-tests-inertial-gravity-wave-inertialgravitywave"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis": [[182, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis"]], "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run": [[183, "polaris-ocean-tests-inertial-gravity-wave-analysis-analysis-run"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence": [[184, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence"]], "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate": [[185, "polaris-ocean-tests-inertial-gravity-wave-convergence-convergence-validate"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution": [[186, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity": [[187, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh": [[188, "polaris-ocean-tests-inertial-gravity-wave-exact-solution-exactsolution-ssh"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward": [[189, "polaris-ocean-tests-inertial-gravity-wave-forward-forward"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count": [[190, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-compute-cell-count"]], "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config": [[191, "polaris-ocean-tests-inertial-gravity-wave-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.inertial_gravity_wave.init.Init": [[192, "polaris-ocean-tests-inertial-gravity-wave-init-init"]], "polaris.ocean.tests.inertial_gravity_wave.init.Init.run": [[193, "polaris-ocean-tests-inertial-gravity-wave-init-init-run"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz": [[194, "polaris-ocean-tests-inertial-gravity-wave-viz-viz"]], "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run": [[195, "polaris-ocean-tests-inertial-gravity-wave-viz-viz-run"]], "polaris.ocean.tests.manufactured_solution.ManufacturedSolution": [[196, "polaris-ocean-tests-manufactured-solution-manufacturedsolution"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis": [[197, "polaris-ocean-tests-manufactured-solution-analysis-analysis"]], "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run": [[198, "polaris-ocean-tests-manufactured-solution-analysis-analysis-run"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence": [[199, "polaris-ocean-tests-manufactured-solution-convergence-convergence"]], "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate": [[200, "polaris-ocean-tests-manufactured-solution-convergence-convergence-validate"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution": [[201, "polaris-ocean-tests-manufactured-solution-exact-solution-exactsolution"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity": [[202, "polaris-ocean-tests-manufactured-solution-exact-solution-exactsolution-normal-velocity"]], "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh": [[203, "polaris-ocean-tests-manufactured-solution-exact-solution-exactsolution-ssh"]], "polaris.ocean.tests.manufactured_solution.forward.Forward": [[204, "polaris-ocean-tests-manufactured-solution-forward-forward"]], "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count": [[205, "polaris-ocean-tests-manufactured-solution-forward-forward-compute-cell-count"]], "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config": [[206, "polaris-ocean-tests-manufactured-solution-forward-forward-dynamic-model-config"]], "polaris.ocean.tests.manufactured_solution.init.Init": [[207, "polaris-ocean-tests-manufactured-solution-init-init"]], "polaris.ocean.tests.manufactured_solution.init.Init.run": [[208, "polaris-ocean-tests-manufactured-solution-init-init-run"]], "polaris.ocean.tests.manufactured_solution.viz.Viz": [[209, "polaris-ocean-tests-manufactured-solution-viz-viz"]], "polaris.ocean.tests.manufactured_solution.viz.Viz.run": [[210, "polaris-ocean-tests-manufactured-solution-viz-viz-run"]], "polaris.ocean.tests.single_column.SingleColumn": [[211, "polaris-ocean-tests-single-column-singlecolumn"]], "polaris.ocean.tests.single_column.cvmix.CVMix": [[212, "polaris-ocean-tests-single-column-cvmix-cvmix"]], "polaris.ocean.tests.single_column.cvmix.CVMix.validate": [[213, "polaris-ocean-tests-single-column-cvmix-cvmix-validate"]], "polaris.ocean.tests.single_column.forward.Forward": [[214, "polaris-ocean-tests-single-column-forward-forward"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge": [[215, "polaris-ocean-tests-single-column-ideal-age-idealage"]], "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate": [[216, "polaris-ocean-tests-single-column-ideal-age-idealage-validate"]], "polaris.ocean.tests.single_column.init.Init": [[217, "polaris-ocean-tests-single-column-init-init"]], "polaris.ocean.tests.single_column.init.Init.run": [[218, "polaris-ocean-tests-single-column-init-init-run"]], "polaris.ocean.tests.single_column.viz.Viz": [[219, "polaris-ocean-tests-single-column-viz-viz"]], "polaris.ocean.tests.single_column.viz.Viz.run": [[220, "polaris-ocean-tests-single-column-viz-viz-run"]], "polaris.ocean.vertical.grid_1d.generate_1d_grid": [[221, "polaris-ocean-vertical-grid-1d-generate-1d-grid"]], "polaris.ocean.vertical.grid_1d.write_1d_grid": [[222, "polaris-ocean-vertical-grid-1d-write-1d-grid"]], "polaris.ocean.vertical.init_vertical_coord": [[223, "polaris-ocean-vertical-init-vertical-coord"]], "polaris.ocean.vertical.partial_cells.alter_bottom_depth": [[224, "polaris-ocean-vertical-partial-cells-alter-bottom-depth"]], "polaris.ocean.vertical.partial_cells.alter_ssh": [[225, "polaris-ocean-vertical-partial-cells-alter-ssh"]], "polaris.ocean.vertical.zlevel.compute_min_max_level_cell": [[226, "polaris-ocean-vertical-zlevel-compute-min-max-level-cell"]], "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness": [[227, "polaris-ocean-vertical-zlevel-compute-z-level-layer-thickness"]], "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness": [[228, "polaris-ocean-vertical-zlevel-compute-z-level-resting-thickness"]], "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord": [[229, "polaris-ocean-vertical-zlevel-init-z-level-vertical-coord"]], "polaris.ocean.vertical.zstar.init_z_star_vertical_coord": [[230, "polaris-ocean-vertical-zstar-init-z-star-vertical-coord"]], "Ocean component": [[231, "ocean-component"], [278, "ocean-component"]], "Models": [[232, "models"], [261, "models"]], "Supported Models": [[232, "supported-models"], [261, "supported-models"]], "MPAS-Ocean": [[233, "mpas-ocean"]], "Initial conditions": [[233, "initial-conditions"], [262, "initial-conditions"]], "Boundary conditions": [[233, "boundary-conditions"]], "Forcing": [[233, "forcing"], [262, "forcing"]], "framework": [[234, "framework"], [237, "framework"], [238, "framework"], [239, "framework"], [264, "framework"]], "baroclinic_channel_test_case": [[234, "baroclinic-channel-test-case"]], "init": [[234, "init"], [235, "init"], [237, "init"], [238, "init"], [239, "init"]], "forward": [[234, "forward"], [235, "forward"], [237, "forward"], [238, "forward"], [239, "forward"], [264, "forward"]], "default": [[234, "default"], [280, "default"]], "decomp": [[234, "decomp"], [280, "decomp"]], "restart": [[234, "restart"], [280, "restart"]], "threads": [[234, "threads"]], "rpe": [[234, "rpe"], [280, "rpe"]], "mesh types": [[235, "mesh-types"]], "analysis": [[235, "analysis"], [237, "analysis"], [238, "analysis"]], "Test groups": [[236, "test-groups"], [263, "test-groups"], [282, "test-groups"], [289, "test-groups"]], "exact_solution": [[237, "exact-solution"], [238, "exact-solution"]], "convergence": [[237, "convergence"], [238, "convergence"], [283, "convergence"], [284, "convergence"]], "cvmix": [[239, "cvmix"], [285, "cvmix"]], "ideal age": [[239, "ideal-age"], [285, "ocean-single-column-ideal-age"]], "Directory structure": [[241, "directory-structure"]], "Organization of Tests": [[242, "organization-of-tests"]], "Steps": [[243, "steps"]], "Step attributes": [[243, "step-attributes"]], "constructor": [[243, "constructor"], [245, "constructor"]], "constrain_resources()": [[243, "constrain-resources"]], "setup()": [[243, "setup"]], "runtime_setup()": [[243, "runtime-setup"]], "run()": [[243, "run"]], "inputs and outputs": [[243, "inputs-and-outputs"]], "Input files": [[243, "input-files"]], "Symlinks to input files": [[243, "symlinks-to-input-files"]], "Symlink to input files from polaris": [[243, "symlink-to-input-files-from-polaris"]], "Downloading and symlinking input files": [[243, "downloading-and-symlinking-input-files"]], "Copying input files": [[243, "copying-input-files"]], "Output files": [[243, "output-files"]], "Cached output files": [[243, "cached-output-files"]], "Adding other steps as dependencies": [[243, "adding-other-steps-as-dependencies"]], "Test Suites": [[244, "test-suites"], [287, "test-suites"], [293, "test-suites"]], "Pull-Request (PR) suite": [[244, "pull-request-pr-suite"]], "Nightly suite": [[244, "nightly-suite"]], "Test cases": [[245, "test-cases"]], "TestCase attributes": [[245, "testcase-attributes"]], "configure()": [[245, "configure"]], "validate()": [[245, "validate"]], "Overview": [[247, "overview"]], "Code Style": [[247, "code-style"]], "Packages and Modules": [[247, "packages-and-modules"]], "Packages": [[247, "packages"]], "Modules": [[247, "modules"]], "Classes": [[247, "classes"]], "Code sharing": [[247, "code-sharing"]], "\u2026in the polaris framework": [[247, "in-the-polaris-framework"]], "\u2026within a component": [[247, "within-a-component"]], "\u2026within a test group": [[247, "within-a-test-group"]], "\u2026within a test case": [[247, "within-a-test-case"]], "Quick Start for Developers": [[248, "quick-start-for-developers"]], "Unix Shell": [[248, "unix-shell"]], "Set up a polaris repository: for beginners": [[248, "set-up-a-polaris-repository-for-beginners"]], "polaris conda environment, spack environment, compilers and system modules": [[248, "polaris-conda-environment-spack-environment-compilers-and-system-modules"]], "Supported machines": [[248, "supported-machines"]], "Environments with Albany": [[248, "environments-with-albany"]], "Environments with PETSc and Netlib-LAPACK": [[248, "environments-with-petsc-and-netlib-lapack"]], "Unknown machines": [[248, "unknown-machines"]], "What the script does": [[248, "what-the-script-does"]], "Optional flags": [[248, "optional-flags"]], "Activating the environment": [[248, "activating-the-environment"]], "Switching between different polaris environments": [[248, "switching-between-different-polaris-environments"]], "Troubleshooting": [[248, "troubleshooting"], [265, "troubleshooting"]], "Creating/updating only the polaris environment": [[248, "creating-updating-only-the-polaris-environment"]], "Building E3SM components": [[248, "building-e3sm-components"]], "Running polaris from the repo": [[248, "running-polaris-from-the-repo"]], "Code style for polaris": [[248, "code-style-for-polaris"]], "Set up a polaris repository with worktrees: for advanced users": [[248, "set-up-a-polaris-repository-with-worktrees-for-advanced-users"]], "seaice": [[249, "seaice"]], "Seaice framework": [[250, "seaice-framework"]], "polaris.seaice.SeaIce": [[251, "polaris-seaice-seaice"]], "polaris.seaice.tests.single_column.SingleColumn": [[252, "polaris-seaice-tests-single-column-singlecolumn"]], "polaris.seaice.tests.single_column.exact_restart.ExactRestart": [[253, "polaris-seaice-tests-single-column-exact-restart-exactrestart"]], "polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate": [[254, "polaris-seaice-tests-single-column-exact-restart-exactrestart-validate"]], "polaris.seaice.tests.single_column.forward.Forward": [[255, "polaris-seaice-tests-single-column-forward-forward"]], "polaris.seaice.tests.single_column.standard_physics.StandardPhysics": [[256, "polaris-seaice-tests-single-column-standard-physics-standardphysics"]], "polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate": [[257, "polaris-seaice-tests-single-column-standard-physics-standardphysics-validate"]], "polaris.seaice.tests.single_column.standard_physics.viz.Viz": [[258, "polaris-seaice-tests-single-column-standard-physics-viz-viz"]], "polaris.seaice.tests.single_column.standard_physics.viz.Viz.run": [[259, "polaris-seaice-tests-single-column-standard-physics-viz-viz-run"]], "Seaice component": [[260, "seaice-component"]], "MPAS-Seaice": [[262, "mpas-seaice"]], "standard_physics_test": [[264, "standard-physics-test"]], "exact_restart_test": [[264, "exact-restart-test"]], "Solver errors when configuring conda environment": [[265, "solver-errors-when-configuring-conda-environment"]], "Proxy on LANL Macs": [[265, "proxy-on-lanl-macs"]], "gethostbyname failed": [[265, "gethostbyname-failed"]], "Glossary": [[266, "glossary"], [267, null]], "Polaris": [[267, "polaris"]], "User's guide": [[267, null]], "Developer's guide": [[267, null]], "Tutorials": [[267, null]], "Compass": [[267, "compass"]], "Developer Tutorial: Adding a new test group": [[268, "developer-tutorial-adding-a-new-test-group"]], "Getting started": [[268, "getting-started"]], "Making a new test group": [[268, "making-a-new-test-group"]], "Adding a \u201cdefault\u201d test case": [[268, "adding-a-default-test-case"]], "Varying resolution and other parameters": [[268, "varying-resolution-and-other-parameters"]], "Adding the init step": [[268, "adding-the-init-step"]], "Creating a horizontal mesh": [[268, "creating-a-horizontal-mesh"]], "Adding a config file": [[268, "adding-a-config-file"]], "Adding the step to the test case": [[268, "adding-the-step-to-the-test-case"]], "Creating a vertical coordinate": [[268, "creating-a-vertical-coordinate"]], "Creating an initial condition": [[268, "creating-an-initial-condition"]], "Adding plots": [[268, "adding-plots"]], "Adding step outputs": [[268, "adding-step-outputs"]], "Adding validation": [[268, "adding-validation"], [268, "id1"]], "Test things out!": [[268, "test-things-out"]], "Adding the forward step": [[268, "adding-the-forward-step"]], "Defining model config options and streams": [[268, "defining-model-config-options-and-streams"]], "Adding the forward step to the test case": [[268, "adding-the-forward-step-to-the-test-case"]], "Adding more validation": [[268, "adding-more-validation"]], "Test the test case again!": [[268, "test-the-test-case-again"]], "Adding a visualization step": [[268, "adding-a-visualization-step"]], "Adding the viz step to the test case": [[268, "adding-the-viz-step-to-the-test-case"]], "Test the test case one more time!": [[268, "test-the-test-case-one-more-time"]], "Adding a second test case": [[268, "adding-a-second-test-case"]], "Enhancements": [[268, "enhancements"]], "Adding model config options in code": [[268, "adding-model-config-options-in-code"]], "Adding dynamic model config options": [[268, "adding-dynamic-model-config-options"]], "Computing the cell count": [[268, "computing-the-cell-count"]], "Adding a shared \u201csuperclass\u201d for test cases": [[268, "adding-a-shared-superclass-for-test-cases"]], "Adding a parameter study": [[268, "adding-a-parameter-study"]], "Adding the steps to the test case": [[268, "adding-the-steps-to-the-test-case"]], "Adding the analysis step": [[268, "adding-the-analysis-step"]], "How to (and how not to) pass data between steps": [[268, "how-to-and-how-not-to-pass-data-between-steps"]], "Config Files": [[269, "config-files"]], "A \u201cuser\u201d config file": [[269, "a-user-config-file"]], "Test-case config files": [[269, "test-case-config-files"]], "config options": [[270, "config-options"], [271, "config-options"], [272, "config-options"], [273, "config-options"], [274, "config-options"], [275, "config-options"], [280, "config-options"], [280, "id7"], [280, "id14"], [280, "id22"], [280, "id30"], [280, "id37"], [281, "config-options"], [283, "config-options"], [284, "config-options"], [285, "config-options"], [285, "id1"], [285, "id6"], [285, "id13"], [286, "config-options"], [290, "config-options"], [290, "id5"], [290, "id10"], [291, "config-options"]], "Intel on Anvil": [[270, "intel-on-anvil"]], "Gnu on Anvil": [[270, "gnu-on-anvil"]], "Chicoma-CPU": [[271, "chicoma-cpu"]], "Gnu on Chicoma-CPU": [[271, "gnu-on-chicoma-cpu"]], "Intel on Chrysalis": [[272, "intel-on-chrysalis"]], "Gnu on Chrysalis": [[272, "gnu-on-chrysalis"]], "Intel on CompyMcNodeFace": [[273, "intel-on-compymcnodeface"]], "Slurm job queueing": [[274, "slurm-job-queueing"]], "MPICH": [[274, "mpich"]], "OpenMPI": [[274, "openmpi"]], "No MPI from conda-forge": [[274, "no-mpi-from-conda-forge"]], "Perlmutter-CPU": [[275, "perlmutter-cpu"]], "Gnu on Perlmutter-CPU": [[275, "gnu-on-perlmutter-cpu"]], "Jupyter notebook on remote data": [[275, "jupyter-notebook-on-remote-data"]], "1D Grid type": [[277, "d-grid-type"]], "uniform": [[277, "uniform"]], "tanh_dz": [[277, "tanh-dz"]], "60layerPHC": [[277, "layerphc"]], "100layerE3SMv1": [[277, "layere3smv1"]], "3D vertical coordinates": [[277, "d-vertical-coordinates"]], "z-star": [[277, "z-star"]], "z-level": [[277, "z-level"]], "Test suites": [[279, "test-suites"]], "cosine_bell and cosine_bell_cached_init test suite": [[279, "cosine-bell-and-cosine-bell-cached-init-test-suite"]], "description": [[280, "description"], [280, "id1"], [280, "id8"], [280, "id16"], [280, "id24"], [283, "description"], [284, "description"], [285, "description"], [285, "id2"], [285, "id7"], [286, "description"], [290, "description"], [291, "description"]], "vertical grid": [[280, "vertical-grid"], [280, "id3"], [280, "id10"], [280, "id18"], [280, "id26"], [280, "id33"], [281, "vertical-grid"], [283, "vertical-grid"], [284, "vertical-grid"], [285, "vertical-grid"], [285, "id4"], [285, "id9"], [286, "vertical-grid"]], "initial conditions": [[280, "initial-conditions"], [280, "id4"], [280, "id11"], [280, "id19"], [280, "id27"], [280, "id34"], [281, "initial-conditions"], [283, "initial-conditions"], [284, "initial-conditions"], [285, "initial-conditions"], [285, "id5"], [285, "id10"], [286, "initial-conditions"], [290, "initial-conditions"], [290, "id2"], [290, "id7"], [291, "initial-conditions"]], "forcing": [[280, "forcing"], [280, "id5"], [280, "id12"], [280, "id20"], [280, "id28"], [280, "id35"], [281, "forcing"], [283, "forcing"], [284, "forcing"], [285, "forcing"], [285, "id11"], [286, "forcing"], [290, "forcing"], [290, "id3"], [290, "id8"], [291, "forcing"]], "time step and run duration": [[280, "time-step-and-run-duration"], [280, "id6"], [280, "id13"], [280, "id21"], [280, "id29"], [280, "id36"], [281, "time-step-and-run-duration"], [283, "time-step-and-run-duration"], [284, "time-step-and-run-duration"], [285, "time-step-and-run-duration"], [285, "id12"], [286, "time-step-and-run-duration"], [291, "time-step-and-run-duration"]], "cores": [[280, "cores"], [280, "id15"], [280, "id23"], [280, "id31"], [280, "id38"], [281, "cores"], [283, "cores"], [284, "cores"], [285, "cores"], [285, "id14"], [286, "cores"], [290, "cores"], [290, "id4"], [290, "id9"], [291, "cores"]], "thread": [[280, "thread"]], "cosine_bell and cosine_bell_with_viz": [[281, "cosine-bell-and-cosine-bell-with-viz"]], "Description": [[281, "description"]], "inertial gravity wave": [[283, "inertial-gravity-wave"]], "test_group_name": [[286, "test-group-name"], [291, "test-group-name"]], "test_case_name": [[286, "test-case-name"], [291, "test-case-name"]], "Quick Start for Users": [[287, "quick-start-for-users"]], "Quick Start for Users is not yet valid": [[287, null]], "Loading polaris conda and spack environments": [[287, "loading-polaris-conda-and-spack-environments"]], "E3SM supported machines": [[287, "e3sm-supported-machines"]], "Other machines": [[287, "other-machines"]], "Building supported E3SM components as standalone models": [[287, "building-supported-e3sm-components-as-standalone-models"]], "Setting up test cases": [[287, "setting-up-test-cases"]], "Running a test case": [[287, "running-a-test-case"]], "Running with a job script": [[287, "running-with-a-job-script"]], "Sea ice component": [[288, "sea-ice-component"]], "standard physics test": [[290, "standard-physics-test"]], "timestep and run duration": [[290, "timestep-and-run-duration"], [290, "id11"]], "visualization": [[290, "visualization"]], "exact restart test": [[290, "exact-restart-test"]], "Test Cases": [[292, "test-cases"]]}, "indexentries": {"component (class in polaris)": [[18, "polaris.Component"]], "__init__() (polaris.component method)": [[18, "polaris.Component.__init__"]], "add_test_group() (polaris.component method)": [[19, "polaris.Component.add_test_group"]], "modelstep (class in polaris)": [[20, "polaris.ModelStep"]], "__init__() (polaris.modelstep method)": [[20, "polaris.ModelStep.__init__"]], "add_model_config_options() (polaris.modelstep method)": [[21, "polaris.ModelStep.add_model_config_options"]], "add_namelist_file() (polaris.modelstep method)": [[22, "polaris.ModelStep.add_namelist_file"]], "add_streams_file() (polaris.modelstep method)": [[23, "polaris.ModelStep.add_streams_file"]], "add_yaml_file() (polaris.modelstep method)": [[24, "polaris.ModelStep.add_yaml_file"]], "dynamic_model_config() (polaris.modelstep method)": [[25, "polaris.ModelStep.dynamic_model_config"]], "map_yaml_to_namelist() (polaris.modelstep method)": [[26, "polaris.ModelStep.map_yaml_to_namelist"]], "partition() (polaris.modelstep method)": [[27, "polaris.ModelStep.partition"]], "process_inputs_and_outputs() (polaris.modelstep method)": [[28, "polaris.ModelStep.process_inputs_and_outputs"]], "runtime_setup() (polaris.modelstep method)": [[29, "polaris.ModelStep.runtime_setup"]], "set_model_resources() (polaris.modelstep method)": [[30, "polaris.ModelStep.set_model_resources"]], "setup() (polaris.modelstep method)": [[31, "polaris.ModelStep.setup"]], "update_namelist_pio() (polaris.modelstep method)": [[32, "polaris.ModelStep.update_namelist_pio"]], "step (class in polaris)": [[33, "polaris.Step"]], "__init__() (polaris.step method)": [[33, "polaris.Step.__init__"]], "add_dependency() (polaris.step method)": [[34, "polaris.Step.add_dependency"]], "add_input_file() (polaris.step method)": [[35, "polaris.Step.add_input_file"]], "add_output_file() (polaris.step method)": [[36, "polaris.Step.add_output_file"]], "constrain_resources() (polaris.step method)": [[37, "polaris.Step.constrain_resources"]], "run() (polaris.step method)": [[38, "polaris.Step.run"]], "runtime_setup() (polaris.step method)": [[39, "polaris.Step.runtime_setup"]], "set_resources() (polaris.step method)": [[40, "polaris.Step.set_resources"]], "setup() (polaris.step method)": [[41, "polaris.Step.setup"]], "testcase (class in polaris)": [[42, "polaris.TestCase"]], "__init__() (polaris.testcase method)": [[42, "polaris.TestCase.__init__"]], "add_step() (polaris.testcase method)": [[43, "polaris.TestCase.add_step"]], "configure() (polaris.testcase method)": [[44, "polaris.TestCase.configure"]], "validate() (polaris.testcase method)": [[45, "polaris.TestCase.validate"]], "testgroup (class in polaris)": [[46, "polaris.TestGroup"]], "__init__() (polaris.testgroup method)": [[46, "polaris.TestGroup.__init__"]], "add_test_case() (polaris.testgroup method)": [[47, "polaris.TestGroup.add_test_case"]], "main() (in module polaris.__main__)": [[48, "polaris.__main__.main"]], "update_cache() (in module polaris.cache)": [[49, "polaris.cache.update_cache"]], "get_components() (in module polaris.components)": [[50, "polaris.components.get_components"]], "polarisconfigparser (class in polaris.config)": [[51, "polaris.config.PolarisConfigParser"]], "__init__() (polaris.config.polarisconfigparser method)": [[51, "polaris.config.PolarisConfigParser.__init__"]], "download() (in module polaris.io)": [[52, "polaris.io.download"]], "module": [[53, "module-polaris.io.imp_res"]], "polaris.io.imp_res": [[53, "module-polaris.io.imp_res"]], "symlink() (in module polaris.io)": [[54, "polaris.io.symlink"]], "get_slurm_options() (in module polaris.job)": [[55, "polaris.job.get_slurm_options"]], "write_job_script() (in module polaris.job)": [[56, "polaris.job.write_job_script"]], "list_cases() (in module polaris.list)": [[57, "polaris.list.list_cases"]], "list_machines() (in module polaris.list)": [[58, "polaris.list.list_machines"]], "list_suites() (in module polaris.list)": [[59, "polaris.list.list_suites"]], "log_method_call() (in module polaris.logging)": [[60, "polaris.logging.log_method_call"]], "icosahedralmeshstep (class in polaris.mesh)": [[61, "polaris.mesh.IcosahedralMeshStep"]], "__init__() (polaris.mesh.icosahedralmeshstep method)": [[61, "polaris.mesh.IcosahedralMeshStep.__init__"]], "build_subdivisions_cell_width_lat_lon() (polaris.mesh.icosahedralmeshstep method)": [[62, "polaris.mesh.IcosahedralMeshStep.build_subdivisions_cell_width_lat_lon"]], "get_cell_width() (polaris.mesh.icosahedralmeshstep static method)": [[63, "polaris.mesh.IcosahedralMeshStep.get_cell_width"]], "get_subdivisions() (polaris.mesh.icosahedralmeshstep static method)": [[64, "polaris.mesh.IcosahedralMeshStep.get_subdivisions"]], "make_jigsaw_mesh() (polaris.mesh.icosahedralmeshstep method)": [[65, "polaris.mesh.IcosahedralMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.icosahedralmeshstep method)": [[66, "polaris.mesh.IcosahedralMeshStep.run"]], "setup() (polaris.mesh.icosahedralmeshstep method)": [[67, "polaris.mesh.IcosahedralMeshStep.setup"]], "quasiuniformsphericalmeshstep (class in polaris.mesh)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep"]], "__init__() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[68, "polaris.mesh.QuasiUniformSphericalMeshStep.__init__"]], "build_cell_width_lat_lon() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[69, "polaris.mesh.QuasiUniformSphericalMeshStep.build_cell_width_lat_lon"]], "make_jigsaw_mesh() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[70, "polaris.mesh.QuasiUniformSphericalMeshStep.make_jigsaw_mesh"]], "run() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[71, "polaris.mesh.QuasiUniformSphericalMeshStep.run"]], "setup() (polaris.mesh.quasiuniformsphericalmeshstep method)": [[72, "polaris.mesh.QuasiUniformSphericalMeshStep.setup"]], "compute_planar_hex_nx_ny() (in module polaris.mesh.planar)": [[73, "polaris.mesh.planar.compute_planar_hex_nx_ny"]], "sphericalbasestep (class in polaris.mesh.spherical)": [[74, "polaris.mesh.spherical.SphericalBaseStep"]], "__init__() (polaris.mesh.spherical.sphericalbasestep method)": [[74, "polaris.mesh.spherical.SphericalBaseStep.__init__"]], "run() (polaris.mesh.spherical.sphericalbasestep method)": [[75, "polaris.mesh.spherical.SphericalBaseStep.run"]], "save_and_plot_cell_width() (polaris.mesh.spherical.sphericalbasestep method)": [[76, "polaris.mesh.spherical.SphericalBaseStep.save_and_plot_cell_width"]], "setup() (polaris.mesh.spherical.sphericalbasestep method)": [[77, "polaris.mesh.spherical.SphericalBaseStep.setup"]], "make_graph_file() (in module polaris.model_step)": [[78, "polaris.model_step.make_graph_file"]], "ingest() (in module polaris.namelist)": [[79, "polaris.namelist.ingest"]], "parse_replacements() (in module polaris.namelist)": [[80, "polaris.namelist.parse_replacements"]], "replace() (in module polaris.namelist)": [[81, "polaris.namelist.replace"]], "write() (in module polaris.namelist)": [[82, "polaris.namelist.write"]], "get_available_parallel_resources() (in module polaris.parallel)": [[83, "polaris.parallel.get_available_parallel_resources"]], "get_parallel_command() (in module polaris.parallel)": [[84, "polaris.parallel.get_parallel_command"]], "run_command() (in module polaris.parallel)": [[85, "polaris.parallel.run_command"]], "set_cores_per_node() (in module polaris.parallel)": [[86, "polaris.parallel.set_cores_per_node"]], "write() (in module polaris.provenance)": [[87, "polaris.provenance.write"]], "mappingfilestep (class in polaris.remap)": [[88, "polaris.remap.MappingFileStep"]], "__init__() (polaris.remap.mappingfilestep method)": [[88, "polaris.remap.MappingFileStep.__init__"]], "dst_from_lon_lat() (polaris.remap.mappingfilestep method)": [[89, "polaris.remap.MappingFileStep.dst_from_lon_lat"]], "dst_from_mpas() (polaris.remap.mappingfilestep method)": [[90, "polaris.remap.MappingFileStep.dst_from_mpas"]], "dst_from_points() (polaris.remap.mappingfilestep method)": [[91, "polaris.remap.MappingFileStep.dst_from_points"]], "dst_from_proj() (polaris.remap.mappingfilestep method)": [[92, "polaris.remap.MappingFileStep.dst_from_proj"]], "dst_global_lon_lat() (polaris.remap.mappingfilestep method)": [[93, "polaris.remap.MappingFileStep.dst_global_lon_lat"]], "get_remapper() (polaris.remap.mappingfilestep method)": [[94, "polaris.remap.MappingFileStep.get_remapper"]], "runtime_setup() (polaris.remap.mappingfilestep method)": [[95, "polaris.remap.MappingFileStep.runtime_setup"]], "src_from_lon_lat() (polaris.remap.mappingfilestep method)": [[96, "polaris.remap.MappingFileStep.src_from_lon_lat"]], "src_from_mpas() (polaris.remap.mappingfilestep method)": [[97, "polaris.remap.MappingFileStep.src_from_mpas"]], "src_from_proj() (polaris.remap.mappingfilestep method)": [[98, "polaris.remap.MappingFileStep.src_from_proj"]], "load_dependencies() (in module polaris.run)": [[99, "polaris.run.load_dependencies"]], "pickle_step_after_run() (in module polaris.run)": [[100, "polaris.run.pickle_step_after_run"]], "run_single_step() (in module polaris.run.serial)": [[101, "polaris.run.serial.run_single_step"]], "run_tests() (in module polaris.run.serial)": [[102, "polaris.run.serial.run_tests"]], "setup_config() (in module polaris.run)": [[103, "polaris.run.setup_config"]], "unpickle_suite() (in module polaris.run)": [[104, "polaris.run.unpickle_suite"]], "setup_case() (in module polaris.setup)": [[105, "polaris.setup.setup_case"]], "setup_cases() (in module polaris.setup)": [[106, "polaris.setup.setup_cases"]], "read() (in module polaris.streams)": [[107, "polaris.streams.read"]], "update_defaults() (in module polaris.streams)": [[108, "polaris.streams.update_defaults"]], "update_tree() (in module polaris.streams)": [[109, "polaris.streams.update_tree"]], "write() (in module polaris.streams)": [[110, "polaris.streams.write"]], "setup_suite() (in module polaris.suite)": [[111, "polaris.suite.setup_suite"]], "compare_timers() (in module polaris.validate)": [[112, "polaris.validate.compare_timers"]], "compare_variables() (in module polaris.validate)": [[113, "polaris.validate.compare_variables"]], "plot_global() (in module polaris.viz.globe)": [[114, "polaris.viz.globe.plot_global"]], "plot_horiz_field() (in module polaris.viz)": [[115, "polaris.viz.plot_horiz_field"]], "polarisyaml (class in polaris.yaml)": [[116, "polaris.yaml.PolarisYaml"]], "__init__() (polaris.yaml.polarisyaml method)": [[116, "polaris.yaml.PolarisYaml.__init__"]], "read() (polaris.yaml.polarisyaml class method)": [[117, "polaris.yaml.PolarisYaml.read"]], "update() (polaris.yaml.polarisyaml method)": [[118, "polaris.yaml.PolarisYaml.update"]], "write() (polaris.yaml.polarisyaml method)": [[119, "polaris.yaml.PolarisYaml.write"]], "main_mpas_to_yaml() (in module polaris.yaml)": [[120, "polaris.yaml.main_mpas_to_yaml"]], "mpas_namelist_and_streams_to_yaml() (in module polaris.yaml)": [[121, "polaris.yaml.mpas_namelist_and_streams_to_yaml"]], "yaml_to_mpas_streams() (in module polaris.yaml)": [[122, "polaris.yaml.yaml_to_mpas_streams"]], "ocean (class in polaris.ocean)": [[131, "polaris.ocean.Ocean"]], "__init__() (polaris.ocean.ocean method)": [[131, "polaris.ocean.Ocean.__init__"]], "oceanmodelstep (class in polaris.ocean.model)": [[132, "polaris.ocean.model.OceanModelStep"]], "__init__() (polaris.ocean.model.oceanmodelstep method)": [[132, "polaris.ocean.model.OceanModelStep.__init__"]], "compute_cell_count() (polaris.ocean.model.oceanmodelstep method)": [[133, "polaris.ocean.model.OceanModelStep.compute_cell_count"]], "constrain_resources() (polaris.ocean.model.oceanmodelstep method)": [[134, "polaris.ocean.model.OceanModelStep.constrain_resources"]], "map_yaml_to_namelist() (polaris.ocean.model.oceanmodelstep method)": [[135, "polaris.ocean.model.OceanModelStep.map_yaml_to_namelist"]], "setup() (polaris.ocean.model.oceanmodelstep method)": [[136, "polaris.ocean.model.OceanModelStep.setup"]], "compute_rpe() (in module polaris.ocean.rpe)": [[137, "polaris.ocean.rpe.compute_rpe"]], "baroclinicchannel (class in polaris.ocean.tests.baroclinic_channel)": [[138, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchannel method)": [[138, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannel.__init__"]], "baroclinicchanneltestcase (class in polaris.ocean.tests.baroclinic_channel)": [[139, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase"]], "__init__() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[139, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.baroclinicchanneltestcase method)": [[140, "polaris.ocean.tests.baroclinic_channel.BaroclinicChannelTestCase.validate"]], "decomp (class in polaris.ocean.tests.baroclinic_channel.decomp)": [[141, "polaris.ocean.tests.baroclinic_channel.decomp.Decomp"]], "__init__() (polaris.ocean.tests.baroclinic_channel.decomp.decomp method)": [[141, "polaris.ocean.tests.baroclinic_channel.decomp.Decomp.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.decomp.decomp method)": [[142, "polaris.ocean.tests.baroclinic_channel.decomp.Decomp.validate"]], "default (class in polaris.ocean.tests.baroclinic_channel.default)": [[143, "polaris.ocean.tests.baroclinic_channel.default.Default"]], "__init__() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[143, "polaris.ocean.tests.baroclinic_channel.default.Default.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.default.default method)": [[144, "polaris.ocean.tests.baroclinic_channel.default.Default.validate"]], "forward (class in polaris.ocean.tests.baroclinic_channel.forward)": [[145, "polaris.ocean.tests.baroclinic_channel.forward.Forward"]], "__init__() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[145, "polaris.ocean.tests.baroclinic_channel.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[146, "polaris.ocean.tests.baroclinic_channel.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.forward.forward method)": [[147, "polaris.ocean.tests.baroclinic_channel.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.baroclinic_channel.init)": [[148, "polaris.ocean.tests.baroclinic_channel.init.Init"]], "__init__() (polaris.ocean.tests.baroclinic_channel.init.init method)": [[148, "polaris.ocean.tests.baroclinic_channel.init.Init.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.init.init method)": [[149, "polaris.ocean.tests.baroclinic_channel.init.Init.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.init.init method)": [[150, "polaris.ocean.tests.baroclinic_channel.init.Init.setup"]], "restart (class in polaris.ocean.tests.baroclinic_channel.restart)": [[151, "polaris.ocean.tests.baroclinic_channel.restart.Restart"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart.restart method)": [[151, "polaris.ocean.tests.baroclinic_channel.restart.Restart.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.restart.restart method)": [[152, "polaris.ocean.tests.baroclinic_channel.restart.Restart.validate"]], "restartstep (class in polaris.ocean.tests.baroclinic_channel.restart.restart_step)": [[153, "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep"]], "__init__() (polaris.ocean.tests.baroclinic_channel.restart.restart_step.restartstep method)": [[153, "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.__init__"]], "dynamic_model_config() (polaris.ocean.tests.baroclinic_channel.restart.restart_step.restartstep method)": [[154, "polaris.ocean.tests.baroclinic_channel.restart.restart_step.RestartStep.dynamic_model_config"]], "rpe (class in polaris.ocean.tests.baroclinic_channel.rpe)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe.Rpe"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe.rpe method)": [[155, "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.__init__"]], "configure() (polaris.ocean.tests.baroclinic_channel.rpe.rpe method)": [[156, "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.configure"]], "validate() (polaris.ocean.tests.baroclinic_channel.rpe.rpe method)": [[157, "polaris.ocean.tests.baroclinic_channel.rpe.Rpe.validate"]], "analysis (class in polaris.ocean.tests.baroclinic_channel.rpe.analysis)": [[158, "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis"]], "__init__() (polaris.ocean.tests.baroclinic_channel.rpe.analysis.analysis method)": [[158, "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.rpe.analysis.analysis method)": [[159, "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.run"]], "setup() (polaris.ocean.tests.baroclinic_channel.rpe.analysis.analysis method)": [[160, "polaris.ocean.tests.baroclinic_channel.rpe.analysis.Analysis.setup"]], "threads (class in polaris.ocean.tests.baroclinic_channel.threads)": [[161, "polaris.ocean.tests.baroclinic_channel.threads.Threads"]], "__init__() (polaris.ocean.tests.baroclinic_channel.threads.threads method)": [[161, "polaris.ocean.tests.baroclinic_channel.threads.Threads.__init__"]], "validate() (polaris.ocean.tests.baroclinic_channel.threads.threads method)": [[162, "polaris.ocean.tests.baroclinic_channel.threads.Threads.validate"]], "viz (class in polaris.ocean.tests.baroclinic_channel.viz)": [[163, "polaris.ocean.tests.baroclinic_channel.viz.Viz"]], "__init__() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[163, "polaris.ocean.tests.baroclinic_channel.viz.Viz.__init__"]], "run() (polaris.ocean.tests.baroclinic_channel.viz.viz method)": [[164, "polaris.ocean.tests.baroclinic_channel.viz.Viz.run"]], "globalconvergence (class in polaris.ocean.tests.global_convergence)": [[165, "polaris.ocean.tests.global_convergence.GlobalConvergence"]], "__init__() (polaris.ocean.tests.global_convergence.globalconvergence method)": [[165, "polaris.ocean.tests.global_convergence.GlobalConvergence.__init__"]], "cosinebell (class in polaris.ocean.tests.global_convergence.cosine_bell)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[166, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.__init__"]], "configure() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[167, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.configure"]], "validate() (polaris.ocean.tests.global_convergence.cosine_bell.cosinebell method)": [[168, "polaris.ocean.tests.global_convergence.cosine_bell.CosineBell.validate"]], "analysis (class in polaris.ocean.tests.global_convergence.cosine_bell.analysis)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[169, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.__init__"]], "rmse() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[170, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.rmse"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.analysis.analysis method)": [[171, "polaris.ocean.tests.global_convergence.cosine_bell.analysis.Analysis.run"]], "forward (class in polaris.ocean.tests.global_convergence.cosine_bell.forward)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[172, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[173, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.global_convergence.cosine_bell.forward.forward method)": [[174, "polaris.ocean.tests.global_convergence.cosine_bell.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.global_convergence.cosine_bell.init)": [[175, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[175, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.init.init method)": [[176, "polaris.ocean.tests.global_convergence.cosine_bell.init.Init.run"]], "viz (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[177, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[177, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.viz method)": [[178, "polaris.ocean.tests.global_convergence.cosine_bell.viz.Viz.run"]], "vizmap (class in polaris.ocean.tests.global_convergence.cosine_bell.viz)": [[179, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap"]], "__init__() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[179, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.__init__"]], "run() (polaris.ocean.tests.global_convergence.cosine_bell.viz.vizmap method)": [[180, "polaris.ocean.tests.global_convergence.cosine_bell.viz.VizMap.run"]], "inertialgravitywave (class in polaris.ocean.tests.inertial_gravity_wave)": [[181, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.inertialgravitywave method)": [[181, "polaris.ocean.tests.inertial_gravity_wave.InertialGravityWave.__init__"]], "analysis (class in polaris.ocean.tests.inertial_gravity_wave.analysis)": [[182, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[182, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.analysis.analysis method)": [[183, "polaris.ocean.tests.inertial_gravity_wave.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tests.inertial_gravity_wave.convergence)": [[184, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[184, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tests.inertial_gravity_wave.convergence.convergence method)": [[185, "polaris.ocean.tests.inertial_gravity_wave.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tests.inertial_gravity_wave.exact_solution)": [[186, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[186, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[187, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tests.inertial_gravity_wave.exact_solution.exactsolution method)": [[188, "polaris.ocean.tests.inertial_gravity_wave.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tests.inertial_gravity_wave.forward)": [[189, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[189, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[190, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.inertial_gravity_wave.forward.forward method)": [[191, "polaris.ocean.tests.inertial_gravity_wave.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.inertial_gravity_wave.init)": [[192, "polaris.ocean.tests.inertial_gravity_wave.init.Init"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.init.init method)": [[192, "polaris.ocean.tests.inertial_gravity_wave.init.Init.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.init.init method)": [[193, "polaris.ocean.tests.inertial_gravity_wave.init.Init.run"]], "viz (class in polaris.ocean.tests.inertial_gravity_wave.viz)": [[194, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz"]], "__init__() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[194, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.__init__"]], "run() (polaris.ocean.tests.inertial_gravity_wave.viz.viz method)": [[195, "polaris.ocean.tests.inertial_gravity_wave.viz.Viz.run"]], "manufacturedsolution (class in polaris.ocean.tests.manufactured_solution)": [[196, "polaris.ocean.tests.manufactured_solution.ManufacturedSolution"]], "__init__() (polaris.ocean.tests.manufactured_solution.manufacturedsolution method)": [[196, "polaris.ocean.tests.manufactured_solution.ManufacturedSolution.__init__"]], "analysis (class in polaris.ocean.tests.manufactured_solution.analysis)": [[197, "polaris.ocean.tests.manufactured_solution.analysis.Analysis"]], "__init__() (polaris.ocean.tests.manufactured_solution.analysis.analysis method)": [[197, "polaris.ocean.tests.manufactured_solution.analysis.Analysis.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.analysis.analysis method)": [[198, "polaris.ocean.tests.manufactured_solution.analysis.Analysis.run"]], "convergence (class in polaris.ocean.tests.manufactured_solution.convergence)": [[199, "polaris.ocean.tests.manufactured_solution.convergence.Convergence"]], "__init__() (polaris.ocean.tests.manufactured_solution.convergence.convergence method)": [[199, "polaris.ocean.tests.manufactured_solution.convergence.Convergence.__init__"]], "validate() (polaris.ocean.tests.manufactured_solution.convergence.convergence method)": [[200, "polaris.ocean.tests.manufactured_solution.convergence.Convergence.validate"]], "exactsolution (class in polaris.ocean.tests.manufactured_solution.exact_solution)": [[201, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution"]], "__init__() (polaris.ocean.tests.manufactured_solution.exact_solution.exactsolution method)": [[201, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.__init__"]], "normal_velocity() (polaris.ocean.tests.manufactured_solution.exact_solution.exactsolution method)": [[202, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.normal_velocity"]], "ssh() (polaris.ocean.tests.manufactured_solution.exact_solution.exactsolution method)": [[203, "polaris.ocean.tests.manufactured_solution.exact_solution.ExactSolution.ssh"]], "forward (class in polaris.ocean.tests.manufactured_solution.forward)": [[204, "polaris.ocean.tests.manufactured_solution.forward.Forward"]], "__init__() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[204, "polaris.ocean.tests.manufactured_solution.forward.Forward.__init__"]], "compute_cell_count() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[205, "polaris.ocean.tests.manufactured_solution.forward.Forward.compute_cell_count"]], "dynamic_model_config() (polaris.ocean.tests.manufactured_solution.forward.forward method)": [[206, "polaris.ocean.tests.manufactured_solution.forward.Forward.dynamic_model_config"]], "init (class in polaris.ocean.tests.manufactured_solution.init)": [[207, "polaris.ocean.tests.manufactured_solution.init.Init"]], "__init__() (polaris.ocean.tests.manufactured_solution.init.init method)": [[207, "polaris.ocean.tests.manufactured_solution.init.Init.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.init.init method)": [[208, "polaris.ocean.tests.manufactured_solution.init.Init.run"]], "viz (class in polaris.ocean.tests.manufactured_solution.viz)": [[209, "polaris.ocean.tests.manufactured_solution.viz.Viz"]], "__init__() (polaris.ocean.tests.manufactured_solution.viz.viz method)": [[209, "polaris.ocean.tests.manufactured_solution.viz.Viz.__init__"]], "run() (polaris.ocean.tests.manufactured_solution.viz.viz method)": [[210, "polaris.ocean.tests.manufactured_solution.viz.Viz.run"]], "singlecolumn (class in polaris.ocean.tests.single_column)": [[211, "polaris.ocean.tests.single_column.SingleColumn"]], "__init__() (polaris.ocean.tests.single_column.singlecolumn method)": [[211, "polaris.ocean.tests.single_column.SingleColumn.__init__"]], "cvmix (class in polaris.ocean.tests.single_column.cvmix)": [[212, "polaris.ocean.tests.single_column.cvmix.CVMix"]], "__init__() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[212, "polaris.ocean.tests.single_column.cvmix.CVMix.__init__"]], "validate() (polaris.ocean.tests.single_column.cvmix.cvmix method)": [[213, "polaris.ocean.tests.single_column.cvmix.CVMix.validate"]], "forward (class in polaris.ocean.tests.single_column.forward)": [[214, "polaris.ocean.tests.single_column.forward.Forward"]], "__init__() (polaris.ocean.tests.single_column.forward.forward method)": [[214, "polaris.ocean.tests.single_column.forward.Forward.__init__"]], "idealage (class in polaris.ocean.tests.single_column.ideal_age)": [[215, "polaris.ocean.tests.single_column.ideal_age.IdealAge"]], "__init__() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[215, "polaris.ocean.tests.single_column.ideal_age.IdealAge.__init__"]], "validate() (polaris.ocean.tests.single_column.ideal_age.idealage method)": [[216, "polaris.ocean.tests.single_column.ideal_age.IdealAge.validate"]], "init (class in polaris.ocean.tests.single_column.init)": [[217, "polaris.ocean.tests.single_column.init.Init"]], "__init__() (polaris.ocean.tests.single_column.init.init method)": [[217, "polaris.ocean.tests.single_column.init.Init.__init__"]], "run() (polaris.ocean.tests.single_column.init.init method)": [[218, "polaris.ocean.tests.single_column.init.Init.run"]], "viz (class in polaris.ocean.tests.single_column.viz)": [[219, "polaris.ocean.tests.single_column.viz.Viz"]], "__init__() (polaris.ocean.tests.single_column.viz.viz method)": [[219, "polaris.ocean.tests.single_column.viz.Viz.__init__"]], "run() (polaris.ocean.tests.single_column.viz.viz method)": [[220, "polaris.ocean.tests.single_column.viz.Viz.run"]], "generate_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[221, "polaris.ocean.vertical.grid_1d.generate_1d_grid"]], "write_1d_grid() (in module polaris.ocean.vertical.grid_1d)": [[222, "polaris.ocean.vertical.grid_1d.write_1d_grid"]], "init_vertical_coord() (in module polaris.ocean.vertical)": [[223, "polaris.ocean.vertical.init_vertical_coord"]], "alter_bottom_depth() (in module polaris.ocean.vertical.partial_cells)": [[224, "polaris.ocean.vertical.partial_cells.alter_bottom_depth"]], "alter_ssh() (in module polaris.ocean.vertical.partial_cells)": [[225, "polaris.ocean.vertical.partial_cells.alter_ssh"]], "compute_min_max_level_cell() (in module polaris.ocean.vertical.zlevel)": [[226, "polaris.ocean.vertical.zlevel.compute_min_max_level_cell"]], "compute_z_level_layer_thickness() (in module polaris.ocean.vertical.zlevel)": [[227, "polaris.ocean.vertical.zlevel.compute_z_level_layer_thickness"]], "compute_z_level_resting_thickness() (in module polaris.ocean.vertical.zlevel)": [[228, "polaris.ocean.vertical.zlevel.compute_z_level_resting_thickness"]], "init_z_level_vertical_coord() (in module polaris.ocean.vertical.zlevel)": [[229, "polaris.ocean.vertical.zlevel.init_z_level_vertical_coord"]], "init_z_star_vertical_coord() (in module polaris.ocean.vertical.zstar)": [[230, "polaris.ocean.vertical.zstar.init_z_star_vertical_coord"]], "seaice (class in polaris.seaice)": [[251, "polaris.seaice.SeaIce"]], "__init__() (polaris.seaice.seaice method)": [[251, "polaris.seaice.SeaIce.__init__"]], "singlecolumn (class in polaris.seaice.tests.single_column)": [[252, "polaris.seaice.tests.single_column.SingleColumn"]], "__init__() (polaris.seaice.tests.single_column.singlecolumn method)": [[252, "polaris.seaice.tests.single_column.SingleColumn.__init__"]], "exactrestart (class in polaris.seaice.tests.single_column.exact_restart)": [[253, "polaris.seaice.tests.single_column.exact_restart.ExactRestart"]], "__init__() (polaris.seaice.tests.single_column.exact_restart.exactrestart method)": [[253, "polaris.seaice.tests.single_column.exact_restart.ExactRestart.__init__"]], "validate() (polaris.seaice.tests.single_column.exact_restart.exactrestart method)": [[254, "polaris.seaice.tests.single_column.exact_restart.ExactRestart.validate"]], "forward (class in polaris.seaice.tests.single_column.forward)": [[255, "polaris.seaice.tests.single_column.forward.Forward"]], "__init__() (polaris.seaice.tests.single_column.forward.forward method)": [[255, "polaris.seaice.tests.single_column.forward.Forward.__init__"]], "standardphysics (class in polaris.seaice.tests.single_column.standard_physics)": [[256, "polaris.seaice.tests.single_column.standard_physics.StandardPhysics"]], "__init__() (polaris.seaice.tests.single_column.standard_physics.standardphysics method)": [[256, "polaris.seaice.tests.single_column.standard_physics.StandardPhysics.__init__"]], "validate() (polaris.seaice.tests.single_column.standard_physics.standardphysics method)": [[257, "polaris.seaice.tests.single_column.standard_physics.StandardPhysics.validate"]], "viz (class in polaris.seaice.tests.single_column.standard_physics.viz)": [[258, "polaris.seaice.tests.single_column.standard_physics.viz.Viz"]], "__init__() (polaris.seaice.tests.single_column.standard_physics.viz.viz method)": [[258, "polaris.seaice.tests.single_column.standard_physics.viz.Viz.__init__"]], "run() (polaris.seaice.tests.single_column.standard_physics.viz.viz method)": [[259, "polaris.seaice.tests.single_column.standard_physics.viz.Viz.run"]]}})